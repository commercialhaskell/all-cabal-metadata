homepage: https://github.com/erikd/wide-word
changelog-type: markdown
hash: 823e8192d6e357c0153ef59c186ef566d8a10a7d3e601a0601b4f22151431cbf
test-bench-deps:
  bytestring: '>=0.10'
  base: -any
  hedgehog: ==1.0.*
  quickcheck-classes: '>=0.6.3 && <0.7.0'
  wide-word: -any
  ghc-prim: -any
  semirings: '>=0.2 && <0.6'
  QuickCheck: '>=2.9.2 && <2.14'
  primitive: -any
maintainer: erikd@mega-nerd.com
synopsis: Data types for large but fixed width signed and unsigned integers
changelog: |
  # Revision history for wide-word

  ## 0.1.1.2 -- 2020-12-26

  * Derive Generic for Int128, Word128 and Word256.
  * Fix Bits.isSigned instance for Int128.

  ## 0.1.1.1 -- 2020-03-22

  * Make `sizeOf` and `alignment` methods of `Word256` `Prim` and `Storable`
    instances agree.

  ## 0.1.1.0 -- 2019-11-22

  * Add `Word256`.

  ## 0.1.0.9 -- 2019-02-06

  * Fix `Prim` instance for `Int128`

  ## 0.1.0.8  -- 2019-01-31

  * Improve implementation of succ/pred.
  * Add tests for typeclass laws.
  * Add Prim instances for Int128 and Word128.
  * Fix/re-instate rewite rules.

  ## 0.1.0.7  -- 2018-11-16

  * Switch to Hedgehog for testing.

  ## 0.1.0.3  -- 2017-04-05

  * Make it build with ghc 8.2.

  ## 0.1.0.2  -- 2017-02-08

  * Add NFData instances for Word128 and Int128.

  ## 0.1.0.1  -- 2017-01-29

  * Int128: Fix flakey rewrite rules.

  ## 0.1.0.0  -- 2017-01-06

  * First version. Released on an unsuspecting world.
basic-deps:
  base: '>=4.9 && <4.16'
  deepseq: '>=1.3 && <1.5'
  primitive: '>=0.6.4.0 && <0.8'
all-versions:
- 0.1.0.0
- 0.1.0.1
- 0.1.0.2
- 0.1.0.3
- 0.1.0.4
- 0.1.0.5
- 0.1.0.6
- 0.1.0.7
- 0.1.0.8
- 0.1.0.9
- 0.1.1.0
- 0.1.1.1
- 0.1.1.2
author: Erik de Castro Lopo
latest: 0.1.1.2
description-type: haddock
description: |-
  A library to provide data types for large (ie > 64 bits) but fixed width signed
  and unsigned integers with the usual typeclass instances to allow them to be used
  interchangeably with `Word64`.

  The types and operations are coded to be as fast as possible using strictness
  annotations, `INLINEABLE` pragmas and unboxed values and operations where
  appropriate.
license-name: BSD-2-Clause
