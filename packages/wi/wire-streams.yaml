all-versions:
- 0.0.2.0
- 0.1.0.0
- 0.1.1.0
author: Winterland
basic-deps:
  base: '>=4.7 && <5.0'
  binary: '>=0.7.5'
  binary-parsers: '>=0.2.1'
  bytestring: '>=0.10 && <0.11'
  io-streams: '>=1.2'
changelog: |
  # v0.1.1.0

  Move tests to tasty.

  # v0.1.0.0

  + Using binary-parsers package which speeds up binary code, remove cereal support since binary is much faster now.
  + DecodeException now contain unconsumed buffer.

  # v0.0.2.0

  Add binary support, unify API, optimize cereal's putToStream/putOutputStream, add benchmark.

  # v0.0.1.0

  Clean up code, rewrite main parsing function, fix broken benchmark, and add more functions.
changelog-type: text
description: "wire-streams \n==============\n\n[![Hackage](https://img.shields.io/hackage/v/wire-streams.svg?style=flat)](http://hackage.haskell.org/package/wire-streams)\n[![Build
  Status](https://travis-ci.org/winterland1989/wire-streams.svg)](https://travis-ci.org/winterland1989/wire-streams)\n\nSerialize/deserialize
  `ByteString` streams from [io-streams](http://hackage.haskell.org/package/io-streams)
  using [binary](http://hackage.haskell.org/package/binary) package.\n\nFrom v0.1
  cereal is removed because [a binary performance problem](https://github.com/winterland1989/binary-parsers/blob/master/Data/Binary/Parser.hs#L187)
  is taken care of by [binary-parsers](https://github.com/winterland1989/binary-parsers)
  package, now binary is much faster and more featureful.\n\nBenchmark\n---------\n\n```\nbenchmarking
  decode one element wire-streams/cereal/1000 items\ntime                 127.6 ns
  \  (126.4 ns .. 129.2 ns)\n                     0.999 R²   (0.998 R² .. 0.999 R²)\nmean
  \                128.1 ns   (126.6 ns .. 130.1 ns)\nstd dev              6.019 ns
  \  (4.441 ns .. 9.245 ns)\nvariance introduced by outliers: 67% (severely inflated)\n\nbenchmarking
  decode one element wire-streams/binary/1000 items\ntime                 90.49 ns
  \  (89.77 ns .. 91.11 ns)\n                     0.999 R²   (0.999 R² .. 0.999 R²)\nmean
  \                90.42 ns   (89.44 ns .. 91.41 ns)\nstd dev              3.371 ns
  \  (2.711 ns .. 4.433 ns)\nvariance introduced by outliers: 57% (severely inflated)\n\nbenchmarking
  decode one element cereal-conduit/1000 items\ntime                 345.2 ns   (325.0
  ns .. 382.3 ns)\n                     0.953 R²   (0.896 R² .. 0.999 R²)\nmean                 338.6
  ns   (329.5 ns .. 379.4 ns)\nstd dev              52.15 ns   (14.85 ns .. 114.3
  ns)\nvariance introduced by outliers: 95% (severely inflated)\n\nbenchmarking decode
  1000 elements from wire-streams/cereal/1000 items\ntime                 97.24 μs
  \  (95.95 μs .. 98.57 μs)\n                     0.999 R²   (0.998 R² .. 0.999 R²)\nmean
  \                97.75 μs   (96.78 μs .. 98.68 μs)\nstd dev              3.170 μs
  \  (2.640 μs .. 3.906 μs)\nvariance introduced by outliers: 31% (moderately inflated)\n\nbenchmarking
  decode 1000 elements from wire-streams/binary/1000 items\ntime                 65.24
  μs   (64.69 μs .. 65.94 μs)\n                     0.999 R²   (0.998 R² .. 0.999
  R²)\nmean                 66.09 μs   (65.35 μs .. 67.62 μs)\nstd dev              3.601
  μs   (2.014 μs .. 6.391 μs)\nvariance introduced by outliers: 58% (severely inflated)\n\nbenchmarking
  decode 1000 elements cereal-conduit/1000 items\ntime                 198.4 μs   (195.4
  μs .. 201.3 μs)\n                     0.998 R²   (0.997 R² .. 0.999 R²)\nmean                 200.4
  μs   (197.9 μs .. 203.7 μs)\nstd dev              9.718 μs   (7.707 μs .. 12.77
  μs)\nvariance introduced by outliers: 47% (moderately inflated)\n```\n"
description-type: markdown
hash: 08816c7fa53b20f52e5c465252c106d9de8e6d9580ec0b6d9f000a34c7bcefc8
homepage: https://github.com/winterland1989/wire-streams
latest: 0.1.1.0
license-name: BSD-3-Clause
maintainer: winterland1989@gmail.com
synopsis: Fast binary io-streams adapter.
test-bench-deps:
  QuickCheck: '>=2.7'
  base: '>=0'
  binary: '>=0'
  bytestring: '>=0'
  cereal: '>=0'
  cereal-conduit: '>=0'
  conduit: '>=0'
  conduit-extra: '>=0'
  criterion: '>=1.0.2.0'
  io-streams: '>=0'
  tasty: '>=0.11'
  tasty-quickcheck: '>=0.8'
  transformers: '>=0'
  wire-streams: '>=0'
