homepage: https://gitlab.haskell.org/haskell/ghcup-hs
changelog-type: markdown
hash: f3297ca57a0410496c153c39f4ed652fd92f2a40da021a17c22b4a423c0dc7ef
test-bench-deps:
  bytestring: ^>=0.10
  base: '>=4.13 && <5'
  hspec: ^>=2.7.4
  text: ^>=1.2.4.0
  generic-arbitrary: ^>=0.1.0
  hspec-golden-aeson: '>=0.7 && <0.10'
  quickcheck-arbitrary-adt: ^>=0.3.1.0
  versions: '>=4.0.1 && <5.1'
  ghcup: -any
  containers: ^>=0.6
  uri-bytestring: ^>=0.3.2.2
  hpath: '>=0.11 && <0.13'
  QuickCheck: ^>=2.14.1
maintainer: hasufell@posteo.de
synopsis: ghc toolchain installer
changelog: |
  # Revision history for ghcup

  ## 0.1.14.2 -- 2021-05-12

  * Remove dead dependency on ascii-string

  ## 0.1.14.1 -- 2021-04-11

  * Make internal symlink target parser more lax, fixes [#119](https://gitlab.haskell.org/haskell/ghcup-hs/-/issues/119)
  * Prepare for hackage release

  ## 0.1.14 -- 2021-03-07

  * Major bugfix: fix handling of stray versions wrt [#116](https://gitlab.haskell.org/haskell/ghcup-hs/-/issues/116)
  * Fix error messages and overhaul pretty printing wrt [#115](https://gitlab.haskell.org/haskell/ghcup-hs/-/issues/115)

  ## 0.1.13 -- 2021-02-26

  * Support ARMv7/AARCH64
  * Add command line completions for installed and available versions wrt [MR #70](https://gitlab.haskell.org/haskell/ghcup-hs/-/merge_requests/70)
  * Allow to cycle through set tools wrt [#114](https://gitlab.haskell.org/haskell/ghcup-hs/-/issues/114)
  * Fix item selection with unavailable versions wrt [#107](https://gitlab.haskell.org/haskell/ghcup-hs/-/issues/107)
  * Allow for dynamic post-install, post-remove and pre-compile msgs wrt [MR #68](https://gitlab.haskell.org/haskell/ghcup-hs/-/merge_requests/68)
  * Alert user if upgraded ghcup is shadowed by old ghcup wrt [#111](https://gitlab.haskell.org/haskell/ghcup-hs/-/issues/111)
  * Fix to `ghcup` directory creation and placement for the XDG install mode ([MR #49](https://gitlab.haskell.org/haskell/ghcup-hs/-/merge_requests/49))
  * Do 755 permissions on executables, wrt #97
  * Add [NO_COLOR](https://no-color.org/) support wrt [MR #47](https://gitlab.haskell.org/haskell/ghcup-hs/-/merge_requests/47)

  ## 0.1.12 -- 2020-11-21

  * Fix disappearing HLS symlinks wrt #91
  * improve TUI:
    - separators between tools sections
    - reverse list order so latest is on top
    - expand the blues selected bar
    - show new latest versions in bright white
  * allow configuration file and setting TUI hotkeys wrt #41
    - see https://gitlab.haskell.org/haskell/ghcup-hs#configuration for a more in-depth explanation
  * add a `--set` switch to `ghcup install ghc` to automatically set as default after install
  * emit warnings when CC/LD is set wrt #82
  * add support for version ranges in distro specifiers wrt #84
    - e.g. `"(>= 19 && <= 20) || ==0.2.2"` is a valid version key for distro

  ## 0.1.11 -- 2020-09-23

  * Add support for installing haskell-language-server, wrt #65
  * When compiling GHC from source create a bindist first, store that bindist in `~/.ghcup/cache` and install it, wrt #51
  * Allow to compile over existing version (`ghcup compile ghc -v 8.6.5 -b 8.6.5`) and replace it wrt #59
  * simplify installing from custom bindist wrt #60
    - `ghcup install ghc -u <url> <version>`
  * fix bug when cabal isn't marked executable in bindist
  * fix bug when `~/.ghcup` is a valid symlink wrt #49
  * Drop support for compiling cabal from source (the old bootstrap script is discontinued)

  ## 0.1.10 -- 2020-08-14

  * Show stray Cabals (useful for pre-releases or compiled ones)

  ## 0.1.9 -- 2020-08-14

  * Fix bug when uninstalling all cabal versions
  * Fix bug when setting a non-installed ghc version as current default
  * Use yaml instead of generated json for download info for ease of adding new GHC versions #44
  * Allow pre-release versions of GHC/cabal
  * Add XDG dirs support (set `GHCUP_USE_XDG_DIRS`) wrt #39
  * Allow to specify regex for tarball subdir (e.g. `ghc-.*`)
  * Allow installing arbitrary bindists more seamlessly:
    - e.g. installing GHC HEAD: `ghcup -n install ghc -u '{"dlHash": "", "dlSubdir": { "RegexDir": "ghc-.*"}, "dlUri": "https://gitlab.haskell.org/api/v4/projects/1/jobs/artifacts/master/raw/ghc-x86_64-fedora27-linux.tar.xz?job=validate-x86_64-linux-fedora27" }' head`
  * Avoid duplicate edits to .bashrc/.zshrc wrt #43

  ## 0.1.8 -- 2020-07-21

  * Fix bug in logging thread dying on newlines
  * Allow to install from arbitrary bindists: `ghcup -n install ghc -u '{"dlHash": "", "dlSubdir": "ghc-8.10.1", "dlUri": "https://github.com/commercialhaskell/ghc/releases/download/ghc-8.10.1-release/ghc-8.10.1-x86_64-deb9-linux.tar.xz"}' 8.10.1`

  ## 0.1.7 -- 2020-07-20

  * Fix a bug in libarchive not unpacking some uncleanly packed bindists
  * Improved fish support in bootstrap-haskell
  * Only check for upgrades when not upgrading
  * Fix platform detection for i386 docker images
  * Improve alpine support
    - more/proper bindists
    - don't fall back to glibc based bindists
    - install bindists with `--disable-ld-override` to avoid ld.gold bugs

  ## 0.1.6 -- 2020-07-13

  * Create a new curses (brick) based TUI, accessible via `ghcup tui` #24
  * Support multiple installed versions of cabal #23
  * Improvements to `ghcup list` (show unavailable bindists for platform)
  * Fix redhat downloads #29
  * Support for hadrian bindists (fixes alpine-8.10.1) #31
  * Add FreeBSD bindists 8.6.5 and 8.8.3
  * Fix memory leak during unpack

  ## 0.1.5 -- 2020-04-30

  * Fix errors when PATH variable contains path components that are actually files
  * Add `--version` and `--numeric-version` options
  * Add `changelog` command
  * Also check for available GHC and Cabal updates on start
  * Add base versions as tags for every GHC version (these are "installable" tags and the latest GHC version matching the tag will be picked)
  * Added `--format-raw` to list subcommand
  * Allow to install X.Y versions (e.g.: ghcup install 8.8)
  * Implement `--keep=<always|errors|never>` to control temporary build directories cleanup
  * Add proper shell completions to the repo
  * Fix building of documentation
  * Allow to work in offline mode and use cached files if possible
  * Allow to set the downloader via `--downloader=<curl|wget>`
  * Support for compiling and installing a cross GHC (see README). This is experimental.

  ## 0.1.4 -- 2020-04-16

  * build on all platforms with curl (as a binary), wrt https://gitlab.haskell.org/haskell/ghcup-hs/issues/6
  * Fix unlinking of ghc symlinks after new installation, wrt https://gitlab.haskell.org/haskell/ghcup-hs/issues/7

  ## 0.1.3 -- 2020-04-15

  * Fix lesser bug when skipping ghcup update

  ## 0.1.2 -- 2020-04-15

  * Fix bug when removing the set GHC version
  * Fix use of undocumented `GHCUP_INSTALL_BASE_PREFIX` variable
  * skip upgrade if ghcup is already latest version

  ## 0.1.1 -- 2020-04-15

  * fix awful fdopendir bug on mac bug by updating hpath-posix

  ## 0.1.0

  * First version. Released on an unsuspecting world.
basic-deps:
  haskus-utils-variant: '>=3.0 && <3.2'
  bytestring: ==0.10.*
  string-interpolate: '>=0.2.0.0 && <0.4'
  case-insensitive: ^>=1.2.1.0
  unix: ^>=2.7
  bz2: '>=0.5.0.5 && <1.1'
  split: ^>=0.2.3.4
  base: '>=4.13 && <5'
  time: ^>=1.9.3
  hpath-posix: ^>=0.13.2
  aeson-pretty: ^>=0.8.8
  unordered-containers: ^>=0.2.10.0
  text: '>=1.2.4.0 && <1.3'
  os-release: ^>=1.0.0
  unix-bytestring: ^>=0.3
  safe-exceptions: ==0.1.*
  megaparsec: '>=8.0.0 && <9.1'
  vty: '>=5.28.2 && <5.34'
  haskus-utils-types: ^>=1.5
  hpath-filepath: '>=0.10.3 && <0.11'
  streamly-bytestring: ^>=0.1.2
  hpath-io: '>=0.14.1 && <0.15'
  async: '>=0.8 && <2.3'
  word8: ^>=0.1.3
  parsec: ^>=3.1
  casing: ^>=0.1.4.1
  versions: '>=4.0.1 && <5.1'
  ghcup: -any
  streamly-posix: ^>=0.1.0.0
  concurrent-output: ^>=1.10.11
  containers: ==0.6.*
  uri-bytestring: '>=0.3.2.2 && <0.4'
  lzma-static: ^>=5.2.5.2
  binary: ^>=0.8.6.0
  pretty-terminal: '>=0.1.0.0 && <0.2'
  utf8-string: ==1.0.*
  cryptohash-sha256: ^>=0.11.101.0
  optics: '>=0.2 && <0.5'
  hpath: '>=0.11 && <0.13'
  regex-posix: ==0.96.*
  optics-vl: ^>=0.2
  zlib: ^>=0.6.2.2
  mtl: ==2.2.*
  libarchive: '>=3.0.0.0 && <3.1'
  monad-logger: '>=0.3.31 && <0.4'
  base16-bytestring: '>=0.1.1.6 && <1.1'
  transformers: ==0.5.*
  optparse-applicative: '>=0.15.1.0 && <0.17'
  generics-sop: ^>=0.5
  strict-base: ^>=0.4
  resourcet: '>=1.2.2 && <1.3'
  pretty: '>=1.1.3.1 && <1.2'
  aeson: '>=1.4 && <1.6'
  template-haskell: '>=2.7 && <2.17'
  streamly: ^>=0.7.3
  safe: '>=0.3.18 && <0.4'
  yaml: '>=0.11.4.0 && <0.12'
  hpath-directory: ^>=0.14.1
  vector: ^>=0.12
all-versions:
- 0.1.14.1
- 0.1.14.2
author: Julian Ospald
latest: 0.1.14.2
description-type: markdown
description: |
  `ghcup` makes it easy to install specific versions of `ghc` on GNU/Linux,
  macOS (aka Darwin) and FreeBSD and can also bootstrap a fresh Haskell developer environment from scratch.
  It follows the unix UNIX philosophy of [do one thing and do it well](https://en.wikipedia.org/wiki/Unix_philosophy#Do_One_Thing_and_Do_It_Well).

  Similar in scope to [rustup](https://github.com/rust-lang-nursery/rustup.rs), [pyenv](https://github.com/pyenv/pyenv) and [jenv](http://www.jenv.be).

  *Ubuntu users may prefer [hvr's ppa](https://launchpad.net/~hvr/+archive/ubuntu/ghc).*

  ## Table of Contents

     * [Installation](#installation)
       * [Simple bootstrap](#simple-bootstrap)
       * [Manual install](#manual-install)
       * [Vim integration](#vim-integration)
     * [Usage](#usage)
       * [Configuration](#configuration)
       * [Manpages](#manpages)
       * [Shell-completion](#shell-completion)
       * [Cross support](#cross-support)
       * [XDG support](#xdg-support)
       * [Env variables](#env-variables)
       * [Installing custom bindists](#installing-custom-bindists)
     * [Design goals](#design-goals)
     * [How](#how)
     * [Known users](#known-users)
     * [Known problems](#known-problems)
     * [FAQ](#faq)

  ## Installation

  ### Simple bootstrap

  Follow the instructions at [https://www.haskell.org/ghcup/](https://www.haskell.org/ghcup/)

  ### Manual install

  Download the binary for your platform at [https://downloads.haskell.org/~ghcup/](https://downloads.haskell.org/~ghcup/)
  and place it into your `PATH` anywhere.

  Then adjust your `PATH` in `~/.bashrc` (or similar, depending on your shell) like so:

  ```sh
  export PATH="$HOME/.cabal/bin:$HOME/.ghcup/bin:$PATH"
  ```

  ### Vim integration

  See [ghcup.vim](https://github.com/hasufell/ghcup.vim).

  ## Usage

  See `ghcup --help`.

  For the simple interactive TUI, run:

  ```sh
  ghcup tui
  ```

  For the full functionality via cli:

  ```sh
  # list available ghc/cabal versions
  ghcup list

  # install the recommended GHC version
  ghcup install ghc

  # install a specific GHC version
  ghcup install ghc 8.2.2

  # set the currently "active" GHC version
  ghcup set ghc 8.4.4

  # install cabal-install
  ghcup install cabal

  # update ghcup itself
  ghcup upgrade
  ```

  Generally this is meant to be used with [`cabal-install`](https://hackage.haskell.org/package/cabal-install), which
  handles your haskell packages and can demand that [a specific version](https://cabal.readthedocs.io/en/latest/nix-local-build.html#cfg-flag---with-compiler)  of `ghc` is available, which `ghcup` can do.

  ### Configuration

  A configuration file can be put in `~/.ghcup/config.yaml`. The default config file
  explaining all possible configurations can be found in this repo: [config.yaml](./config.yaml).

  Partial configuration is fine. Command line options always overwrite the config file settings.

  ### Manpages

  For man pages to work you need [man-db](http://man-db.nongnu.org/) as your `man` provider, then issue `man ghc`. Manpages only work for the currently set ghc.
  `MANPATH` may be required to be unset.

  ### Shell-completion

  Shell completions are in `shell-completions`.

  For bash: install `shell-completions/bash`
  as e.g. `/etc/bash_completion.d/ghcup` (depending on distro)
  and make sure your bashrc sources the startup script
  (`/usr/share/bash-completion/bash_completion` on some distros).

  ### Cross support

  ghcup can compile and install a cross GHC for any target. However, this
  requires that the build host has a complete cross toolchain and various
  libraries installed for the target platform.

  Consult the GHC documentation on the [prerequisites](https://gitlab.haskell.org/ghc/ghc/-/wikis/building/cross-compiling#tools-to-install).
  For distributions with non-standard locations of cross toolchain and
  libraries, this may need some tweaking of `build.mk` or configure args.
  See `ghcup compile ghc --help` for further information.

  ### XDG support

  To enable XDG style directories, set the environment variable `GHCUP_USE_XDG_DIRS` to anything.

  Then you can control the locations via XDG environment variables as such:

  * `XDG_DATA_HOME`: GHCs will be unpacked in `ghcup/ghc` subdir (default: `~/.local/share`)
  * `XDG_CACHE_HOME`: logs and download files will be stored in `ghcup` subdir (default: `~/.cache`)
  * `XDG_BIN_HOME`: binaries end up here (default: `~/.local/bin`)
  * `XDG_CONFIG_HOME`: the config file is stored in `ghcup` subdir as `config.yaml` (default: `~/.config`)

  ### Env variables

  This is the complete list of env variables that change GHCup behavior:

  * `GHCUP_USE_XDG_DIRS`: see [XDG support](#xdg-support) above
  * `TMPDIR`: where ghcup does the work (unpacking, building, ...)
  * `GHCUP_INSTALL_BASE_PREFIX`: the base of ghcup (default: `$HOME`)
  * `GHCUP_CURL_OPTS`: additional options that can be passed to curl
  * `GHCUP_WGET_OPTS`: additional options that can be passed to wget
  * `CC`/`LD` etc.: full environment is passed to the build system when compiling GHC via GHCup

  ### Installing custom bindists

  There are a couple of good use cases to install custom bindists:

  1. manually built bindists (e.g. with patches)
    - example: `ghcup install ghc -u 'file:///home/mearwald/tmp/ghc-eff-patches/ghc-8.10.2-x86_64-deb10-linux.tar.xz' 8.10.2-eff`
  2. GHC head CI bindists
    - example: `ghcup install ghc -u 'https://gitlab.haskell.org/api/v4/projects/1/jobs/artifacts/master/raw/ghc-x86_64-fedora27-linux.tar.xz?job=validate-x86_64-linux-fedora27' head`
  3. DWARF bindists
    - example: `ghcup install ghc -u 'https://downloads.haskell.org/~ghc/8.10.2/ghc-8.10.2-x86_64-deb10-linux-dwarf.tar.xz' 8.10.2-dwarf`

  Since the version parser is pretty lax, `8.10.2-eff` and `head` are both valid versions
  and produce the binaries `ghc-8.10.2-eff` and `ghc-head` respectively.
  GHCup always needs to know which version the bindist corresponds to (this is not automatically
  detected).

  ## Design goals

  1. simplicity
  2. non-interactive
  3. portable (eh)
  4. do one thing and do it well (UNIX philosophy)

  ### Non-goals

  1. invoking `sudo`, `apt-get` or *any* package manager
  2. handling system packages
  3. handling cabal projects
  4. being a stack alternative

  ## How

  Installs a specified GHC version into `~/.ghcup/ghc/<ver>`, and places `ghc-<ver>` symlinks in `~/.ghcup/bin/`.

  Optionally, an unversioned `ghc` link can point to a default version of your choice.

  This uses precompiled GHC binaries that have been compiled on fedora/debian by [upstream GHC](https://www.haskell.org/ghc/download_ghc_8_6_1.html#binaries).

  Alternatively, you can also tell it to compile from source (note that this might fail due to missing requirements).

  In addition this script can also install `cabal-install`.

  ## Known users

  * Github action [haskell/actions/setup](https://github.com/haskell/actions/tree/main/setup)
  * [vabal](https://github.com/Franciman/vabal)

  ## Known problems

  ### Custom ghc version names

  When installing ghc bindists with custom version names as outlined in
  [installing custom bindists](#installing-custom-bindists), then cabal might
  be unable to find the correct `ghc-pkg` (also see [#73](https://gitlab.haskell.org/haskell/ghcup-hs/-/issues/73))
  if you use `cabal build --with-compiler=ghc-foo`. Instead, point it to the full path, such as:
  `cabal build --with-compiler=$HOME/.ghcup/ghc/<version-name>/bin/ghc` or set that GHC version
  as the current one via: `ghcup set ghc <version-name>`.

  This problem doesn't exist for regularly installed GHC versions.

  ### Limited distributions supported

  Currently only GNU/Linux distributions compatible with the [upstream GHC](https://www.haskell.org/ghc/download_ghc_8_6_1.html#binaries) binaries are supported.

  ### Precompiled binaries

  Since this uses precompiled binaries you may run into
  several problems.

  #### Missing libtinfo (ncurses)

  You may run into problems with *ncurses* and **missing libtinfo**, in case
  your distribution doesn't use the legacy way of building
  ncurses and has no compatibility symlinks in place.

  Ask your distributor on how to solve this or
  try to compile from source via `ghcup compile <version>`.

  #### Libnuma required

  This was a [bug](https://ghc.haskell.org/trac/ghc/ticket/15688) in the build system of some GHC versions that lead to
  unconditionally enabled libnuma support. To mitigate this you might have to install the libnuma
  package of your distribution. See [here](https://gitlab.haskell.org/haskell/ghcup/issues/58) for a discussion.

  ### Compilation

  Although this script can compile GHC for you, it's just a very thin
  wrapper around the build system. It makes no effort in trying
  to figure out whether you have the correct toolchain and
  the correct dependencies. Refer to [the official docs](https://ghc.haskell.org/trac/ghc/wiki/Building/Preparation/Linux)
  on how to prepare your environment for building GHC.

  ## FAQ

  1. Why reimplement stack?

  ghcup is not a reimplementation of stack. The only common part is automatic installation of GHC, but even that differs in scope and design.

  2. Why not support windows?

  Consider using [Chocolatey](https://chocolatey.org/search?q=ghc) or [ghcups](https://github.com/kakkun61/ghcups).

  3. Why the haskell reimplementation?

  Why not?
license-name: LGPL-3.0-only
