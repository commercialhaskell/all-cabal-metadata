homepage: ''
changelog-type: text
hash: 9ec888e264d71997aa9f5ab684f6dd1acab6bd172b8dfba3f85c3a4c732fe18a
test-bench-deps: {}
maintainer: edsko@well-typed.com
synopsis: Analyze and visualize event logs
changelog: |
  0.2.8

    * Support for ghc-events-0.13
      (2020-04-23 Mitsutoshi Aoe <me@maoe.name>)

  0.2.7

    * Support for GHC 8.8
      (2019-12-10 Simon Jakobi <simon.jakobi@gmail.com>)

  0.2.6

    * Support for GHC 8.6
      (2019-11-01 Simon Jakobi <simon.jakobi@gmail.com>)

  0.2.5

    * Add support for filtering threads by name, and improve
      performance of relabelling.
      (2017-03-11 Pepe Iborra <mnislaih@gmail.com>)

  0.2.4

    * Fix bug in timeline rendering when using --tick-every
      (2016-10-04 Edsko de Vries <edsko@well-typed.com>)
    * Backwards compatibility with older ghc

  0.2.3

    * Add new command line options: `--tick-every`, `--bucket-width`,
      `--bucket-height`, and `--border-width`. This allows to get both the
      behaviour we used in the blogpost and the behaviour that was implemented
      by Andrew Farmer in 0.2.1
      (2016-10-03 Edsko de Vries <edsko@well-typed.com>)
    * Fix issue with thread creation before window start
      (2015-09-29, Will Sewell <will@pusher.com>)
    * Bump optparse-applicative and lens versions
      (2015-01-19, Will Sewell <will@pusher.com>)

  0.2.2

    * Adds support for GHC 7.10
      (2015-09-23, Will Sewell <will@pusher.com>)
      (2015-05-29, GaneshRapolu <grapolu@berkeley.edu>)

  0.2.1

    * Various new features: slice time more finely, add sorting options for timed
      report, more colours, support for ms on the timeline, use alternating
      colours for background, support for windowing.
      (2014-12-06, Andrew Farmer <anfarmer@fb.com>)
    * Make sure _shutdown is always set, so that event logs from programs
      that terminated abnormally can still be visualized
      (2014-03-14, Bas van Dijk <v.dijk.bas@gmail.com>)
    * Relax bounds
      (2014-05-28, Dominic Steinitz <dominic@steinitz.org>)
      (2014-11-05, Alexander Vershilov <alexander.vershilov@gmail.com>)
      (2014-11-07, Andrew Farmer <anfarmer@fb.com>)
    * Move to diagrams 1.2
      (2014-06-25, Carter Tazio Schonwald <carter.schonwald@gmail.com>)
    * Fix space leak in recordShutdown
      (2014-08-15, John Lato <jwlato@tsurucapital.com>)

  0.2.0

    * Initial release
      (2014-02-12, Edsko de Vries <edsko@well-typed.com>)
basic-deps:
  diagrams-lib: '>=1.3 && <1.5'
  blaze-svg: '>=0.3 && <0.4'
  bytestring: '>=0.10 && <0.12'
  SVGFonts: '>=1.7 && <1.8'
  base: '>=4.9 && <4.19'
  unordered-containers: '>=0.2 && <0.3'
  text: <1.3 || >=2 && <2.1
  filepath: '>=1.3 && <1.5'
  parsec: '>=3.1 && <3.2'
  ghc-events: '>=0.13 && <0.20'
  diagrams-svg: '>=1.1 && <1.5'
  th-lift-instances: '>=0.1 && <0.2'
  containers: '>=0.5 && <0.7'
  lens: '>=3.10 && <6.0'
  regex-base: '>=0.93 && <0.95'
  mtl: '>=2.2.1 && <2.4'
  hashable: '>=1.2 && <1.5'
  regex-pcre-builtin: '>=0.94 && <0.96'
  transformers: '>=0.3 && <0.7'
  optparse-applicative: '>=0.11 && <0.18'
  th-lift: '>=0.6 && <0.9'
  template-haskell: -any
all-versions:
- 0.2.0
- 0.2.1
- 0.2.2
- 0.2.4
- 0.2.5
- 0.2.6
- 0.2.7
- 0.2.8
author: Edsko de Vries, Duncan Coutts, Mikolaj Konarski
latest: 0.2.8
description-type: haddock
description: |-
  ghc-events-analyze is a simple Haskell profiling tool that
  uses GHC's eventlog system. It helps with some profiling
  use cases that are not covered by the existing GHC
  profiling modes or tools. It has two major features:

  1. While ThreadScope shows CPU activity across all your
  cores, ghc-events-analyze shows CPU activity across all
  your Haskell threads.

  2. It lets you label periods of time during program
  execution (by instrumenting your code with special trace
  calls) and then lets you visualize those time periods or
  get statistics on them.

  It is very useful for profiling code when ghc's normal
  profiling mode is not available, or when using profiling
  mode would perturb the code too much. It is also useful
  when you want time-profiling information with a breakdown
  over time rather than totals for the whole run.

  The blog post
  <http://www.well-typed.com/blog/2014/02/ghc-events-analyze/ Performance profiling with ghc-events-analyze>
  describes the motivation in more detail.
license-name: BSD-3-Clause
