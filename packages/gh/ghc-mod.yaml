all-versions:
- 5.0.1
- 5.0.1.1
- 5.0.1.2
- 5.1.0.0
- 5.1.0.1
- 5.1.0.2
- 5.1.1.0
- 5.2.0.0
- 5.2.1.0
- 5.2.1.1
- 5.2.1.2
- 5.3.0.0
- 5.4.0.0
- 5.5.0.0
- 5.6.0.0
- 5.7.0.0
- 5.8.0.0
author: |-
  Kazu Yamamoto <kazu@iij.ad.jp>,
  Daniel Gr√∂ber <dxld@darkboxed.org>,
  Alejandro Serrano <trupill@gmail.com>,
  Nikolay Yakimov <root@livid.pp.ru>
basic-deps:
  base: '>=4.6.0.1 && <4.10'
  binary: '>=0'
  bytestring: '>=0'
  cabal-helper: <0.8 && >=0.7.3.0
  containers: '>=0'
  deepseq: '>=0'
  directory: '>=0'
  djinn-ghc: <0.1 && >=0.0.2.2
  extra: <1.6 && >=1.4
  fclabels: '>=2.0 && <2.1'
  filepath: '>=0'
  ghc: '>=7.6 && <8.2'
  ghc-boot: '>=0'
  ghc-mod: '>=0'
  ghc-paths: <0.2 && >=0.1.0.9
  ghc-syb-utils: <0.3 && >=0.2.3
  haskell-src-exts: <1.20 && >=1.18
  hlint: <2.1 && >=2.0.8
  monad-control: '>=1 && <1.1'
  monad-journal: <0.8 && >=0.4
  mtl: '>=0'
  old-time: '>=0'
  optparse-applicative: '>=0.13.0.0 && <0.14'
  pipes: <4.4 && >=4.1
  process: '>=0'
  safe: <0.4 && >=0.3.9
  semigroups: '>=0.10.0 && <0.19'
  split: '>=0.2.2 && <0.3'
  syb: <0.8 && >=0.5.1
  template-haskell: '>=0'
  temporary: <1.3 && >=1.2.0.3
  text: <1.3 && >=1.2.1.3
  time: '>=0'
  transformers: '>=0'
  transformers-base: <0.5 && >=0.4.4
changelog: "2017-05-26 v5.8.0.0\n\t* Fix logic bug in fix for excessive use of `map-file`\n\t*
  Bump HLint to 2.x\n\t* Reorganize Cabal file to make maintanance easier\n\t* Merge
  #872, Do not log warning when Stack project is preferred\n\t* Merge #873, Fix build
  on case-insensitive filesystems\n\t* Fix 'debug' command when ghc(-pkg) not on PATH\n\t*
  Rework README\n\t* Reorganize modules as preparation for splitting off ghc-mod-core\n\t*
  Remove dependency on 'pretty' and use GHC's pretty printer instead\n\t* Merge #854,
  Fix for \"ghc-mod doc\" when usind with stack\n\t* Merge #858, Fix Gap.fromTyThing
  returning GHC internal\n\t  representation instead of the user readable representation
  of\n\t  types\n\t* Fix #774, 'find*File' searching all the way up to /\n\t* Fix
  #778, Check directory permissions before reading in\n\t  findFileInParentsP\n\t*
  Merge #817, fix #779, bad \"ghc-mod check\" performance\n\n2017-01-16 v5.7.0.0\n\t*
  Bump cabal-helper to 0.7.3.0 to support Cabal-1.24.1.0\n\t* Bump haskell-src-exts,
  optparse-applicative, pipes and extra\n\t  to be compatible with stackage.\n\n2016-07-29
  v5.6.0.0\n\t* Bump cabal-helper to 0.7, adds support for Cabal-1.24\n\t* Merge #737,
  `map-file` caching issues\n\t* Merge #767, Add `browse` option to show symbol \"parents\"\n\t*
  Merge #731, Type constraints\n\t* Fix #69 (via #731), Missing type constraints\n\t*
  Fix #438, Case splitting not working\n\t* Fix #790, Don't try to use 'cabal' or
  'stack' when it's not installed\n\t* Add support for GHC 8.0\n\n2016-01-19 v5.5.0.0\n\t*
  Fix #660, cabal-helper errors when no global GHC is installed (Stack)\n\t* Fix #665,
  Reinstate internally managed CWD (no more `ghc-mod root`\n\t  requirement for frontends)\n\t*
  Merge #707, Support for spaces in file names when using\n\t  legacy-interactive\n\t*
  Merge #694, #706, #703, Rewrite command line parser using\n\t  optparse-applicative.
  Thanks @lierdakil!\n\t* Merge #693, Fix slowdown and bugs caused by excessive use
  of\n\t  `map-file`\n\t* Fix #678, \"No instance nor default method for class operation
  put\"\n\t* Fix #683, #684, a variety of caching related issues\n\t* Fix #666, The
  issue of the beast >:3\n\t* Merge #649, elisp: Add ghc-report-errors to inhibit
  *GHC Error*\n\t  logging\n\t* Fix #621, Preserve Cabal flag selection across automatic\n\t
  \ reconfiguration\n\n2015-09-16 v5.4.0.0\n\t* Add support for the Stack build tool\n\t*
  Fix #554, `module not interpreted` errors when using the `type`\n\t  command\n\t*
  Merge #484, support for file redirection\n\t* Add support for file redirection to
  Emacs frontend so\n\t  all commands should work even with unsaved files now!\n\t*
  Support inserting holes in type signatures\n\t* Merge #543, Fix URL anchors being
  dropped in OS X\n\t* Fix GHC session always being dropped in interactive mode (caused\n\t
  \ super slowness)\n\t* Expose all internal modules because API will get a major\n\t
  \ redesign soon anyways\n\t* ghc-mod(i) executable must now be run in project directory
  for\n\t  commands other than `root`\n\t* Add --line-prefix option for multiplexing
  stdout/err onto one stream\n\n2015-08-14 v5.3.0.0\n\t* Re-license majority of code
  under the AGPL-3\n\t* Add support for GHC 7.10 and Cabal 1.22\n\t* Remove `cabalDependPackages',
  `cabalAllTargets'\n\t* Merge #434, Fix finding sandbox config file and directory.\n\t*
  Merge #431, Re-add output line separator global option for expand\n\t  command.\n\t*
  Merge #470, Support for overriding the package-db stack\n\t* Merge #486, Fix ineffective
  cache invalidation for `find`\n\n2014-12-31 v5.2.1.2\n\t* Merge #377, Fix `browse`
  erroneously thinking haskell2010 identifiers\n\t  are operators\n\t* Fix incompatibility
  with monad-control >= 1.0.0\n\t* Fix temporary directories not being removed properly\n\t*
  Merge #405, #408, a race condition in the Emacs frontend\n\t* Merge #403, Support
  unicode quotes in module regexp\n\n2014-11-03 v5.2.1.1\n\t* Fix `findCabalFiles`
  thinking `$HOME/.cabal` is a cabal file.\n\t* Support `where` clauses, `let` bindings
  and `case` expressions\n\t  in case splitting, #400\n\n2014-11-02 v5.2.1.0\n\t*
  Fix `newTempDir` on Windows\n\t* GhcModT's liftIO instance now converts GhcMOdError
  exceptions\n\t  into monadic failures\n\n2014-10-30 v5.2.0.0\n\t* Return type of
  `loadSymbolDb` is now in GhcModT\n\t* Function `dumpSymbol` now takes the path of
  the target directory\n\t* Fix #387, Pattern match failure in GhcPkg\n\t* Fix #386,
  `ghc-mod version` should not check `cabal configure`\n\t* Fix #391, Error on command
  `-g` when used before command despite\n\t  --help output saying this is valid\n\t*
  Fix formatting of `ghc-version` constant in the elisp code.  in\n\t  version 5.1.1.0
  the string was \"v5.1.1.0\" instead of \"5.1.1.0\".\n\n2014-10-04 v5.1.1.0\n\t*
  Handle various consistency related issues: #222, #224, #326, #332\n\t* Add `isOutdated`
  to Language.Haskell.GhcMod\n\n2014-09-17 v5.1.0.2\n\t* Fix building with haskell-src-exts
  < 1.16.0\n\n2014-09-16 v5.1.0.1\n\t* Fix building with haskell-src-exts-1.16.0\n\t*
  Loosen monad-journal dependency\n\n2014-09-12 v5.1.0.0\n\t* GhcModError is now a
  recursive data type (`GMECabalConfigure`'s\n\t  type changed)\n\t* GhcModT's MonadIO
  instance now converts IOError's to failures in\n\t  the ErrorT part of GhcModT on
  `liftIO`.\n\t* Make `loadSymbolDb` polimorphic in the return types's monad.\n\t*
  Add `hoistGhcModT` to Language.Haskell.GhcMod.Internal\n\t* Fix `check` command
  for modules using `-XPatternSynonyms`\n\t* Merge #364, Support cabal configuration
  flags\n\n2014-08-29 v5.0.1.2\n\t* Merge #345, Try fixing duplicate errors\n\t* Merge
  #344, elisp: Use advice to check syntax on save-buffer\n\t* Merge #341, support
  `browse -d` in ghc-modi\n\t* Merge #352, elisp: Fix C-u accidentally getting turned
  into a\n\t  prefix command\n\n2014-08-24 v5.0.1.1\n\t* Fix CaseSplitting faliure
  when using \"fancy types\" (see #336)\n\t* Print error information in \"spec\" test
  suite when using `extract`\n\n2014-08-20 v5.0.1\n\t* Fix missing file in \"Data-Files\"\n\n2014-08-20
  v5.0.0\n\t* ghc-mod consumes much less memory than ghc-mod-4.1.\n\t* @serras brought
  the results of Google Summer code\n\t  including case splitting and better type
  hole\n\t* @DanielG provided the new monad based API\n\n2014-05-16 v4.1.6\n\t* Reverting
  \"Trying to fix rare hang on Nix\".\n\n2014-05-16 v4.1.5\n\t* Fixing the build on
  GHC 7.8.3.\n\n2014-05-16 v4.1.4\n\t* Trying to fix rare hang on Nix.\n\n2014-05-16
  v4.1.3\n\t* Making -g-fxxx work.\n\n2014-05-16 v4.1.2\n\t* Setting Opt_WarnTypedHoles
  correctly.\n\n2014-05-16 v4.1.1\n\t* Making Emacs front-end more stable.\n\n2014-04-30
  v4.1.0\n\t* ghc-modi now provides \"type\", \"info\", and \"boot\".\n\t* ghc-mod
  now provides \"find\".\n\t* Packages, which are specified in a cabal file but not
  installed,\n\t  are filtered out. (@DanielG)\n\t* ghc-mod/ghc-modi treats \"-l\"
  properly.\n\t* ghc-mod obsoletes \"-p\". Use \"ghc-mod browse package:module\".\n\t*
  M-x ghc-debug has been implemented.\n\t* \"type\" and \"info\" can work even if
  files contain type errors.\n\t* \"boot\" as a new API.\n\n2014-04-07 v4.0.2\n\t*
  The ghc-display-error option (@notogawa)\n\t* Fixing a file bug for Windows (@Kiripon)\n\t*
  The -b option for ghc-modi (@yuga)\n\n2014-04-03 v4.0.1\n\t* Displaying a qualified
  name for one if two unqualified names\n\t  are conflict.\n\n2014-04-01 v4.0.0\n\t*
  Implementing interactive \"ghc-modi\" command.\n\t  \"check\", \"find\", and \"lint\"
  are available.\n\t* Introducing a concept of project root directory.\n\t  Thanks
  to this, sandbox without cabal can be used.\n\t  \"ghd-mod debug\" displays the
  project root.\n\t* Syntax error highlighting (C-xC-s) gets much faster\n\t  thanks
  to ghc-modi. \"flymake\" was thrown away and\n\t  syntax error highlighting is implemented
  from a scratch.\n\t* Resolving the \"import hell\". You dont' have to type\n\t  \"import
  Foo\" anymore. Use M-t or C-cC-m.\n\t* Inserting \"module Foo\" (M-t) can insert
  all paths\n\t  relative to the project root.\n\t* M-C-d displays a html document
  even if it is in its sandbox.\n\t* M-s now merges the same module lines in addition
  to sorting.\n\t* A bug fix for hlint support. (@eagletmt)\n\n2014-03-15 v3.1.7\n\t*
  Defining ghc-debug for Elisp debugging.\n\t* Catching up the latest hlint which
  does not provide --quite.\n\n2014-02-07 v3.1.6\n\t* Testing with multi GHC versions.
  (@eagletmt)\n\t* Checking package ID. (@naota)\n\t* Supporting GHC 7.8.1 RC1. (@bartavelle)\n\n2014-01-14
  v3.1.5\n\t* Catching up to GHC 7.7. (@scottgw)\n\t* Testing with multi GHC versions.
  (@eagletmt)\n\t* Workaround for the coming new Haskell Platform.\n\t* Supporting
  flymake of the coming Emacs 24.4.\n\n2013-11-20 v3.1.4\n\t* GHCi loading as fallback
  for browse. (@khorser)\n\t* Supporting GHC 7.7. (@schell)\n\t* Introducing the \"-p\"
  and \"-q\" option for browse. (@mvoidex)\n\n2013-10-07 v3.1.3\n\t* Fixing tests.
  (@eagletmt)\n\n2013-09-21 v3.1.2\n\t* Supporting sandbox for \"list\" and \"browse\".
  (@eagletmt)\n\n2013-09-21 v3.1.1\n\t* Making Cradle strict.\n\n2013-09-21 v3.1.0\n\t*
  API breaks backward compatibility.\n\t* Supporting sandbox sharing.\n\n2013-09-16
  v3.0.2\n\t* Fixing a bug of \"dist/build/autogen/cabal_macros.h\".\n\n2013-09-16
  v3.0.1\n\t* Exporting more low level APIs.\n\t* Adding \"-ibuild/autogen\"\n\t*
  Adding \"-optP\". (Macros from a Cabal file\n\t  and \"dist/build/autogen/cabal_macros.h\")\n\n2013-09-06
  v3.0.0\n\t* Supporting the sandbox of cabal 1.18.\n\t* Obsoleting the support for
  cabal-dev.\n\n2013-09-04 v2.1.2\n\t* Supporting multiple target files. (@nh2)\n\n2013-09-03
  v2.1.1\n\t* A bug fix for library dependency.\n\n2013-09-03 v2.1.0\n\t* Exporting
  Language.Haskell.GhcMod.Internal. (@alanz)\n\t* Supporting GHC 7.7. (@co-dan)\n\n2013-05-30
  v2.0.3\n\t* Using finalizePackageDescription to enable \"if else\" in a cabal\n\tfile.\n\n2013-05-21
  v2.0.2\n\t* Document fixes.\n\n2013-05-21 v2.0.1\n\t* Document fixes.\n\n2013-05-21
  v2.0.0\n\t* ghc-mod also provides a library (Language.Haskell.GhcMod)\n\n2013-05-13
  v1.12.5\n\t* A bug fix for the case where a cabal file is broken.\n\n2013-04-02
  v1.12.4\n\n\t* C-M-d on Emacs now can browse functions and types.\n\t* Checking
  \"QuasiQuotes\" as well as \"TemplateHaskell\". (@eagletmt)\n\t* \"ghc-mod info\"
  can display info of non-exported functions.\n\t  (@mvoidex)\n\n2013-03-16 v1.12.3\n\n\t*
  \"ghc-mod info\" and \"ghc-mod type\" also check Template Haskell.\n\t  (@eagletmt)\n\n2013-03-13
  v1.12.2\n\n\t* New logic to set \"-fno-code\" using \"depanal\"\n\t* Cleaning up
  the code relating to Doc/SDoc\n\n2013-03-07 v1.12.1\n\n\t* Fixing a bug to find
  a sandbox.\n\n2013-03-05 v1.12.0\n\n\t* \"ghc-mod debug\" to see which cabal file
  and sand box are used\n\t* Fast \"ghc-mod check\" if Template Haskell is not used\n\t*
  \"ghc-mod brwose -d\" displays more information (@eagletmt)\n\n2013-03-01 v1.11.5\n\n\t*
  New option \"-d\" for \"ghc-mod browse\" to show symbols with type\n\tinfo (@moidex)\n\n2013-02-15
  v1.11.4\n\n\t* Adding Hspec test suite\n\t* Better way to show Extension (@eagletmt)\n\t*
  Removing the library itself from Cabal dependencies\n\n2012-12-11 v1.11.3\n\n\t*
  Display a filname instead of \"Dummy\" if an error occur\n\n2012-10-30 v1.11.2\n\n\t*
  Extract dependencies from a Cabal file if exists and specify\n\t  them to \"ghc-mod
  check\" (@khibino)\n\n2012-10-19 v1.11.1\n\n\t* Supporting GHC 7.6.x (@cartazio,
  @dysinger, @ihameed)\n"
changelog-type: text
description: "# ghc-mod: Happy Haskell Hacking\n[![build status](https://gitlab.com/dxld/ghc-mod/badges/master/build.svg)](https://gitlab.com/dxld/ghc-mod/commits/master)\n\nghc-mod
  provides editors/IDEs with support for Haskell compiler features, it\nsupports both
  Cabal and Stack based projects and integrations exist for Emacs,\nVim, Atom, IntelliJ
  and VSCode.\n\n- for [all Haskell developers (Using ghc-mod in your development
  environment)](#using-ghc-mod-in-your-development-environment)\n- for [people developing
  Haskell IDEs (Using ghc-mod as an IDE backend program)](#using-ghc-mod-as-an-ide-backend-program)\n-
  for [developing Haskell tooling (Using ghc-mod as a library)](#using-ghc-mod-as-a-library)\n\n##
  Overview\n\n### Using ghc-mod in your Development Environment\n\nTo use `ghc-mod`
  in your development environment of choice you need two things:\n\n  - The `ghc-mod`
  program included in the package of the same name, see [Installing](https://github.com/DanielG/ghc-mod/wiki/Installing)\n
  \ - A ghc-mod frontend to integrate it into your development environment, see [Frontend](https://github.com/DanielG/ghc-mod/wiki/Frontend)\n\n###
  Using ghc-mod as an IDE Backend Program\n\nWe provide two modes of operation for
  frontends: interactive and single shot\nmode. The former is accessed by calling
  `$ ghc-mod legacy-interactive` this will\nsit and wait for you to type a command
  and exit when an empty line is\nentered. Interactive mode is pretty much always
  faster than single shot mode\nsince it gives ghc-mod the ability to cache the compiler
  session between\ncommands on the other hand it needs more memory because it keeps
  these things\ncached. \n\nSingle shot mode is pretty much only there for (backwards)
  compatibility with\nVim since it only recently got the ability to talk to background
  processes\nwithout installing some external plugin. You can use single-shot mode
  by simply\ncalling the sub-comamnds of the `ghc-mod` program. Since re-compiling
  large\nprojects can be really, really slow you really shouldn't use this and use\ninteractive
  mode instead.\n\nAs a rule of thumb all commands available in single shot mode are
  available in\ninteractive mode, a list of the former can be obtained by running
  \n`$ ghc-mod --help`.\n\nIf you're developing a new ghc-mod fronted we'd love to
  hear from you! Please\nopen an issue or e-mail the maintainer. Also we invite you
  to add installation\nand configuration instructions to\n[Frontend](https://github.com/DanielG/ghc-mod/wiki/Frontend).\n\n###
  Using ghc-mod as a Library\n\nInternally ghc-mod uses the Glasgow Haskell Compilers's
  API to implement most of\nit's functionality.\n\nIn order to provide a hassle free
  experience to users ghc-mod tries hard to\nautomatically, and correctly, detect
  and if needed tweak the environment GHC\nneeds. It also handles some of the more
  cumbersome parts of getting a working\ncompiler session up and running.\n\nThis
  functionality can be very useful to all kinds of Haskell development tools\ntherefore
  want to expose all the useful abstractions ghc-mod provides.\n\nRight now the ghc-mod
  API is pretty messy; a result of major internal rewrites\nand reorganization coupled
  with too little time for cleanups over the course of\nalmost 100 releases! We would
  like to make a cut during v6.0 or so and\ncompletely re-do the API but we need more
  input from downstream tool writers to\ndo that properly, see [Library API Redesign](Library-API-Redesign.md).\n\nFor
  example [The Haskell Refactorer (HaRe)](https://github.com/alanz/HaRe) uses\nthe
  build environment abstraction ghc-mod provides so it can concentrate on it's\ncore
  functionality instead of worrying about build environments and compiler\nsession
  setup.\n\nRecently the\n[`haskell-ide-engine`](https://github.com/haskell/haskell-ide-engine)
  project\nhas sprung up and if you're planning to write any kind of tool that needs
  editor\nintegration eventually you should definetly look into that. `haskell-ide-engine`\nuses
  `ghc-mod` at it's core so you'll want to be familliar with it either way.\n\nAPI
  \"documentation\" is here:\n[Hackage docs](https://hackage.haskell.org/package/ghc-mod#modules).\n\n##
  Reporting Bugs\n\nPlease report bugs on the GitHub issue tracker for ghc-mod:\nhttps://github.com/DanielG/ghc-mod/issues\n\nIncluding
  general environment information like the operating system\n(distribution, version)
  you're using and the output of `$ ghc-mod debug` run in\nyour project directory
  is probably a good idea.\n\n## IRC\n\nIf you have any problems, suggestions, comments
  swing by\n[\\#ghc-mod (web client)](https://kiwiirc.com/client/irc.freenode.org/ghc-mod)
  on\nFreenode. If you're reporting a bug please also create an issue\n[here (GitHub
  issue tracker)](https://github.com/DanielG/ghc-mod/issues) so we\nhave a way to
  contact you if you don't have time to stay.\n\nDo hang around for a while if no
  one answers and repeat your question if you\nstill haven't gotten any answer after
  a day or so (the maintainer was probably\nasleep). You're most likely to get an
  answer during the day in GMT+1.\n"
description-type: markdown
hash: aecd663aa6de210dc316b62282a36e2a7a1de51ee8abde583f9decae99662c87
homepage: https://github.com/DanielG/ghc-mod
latest: 5.8.0.0
license-name: AGPL-3.0-only
maintainer: Daniel Gr√∂ber <dxld@darkboxed.org>
synopsis: Happy Haskell Hacking
test-bench-deps:
  base: '>=4.6.0.1 && <4.10'
  cabal-helper: <0.8 && >=0.7.1.0
  containers: '>=0'
  criterion: <1.2 && >=1.1.1.0
  directory: '>=0'
  doctest: <0.12 && >=0.9.3
  fclabels: <2.1 && >=2.0
  filepath: '>=0'
  ghc: <8.2 && >=7.6
  ghc-boot: '>=0'
  ghc-mod: '>=0'
  hspec: <2.4 && >=2.0.0
  monad-journal: <0.8 && >=0.4
  mtl: '>=0'
  process: <1.5
  split: <0.3 && >=0.2.2
  temporary: '>=1.2.0.3 && <1.3'
  transformers: '>=0'
