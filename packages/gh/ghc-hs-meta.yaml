homepage: ''
changelog-type: markdown
hash: 7b7f21d56abb63b8ff88148040b42a1209696979f0c6de9b15c4b40daac924f0
test-bench-deps:
  ghc: -any
  bytestring: -any
  base: -any
  hspec: -any
  ghc-boot: -any
  ghc-hs-meta: -any
  template-haskell: -any
maintainer: zac.wood@hey.com
synopsis: Translate Haskell source to Template Haskell expression
changelog: |-
  # 0.1.0.0

  Initial release.
basic-deps:
  ghc: '>=8.10.7 && <9.5'
  bytestring: '>=0.10 && <0.12'
  base: '>=4.14 && <4.18'
  ghc-boot: '>=8.10.7 && <9.5'
  template-haskell: '>=2.16.0 && <2.20'
all-versions:
- 0.1.0.0
- 0.1.1.0
author: Zachary Wood
latest: 0.1.1.0
description-type: markdown
description: "# ghc-meta\n\nGenerate Template Haskell expressions from Haskell source
  code using the GHC parser.\nThis package runs on GHC versions 8.10.7, 9.0.2, and
  9.2.1.\n\n## Usage\n\nPass a String containing Haskell source code to `parseExp`.\nExample
  from the tests:\n\n```haskell\ncase parseExp \"a @b\" of\n    Right exp -> exp `shouldBe`
  TH.AppTypeE (TH.VarE (TH.mkName \"a\")) (TH.VarT (TH.mkName \"b\"))\n    Left (_,
  _, errMsg) -> error errMsg\n```\n\nSee Hackage documentation for more documentation.\n\n##
  Thank you, PyF\n\nThis code originated from the excellent parser included in the
  [`PyF`](https://github.com/guibou/PyF) package. \nI extracted the relevant code
  and refactored/renamed things to be usable in a more general context.\nWithout PyF,
  this could wouldn't have been possible. Thank you!\n\nThe original license for PyF
  can be found in the `LICENSE-PyF` file included in this repository."
license-name: BSD-3-Clause
