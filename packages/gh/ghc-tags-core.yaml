homepage: https://github.com/coot/ghc-tags-plugin/tree/master/ghc-tags-core
changelog-type: markdown
hash: 2984f3ef322a2665717739830ee686b17024f773e1c7439030e686ba298e8b0f
test-bench-deps:
  bytestring: -any
  base: -any
  pipes-bytestring: -any
  tasty-golden: -any
  text: -any
  filepath: -any
  criterion: -any
  lattices: -any
  quickcheck-instances: -any
  pipes: -any
  pipes-attoparsec: -any
  tasty-quickcheck: -any
  mtl: -any
  attoparsec: -any
  tasty: -any
  deepseq: -any
  QuickCheck: -any
  ghc-tags-core: -any
  filepath-bytestring: -any
  directory: -any
maintainer: coot@coot.me
synopsis: a library to work with tags created from Haskell parsed tree
changelog: "# Revision history for ghc-tags-core\n\n## 0.3.1.1 -- 2022-08-05\n\n*
  Support `GHC-9.4`\n\n## 0.2.4.0 -- 2020-09-08\n\n* Type family and data type family
  kind contains all bound type variables (with\n  their kind if they are given)\n*
  Type family instances: include the resulting type\n* Data type family instances:
  include the resulting kind\n* Data constructor tags cary the contstructor declaration
  \n\n## 0.2.3.0 -- 2020-08-07\n\n* Added `hsDeclsToGhcTags`.\n* Type signatures for
  class method.\n\n## 0.2.0.0 -- 2020-04-12\n\n* Use `Text` to represent file names;
  Parsers are using `ByteString` as input\n  rather than `Text`, which allows to normalise
  `FilePath` when parsing data\n  using `filepath-bytestring` library.\n\n## 0.1.0.0
  -- 2020-03-24\n\n* Normalise 'tagFilePath' for tags which are returned by the parsers.\n*
  Added `GhcTag`, some of the constructor contains type level information which\n
  \ is used to form `CTagFields`.\n* Added ctag [pseudo header](https://docs.ctags.io/en/latest/man/ctags-client-tools.7.html#pseudo-tags)
  parser\n\n## 0.2.4.1 -- 2021-03-15\n\n* Support `GHC-9.0`\n* vim-plugin: better
  parser of ghc-pkg output\n"
basic-deps:
  ghc: '>=8.4 && <10'
  bytestring: '>=0.10'
  base: '>=4.12.0.0 && <4.18'
  pipes-bytestring: ^>=2.1
  text: '>=1.2 && <2.1'
  pipes: ^>=4.3
  pipes-attoparsec: ^>=0.5
  mtl: ^>=2.2
  attoparsec: '>=0.13.0.0'
  transformers: -any
  filepath-bytestring: ^>=1.4
  directory: ^>=1.3
all-versions:
- 0.1.0.0
- 0.2.0.0
- 0.2.2.0
- 0.2.3.0
- 0.2.4.0
- 0.2.4.1
- 0.3.0.0
- 0.3.1.0
- 0.3.1.1
author: Marcin Szamotulski
latest: 0.3.1.1
description-type: markdown
description: |
  Create and work with CTAGS and ETAGS files
  ==========================================
  ![Haskell Programming Language](https://img.shields.io/badge/language-Haskell-8D82AC.svg)
  ![MPL-2.0 License](http://img.shields.io/badge/license-MPL20-brightgreen.svg)

  [![](https://github.com/coot/ghc-tags-plugin/workflows/Linux%20GHC-8.6.5/badge.svg)](https://github.com/coot/ghc-tags-plugin/actions)
  [![](https://github.com/coot/ghc-tags-plugin/workflows/Linux%20GHC-8.8.3/badge.svg)](https://github.com/coot/ghc-tags-plugin/actions)
  [![](https://github.com/coot/ghc-tags-plugin/workflows/Windows%20GHC-8.6.5/badge.svg)](https://github.com/coot/ghc-tags-plugin/actions)
  [![](https://matrix.hackage.haskell.org/api/v2/packages/ghc-tags-core/badge)](https://matrix.hackage.haskell.org/#/package/ghc-tags-core)


  * Create tags from *GHC* parsed representation.
  * Parsing and formatting `CTAGS` and `ETAGS` files (`vim` and `emacs` style
    tags).

  Projects using this library
  ---------------------------

  * [ghc-tags-plugin](https://hackage.haskell.org/package/ghc-tags-plugin)
license-name: MPL-2.0
