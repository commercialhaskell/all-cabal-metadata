all-versions:
- '0.2'
- '0.3'
- 0.3.1
- 0.3.2
- 0.3.4
- 0.3.4.2
- 0.4.1
- 0.4.2
author: Alberto GÃ³mez Corona
basic-deps:
  base: '>4.0 && <6.0'
  bytestring: '>=0'
  containers: '>=0'
  directory: '>=0'
  ghcjs-perch: '>=0.3.3'
  mtl: '>=0'
  transformers: '>=0'
  transient: '>=0.5.1'
  transient-universe: '>=0.4.1'
changelog: ''
changelog-type: ''
description: "[![Hackage](https://img.shields.io/hackage/v/ghcjs-hplay.svg)](http://hackage.haskell.org/package/ghcjs-hplay)\r\n[![Stackage
  LTS](http://stackage.org/package/ghcjs-hplay/badge/lts)](http://stackage.org/lts/package/ghcjs-hplay)\r\n[![Stackage
  Nightly](http://stackage.org/package/ghcjs-hplay/badge/nightly)](http://stackage.org/nightly/package/ghcjs-hplay)\r\n[![Build
  Status](https://travis-ci.org/agocorona/ghcjs-hplay.png?branch=master)](https://travis-ci.org/agocorona/ghcjs-hplay)\r\n\r\nghcjs-hplay\r\n==========\r\n![](http://vignette3.wikia.nocookie.net/pixar/images/6/6d/Wall-E_Axiom_Deck_Analysis_Map.jpg/revision/latest/scale-to-width-down/185?cb=20120718160701)\r\n\r\nFor
  some examples, see the [transient-examples](https://github.com/transient-haskell/transient-examples)
  repository: [distributedApps.hs](https://github.com/transient-haskell/transient-examples/blob/master/distributedApps.hs)
  and      [webapp.hs](https://github.com/transient-haskell/transient-examples/blob/master/webapp.hs)\r\n\r\nThe
  source code can be executed in the commmand line if you have docker installed.\r\n\r\n[![Gitter](https://badges.gitter.im/theam/haskell-do.svg)](https://gitter.im/Transient-Transient-Universe-HPlay/Lobby?utm_source=share-link&utm_medium=link&utm_campaign=share-link)\r\n\r\nghcjs-hplay
  is also the Web user interface of [Transient](https://github.com/agocorona/transient).
  \r\n\r\nUnlike his predecessor, [hplayground](http://github.com/agocorona/hplayground),
  ghcjs-hplay has full integration with Transient and can run widgets that run code
  on the server, the client or both.\r\n\r\nTo see how it integrates with Transient
  and how to create client-server applications, see the web paragraphs of the [transient
  tutorial](https://github.com/agocorona/transient/wiki/Transient-tutorial).\r\n\r\nTo
  see how to create client side applications and widgets (with no server code integration),
  look for  [hplayground](https://github.com/agocorona/hplayground) package. [Tutorial](https://www.airpair.com/haskell-tutorial/intro-to-haskell-web-apps)
  \r\n\r\nPlans:\r\n======\r\n\r\nghchs-hplay is in the process of becoming a Server-side
  as well as Client-side library for creating Web application. The last release support
  page templates for the creation of server-side content.\r\n\r\nIn the future it
  will manage routes in the server side besides client side, and will generate dinamic
  HTML content in the server as well as in the client.\r\n"
description-type: markdown
hash: 29f357050b027442d4dcf56b911b69dcea533e74f2e9e454184fceb2f7654ae2
homepage: https://github.com/transient-haskell/ghcjs-hplay
latest: 0.4.2
license-name: MIT
maintainer: agocorona@gmail.com
synopsis: Client-side web EDSL for transient nodes running in the web browser
test-bench-deps: {}
