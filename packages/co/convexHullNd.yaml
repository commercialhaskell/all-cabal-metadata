homepage: https://github.com/stla/convexHullNd#readme
changelog-type: markdown
hash: d60aa422ad89b6da13602e7a59a72479a875404b3a47ef3e154d08f63c27d1cb
test-bench-deps: {}
maintainer: laurent_step@outlook.fr
synopsis: Convex hull
changelog: "# Changelog for `convexHullNd`\r\n\r\n## 0.1.0.0 - 2023-11-22\r\n\r\nFirst
  release."
basic-deps:
  insert-ordered-containers: '>=0.2.5.3 && <0.3'
  extra: '>=1.7.7 && <1.8'
  base: '>=4.9 && <5'
  Unique: '>=0.4.7.9 && <0.5'
  containers: '>=0.6.4.1 && <0.7'
  regex-compat: '>=0.95 && <0.96'
  hashable: '>=1.3.5.0 && <1.5'
  ilist: '>=0.4.0.1 && <0.5'
all-versions:
- 0.1.0.0
author: StÃ©phane Laurent
latest: 0.1.0.0
description-type: markdown
description: "# convexHullNd\r\n\r\n<!-- badges: start -->\r\n[![Stack-lts](https://github.com/stla/convexHullNd/actions/workflows/Stack-lts.yml/badge.svg)](https://github.com/stla/convexHullNd/actions/workflows/Stack-lts.yml)\r\n[![Stack-lts-Mac](https://github.com/stla/convexHullNd/actions/workflows/Stack-lts-Mac.yml/badge.svg)](https://github.com/stla/convexHullNd/actions/workflows/Stack-lts-Mac.yml)\r\n[![Stack-nightly](https://github.com/stla/convexHullNd/actions/workflows/Stack-nightly.yml/badge.svg)](https://github.com/stla/convexHullNd/actions/workflows/Stack-nightly.yml)\r\n<!--
  badges: end -->\r\n\r\n*Convex hull in arbitrary dimension.*\r\n\r\n___\r\n\r\nThe
  main function of this package is `convexHull`:\r\n\r\n```haskell\r\nconvexHull ::
  [[Double]]     -- ^ vertices\r\n           -> Bool           -- ^ whether to triangulate\r\n
  \          -> Bool           -- ^ whether to print output to stdout\r\n           ->
  Maybe FilePath -- ^ write summary to a file\r\n           -> IO ConvexHull\r\n```\r\n\r\nThe
  first argument is the list of the Cartesian coordinates of the points for \r\nwhich
  the convex hull is wanted. The second argument indicates whether one \r\nwants a
  \"triangulated\" convex hull. In 3D this means all facets of the hull \r\nare triangles.
  In 4D this means they all are tetrahedra. The correct word for \r\nany dimension
  is \"simplex\". \r\n\r\nA `ConvexHull` object has the following fields:\r\n\r\n-
  `_hvertices`: provides the vertices of the convex hull;\r\n\r\n- `_hfacets`: provides
  the facets of the convex hull;\r\n\r\n- `_hridges`: provides the ridges (facets
  of facets) of the convex hull; \r\n\r\n- `_hedges`: provides the edges of the convex
  hull.\r\n\r\n```haskell\r\nConvexHull\r\n  { _hvertices =\r\n      fromList\r\n
  \       [ ( 0\r\n          , Vertex\r\n              { _point = [ 0.0 , 0.0 , 0.0
  ]\r\n              , _neighfacets = fromList [ 0 , 1 , 3 ]\r\n              , _neighvertices
  = fromList [ 2 , 3 , 4 ]\r\n              , _neighridges = fromList [ 1 , 2 , 4
  ]\r\n              }\r\n          )\r\n        , ...\r\n\r\n  , _hfacets =\r\n      fromList\r\n
  \       [ ( 0\r\n          , Facet\r\n              { _fvertices =\r\n                  fromList\r\n
  \                   [ ( 0 , [ 0.0 , 0.0 , 0.0 ] )\r\n                    , ( 1 ,
  [ 0.0 , 1.0 , 1.0 ] )\r\n                    , ( 2 , [ 0.0 , 0.0 , 1.0 ] )\r\n                    ,
  ( 3 , [ 0.0 , 1.0 , 0.0 ] )\r\n                    ]\r\n              , _fridges
  = fromList [ 0 , 1 , 2 , 3 ]\r\n              , _centroid = [ 0.0 , 0.5 , 0.5 ]\r\n
  \             , _normal' = [ -1.0 , 0.0 , -0.0 ]\r\n              , _offset' = -0.0\r\n
  \             , _orientation' = 1\r\n              , _area = 1.0\r\n              ,
  _neighbors = fromList [ 1 , 2 , 3 , 5 ]\r\n              , _family' = None\r\n              ,
  _fedges =\r\n                  fromList\r\n                    [ ( Pair 0 2 , (
  [ 0.0 , 0.0 , 0.0 ] , [ 0.0 , 0.0 , 1.0 ] ) )\r\n                    , ( Pair 0
  3 , ( [ 0.0 , 0.0 , 0.0 ] , [ 0.0 , 1.0 , 0.0 ] ) )\r\n                    , ( Pair
  1 2 , ( [ 0.0 , 1.0 , 1.0 ] , [ 0.0 , 0.0 , 1.0 ] ) )\r\n                    , (
  Pair 1 3 , ( [ 0.0 , 1.0 , 1.0 ] , [ 0.0 , 1.0 , 0.0 ] ) )\r\n                    ]\r\n
  \             }\r\n          )\r\n        , ...\r\n\r\n  , _hridges =\r\n      fromList\r\n
  \       [ ( 0\r\n          , Ridge\r\n              { _rvertices =\r\n                  fromList\r\n
  \                   [ ( 1 , [ 0.0 , 1.0 , 1.0 ] ) , ( 2 , [ 0.0 , 0.0 , 1.0 ] )
  ]\r\n              , _ridgeOf = fromList [ 0 , 2 ]\r\n              , _redges =
  fromList []\r\n              }\r\n          )\r\n        , ...\r\n\r\n  , _hedges
  =\r\n      fromList\r\n        [ ( Pair 0 2 , ( [ 0.0 , 0.0 , 0.0 ] , [ 0.0 , 0.0
  , 1.0 ] ) )\r\n        , ...\r\n```\r\n\r\nThis is a big object. The function `hullSummary`
  returns a summary of it.\r\n\r\nThe `hullVolume` function returns the volume of
  the convex hull in any \r\ndimension (area in dimension 2, volume in dimension 3,
  hypervolume in higher \r\ndimension). \r\n\r\nAnother useful function is `hullToSTL`
  for dimension 3. It writes a STL file \r\nof the mesh representing the convex hull.
  One can visualize it in e.g. MeshLab."
license-name: GPL-3.0-only
