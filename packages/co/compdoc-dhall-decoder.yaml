all-versions:
- 0.1.0.0
- 0.2.0.0
- 0.3.0.0
author: Daniel Firth
basic-deps:
  base: '>=4.7 && <5'
  compdoc: '>=0.3.0.0'
  composite-aeson: '>=0'
  composite-base: '>=0.7.4.0'
  dhall: '>=0'
  either: '>=0'
  pandoc: '>=0'
  text: '>=0'
changelog: |
  # Changelog for compdoc-dhall-decoder

  ## v0.3.0.0

  * Update to compdoc-0.3.0.0

  ## v0.1.0.0

  * Working compdoc decoder for dhall.
changelog-type: markdown
description: |
  # compdoc-dhall-decoder

  This module allows you to decode a `Compdoc` value from markdown.

  You should use newtypes like so:

  ```
  newtype MyDoc = MyDoc (Record (Compdoc '[]))
    deriving stock (Eq, Show, Generic)


  instance D.FromDhall MyDoc where
    autoWith options = fmap MyDoc $ compdocDecoder def (recordJsonFormat RNil) options
  ```
description-type: markdown
hash: 6417104e8c5228d307ea31eae623b0e29ffbcf86c1ffbea523456f2b255b084c
homepage: ''
latest: 0.3.0.0
license-name: BSD-3-Clause
maintainer: dan.firth@homotopic.tech
synopsis: Allows you to write FromDhall instances for Compdoc
test-bench-deps: {}
