all-versions:
- 0.0.1
- 0.1.0
author: John Wiegley
basic-deps:
  base: '>=4.9 && <4.10'
  lifted-async: '>=0.1.1'
  lifted-base: '>=0.2.2.0'
  monad-control: '>=1.0.1'
  stm: '>=2.4.2'
  transformers: '>=0.5'
  transformers-base: '>=0.4'
  unordered-containers: '>=0.2.3.0'
changelog: ''
changelog-type: ''
description: |-
  Eventually consistent STM transactions.

  Consistent provides eventually consistent atomic transactions, by delaying
  updates until no threads is mutating a shared variable.

  This comes at a cost of having a separate TVar for every thread, but has the
  advantage that no thread will ever lock or retry except for the manager actor
  responsible for performing the updates.
description-type: haddock
hash: c5199a88c8e993f2e27826303564549dc741a805231c152ba3cdda8a8620c7db
homepage: ''
latest: 0.1.0
license-name: MIT
maintainer: johnw@newartisans.com
synopsis: Eventually consistent STM transactions.
test-bench-deps:
  base: '>=0'
  consistent: '>=0'
  lifted-async: '>=0.1.1'
  transformers: '>=0.4'
