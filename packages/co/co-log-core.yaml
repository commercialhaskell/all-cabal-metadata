all-versions:
- 0.0.0
- 0.1.0
- 0.1.1
- 0.2.0.0
- 0.2.1.0
- 0.2.1.1
- 0.3.0.0
- 0.3.1.0
- 0.3.2.0
- 0.3.2.1
- 0.3.2.2
- 0.3.2.3
- 0.3.2.4
author: Dmitrii Kovanikov
basic-deps:
  base: '>=4.10.1.0 && <4.22'
changelog: "# Change log\n\n`co-log-core` uses [PVP Versioning][1].\nThe change log
  is available [on GitHub][2].\n\n## 0.3.2.4 — January 5, 2024\n\n## What's Changed\n\n*
  Support ghc-9.12.\n\n**Full Changelog**: https://github.com/co-log/co-log-core/compare/v0.3.2.3...v0.3.2.4\n\n##
  0.3.2.3 — December 15, 2024\n\n## What's Changed\n\n* Allow `doctest-0.23`.\n\n**Full
  Changelog**: https://github.com/co-log/co-log-core/compare/v0.3.2.2...v0.3.2.3\n\n##
  0.3.2.2 — May 21, 2024\n\n## What's Changed\n* GA(deps): Bump actions/cache from
  3 to 4 by @dependabot in https://github.com/co-log/co-log-core/pull/40\n* Support
  ghc-9.10. by @alaendle in https://github.com/co-log/co-log-core/pull/41\n\n\n**Full
  Changelog**: https://github.com/co-log/co-log-core/compare/v0.3.2.1...v0.3.2.2\n\n##
  0.3.2.1 — Oct 20, 2023\n\n## What's Changed\n* Relax doctest boundaries. by @alaendle
  in [#32](https://github.com/co-log/co-log-core/pull/32)\n* GA(deps): Bump actions/checkout
  from 3 to 4 by @dependabot in [#35](https://github.com/co-log/co-log-core/pull/35)\n*
  Allow doctest-0.22 by @Vekhir in [#36](https://github.com/co-log/co-log-core/pull/36)\n*
  [#29] Support GHC 9.6 by @vrom911 in [#33](https://github.com/co-log/co-log-core/pull/33)\n*
  Support ghc-9.8 by @alaendle in [#37](https://github.com/co-log/co-log-core/pull/37)\n*
  Publish to hackage directly from GitHub by @alaendle in [#38](https://github.com/co-log/co-log-core/pull/38)\n\n##
  New Contributors\n* @Vekhir made their first contribution in https://github.com/co-log/co-log-core/pull/36\n\n**Full
  Changelog**: https://github.com/co-log/co-log-core/compare/v0.3.2.0...v0.3.2.1\n\n##
  0.3.2.0 — Nov 2, 2022\n\n- [#25](https://github.com/co-log/co-log-core/issues/25):\n
  \ Support GHC-9.4.\n\n## 0.3.1.0 — Feb 15, 2022\n\n- [#7](https://github.com/co-log/co-log-core/issues/7):\n
  \ Support GHC-9.2.\n- [#13](https://github.com/co-log/co-log-core/issues/13):\n
  \ Add `WithSeverity` and `mapSeverity` to `Colog.Severity`.\n\n## \U0001F383 0.3.0.0
  — Oct 29, 2021\n\n- [#223](https://github.com/co-log/co-log/pull/223):\n  Support
  GHC-9.0.1.\n- [#176](https://github.com/co-log/co-log/issues/176):\n  Add `logFlush`
  action to flush the given `Handle`.\n\n  **Breaking change:** All `withLog*File`
  functions how flush handle\n  after logging each message. Now you'll see logs in
  the file\n  immediately.\n\n  **Migration guide:** If you rely on the previous behaviour,
  then\n  copy-paste corresponding functions and remove flushing.\n\n- Update maintainers
  information to the new\n  [Co-Log](https://github.com/co-log) organization.\n\n##
  0.2.1.1 — Apr 18, 2020\n\n- [#186](https://github.com/co-log/co-log/issues/186):\n
  \ Support GHC-8.10.1.\n\n## 0.2.1.0 — Jan 19, 2020\n\n- [#139](https://github.com/co-log/co-log/issues/139):\n
  \ Add (unrepresentable) `Functor` instance for `LogAction` with the\n  custom type-error.\n
  \ (by [@vrom911](https://github.com/vrom911))\n- [#148](https://github.com/co-log/co-log/issues/148):\n
  \ Support GHC-8.8.2.\n  (by [@chshersh](https://github.com/chshersh))\n- [#122](https://github.com/co-log/co-log/issues/122):\n
  \ Add the `separate` combinator.\n  (by [@vrom911](https://github.com/vrom911))\n-
  [#125](https://github.com/co-log/co-log/issues/125):\n  Add monadic versions of
  contravariant functions.\n  (by [@piq9117](https://github.com/piq9117))\n- [#138](https://github.com/co-log/co-log/issues/138):\n
  \ Add `hoistLogAction` — higher-order transformation function.\n  (by [@jiribenes](https://github.com/jiribenes))\n-
  [#123](https://github.com/co-log/co-log/issues/123):\n  Write default implementation
  to `getLogAction` via `logActionL`.\n  (by [@SanchayanMaity](https://github.com/SanchayanMaity))\n\n##
  0.2.0.0 — May 5, 2019\n\n- [#85](https://github.com/co-log/co-log/issues/85):\n
  \ Move `overLogAction` to `HasLog` typeclass\n- [#101](https://github.com/co-log/co-log/issues/101):\n
  \ Add `logActionL` lens with default implementation to `HasLog` type class.\n- [#99](https://github.com/co-log/co-log/issues/99):\n
  \ Add comonadic combinators: `duplicate` and `multiplicate`.\n- [#78](https://github.com/co-log/co-log/issues/78):\n
  \ Improve documentation significantly.\n\n## 0.1.1 — Nov 15, 2018\n\n- [#63](https://github.com/co-log/co-log/issues/63):\n
  \ Add `logPrint`, `logPrintStderr`, `logPrintHandle` and `withLogPrintFile` to `Colog.Core.IO`.\n-
  [#46](https://github.com/co-log/co-log/issues/46):\n  Moves `logStringStdout`, `logStringStderr`,
  `logStringHandle`,\n  `withLogStringFile` from `Colog.Actions` to `Colog.Core.IO`.\n-
  [#48](https://github.com/co-log/co-log/issues/48):\n  Adds `liftLogIO` function.\n-
  [#49](https://github.com/co-log/co-log/issues/49):\n  Add `<&` and `&>`operators
  for `unLogAction`.\n- [#47](https://github.com/co-log/co-log/issues/47):\n  Add
  `doctest` tests.\n- [#13](https://github.com/co-log/co-log/issues/13):\n  Add `.cabal`
  file description and improve documentation.\n- [#39](https://github.com/co-log/co-log/issues/39):\n
  \ Support GHC-8.2.2 and GHC-8.6.2.\n\n## 0.1.0\n\n- [#38](https://github.com/co-log/co-log/issues/38):\n
  \ Rename `cbind` to `cmapM`.\n\n- [#37](https://github.com/co-log/co-log/issues/37):\n
  \ Add `base` bounds.\n\n## 0.0.0\n\n- Initially created.\n\n[1]: https://pvp.haskell.org\n[2]:
  https://github.com/co-log/co-log-core/releases\n"
changelog-type: markdown
description: "# co-log-core\n\n![Co-logo](https://user-images.githubusercontent.com/8126674/80955687-92f21a80-8df7-11ea-90d3-422dafdc8391.png)\n\n[![GitHub
  CI](https://github.com/co-log/co-log-core/workflows/CI/badge.svg)](https://github.com/co-log/co-log-core/actions)\n[![Hackage][hk-img-core]][hk-core]\n[![MPL-2.0
  license](https://img.shields.io/badge/license-MPL--2.0-blue.svg)](https://github.com/co-log/co-log/blob/main/LICENSE)\n\n`co-log-core`
  is a lightweight package that provides core types and functions to \nwork with the
  @LogAction@ data type which is both simple and powerful.\n\n## How to use\n\n`co-log-core`
  is compatible with the following GHC\nversions - [supported versions](https://matrix.hackage.haskell.org/#/package/co-log-core)\n\nIn
  order to start using `co-log-core` in your project, you\nwill need to set it up
  with these steps:\n\n1. Add the dependency on `co-log-core` in your project's\n
  \  `.cabal` file. For this, you should modify the `build-depends`\n   section according
  to the below section:\n\n   ```haskell\n   build-depends: base ^>= LATEST_SUPPORTED_BASE\n
  \               , co-log-core ^>= LATEST_VERSION\n   ```\n\n2. To use this package,
  refer to the below example.\n\n   ```haskell\n   module Main (main) where\n\n   import
  Prelude hiding (log)\n\n   import Colog.Core (LogAction, logStringStdout, (<&))\n\n\n
  \  app :: LogAction IO String -> IO ()\n   app log = do\n       log <& \"Starting
  app...\"\n       log <& \"Finishing app...\"\n\n   main :: IO ()\n   main = app
  logStringStdout\n   ```\n \n \n[hk-img-core]: https://img.shields.io/hackage/v/co-log-core.svg?logo=haskell\n[hk-core]:
  https://hackage.haskell.org/package/co-log-core\n"
description-type: markdown
hash: a327317c9da694f5a9d33f5082c7032a3dc37424632062a9cf66e71d2bcf4922
homepage: https://github.com/co-log/co-log-core
latest: 0.3.2.4
license-name: MPL-2.0
maintainer: Co-Log <xrom.xkov@gmail.com>
synopsis: Composable Contravariant Comonadic Logging Library
test-bench-deps:
  Glob: ^>=0.10.0
  base: '>=4.10.1.0 && <4.22'
  doctest: '>=0.16.0 && <0.24'
