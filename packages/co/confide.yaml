all-versions:
- 0.1.0.0
- 0.1.0.1
- 0.1.0.2
- 0.1.0.3
author: Alex Milkov
basic-deps:
  base: '>=4.7 && <5'
  deiko-config: '>=0.5.0.1'
  exceptions: ==0.8.3
  text: ==1.2.2.2
changelog: ''
changelog-type: ''
description: "# confide\n\n[![Build status](https://img.shields.io/travis/amilkov3/confide/master.svg)](https://travis-ci.org/amilkov3/confide)\n\n[Confide](https://github.com/estatico/confide)
  port to Haskell (using `GHC.Generics` as opposed to Shapeless to generate \n[FromConf](https://github.com/estatico/confide/blob/master/core/src/main/scala/io/estatico/confide/FromConf.scala)
  typeclass instances). Uses [deiko-config](https://hackage.haskell.org/package/deiko-config)
  to parse HOCON .conf file and read in types\n\n## Usage\n\nHOCON `.conf` file\n```\na=\"hello\"\n\nb
  {\n  y=true\n  z {\n    x=5\n  }\n}\n```\n\n```haskell\n\n{-# LANGUAGE OverloadedStrings
  #-}\n{-# LANGUAGE TypeApplications #-}\n\nmodule Test where\n\nimport Data.Confide\nimport
  Data.Confide.Generic\nimport qualified Data.Text as T\n\ndata Foo = Foo {x :: Integer}
  deriving (Generic, Show)\ndata Bar = Bar {y :: Bool, z :: Foo} deriving (Generic,
  Show)\ndata Baz = Baz {a :: T.Text, b :: Bar} deriving (Generic, Show)\n\ninstance
  FromConf Foo\ninstance FromConf Bar\ninstance FromConf Baz\n\nmain :: IO ()\nmain
  = do\n  c <- loadConfig \"project/path/to/confFile.conf\"\n  baz <- get @Baz \"\"
  c\n  print baz\n\n```\n\nGHCI\n\n```\n$ main \nBaz {a = \"hello\", b = Bar {y =
  True, z = Foo {x = 5}}}\n```\n"
description-type: markdown
hash: 528eac80e3e52b9047b3c910d464a335b4b590baa334664891b6a7f823013ff4
homepage: https://github.com/amilkov3/confide
latest: 0.1.0.3
license-name: BSD-3-Clause
maintainer: amilkov3@gmail.com
synopsis: derive typeclass instances for decoding types from HOCON conf
test-bench-deps:
  base: '>=0'
  confide: '>=0'
  deiko-config: '>=0'
  tasty: '>=0'
  tasty-hunit: '>=0'
  text: '>=0'
