homepage: https://github.com/andrewthad/colonnade#readme
changelog-type: ''
hash: e0b43a1fe4f87072f3f7cd9eaccdb790f7df8ceff5f73c3a4e242aba9337485f
test-bench-deps:
  semigroupoids: -any
  ansi-wl-pprint: -any
  base: '>=4.7 && <=5'
  doctest: -any
  fast-logger: -any
  colonnade: -any
  QuickCheck: -any
maintainer: andrew.thaddeus@gmail.com
synopsis: Generic types and functions for columnar encoding and decoding
changelog: ''
basic-deps:
  bytestring: '>=0.10 && <0.11'
  base: '>=4.8 && <5'
  text: '>=1.0 && <1.3'
  semigroups: '>=0.18.2 && <0.20'
  contravariant: '>=1.2 && <1.6'
  profunctors: '>=5.0 && <5.7'
  vector: '>=0.10 && <0.13'
all-versions:
- '0.1'
- '0.3'
- '0.4'
- 0.4.1
- 0.4.4
- 0.4.5
- 0.4.6
- 0.4.7
- '0.5'
- 1.0.0
- 1.1.0
- 1.1.1
- 1.2.0
- 1.2.0.1
- 1.2.0.2
author: Andrew Martin
latest: 1.2.0.2
description-type: haddock
description: |-
  The `colonnade` package provides a way to talk about
  columnar encodings and decodings of data. This package provides
  very general types and does not provide a way for the end-user
  to actually apply the columnar encodings they build to data.
  Most users will also want to one a companion packages
  that provides (1) a content type and (2) functions for feeding
  data into a columnar encoding:

  * <https://hackage.haskell.org/package/lucid-colonnade lucid-colonnade> for `lucid` html tables

  * <https://hackage.haskell.org/package/blaze-colonnade blaze-colonnade> for `blaze` html tables

  * <https://hackage.haskell.org/package/reflex-dom-colonnade reflex-dom-colonnade> for reactive `reflex-dom` tables

  * <https://hackage.haskell.org/package/yesod-colonnade yesod-colonnade> for `yesod` widgets

  * <http://hackage.haskell.org/package/siphon siphon> for encoding and decoding CSVs
license-name: BSD-3-Clause
