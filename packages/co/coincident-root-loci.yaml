homepage: https://hub.darcs.net/bkomuves/coincident-root-loci
changelog-type: ''
hash: 0ee71d6ab94f9b4b415e792e93ef37883584d1013d2844ecb6550085ad5711d5
test-bench-deps:
  base: '>=4 && <5'
  array: '>=0.5'
  combinat: '>=0.2.9.0'
  polynomial-algebra: '>=0.1'
  containers: '>=0.5'
  coincident-root-loci: -any
  tasty-hunit: '>=0.9'
  tasty: '>=0.11'
maintainer: bkomuves (plus) hackage (at) gmail (dot) com
synopsis: Equivariant CSM classes of coincident root loci
changelog: ''
basic-deps:
  base: '>=4 && <5'
  array: '>=0.5'
  combinat: '>=0.2.10.0'
  polynomial-algebra: '>=0.1'
  containers: '>=0.5'
  transformers: -any
  random: -any
all-versions:
- '0.2'
- '0.3'
author: Balazs Komuves
latest: '0.3'
description-type: markdown
description: "\nCharacteristic classes of coincident root loci\n==============================================\n\nCoincident
  root loci (or discriminant strata) are subsets \nof the space of homogeneous polynomials
  in two variables defined by\nroot multiplicities: A nonzero degree _n_ polynomial
  has _n_ roots in the\ncomplex projective line P^1, but some of these can coincide,
  which gives us a\npartition of _n_. Hence for each partition _lambda_ we get a set
  of polynomials\n(those with root multiplicities given by _lambda_), \nwhich  together
  stratify the space of these polynomials, which (modulo multiplying by scalars) \nis
  P^n. These are quasi-projective varieties, invariant under the action of GL(2);\ntheir
  closures are highly singular projective varieties, making them a good\nexample for
  studying invariants of singular varieties.\n\nThis package contains a number of
  different algorithms to compute invariants\nand characteristic classes of these
  varieties:\n\n- degree\n- Euler characteristic\n- the fundamental class in equivariant
  cohomology\n- Chern-Schwartz-MacPherson (CSM) class, Segre-SM class\n- equivariant
  CSM class\n- Hirzebruch Chi-y genus\n- Todd class, motivic Hirzebruch class\n- motivic
  Chern class\n- equivariant motivic Chern class\n\nSome of the algorithms are implemented
  in Mathematica \ninstead of (or in addition to) Haskell.\n\nAnother (better organized)
  Mathematica implementation is available at\n<https://github.com/bkomuves/mathematica-packages>.\n\n\nExample
  usage\n=============\n\nFor example if you want to know what is the equivariant
  CSM class of the\n(open) loci corresponding to the partition [2,2,1,1], you can
  use the following\npiece of code:\n\n    {-# LANGUAGE TypeApplications #-}\n\n    import
  Math.Combinat.Partitions\n    import Math.RootLoci.Algebra.SymmPoly ( AB )\n    import
  Math.Algebra.Polynomial.Pretty ( pretty )\n    import Math.RootLoci.CSM.Equivariant.Umbral\n\n
  \   csm ps = umbralOpenCSM @AB (mkPartition ps)\n\n    main = do\n      putStrLn
  $ pretty $ csm [2,2,1,1]\n      \n"
license-name: BSD-3-Clause
