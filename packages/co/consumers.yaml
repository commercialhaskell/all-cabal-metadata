homepage: https://github.com/scrive/consumers
changelog-type: markdown
hash: ef747716a680d953187ee2a12504613c4d02c7090d7313e74ec679ecf927fdd6
test-bench-deps:
  exceptions: -any
  log-base: -any
  hpqtypes: -any
  stm: -any
  base: -any
  time: -any
  text: -any
  monad-loops: -any
  monad-control: -any
  text-show: -any
  hpqtypes-extras: '>=1.9 && <2.0'
  HUnit: -any
  monad-time: -any
  mtl: -any
  consumers: -any
  transformers-base: -any
  transformers: -any
maintainer: |-
  Andrzej Rybczak <andrzej@rybczak.net>,
  Jonathan Jouty <jonathan@scrive.com>,
  Mikhail Glushenkov <mikhail@scrive.com>
synopsis: Concurrent PostgreSQL data consumers
changelog: |
  # consumers-2.2.0.6 (2021-10-22)
  * Improve efficiency of the SQL query that reserves jobs.

  # consumers-2.2.0.5 (2021-10-12)
  * Adjust to changes in log-base-0.11.

  # consumers-2.2.0.4 (2021-06-09)
  * Adjust to changes in log-base-0.10.

  # consumers-2.2.0.3 (2021-05-28)
  * Support GHC 9.0.

  # consumers-2.2.0.2 (2020-05-05)
  * Support hpqtypes-1.9.0.0 and relax base.

  # consumers-2.2.0.1 (2019-05-22)
  * Support hpqtypes-1.7.0.0 and hpqtypes-extras-1.9.0.0.

  # consumers-2.2.0.0 (2019-02-19)
  * When jobs are relased from a dead consumer, reset their finished_at column
  * Start the consumer only when ccMaxRunningJobs >= 1

  # consumers-2.1.2.0 (2018-07-11)

  * Support hpqtypes-1.6.0.0.
  * Drop support for GHC < 8.

  # consumers-2.1.1.0 (2018-03-18)

  * GHC 8.4.1 support.

  # consumers-2.1.0.0 (2017-09-18)

  * Added a `MonadTime` constraint to `runConsumer`. The `currentTime`
    method from `MonadTime` is now used instead of `now()` in SQL. This
    is mostly useful for testing, to control the flow of time in test
    cases.

  * Added a new `runConsumer` variant: `runConsumerWithIdleSignal`.
    When a consumer is idle, this variant signals a TMVar. This is
    mostly useful for testing.

  * Added a test suite.

  # consumers-2.0.0.1 (2017-07-21)
  * Now depends on 'log-base' instead of 'log'.
basic-deps:
  exceptions: '>=0.10 && <0.11'
  log-base: '>=0.11 && <0.12'
  extra: '>=1.6 && <1.8'
  hpqtypes: '>=1.7 && <2.0'
  stm: '>=2.4 && <2.6'
  base: '>=4.9 && <5'
  time: '>=1.6 && <2.0'
  monad-control: '>=1.0 && <1.1'
  lifted-base: '>=0.2 && <0.3'
  lifted-threads: '>=1.0 && <1.1'
  monad-time: '>=0.3 && <0.4'
  containers: '>=0.5 && <0.7'
  mtl: '>=2.2 && <2.3'
  transformers-base: '>=0.4 && <0.5'
all-versions:
- '0.1'
- '1.0'
- '1.1'
- '2.0'
- 2.0.0.1
- 2.1.0.0
- 2.1.1.0
- 2.1.2.0
- 2.2.0.0
- 2.2.0.1
- 2.2.0.2
- 2.2.0.3
- 2.2.0.4
- 2.2.0.5
- 2.2.0.6
author: Scrive AB
latest: 2.2.0.6
description-type: markdown
description: |
  # consumers

  [![Hackage version](https://img.shields.io/hackage/v/consumers.svg?label=Hackage)](https://hackage.haskell.org/package/consumers)
  [![Build Status](https://github.com/well-typed/optics/workflows/Haskell-CI/badge.svg?branch=master)](https://github.com/scrive/consumers/actions?query=branch%3Amaster)

  Library for setting up concurrent consumers of data stored inside
  PostgreSQL database in a simple, declarative manner.

  See the `examples/` directory for a usage example.
license-name: BSD-3-Clause
