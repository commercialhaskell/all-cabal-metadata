all-versions:
- '0.1'
- '0.2'
author: Ville Tirronen
basic-deps:
  ConfigFile: '>=1.0.6 && <2'
  base: '>=4.3 && <5'
  parsec: '>=3.1.0 && <4'
  template-haskell: '>=0'
changelog: ''
changelog-type: ''
description: |-
  This module provides syntax for concise definitions of config files from
  Data.ConfigFile through template haskell.
  For example, the following splice,
  $(genConf "Example" [$conf|
  elbow/center -> ec :: Double
  elbow/min    -> emi :: Double
  elbow/max    -> ema :: Double
  |])
  resolves into declaration of the following datatype
  data Example = Example {ec  :: Double
  ,emi :: Double
  ,ema :: Double}
  and a function
  loadExample :: (MonadIO m) => FilePath -> m (Either CPError Example) ,
  which uses Data.ConfigFile to read a values for the above struct from
  a file.
description-type: haddock
hash: 7289e34fd2b3612b8d21a0ccceeab8f59b9a52c3740ac775619ebd6458f1ff89
homepage: ''
latest: '0.2'
license-name: LicenseRef-LGPL
maintainer: Ville Tirronen <ville.e.t.tirronen@jyu.fi>
synopsis: Template haskell for reading ConfigFiles.
test-bench-deps: {}
