all-versions:
- 1.0.0
author: KtorZ <matthias.benkort@gmail.com>
basic-deps:
  aeson: '>=0'
  base: '>=4.7 && <5'
  contra-tracer: '>=0'
changelog: "# Changelog\n\n## [1.0.0] -- 2021-19-12\n\n### Added\n\n- Initial release.
  Key features:\n  - Contravariant tracers, easily composable with parent context\n
  \ - Concurrent-safe, simple, structured (JSON), stdout writer\n  - Generic definition
  of record of tracers for multi-component logging\n\n### Changed \n\nN/A\n\n### Removed\n\nN/A\n"
changelog-type: markdown
description: "# contra-tracers\n\n## Overview \n\nAn opinionated, simple and easy-to-use
  logging library leveraging contravariant functors to provide structured multi-component
  logger capability to real application. \n\n## Usage\n\n```hs\n-- Some HTTP log message
  represented as Haskell values.\n\ndata HttpLog\n    = SomeHttpLog\n    | SomeHttpWarning\n
  \   deriving stock (Generic)\n    deriving anyclass (ToJSON)\n\nnstance HasSeverityAnnotation
  HttpLog\n   getSeverityAnnotation = \\case\n       SomeHttpLog -> Info\n       SomeHttpWarning
  -> Warning\n\n-- Some DB log message represented as Haskell values.\n\ndata DbLog
  = SomeDbLog\n    deriving stock (Generic)\n    deriving anyclass (ToJSON)\n\nnstance
  HasSeverityAnnotation HttpLog\n   getSeverityAnnotation = \\case\n       SomeHttpLog
  -> Info\n       SomeHttpWarning -> Warning\n\n-- Applications tracers, defined as
  a record of higher-kinded types. We\n-- have in particular 'TracerHKD Concrete a
  ~ a', which effectively makes\n-- the 'Tracers' record a plain record of tracers
  once instantiated.\n\ndata Tracers m (kind :: TracerDefinition) = Tracers\n    {
  tracerHttp :: TracerHKD kind (Tracer m HttpLog)\n    , tracerDb   :: TracerHKD kind
  (Tracer m DbLog)\n    } deriving stock (Generic)\n\n-- The default configuration,
  setting all tracers to 'Info' min severity.\n-- In practice, you may want to obtain
  the configuration from a config\n-- file or from command-line options.\nemptyConfiguration
  :: Tracers m MinSeverities\nemptyConfiguration = defaultTracers Info\n\nmain ::
  IO ()\nmain = do\n    withStdoutTracer mempty emptyConfiguration $ \\tracers ->
  do\n        concurrently_\n            (myHttpApplication (tracerHttp tracers))\n
  \           (myDbApplication (tracerDb  tracers))\n```\n\n<p align=\"center\">\n
  \ <a href=\"../../../CONTRIBUTING.md\">:gift: Contributing</a>\n  |\n  <a href=\"CHANGELOG.md\">:floppy_disk:
  Changelog</a>\n</p>\n"
description-type: markdown
hash: 2655225416daee4609128c2bb238d89e8ce820cc1c23ef9286c72c27995a61dd
homepage: https://github.com/cardanosolutions/ogmios#readme
latest: 1.0.0
license-name: MPL-2.0
maintainer: matthias.benkort@gmail.com
synopsis: A logging library built on top of contra-tracer to make configuring and
  declaring multiple tracers easy (via generics).
test-bench-deps: {}
