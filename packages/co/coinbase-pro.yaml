homepage: https://github.com/mdunnio/coinbase-pro#readme
changelog-type: markdown
hash: 0e908b956d84bb3d948150a26c1e7f893eb762a4a53a33e8a4066b7bc132dc9f
test-bench-deps:
  http-client: '>=0.5 && <0.8'
  exceptions: '>=0.4 && <1.0'
  bytestring: '>=0.10 && <0.12'
  aeson-casing: '>=0.1 && <0.3'
  base: '>=4.7 && <5'
  time: '>=1.8 && <2.0'
  servant-client: '>=0.14 && <0.20'
  unordered-containers: ==0.2.*
  text: ==1.2.*
  uuid: ==1.3.*
  http-api-data: '>=0.3 && <0.5'
  servant-client-core: '>=0.14 && <0.20'
  network: '>=2.6 && <3.2'
  async: '>=2.1 && <2.3'
  websockets: ==0.12.*
  coinbase-pro: -any
  servant: '>=0.14 && <0.20'
  memory: '>=0.14 && <0.18'
  containers: '>=0.5 && <0.7'
  io-streams: ==1.5.*
  binary: ==0.8.*
  http-streams: ==0.8.*
  http-client-tls: ==0.3.*
  wuss: '>=1.1 && <3'
  cryptonite: '>=0.24 && <0.31'
  tasty-hunit: '>=0.10'
  transformers: ==0.5.*
  tasty: '>=1.2.2'
  HsOpenSSL: ==0.11.*
  http-types: ==0.12.*
  unagi-streams: ==0.2.*
  aeson: '>=1.2 && <2.1'
  vector: ==0.12.*
maintainer: Michael Dunn <michaelsdunn1@gmail.com>
synopsis: Client for Coinbase Pro
changelog: "# Version 0.9.3.2\n\n- Upgraded to lts-20.4 (ghc 9.2.5)\n\n# Version 0.9.3.1\n\n-
  Added test data to `extra-source-files` so that `cabal test` can be run straight
  from the hackage\n  package\n\n# Version 0.9.3.0\n\n- `Order` now has `Maybe Bool`
  instead of `Bool` for `postOnly`. Required to maintain spec compliance.\n  From
  https://docs.pro.coinbase.com/#upcoming-changes:\n\n```\n08/09/21\n\n    Orders
  with a \"pending\" status returned by the REST API endpoints GET /orders, GET /orders/<id>,\n\tand
  GET /orders/client:<client_oid> will have a reduced set of fields. See the List
  Orders documentation\n\tfor more details. Orders with non-pending statuses will
  be unaffected by this change. The change will\n\ttake effect in Sandbox starting
  after August 12th, 2021 and in Production starting after August 19th, 2021.\n```\n\n-
  Added tests to test order parsing from json file\n\n# Version 0.9.2.2\n\n- Added
  `CoinbasePro.Unauthenticated.singleProduct`\n\n# Version 0.9.2.1\n\n- Use `Runner`
  instead of `ClientM a -> IO a` where applicable\n- Added more documentation around
  `Runner`\n- Added `runDefCbAuthT` as a default for calling `runCbAuthT` without
  passing in a `Runner`\n- Updated `src/example/request/Main.hs` to reflect `runDefCbAuthT`
  and a minor refactor\n\n# Version 0.9.2.0\n\nFeature complete! (except FIX)\n\n##
  Additional Features\n\n- Added support for the following endpoints:\n  - stablecoin
  conversions\n  - oracle\n\n# Version 0.9.1.0\n\n- Minor refactors + linting.\n\n##
  Additional Features\n\n- Added support for the following endpoints:\n  - `Profiles`\n
  \ - `Reports`\n\n# Version 0.9.0.0\n\n- Upgraded to lts-17.4 (ghc 8.10.4)\n- Added
  hie.yaml for use with haskell-language-server (hls)\n- Removed `taker_fee_rate`
  from `Activate` websocket message\n- Added `max_withdrawal_amount` to `CurrencyDetails`\n-
  Changed `example/test-request` to `Sandbox` instead of `Production`\n- Use `Network.HTTP.Types.encodePathSegments`
  when making `RequestPath` in authenticated requests\n- Added `min_market_funds`
  and `max_market_funds` to `Product`\n- Made several explicit `Show` instances\n-
  Added support for the following endpoints:\n  - account history\n  - account holds\n
  \ - exchange limits\n  - deposits\n  - withdrawals\n  - list payment methods\n  -
  listing coinbase accounts\n  - list tranfers endpoint\n\n# Version 0.8.2.0\n\n-
  Changed `port` in `WSConnection` back to `PortNumber` instead of `Int`\n\n# Version
  0.8.1.0\n\n- Upgraded to lts-16.7 (ghc 8.8.3)\n- Changed `port` in `WSConnection`
  to `Int` instead of `PortNumber`\n\n# Version 0.8.0.0\n\n## Breaking API changes:\n\n-
  `Environment` concept has been introduced. This allows the user to specify an endpoint
  (production, sandbox)\n  in which to query or stream.\n\n    - `run` (and associated
  functions) now take an `Environment` as the first parameter. `runSandbox` and associated\n
  \     functions have been removed.\n    - `runWithManager` now has different parameter
  ordering. Signature is `runWithManager :: Manager -> Environment -> ClientM a ->
  IO a`\n    - `runCbAuthT` now takes a `Runner a`, where `Runner a = ClientM a ->
  IO a`; allows users to specify an environment in which to run\n\n- `placeOrder`
  now has `Maybe ClientOrderId` as the first parameter that allows users to assign
  `client_oid` to\n  submitted orders. The `client_oid` field is visible on the `Full`
  channel.\n\n- `CoinbasePro.WebSocketFeed.subscribeToFeed` has two additional parameters:\n\n
  \   - `Environment`\n    - `Maybe CoinbaseProCredentials`: allows users to authenticate
  on subscription. See `User`\n\n- Moved `UserId` and `ProfileId` to `CoinbasePro.Types`
  from `CoinbasePro.WebSocketFeed.Channel.Full.Activate`\n\n## Additional Features:\n\n-
  Added `User` channel functionality that allows users to see `user_id` and `profile_id`
  on messages that pertain to the subscriber.\n  See [documentation](https://docs.pro.coinbase.com/#the-user-channel)
  for more details\n\n    - `user_id` and `profile_id` fields are now parsed from
  `Full` channel messages if available.\n\n- `CoinbasePro.Types.ClientOrderId` has
  been introduced to specify `client_oid` in `placeOrder` API request.\n  - `client_oid`
  is now parsed from `CoinbasePro.WebSocketFeed.Channel.Full.Received.\n\n- `CoinbasePro.Authenticated.getOrder`
  allows users to query status of order\n\n- `CoinbasePro.Authenticated.getClientOrder`
  allows users to query status of order using `client_oid`\n\n\n## Misc\n\n- minor
  cleanups of unused imports\n\n# Version 0.7.2.0\n - Upgraded to stack lts-14.17\n\n#
  Version 0.7.1.0\n - Fixed broken examples\n\n# Version 0.7.0.0\n - Unauthenticated
  requests are now all in the `ClientM` monad. `CoinbasePro.Request.run` is now required\n
  \  to operate in the IO monad.\n\n   Example: `run (trades (ProductId \"BTC-USD\"))
  >>= print`\n\n- Added `run_`, `runSandbox`, `runSandboxWithManager` in `CoinbasePro.Request`\n-
  Added `currencies`, `fees`, and `trailingVolume` queries\n"
basic-deps:
  http-client: '>=0.5 && <0.8'
  exceptions: '>=0.4 && <1.0'
  bytestring: '>=0.10 && <0.12'
  aeson-casing: '>=0.1 && <0.3'
  base: '>=4.7 && <5'
  time: '>=1.8 && <2.0'
  servant-client: '>=0.14 && <0.20'
  unordered-containers: ==0.2.*
  text: ==1.2.*
  uuid: ==1.3.*
  http-api-data: '>=0.3 && <0.5'
  servant-client-core: '>=0.14 && <0.20'
  network: '>=2.6 && <3.2'
  async: '>=2.1 && <2.3'
  websockets: ==0.12.*
  coinbase-pro: -any
  servant: '>=0.14 && <0.20'
  memory: '>=0.14 && <0.18'
  containers: '>=0.5 && <0.7'
  io-streams: ==1.5.*
  binary: ==0.8.*
  http-streams: ==0.8.*
  http-client-tls: ==0.3.*
  wuss: '>=1.1 && <3'
  cryptonite: '>=0.24 && <0.31'
  tasty-hunit: '>=0.10'
  transformers: ==0.5.*
  tasty: '>=1.2.2'
  HsOpenSSL: ==0.11.*
  http-types: ==0.12.*
  unagi-streams: ==0.2.*
  aeson: '>=1.2 && <2.1'
  vector: ==0.12.*
all-versions:
- 0.5.0.0
- 0.6.0.0
- 0.7.0.0
- 0.7.1.0
- 0.7.2.0
- 0.8.0.0
- 0.9.0.0
- 0.9.1.0
- 0.9.2.0
- 0.9.2.2
- 0.9.3.0
- 0.9.3.1
- 0.9.3.2
author: Michael Dunn <michaelsdunn1@gmail.com>
latest: 0.9.3.2
description-type: markdown
description: "# coinbase-pro\n\nClient for Coinbase Pro REST and Websocket APIs.\n\nHere
  is a list of implemented/unimplemented features:\n\n- Market Data\n    - [x] Products\n
  \       - [x] Get Products\n        - [x] Get Product Order Book\n        - [x]
  Get Product Ticker\n        - [x] Get Trades\n        - [x] Get Historic Rates\n
  \       - [x] Get 24hr Stats\n    - [x] Currencies\n        - [x] Get Currencies\n
  \   - [x] Time\n- Private\n    - [x] Accounts\n        - [x] List Accounts\n        -
  [x] Get An Account\n        - [x] Get Account History\n        - [x] Get Holds\n
  \   - [x] Orders\n        - [x] Place a New Order\n        - [x] Cancel an Order\n
  \       - [x] Cancel all\n        - [x] List Orders\n        - [x] Get an Order\n
  \   - [x] Fills\n        - [x] List Fills\n\t- [x] Limits\n\t\t- [x] Get Current
  Exchange Limits\n    - [x] Deposits\n\t\t- [x] List Deposits\n\t\t- [x] Single Deposit\n
  \       - [x] Payment Method\n        - [x] Coinbase\n\t\t- [x] Generate a Crypto
  Deposit Address\n    - [x] Withdrawals\n\t\t- [x] List Withdrawals\n\t\t- [x] Single
  Withdrawal\n        - [x] Payment Method\n        - [x] Coinbase\n        - [x]
  Crypto\n\t\t- [x] Fee Estimate\n    - [x] Stablecoin Conversions\n        - [x]
  Create Conversion\n    - [x] Payment Methods\n        - [x] List Payment Methods\n\t-
  [x] Coinbase Accounts\n\t\t- [x] List Accounts\n    - [x] Fees\n        - [x] Get
  Current Fees\n    - [x] Reports\n        - [x] Create a new report\n        - [x]
  Get report status\n\t- [x] Profiles\n\t\t- [x] List Profiles\n\t\t- [x] Get a Profile\n\t\t-
  [x] Create a Profile Transfer\n    - [x] User Account\n        - [x] Trailing Volume\n\t-
  ~~[ ] Margin~~ (Disabled)[https://blog.coinbase.com/coinbase-pro-disables-margin-trading-42f5862f8a66]\n\t-
  [x] Oracle\n\t\t- [x] Get Oracle\n- Websocket Feed\n    - [x] Channels\n        -
  [x] The heartbeat channel\n        - [x] The status channel\n        - [x] The ticker
  channel\n        - [x] The level2 channel\n        - [x] The user channel\n        -
  [x] The matches channel\n        - [x] The full channel\n- FIX API\n    - [ ] Messages\n\n\n##
  Request API\n\n### Market Data Requests\n\n```haskell\nrun Sandbox (trades (ProductId
  \"BTC-USD\")) >>= print\n```\n\n### Authenticated Private Requests\n\n```haskell\nrunDefCbAuthT
  Sandbox cpc $ do\n    fills (Just btcusd) Nothing >>= liftIO . print\n  where\n
  \   accessKey  = CBAccessKey \"<access-key>\"\n    secretKey  = CBSecretKey \"<secret-key>\"\n
  \   passphrase = CBAccessPassphrase \"<passphrase>\"\n    cpc        = CoinbaseProCredentials
  accessKey secretKey passphrase\n```\n\n## Websocket API\n\nTo print out all of the
  full order book updates for BTC-USD:\n\n\n```haskell\nmain :: IO ()\nmain = do\n
  \   msgs <- subscribeToFeed [ProductId \"BTC-USD\"] [Ticker] Nothing\n    forever
  $ Streams.read msgs >>= print\n```\n\n## Example\n\nExample execs can be found in
  `src/example/`\n\n### Run Example\n\nTo run any of the authenticated endpoints in
  `test-request`, the access key,\nsecret key, and passphrase must be provided. See
  _Authenticated Private Requests_ above.\n"
license-name: MIT
