all-versions:
- '3.19'
- '3.20'
- '4.0'
- '4.1'
- '4.2'
author: |-
  Frank Dedden
  , Alwyn Goodloe
  , Ivan Perez
  , Ryan Scott
basic-deps:
  base: '>=4.9 && <5'
  copilot-core: '>=4.2 && <4.3'
  directory: '>=1.3 && <1.4'
  filepath: '>=1.4 && <1.5'
  language-bluespec: '>=0.1 && <0.2'
  pretty: '>=1.1.2 && <1.2'
changelog: |
  2025-01-20
          * Version bump (4.2). (#31)
          * Implement missing floating-point operations. (#28)
          * Allow using same trigger name in multiple declarations. (#30)

  2024-11-08
          * Version bump (4.1). (#25)

  2024-09-09
          * Version bump (4.0). (#23)
          * Support translating Copilot array updates to Bluespec. (#19)

  2024-08-03
          * Test GHC 9.4 through 9.8. (#20)

  2024-07-11
          * Version bump (3.20). (#11)
          * Support translating Copilot struct updates to Bluespec (#10).
          * Fix a bug in the translation of the signum function. (#14)
          * Fix a bug in the translation of floating-point comparisons. (#15)

  2024-03-08
          * Version bump (3.19). (#5)
          * Create new library for Bluespec backend.
changelog-type: text
description: |
  [![Build Status](https://github.com/Copilot-Language/copilot-bluespec/workflows/copilot-bluespec/badge.svg)](https://github.com/Copilot-Language/copilot-bluespec/actions?query=workflow%3Acopilot-bluespec)

  # Copilot: a stream DSL
  Copilot-Bluespec implements a Bluespec backend for Copilot, producing code that
  is suitable for FPGAs.

  Copilot is a runtime verification framework written in Haskell. It allows the
  user to write programs in a simple but powerful way using a stream-based
  approach.

  Programs can be interpreted for testing, or translated Bluespec code to be
  incorporated in a project, or as a standalone application. The Bluespec backend
  ensures us that the output is constant in memory and time, making it suitable
  for systems with hard realtime requirements.

  ## Installation
  Copilot-Bluespec can be found on
  [Hackage](https://hackage.haskell.org/package/copilot-bluespec). It is intended
  to be installed alongside a Copilot distribution by running the following
  commands:

  ```
  $ cabal update
  $ cabal install copilot
  $ cabal install copilot-bluespec
  ```

  For more detailed instructions on how to install Copilot, please refer to the
  [Copilot website](https://copilot-language.github.io).

  The generated Bluespec code requires `bsc` (the Bluespec compiler) in order to
  be compiled. `bsc` can be downloaded
  [here](https://github.com/B-Lang-org/bsc/releases).

  We also provide a [Dockerfile](Dockerfile) which automates the process of
  installing Copilot, Copilot-Bluespec, and `bsc`. The Dockerfile can be built and
  run using the following commands:

  ```
  $ docker build -t <tag> .
  $ docker run -it <tag>
  ```

  Where `<tag>` is a unique name for the Docker image.

  ## Further information
  For further information, install instructions and documentation, please visit
  the Copilot website:
  [https://copilot-language.github.io](https://copilot-language.github.io)

  There is also an implementation-focused design document
  [here](https://raw.githubusercontent.com/Copilot-Language/copilot/master/copilot-bluespec/DESIGN.md).


  ## License
  Copilot is distributed under the BSD-3-Clause license, which can be found
  [here](https://raw.githubusercontent.com/Copilot-Language/copilot/master/copilot-bluespec/LICENSE).
description-type: markdown
hash: ab3c139564bab19c9bdcb69bd15dd1bbef8375e24c07376a9a5c1e132f1ccd0c
homepage: https://copilot-language.github.io
latest: '4.2'
license-name: BSD-3-Clause
maintainer: Ryan Scott <rscott@galois.com>
synopsis: A compiler for Copilot targeting FPGAs.
test-bench-deps:
  HUnit: '>=0'
  QuickCheck: '>=0'
  base: '>=0'
  copilot-bluespec: '>=0'
  copilot-core: '>=0'
  directory: '>=0'
  extra: '>=0'
  ieee754: '>=0'
  pretty: '>=0'
  process: '>=0'
  random: '>=0'
  test-framework: '>=0'
  test-framework-hunit: '>=0'
  test-framework-quickcheck2: '>=0'
  unix: '>=0'
