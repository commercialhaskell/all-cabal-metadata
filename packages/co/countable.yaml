homepage: https://github.com/AshleyYakeley/countable
changelog-type: markdown
hash: 4c1d43a9886ddd9ef02b3df7042122d8cf3390256d51b061b24365b682652ad2
test-bench-deps:
  bytestring: -any
  base: '>=4.15 && <5'
  tasty-golden: -any
  silently: -any
  tasty-hunit: -any
  tasty: -any
  countable: -any
maintainer: <ashley@semantic.org>
synopsis: Countable, Searchable, Finite, Empty classes
changelog: |
  ## [1.2] - 2022-04-29
  - orphan instances in separate modules

  ## [1.1] - 2022-04-28
  - removed None type (use Void instead)
  - new Singular class
  - hid Data.Expression

  ## [1.0] - 2016-06-22
basic-deps:
  base: '>=4.15 && <5'
all-versions:
- '0.1'
- '0.2'
- '1.0'
- '1.1'
- '1.2'
author: Ashley Yakeley
latest: '1.2'
description-type: haddock
description: |-
  * @class Countable@, for countable types

  * @class AtLeastOneCountable@, for countable types that have at least one value

  * @class InfiniteCountable@, for infinite countable types

  * @class Searchable@, for types that can be searched over. This turns out to include some infinite types, see <http://math.andrej.com/2007/09/28/seemingly-impossible-functional-programs/>.

  * @class Finite@, for finite types

  * @class Singular@, for singular (n = 1) types

  * @class Empty@, for empty (n = 0) types

  Some orphan instances (in their own modules):

  * @(Searchable a,Eq b) => Eq (a -> b)@ / /

  * @Finite t => Foldable ((->) t)@ / /

  * @Finite a => Traversable ((->) a)@ / /

  * @(Show a,Finite a,Show b) => Show (a -> b)@ / /
license-name: BSD-3-Clause
