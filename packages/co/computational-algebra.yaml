all-versions:
- 0.0.1.0
- 0.0.1.1
- 0.0.2.0
- 0.0.3.0
- 0.0.3.1
- 0.0.3.2
- 0.1.0.0
- 0.1.0.1
- 0.1.1.0
- 0.1.2.0
- 0.1.3.0
- 0.1.3.1
- 0.1.3.5
- 0.1.3.6
- 0.2.0.0
- 0.3.0.0
- 0.4.0.0
- 0.5.0.0
- 0.5.1.0
author: Hiromi ISHII
basic-deps:
  ListLike: '>=4.5 && <4.6'
  MonadRandom: '>=0.1 && <0.6'
  algebra: '>=4.1 && <4.4'
  algebraic-prelude: '>=0.1.1.0 && <0.2'
  arithmoi: '>=0.5 && <0.7'
  base: '>=4 && <4.11'
  computational-algebra: '>=0'
  constraints: '>=0.3 && <0.10'
  containers: '>=0.5 && <0.6'
  control-monad-loop: '>=0.1 && <0.2'
  convertible: '>=1.1 && <1.2'
  criterion: '>=0.8.1.0 && <1.3'
  deepseq: '>=1.3 && <1.5'
  dlist: '>=0.8 && <0.9'
  entropy: '>=0.3.8 && <0.4'
  equational-reasoning: '>=0.4 && <0.6'
  ghc-typelits-knownnat: '>=0.3.1 && <0.4'
  ghc-typelits-natnormalise: '>=0.5 && <0.6'
  ghc-typelits-presburger: '>=0.1.1.1 && <0.2'
  hashable: '>=1.1 && <1.3'
  heaps: '>=0.3 && <0.4'
  hmatrix: '>=0.16 && <0.19'
  hybrid-vectors: '>=0.1 && <0.3'
  integer-logarithms: '>=1.0 && <1.1'
  lens: '>=4.13 && <4.16'
  matrix: '>=0.3 && <0.4'
  monad-loops: '>=0.4 && <0.5'
  mono-traversable: '>=0.10 && <1.1'
  monomorphic: '>=0.0.3 && <0.1'
  mtl: '>=2.1 && <2.3'
  parallel: '>=3.2 && <3.3'
  primes: '>=0.2.1 && <0.3'
  random: '>=1.0 && <1.2'
  reflection: '>=2 && <2.2'
  semigroups: '>=0.15 && <0.19'
  singletons: '>=2.2 && <2.4'
  sized: '>=0.2 && <0.3'
  tagged: '>=0.7 && <0.9'
  template-haskell: '>=2.10 && <2.13'
  text: '>=0.11 && <1.3'
  type-natural: '>=0.7.1 && <0.8'
  unamb: '>=0.2 && <0.3'
  unordered-containers: '>=0.2 && <0.3'
  vector: '>=0.10 && <0.13'
  vector-algorithms: '>=0.7.0.1 && <0.8'
changelog: ''
changelog-type: ''
description: "Computational Algebra Library\n==============================\n[![Build
  Status](https://travis-ci.org/konn/computational-algebra.png?branch=master)](https://travis-ci.org/konn/computational-algebra)\n\n**For
  more detail, please read [Official Project Site](http://konn.github.io/computational-algebra/)**.\n\nOverview\n--------\nThe
  `computational-algebra` is the computational algebra system, implemented as a Embedded
  Domain Specific Language (*EDSL*) in [Haskell](https://www.haskell.org).\nThis library
  provides many functionality for computational algebra, especially ideal computation
  such as Groebner basis calculation.\n\nThanks to Haskell's powerful language features,
  this library achieves the following goals:\n\nType-Safety\n:   Haskell's static
  type system enforces **static correctness** and prevents you from violating invariants.
  \n\nFlexibility\n:   With the powerful type-system of Haskell,\n    we can write
  **highly abstract program** resulted in **easy-to-extend** system.\n\nEfficiency\n:
  \  Haskell comes with many **aggressive optimization mechanism** and **parallel
  computation features**,\n    which enables us to write efficient program.\n\nThis
  package currently provides the following functionalities:\n\n* Groebner basis calculation
  w.r.t. arbitrary monomial ordering\n    * Currently using Buchberger's algorithm
  with some optimization\n    * Faugere's F_4 algorithms is experimentally implemented,\n\t
  \ but currently not as fast as Buchberger's algorithm \n* Computation in the (multivariate)
  polynomial ring over arbitarary field and its quotient ring\n    * Ideal membership
  problem\n    * Ideal operations such as intersection, saturation and so on.\n    *
  Zero-dimensional ideal operation and conversion via FGLM algorithm\n    * Variable
  elimination\n* Find numeric solutions for polynomial system with real coefficient\n\nRequirements
  and Installation\n------------------------------\nOld version of this package is
  uploaded on [Hackage](http://hackage.haskell.org/package/computational-algebra),
  but it's rather outdated.\nMost recent version of `computational-algebra` is developed
  on GitHub.\n\nIt uses the most agressive language features recently implemented
  in [Glasgow Haskell Compiler](https://www.haskell.org/ghc/), so it requires at least
  GHC 8.0.1 and\nalso it depends on many packages currently not available on Hackage,
  but you can install it fairly easily with help of [The Haskell Tool Stack](https://docs.haskellstack.org/en/stable/README/).\n\n```zsh\n$
  curl -sSL https://get.haskellstack.org/ | sh\n  # if you haven't install Stack yet\n$
  git clone https://github.com/konn/computational-algebra\n$ cd computational-algebra\n$
  stack build\n```\n\nIn addition, you may need to install GSL and LAPACK (for matrix
  computation) beforehand.\nYou can install them via Homebrew (OS X), `apt-get`, or
  other major package management systems.\n\n### [Read More in Official Project Site](http://konn.github.io/computational-algebra/)\n"
description-type: markdown
hash: c653403e697549900868d043486f0ba73c1da798389fdfff6b2937ec32c61dfa
homepage: https://konn.github.com/computational-algebra
latest: 0.5.1.0
license-name: BSD-3-Clause
maintainer: konn.jinro_at_gmail.com
synopsis: Well-kinded computational algebra library, currently supporting Groebner
  basis.
test-bench-deps:
  HUnit: '>=1.2.5.2 && <1.7'
  MonadRandom: '>=0'
  QuickCheck: '>=2.6 && <2.11'
  algebra: '>=0'
  base: '>=4'
  computational-algebra: '>=0'
  constraint: '>=0'
  constraints: '>=0'
  containers: '>=0'
  convertible: '>=0'
  criterion: '>=0'
  deepseq: '>=0'
  equational-reasoning: '>=0'
  hspec: '>=1.9.5 && <2.5'
  lazysmallcheck: '>=0.6 && <0.7'
  lens: '>=0'
  matrix: '>=0'
  monomorphic: '>=0'
  parallel: '>=0'
  process: '>=1.1 && <1.7'
  quickcheck-instances: '>=0.3.8 && <0.4'
  random: '>=0'
  reflection: '>=0'
  singletons: '>=0'
  sized: '>=0'
  smallcheck: '>=1.1.1 && <1.2'
  tagged: '>=0'
  test-framework: '>=0.8.0.3 && <0.9'
  test-framework-hunit: '>=0.3.0.1 && <0.4'
  text: '>=0'
  transformers: '>=0'
  type-natural: '>=0'
  vector: '>=0'
