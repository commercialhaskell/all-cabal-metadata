all-versions:
- 0.1.0.0
- 0.1.0.1
- 0.1.0.2
- 0.1.0.3
- 0.1.0.4
- 0.1.1.0
- 0.1.1.1
- 0.1.2.0
- 0.1.2.1
- 0.1.2.2
- 0.1.2.3
- 0.1.2.4
- 0.2.0.0
author: Isaac Shapira
basic-deps:
  QuickCheck: '>=0'
  aeson: '>=0'
  base: '>=4.9 && <4.16'
  base-compat: '>=0'
  bifunctors: '>=0'
  containers: '>=0'
  contravariant: '>=0'
  data-default-class: '>=0'
  deepseq: '>=0'
  hashable: '>=0'
  keys: '>=0'
  lens: '>=0'
  semigroupoids: '>=0'
  these: '>=0'
  transformers: '>=0'
  transformers-compat: '>=0'
  unordered-containers: '>=0'
  vector: '>=0'
  vector-instances: '>=0'
changelog: |
  # Revision history for Compactable

  ## 0.1.0.0  -- YYYY-mm-dd

  * First version. Released on an unsuspecting world.
changelog-type: markdown
description: This provides polymorphic implementations for filter, compact (catMaybes),
  and separate. It allows for higher performance implementations to be used in place
  of defaults for all data structures, and endeavors to centerally document those
  implementations. Compactable aims to be as general and unconstrained as possible,
  providing instances for non-Functors like Set, as well as some Contravariants (though
  not published here). Compactable fully subsumes Data.Witherable, offers more laws,
  and is more general.
description-type: haddock
hash: 1f2f292bbc9cc7ca21091c239120169fb370d7860aae381e5a23e82e5c144ef1
homepage: ''
latest: 0.2.0.0
license-name: BSD-3-Clause
maintainer: fresheyeball@protonmail.com
synopsis: A typeclass for structures which can be catMaybed, filtered, and partitioned.
test-bench-deps:
  QuickCheck: '>=0'
  base: '>=0'
  compactable: '>=0'
  containers: '>=0'
  genvalidity: '>=0'
  genvalidity-sydtest: '>=0'
  sydtest: '>=0'
  sydtest-discover: '>=0'
  these: '>=0'
  vector: '>=0'
