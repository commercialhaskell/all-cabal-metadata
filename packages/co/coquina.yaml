all-versions:
- 0.1.0.0
author: Obsidian Systems LLC
basic-deps:
  async: '>=2.2.2 && <2.3'
  base: '>=4.12.0 && <4.15'
  bytestring: '>=0.10.8 && <0.11'
  containers: '>=0.6.0 && <0.7'
  coquina: '>=0'
  deepseq: '>=1.4.4 && <1.5'
  directory: '>=1.3.3 && <1.4'
  exceptions: '>=0.10.3 && <0.11'
  filepath: '>=1.4.2 && <1.5'
  monad-logger: '>=0.3 && <0.4'
  mtl: '>=2.2.2 && <2.3'
  process: '>=1.6.5 && <1.7'
  stm: '>=2.5.0 && <2.6'
  temporary: '>=1.3 && <1.4'
  text: '>=1.2.3 && <1.3'
  transformers: '>=0.5 && <0.6'
changelog: |
  # Revision history for coquina

  ## 0.1.0.0

  * First version. A few simple functions for running shell commands and
    retrieving their output.
  * Uses Text instead of String for stdout and stderr. This allows us to properly
    handle processes which print non-Latin1 characters. UTF-8 encoding is
    assumed.
changelog-type: markdown
description: |
  # coquina
  [![Haskell](https://img.shields.io/badge/language-Haskell-orange.svg)](https://haskell.org) [![Hackage](https://img.shields.io/hackage/v/coquina.svg)](https://hackage.haskell.org/package/coquina) [![Hackage CI](https://matrix.hackage.haskell.org/api/v2/packages/coquina/badge)](https://matrix.hackage.haskell.org/#/package/coquina) [![Github CI](https://github.com/obsidiansystems/coquina/workflows/github-action/badge.svg)](https://github.com/obsidiansystems/coquina/actions) [![BSD3 License](https://img.shields.io/badge/license-BSD3-blue.svg)](https://github.com/obsidiansystems/coquina/blob/master/LICENSE)

  > *coquina*
  > /kōˈkēnə/
  > 1. a soft limestone of broken shells, used in road-making in the Caribbean and Florida.
  > 2. an easy-to-use library for running shell commands from haskell.

  ```haskell
  import Control.Monad
  import Coquina
  import System.Process (shell, proc)
  import qualified Data.Text as T

  main :: IO ()
  main = do
    (exitCode, out, err) <- execShell $ do
      (contents, ()) <- readStdout $ run $ shell "ls"
      mapM_ (run . proc "file" . (:[])) $ take 10 $ lines $ T.unpack contents
    putStrLn $ unlines
      [ "Exit code: " ++ show exitCode
      , "stdout: " ++ T.unpack out
      , "stderr: " ++ T.unpack err
      ]
  ```
description-type: markdown
hash: 87d1aca925e50ee19af17b6c4476f7ee8014321fb391d68b0596524b1e032bfd
homepage: ''
latest: 0.1.0.0
license-name: BSD-3-Clause
maintainer: maintainer@obsidian.systems
synopsis: Yet another shell monad.
test-bench-deps:
  async: '>=0'
  base: '>=0'
  coquina: '>=0'
  exceptions: '>=0'
  hspec: '>=0'
  lens: '>=0'
  mtl: '>=0'
  process: '>=0'
  stm: '>=0'
  temporary: '>=0'
  text: '>=0'
  which: '>=0.2'
