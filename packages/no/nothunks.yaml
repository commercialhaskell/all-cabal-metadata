all-versions:
- 0.1.0.0
- 0.1.1.0
- 0.1.2
- 0.1.3
- 0.1.4
- 0.1.5
- 0.2.0
- 0.2.1.0
- 0.2.1.1
author: IOG
basic-deps:
  base: '>=4.12 && <5'
  bytestring: '>=0.10 && <0.13'
  containers: '>=0.5 && <0.8'
  ghc-heap: '>=0'
  stm: '>=2.5 && <2.6'
  text: '>=1.2 && <1.3 || >=2 && <2.2'
  time: '>=1.5 && <1.13'
  vector: '>=0.12 && <0.14'
changelog: |
  # Revision history for nothunks

  ## 0.2.1.0 -- 2024-02-06

  * Exported `mkThunkInfo`.
  * Test support of `ghc-9.10`.

  ## 0.2.1.0 -- 2024-02-06

  * Support `wherefrom` with `GHC-9.2` or newer. (Teo Camarasu, [#49](https://github.com/input-output-hk/nothunks/pull/49))

  ## 0.2.0 -- 2024-01-27

  * Use `whereFrom` to get source information, which is avialable when the source
    is compiled with `GHC-9.6` (or newer) and with `-finfo-table-map` (and even
    more accurate when `-fdistinct-constructor-table` is passed).
    For that reason the `ThunkInfo` type has changed.
  * `NoThunks` instance for `Data.Tuple.Solo`.
  * `NoThunks` instances for `Data.Semigroup` and `Data.Monoid` newtype wrappers.

  ## 0.1.5 -- 2023-10-29

  * `NoThunks ThreadId` instance.
  * `NoThunks Identity` instance
  * Fix tests on ghc 9.8.
    Andreas Abel <andreas.abel@gu.se>
  * Tested with ghc 8.10 to 9.8.

  ## 0.1.4 -- 2023-03-27

  * Made cabal flags manual.
  * Support ghc-9.2 to 9.6.
  * `ThunkInfo` is a newtype.

  ## 0.1.3 -- 2021-06-28

  * Fix tests on ghc-9.0.1
    Joe Hermaszewski <git@monoid.al>
  * Make bytestring, text and vector optional dependencies
    Bodigrim <andrew.lelechenko@gmail.com>

  ## 0.1.2 -- 2020-12-03

  * Add IORef, MVar and TVar instances.
    Oleg Grenrus <oleg.grenrus@iki.fi>

  ## 0.1.1.0 -- 2020-09-29

  * Export `Context` and `GWNoThunks`
  * Fix typos in Haddocks
  * Improve bounds (and add upper bounds)

  ## 0.1.0.0 -- 2020-09-09

  * Initial public release
changelog-type: markdown
description: "# nothunks\n\n[![CI Tests](https://github.com/input-output-hk/nothunks/actions/workflows/ci.yml/badge.svg)](https://github.com/input-output-hk/nothunks/actions/workflows/ci.yml)\n\n\nLong
  lived application data typically should not contain any thunks. This\nlibrary can
  be used to examine values for unexpected thunks, which can then be\nused in assertions.
  This can be invaluable in avoiding memory leaks, or tracking\ndown existing ones.\n\nSee
  my presentation\n[MuniHac 2020: Being lazy without being bloated](https://www.youtube.com/watch?v=7t6wt7ByBWg)\nfor
  an overview, motivating the library and explaining how it is intended to be\nused
  and how it works internally.\n\n\n`nothunks` will try to get source information
  from info tables. For that one\nneeds to use `GHC` `9.2` or newer and compile the
  code with\n`-finfo-table-map`.  More precise information will be available if\n`-fdistinct-constructor-tables`
  flag is used as well.  \n"
description-type: markdown
hash: 4ece69fe8195af3dafbf584fbf1d614f1f00a70e4ffc29f40e085357816cedd3
homepage: ''
latest: 0.2.1.1
license-name: Apache-2.0
maintainer: Marcin Szamotulski <coot@coot.me>
synopsis: Examine values for unexpected thunks
test-bench-deps:
  base: '>=0'
  containers: '>=0'
  ghc-prim: '>=0'
  hedgehog: '>=1.1 && <1.5'
  nothunks: '>=0'
  random: '>=1.1 && <1.3'
  stm: '>=0'
  tasty: '>=1.3 && <1.6'
  tasty-hedgehog: '>=1.1 && <1.5'
