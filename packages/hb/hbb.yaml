all-versions:
- 0.3.0.0
- 0.3.0.1
- 0.4.0.0
- 0.4.0.2
author: Christian Wolf
basic-deps:
  base: '>=4 && <5'
  directory: '>=1.2'
  ghc: '>=0'
  ghc-mod: '>=5.1.0 && <5.1.1'
  ghc-paths: '>=0'
  libhbb: '>=0.4 && <0.5'
changelog: "\nVersion 0.4.0.2\n---------------\n\n - Adding CHANGELOG.md and README.md
  to the cabal package.\n\nVersion 0.4.0.0\n---------------\n - Vim plugin is how
  shipped (only for mode inline)\n - The mode inline is enabled to omit the leading
  'case' if not needed.\n - Integrating the test mode apply-ttree.\n - Where clauses
  can now be converted to let-expressions (in mode inline and\n   smart-inline). This
  is only done if this provides the possibility to leave\n   out a leading 'case'
  expression.\n    \n"
changelog-type: markdown
description: "# **hbb**: Extraordinary Haskell programming\r\n\r\nThis project aims
  to create a tool which should be easily embeddable in text\r\neditors to assist
  them to provide extraordinary editing features for the\r\nHaskell programming language.
  To archieve this, the tool will is based on the\r\nlibrary of the Glasgow Haskell
  Compiler (GHC) and the tool *ghc-mod* which\r\nalready improves text editors with
  a certain number of features.\r\n\r\nThe name **hbb** is short for *h*askell *b*usy
  *b*ee and should remind one of\r\nthe programmers using it.\r\n\r\nThe central library
  of *hbb* has been split apart into its own cabal package\r\nwhich has the name *libhbb*.
  This library also ships an executable (named\r\n*libhbb-cli*) which has reduced
  functionality compared to *hbb*. *hbb* is able\r\nto provide much more functionality
  because it builds upon the library of\r\n*ghc-mod*. Altogether the following dependencies
  materialize:\r\n\r\n              +---------+\r\n              |   hbb   |\r\n              +---------+\r\n
  \              | (exe) |\r\n               |       |\r\n               v       v\r\n
  \     +---------+     +--------+\r\n      | ghc-mod |     | libhbb |\r\n      +---------+
  \    +--------+\r\n      (lib & exe)     (lib & exe)\r\n\r\n*hbb* as well as *ghc-mod*
  (as well as *libhbb-cli*) have different mode of\r\noperations which are dictated
  by a command line parameter. The target of\r\n*hbb* is it to extend *ghc-mod* which
  has currently (as of 2014-09-23) a total\r\nof 16 modes (including things like *help*)
  by certain things.\r\n\r\nOne outstanding feature *hbb* wants to add is the ability
  to replace the\r\noccurence of a function name by an inlined version of its body
  (its lambda\r\nrepresentation).\r\n\r\n# Extract from the *hbb help*\r\n\r\n    hbb
  version 0.4.0.0 compiled by GHC 7.6.3\r\n    Usage:\r\n      hbb list [-g GHC_opt1
  -g GHC_opt2 ...] [-l] [-d]\r\n      hbb lang [-l]\r\n      hbb flag [-l]\r\n      hbb
  browse [-g GHC_opt1 -g GHC_opt2 ...] [-l] [-o] [-d] [-q] [<package>:]<module> [[<package>:]<module>
  ...]\r\n      hbb check  [-g GHC_opt1 -g GHC_opt2 ...] <HaskellFiles...>\r\n      hbb
  expand [-g GHC_opt1 -g GHC_opt2 ...] <HaskellFiles...>\r\n      hbb debug  [-g GHC_opt1
  -g GHC_opt2 ...] \r\n      hbb info   [-g GHC_opt1 -g GHC_opt2 ...] <HaskellFile>
  <module> <expression>\r\n      hbb type   [-g GHC_opt1 -g GHC_opt2 ...] <HaskellFile>
  <module> <line-no> <column-no>\r\n      hbb split  [-g GHC_opt1 -g GHC_opt2 ...]
  <HaskellFile> <module> <line-no> <column-no>\r\n      hbb sig    [-g GHC_opt1 -g
  GHC_opt2 ...] <HaskellFile> <module> <line-no> <column-no>\r\n      hbb refine [-g
  GHC_opt1 -g GHC_opt2 ...] <HaskellFile> <module> <line-no> <column-no> <expression>\r\n
  \     hbb auto   [-g GHC_opt1 -g GHC_opt2 ...] <HaskellFile> <module> <line-no>
  <column-no>\r\n      hbb find <symbol>\r\n      hbb lint [-h opt] <HaskellFile>\r\n
  \     ---------- modes supported by libhbb ------------\r\n      hbb locate         [-g
  GHC_opt1 -g GHC_opt2 ...]               <HaskellFile> <line-no> <column-no>\r\n
  \     hbb inline         [-g GHC_opt1 -g GHC_opt2 ...] [--adapt-ind] <HaskellFile>
  <line-no> <column-no> [<line-no> <column-no>]\r\n      hbb smart-inline   [-g GHC_opt1
  -g GHC_opt2 ...] [--adapt-ind] <HaskellFile> <line-no> <column-no> [<line-no> <column-no>]\r\n
  \     hbb occurrences-of [-g GHC_opt1 -g GHC_opt2 ...]               <HaskellFile>
  <line-no> <column-no> [<HaskellFile> ...]\r\n      hbb exprtype       [-g GHC_opt1
  -g GHC_opt2 ...]               <HaskellFile> <expression>\r\n      hbb apply-to
  \      [-g GHC_opt1 -g GHC_opt2 ...] [-q] <Function of String to String> <Subject
  of String>\r\n      --- end of modes supported by libhbb ------------\r\n      hbb
  root\r\n      hbb doc <module>\r\n      hbb boot\r\n      hbb version\r\n      hbb
  help\r\n\r\n    <module> for \"info\" and \"type\" is not used, anything is OK.\r\n
  \   It is necessary to maintain backward compatibility.\r\n\r\n      -l           --tolisp
  \             print as a list of Lisp\r\n      -h hlintOpt  --hlintOpt=hlintOpt
  \  hlint options\r\n      -g ghcOpt    --ghcOpt=ghcOpt       GHC options\r\n      -v
  \          --verbose             verbose\r\n      -o           --operators           print
  operators, too\r\n      -d           --detailed            print detailed info\r\n
  \     -q           --qualified, --quiet  show qualified names / suppress warning
  (quiet) in mode apply-to\r\n      -b sep       --boundary=sep        specify line
  separator (default is Nul string)\r\n                   --adapt-ind           Adapt
  the indentation of non-first lines to the (possibly higher) ind of the target environment\r\n"
description-type: markdown
hash: 1f56e3aa78141e68b6b89646fca2a2272fc9d49154fd7d5edce72b4f321735d1
homepage: https://bitbucket.org/bhris/hbb
latest: 0.4.0.2
license-name: LGPL-2.1-only
maintainer: contact@wolf-kissendorf.de
synopsis: Haskell Busy Bee, a backend for text editors.
test-bench-deps: {}
