all-versions:
- 0.1.0.0
- 0.2.0.0
- 0.2.2.0
- 0.3.0.0
- 0.4.0.0
- 0.4.0.1
- 0.4.1.0
- 0.4.1.1
- 0.5.0.0
- 0.6.0.0
- 0.6.1.0
author: Sam Truzjan
basic-deps:
  base: '>=4 && <5'
  bencoding: '>=0.4.3'
  bytestring: '>=0.10'
  containers: '>=0'
  data-default-class: '>=0'
  lifted-base: '>=0.1.1'
  monad-control: '>=0.3'
  monad-logger: '>=0.3'
  mtl: '>=0'
  network: '>=2.3'
  text: '>=0.11'
  transformers: '>=0.2'
changelog: "2014-02-19  Sam Truzjan  <pxqr.sta@gmail.com>\n\n\t0.6.0.0\n\n\tAPI changes:\n\n\t*
  Added isActive: this predicate can be used to implement\n\tMonadActive instance
  and useful for resource\n\tinitialization/finalization sanity check.\n\n2014-01-08
  \ Sam Truzjan  <pxqr.sta@gmail.com>\n\n\t0.6.0.0: Logging + exceptions.\n\n\tAPI
  changes:\n\n\t* MonadLogger is superclass of MonadKRPC;\n\t* KError hidden from
  Network.KRPC;\n\t* HandlerFailure added;\n\t* QueryFailure and getQueryCount added.\n\n2013-12-25
  \ Sam Truzjan  <pxqr.sta@gmail.com>\n\n\t0.5.0.0: Major API changes.\n\n\t* Added
  transaction handling;\n\t* Use the same socket for server and client;\n\t* New query
  function will infer query method from request/response\n\tdatatypes.\n\t* Added
  MonadKRPC and KRPC classes.\n\n2013-11-26  Sam Truzjan  <pxqr.sta@gmail.com>\n\n\t*
  0.4.1.1: Fixed build failure on GHC == 7.4.*\n\n2013-10-17  Sam Truzjan  <pxqr.sta@gmail.com>\n\n\t*
  0.4.1.0: Use bencoding-0.4.*\n\n2013-10-03  Sam Truzjan  <pxqr.sta@gmail.com>\n\n\t*
  0.4.0.1: Minor documentation fixes.\n\n2013-10-03  Sam Truzjan  <pxqr.sta@gmail.com>\n\n\t*
  0.4.0.0: IPv6 support.\n\n2013-09-28  Sam Truzjan  <pxqr.sta@gmail.com>\n\n\t* 0.3.0.0:
  Use bencoding-0.3.*\n        * Rename Remote.* to Network.* modules.\n\n2013-09-28
  \ Sam Truzjan  <pxqr.sta@gmail.com>\n\n\t* 0.2.2.0: Use bencoding-0.2.2.*\n\n2013-08-27
  \ Sam Truzjan  <pxqr.sta@gmail.com>\n\n\t* 0.2.0.0: Async API have been removed,
  use /async/ package\n\tinstead.\n\t* Expose caller address in handlers.\n\n2013-07-09
  \ Sam Truzjan  <pxqr.sta@gmail.com>\n\n\t* 0.1.1.0: Allow passing raw argument\\/result
  dictionaries.\n\n2013-07-09  Sam Truzjan  <pxqr.sta@gmail.com>\n\n\t* 0.1.0.0: Initial
  version.\n"
changelog-type: text
description: |
  ### Synopsis

  KRPC is simple remote procedure call mechanism used by bittorrent DHT
  but might be used anywhere else.

  ### Description

  KRPC basically consisting of bencoded dictionaries sent over UDP. This
  implementation provides extra safiety by separation of procedure
  signature and implementation and baking procedure type in host
  language, thus it's hard to shoot yourself in the foot accidently.

  See bittorrent DHT [specification][spec] for detailed protocol
  description.

  ### Example

  TODO

  #### Modules

  * Remote.KRPC — simple interface which reduce all RPC related stuff to
    a few lines. Should be used in the first place.

  * Remote.KRPC.Protocol — raw protocol implementation.
  * Remote.KRPC.Scheme — message validation.

  ### Documentation

  For usage see examples in ```examples``` directory.
  For documentation see haddock generated documentation.

  ### Build Status [![Build Status][status-img]][status-link]

  ### Maintainer <pxqr.sta@gmail.com>

  Feel free to report bugs and suggestions via github
  [issue tracker][issues] or the mail.

  [spec]:        http://www.bittorrent.org/beps/bep_0005.html#krpc-protocol
  [status-img]:  https://travis-ci.org/cobit/krpc.png
  [status-link]: https://travis-ci.org/cobit/krpc
  [issues]:      https://github.com/cobit/krpc/issues
description-type: markdown
hash: 09da30438c0446dbae98e8e78f1581c3f3ab04ca205da67901bfbaa2e56d9bae
homepage: https://github.com/cobit/krpc
latest: 0.6.1.0
license-name: BSD-3-Clause
maintainer: Sam Truzjan <pxqr.sta@gmail.com>
synopsis: KRPC protocol implementation
test-bench-deps:
  QuickCheck: '>=0'
  base: '>=4 && <5'
  bencoding: '>=0'
  bytestring: '>=0'
  criterion: '>=0'
  hspec: '>=0'
  krpc: '>=0'
  monad-logger: '>=0'
  mtl: '>=0'
  network: '>=0'
  quickcheck-instances: '>=0'
