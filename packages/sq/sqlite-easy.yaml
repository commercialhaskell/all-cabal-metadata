all-versions:
- 0.2.0.1
- 1.0.0.0
- 1.0.1.0
- 1.1.0.0
- 1.1.0.1
author: Gil Mizrahi
basic-deps:
  base: '>=4.12 && <5'
  bytestring: '>=0'
  direct-sqlite: '>=0'
  migrant-core: '>=0'
  mtl: '>=0'
  resource-pool: '>=0.4 && <0.5'
  text: '>=0'
  unliftio-core: '>=0'
changelog: |
  ### 1.1.0.1

  * Make migrations containing transactions work.

  ### 1.1.0.0

  * Add `openWith` and `createSqlitePoolWith`.
  * `createSqlitePool` will now set the `foreign_keys` pragma and the `busy_timeout` pragma to 30000ms.

  ### 1.0.1.0

  * Fix compilation with direct-sqlite 2.3.29.

  ### 1.0.0.0

  * Bump resource-pool bounds to >=0.4 && <5.

  ### 0.2.0.1

  * Fix: finalize prepared statements even when errors are encountered.

  ### 0.2.0.0

  * Rework the API
    * Introduce the `SQLite a` type instead of `Database -> IO a` for `run`, `runWith`, `withDB`, `migrate`, and so on.
    * Introduce `withPool` and export `liftIO`, `fromString` and `void`.
    * Depend on `unliftio-core` and `mtl`.
  * Implement nested transactions via savepoints.
    * `asTransaction` renamed to `transaction`.
    * `cancelTransaction` split to `rollback` and `rollbackAll`.
changelog-type: markdown
description: |
  sqlite-easy
  ===========

  This library provides a primitive yet easy to use api for SQLite3 using the `direct-sqlite` library,
  resource pooling using `resource-pool`, and migrations using the `migrant` library.

  It might be useful for small toy projects and save a tiny bit of boilerplate.

  - [See the docs for more information](https://hackage.haskell.org/package/sqlite-easy)
  - [See an example app](https://github.com/soupi/sqlite-easy-example-todo)
description-type: markdown
hash: 99167019af8954aef53eca0b70d295058db91cdba9c5ac1b58cf549011417828
homepage: https://gitlab.com/gilmi/sqlite-easy
latest: 1.1.0.1
license-name: BSD-3-Clause
maintainer: gil@gilmi.net
synopsis: A primitive yet easy to use sqlite library.
test-bench-deps:
  base: '>=0'
  direct-sqlite: '>=0'
  hspec: '>=0'
  hspec-discover: '>=0'
  sqlite-easy: '>=0'
  text: '>=0'
  unliftio: '>=0'
