all-versions:
- 0.1.0.0
- 0.1.0.1
- 0.1.0.2
- 0.1.0.3
- 0.1.0.4
- 0.1.0.5
author: Aaron Allen
basic-deps:
  base: <5
  ghc: '>=9.6 && <9.13'
  ghc-exactprint: <1.13
  ghc-paths: <0.2
  syb: <0.8
  transformers: <0.7
changelog: |
  # Revision history for auto-split

  ## 0.1.0.5 -- 2025-09-07

  * Fix a bug with out of scope constructors

  ## 0.1.0.4 -- 2025-03-29

  * Add FIELDS pattern for autocompletion of missing record fields

  ## 0.1.0.3 -- 2025-03-04

  * Remove unnecessary parens for lambda case patterns

  ## 0.1.0.2 -- 2025-02-13

  * Minor improvements to the readme

  ## 0.1.0.1 -- 2025-02-08

  * Improvements to error reporting

  ## 0.1.0.0 -- 2025-02-01

  * First version. Released on an unsuspecting world.
changelog-type: markdown
description: "# auto-split \U0001F938\n\nA GHC plugin that performs automatic case
  splitting.\n\n### Usage\n\nThis plugin is intended to be used with GHCi or adjacent
  utilities such as\n`ghcid` and `ghciwatch` as a developement tool, not as a package
  dependency.\nHere is an example command for starting a REPL for a stack project
  with the\n`auto-split` plugin enabled (you may need to add `auto-split` to your\n`extra-deps`
  first):\n\n```\nstack repl my-project --package auto-split --ghci-options='-fplugin
  AutoSplit'\n```\n\nlikewise for a cabal project (you may need to run `cabal update`
  first):\n\n```\ncabal repl my-project --build-depends auto-split --repl-options='-fplugin
  AutoSplit'\n```\n\nWith the plugin enabled, use `SPLIT` in a pattern match for a
  case statement or\nfunction declaration. Compiling the module will then result in
  that pattern\nmatch being expanded to cover all missing cases.\n\nFor example, compiling
  this module\n\n```haskell\nmodule Foo where\n\nfoo :: Maybe Bool -> String\nfoo
  x = case x of\n  SPLIT -> undefined\n```\n\nresults in the module file being updated
  to\n\n```haskell\nmodule Foo where\n\nfoo :: Maybe Bool -> String\nfoo x = case
  x of\n  Just _ -> undefined\n  Nothing -> undefined\n```\n\nif the module is then
  changed to\n\n```haskell\nmodule Foo where\n\nfoo :: Maybe Bool -> String\nfoo x
  = case x of\n  Just SPLIT -> \"foo\"\n  Nothing -> \"bar\"\n```\n\ncompiling will
  result in\n\n```haskell\nmodule Foo where\n\nfoo :: Maybe Bool -> String\nfoo x
  = case x of\n  Just True -> \"foo\"\n  Just False -> \"foo\"\n  Nothing -> \"bar\"\n```\n\nThe
  `SPLIT` pattern can be used in this way anywhere a pattern match group\noccurs:
  case statements, lamba case, or function declarations.\n\nIf case splitting results
  in constructors or patterns that are not in scope,\nthey will be qualified with
  `NOT_IN_SCOPE`.\n\nCompilation will abort when case splitting occurs since the module
  file has\nbeen updated. This is done by having GHC emit a custom error. This error
  does\nnot indicate that something went wrong.\n\n### Bonus feature: Automatic record
  field enumeration\n\nUsing `FIELDS` with an incomplete record initialization will
  result in the\nmissing fields being added. For example, compiling this module\n\n```haskell\nmkFoo
  = FIELDS Foo { }\n```\n\nwill result in\n\n```haskell\nmkFoo = Foo { field1 :: _,
  field2 :: _ }\n```\n\n### Known limitations\n\n- A module must pass the type checker
  for splitting to occur, unless the\n  `-fdefer-type-errors` GHC flag is used.\n-
  Using `SPLIT` in a pattern match will insert patterns for _all_ missing cases\n
  \ in the group. It doesn't restrict to the position where `SPLIT` is used.\n- If
  the pattern match where `SPLIT` is being used contains a catch-all\n  wildcard case
  then the plugin will have no effect because there are no\n  missing patterns.\n-
  Doesn't work well with the view patterns syntax extension\n- Doesn't apply to code
  inside CPP conditional blocks\n- The plugin only supports certain GHC versions with
  the intent of supporting\n  the four latest release series, i.e. `9.6.*` thru `9.12.*`.
  The cabal file\n  indicates the currently supported versions.\n"
description-type: markdown
hash: 121730ce57a7d0a2a46380c0fea3ef2c460a59fbca802486cd9a4efdf21dc431
homepage: ''
latest: 0.1.0.5
license-name: BSD-3-Clause
maintainer: aaronallen8455@gmail.com
synopsis: Case splitting plugin
test-bench-deps:
  base: <5
  directory: '>=0'
  process: '>=0'
  tasty: '>=0'
  tasty-hunit: '>=0'
