all-versions:
- 0.0.0.0
- 0.0.1.0
- 0.0.1.1
- 0.1.0.0
- 0.1.0.1
- 0.1.0.2
- 0.1.0.3
- 0.2.0.0
- 0.2.0.1
- 0.2.0.2
- 0.2.0.3
- 0.2.0.4
- 0.2.0.5
- 0.2.0.6
- 0.2.1.0
- 0.2.2.0
- 0.2.3.0
- 0.3.0.0
author: Tom Sydney Kerckhove
basic-deps:
  aeson: '>=0'
  base: '>=4.7 && <5'
  bytestring: '>=0'
  containers: '>=0'
  hashable: '>=0'
  mtl: '>=0'
  scientific: '>=0'
  text: '>=0'
  time: '>=0'
  unordered-containers: '>=0'
  validity: '>=0'
  validity-scientific: '>=0'
  vector: '>=0'
changelog: |
  # Changelog

  ## [0.3.0.0] - 2024-07-19

  ### Added

  * `HasCodec` instances for:
      * `Const`
      * `Dual`
      * `Semigroup.First`
      * `Semigroup.Last`
      * `Monoid.First`
      * `Monoid.Last`


  ### Changed

  * Refactored `Codec` so it's input and output parameters have a representative, not nominal role.
    This means one can now use `deriving newtype` with the `HasCodec` class.
  * Fixed infinitely looping `Identity` instance
  * Improve the documentation of `time`-related codecs to show `<string>` instead of `<any>`.

  ## [0.2.3.0] - 2024-06-23

  ### Added

  * `Ord NumberBounds` instance

  ## [0.2.2.0] - 2023-11-20

  ### Added

  * `HasCodec Integer` and `HasCodec Natural` instances.

  ## [0.2.1.0] - 2023-10-06

  ### Added

  * `HasCodec a => HasCodec (Vector a)` instance.

  ## [0.2.0.6] - 2023-10-05

  ### Added

  * Forward-compatibility with `aeson >= 2.2`.

  ## [0.2.0.5] - 2023-08-27

  ### Added

  * JSON Object-specific versions of encoding and decoding functions
  * Documentation about how 'parseAlternative' and 'optionalField' together can be a pitfall.

  ## [0.2.0.4] - 2023-07-31

  ### Added

  * The `HasCodec Identity` instance, thanks @clintonmead!

  ## [0.2.0.3] - 2023-01-31

  ### Added

  * The `HasCodec Void` instance, thanks @i-am-tom!

  ## [0.2.0.2] - 2023-01-19

  ### Changed

  * Compatibility with `mtl-2.3.1`

  ## [0.2.0.1] - 2022-10-06

  ### Added

  * The `HasObjectCodec` type class

  ## [0.2.0.0] - 2022-07-21

  ### Added

  * `discriminatedUnionCodec` for discriminated unions

  ## [0.1.0.3] - 2022-07-14

  ### Changed

  * Doctest fix

  ## [0.1.0.2] - 2022-06-24

  ### Added

  * `scientificWithBoundsCodec` for a `NumberCodec` with bounds but without a name.

  ## [0.1.0.1] - 2022-05-03

  ### Changed

  * Generalised the type of `parseAlternative`.

  ## [0.1.0.0] - 2022-05-03

  ### Changed

  * Generalise type of `matchChoiceCodec` to allow for two different input types.
  * Add disjoint versions of `matchChoiceCodec` and `matchChoicesCodec`.
  * Functions `enumCodec`, `stringConstCodec`, and `shownBoundedEnumCodec` now produce disjoint codecs.

  ## [0.0.1.1] - 2022-04-26

  ### Added

  * Compatibility with `aeson >= 2.0.0.0`

  ## [0.0.1.0] - 2021-12-23

  ### Changed

  * `EitherCodec` now takes a `Union` to specify whether the union is disjoint or not.

  ### Added

  * `disjointEitherCodec` and `possiblyJointEitherCodec`.

  ## [0.0.0.0] - 2021-11-19

  First release.
changelog-type: markdown
description: ''
description-type: haddock
hash: 98c2d4da6a0419e73ca11469eabbdcca2324d33d7d04f995d0f18ba2938c3167
homepage: https://github.com/NorfairKing/autodocodec#readme
latest: 0.3.0.0
license-name: MIT
maintainer: syd@cs-syd.eu
synopsis: Self-documenting encoder and decoder
test-bench-deps:
  base: '>=4.7 && <5'
  doctest: '>=0'
