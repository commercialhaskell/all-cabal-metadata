all-versions:
- 0.10.0
- 0.10.1
- 0.10.2
- 0.10.3
- 0.10.4
- 0.10.5
- 0.11.0
- 0.11.1
- 0.11.2
- 0.12.0
- 0.12.1
- 0.12.2
- 0.12.3
- 0.13.0
- 0.13.1
- 0.14.0
- 0.14.1
author: |-
  Simon Hengel <sol@typeful.net>,
  João Cristóvão <jmacristovao@gmail.com>,
  Ryan Scott <ryan.gl.scott@gmail.com>
basic-deps:
  OneTuple: '>=0.4 && <0.5'
  base: '>=4.9 && <5'
  base-compat: ==0.14.1
  bifunctor-classes-compat: '>=0.1 && <0.2'
  contravariant: '>=1.5 && <1.6'
  foldable1-classes-compat: '>=0.1 && <0.2'
  ghc-prim: '>=0'
  type-equality: '>=1 && <1.1'
changelog: |
  ## Changes in 0.14.1 [2024.12.06]
   - This coincides with the `base-compat-batteries-0.14.1` release. Refer to the
     [`base-compat-batteries` changelog](https://github.com/haskell-compat/base-compat/blob/master/base-compat-batteries/CHANGES.markdown#changes-in-0141-20241206)
     for more details.
   - Drop support for pre-8.0 versions of GHC.

  ## Changes in 0.14.0 [2024.04.30]
   - This coincides with the `base-compat-batteries-0.14.0` release. Refer to the
     [`base-compat-batteries` changelog](https://github.com/haskell-compat/base-compat/blob/master/base-compat-batteries/CHANGES.markdown#changes-in-0140-20240430)
     for more details.

  ## Changes in 0.13.1 [2023.10.11]
   - This coincides with the `base-compat-batteries-0.13.1` release. Refer to the
     [`base-compat-batteries` changelog](https://github.com/haskell-compat/base-compat/blob/master/base-compat-batteries/CHANGES.markdown#changes-in-0131-20231011)
     for more details.

  ## Changes in 0.13.0 [2023.03.10]
   - This coincides with the `base-compat-0.13.0` release. Refer to the
     [`base-compat` changelog](https://github.com/haskell-compat/base-compat/blob/master/base-compat/CHANGES.markdown#changes-in-0130-20230310)
     for more details.
   - Require `OneTuple-0.4` or later on GHC 7.4+, as that is the first `OneTuple`
     release to backport the `MkSolo` data constuctor for `Solo`. See
     `Data.Tuple.Compat`.
   - Introduce `Data.Foldable1.Compat` and `Data.Bifoldable1.Compat` modules,
     which correspond to changes made in `base-4.18.0.0`. `base-compat-batteries`
     uses the `foldable1-classes-compat` library to backport this code to older
     versions of `base`.
   - Depend on `bifunctor-classes-compat` to backport the `Bifunctor`,
     `Bifoldable`, and `Bitraversable` classes instead of the
     `bifunctors` library, which has more dependencies.

  ## Changes in 0.12.3 [2023.07.12]
   - Allow building with `OneTuple-0.4.*`.

  ## Changes in 0.12.2 [2022.08.11]
   - This coincides with the `base-compat-0.12.2` release. Refer to the
     [`base-compat` changelog](https://github.com/haskell-compat/base-compat/blob/master/base-compat/CHANGES.markdown#changes-in-0122-20220811)
     for more details.

  ## Changes in 0.12.1 [2021.10.30]
   - Backport `Solo` to the `Data.Tuple.Compat` module. If using `ghc-prim-0.7.0`
     or later, `Solo` is taken from `ghc-prim`. If using an older version of
     `ghc-prim`, `Solo` is taken from the `OneTuple` compatibility library.

   - This coincides with the `base-compat-0.12.1` release. Refer to the
     [`base-compat` changelog](https://github.com/haskell-compat/base-compat/blob/master/base-compat/CHANGES.markdown#changes-in-0121-20211030)
     for more details.

  ## Changes in 0.12.0 [2021.08.29]
   - `Data.Semigroup.Compat{.Repl.Batteries}` no longer re-exports the `Option`
     data type or the `option` function, as both have been removed in
     `base-4.16`.

   - This coincides with the `base-compat-0.12.0` release. Refer to the
     [`base-compat` changelog](https://github.com/haskell-compat/base-compat/blob/master/base-compat/CHANGES.markdown#changes-in-0120-20210829)
     for more details.

  ## Changes in 0.11.2 [2020.09.30]
   - This coincides with the `base-compat-0.11.2` release. Refer to the
     [`base-compat` changelog](https://github.com/haskell-compat/base-compat/blob/master/base-compat/CHANGES.markdown#changes-in-0112-20200930)
     for more details.

  ## Changes in 0.11.1 [2020.01.27]
   - This coincides with the `base-compat-0.11.1` release. Refer to the
     [`base-compat` changelog](https://github.com/haskell-compat/base-compat/blob/master/base-compat/CHANGES.markdown#changes-in-0111-20200127)
     for more details.

  ## Changes in 0.11.0 [2019.09.06]
   - Reexport `MonadFail(fail)` from `Prelude.Compat` and `Control.Monad.Compat`.

     Because `Prelude.Compat.fail` now corresponds to the `fail` from `MonadFail`
     instead of `Monad`, some care is required to implement `Monad.fail` on
     pre-8.8 versions of GHC. The following template is recommended:

     ```haskell
     import Prelude.Compat
     import qualified Control.Monad      as Monad
     import qualified Control.Monad.Fail as Fail

     data Blah a = ...

     instance Functor Blah where ...
     instance Applicative Blah where ...

     instance Monad.Monad Blah where
       (>>=) = ...
     #if !(MIN_VERSION_base(4,13,0))
       fail = Fail.fail
     #endif

     instance Fail.MonadFail Blah where
       fail = ...
     ```

     This approach is also backwards-compatible with previous releases of
     `base-compat-batteries`.

   - Introduce the `Data.Type.Equality.Compat` module, which
     reexports `Data.Type.Equality` from `base` (if using a sufficiently recent
     version of GHC) or the `type-equality` library (if using an old GHC).

   - This coincides with the `base-compat-0.11.0` release. Refer to the
     [`base-compat` changelog](https://github.com/haskell-compat/base-compat/blob/master/base-compat/CHANGES.markdown#changes-in-0110-20190906)
     for more details.

  ## Changes in 0.10.5 [2018.10.18]
   - This coincides with the `base-compat-0.10.5` release. Refer to the
     [`base-compat` changelog](https://github.com/haskell-compat/base-compat/blob/master/base-compat/CHANGES.markdown#changes-in-0105-20181018)
     for more details.

  ## Changes in 0.10.4 [2018.07.03]
   - Add a `SafeHaskellSpec` test which ensures that certain modules (such as
     `Prelude.Compat`) can be imported in the presence of `Safe`.
   - This coincides with the `base-compat-0.10.4` release. Refer to the
     [`base-compat` changelog](https://github.com/haskell-compat/base-compat/blob/master/base-compat/CHANGES.markdown#changes-in-0104-20180703)
     for more details.

  ## Changes in 0.10.3 [2018.07.02]
   - This coincides with the `base-compat-0.10.3` release. Refer to the
     [`base-compat` changelog](https://github.com/haskell-compat/base-compat/blob/master/base-compat/CHANGES.markdown#changes-in-0103-20180702)
     for more details.

  ## Changes in 0.10.2 [2018.07.02]
   - Sync with `base-4.12`/GHC 8.6
   - Introduce the `Data.Functor.Contravariant.Compat` module, which
     reexports `Data.Functor.Contravariant` from `base` (if using GHC 8.6 or
     later) or the `contravariant` library (if using an earlier version of GHC).
   - This coincides with the `base-compat-0.10.2` release. Refer to the
     [`base-compat` changelog](https://github.com/haskell-compat/base-compat/blob/master/base-compat/CHANGES.markdown#changes-in-0102-20180702)
     for more details.

  ## Changes in 0.10.1 [2018.04.10]
   - Add `Data.List.NonEmpty.Compat`.
   - Reexport `(Data.Semigroup.<>)` from `Data.Monoid.Compat`.
   - Tighten lower bounds of compat package dependencies.
   - This coincides with the `base-compat-0.10.1` release. Refer to the
     [`base-compat` changelog](https://github.com/haskell-compat/base-compat/blob/master/base-compat/CHANGES.markdown#changes-in-0101-20180410)
     for more details.

  ## Changes in 0.10.0 [2018.04.05]
   - Sync with `base-4.11`/GHC 8.4
   - This coincides with the `base-compat-0.10` release. Refer to the
     [`base-compat` changelog](https://github.com/haskell-compat/base-compat/blob/master/base-compat/CHANGES.markdown#changes-in-0100-20180405)
     for more details.
changelog-type: markdown
description: |
  # `base-compat` with extra batteries
  [![Hackage](https://img.shields.io/hackage/v/base-compat-batteries.svg)][Hackage: base-compat-batteries]
  [![Hackage Dependencies](https://img.shields.io/hackage-deps/v/base-compat-batteries.svg)](http://packdeps.haskellers.com/reverse/base-compat-batteries)
  [![Haskell Programming Language](https://img.shields.io/badge/language-Haskell-blue.svg)][Haskell.org]
  [![BSD3 License](http://img.shields.io/badge/license-MIT-brightgreen.svg)][tl;dr Legal: MIT]

  [Hackage: base-compat-batteries]:
    http://hackage.haskell.org/package/base-compat-batteries
    "base-compat-batteries package on Hackage"
  [Haskell.org]:
    http://www.haskell.org
    "The Haskell Programming Language"
  [tl;dr Legal: MIT]:
    https://tldrlegal.com/license/mit-license
    "MIT License"

  ## Scope

  `base-compat-batteries` provides functions available in later versions of
  `base` to a wider range of compilers, without requiring you to use CPP
  pragmas in your code.

  This package provides the same API as the
  [`base-compat`](http://hackage.haskell.org/package/base-compat) library, but
  depends on compatibility packages (such as `semigroups`) to offer a wider
  support window than `base-compat`, which has no dependencies.

  Like `base-compat`, `base-compat-batteries` does not add any orphan instances.
  There is a separate package
  [`base-orphans`](https://github.com/haskell-compat/base-orphans) for that.

  See [here](https://github.com/haskell-compat/base-compat/blob/master/base-compat/README.markdown#dependencies)
  for a more comprehensive list of differences between `base-compat` and
  `base-compat-batteries`.
description-type: markdown
hash: da5b0de54d5eaa630890b63fae694243b3c2a624648bab1878a7e4b0114ed38f
homepage: ''
latest: 0.14.1
license-name: MIT
maintainer: |-
  Simon Hengel <sol@typeful.net>,
  João Cristóvão <jmacristovao@gmail.com>,
  Ryan Scott <ryan.gl.scott@gmail.com>
synopsis: base-compat with extra batteries
test-bench-deps:
  QuickCheck: '>=0'
  base: '>=4.9 && <5'
  base-compat-batteries: '>=0'
  hspec: '>=1.8'
