homepage: https://github.com/emilypi/base32
changelog-type: markdown
hash: 61a5c1f457b619700ce600a43ce5e695cddd31f09aac540df23258bf9027ee9d
test-bench-deps:
  bytestring: -any
  text-short: -any
  base: '>=4.14 && <4.17'
  text: -any
  criterion: -any
  memory: -any
  random-bytestring: -any
  base32: -any
  tasty-quickcheck: -any
  tasty-hunit: -any
  tasty: -any
  deepseq: -any
  QuickCheck: -any
maintainer: emilypi@cohomolo.gy
synopsis: Fast RFC 4648-compliant Base32 encoding
changelog: |
  # Revision history for base32

  ## 0.2.2.0

  * Add support for GHC 9.2.x
  * Drop support for GHC <8.10
  * Drop dependency on `ghc-byteorder`
  * Bump bounds for `deepseq`

  ## 0.2.1.0

  * Expose `Data.ByteString.Base32.Internal` API
  * Use closed-form encoding/decoding length calculations, reducing branching and improving performance
  * Update tests:
    * Migrate to using lower heap-footprint concrete dict passing
    * Support for 8.10.5 testing


  ## 0.2.0.0

  * Bugfix: fix unpadded base32 encoding ([#4](https://github.com/emilypi/Base32/pull/4))
  * Bugfix: Use `decodeLatin1` when decoding, defer to `decodeWith*` primitives for finer-grained
            `Text` to `ByteString` conversions. ([#5](https://github.com/emilypi/Base32/pull/5))
  * Add short and lazy variants for `Text` and `ByteString` ([#6](https://github.com/emilypi/Base32/pull/6))
  * Expanded test coverage to 96% ([#7](https://github.com/emilypi/Base32/pull/7))
  * Improved performance and better error reporting in final quanta ([#9](https://github.com/emilypi/Base32/pull/9))
  * Improved docs + trustworthy/safe annotations ([#10](https://github.com/emilypi/Base32/pull/10))

  ## 0.1.1.1 -- 2020-02-16

  * Documentation now references correct RFC section

  ## 0.1.1 -- 2020-02-16

  * Textual interface now uses correct unpadded version

  ## 0.1.0.0 -- 2020-02-16

  * First version. Released on an unsuspecting world.
basic-deps:
  bytestring: '>=0.10 && <0.12'
  text-short: ^>=0.1
  base: '>=4.14 && <4.17'
  text: ^>=1.2
  deepseq: ^>=1.4
all-versions:
- 0.1.0.0
- 0.1.1
- 0.1.1.1
- 0.1.1.2
- 0.2.0.0
- 0.2.1.0
- 0.2.2.0
author: Emily Pillmore
latest: 0.2.2.0
description-type: markdown
description: |
  # Base32

  [![Build Status](https://travis-ci.com/emilypi/base32.svg?branch=master)](https://travis-ci.com/emilypi/base32)
  [![Hackage](https://img.shields.io/hackage/v/base32.svg)](https://hackage.haskell.org/package/base32)

  Padded and unpadded base32 and base32hex encoding and decoding for `Text` and `ByteString` values.

  For the companion optics and pattern synonyms, see [base32-lens](https://hackage.haskell.org/package/base32-lens).

  ### Summary

  The following types are supported for both padded and unpadded std and extended hex alphabets:

  - `Data.ByteString`
  - `Data.ByteString.Lazy`
  - `Data.ByteString.Short`
  - `Data.Text`
  - `Data.Text.Lazy`
  - `Data.Text.Short`

  Additionally this library has

  - Better performance than `memory` for encode and decode 3-4x.
  - Optics for handling more complex structures with Base32 representations via the `base32-lens` package
  - Checks for both validity and correctness of Base32 and Base32hex encodings

  There are no dependencies aside from those bundled with GHC, `text-short`, and the `ghc-byteorder` re-export.
license-name: BSD-3-Clause
