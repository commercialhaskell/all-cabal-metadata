all-versions:
- 0.1.0.0
- 0.1.1.0
- 0.2.0.0
- 0.2.0.1
- 0.3.0.0
- 0.3.0.1
- 0.3.0.2
author: Daniel Patterson <dbp@dbpmail.net>
basic-deps:
  base: '>=4.7 && <6'
  blaze-builder: '>=0'
  bytestring: '>=0'
  digestive-functors: '>=0'
  directory: '>=0'
  either: '>=0'
  fn: '>=0'
  heist: '>=0'
  http-types: '>=0'
  lens: '>=0'
  map-syntax: '>=0'
  mtl: '>=0'
  resourcet: '>=0'
  text: '>=0'
  wai: '>=0'
  wai-extra: '>=0'
  wai-util: '>=0'
  xmlhtml: '>=0'
changelog: |
  * 0.3.0.2 Libby Horacek <libby@positiondev.com> 2017-7-17

    - Don't send empty files to Digestive Functors.
    - Add support for Heist 1.0 and above.

  * 0.3.0.1 Daniel Patterson <dbp@dbpmail.net> 2016-3-11

    - Change repository location, copyright.

  * 0.3.0.0 Daniel Patterson <dbp@dbpmail.net> 2016-3-2

    - Switch Heist to use StateT rather than ReaderT, so splices can
      update context.
    - Add support for compiled heist.
    - Add support for digestive functors. Note: current (significant)
      limitation is that if you have _already_ parsed the request body
      with `!=>` then we can only use post params and not files. This is
      because `Fn` parses them to lazy bytestrings, but digestive
      functors wants them in temporary files, and for now, we're not
      converting (it could be done). But, the expectation is that if you
      are using digestive functors, you won't ever be parsing post
      bodies with `!=>`.

  * 0.2.0.1 Daniel Patterson <dbp@dbpmail.net> 2016-1-20

    - Fix for GHC 7.8.4, which cabal file said would work, but didn't.

  * 0.2.0.0 Daniel Patterson <dbp@dbpmail.net> 2015-11-5

    - Add `heistServe`, which serves templates according to path.
    - Remove `heistLens` and `setHeist` from `HeistContext` type class,
      as they aren't used.

  * 0.1.1.0 Daniel Patterson <dbp@dbpmail.net> 2015-10-30

    - Add `tag'`, which builds splices without atttributes.

  * 0.1.0.0 Daniel Patterson <dbp@dbpmail.net> 2015-10-26

    - Initial release.
changelog-type: markdown
description: |
  ## About

  This repository has some helpers that have heavier dependencies than
  core [fn](http://hackage.haskell.org/package/fn). In general, things get added
  here whenever using libraries on their own conflicts with the design
  goals of `Fn`. This could mean that there is a lot of boilerplate to
  get them set up, or they are heavily monadic (in which case the code
  here serves to make them use more normal functions).
description-type: markdown
hash: 1d455aaf08efd5d8ba130995d9a4193dec1932d724e290a9768d0bcdfdca12c7
homepage: http://github.com/positiondev/fn#readme
latest: 0.3.0.2
license-name: ISC
maintainer: workers@positiondev.com
synopsis: Extras for Fn, a functional web framework.
test-bench-deps: {}
