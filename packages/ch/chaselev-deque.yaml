all-versions:
- 0.1.2
- 0.1.3
- '0.4'
- 0.5.0.2
- 0.5.0.3
- 0.5.0.5
author: 'Ryan R. Newton, Edward Kmett '
basic-deps:
  abstract-deque: '>=0.3 && <0.4'
  array: '>=0'
  atomic-primops: '>=0.5.0.2'
  base: '>=4.4.0.0 && <5'
  ghc-prim: '>=0'
  transformers: '>=0'
  vector: '>=0'
changelog: ''
changelog-type: ''
description: |-
  A queue that is push/pop on one end and pop-only on the other.  These are commonly
  used for work-stealing.
  This implementation derives directly from the pseudocode in the 2005 SPAA paper:

  http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.170.1097&rep=rep1&type=pdf
description-type: haddock
hash: 7c2ae6933897c7323396c97f5d5e8f3463fc5f312a9a829d39fc7918a645e48f
homepage: https://github.com/rrnewton/haskell-lockfree/wiki
latest: 0.5.0.5
license-name: BSD-3-Clause
maintainer: rrnewton@gmail.com
synopsis: Chase & Lev work-stealing lock-free double-ended queues (deques).
test-bench-deps:
  HUnit: '>=0'
  abstract-deque: '>=0.3 && <0.4'
  abstract-deque-tests: '>=0.3'
  array: '>=0'
  atomic-primops: '>=0.5.0.2'
  base: '>=4.4.0.0 && <5'
  containers: '>=0'
  ghc-prim: '>=0'
  test-framework: '>=0'
  test-framework-hunit: '>=0'
  vector: '>=0'
