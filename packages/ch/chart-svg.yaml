all-versions:
- 0.0.1
- 0.0.2
- 0.0.3
- 0.1.0
- 0.1.1
- 0.1.2
- 0.1.3
- 0.2.0
- 0.2.1
- 0.2.2
- 0.2.3
- 0.3.0
- 0.3.1
- 0.3.2
- 0.3.3
- 0.4.0
- 0.4.1.0
- 0.4.1.1
- 0.5.1.0
- 0.5.1.1
- 0.5.2.0
- 0.6.0.0
- 0.6.1.0
- 0.7.0.0
author: Tony Day
basic-deps:
  Color: '>=0.3.2 && <0.4'
  base: '>=4.14 && <5'
  bytestring: '>=0.11.3 && <0.13'
  containers: '>=0.6 && <0.8'
  cubicbezier: '>=0.6 && <0.7'
  flatparse: '>=0.5 && <0.6'
  formatn: '>=0.3 && <0.4'
  harpie: '>=0.1 && <0.2'
  markup-parse: '>=0.1 && <0.2'
  mtl: '>=2.2.2 && <2.4'
  numhask: '>=0.11 && <0.13'
  numhask-space: '>=0.10 && <0.12'
  optics-core: '>=0.4 && <0.5'
  random: '>=1.2 && <1.3'
  string-interpolate: '>=0.3 && <0.5'
  text: '>=1.2 && <2.2'
  time: '>=1.9 && <1.15'
changelog: "0.7\n===\n\n- switch to harpie\n\n0.6.1\n===\n\n- numhask upper bound
  bumped to 0.12\n- switch to doctest-parallel\n\n0.6\n===\n\n0.6 is a major refactor.\n\n*
  Chart\n\n  - refactored Chart from a sum type to a named Style, ChartData pair.\n
  \ - in Chart (..) + chartStyle - style\n  - introduced ChartData\n  - integrated
  the various *Style types to a single type.\n  - introduced partial data lenses:
  *Data'\n  - added chart patterns: *Chart\n  - + blankChart1\n\n* ScaleP\n\n  - introduced
  the ScaleP type\n  - added scaleP to Style\n  - added the scaleP function\n  - -
  maybeProjectWith + projectChartDataWith\n  - - scaleStyle - overText + scaleChartData\n
  \ - + scaleRatio\n\n* Chart.Style\n  - integrated styles\n  - - colourChart + colourStyle\n
  \ - + Style (..)\n  - + defaultStyle\n  - + scaleStyle\n  - + default*Style\n  -
  + gpalette -gpalette1\n  \n* boxes\n  - added safeBox', safeStyleBox'\n\n* Chart.Compound\n\n*
  Factored State out of Hud\n  - ChartHud lenses removed: canvasBox', canvasStyleBox',
  hudBox', hudStyleBox'\n  - Introduced HudChartSection type and hudChartBox' which
  replaces ChartHud lenses.\n  - removed runHud\n  - removed hud effect functionality:
  closes, fromEffect, applyChartAspect, getHudBox\n  - new hud manipulation tools:
  appendHud, makeHuds, projectChartTreeWith, addHud, finalCanvas\n\n* Chart.Hud API\n
  \ - - axis + axisHud - title + titleHud - legend + legendHud\n  - removed placeText\n
  \ - added flipPlace\n  - + TitleOptions - Title\n  - - TickStyle + Tick\n  - + axisHud
  + titleHud\n  - - legend - legendFrame\n  - new tick lenses: + formatN', numTicks',
  tickExtend'\n  - In LegendOptions: + scaleChartBy - overallScale + legendSize -
  size\n  - In AxisOptions: + adjustments - adjust + axisBar - bar\n  \n* refactored
  Priority to a named pair\n\n* Chart.Markup\n  - added forgetHud\n  - - CssPreferColorScheme
  + PreferColorScheme\n  - - CssShapeRendering + ShapeRendering\n  - + defaultCssFontFamilies\n\n*
  Integrated chart styles to a single Style type\n\n* changed defaults\n  - + defaultXAxisOptions
  + defaultYAxisOptions - defaultAxisOptions\n  - - defaultGlyphTick + defaultGlyphTickStyleX
  + defaultGlyphTickStyleY\n  - - defaultTicks + defaultXTicks + defaultYTicks \n
  \ - + defaultTick - defaultTickStyle\n\n* Chart.Bar\n  - added barTextCharts\n  -
  added textShiftVert to BarOptions\n\n* Data.Colour\n  - + palette - palette1\n  -
  + paletteO - palette1a\n\n* Chart.Surface\n  - - surfaceLegendChart\n  - - surfaceAxisOptions\n
  \ - + surfaceLegendAxisOptions\n  - + gridReferenceChart\n  - + addSurfaceLegend\n\n*
  Chart.Data\n  - - singletonGuard + isSingleton\n\n\n0.5.1.1\n===\n* test suite removed\n\n0.5.1.0\n===\n*
  Bumped markup-parse lower bound to >=0.1\n* Renamed LegendOptions.content to LegendOptions.legendCharts\n*
  markup* functions now return Markup\n* renderStyle added as a MarkupOptions component\n\n0.5.0\n===\n*
  Library split into markup-parse and chart-svg.\n* test removed\n\n0.4.1\n===\n*
  Changes due to numhask-0.11 upgrade\n* remove broken surface legend\n\n0.4\n===\n\n-
  Markup type introduced, representing an abstract markup DSL that could be described
  as simplified but non-compliant XML\n  - Chart.Svg replaced by Chart.Markup & Chart.Markup.Parser\n
  \ - ChartSvg replaced by ChartOptions\n  - functionality includes both printing
  and parsing.\n  - the rendering pipeline is now ChartOptions => Markup => ByteString\n-
  lucid removed as a dependency.\n- tree-diff introduced in the test routines.\n-
  flatparse replaces attoparsec\n- string-interpolate replaces neat-interpolation\n\n0.3\n===\n\n-
  Chart type rewritten\n  - Chart data is no longer a separate element\n  - charts
  are monomorphic (underlying data is Double)\n- Aligned with prefer-color-scheme
  usage\n- oklab usage as per emerging CSS standards\n- chart-reanimate is a separate
  library\n- formatn is a seprate library\n- introduced a ChartTree type as a tree
  of named charts to facilitate downstream usage of classes.\n\n0.2.2\n===\n\n* Changed
  api for palette\n\n0.2.1\n===\n\n* Changed api for reanimate hooks.\n* Rationalised
  default options.\n\n0.2.0\n=====\n\n* Reanimate support. See app/reanimate-example.hs\n*
  Data.Path added: support for Path style charts.\n* Chart.Examples expanded\n* Improvements
  to documentation.\n* web-rep support removed.\n\n0.1.2\n=====\n\n* basic charts\n"
changelog-type: markdown
description: |2+

  # Table of Contents

  1.  [Usage](#org829f981)
  2.  [Examples](#orge2856e9)

  [![img](https://img.shields.io/hackage/v/chart-svg.svg)](https://hackage.haskell.org/package/chart-svg) [![img](https://github.com/tonyday567/chart-svg/workflows/haskell-ci/badge.svg)](https://github.com/tonyday567/chart-svg/actions?query=workflow%3Ahaskell-ci)

  ![img](other/banner.svg)

  A charting library targetting SVG.


  <a id="org829f981"></a>

  # Usage

      :r
      :set prompt "> "
      :set -XOverloadedLabels
      :set -XOverloadedStrings
      import Chart
      import Optics.Core
      lines = [[Point 0.0 1.0, Point 1.0 1.0, Point 2.0 5.0],[Point 0.0 0.0, Point 2.8 3.0],[Point 0.5 4.0, Point 0.5 0]]
      styles = (\c -> defaultLineStyle & #color .~ palette c & #size .~ 0.015) <$> [0..2]
      cs = zipWith (\s x -> LineChart s [x]) styles lines
      lineExample = mempty & #chartTree .~ named "line" cs & #hudOptions .~ defaultHudOptions :: ChartOptions
      writeChartOptions "other/usage.svg" lineExample

  ![img](other/usage.svg)

  See the haddock documentation for a detailed overview.


  <a id="orge2856e9"></a>

  # Examples

  To redraw all the examples in Chart.Examples

      import Chart.Examples
      writeAllExamples

      ok

description-type: markdown
hash: 62b2f38cef984eca146a1da23c60eb50c607e42e6d20775644d70b5c8fb8f5ea
homepage: https://github.com/tonyday567/chart-svg#readme
latest: 0.7.0.0
license-name: BSD-3-Clause
maintainer: tonyday567@gmail.com
synopsis: Charting library targetting SVGs.
test-bench-deps:
  base: '>=4.14 && <5'
  doctest-parallel: '>=0.3 && <0.4'
