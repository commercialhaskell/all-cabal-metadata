homepage: https://github.com/tonyday567/chart-svg#readme
changelog-type: ''
hash: e5bd8174a2622cbe0416654b03af25a8ed84bc2814d809bbfe4a7c8cf84325f9
test-bench-deps:
  numhask: '>=0.7 && <0.8'
  base: '>=4.7 && <5'
  chart-svg: -any
  doctest: '>=0.16 && <0.18'
maintainer: tonyday567@gmail.com
synopsis: Charting library targetting SVGs.
changelog: ''
basic-deps:
  reanimate: '>=1.1.1.0 && <1.2'
  numhask: ==0.7.*
  lucid: ==2.9.*
  JuicyPixels: '>=3.3.5 && <3.4'
  bytestring: '>=0.10 && <0.11'
  base: '>=4.7 && <5'
  time: ==1.9.*
  unordered-containers: ==0.2.*
  text: ==1.2.*
  Color: '>=0.3 && <0.4'
  chart-svg: -any
  reanimate-svg: ==0.13.*
  numhask-space: ==0.7.*
  lens: ==4.19.*
  linear: ==1.21.*
  concurrency: '>=1.11 && <1.12'
  cubicbezier: '>=0.6 && <0.7'
  foldl: ==1.4.*
  attoparsec: ==0.13.*
  generic-lens: '>=1.2 && <3.0'
  transformers: ==0.5.*
  scientific: '>=0.3 && <0.4'
  tagsoup: '>=0.14 && <0.15'
  vector: '>=0.12 && <0.13'
all-versions:
- 0.0.1
- 0.0.2
- 0.0.3
- 0.1.0
- 0.1.1
- 0.1.2
- 0.1.3
- 0.2.0
- 0.2.1
author: Tony Day
latest: 0.2.1
description-type: haddock
description: |-
  This package provides a charting library targetting SVG as the rendered output.

  == Usage

  >>> import Chart
  >>>
  >>> let xs = [[(0.0, 1.0), (1.0, 1.0), (2.0, 5.0)], [(0.0, 0.0), (3.0, 3.0)], [(0.5, 4.0), (0.5, 0)]] :: [[(Double, Double)]]
  >>> let ls = fmap (PointXY . uncurry Point) <$> xs
  >>> let anns = zipWith (\w c -> LineA (LineStyle w c Nothing Nothing Nothing Nothing)) [0.015, 0.03, 0.01] palette1
  >>> let lineChart = zipWith Chart anns ls
  >>> writeChartSvgHud "other/lineshud.svg" lineChart

  ![main example](docs/other/lineshud.svg)

  See "Chart" for a broad overview of concepts, and "Chart.Examples" for a variety of practical examples.
license-name: BSD-3-Clause
