homepage: https://github.com/andrewthad/chronos
changelog-type: ''
hash: b38c48edd4f63069bbb6646f0f39d9a5ae21567ef3e031ddee514f7147cfd0b0
test-bench-deps:
  test-framework-hunit: -any
  bytestring: -any
  test-framework: -any
  base: -any
  time: -any
  text: -any
  test-framework-quickcheck2: -any
  criterion: -any
  doctest: '>=0.10'
  HUnit: -any
  chronos: -any
  torsor: ==0.1.*
  old-locale: -any
  thyme: -any
  attoparsec: -any
  deepseq: '>=1.4.4.0'
  QuickCheck: -any
  aeson: '>=1.1 && <1.5'
  vector: -any
maintainer: |-
  Andrew Martin <andrew.thaddeus@gmail.com>
  chessai <chessai1996@gmail.com>
synopsis: A high-performance time library
changelog: ''
basic-deps:
  bytestring: '>=0.10 && <0.11'
  base: '>=4.9 && <5'
  text: '>=1.2 && <1.3'
  clock: '>=0.7 && <0.9'
  semigroups: '>=0.16 && <0.20'
  torsor: '>=0.1 && <0.2'
  hashable: '>=1.2 && <1.4'
  attoparsec: '>=0.13 && <0.14'
  deepseq: '>=1.4.4.0'
  aeson: '>=1.1 && <1.5'
  primitive: '>=0.6.4 && <0.8'
  vector: '>=0.11 && <0.13'
all-versions:
- 0.1.0
- 0.2.0
- '0.3'
- '0.4'
- '1.0'
- 1.0.1
- 1.0.2
- 1.0.3
- 1.0.4
- 1.0.5
- 1.0.6
- 1.0.7
- 1.0.8
- 1.0.9
- '1.1'
- 1.1.1
- 1.1.2
author: Andrew Martin
latest: 1.1.2
description-type: haddock
description: |-
  Chronos is a performance-oriented time library for Haskell, with a
  straightforward API. The main differences between this
  and the <http://hackage.haskell.org/package/time time> library
  are:

    * Chronos uses machine integers where possible. This means
      that time-related arithmetic should be faster, with the
      drawback that the types are incapable of representing times
      that are very far in the future or the past (because Chronos
      provides nanosecond, rather than picosecond, resolution).
      For most users, this is not a hindrance.
    * Chronos provides 'ToJSON'/'FromJSON' instances for serialisation.
    * Chronos provides 'Unbox' instances for working with unboxed vectors.
    * Chronos provides 'Prim' instances for working with byte arrays/primitive arrays.
    * Chronos uses normal non-overloaded haskell functions for
      encoding and decoding time. It provides <http://hackage.haskell.org/package/attoparsec attoparsec> parsers for both 'Text' and
      'ByteString'. Additionally, Chronos provides functions for
      encoding time to 'Text' or 'ByteString'. The http://hackage.haskell.org/package/time time> library accomplishes these with the
      <http://hackage.haskell.org/package/time-1.9.3/docs/Data-Time-Format.html Data.Time.Format> module, which uses UNIX-style datetime
      format strings. The approach taken by Chronos is faster and
      catches more mistakes at compile time, at the cost of being
      less expressive.
license-name: BSD-3-Clause
