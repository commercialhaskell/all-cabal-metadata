all-versions:
- 0.1.0.0
author: Ilya V. Portnov
basic-deps:
  Chart: '>=0'
  Chart-cairo: '>=0'
  attoparsec: '>=0'
  base: '>=4.7 && <5'
  colour: '>=0'
  data-default-class: '>=0'
  dates: '>=0'
  filepath: '>=0'
  hashable: '>=0'
  lens: '>=0'
  optparse-applicative: '>=0'
  text: '>=0'
  time: '>=0'
changelog: |
  # Changelog for hchart

  ## Unreleased changes
changelog-type: markdown
description: "chart-cli README\n================\n\nThis repo provides a `chart` command-line
  utility. `chart` is aimed to generate\nbasic 2D charts from command line easily.\n\nThe
  `chart` utility is not aimed to give full control over generated charts, or\nto
  generate all possible types of charts - you may anytime do that by use of\n[gnuplot][1]
  or [Chart package][2]. This utility, instead, gives you a very\nquick way of generating
  some most useful types of charts.\n\nUsage example:\n\n```\n$ cat > input.txt\nX\tY1\tY2\n1\t1\t3\n2\t4\t6\n3\t7\t4\n4\t5\t8\n6\t3\t2\n^D\n\n$
  chart --header -o lines.png input.txt\n```\n\nResult:\n\n![lines.png](https://user-images.githubusercontent.com/284644/63638172-1f134600-c69e-11e9-98ce-4c274ca423f3.png)\n\nSupported
  chart types for now are:\n\n* Line charts (the default one)\n* Bar charts (clustered
  and stacked)\n* Area charts\n* Point charts\n\nOther chart types may be added later.\n\nSupported
  output formats are:\n  \n* PNG (the default one)\n* SVG\n* PS (PostScript)\n* PDF\n\nOutput
  file format is automatically detected by specified output file name. If\noutput
  file name is not specified explicitly, `chart.png` will be used.\n\nExpected input
  format\n---------------------\n\nInput data are expected to be provided as a series
  of lines; each line may\nrepresent either one point to plot, or several points at
  the same X coordinate.\n\nThe first line may optionally represent names of the columns.\n\nOther
  lines should consist of several numbers. Numbers are separated with a\ndelimiter.
  Default delimiter is TAB characater; you may specify another with\n`-d` command
  line option.\n\nIf only one number per line is provided, then these numbers will
  be used as Y\nvalues; for X values, line numbers (starting with 1) will be used.\n\nIf
  more than one number per line is provided, then for most chart types (except\nfor
  bar charts) the first column will be used as X values, and other will be\nused as
  Y values.\n\nIn the first column, date/time values may be provided instead of numbers
  (to be\nused as values along X axis). Supported date/time formats are:\n\n* DD.MM.YYYY\n*
  YYYY/MM/DD\n* `12 September 2012'\n* today, tomorrow, yesterday\n* `in 2 days',
  '3 weeks ago'\n* `last monday', 'next friday'\n* `last month' (1th of this month),
  `next year' (1th of January of next year)\n\n(thanks to [dates package][3]).\n\nCommand-line
  interface\n----------------------\n\nI'll put it here for quick reference; more
  actual information is always\naccessible with `chart --help`:\n\n```\nUsage: chart
  [-o|--output OUTPUT.png] [COMMAND] [-1|--header]\n             [-d|--delimiter CHAR]
  [-i|--index] [-t|--title TITLE]\n             [-w|--width WIDTH] [-h|--height HEIGHT]
  [-b|--background COLOR]\n             [-f|--foreground COLOR] [-L|--legend ON|OFF]
  [INPUT.txt]\n  Make a chart\n\nAvailable options:\n  -o,--output OUTPUT.png   write
  output to OUTPUT.png\n  -1,--header              first line contains column headers\n
  \ -d,--delimiter CHAR      specify fields delimiter ('\\t' by default)\n  -i,--index
  \              if enabled, treat input data as if there was an\n                           additional
  first column, containing line numbers,\n                           starting from
  1\n  -t,--title TITLE         set chart title to TITLE\n  -w,--width WIDTH         specify
  chart width, in pixels (default: 800)\n  -h,--height HEIGHT       specify chart
  height, in pixels (default: 600)\n  -b,--background COLOR    specify background
  color name (see SVG 1.1 spec)\n  -f,--foreground COLOR    specify foreround color
  name (see SVG 1.1 spec)\n  -L,--legend ON|OFF       enable or disable the legend
  (default: True)\n  -h,--help                Show this help text\n\nAvailable commands:\n
  \ line                     Make a line chart\n  area                     Make an
  area chart\n  points                   Make a points chart\n  bar                      Make
  a bar chart\n```\n\nInstallation\n------------\n\nInstall it by stack:\n\n```\n$
  sudo apt-get install stack\n$ git clone https://github.com/portnov/chart-cli.git\n$
  cd chart-cli/\n$ stack install\n```\n\n[1]: http://www.gnuplot.info/\n[2]: http://hackage.haskell.org/package/Chart\n[3]:
  http://hackage.haskell.org/package/dates\n\n"
description-type: markdown
hash: a8f7af32452d79a680f22f32a1f2a407a41121c2e87605e6efef4ac2c0365cfd
homepage: https://github.com/portnov/chart-cli#readme
latest: 0.1.0.0
license-name: BSD-3-Clause
maintainer: portnov84@rambler.ru
synopsis: Command-line utility to draw charts from input data easily
test-bench-deps: {}
