all-versions:
- 0.2.0.1
- 0.2.0.2
author: Georg Rudoy
basic-deps:
  array: '>=0'
  base: '>=4.7 && <5'
  bytestring: '>=0'
  edit-distance-linear: '>=0'
changelog: |
  # Changelog for edit-distance-linear

  ## v0.2.0.2

  * Turn the LLVM flag off by default.

  ## v0.2.0.1

  * Made the test executable and the LLVM codegen optional.

  ## v0.2.0.0

  * Reimplemented with mutable arrays and rather low-level optimizations.

  ## v0.1.0.0

  * Initial implementation with Data.Vector.
changelog-type: markdown
description: |
  # edit-distance-linear

  [![Build Status][travis-badge]][travis]
  [![Hackage][hackage-badge]][hackage]

  The pure Haskell implementation of the Levenshtein edit distance, with linear space complexity.

  ## Comparison

  There are already several other existing implementations, but the goals and design decisions vary. In particular, this package is intended to be used to:
  * compare long strings (think tens of thousands of characters), driving the implementation to live in the `ST` monad and aim at linear space complexity to lower GC pressure;
  * not care about Unicode, thus accepting `ByteString`s and comparing them byte-by-byte rather than character-by-character (or glyph-by-glyph, or whatever is the right notion of an edit for Unicode).

  Among the alternatives:
  * [text-metrics](http://hackage.haskell.org/package/text-metrics) — uses a similar algorithm, but cares about Unicode, making it 4-5 times slower.
  * [edit-distance](http://hackage.haskell.org/package/edit-distance) — uses a very different algorithm (which we might implement here one day with huge potential benefits), which tends to consume more memory (I'm not up for estimating its space asymptotics, though).

  [travis]:        <https://travis-ci.org/0xd34df00d/edit-distance-linear>
  [travis-badge]:  <https://travis-ci.org/0xd34df00d/edit-distance-linear.svg?branch=master>
  [hackage]:       <https://hackage.haskell.org/package/edit-distance-linear>
  [hackage-badge]: <https://img.shields.io/hackage/v/edit-distance-linear.svg>
description-type: markdown
hash: a583e45df192a49951d8b10ba6069ac91ec818c5abf3cf7a0c646ef2cd54a4b5
homepage: https://github.com/0xd34df00d/edit-distance-linear#readme
latest: 0.2.0.2
license-name: BSD-3-Clause
maintainer: 0xd34df00d@gmail.com
synopsis: Efficient implementation of the Levenshtein edit distance in linear memory.
test-bench-deps:
  QuickCheck: '>=0'
  array: '>=0'
  base: '>=4.7 && <5'
  bytestring: '>=0'
  criterion: '>=0'
  edit-distance: '>=0'
  edit-distance-linear: '>=0'
  hspec: '>=0'
  text: '>=0'
  text-metrics: '>=0'
