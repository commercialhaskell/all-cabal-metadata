homepage: ''
changelog-type: markdown
hash: 9dd3bafd2ffa1ac7c759608a414237083683876ca24319d64a321c2805580e5d
test-bench-deps:
  shower: ==0.2.*
  ktx-codec: -any
  bytestring: '>=0.10 && <0.12'
  base: '>=4.7 && <5'
  text: '>=1.2 && <2.1'
  filepath: ==1.4.*
  containers: ==0.6.*
  binary: '>=0.8.7 && <1'
  tasty-hunit: -any
  tasty: -any
  zstd: -any
  vector: ==0.12.*
  directory: ==1.3.*
maintainer: aenor.realm@gmail.com
synopsis: Khronos texture format
changelog: |
  # Changelog for ktx-codec

  ## [0.0.2.0] - 2023-03-18

  * Add experimental KTX 2.0 support.
    * Only reading for now.
    * Everything besides the header is read on demand.
    * MipLevel data can be read into provided buffer directly.
  * `KeyValueData` moved to `Codec.Ktx.KeyValue` and dropped the `Key` newtype.
    * Add `textual` to extract all valid text values.

  [0.0.2.0]: https://gitlab.com/dpwiz/ktx/-/tree/v0.0.2.0-codec

  ## [0.0.1.4] - 2022-01-24

  * Put tests under a flag. No code change.
  * Allow `text-2`.

  [0.0.1.4]: https://gitlab.com/dpwiz/ktx/-/tree/v0.0.1.4-codec

  ## [0.0.1.3] - 2021-04-04

  * Allow bytestring-0.12.
  * Fix `getKeyValueData` decoder.
  * Fix encoder endianness.
  * Add `fromByteStringLazy`, `toBuilder` and `toFile`.

  [0.0.1.3]: https://gitlab.com/dpwiz/ktx/-/tree/v0.0.1.3-codec

  ## [0.0.1.2] - 2021-01-18

  * Add `fromByteString`.

  [0.0.1.2]: https://gitlab.com/dpwiz/ktx/-/tree/v0.0.1.2-codec

  ## [0.0.1.1] - 2020-08-24

  * Debug traces removed.

  [0.0.1.1]: https://gitlab.com/dpwiz/ktx/-/tree/v0.0.1.1-codec

  ## [0.0.1.0] - 2020-08-23

  * Initial release.

  [0.0.1.0]: https://gitlab.com/dpwiz/ktx/-/tree/v0.0.1.0-codec
basic-deps:
  bytestring: '>=0.10 && <0.12'
  base: '>=4.7 && <5'
  text: '>=1.2 && <2.1'
  containers: ==0.6.*
  binary: '>=0.8.7 && <1'
  vector: ==0.12.*
all-versions:
- 0.0.1.0
- 0.0.1.1
- 0.0.1.2
- 0.0.1.3
- 0.0.1.4
- 0.0.2.0
author: IC Rainbow
latest: 0.0.2.0
description-type: haddock
description: |-
  This package implements low-level encoding and decoding for .ktx and .ktx2 files.

  A framework-specific wrapper may be needed to work with the decoded data and/or supercompression.
  Check out test/Spec.hs for usage examples.

  KTX 1: https://registry.khronos.org/KTX/specs/1.0/ktxspec.v1.html

  KTX 2: https://registry.khronos.org/KTX/specs/2.0/ktxspec.v2.html#_abstract
license-name: BSD-3-Clause
