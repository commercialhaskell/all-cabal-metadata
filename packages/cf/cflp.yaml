all-versions:
- 0.0.2
- 0.0.2.1
- '0.1'
- 0.2.0
- 0.2.1
- 0.2.2
- 0.2.5
- 2009.1.6
- 2009.1.13
- 2009.1.15
- 2009.1.15.1
- 2009.1.15.2
- 2009.1.16
- 2009.1.19
- 2009.1.23
- 2009.1.23.1
- 2009.1.23.2
- 2009.1.24
- 2009.1.26
- 2009.1.28
- 2009.2.1
author: Sebastian Fischer
basic-deps:
  HUnit: '>=0'
  MonadRandom: '>=0'
  base: '>=4 && <5'
  containers: '>=0'
  control-monad-omega: '>=0'
  incremental-sat-solver: '>=0'
  level-monad: '>=0'
  logict: '>=0'
  mtl: '>=0'
  random: '>=0'
  stream-monad: '>=0'
  syb: '>=0'
  value-supply: '>=0'
changelog: ''
changelog-type: ''
description: |+
  # Constraint Functional-Logic Programming in Haskell

  The `cflp` package provides a module `Control.CFLP` with combinators
  for constraint functional-logic programming ((C)FLP) in Haskell. The
  combinators might later be used as a target language for compiling
  programs written in an FLP language like Curry or Toy. Another
  application of FLP is demand driven test-case generation.

  Consult the LICENSE file for copyright issues, the INSTALL file for
  installation instructions, or the [project website][cflp] for
  background information on this package.

  [cflp]: http://www-ps.informatik.uni-kiel.de/~sebf/projects/cflp.html

  Sebastian Fischer,
  sebf@informatik.uni-kiel.de

description-type: text
hash: a30f0512d159f05e501c1c3c68adaf4dd1e860540bd6c0723215e5aa4e7d5a41
homepage: http://www-ps.informatik.uni-kiel.de/~sebf/projects/cflp.html
latest: 2009.2.1
license-name: BSD-3-Clause
maintainer: sebf@informatik.uni-kiel.de
synopsis: Constraint Functional-Logic Programming in Haskell
test-bench-deps: {}
