all-versions:
- '0.1'
- 0.1.1
- 0.1.2
- 0.1.3
- 0.2.0
- 0.3.0
- 0.3.1
- 0.3.2
- 0.3.3
- 0.3.4
- 0.4.0
- 0.4.1
- '0.5'
- '1.0'
author: Sterling Clover
basic-deps:
  array: '>=0'
  base: '>=4.8 && <=6'
  pretty: '>=1.1'
changelog: |
  # 0.5

    - Bring space complexity down to D^2 (Bodigrim).
    - Add `Bifunctor` instance (Jonathan King).  Requires `base` >= 4.8.
    - Fix for the grouped context diff.  It was omitting all trailing contexts.
    - Allow unlimited number of context elements (`getContextDiffNew`).

  # 0.4

    - Generalize `Diff a` to `PolyDiff a b`.
      `Diff` has been replaced with a specialized synonym `type Diff a = PolyDiff a a`,
      but it's still not backward compatible if you imported `Diff(..)`.
changelog-type: markdown
description: |-
  Implementation of the standard diff algorithm in Haskell.

  Time complexity is O(ND) (input length * number of differences).
  Space complexity is O(D^2).  Includes utilities for pretty printing.
description-type: haddock
hash: 6c1219bb07f82a6ba01b4c73726161fd50b27654251aeee7ae789d35a217a6f2
homepage: https://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.4.6927
latest: '1.0'
license-name: BSD-3-Clause
maintainer: David Fox <dsf@seereason.com>
synopsis: Diff algorithm in pure Haskell
test-bench-deps:
  QuickCheck: '>=0'
  array: '>=0'
  base: '>=3 && <=6'
  directory: '>=0'
  pretty: '>=0'
  process: '>=0'
  test-framework: '>=0'
  test-framework-quickcheck2: '>=0'
