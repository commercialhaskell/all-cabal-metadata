all-versions:
- 0.2.0
- 0.2.0.1
- 0.2.1
- 0.2.1.1
- 0.2.1.2
- 0.2.1.3
- 0.2.1.4
- 0.2.2.0
- 0.2.3.0
- 0.3.0
- 0.3.1
- 0.4.0
- 0.4.0.1
- 0.4.0.2
- 0.4.1
- 0.4.2
- 0.5.0
- 0.5.1
- 0.5.2
- 0.5.3
- 0.5.4
- 0.5.5
- 0.5.5.1
- 0.6.0
- 0.6.1
- 0.6.2
- 0.6.4
- 0.6.5
- 0.6.6
- 0.7.0
- 0.7.1
- 0.7.2
- 0.7.3
- 0.7.4
author: Duncan Coutts, Nicolas Wu, Edsko de Vries
basic-deps:
  base: '>=4.8 && <5'
  binary: '>=0.6.3 && <0.10'
  bytestring: '>=0.9 && <0.11'
  containers: '>=0.5 && <0.6'
  data-accessor: '>=0.2 && <0.3'
  deepseq: '>=1.3.0.1 && <1.6'
  distributed-static: '>=0.2 && <0.4'
  exceptions: '>=0.5'
  hashable: '>=1.2.0.5 && <1.3'
  mtl: '>=2.0 && <2.4'
  network-transport: '>=0.4.1.0 && <0.6'
  random: '>=1.0 && <1.2'
  rank1dynamic: '>=0.1 && <0.5'
  stm: '>=2.4 && <2.5'
  syb: '>=0.3 && <0.8'
  template-haskell: '>=2.6'
  time: '>=1.5'
  transformers: '>=0.2 && <0.6'
changelog: "[Unrealeased]\n\n*\n\n2018-06-12 Facundo Domínguez <facundo.dominguez@tweag.io>
  0.7.4\n\n* Added support for exceptions >= 0.10\n\n2017-08-31 Facundo Domínguez
  <facundo.dominguez@tweag.io> 0.7.3\n\n* Drop support for ghc-7.8.* and earlier.\n\n2017-08-31
  Facundo Domínguez <facundo.dominguez@tweag.io> 0.7.2\n\n* Fixed build errors with
  ghc-8.2.1.\n\n2017-08-22 Facundo Domínguez <facundo.dominguez@tweag.io> 0.7.1\n\n*
  Relax upper bounds in dependencies to build with ghc-8.2.1.\n\n2017-08-21 Facundo
  Domínguez <facundo.dominguez@tweag.io> 0.7.0\n\n* Change type of message sent by
  `say` from a 3-tuple to a proper\ntype (`SayMessage`) with a proper `UTCTime`. (#291)\n*
  Expose the MonitorRef in the withMonitor call.\n* Have unmonitor remove the monitor
  message in the inbox. (#268)\n* Remove Mx Data Tables. This API isn't used, is easy
  to replace with various\nother packages. (#276)\n* Add Ord instance to SpawnRef.\n\n2016-10-13
  Facundo Domínguez <facundo.dominguez@tweag.io> 0.6.6\n\n* Remove monitors from remote
  nodes when a process dies. (#295)\n\n2016-10-12 Facundo Domínguez <facundo.dominguez@tweag.io>
  0.6.5\n\n* Use only one connection to communicate between NCs. (#296, #297)\n* Improve
  documentation of CQueue.\n* Implement bidirectional multimaps for links and monitors.
  (#293, #294)\n* Fix various warnings. (#292)\n* Fix some of the intermittent failures
  in tests.\n* Improve error messages when node controllers receive invalid requests.\n(#290)\n\n2016-06-09
  Facundo Domínguez <facundo.dominguez@tweag.io> 0.6.4\n\n* Fixup build errors.\n\n2016-06-09
  Facundo Domínguez <facundo.dominguez@tweag.io> 0.6.3\n\n* Relax template-haskell
  upper bound.\n\n2016-06-09 Facundo Domínguez <facundo.dominguez@tweag.io> 0.6.2\n\n*
  Provide compatibility with ghc-8.0.1\n* Remove dependency on ghc-prim.\n* Don't
  throw exceptions asynchronously.\n* Bump upper bounds of dependencies.\n* Fix exception
  handling in callLocal.\n* Have spawnLocal inherit the masking state of the caller.\n*
  Have nsend send unencoded messages to local processes.\n\n2016-03-03 Facundo Domínguez
  <facundo.dominguez@tweag.io> 0.6.1\n\n* Implement MonadCatch, MonadThrow, MonadMask
  for Process.\n\n2016-02-18 Facundo Domínguez <facundo.dominguez@tweag.io> 0.6.0\n\n*
  Have nsendRemote skip the transport for local communication.\n* Unsafe primitives
  for usend and nsendRemote.\n* Stop using the transport for local communication.\n*
  Skip the transport for whereisRemoteAsync and registerRemoteAsync.\n* Have nsendRemote
  skip the transport for local communication.\n* Have runProcess forward exceptions.\n*
  Reimport distributed-process-tests. d-p and d-p-test now can be kept in\nsync.\n*
  Add a stack.yaml file for building tests and d-p all at once conveniently.\n* Implement
  unreliable forward (uforward).\n* Add Functor instance for Match data type\n* Have
  `spawnAsync` not use the transport in the local case.\n* Fix monitor race in 'call'.\n*
  Add compatibility with ghc-7.10: support new typeable, loosen deps, write\nproper
  NFData instances, support new TH.\n* Kill processes on a local node upon closeLocalNode.\n*
  Fix getNodeStats function, see DP-97\n* Return size of the queue in ProcessInfo.\n*
  Implement unreliable send (usend).\n* Implement MonadFix instance for Process.\n*
  Introduce callLocal primitive.\n* Prevent message loss due to timeouts in CQueue.\n*
  More informative ProcessRegistrationException. Now includes the identifier\nof the
  process that owns the name, if any.\n* Avoid message loop between threads when tracing
  received messages.\n\n2015-06-15 Facundo Domínguez <facundo.dominguez@tweag.io>
  0.5.5\n\n* Fix dependencies.\n* Add compatibility with GHC-7.10.\n* Fix various
  race conditions (DP-99, DP-103).\n\n2014-12-09  Tim Watson  <watson.timothy@gmail.com>
  \ 0.5.2\n\n* Fix docstring for `register`\n* Added Data instance to ProcessId, LocalProcessId
  and NodeId\n* Add static serialiation dictionary for 'Static', for completeness\n*
  Add Closure static serialization dictionary\n* Replacement for modifyMVarMasked
  for GHC <= 7.4\n* Document the use of built-in trace flags\n* Make forkProcess exception-safe\n*
  Make -Wall clean\n\n2014-08-13  Tim Watson  <watson.timothy@gmail.com>  0.5.1\n\n*
  Fix cabal docs (thanks Markus Barenhoff)\n* Expose lifted version of Control.Exception.mask_
  (thanks Alexander Vershilov)\n\n2014-05-30  Tim Watson  <watson.timothy@gmail.com>
  \ 0.5.0\n\n* Dependency on STM implicitly changed from 1.3 to 1.4, but was not reflected
  in the cabal file\n* Race condition in local monitoring when using call\n* mask
  now works correctly if unmask is called by another process\n* Improve efficiency
  of local message passing\n* nsend uses local communication channels\n* Link Node
  Controller and Network Listener\n* Label spawned processes using labelThread\n*
  Relaxed upper bound on syb in the cabal manifest\n* Bump binary version to include
  0.7.*\n* Exposed process info\n* Exposed node statistics\n* Moved tests to https://github.com/haskell-distributed/distributed-process-tests\n*
  Added \"polymorphic expect\"\n* Exposed Message type and broaden scope of polymorphic
  expect\n* Added Management API (for working with internal/system events)\n* Tracing
  can no longer be disabled\n* We now report node statistics for monitoring/management\n*
  Node.runProcess now propagates exceptions to its caller\n* Added simple micro benchmarks\n\n2013-01-27
  \ Tim Watson  <watson.timothy@gmail.com>  0.4.2\n\n* Improved exception handling
  for deferred type checked exit reasons\n* Add matchChan primitive (thanks Simon
  Marlow)\n* Expose deferred message handling/checking for AbstractMessage\n* Add
  `getProcessInfo' API\n* Add `trace' API backed by the GHC eventlog\n\n2012-11-22
  \ Edsko de Vries  <edsko@well-typed.com>  0.4.1\n\n* Make behaviour of 'register'
  more Erlang-like (register will now fail if the\nname is already registered).  Patch
  by Jeff Epstein.\n* Functor, Applicative, Alternative and Monad instances for ReceivePort\n*
  Add support for receiveChanTimeout\n* Improved documentation\n* Avoid name clashes
  in the TH generation for closures\n* Relax package bounds to allow for Binary 0.6\n\n2012-10-23
  \ Edsko de Vries  <edsko@well-typed.com>  0.4.0.2\n\n* Fix race condition in spawn\n\n2012-10-04
  \ Edsko de Vries  <edsko@well-typed.com>  0.4.0.1\n\n* Relax package boundaries\n\n2012-10-03
  \ Edsko de Vries  <edsko@well-typed.com>  0.4.0\n\n* Improved treatment of network
  failure, using new failure semantics of\nNetwork.Transport.\n* Make NodeId Typeable\n*
  Extend Template Haskell support with \"remotableDec\" so that you can refer to\n$(mkClosure
  'f) within the body of \"f\".\n* Fix bug in spawnChannelLocal\n* Numerous memory
  leaks plugged\n* Relax upper bound on dependency on 'network'\n* New primitive 'matchAny'\n*
  Remove 'whereisRemote' (see comment of 'whereisRemoteAsync') \n\n2012-08-16  Edsko
  de Vries  <edsko@well-typed.com>  0.3.1\n\n* Fix memory leaks\n* Make Template Haskell
  support optional\n* Relax dependency constraints\n\n2012-08-07  Edsko de Vries  <edsko@well-typed.com>
  \ 0.3.0\n\n* Extract 'static' into a separate package (C.D.Static)\n* Use new package
  rank1dynamic to proper runtime checks for polymorphic values\n\n2012-08-02  Edsko
  de Vries  <edsko@well-typed.com>  0.2.3.0\n\n* Expose the constructors of Closure\n*
  Add instance (Typeable a => Serializable (Static a)) and make sure we only\nuse
  the internal representation of Static where really necessary\n* Improved docs\n\n2012-07-31
  \ Edsko de Vries  <edsko@well-typed.com>  0.2.2.0\n\n* Add exception handling primitives\n*
  Fix runProcess: if the process threw an exception, a 'waiting indefinitely on\nMVar'
  exception would be thrown.\n\n2012-07-21  Edsko de Vries  <edsko@well-typed.com>
  \ 0.2.1.4\n\n* Bugfix in the node controller\n(one way this bug materialized: when
  using the SimpleLocalnet backend,\nslave nodes could not be reused)\n* Improved
  documentation in Control.Distributed.Process.Closure\n\n2012-07-20  Edsko de Vries
  \ <edsko@well-typed.com>  0.2.1.3\n\n* Improve docs\n* Local versions of spawn\n\n2012-07-16
  \ Edsko de Vries  <edsko@well-typed.com>  0.2.1.2\n\n* Base 4.6 compatibility\n*
  Relax constraints on bytestring and containers\n\n2012-07-16  Edsko de Vries  <edsko@well-typed.com>
  \ 0.2.1.1\n\n* Relax upper bound on 'time' dependency\n\n2012-07-11  Edsko de Vries
  \ <edsko@well-typed.com>  0.2.1\n\n* Complete redesign of the underlying implementation
  of static values and\nclosures. \n\n* Add support for 'spawnChannel' \n\n2012-07-09
  \ Edsko de Vries  <edsko@well-typed.com>  0.2.0.1\n\n* Bugfix: Continue processing
  messages when a connection breaks.\n\n2012-07-07  Edsko de Vries  <edsko@well-typed.com>
  \ 0.2.0\n\n* Initial release.\n"
changelog-type: text
description: |-
  This is an implementation of Cloud Haskell, as described in
  /Towards Haskell in the Cloud/ by Jeff Epstein, Andrew Black,
  and Simon Peyton Jones
  (<http://research.microsoft.com/en-us/um/people/simonpj/papers/parallel/>),
  although some of the details are different. The precise message
  passing semantics are based on /A unified semantics for future Erlang/
  by Hans Svensson, Lars-&#xc5;ke Fredlund and Clara Benac Earle.
  You will probably also want to install a Cloud Haskell backend such
  as distributed-process-simplelocalnet.
description-type: haddock
hash: 9e43cb9a27e976e3e4c054e783bdfbd6140760e70997448da66993f4674a6409
homepage: http://haskell-distributed.github.com/
latest: 0.7.4
license-name: BSD-3-Clause
maintainer: Facundo Domínguez <facundo.dominguez@tweag.io>
synopsis: 'Cloud Haskell: Erlang-style concurrency in Haskell'
test-bench-deps:
  base: '>=4.6 && <5'
  binary: '>=0.6.3 && <0.10'
  bytestring: '>=0.9 && <0.11'
  distributed-process: '>=0'
  network-transport-tcp: '>=0.3 && <0.7'
