all-versions:
- 0.1.1
- 0.1.2
- 0.1.3.1
- 0.1.3.2
- 0.2.0
- 0.2.1
- 0.2.2
- 0.2.3
- 0.2.5
- 0.2.5.1
- 0.2.6.0
- 0.2.7.0
author: Tim Watson
basic-deps:
  base: '>=4.8.2.0 && <5'
  binary: '>=0.8 && <0.9'
  containers: '>=0.6 && <0.8'
  deepseq: '>=1.4 && <1.7'
  distributed-process: '>=0.6.6 && <0.8'
  distributed-process-async: '>=0.2.4 && <0.3'
  distributed-process-extras: '>=0.3.1 && <0.4'
  exceptions: '>=0.10 && <0.11'
  fingertree: <0.2
  hashable: '>=1.2.0.5 && <1.6'
  mtl: '>=0'
  stm: '>=2.4 && <2.6'
  time: '>1.4 && <1.15'
  transformers: '>=0'
  unordered-containers: '>=0.2.3.0 && <0.3'
changelog: |
  # Change Log

  2024-10-30 Laurent P. René de Cotret <laurent.decotret@outlook.com> 0.2.7.0

  * Removed dependency on `rematch` (#459)

  2024-09-03 Laurent P. René de Cotret <laurent.decotret@outlook.com> 0.2.6.0

  * Bumped dependency bounds to support GHC 8.10.7 - GHC 9.10.1
  * Updated links to point to Distributed Haskell monorepo

  ## [v0.2.5.1](https://github.com/haskell-distributed/distributed-process-client-server/tree/v0.2.5.1) (2018-06-14)
  [Full Changelog](https://github.com/haskell-distributed/distributed-process-client-server/compare/v0.2.3...v0.2.5.1)

  * Update version bounds.
  * Support exceptions-0.10.


  ## [v0.2.3](https://github.com/haskell-distributed/distributed-process-client-server/tree/v0.2.3) (2017-03-28)
  [Full Changelog](https://github.com/haskell-distributed/distributed-process-client-server/compare/v0.2.2...v0.2.3)

  ## [v0.2.2](https://github.com/haskell-distributed/distributed-process-client-server/tree/v0.2.2) (2017-03-27)
  [Full Changelog](https://github.com/haskell-distributed/distributed-process-client-server/compare/v0.2.1...v0.2.2)

  ## [v0.2.1](https://github.com/haskell-distributed/distributed-process-client-server/tree/v0.2.1) (2017-03-22)
  [Full Changelog](https://github.com/haskell-distributed/distributed-process-client-server/compare/v0.2.0...v0.2.1)

  **Merged pull requests:**

  - Implement ProcessBecome [\#18](https://github.com/haskell-distributed/distributed-process-client-server/pull/18) ([hyperthunk](https://github.com/hyperthunk))
  - Safe Handler Execution [\#17](https://github.com/haskell-distributed/distributed-process-client-server/pull/17) ([hyperthunk](https://github.com/hyperthunk))

  ## [v0.2.0](https://github.com/haskell-distributed/distributed-process-client-server/tree/v0.2.0) (2017-03-13)
  [Full Changelog](https://github.com/haskell-distributed/distributed-process-client-server/compare/v0.1.3.2...v0.2.0)

  **Closed issues:**

  - Read external input vectors in the prioritised mailbox drain loop [\#15](https://github.com/haskell-distributed/distributed-process-client-server/issues/15)
  - Compiler should enforce rules for prioritised processes [\#13](https://github.com/haskell-distributed/distributed-process-client-server/issues/13)
  - Prioritised process mailbox handling can block indefinitely [\#12](https://github.com/haskell-distributed/distributed-process-client-server/issues/12)
  - `handleExternal` support [\#9](https://github.com/haskell-distributed/distributed-process-client-server/issues/9)
  - `safeCall` and `tryCall` can fail if `resolve` throws [\#8](https://github.com/haskell-distributed/distributed-process-client-server/issues/8)
  - Someone on IRC claims we are leaking file descriptors [\#7](https://github.com/haskell-distributed/distributed-process-client-server/issues/7)
  - Support GHC 8 [\#5](https://github.com/haskell-distributed/distributed-process-client-server/issues/5)

  **Merged pull requests:**

  - Re-implement Prioritised Managed Processes [\#16](https://github.com/haskell-distributed/distributed-process-client-server/pull/16) ([hyperthunk](https://github.com/hyperthunk))
  - Update bounds & stackify [\#11](https://github.com/haskell-distributed/distributed-process-client-server/pull/11) ([hyperthunk](https://github.com/hyperthunk))
  - Handle arbitrary STM actions  [\#10](https://github.com/haskell-distributed/distributed-process-client-server/pull/10) ([hyperthunk](https://github.com/hyperthunk))
  - Bump upper bounds on time and binary [\#6](https://github.com/haskell-distributed/distributed-process-client-server/pull/6) ([3noch](https://github.com/3noch))
  - make adjustments for GHC 8 support [\#4](https://github.com/haskell-distributed/distributed-process-client-server/pull/4) ([agentm](https://github.com/agentm))
  - Stick state argument to request and unify types across the handlers. [\#3](https://github.com/haskell-distributed/distributed-process-client-server/pull/3) ([wiz](https://github.com/wiz))

  ## [v0.1.3.2](https://github.com/haskell-distributed/distributed-process-client-server/tree/v0.1.3.2) (2016-02-16)
  [Full Changelog](https://github.com/haskell-distributed/distributed-process-client-server/compare/v0.1.3.1...v0.1.3.2)

  ## [v0.1.3.1](https://github.com/haskell-distributed/distributed-process-client-server/tree/v0.1.3.1) (2015-09-29)
  [Full Changelog](https://github.com/haskell-distributed/distributed-process-client-server/compare/v0.1.2...v0.1.3.1)

  **Merged pull requests:**

  - Add compatibility with ghc-7.10 [\#1](https://github.com/haskell-distributed/distributed-process-client-server/pull/1) ([qnikst](https://github.com/qnikst))

  ## [v0.1.2](https://github.com/haskell-distributed/distributed-process-client-server/tree/v0.1.2) (2014-12-25)
  [Full Changelog](https://github.com/haskell-distributed/distributed-process-client-server/compare/v0.1.1...v0.1.2)

  ## [v0.1.1](https://github.com/haskell-distributed/distributed-process-client-server/tree/v0.1.1) (2014-12-17)
  [Full Changelog](https://github.com/haskell-distributed/distributed-process-client-server/compare/v0.1.0...v0.1.1)

  ## [v0.1.0](https://github.com/haskell-distributed/distributed-process-client-server/tree/v0.1.0) (2014-05-30)


  \* *This Change Log was automatically generated by [github_changelog_generator](https://github.com/skywinder/Github-Changelog-Generator)*
changelog-type: markdown
description: |-
  Modelled after Erlang OTP's gen_server, this framework provides similar
  facilities for Cloud Haskell, grouping essential practices for client/server
  development into a set of modules and standards designed to help you build
  concurrent, distributed applications with relative ease.
description-type: haddock
hash: 3ffe664120b94031d18030c4ad4a28e46ba17c1f14f1ac8eae8d94b21b76786c
homepage: http://github.com/haskell-distributed/distributed-process
latest: 0.2.7.0
license-name: BSD-3-Clause
maintainer: The Distributed Haskell team
synopsis: The Cloud Haskell Application Platform
test-bench-deps:
  HUnit: '>=1.2 && <2'
  ansi-terminal: '>=0.5 && <0.9'
  base: '>=4.14 && <5'
  binary: '>=0.8 && <0.9'
  containers: '>=0'
  deepseq: '>=0'
  distributed-process: '>=0'
  distributed-process-async: '>=0'
  distributed-process-client-server: '>=0'
  distributed-process-extras: '>=0'
  distributed-process-systest: '>=0.4 && <0.5'
  exceptions: '>=0'
  fingertree: '>=0'
  ghc-prim: '>=0'
  mtl: '>=0'
  network: '>=2.3 && <3.3'
  network-transport: '>=0.4 && <0.7'
  network-transport-tcp: '>=0.6 && <0.9'
  stm: '>=0'
  test-framework: '>=0.6 && <0.9'
  test-framework-hunit: '>=0'
  transformers: '>=0'
