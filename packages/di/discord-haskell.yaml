homepage: https://github.com/aquarial/discord-haskell
changelog-type: markdown
hash: 3f58689582a69c8797dccf3f0ce9860b2ab5c5010a6603f87cb85c68a223339a
test-bench-deps: {}
maintainer: ksfish5@gmail.com
synopsis: Write bots for Discord in Haskell
changelog: "# Changelog\n\nView on github for newest version: https://github.com/aquarial/discord-haskell/blob/master/changelog.md\n\nDiscord
  API changes, so use the most recent version at all times\n\n## master\n\n## 1.11.0\n\n[L0neGamer](https://github.com/aquarial/discord-haskell/pull/88)
  did a LOT of work wrangling the discord API for interactions and commands!\n\n\n[L0neGamer](https://github.com/aquarial/discord-haskell/pull/94)
  fixed a parse error with webhooktoken\n\n\nrename fields `messageText` -> `messageContent`,
  `messageChannel` -> `messageChannelId`\n\n## 1.10.0\n\n[drewolson](https://github.com/aquarial/discord-haskell/pull/80)
  allows parsing an optional guild region\n\n[L0neGamer](https://github.com/aquarial/discord-haskell/pull/82)
  add 'animated' flag for Emoji\n\nRemoved `CreateGuild` rest call! You can only do
  it if your bot is in fewer than 10 guilds, and it's [a pain to support](https://discord.com/developers/docs/resources/guild#create-guild).
  Just do it manually.\n\nAdded `Read` instance to complement `Show` for lots of types.
  Removed ToJSON for `Channel`. \n\n## 1.9.1\n\nAdd [color attribute for CreateEmbed](https://github.com/aquarial/discord-haskell/issues/78)\n\nRewrite
  [EventLoop.hs](https://github.com/aquarial/discord-haskell/issues/70) to be easier
  to modify\n\nRename a bunch of internal handles so they have more consistent names\n\n##
  1.8.9\n\nHandle both aeson 1.0 and 2.0 [(breaking changes broke builds)](https://github.com/aquarial/discord-haskell/issues/77)\n\nSimplify
  [some examples](https://github.com/aquarial/discord-haskell/issues/71)\n\n## 1.8.8\n\nRemove
  git artifacts from [examples/ping-pong.hs](https://github.com/aquarial/discord-haskell/issues/69)\n\n##
  1.8.7\n\nAdd [Stage channel](https://github.com/aquarial/discord-haskell/issues/68)
  and a catch-all Unknown channel so we stop crashing on new releases (?)\n\n## 1.8.6\n\nAdd
  [missing fields](https://github.com/aquarial/discord-haskell/issues/67) to ChannelGuildCategory\n\n##
  1.8.5\n\n Fix examples/ping-pong.hs compilation error https://github.com/aquarial/discord-haskell/issues/65\n\n##
  1.8.4\n\n[yutotakano](https://github.com/aquarial/discord-haskell/pull/64) Added
  discord replies type, and message constructor\n\n## 1.8.3\n\nBot no longer disconnects
  randomly (hopefully)  https://github.com/aquarial/discord-haskell/issues/62\n\n##
  1.8.2\n\nAdded 'Competing' activity https://github.com/aquarial/discord-haskell/issues/61\n\nResend
  the last Activity settings on Resume fixing https://github.com/aquarial/discord-haskell/issues/60\n##
  1.8.1\n\nAdded `MessageReaction` to Message https://github.com/aquarial/discord-haskell/issues/56\n\n##
  1.8.0\n\nFixed [null parent_id on channel](https://github.com/aquarial/discord-haskell/issues/55)\n\n##
  1.7.0\n\n[elikoga](https://github.com/aquarial/discord-haskell/pull/51) Changed
  to use `ReaderT` interface\n\n[elikoga](https://github.com/aquarial/discord-haskell/pull/50)
  Fixed compiler warnings\n\nChanged api url to new `discord.com`\n\n## 1.6.1\n\nChanged
  discordapp.com to discord.com in accordance with official discord policy \n\n[rexim](https://github.com/aquarial/discord-haskell/pull/41)
  Add `Emoji.user` field. Who uploaded the emoji\n\n## 1.6.0\n\nAdd News Channel and
  StorePage Channel. Fix crash `Unknown channel type:5`\n\nAdd NSFW and UserRateLimit
  to `Channel` type\n\n## 1.5.1\n\nFix `EditMessage` rest request, send JSON\n\n##
  1.5.0\n\n[rexim](https://github.com/aquarial/discord-haskell/pull/35) Add `Read`
  instance for `Snowflake`\n\n## 1.4.0\n\nRename `SubEmbed` to `EmbedPart`\n\nNew
  and improved Embed API: Add `CreateEmbed` record and `createEmbed :: CreateEmbed
  -> Embed`\n\n`CreateEmbedImageUpload` implementation inspired by [Flutterlice](https://github.com/aquarial/discord-haskell/pull/32)\n\n##
  1.3.0\n\n[PixeLinc](https://github.com/aquarial/discord-haskell/pull/33) Add `DeleteSingleReaction`
  rest-request, Add GuildId to `ReactinInfo`, Add `MESSAGE_REACTION_REMOVE_EMOJI`
  gateway event\n\n`GetReactions` actually returns the User objects request\n\nRename
  `Ban` to `GuildBan`\n\nRe-export UTCTime from `time` package\n\n## 1.2.0\n\n[MDeltaX](https://github.com/aquarial/discord-haskell/pull/27)
  Fixed typo: depreciated --> deprecated\n\n[MDeltaX](https://github.com/aquarial/discord-haskell/pull/29)
  More consistency: RoleID --> RoleId\n\n[MDeltaX](https://github.com/aquarial/discord-haskell/pull/29)
  Fix ModifyGuildRole: Post --> Patch && optional args\n\n[Hippu](https://github.com/aquarial/discord-haskell/pull/31)
  Won't crash on integer-nonces in ChannelMessage-events (usually strings)\n\n## 1.1.3\n\nMinor
  improvements to rate-limiting like using newer `X-RateLimit-Reset-After` header\n\n##
  1.1.2\n\n[michalrus](https://github.com/aquarial/discord-haskell/issues/25) Fix
  `DeleteGuildRole` parse exception\n\n## 1.1.1\n\nFix ModifyGuildRolePositions results
  in 400 Bad Request issue\n\n## 1.1.0\n\nUpgrade req to 2.x major version.\n\n##
  1.0.0\n\nGoing through some major updates to the library. Expect types to change
  and things to break.\n\nCompare the [old ping-pong](https://github.com/aquarial/discord-haskell/blob/20f7f8556823a754c76d01484118a5abf336530b/examples/ping-pong.hs)\nto
  the [new ping-pong](https://github.com/aquarial/discord-haskell/blob/7eaa6ca068f945603de7f43f6f270c2dbecd3c85/examples/ping-pong.hs)\n\nAdded
  a few rest ADT types\n\n## 0.8.4\n\n[marcotoniut](https://github.com/aquarial/discord-haskell/pull/18)
  Improved changed Embed ADT to have optional fields, and improved two field names\n\nAdd
  `ModifyGuildMember`, `AddGuildMember`, `AddGuildMemberRole`, `AddGuildMemberRole`,
  `RemoveGuildmembeRole`, `GetGuildBan`, `GetGuildVanityURL` rest data types\n\n##
  0.8.3\n\nSimplify Message Author from `Either WebhookId User` to `User`\n\nAdd `loginRestGatewayWithLog`\n\n###
  0.8.2\n\nHardcode CreateReaction delay so bots can add reactions 4 times faster\n\n[MP2E](https://github.com/aquarial/discord-haskell/pull/14)
  Fixed parse error on GuildBanAdd + GuildBanRevoke: user\\_object instead the whole
  object\n\n### 0.8.1\n\n[MP2E](https://github.com/aquarial/discord-haskell/pull/11)
  Fixed parse error on GuildRoleDelete: role_id instead of role\n\n### 0.8.0\n\n`MessageUpdate`
  does not contain a full Message object, just `ChannelId` `MessageId`\n\nMessage
  Author changed from `User` to `Either WebhookId User`\n\nAdd Webhook ADT\n\nAdd
  requests: GetInvite, DeleteInvite\n\nUpdateStatusVoiceOpts takes Bool for Mute\n\n`Unavailable`
  becomes `GuildUnavailable`\n\n### 0.7.1\n\n[t1m0thyj](https://github.com/aquarial/discord-haskell/pull/6/files)
  Typo in RequestGuildMemberOpts fields fixed.\n\n[t1m0thyj](https://github.com/aquarial/discord-haskell/pull/6/files)
  Added Activity, ActivityType ADT\n\nUpdateStatusTypes became UpdateStatusType (singular
  ADT)\n\n[t1m0thyj](https://github.com/aquarial/discord-haskell/pull/7) Retry connection
  on 1001 websocket close\n\n### 0.7.0\n\nSnowflake -> named id\n\nAdd requests: ModifyChanPositions,
  CreateGuildChannel\n\nChanged constructors of Channel to have prefix \"Channel\",
  isGuildChannel --> channelIsInGuild\n\nChange Emoji Id ADTs\n\n### 0.6.0\n\nAdd
  requests: CreateGuildEmoji, GroupDMRemoveRecipient, ModifyCurrentUser, EditChannelPermissions,
  CreateChannelInvite, GroupDMAddRecipient, ModifyGuild\n\nrestCall, readCache pass
  errors as an ADT, including underling http exceptions\n\nOnly add \"Bot \" prefix
  to secret token if it's not there\n\n### 0.5.1\n\nsendCommand with GatewaySendable
  types\n\n### 0.5.0\n\nrestCall with Request types\n\nnextEvent with Event types\n"
basic-deps:
  http-client: -any
  emoji: ==0.1.0.2
  JuicyPixels: -any
  bytestring: -any
  unliftio: -any
  MonadRandom: -any
  base: ==4.*
  time: -any
  base64-bytestring: -any
  unordered-containers: -any
  text: -any
  safe-exceptions: -any
  async: -any
  websockets: -any
  req: -any
  data-default: -any
  containers: -any
  iso8601-time: -any
  wuss: -any
  mtl: -any
  discord-haskell: -any
  scientific: -any
  aeson: -any
  vector: -any
all-versions:
- 0.5.0
- 0.5.1
- 0.6.0
- 0.7.0
- 0.7.1
- 0.8.0
- 0.8.1
- 0.8.2
- 0.8.3
- 0.8.4
- 1.0.0
- 1.1.0
- 1.1.1
- 1.1.2
- 1.1.3
- 1.2.0
- 1.3.0
- 1.4.0
- 1.5.0
- 1.5.1
- 1.5.2
- 1.6.0
- 1.6.1
- 1.7.0
- 1.8.0
- 1.8.1
- 1.8.2
- 1.8.3
- 1.8.4
- 1.8.5
- 1.8.6
- 1.8.7
- 1.8.8
- 1.8.9
- 1.9.0
- 1.9.1
- 1.9.2
- 1.10.0
- 1.11.0
author: Karl
latest: 1.11.0
description-type: markdown
description: "# discord-haskell           [![CI Status](https://github.com/aquarial/discord-haskell/actions/workflows/main.yml/badge.svg)](https://github.com/aquarial/discord-haskell/actions/)
  \       [![Hackage version](http://img.shields.io/hackage/v/discord-haskell.svg?label=Hackage)](https://hackage.haskell.org/package/discord-haskell)
  \             [![Discord server](https://discord.com/api/guilds/918577626954739722/widget.png?style=shield)](https://discord.gg/eaRAGgX3bK)\n\n##
  About\n\nBuild that discord bot in Haskell! Also checkout the [calamity haskell
  library](https://github.com/nitros12/calamity)\nfor a more advanced interface than
  `discord-haskell`.\n\n### Documentation \n\n#### Local Documentation\n\nFind docs
  on features, metadata, and parts is found in [./docs/README.md#Documentation](./docs/README.md#Documentation)\n\n####
  Discord Server\n\nCurrent project discord server: <https://discord.gg/eaRAGgX3bK>\n\nAsk
  questions, get updates, request features, etc\n\n#### Official Discord Documentation\n\nThe
  [official discord documentation](https://discord.com/developers/docs/intro)\nlists
  the rest requests, gateway events, and gateway sendables. The library\nmatches very
  closely. \n\nFor example: \n[Get Channel](https://discord.com/developers/docs/resources/channel#get-channel)\nand
  discord-haskell has a rest request ADT including \n`[GetChannel :: ChannelId ->
  ChannelRequest Channel]`. Similar matching exists for gateway `Event`s.\n\n####
  Open an Issue\n\nIf something goes wrong: check the error message, (optional: check
  log file), make sure you have the most recent version, ask on discord, or open a
  github issue.\n\n## Implementation and Progress\n\n### Quickstart\n\nThis is an
  example bot that replies \"pong\" to messages that start with \"ping\". Also checkout
  the [other examples](./examples/) for things like state management.\n\n```haskell\n{-#
  LANGUAGE OverloadedStrings #-}  -- allows \"string literals\" to be Text\nimport
  Control.Monad (when, void)\nimport Data.Text (isPrefixOf, toLower, Text)\nimport
  qualified Data.Text.IO as TIO\nimport UnliftIO.Concurrent\nimport Discord\nimport
  Discord.Types\nimport qualified Discord.Requests as R\n\n-- | Replies \"pong\" to
  every message that starts with \"ping\"\npingpongExample :: IO ()\npingpongExample
  = do \n    userFacingError <- runDiscord $ def\n             { discordToken = \"Bot
  ZZZZZZZZZZZZZZZZZZZ\"\n             , discordOnEvent = eventHandler\n             ,
  discordOnLog = \\s -> TIO.putStrLn s\n             , discordForkThreadForEvents
  = True }\n    TIO.putStrLn userFacingError\n    -- userFacingError is an unrecoverable
  error\n    -- put normal 'cleanup' code in discordOnEnd (see examples)\n\neventHandler
  :: Event -> DiscordHandler ()\neventHandler event = case event of\n       MessageCreate
  m -> when (not (fromBot m) && isPing m) $ do\n               void $ restCall (R.CreateReaction
  (messageChannelId m, messageId m) \"eyes\")\n               threadDelay (2 * 10^6)\n
  \              void $ restCall (R.CreateMessage (messageChannelId m) \"Pong!\")\n
  \      _ -> return ()\n\nfromBot :: Message -> Bool\nfromBot = userIsBot . messageAuthor\n\nisPing
  :: Message -> Bool\nisPing = (\"ping\" `isPrefixOf`) . toLower . messageContent\n```\n\n```cabal\n--
  ping-pong.cabal\n\nexecutable haskell-bot\n  main-is:             src/Main.hs\n
  \ default-language:    Haskell2010\n  ghc-options:         -threaded\n  build-depends:
  \      base\n                     , text\n                     , unliftio\n                     ,
  discord-haskell\n```\n\n### Biggest TODOs\n\n- [ ] Add slash commands [issue](https://github.com/aquarial/discord-haskell/issues/59)\n-
  [ ] APIv9 [issue](https://github.com/aquarial/discord-haskell/issues/72)\n- [ ]
  Event type includes roles and other cached info\n- [ ] higher level bot interface?
  easier to add state and stuff\n- [x] rewrite eventloop [issue](https://github.com/aquarial/discord-haskell/issues/70)\n\n###
  Installing\n\ndiscord-haskell is on hosted on hackage at https://hackage.haskell.org/package/discord-haskell,
  \n\nIn `stack.yaml`\n\n```yaml\nextra-deps:\n- emoji-0.1.0.2\n- discord-haskell-VERSION\n```\n\nIn
  `project.cabal`\n\n```cabal\nexecutable haskell-bot\n  main-is:             src/Main.hs\n
  \ default-language:    Haskell2010\n  ghc-options:         -threaded\n  build-depends:
  \      base\n                     , text\n                     , discord-haskell\n```\n\nFor
  a more complete example with various options go to \n[Installing the Library](https://github.com/aquarial/discord-haskell/wiki/Installing-the-Library)
  wiki page\n\nAlso take a look at \n[Creating your first Bot](https://github.com/aquarial/discord-haskell/wiki/Creating-your-first-Bot)\nfor
  some help setting up your bot token\n\n\n \n"
license-name: MIT
