all-versions:
- '1.0'
- '1.1'
- '2.0'
- '2.1'
- '2.2'
- 2.2.1
- '2.3'
- 2.3.1
- 2.3.2
- 2.3.3
- 2.3.3.1
- 2.3.4
- 2.3.5
- 2.3.6
- 2.3.7
- 2.3.8
- 2.3.9
- 2.3.11
- 2.3.12
- 2.3.13
- 2.3.14
- 2.3.15
- 2.3.16
- 2.3.17
- 2.3.18
- 2.3.19
- 2.3.20
- 2.3.21
- 2.3.22
- 2.3.23
- 2.3.24
- 2.3.26
- 2.3.27
- 2.3.28
- 2.3.29
author: Irene Knapp <irene.knapp@icloud.com>
basic-deps:
  base: '>=4.11 && <5'
  bytestring: '>=0.9.2.1'
  text: '>=0.11'
changelog: "v2.3.28:\n\t* Upgrade embedded sqlite library to 3.41.0.\n\nv2.3.27:\n
  \   * Add support for up to GHC 9.2\n\t* Upgrade embedded sqlite library to 3.38.5.\n\nv2.3.26:\n\t*
  Add support for GHC 8.8 and Stackage LTS 15+\n\nv2.3.25:\n\t* Upgrade embedded sqlite
  library to 3.28.0.\n\nv2.3.24:\n\t* Upgrade embedded sqlite3 library to 3.24.0.\n\t*
  Add faster `stepNoCB` function for statements that don't callback to Haskell functions.\n\t*
  Use faster \"unsafe\" FFI calls for the following functions:\n\t  reset, blobOpen,
  blobClose, blobReopen, blobRead, blobWrite, backupStep, errcode, errmsg\n\t  as
  they are frequently used and don't callback to Haskell functions.\n\t* Use faster
  Haskell memory allocator in blobRead function.\n\nv2.3.23:\n\t* Add Semigroup instance
  to support GHC 8.4.1 (thanks @gwils)\n\t* Build clean up for Android support (thanks
  @kmicklas)\n\nv2.3.22:\n\t* Update sqlite to 3.22.0\n\nv2.3.21\n\t* Update sqlite
  to 3.20.1\n\t* Add -DSQLITE_ENABLE_FTS5 to build options\n\nv2.3.20\n\t* Enable
  use of usleep (thanks @dbdbdb)\n\t* Add sqlite3.h and sqlite3ext.h to install-includes
  (thanks @duog)\n\nv2.3.19\n\t* Upgrade embedded sqlite3 library to 3.15.2.\n\nv2.3.18\n\t*
  Upgrade embedded sqlite3 library to 3.15.0.\n\n\t* Fix regressions in the test suite
  that were either introduced by changes\n\t  in GHC 8 and/or stuff we missed in previous
  releases.\n\nv2.3.17\n\t* Use a randomly created temp file for test database when
  running\n\tunit tests instead of a hardcoded file under 'dist/'.  Hopefully\n\tfixes
  https://github.com/IreneKnapp/direct-sqlite/issues/60\n\nv2.3.16\n\t* Add an Eq
  instance for SQLError\n\nv2.3.15\n\t* Add support for the online backup API\n\n\t*
  Add support for incremental blob I/O\n\n\t* Add support for zeroblobs\n\n\t* Add
  support for enabling/disabling the shared cache mode\n\n\t* Add low-level bindings
  to sqlite3_wal_hook\n\n\t* Add function for retrieving the db handle from a custom
  function\n\t  context.\n\n\t* Add bindings for sqlite3_errcode\n\n\t* Improve Travis
  CI coverage to cover more GHC versions (GHC 7.4 and higher)\n\n\t* Big thanks to
  Mario Titas and Marcin Tolysz for the above!\n\nv2.3.14\n\t* Add custom functions,
  aggregates and collations.\n\n\t* Upgrade the bundled SQLite3 library to 3.8.5.\n\n\t*
  Add bindings for controlling whether extension loading is\n\t  enabled or disabled.\n\n\t*
  Bump text and bytestring versions (actually, risking it and\n\t  removing upper
  bounds)\n\nv2.3.13\n\t* Add support for named parameters to queries.  Split this
  changelog into\n\t  a separate file (preserving its history).\n\nv2.3.12\n\t* Upgrade
  bundled SQLite3 to 3.8.4.1.\n\nv2.3.11\n\n\t* Add support for URI filenames, and
  default to having them\n\t  on. Among other things, this enables using in-memory
  databases.\n\nv2.3.10\n\n\t* Add support for compiling the bundled SQLite3 with
  URI filename\n\t  support. Specifying flags that would have affected the bundled\n\t
  \ SQLite3 no longer causes build failure if the \"systemlib\" flag\n\t  is specified.\n\nv2.3.9\n\n\t*
  Update bounds on the requirement on the \"text\" library.\n\nv2.3.8\n\n\t* Upgrade
  bundled SQLite3 to 3.8.1.\n\nv2.3.7\n\n\t* Fix a test failure related to 64-bit
  math on column indices.\n\nv2.3.6\n\n\t* Re-apply the stat64 hack after upgrade
  to the bundled\nSQLite3.  Oops!\n\nv2.3.5\n\n\t* Add support to compile bundled
  SQLite3 with full-text\n\t  search.  Upgrade bundled SQLite3 to 3.7.17.\n\nv2.3.4\n\n\t*
  Work around a linker error on some systems; add column-name\n\t  reporting.\n\nv2.3.3.1\n\n\t*
  Upgrade bundled SQLite3 to 3.7.15.2.\n\nv2.3.3\n\n\t* Add trace support, as a feature
  for debugging.\n\nv2.3.2\n\n\t* Add execPrint, execWithCallback, and interruptibly
  functions.\n\t  Add bindings for sqlite3_last_insert_rowid and sqlite3_changes.\n\t
  \ Change the Show instance of the Utf8 newtype to better match the\n\t  IsString
  instance.\n\nv2.3.1\n\n\t* Upgrade the bundled SQLite3 to 3.7.15.  Add bindings
  for\n\t  sqlite3_interrupt.  Export Int rather than CInt.\n\nv2.3\n\n\t* Mark some
  FFI calls \"unsafe\", for a substantial performance\n\t  benefit.\n\nv2.2.1\n\n\t*
  Bump down text library version to match with the latest Haskell\n\t  Platform.\n\nv2.2\n\n\t*
  Actually does what version 2.1 claimed to, since the author made\n\t  a mistake
  with git.\n\nv2.1\n\n\t* Improves handling of invalid UTF-8 and changes error handling
  to\n\t  be more complete.  It also adds a build flag to build against the\n\t  system
  sqlite instead of the bundled one, optionally\n\t  (disabled by default).\n\nv2.0\n\n\t*
  Uses Text for strings instead of String.\n\nv1.1.0.1\n\n\t* Switches to the Faction
  packaging system and makes\n\t  no other changes.\n\nv1.1\n\n\t* Adds the SQLite
  amalgamation file (version 3.7.5) to the\n\t  project, so that there are no external
  dependencies.\n"
changelog-type: text
description: |-
  This package is not very different from the other SQLite3 bindings out
  there, but it fixes a few deficiencies I was finding.  As compared to
  bindings-sqlite3, it is slightly higher-level, in that it supports
  marshalling of data values to and from the database.  In particular,
  it supports strings encoded as UTF8, and BLOBs represented as
  ByteStrings.
description-type: haddock
hash: 6ff3969a6eae383c8a9ab093abfee7f7b0ed76dab045c984a1497b7e1d71279d
homepage: https://github.com/IreneKnapp/direct-sqlite
latest: 2.3.29
license-name: BSD-3-Clause
maintainer: Joshua Chia <joshchia@gmail.com>
synopsis: Low-level binding to SQLite3.  Includes UTF8 and BLOB support.
test-bench-deps:
  HUnit: '>=0'
  base: '>=0'
  base16-bytestring: '>=0'
  bytestring: '>=0'
  direct-sqlite: '>=0'
  directory: '>=0'
  temporary: '>=0'
  text: '>=0'
