homepage: http://projects.haskell.org/diagrams/
changelog-type: markdown
hash: c84b02a53fcad2be2424c5d3c83608d4bf7ac8630a9cac12d3ca62f568f53ed2
test-bench-deps: {}
maintainer: diagrams-discuss@googlegroups.com
synopsis: HTML5 canvas backend for diagrams drawing EDSL
changelog: |
  ## [v1.4.1](https://github.com/diagrams/diagrams-html5/tree/v1.4.1) (2018-05-30)

  - test on GHC 8.4
  - allow `optparse-applicative-0.14`
  - allow `lens-4.16`
  - allow `base-4.11`
  - add `Semigroup (Render Html5 V2 Double)` instance

  ## [v1.4](https://github.com/diagrams/diagrams-html5/tree/v1.4) (2016-10-26)

  - allow `lens-4.15`
  - allow `diagrams-core-1.4`
  - allow `diagrams-lib-1.4`

  ## [v1.3.0.7](https://github.com/diagrams/diagrams-html5/tree/v1.3.0.7) (2016-08-16)

  - allow `optparse-applicative-0.13`

  ## [v1.3.0.6](https://github.com/diagrams/diagrams-html5/tree/v1.3.0.6) (2016-06-17)

  - allow `base-4.9`
  - allow `data-default-class-0.1`

  [Full Changelog](https://github.com/diagrams/diagrams-html5/compare/v1.3.0.5...v1.3.0.6)

  ## [v1.3.0.5](https://github.com/diagrams/diagrams-html5/tree/v1.3.0.5) (2016-05-01)

  - allow `lens-4.14`

  [Full Changelog](https://github.com/diagrams/diagrams-html5/compare/v1.3.0.4...v1.3.0.5)

  ## [v1.3.0.4](https://github.com/diagrams/diagrams-html5/tree/v1.3.0.4) (2015-09-29)

  - Allow `optparse-applicative-0.12`

  [Full Changelog](https://github.com/diagrams/diagrams-html5/compare/v1.3.0.3...v1.3.0.4)

  ## [v1.3.0.3](https://github.com/diagrams/diagrams-html5/tree/v1.3.0.3) (2015-09-22)

  - Allow `lens-4.13`

  [Full Changelog](https://github.com/diagrams/diagrams-html5/compare/v1.3.0.2...v1.3.0.3)

  ## [v1.3.0.2](https://github.com/diagrams/diagrams-html5/tree/v1.3.0.2) (2015-07-19)

  [Full Changelog](https://github.com/diagrams/diagrams-html5/compare/v1.3.0.1...v1.3.0.2)

  ## [v1.3.0.1](https://github.com/diagrams/diagrams-html5/tree/v1.3.0.1) (2015-05-26)

  [Full Changelog](https://github.com/diagrams/diagrams-html5/compare/v1.3...v1.3.0.1)

  ## [1.3](http://github.com/diagrams/diagrams-html5/tree/v1.3) (19 April 2015)

  - initial release
basic-deps:
  NumInstances: '>=1.0 && <1.5'
  diagrams-lib: '>=1.3 && <1.5'
  split: '>=0.2 && <0.3'
  base: '>=4.7 && <4.18'
  data-default-class: '>=0.0.1 && <0.2'
  text: '>=1.0 && <1.3 || >=2.0 && <2.1'
  containers: '>=0.3 && <0.7'
  lens: '>=4.0 && <5.3'
  mtl: '>=2.0 && <2.3'
  cmdargs: '>=0.6 && <0.11'
  static-canvas: '>=0.2 && <0.3'
  diagrams-core: '>=1.3 && <1.6'
  optparse-applicative: '>=0.10 && <0.18'
  statestack: '>=0.2 && <0.4'
all-versions:
- '1.3'
- 1.3.0.1
- 1.3.0.2
- 1.3.0.3
- 1.3.0.4
- 1.3.0.5
- 1.3.0.6
- 1.3.0.7
- '1.4'
- 1.4.1
author: Jeffrey Rosenbluth
latest: 1.4.1
description-type: markdown
description: "diagrams-html5\n===============\n\ndiagrams-html5 is an HTML5 Canvas
  backend for **diagrams** based on the static-canvas\nhttps://github.com/jeffreyrosenbluth/static-canvas
  package.\n\n**diagrams** is a powerful, flexible, declarative domain-specific language
  for \ncreating vector graphics, using the Haskell programming language.\n\n[diagrams-lib]:
  http://hackage.haskell.org/package/diagrams%2Dlib\n\n# Installation\n\n```\ncabal
  update && cabal install diagrams-html5\n```\n\n# Usage\n\nA simple example that
  uses _diagrams-html5_ to draw a the Sierpinski triangle.\n\n![Sierpinksi](http://i.imgur.com/FBaSTYd.png)\n\n```haskell\nimport
  Diagrams.Prelude\nimport Diagrams.Backend.Html5.CmdLine\n\nsierpinski 1 = eqTriangle
  1\nsierpinski n =     s\n                  ===\n               (s ||| s) # centerX\n
  \ where s = sierpinski (n-1)\n\nexample :: Diagram B\nexample = sierpinski 7 # center
  # lw none # fc black\n\nmain = mainWith $ example # frame 0.1\n```\n\nSave this
  to file named `Sierpinski.hs` and compile this program:\n\n```\nghc Sierpinski.hs\n```\n\nThis
  will generate an executable which, when run creates an html file\ncontaining the
  HTML5 Canvas code to generate the diagram.\n\n```\n$ ./Sierpinski -o sierpinski.html
  -w 400\n```\n\nYou _must_ pass an output file name with a `.html` extension.\n\n```\nUsage:
  ./Sierpinksi [-w|--width WIDTH] [-h|--height HEIGHT] [-o|--output OUTPUT] [--loop]
  [-s|--src ARG] [-i|--interval INTERVAL]\n  Command-line diagram generation.\n\nAvailable
  options:\n  -?,--help                Show this help text\n  -w,--width WIDTH         Desired
  WIDTH of the output image\n  -h,--height HEIGHT       Desired HEIGHT of the output
  image\n  -o,--output OUTPUT       OUTPUT file\n  -l,--loop                Run in
  a self-recompiling loop\n  -s,--src ARG             Source file to watch\n  -i,--interval
  INTERVAL   When running in a loop, check for changes every INTERVAL seconds.\n```\n"
license-name: BSD-3-Clause
