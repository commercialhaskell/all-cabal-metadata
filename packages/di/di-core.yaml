all-versions:
- '1.0'
- 1.0.1
- 1.0.2
- 1.0.3
- 1.0.4
author: Renzo Carbonara
basic-deps:
  base: '>=4.9 && <5.0'
  containers: '>=0'
  safe-exceptions: '>=0'
  stm: '>=0'
  time: '>=0'
changelog: |+
  # Version 1.0.4

  * Improve exception handling when worker stops.

  * Added `LoggingWorkerNotRunning`.

  * Fixed path rendering when logging exceptions.


  # Version 1.0.3

  * Fix handling of async exceptions even more (now with tests).

  * The `exceptions` dependency is gone.

  * Added `ExceptionInLoggingWorker`.

  * Documentation improvements.


  # Version 1.0.2

  * The `MonadMask` superclass of `throw'` is gone.

  * Fix handling of async exceptions.

  * Add dependency on `safe-exceptions`.


  # Version 1.0.1

  * Added `throw'`, `throw` and `onException`.


  # Version 1.0

  * This library contains most of what was in `di-0.3`. Consider this first
    release of the new ecosystem a preview release: The API is likely to stay
    stable, but extensive testing, formalization and tooling is due.

changelog-type: markdown
description: |+
  # di-core

  Typeful hierarchical structured logging without monad towers.

  If you like monad towers, though, check out
  [di-monad](https://hackage.haskell.org/package/di-monad).

  Also, for a logging library, this one doesn't do any rendering of log messages.
  Please refer to [di-handle](https://hackage.haskell.org/package/di-handle)
  and [di-df1](https://hackage.haskell.org/package/di-df1) for that.

  [![Build Status](https://travis-ci.org/k0001/di.svg?branch=master)](https://travis-ci.org/k0001/di)

  See the [BSD3 LICENSE](https://github.com/k0001/di/blob/master/di-core/LICENSE.txt)
  file to learn about the legal terms and conditions for this library.

description-type: markdown
hash: 82d555c45564ef9252dd38a157030a0f10d8f9519b274bef6b16f90208eaebdf
homepage: https://github.com/k0001/di
latest: 1.0.4
license-name: BSD-3-Clause
maintainer: renÎ»ren.zone
synopsis: Typeful hierarchical structured logging without monad towers.
test-bench-deps:
  QuickCheck: '>=0'
  base: '>=0'
  di-core: '>=0'
  safe-exceptions: '>=0'
  stm: '>=0'
  tasty: '>=0'
  tasty-hunit: '>=0'
  tasty-quickcheck: '>=0'
  time: '>=0'
