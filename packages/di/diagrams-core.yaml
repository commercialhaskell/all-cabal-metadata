all-versions:
- '0.1'
- 0.1.1
- '0.2'
- '0.3'
- '0.4'
- '0.5'
- 0.5.0.1
- '0.6'
- 0.6.0.1
- 0.6.0.2
- '0.7'
- 0.7.0.1
- '1.0'
- 1.0.0.1
- '1.1'
- 1.1.0.1
- 1.1.0.2
- 1.1.0.3
- '1.2'
- 1.2.0.1
- 1.2.0.2
- 1.2.0.3
- 1.2.0.4
- 1.2.0.5
- 1.2.0.6
- '1.3'
- 1.3.0.1
- 1.3.0.2
- 1.3.0.3
- 1.3.0.4
- 1.3.0.5
- 1.3.0.6
- 1.3.0.7
- 1.3.0.8
- '1.4'
- 1.4.0.1
- 1.4.1
- 1.4.1.1
- 1.4.2
- 1.5.0
- 1.5.0.1
- 1.5.1
- 1.5.1.1
author: Brent Yorgey
basic-deps:
  adjunctions: '>=4.0 && <5.0'
  base: '>=4.11 && <4.20'
  containers: '>=0.4.2 && <0.7'
  distributive: '>=0.2.2 && <1.0'
  dual-tree: '>=0.2 && <0.3'
  lens: '>=4.0 && <5.3'
  linear: '>=1.11.3 && <1.24'
  monoid-extras: '>=0.6 && <0.7'
  mtl: '>=2.2 && <2.4'
  profunctors: '>=5.0 && <6.0'
  semigroups: '>=0.8.4 && <0.21'
  unordered-containers: '>=0.2 && <0.3'
changelog: "## [v1.5.1.1](https://github.com/diagrams/diagrams-core/tree/v1.5.1.1)
  (2023-11-15)\n\n* Allow `base-4.19` and test on GHC 9.8\n* Fix more warnings\n\n##
  [v1.5.1](https://github.com/diagrams/diagrams-core/tree/v1.5.1) (2023-05-11)\n\n*
  Allow `base-4.18` and test on GHC 9.6 (thanks to @sergv)\n* Fix some warnings (thanks
  to @sergv)\n* Fix some documentation typos (thanks to @mchav)\n\n## [v1.5.0.1-r1](https://github.com/diagrams/diagrams-core/tree/v1.5.0.1-r1)
  (2022-11-30)\n\n* Allow `linear-1.22`\n\n## [v1.5.0.1](https://github.com/diagrams/diagrams-core/tree/v1.5.0.1)
  (2022-08-27)\n\n* Test with up to `base-4.17` and GHC 9.4\n* Allow `lens-5.2`\n*
  Fix documentation for `atLeast` and `atMost` (thanks to Igor Moreno)\n\n## [v1.5.0](https://github.com/diagrams/diagrams-core/tree/v1.5.0)
  (2021-05-13)\n\n* Updates for GHC 8.10 and 9.0\n* Drop support for GHC < 8.4\n*
  Remove deprecated `Option` type in favor of `Maybe`.  This is a\n  breaking API
  change.\n\n## [v1.4.2-r1](https://github.com/diagrams/diagrams-core/tree/v1.4.2-r1)
  (2020-02-10)\n\n* Allow `lens-4.19` and `linear-1.21`\n\n## [v1.4.2](https://github.com/diagrams/diagrams-core/tree/v1.4.2)
  (2019-10-19)\n\n* New `KeyVal` constructor for `Annotation` ([PR](https://github.com/diagrams/diagrams-core/pull/104))\n*
  Updates for GHC 8.8\n* Drop support for GHC 7.6 and 7.8\n\n## [v1.4.1.1](https://github.com/diagrams/diagrams-core/tree/v1.4.1.1)
  (2018-06-17)\n\n* Add some `ConstraintKinds` pragmas to allow compilation on GHC
  7.8 and 7.6\n\n## [v1.4.1](https://github.com/diagrams/diagrams-core/tree/v1.4.1)
  (2018-04-10)\n\n* Allow `base-4.11`\n* Allow `lens-4.16`\n* Add `Semigroup` instance
  to build on GHC 8.4\n\n## v1.4.0.1\n\n* Allow base-4.10\n\n## [v1.4](https://github.com/diagrams/diagrams-core/tree/v1.4)
  (2016-10-26)\n\n* **New features**\n\n    - New `eachName` traversal, for traversing
  over parts of a `Name`\n      that match a given type\n\n    - More documentation
  explaining `HasOrigin` and `Transformable`\n      instances for `Envelope`\n\n*
  **Dependency/version changes**\n\n    - Allow `lens-4.15`\n    - Many other upper
  bounds bumped; see minor release changelogs below.\n\n* **New instances**\n\n    -
  `Transformable` instance for `Measured`\n\n    - A bunch more instances for `Query`
  (`Distributive`,\n      `Representable`, `Profunctor`, `Coseive`, `Closed`, `Costrong`,\n
  \     `Corepresentable`)\n\n* **API changes**\n\n    - Move some `Query`-related
  functions to `diagrams-lib` (`sample`,\n      `value`, `resetValue`, `clearValue`)\n\n
  \   - Remove some redundant constraints in type signatures (should not\n      actually
  affect API)\n\n## [v1.3.0.8](https://github.com/diagrams/diagrams-core/tree/v1.3.0.8)
  (2016-06-05)\n\n- allow `base-4.9`\n- build warning-free on GHC 8.0.1\n\n## [v1.3.0.7](https://github.com/diagrams/diagrams-core/tree/v1.3.0.7)
  (2016-05-01)\n\n- allow `lens-4.14`\n\n[Full Changelog](https://github.com/diagrams/diagrams-core/compare/v1.3.0.6...v1.3.0.7)\n\n##
  [v1.3.0.6](https://github.com/diagrams/diagrams-core/tree/v1.3.0.6) (2016-02-19)\n\n
  \ - allow `unordered-containers-0.2.*`\n\n[Full Changelog](https://github.com/diagrams/diagrams-core/compare/v1.3.0.5...v1.3.0.6)\n\n##
  [v1.3.0.5](https://github.com/diagrams/diagrams-core/tree/v1.3.0.5) (2016-01-14)\n\n
  \ - allow `unordered-containers-0.2.6`\n\n[Full Changelog](https://github.com/diagrams/diagrams-core/compare/v1.3.0.4...v1.3.0.5)\n\n##
  [v1.3.0.4](https://github.com/diagrams/diagrams-core/tree/v1.3.0.4) (2015-11-10)\n\n
  \ - allow `semigroups-0.18`\n\n[Full Changelog](https://github.com/diagrams/diagrams-core/compare/v1.3.0.3...v1.3.0.4)\n\n##
  [v1.3.0.3](https://github.com/diagrams/diagrams-core/tree/v1.3.0.3) (2015-09-17)\n\n
  \ - allow `lens-4.13`\n  - allow `linear-1.20`\n  - allow `semigroups-0.17`\n\n[Full
  Changelog](https://github.com/diagrams/diagrams-core/compare/v1.3.0.2...v1.3.0.3)\n\n##
  [v1.3.0.2](https://github.com/diagrams/diagrams-core/tree/v1.3.0.2) (2015-07-19)\n\n[Full
  Changelog](https://github.com/diagrams/diagrams-core/compare/v1.3.0.1...v1.3.0.2)\n\n##
  [v1.3.0.1](https://github.com/diagrams/diagrams-core/tree/v1.3.0.1) (2015-05-26)\n\n[Full
  Changelog](https://github.com/diagrams/diagrams-core/compare/v1.3...v1.3.0.1)\n\n##
  [v1.3](https://github.com/diagrams/diagrams-core/tree/v1.3) (2015-04-19)\n\n* **New
  features**\n\n    - Update for ghc-7.10.\n\n    - Switch from `vector-space` to
  `linear` for linear algebra.\n\n    - `OpacityGroup` annotation for setting the
  opacity of diagrams as\n      a group. Opacity groups can be applied with the `opacityGroup`
  or\n      `groupOpacity` functions.\n\n    - Added `atAttr`, `atMAttr` and `atTAttr`
  lenses onto the attributes\n      of styles.\n\n    - `InSpace` and `SameSpace`
  synonyms.\n\n    - `size` function for computing the range of an enveloped object
  in\n      the basis vectors.\n\n    - \"Grouping\" for transparent things [\\#21](https://github.com/diagrams/diagrams-core/issues/21)\n\n*
  **Dependency/version changes**\n\n    - Allow `base-4.8`\n    - Allow `lens-4.9`\n\n*
  **New instances**\n\n    - `Show` instances for `Attribute` and `Style`.\n    -
  `Each`, `Ixed` and `At` instances for and `Style`.\n\n* **API changes**\n\n    -
  `Measure` has a new internal representation. `Local`, `Global`,\n      `Normalized`,
  and `Output` have been renamed to `local`, `global`,\n      `normalized` and `output`
  respectivly. `Measure` is now defined in\n      `Diagrams.Core.Measure`.\n\n    -
  `GTAttribute` has been removed. `MAttribute` now holds measured\n      attributes
  and no longer requires a `Data` instance.\n\n    - `V` is now a `* -> *` kind type
  family.\n\n    - New type family `N` for the number type of an object, `Scalar`\n
  \     type family no longer exists.\n\n    - `(|>)` has moved to `(.>>)` to make
  room for lens's snoc operator.\n\n    - `Style`'s internal representation now uses
  a hashmap of the\n      `TypeRep`.\n\n**Merged pull requests:**\n\n- Pre 1.3 [\\#82](https://github.com/diagrams/diagrams-core/pull/82)
  ([cchalmers](https://github.com/cchalmers))\n\n- update for GHC-7.10, -Wall [\\#81](https://github.com/diagrams/diagrams-core/pull/81)
  ([bergey](https://github.com/bergey))\n\n- Style lenses [\\#80](https://github.com/diagrams/diagrams-core/pull/80)
  ([cchalmers](https://github.com/cchalmers))\n\n- Add isReflection [\\#79](https://github.com/diagrams/diagrams-core/pull/79)
  ([byorgey](https://github.com/byorgey))\n\n- Linear update [\\#77](https://github.com/diagrams/diagrams-core/pull/77)
  ([cchalmers](https://github.com/cchalmers))\n\n- Bump lens upper version bounds
  [\\#74](https://github.com/diagrams/diagrams-core/pull/74) ([RyanGlScott](https://github.com/RyanGlScott))\n\n-
  Add Diagram B synonym for Diagram b v n [\\#73](https://github.com/diagrams/diagrams-core/pull/73)
  ([jeffreyrosenbluth](https://github.com/jeffreyrosenbluth))\n\n- New stuff [\\#72](https://github.com/diagrams/diagrams-core/pull/72)
  ([cchalmers](https://github.com/cchalmers))\n\n- Linear [\\#71](https://github.com/diagrams/diagrams-core/pull/71)
  ([cchalmers](https://github.com/cchalmers))\n\n- Bump linear upper version bounds
  [\\#75](https://github.com/diagrams/diagrams-core/pull/75) ([RyanGlScott](https://github.com/RyanGlScott))\n\n-
  Change Measure back to not using Scalar v [\\#65](https://github.com/diagrams/diagrams-core/pull/65)
  ([Mathnerd314](https://github.com/Mathnerd314))\n\n- Remove gratuitous Data constraints
  [\\#69](https://github.com/diagrams/diagrams-core/pull/69) ([Mathnerd314](https://github.com/Mathnerd314))\n\n##
  [v1.2.0.6](https://github.com/diagrams/diagrams-core/tree/v1.2.0.6) (2015-04-03)\n\n[Full
  Changelog](https://github.com/diagrams/diagrams-core/compare/v1.2.0.5...v1.2.0.6)\n\n**Closed
  issues:**\n\n- Please add support for recent versions of vector-space [\\#78](https://github.com/diagrams/diagrams-core/issues/78)\n\n##
  [v1.2.0.5](https://github.com/diagrams/diagrams-core/tree/v1.2.0.5) (2015-01-13)\n\n[Full
  Changelog](https://github.com/diagrams/diagrams-core/compare/v1.2.0.4...v1.2.0.5)\n\n##
  [v1.2.0.4](https://github.com/diagrams/diagrams-core/tree/v1.2.0.4) (2014-12-04)\n\n[Full
  Changelog](https://github.com/diagrams/diagrams-core/compare/v1.2.0.3...v1.2.0.4)\n\n##
  [v1.2.0.3](https://github.com/diagrams/diagrams-core/tree/v1.2.0.3) (2014-11-17)\n\n[Full
  Changelog](https://github.com/diagrams/diagrams-core/compare/v1.2.0.2...v1.2.0.3)\n\n##
  [v1.2.0.2](https://github.com/diagrams/diagrams-core/tree/v1.2.0.2) (2014-08-22)\n\n[Full
  Changelog](https://github.com/diagrams/diagrams-core/compare/v1.2.0.1...v1.2.0.2)\n\n**Closed
  issues:**\n\n- Warn against GND for IsName [\\#67](https://github.com/diagrams/diagrams-core/issues/67)\n\n##
  [v1.2.0.1](https://github.com/diagrams/diagrams-core/tree/v1.2.0.1) (2014-06-04)\n\n[Full
  Changelog](https://github.com/diagrams/diagrams-core/compare/v1.2...v1.2.0.1)\n\n**Merged
  pull requests:**\n\n- Propogate transformations into the terms of Measure [\\#66](https://github.com/diagrams/diagrams-core/pull/66)
  ([bergey](https://github.com/bergey))\n\n## [v1.2](https://github.com/diagrams/diagrams-core/tree/v1.2)
  (2014-06-02)\n\n[Full Changelog](https://github.com/diagrams/diagrams-core/compare/v1.1...v1.2)\n\n*
  **New features**\n\n    - New function `matrixHomRep` to convert a transformation
  to a\n      homogeneous matrix representation.\n\n    - New function `dropTransl`
  to drop the translation component\n      from a transformation.\n\n    - A mini-DSL
  for Measures.\n\n    - New `extent` function, used in `diameter`.\n\n    - New `dimension`
  function to return the dimension of a vector space.\n\n    - New `_relative` iso
  between points and vectors.\n\n    - `avgScale` function (for computing the average
  scaling factor of\n      a transformation) has been moved from `diagrams-lib` to\n
  \     `diagrams-core` and generalized to work over any vector space.\n\n* **Dependency/version
  changes**\n\n    - Allow `semigroups-0.15`\n    - Allow `lens-4.2`\n\n* **API changes**\n\n
  \   - Major refactoring which removes `freeze` (and hence `Split` transforms,\n
  \     etc.) and adds units of `Measure`.\n\n    - Refactoring and simplification
  of the `Backend` class.\n\n    - Remove `Multibackend`.\n\n    - Remove `nullPrim`,
  `IsPrim` and simplify `RPrim` so that it does not\n      carry a transformation.\n\n
  \   - Update `adjustDia` to return a transformation, not just a scale factor.\n
  \     Add `renderDiaT` which returns a transformation (for use by end\n      users,
  e.g. to convert output coordinates back into local coordinates).\n      \n**Implemented
  enhancements:**\n\n- Extracting things from Prim wrappers [\\#42](https://github.com/diagrams/diagrams-core/issues/42)\n\n**Closed
  issues:**\n\n- Incomplete comment on Backend class [\\#64](https://github.com/diagrams/diagrams-core/issues/64)\n\n-
  Please add support for Lens 4.x [\\#56](https://github.com/diagrams/diagrams-core/issues/56)\n\n**Merged
  pull requests:**\n\n- A mini-DSL for Measures. [\\#61](https://github.com/diagrams/diagrams-core/pull/61)
  ([byorgey](https://github.com/byorgey))\n\n- Clean-slate redesign/simplification
  of `Backend` class [\\#60](https://github.com/diagrams/diagrams-core/pull/60) ([byorgey](https://github.com/byorgey))\n\n-
  Rework units [\\#59](https://github.com/diagrams/diagrams-core/pull/59) ([byorgey](https://github.com/byorgey))\n\n-
  Avg scale [\\#58](https://github.com/diagrams/diagrams-core/pull/58) ([jeffreyrosenbluth](https://github.com/jeffreyrosenbluth))\n\n-
  Preliminary implementation of Measure [\\#55](https://github.com/diagrams/diagrams-core/pull/55)
  ([jeffreyrosenbluth](https://github.com/jeffreyrosenbluth))\n\n- No mco [\\#62](https://github.com/diagrams/diagrams-core/pull/62)
  ([jeffreyrosenbluth](https://github.com/jeffreyrosenbluth))\n\n## [v1.1](https://github.com/diagrams/diagrams-core/tree/v1.1)
  (2014-03-09)\n\n[Full Changelog](https://github.com/diagrams/diagrams-core/compare/v1.0.0.1...v1.1)\n\n*
  **New features**\n\n    - New `basis` function\n\t- New `determinant` function for
  computing the determinant of a\n      `Transformation`\n    - Add `Typeable` constraint
  on `Prim`s, making it possible to\n      extract things back out of a `Prim` wrapper
  using `cast`\n\t- Raw `Trace`s now return a *sorted list* of intersections,\n      instead
  of only the smallest.  This is used to implement a new\n      family of functions
  `rayTraceV`, `rayTraceP`, `maxRayTraceV`,\n      `maxRayTraceP`, which work similarly
  to the parallel versions\n      without `Ray`, but return the first intersection
  in the\n      *positive* direction from the given point, rather than the\n      smallest
  in absolute terms.\n    - New `Annotation` type and corresponding `applyAnnotation`\n
  \     function, for attaching uninterpreted annotations at specific\n      points
  in a diagram tree.  Currently this is used for\n      hyperlinks; more annotation
  types will be added in the future.\n\n* **Dependency/version changes**\n\n    -
  Require `lens-4.0`\n\t- Allow `vector-space-points-0.2`\n\n* **Bug fixes**\n\n    -
  Looking up a subdiagram by name now results in a diagram which\n      still has
  that name (#43)\n      \n**Closed issues:**\n\n- Named subdiagrams lose their names
  after being looked up [\\#43](https://github.com/diagrams/diagrams-core/issues/43)\n\n**Merged
  pull requests:**\n\n- Hyperlinks [\\#57](https://github.com/diagrams/diagrams-core/pull/57)
  ([tdox](https://github.com/tdox))\n\n- Added `basis`, simplified `onBasis` [\\#54](https://github.com/diagrams/diagrams-core/pull/54)
  ([jeffreyrosenbluth](https://github.com/jeffreyrosenbluth))\n\n- Determinants [\\#53](https://github.com/diagrams/diagrams-core/pull/53)
  ([jeffreyrosenbluth](https://github.com/jeffreyrosenbluth))\n\n- Introduce Typeable
  constraint on Prims \\(see \\#42\\) [\\#52](https://github.com/diagrams/diagrams-core/pull/52)
  ([byorgey](https://github.com/byorgey))\n\n- Update Wrapped instances for lens-4.0
  [\\#51](https://github.com/diagrams/diagrams-core/pull/51) ([bergey](https://github.com/bergey))\n\n-
  return list of traces [\\#48](https://github.com/diagrams/diagrams-core/pull/48)
  ([jeffreyrosenbluth](https://github.com/jeffreyrosenbluth))\n\n- Projections rebase
  [\\#50](https://github.com/diagrams/diagrams-core/pull/50) ([bergey](https://github.com/bergey))\n\n##
  [v1.0.0.1](https://github.com/diagrams/diagrams-core/tree/v1.0.0.1) (2013-11-28)\n\n[Full
  Changelog](https://github.com/diagrams/diagrams-core/compare/v1.0...v1.0.0.1)\n\n##
  [v1.0](https://github.com/diagrams/diagrams-core/tree/v1.0) (2013-11-25)\n\n[Full
  Changelog](https://github.com/diagrams/diagrams-core/compare/v0.7.0.1...v1.0)\n\n*
  **New features**\n\n    * Delayed subtrees: instead of a primitive, one can now
  also have\n      a delayed subtree at a leaf, containing a continuation which\n
  \     generates a `QDiagram` when given the accumulated d-annotation\n      at that
  point in the tree.  Useful for things which need to know\n      the final transformation
  applied to them before deciding what\n      diagram to generate.  The prototypical
  use case is arrows: see\n      https://github.com/diagrams/diagrams-lib/issues/112
  .  However,\n      this may be useful for other things as well: for example,\n      diagrams
  which scale normally until hitting some maximum or\n      minimum size, at which
  point they refuse to scale any further\n      (or more generally diagrams which
  scale as some non-linear\n      function of the transformation applied to them).\n\n
  \     The only downside is that the u-annotation must be fixed ahead\n      of time---doing
  otherwise requires a more general solution for\n      constraint solving.\n\n    *
  New function `lookupName` for doing a simple lookup of a named\n      subdiagram\n\n
  \   * New module `Diagrams.Core.Compile`, containing a framework for\n      compiling
  `QDiagrams` into a simpler tree type `RTree`, which\n      may be used by backends
  for rendering.\n\n* **New instances**\n\n    * `Qualifiable` instances for `(,)`,
  `(,,)`, `[]`, `Set`, `Map k`,\n      and `(->) e`.\n\n    * `(->) e` instance for
  `Juxtaposable` (thanks to Carlos Scheidegger)\n\n* **API changes**\n\n    * Export
  `pointDiagram` function, which creates an otherwise empty\n      diagram with a
  point (not empty) envelope\n\n    * A bunch of stuff now uses machinery from the
  `lens` library.\n\t    * `envelope`, `trace`, and `subMap` are now `Lens'`es\n        *
  `Wrapped` instances for `Trace`, `TransInv`, `QDiagram`,\n          `SubMap`, `Envelope`,
  `Style`, `Query`, and `Name` (replaces\n          `Newtype` instances)\n\t    *
  `Iso`s for `Query`, `Envelope`, `QDiagram`, `SubMap`, `TransInv`\n\t    \n**Implemented
  enhancements:**\n\n- Tree structure in Backends [\\#19](https://github.com/diagrams/diagrams-core/issues/19)\n\n**Merged
  pull requests:**\n\n- Delayed subtrees [\\#47](https://github.com/diagrams/diagrams-core/pull/47)
  ([byorgey](https://github.com/byorgey))\n\n- Trees for backends [\\#46](https://github.com/diagrams/diagrams-core/pull/46)
  ([byorgey](https://github.com/byorgey))\n\n- add b-\\>a instance for Juxtaposable
  [\\#45](https://github.com/diagrams/diagrams-core/pull/45) ([cscheid](https://github.com/cscheid))\n\n-
  Lens [\\#44](https://github.com/diagrams/diagrams-core/pull/44) ([jeffreyrosenbluth](https://github.com/jeffreyrosenbluth))\n\n##
  [v0.7.0.1](https://github.com/diagrams/diagrams-core/tree/v0.7.0.1) (2013-09-27)\n\n[Full
  Changelog](https://github.com/diagrams/diagrams-core/compare/v0.7...v0.7.0.1)\n\n**Merged
  pull requests:**\n\n- Add lookupName function. [\\#41](https://github.com/diagrams/diagrams-core/pull/41)
  ([cmears](https://github.com/cmears))\n\n## [v0.7](https://github.com/diagrams/diagrams-core/tree/v0.7)
  (2013-08-09)\n\n[Full Changelog](https://github.com/diagrams/diagrams-core/compare/v0.6.0.2...v0.7)\n\n*
  **New features**\n\n    - new function `onBasis`, to extract the matrix equivalent
  of a `Transformation`\n    - `SubMap`s are now `Deletable`\n    - new function `localize`
  for hiding/deleting names from scope\n    - new `IsPrim` class, containing `transformWithFreeze`
  function.\n        This is primarily intended to support scale-invariant primitives\n
  \       (*e.g.* arrowheads) but may be useful for other stuff as well.\n\tThe default
  implementation of `renderDia` now uses\n\t`transformWithFreeze`.\n    - optimized
  `Transformable` instance for `TransInv`\n\n* **New instances**\n\n    - `Eq`, `Ord`,
  `Enveloped`, `Traced`, and `Qualifiable` instances\n      for `TransInv`\n\n    -
  `Transformable` instance for functions, which acts by conjugation\n\n* **API changes**\n\n
  \   - `named` and `namePoint` have moved to the `diagrams-lib` package.\n\n* **Dependency/version
  changes**\n\n    - allow `base-4.7`\n    - upgrade to `monoid-extras-0.3`\n    \n**Implemented
  enhancements:**\n\n- Function to extract matrix coefficients from a Transformation
  [\\#22](https://github.com/diagrams/diagrams-core/issues/22)\n\n**Closed issues:**\n\n-
  Support for monoid-extras-0.3.0.0 [\\#38](https://github.com/diagrams/diagrams-core/issues/38)\n\n**Merged
  pull requests:**\n\n- New IsPrim class for supporting ScaleInv [\\#37](https://github.com/diagrams/diagrams-core/pull/37)
  ([byorgey](https://github.com/byorgey))\n\n- onBasis gets the matrix equivalent
  of the Transformation [\\#36](https://github.com/diagrams/diagrams-core/pull/36)
  ([bergey](https://github.com/bergey))\n\n## [v0.6.0.2](https://github.com/diagrams/diagrams-core/tree/v0.6.0.2)
  (2013-03-06)\n\n[Full Changelog](https://github.com/diagrams/diagrams-core/compare/v0.6.0.1...v0.6.0.2)\n\n**Fixed
  bugs:**\n\n- radius is wrong [\\#35](https://github.com/diagrams/diagrams-core/issues/35)\n\n**Merged
  pull requests:**\n\n- make SubMaps deletable, and add a new function 'localize'
  for hiding/deleting names [\\#34](https://github.com/diagrams/diagrams-core/pull/34)
  ([byorgey](https://github.com/byorgey))\n\n## [v0.6.0.1](https://github.com/diagrams/diagrams-core/tree/v0.6.0.1)
  (2013-01-07)\n\n[Full Changelog](https://github.com/diagrams/diagrams-core/compare/v0.6...v0.6.0.1)\n\n**Fixed
  bugs:**\n\n- \"type instance V \\(Point v\\) = v\" is not visible without explicit
  import. [\\#17](https://github.com/diagrams/diagrams-core/issues/17)\n\n**Merged
  pull requests:**\n\n- Transformable instance for functions \\(by conjugation\\)
  [\\#32](https://github.com/diagrams/diagrams-core/pull/32) ([conal](https://github.com/conal))\n\n##
  [v0.6](https://github.com/diagrams/diagrams-core/tree/v0.6) (2012-12-12)\n\n[Full
  Changelog](https://github.com/diagrams/diagrams-core/compare/v0.5...v0.6)\n\n* **New
  features**\n\n    - Proper support for subdiagrams: previous versions of\n      diagrams-core
  had a mechanism for associating names with a pair\n      of a location and an envelope.
  \ Now, names are associated with\n      actual subdiagrams (including their location
  and envelope, along\n      with all the other information stored by a diagram).\n\n
  \       See\n        [`Diagrams.Core.Types`](https://github.com/diagrams/diagrams-core/blob/27b275f45cad514caefcd3035e4e261f1b4adf6f/src/Diagrams/Core/Types.hs#L493).\n\n
  \   - Traces: in addition to an envelope, each diagram now stores a\n      \"trace\",
  which is like an embedded raytracer: given any ray\n      (represented by a base
  point and a vector), the trace computes\n      the closest point of intersection
  with the diagram along the\n      ray.  This is useful for determining points on
  the boundary of a\n      diagram, *e.g.* when drawing arrows between diagrams.\n\n
  \       See [`Diagrams.Core.Trace`](https://github.com/diagrams/diagrams-core/blob/2f8727fdfa60cdf46456a23f358c8a771b2cd90d/src/Diagrams/Core/Trace.hs).\n\n*
  **API changes**\n\n    - The modules have all been renamed to be more consistent
  with the\n      module naming scheme in the rest of the diagrams universe.  In\n
  \     particular:\n\n        `Graphics.Rendering.Diagrams`       -->  `Diagrams.Core`\n
  \       `Grahpics.Rendering.Diagrams.Core`  -->  `Diagrams.Core.Types`\n        `Graphics.Rendering.Diagrams.*`
  \    -->  `Diagrams.Core.*`\n\n    - `Graphics.Rendering.Diagrams.UDTree` has been
  split out into a\n      separate\n      [`dual-tree`](http://hackage.haskell.org/package/dual%2Dtree)\n
  \     package (which has also been substantially rewritten).\n\n    - `Graphics.Rendering.Diagrams.{Monoids,MList}`
  have been split\n      out into a separate [`monoid-extras`](http://hackage.haskell.org/package/monoid%2Dextras)
  package.\n\n    - The `names` function now returns a list of names and their\n      associated
  locations, instead of the associated subdiagrams.  In\n      particular the output
  is suitable to be rendered to a `String`\n      using `show`.\n\n    - The new `subMap`
  function fills a similar role that `names` used\n      to play, returning the entire
  mapping from names to subdiagrams.\n\n    - New functions `envelope[VP]May`\n\n
  \       `envelopeV` and `envelopeP` return the zero vector and origin,\n        respectively,
  when called on an empty envelope.  However,\n        sometimes it's useful to actually
  know whether the envelope was\n        empty or not (the zero vector and the origin
  are legitimate\n        outputs from non-empty envelopes).  The new functions have
  their\n        return type wrapped in `Maybe` for this purpose.\n\n    - New functions
  `envelopeS` and `envelopeSMay`\n\n        Like `envelope[VP](May)`, but returning
  a scalar multiple of\n\t\tthe input vector.\n\n    - The `Graphics.Rendering.Diagrams.Util`
  module has been removed,\n      along with the `withLength` function.  Calls to
  `withLength` can\n      be replaced using\n\n        `withLength s v = s *^ normalized
  v`\n\n    - Add needed constraints `(InnerSpace v, OrderedField (Scalar v),\n      Monoid'
  m)` to the type of the `renderDias` method in the\n      `MultiBackend` class.\n\n
  \   - Generalized `Transformable` instances for pairs and tuples\n\n\t\tPreviously,
  the components of the tuples were required to have\n\t\tthe same type; but everything
  still works as long as they all\n\t\tshare the same vector space.  This is actually
  useful in\n\t\tpractice: say, if we wanted to pair a diagram with a path and\n\t\tthen
  apply the same transformation to both.\n\n* **Improvements**\n\n    - More efficient
  implementation of `diameter`\n\n* **Dependency/version changes**\n\n    - Tested
  with GHC 7.6.1\n    - allow `base-4.6`\n    - allow `containers-0.5.*`\n    - allow
  `MemoTrie-0.6.1`\n\n* **Bug fixes**\n\n    - juxtaposeDefault now correctly handles
  empty envelopes (#37)\n\n        `juxtaposeDefault` is now the identity on the second
  object if\n        either one has an empty envelope.  In particular this means that\n
  \       `mempty` is now an identity element for `beside` and friends.\n        \n**Implemented
  enhancements:**\n\n- Turn R2 into D2 \\(Generalize R2 to any numeric type\\) [\\#20](https://github.com/diagrams/diagrams-core/issues/20)\n\n-
  Terminology: rename \"bounding function\" -\\> \"envelope\"; \"boundary function\"
  -\\> \"boundary\" [\\#16](https://github.com/diagrams/diagrams-core/issues/16)\n\n-
  Refactor: rename AnnDiagram to QDiagram [\\#15](https://github.com/diagrams/diagrams-core/issues/15)\n\n-
  Combine \\(point, bounds\\) pairs stored in NameMap into a single \"located bounding
  function\" data structure [\\#14](https://github.com/diagrams/diagrams-core/issues/14)\n\n-
  Remember more structure when building diagrams [\\#12](https://github.com/diagrams/diagrams-core/issues/12)\n\n-
  Diagram-building service library + executable [\\#7](https://github.com/diagrams/diagrams-core/issues/7)\n\n**Fixed
  bugs:**\n\n- setBounds is incorrect -- throws away bounds of subsequent diagrams
  too [\\#13](https://github.com/diagrams/diagrams-core/issues/13)\n\n- Start developing
  test suites [\\#10](https://github.com/diagrams/diagrams-core/issues/10)\n\n- Freezing
  does not appear to work with the SVG backend [\\#9](https://github.com/diagrams/diagrams-core/issues/9)\n\n-
  Silent failure on other image types than .png [\\#6](https://github.com/diagrams/diagrams-core/issues/6)\n\n-
  Tutorial contains links to old version of package [\\#5](https://github.com/diagrams/diagrams-core/issues/5)\n\n-
  space is not left for empty diagram when using e.g. hcat' with {sep = ... } [\\#3](https://github.com/diagrams/diagrams-core/issues/3)\n\n-
  Ellipse rotated incorrectly in test file with ellipse next to a square [\\#2](https://github.com/diagrams/diagrams-core/issues/2)\n\n**Closed
  issues:**\n\n- Rename core modules to remove Graphics.Rendering prefix. [\\#28](https://github.com/diagrams/diagrams-core/issues/28)\n\n-
  Improve haddock documentation [\\#11](https://github.com/diagrams/diagrams-core/issues/11)\n\n-
  Improve description of Envelope in Haddock documentation [\\#1](https://github.com/diagrams/diagrams-core/issues/1)\n\n**Merged
  pull requests:**\n\n- Add envelopeS / envelopeSMay for querying scalar displacements
  from envelopes [\\#31](https://github.com/diagrams/diagrams-core/pull/31) ([mgsloan](https://github.com/mgsloan))\n\n-
  Better definition for diameter [\\#30](https://github.com/diagrams/diagrams-core/pull/30)
  ([mgsloan](https://github.com/mgsloan))\n\n- Added needed constraints for MultiBackend.
  [\\#29](https://github.com/diagrams/diagrams-core/pull/29) ([fryguybob](https://github.com/fryguybob))\n\n-
  Rename `names` to `subMap`, and add new function `names` [\\#26](https://github.com/diagrams/diagrams-core/pull/26)
  ([byorgey](https://github.com/byorgey))\n\n- Fixes to work with rewritten dual-tree
  [\\#25](https://github.com/diagrams/diagrams-core/pull/25) ([byorgey](https://github.com/byorgey))\n\n-
  Fix for juxtaposeDefault to correctly handle empty envelopes [\\#24](https://github.com/diagrams/diagrams-core/pull/24)
  ([byorgey](https://github.com/byorgey))\n\n- dep bumps - fixes for GHC7.6 [\\#23](https://github.com/diagrams/diagrams-core/pull/23)
  ([mgsloan](https://github.com/mgsloan))\n\n## [v0.5](https://github.com/diagrams/diagrams-core/tree/v0.5)
  (2012-03-09)\n\n* New features:\n    - New `Juxtaposable` class\n    - New `NullBackend`
  and `D` types, for conveniently giving a\n      monomorphic type to diagrams when
  we don't care which one it is.\n    - [\\#27](http://code.google.com/p/diagrams/issues/detail?id=27):
  Change type of `adjustDia` to return a new options record\n      (with an explicitly
  filled-in size)\n\n* New instances:\n    - `Enveloped`, `HasOrigin`, `Juxtaposable`,
  `HasStyle`, and `Transformable`\n      instances for `Set`s and tuples\n    - `V
  Double = Double`\n    - `Juxtaposable` and `Boundable` instances for `Map`\n\n*
  API changes\n    - `AnnDiagram` renamed to `QDiagram`\n    - [\\#61](http://code.google.com/p/diagrams/issues/detail?id=61):
  terminology change from \"bounds\" to \"envelope\"\n        + `boundary` -> `envelopeP`\n
  \       + \"bounding region\" -> \"envelope\"\n        + `Bounds` -> `Envelope`\n
  \       + `Boundable` -> `Enveloped`\n        + `getBounds` -> `getEnvelope`\n        +
  *etc.*\n    - Split out definition of `Point` into separate package\n      ([`vector-space-points`](http://hackage.haskell.org/package/vector%2Dspace%2Dpoints))\n
  \   - The `Point` constructor `P` is no longer exported from\n      `Graphics.Rendering.Diagrams`.
  \ See the `Diagrams.TwoD.Types` module\n      from `diagrams-lib` for new tools
  for working with abstract 2D\n      points.  If you really need the `P` constructor,
  import\n      `Graphics.Rendering.Diagrams.Points`.\n    - Name-related functions
  now return \"located bounding functions\"\n      instead of pairs of points and
  bounds, to allow for future\n      expansion.\n\n* Dependency/version changes:\n
  \   - `vector-space` 0.8 is now required.\n    - Bump base upper bound to allow
  4.5; now tested with GHC 7.4.1.\n\n* Bug fixes:\n    - Bug fix related to empty
  envelopes\n\n0.4: 23 October 2011\n--------------------\n\n* improved documentation\n*
  a few new instances (Newtype Point, Boundable Point)\n* new functions (value, clearValue,
  resetValue) for working with\n  alternate query monoids\n\n0.3: 18 June 2011\n-----------------\n\n*
  big overhaul of name maps:\n    - allow arbitrary types as atomic names\n    - carry
  along bounding functions as well as names in NameMaps\n    - additional functions
  for querying information associated with names\n* fix for issue #34 (fix behavior
  of setBounds)\n* Transformable and HasOrigin instances for Transformations\n\n0.2:
  3 June 2011\n----------------\n\n* bounding regions can now be overridden\n* new
  namePoint function for more flexibly assigning names to arbitrary points\n* add
  HasStyle, Boundable, and HasOrigin instances for lists\n* add a \"trivial backend\"\n*
  transformable attributes\n\n0.1.1: 18 May 2011\n------------------\n\n* link to
  new website\n\n0.1: 17 May 2011\n----------------\n\n* initial preview release\n\n\\*
  *This Change Log was automatically generated by (and hand edited) [github_changelog_generator](https://github.com/skywinder/Github-Changelog-Generator)*\n"
changelog-type: markdown
description: |+
  [![Build Status](https://github.com/diagrams/diagrams-core/actions/workflows/haskell-ci.yml/badge.svg)](https://github.com/diagrams/diagrams-core/actions/workflows/haskell-ci.yml)

  The core modules defining the basic data structures and algorithms for
  [diagrams](http://projects.haskell.org/diagrams), a Haskell embedded
  domain-specific language for compositional, declarative drawing.

description-type: markdown
hash: ebc5a3ec3e6430638a9e84e092fddeb679039cd479e79d06fe92aadf38c325c6
homepage: https://diagrams.github.io
latest: 1.5.1.1
license-name: BSD-3-Clause
maintainer: diagrams-discuss@googlegroups.com
synopsis: Core libraries for diagrams EDSL
test-bench-deps: {}
