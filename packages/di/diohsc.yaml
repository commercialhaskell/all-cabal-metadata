all-versions:
- 0.1.1
- 0.1.2
- 0.1.3
- 0.1.3.1
- 0.1.4
- 0.1.5
- 0.1.6
- 0.1.6.1
- 0.1.7
- 0.1.8
- 0.1.9
- 0.1.10
- 0.1.11
- 0.1.12
- 0.1.13
- 0.1.14
- 0.1.14.1
- 0.1.14.2
- 0.1.14.3
- 0.1.14.4
- 0.1.14.5
- 0.1.14.6
- 0.1.14.7
- 0.1.15
- 0.1.16
author: Martin Bays
basic-deps:
  asn1-encoding: <0.10
  asn1-types: '>=0.3.4 && <0.4'
  base: '>=4.3 && <5'
  bytestring: '>=0.10.4.0 && <0.13'
  containers: '>=0.5.5.1 && <0.8'
  crypton: '>=0.26 && <1.1'
  crypton-x509: '>=1.7.5 && <1.8'
  crypton-x509-store: '>=1.6.7 && <1.7'
  crypton-x509-validation: '>=1.6.11 && <1.7'
  data-default-class: '>=0.1.2.0 && <0.3'
  directory: '>=1.2.1.0 && <1.4'
  drunken-bishop: '>=0.1.0.0 && <0.2'
  exceptions: '>=0.10.4 && <0.11'
  filepath: '>=1.3.0.2 && <1.6'
  hashable: '>=1.1 && <1.6'
  haskeline: '>=0.8 && <0.9'
  hourglass: '>=0.2.12 && <0.3'
  iconv: '>=0.4.1.3 && <0.5'
  memory: '>=0.14 && <0.19'
  mime: '>=0.4.0.2 && <0.5'
  mtl: '>=2.1.3.1 && <2.4'
  network: '>=2.4.2.3 && <3.3'
  network-simple: '>=0.4.3 && <0.5'
  network-uri: '>=2.6.3.0 && <2.8'
  parsec: '>=3.1.5 && <3.2'
  pem: '>=0.2.4 && <0.3'
  process: '>=1.2.0.0 && <1.7'
  regex-compat: '>=0.95.1 && <0.96'
  rset: <1.1
  safe: '>=0.3.19 && <0.4'
  temporary: '>=1.3 && <1.4'
  terminal-size: '>=0.3.2.1 && <0.4'
  text: '>=1.1.0.0 && <2.2'
  tls: '>=2.0 && <2.2'
  transformers: '>=0.3.0.0 && <0.7'
  unix: '>=2.7.0.1 && <2.9'
changelog: |
  # Changelog for diohsc
  This file covers only non-trivial user-visible changes;
  see the git log for full gory details.

  # 0.1.16
  * Fix producing client certificates with illegal empty CN. Instead, use "OU=-" as DN if CN is empty.

  # 0.1.15
  * Switch tls dependency to tls-2.0; deprecated ciphers dropped
  * Handle 44 response with exponential backoff
  * Fix regression wherein queue files weren't read after start
  * Fix handling of tabs

  # 0.1.14
  * Run $EDITOR on input/query ending with backslash
  * Strip all control characters (including ANSI formatting) outside preformatted blocks

  # 0.1.13
  * Set CLIENT_CERT and CLIENT_KEY environment variables when invoking external commands
  * Improve wrapping of lines with words longer than the screen width

  # 0.1.12
  * SECURITY FIX: Restrict TOFU-trust of a certificate to a single service. Previous behaviour could be exploited for a MitM attack, by convincing the user to accept a certificate for one host, then using it in a MitM for another host.
  * Immediately run commands entered in pager mode
  * Wrap title lines
  * Tell user if a certificate has been temporarily trusted before

  # 0.1.11
  * Drop targets of "log" from queues
  * Preserve history when using relative links (e.g. "2?foo")
  * Document backslash escapes in query

  # 0.1.10
  * Allow pre-fetched items in queue, with new "fetch" command to add them
  * Add named queues, e.g. foo~
  * Implement notation for (n-from) last element of a list, e.g. _$, _$2, _5-$2
  * Run default action on a history item when going to it, e.g. with <
  * Don't shell-quote explicit '%s' arguments, only implicit final argument

  # 0.1.9
  * Improve wrapping and paging with long words, wide chars, or thin terminals
  * Shell-quote arguments to 'browse' and '!'
  * Save uri with null last path segment under penultimate segment / hostname
  * Sort file:// directory listings

  # 0.1.8
  * Use standard PEM/DER format for identities, allowing import/export
  * Optionally generate Ed25519 client certificates ("TARGET id NAME ed")
  * Require confirmation before following redirect into scope of identity
  * TOFU-trust by default even if there are V3 or NameMismatch errors

  # 0.1.7
  * Handle ^C during streaming by truncating the stream
  * Always request when going to uris using an identity

  # 0.1.6.1
  * Use canonical notBefore (00:00:00 1 Jan 1950) in client certs
  * Add --prompt option, enabling usual command prompt after -e/-f
  * Fix query escaping
  * Fix colouring of wrapped link descriptions being lost when paging
  * Fix --ghost not affecting queue loading

  # 0.1.6
  * New command "query" for e.g. convenient use of search engines
  * Allow IRIs in user input (converted to URIs)
  * Implement SOCKS5 support (-S and -P options)
  * Fix bug triggered by /home being a symlink
  * Fix bug with connecting to literal IPv6 addresses

  # 0.1.5
  * Align and wrap link lines; add option to print description first
  * Use reverse video in prompt for added visibility (thanks Ben)
  * Try all addresses when making connections (thanks rwv)
  * Improve behaviour in non-interactive mode; add --batch to enable it
  * Fix X.509 version and use dummy notAfter in generated client certificates
  * Fix bugs in wrapping and relative link display

  # 0.1.4
  * Indicate links to cached history items
  * Retry with full handshake if session resume fails
  * Recommend trust for new certificate signed by previous certificate
  * Increase client cert validity to 50y
  * Make ghost mode even more spectral

  # 0.1.3
  * Allow trusting certificates just for the current session
  * Don't require tail certificates to be v3
  * Add uri of any request to log, even if request fails
  * Just show fingerprint of known cert rather than picture

  # 0.1.2
  * Add @ target modifier for history root
  * Understand e.g. ~<
  * Suppress alt text by default
  * Fix: uri quoting for queries and file:// was incorrect
  * Fix: queue was not appended to on exit in non-interactive mode
changelog-type: markdown
description: "# Diohsc: Denotationally Intricate Obedient Haskell Smallnet Client\ndiohsc
  [URI]\n\n## Features\n* Simple line-based command-response terminal user interface
  with ANSI colour.\n* Terse but combinatorially expressive command language.\n* Navigational
  aids: history, marks, queue.\n* Facilities to invoke external commands and use per-scheme
  proxies.\n* Responses streamed to pager or external command.\n* Certificate checking
  with TOFU and/or explicitly trusted CAs.\n* Support for TLS resuming, 0RTT, and
  client certificates.\n* All configuration and certificates stored as user-manipulable
  files.\n* Extensive help.\n\n## Building\nInstall the haskell package manager cabal;
  e.g. on a debian system:\n```\n$ sudo apt-get install cabal-install\n```\nThen in
  the diohsc directory, run\n```\n$ cabal update && cabal install\n```\nThe resulting
  binary will be installed as `~/.cabal/bin/diohsc`.\n\n### Compile-time options\n*
  `cabal install -f magic`: use libmagic to detect mimetypes of local files\n* `cabal
  install -f irilinks`: allow IRIs in gemtext links\n\n## Trusting server certificates\nDiohsc
  uses \"Trust On First Use\": if a host provides a certificate chain you do not currently
  trust, the client will ask for confirmation then add the certificate for the host
  to a collection stored in `~/.diohsc/known_hosts/` if there isn't already one stored;
  if there is one already stored, it will give some details and ask if you want to
  overwrite it with the newly provided one.\n\nYou can also trust Certificate Authorities
  by putting their certificates in `~/.diohsc/trusted_certs/`. For example, if you
  want to trust all the certificates installed on your system,\n```\n$ ln -s /etc/ssl/certs/*
  ~/.diohsc/trusted_certs/\n```\nor if you just want to trust Let's Encrypt:\n```\n$
  mkdir ~/.diohsc/trusted_certs\n$ wget -O ~/.diohsc/trusted_certs/lets-encrypt-x3-cross-signed.pem
  https://letsencrypt.org/certs/lets-encrypt-x3-cross-signed.pem\n$ sha256sum ~/.diohsc/trusted_certs/lets-encrypt-x3-cross-signed.pem\ne446c5e9dbef9d09ac9f7027c034602492437a05ff6c40011d7235fca639c79a
  /home/me/.diohsc/trusted_certs/lets-encrypt-x3-cross-signed.pem\n```\n\n## Configuration\nSee
  diohscrc.sample for ideas for configuration options, in particular indicating how
  to make use of third-party software to allow diohsc to access gopher and the web,
  parse markdown and html, and provide ascii-art previews of image files. Copy the
  file to ~/.diohsc/diohscrc and uncomment lines as appropriate.\n\n## Multiple instances\nMultiple
  simultaneous diohsc instances may share ~/.diohsc without serious conflict. However,
  command history is written only on exit, so the last instance to exit will determine
  that history. The log is appended to continuously, but read only on startup, so
  logs from simultaneous instances will be interleaved. Uris in ~/.diohsc/queue are
  taken by an instance on startup and whenever it processes a command, and leftover
  queue items are written there on exit.\n\nTo ensure that an instance won't interfere
  with other running instances: either use \"--datadir\" to specify an alternative
  directory to ~/.diohsc, or use the \"--ghost\" option (which also acts as a \"private
  browsing\" mode).\n\n## Running under Windows\nIt is apparently possible to compile
  and run diohsc on Windows. However, it requires a terminal with ANSI and unicode
  support, which it seems is not the default situation in even the most recent versions
  of Windows. On Windows 10, following the instructions of this link has been reported
  to work: \n[https://akr.am/blog/posts/using-utf-8-in-the-windows-terminal](https://akr.am/blog/posts/using-utf-8-in-the-windows-terminal)\n"
description-type: markdown
hash: 6635e3bab9ede9df570c4d2cd8aae61fcd18cc7253038903c8242a6e88492716
homepage: https://mbays.sdf.org/diohsc
latest: 0.1.16
license-name: GPL-3.0-only
maintainer: mbays@sdf.org
synopsis: Gemini client
test-bench-deps: {}
