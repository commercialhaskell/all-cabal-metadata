homepage: https://github.com/serokell/xrefcheck#readme
changelog-type: markdown
hash: 8292710da2c736c3d8b527fa70c1f1d4092c72fe8ce914876f17cd8c1e9b9998
test-bench-deps:
  modern-uri: -any
  fmt: -any
  cmark-gfm: -any
  bytestring: -any
  xrefcheck: -any
  reflection: -any
  case-insensitive: -any
  o-clock: -any
  base: '>=4.14.3.0 && <5'
  time: -any
  universum: -any
  firefly: -any
  tagged: -any
  containers: -any
  uri-bytestring: -any
  regex-tdfa: -any
  tasty-quickcheck: -any
  tasty-hunit: -any
  optparse-applicative: -any
  tasty: -any
  http-types: -any
  yaml: -any
  directory: -any
maintainer: Serokell <hi@serokell.io>
synopsis: ''
changelog: |
  <!--
   - SPDX-FileCopyrightText: 2021 Serokell <https://serokell.io>
   -
   - SPDX-License-Identifier: MPL-2.0
   -->

  Unreleased
  ==========

  0.2.2
  ==========

  * [#145](https://github.com/serokell/xrefcheck/pull/145)
    + Add check that there is no unknown fields in config.
  * [#158](https://github.com/serokell/xrefcheck/pull/158)
    + Fixed bug when we reported footnotes as broken links
  * [#163](https://github.com/serokell/xrefcheck/pull/163)
    + Fixed an issue where the progress bar thread might be unexpectedly cancelled and jumble up the output.
  * [#184](https://github.com/serokell/xrefcheck/pull/184)
    + Make `flavor` a required parameter.
  * [#182](https://github.com/serokell/xrefcheck/pull/182)
    + Now we call references to anchors in current file (e.g. `[a](#b)`) as
    `current file` references instead of calling them `local` (which was ambigious).
  * [#188](https://github.com/serokell/xrefcheck/pull/188)
    + Added CLI option `--no-colors` that disables ANSI colors in output.
    + Automatically disable coloring if it is not supported
  * [#152](https://github.com/serokell/xrefcheck/pull/152)
    + Now we report links that target a file outside repository (e.g. `/../a.md`)
      as broken (with message `Link targets a local file outside repository`).
      Same for links that are using directories outside repository (e.g. `/../repo/a.md`),
      since such things are not supported by GitHub markdown renderer.
  * [#174](https://github.com/serokell/xrefcheck/pull/174)
    + Make xrefcheck only scan files that are tracked by git.
    + Fixed bug where links to ignored files were valid.
    + Fixed bug where links with trailing slashes were invalid.
  * [#198](https://github.com/serokell/xrefcheck/pull/198)
    + Now we're checking globs in config fields and CLI args (e.g. `ignored`),
      they must be valid globs relative to repository root (`foo/*` instead of `/foo/*`)
  * [#196](https://github.com/serokell/xrefcheck/pull/196)
    + Now `xrefcheck: ignore link` annotation expects a link to ignore in next markdown node,
      instead of expecting link in whole rest of file.
      If you've got `Expected a LINK after "ignore link" annotation` message, see
      PR's description for examples and details.

  0.2.1
  ==========

  * [#127](https://github.com/serokell/xrefcheck/pull/127)
    + Support `Retry-After` headers with dates.
  * [#117](https://github.com/serokell/xrefcheck/pull/117)
    + Forbid verifying a single file using `--root` command line option.
  * [#115](https://github.com/serokell/xrefcheck/pull/115)
    + Improved parsing of anchor html tags inside headers.
  * [#109](https://github.com/serokell/xrefcheck/pull/109)
    + Fixed bug when prefixing `--ignored` and `--root` paths with `./`
  * [#85](https://github.com/serokell/xrefcheck/pull/85)
    + Make possible to specify whether ignore localhost links, use
    `check-localhost` CLA argument (by default localhost links will not be checked).
    + Make possible to ignore auth failures (assume 'protected' links
    valid), use `ignoreAuthFailures` parameter of config.
  * [#66](https://github.com/serokell/xrefcheck/pull/66)
    + Added support for ftp links.
  * [#74](https://github.com/serokell/xrefcheck/pull/83)
    + Add the duplication detection & verification result caching algorithm for external references.
  * [#82](https://github.com/serokell/xrefcheck/pull/82)
    + Fix the issue of having the lowest level context duplicated, caused by the root's trailing path separator.
  * [#88](https://github.com/serokell/xrefcheck/pull/88)
    + Handle the "429 too many requests" errors & attempt to eliminate them during verification.
  * [#128](https://github.com/serokell/xrefcheck/pull/128)
    + Make `ignoreRefs` a required parameter.
  * [#129](https://github.com/serokell/xrefcheck/pull/129)
    + Add support for the `id` attribute in anchors.
  * [#116](https://github.com/serokell/xrefcheck/pull/116)
    + Allow certain reserved characters to be present in the query strings of the URLs.
  * [#130](https://github.com/serokell/xrefcheck/pull/130)
    + Fixed bug with ignoring checks for relative anchors.
  * [#132](https://github.com/serokell/xrefcheck/pull/132)
    + Display URL parsing errors.
  * [#131](https://github.com/serokell/xrefcheck/pull/131)
    + Add support for glob patterns to `ignored` and `notScanned`.
    + Remove support for directory names from `ignored` and `notScanned`.
    + Fix bug with `ignored` not ignoring files with broken xrefcheck annotations.
  * [#142](https://github.com/serokell/xrefcheck/pull/142)
    + Remove `check-localhost` CLI option and `checkLocalhost` config option.
    + Add a regex matching localhost links to the `ignoreRefs` field of the default config.
  * [#68](https://github.com/serokell/xrefcheck/pull/68)
    + Recognise manual HTML-anchors inside headers.
  * [#141](https://github.com/serokell/xrefcheck/pull/141)
    + Dump all the errors from different files.
    + Fix bug where no errors were reported about broken link annotation and unrecognised annotation.
  * [#159](https://github.com/serokell/xrefcheck/pull/159)
    + Make all config options optional.

  0.2
  ==========

  * [#57](https://github.com/serokell/xrefcheck/pull/57)
    + Added `flavor` field to config.
      Also see [config sample](tests/configs/github-config.yaml).
    + Config generated with `dump-config` CLI command now depends on the provided repository type.

  0.1.3
  =======

  * [#58](https://github.com/serokell/xrefcheck/pull/58)
    + Switch to lts-17.3.
  * [#53](https://github.com/serokell/xrefcheck/pull/53)
    + Make possible to include a regular expression in
    `ignoreRefs` parameter of config to ignore external
    references.
    + Add support of right in-place ignoring annotations
    such as `ignore file`, `ignore paragraph` and `ignore link`.

  0.1.2
  =======

  * [#44](https://github.com/serokell/xrefcheck/pull/44)
    + Decide whether to show progress bar by default depending on `CI` env variable.
    + Added `--progress` option.

  0.1.1.2
  =======

  * [#34](https://github.com/serokell/xrefcheck/pull/34)
    + Do not depend on `autoexporter` and `base-noprelude`.

  0.1.1.1
  =======

  * [#30](https://github.com/serokell/xrefcheck/pull/32)
    + Do not depend on `loot-prelude` package.

  0.1.1
  =======

  * [#19](https://github.com/serokell/xrefcheck/pull/24)
    + Make `ignored` in config consider only exact matches.
    + Improve virtual files consideration.
    + Add `ignored` CLI option.

  0.1.0.0
  =======

  Initial release.
basic-deps:
  http-client: -any
  modern-uri: -any
  exceptions: -any
  fmt: -any
  cmark-gfm: '>=0.2.5'
  bytestring: -any
  xrefcheck: -any
  reflection: -any
  aeson-casing: -any
  o-clock: -any
  base: '>=4.14.3.0 && <5'
  time: -any
  text: -any
  universum: -any
  with-utf8: -any
  filepath: -any
  process: -any
  async: -any
  req: -any
  dlist: -any
  data-default: -any
  th-lift-instances: -any
  containers: -any
  uri-bytestring: -any
  lens: -any
  pretty-terminal: -any
  regex-tdfa: -any
  text-metrics: -any
  raw-strings-qq: -any
  mtl: -any
  transformers: -any
  optparse-applicative: -any
  tagsoup: -any
  ftp-client: -any
  http-types: -any
  Glob: -any
  aeson: -any
  yaml: -any
  directory: -any
all-versions:
- 0.1.0.0
- 0.1.1
- 0.1.1.1
- 0.1.1.2
- 0.1.2
- 0.1.3
- '0.2'
- 0.2.1
- 0.2.2
author: Kostya Ivanov, Serokell
latest: 0.2.2
description-type: markdown
description: |
  <!--
   - SPDX-FileCopyrightText: 2018-2021 Serokell <https://serokell.io>
   -
   - SPDX-License-Identifier: MPL-2.0
   -->

  # Xrefcheck

  [![Build status](https://badge.buildkite.com/75461331a6058b334383cdfca1071dc1f908b70cf069d857b7.svg?branch=master)](https://buildkite.com/serokell/xrefcheck)

  Xrefcheck is a tool for verifying local and external references in repository documentation that is quick, easy to setup, and suitable to be added to CI.

  <img src="https://user-images.githubusercontent.com/5394217/70820564-06b06e00-1dea-11ea-9680-27f661ca2a58.png" alt="Output sample" width="600"/>

  ### Motivation

  As the project evolves, links in documentation have a tendency to get broken. This is usually because of:
  1. File movements;
  2. Markdown header renames;
  3. Outer sites ceasing their existence.

  This tool will help you to keep references in order.

  ### Aims

  Comparing to alternative solutions, this tool tries to achieve the following points:

  * Quickness - local references are verified instantly even for moderately-sized repositories.
  * Easy setup - no extra actions required, just run the tool in the repository root.
  Both relative and absolute local links are supported out of the box.
  * Conservative verifier allows using this tool in CI, no false positives (e.g. on sites which require authentication) should be reported.

  ### A comparison with other solutions

  * [linky](https://github.com/mattias-p/linky) - a well-configurable verifier written in Rust, scans one specified file at a time and works good in pair with system utilities like `find`.
    This tool requires some configuring before it can be applied to a repository or added to CI.
  * [awesome_bot](https://github.com/dkhamsing/awesome_bot) - a solution written in Ruby that can be easily included in CI or integrated into GitHub.
    Its features include duplicated URLs detection, specifying allowed HTTP error codes and reporting generation.
    At the moment of writing, it scans only external references and checking anchors is not possible.
  * [remark-validate-links](https://github.com/remarkjs/remark-validate-links) and [remark-lint-no-dead-urls](https://github.com/davidtheclark/remark-lint-no-dead-urls) - highly configurable Javascript solution for checking local and remote links resp.
    It is able to check multiple repositores at once if they are gathered in one folder.
    Being written on JavaScript, it is fairly slow on large repositories.
  * [markdown-link-check](https://github.com/tcort/markdown-link-check) - another checker written in JavaScript, scans one specific file at a time.
    Supports `mailto:` link resolution.
  * [url-checker](https://github.com/paramt/url-checker) - GitHub action which checks links in specified files.
  * [linkcheck](https://github.com/filiph/linkcheck) - advanced site crawler, checks for `HTML` files. There are other solutions for this particular task which we don't mention here.

  At the moment of writing, the listed solutions don't support ftp/ftps links.

  ## Dependencies [↑](#xrefcheck)

  Xrefcheck requires you to have `git` version 2.18.0 or later in your PATH.

  ## Usage [↑](#xrefcheck)

  We provide the following ways for you to use xrefcheck:

  - [GitHub action](https://github.com/marketplace/actions/xrefcheck)
  - [statically linked binaries](https://github.com/serokell/xrefcheck/releases)
  - [Docker image](https://hub.docker.com/r/serokell/xrefcheck)
  - [building from source](#build-instructions-)

  If none of those are suitable for you, please open an issue!

  To find all broken links in a repository, run from within its folder:

  ```sh
  xrefcheck
  ```

  To also display all found links and anchors:

  ```sh
  xrefcheck -v
  ```

  For description of other options:

  ```sh
  xrefcheck --help
  ```


  ### Special functionality

  <details>
    <summary>Ignoring external links</summary>

    If you want some external links to not be verified, you can use one of the following ways to ignore those links:

  1. Add the regular expression that matches the ignoring link to the `ignoreRefs` parameter of your config file.

      For example:
      ```yaml
      ignoreRefs:
        - https://bad.reference.(org|com)(/?)
      ```
      allows to ignore both `https://bad.reference.org` and `https://bad.reference.com` with or without last "/".

  2. Add right in-place annotation using one of the following ignoring modes (each mode is just a comment with a certain syntax).

      * Ignore the link:

          There are several ways to add this annotation:

        * Just add it like a regular text before the ignoring link.

          ```markdown
          Bad ['com' reference](https://bad.reference.com) <!-- xrefcheck: ignore link --> and bad ['org' reference](https://bad.reference.org)
          ```

        * Separate the ignoring link from the annotation and the following text with single new lines.

          ```markdown
          Bad ['com' reference](https://bad.reference.com) and bad <!-- xrefcheck: ignore link -->
          ['org'](https://bad.reference.org)
          reference
          ```

          Therefore only `https://bad.reference.org` will be ignored.

        * If the ignoring link is the first in a paragraph, then the annotation can also be added before a paragraph.

          ```markdown
          <!-- xrefcheck: ignore link -->
          [Bad 'org' reference](https://bad.reference.org)
          [Bad 'com' reference](https://bad.reference.com)
          ```

          It is still the same `https://bad.reference.org` will be ignored in this case.

      * Ignore the paragraph:

          ```markdown
          <!-- xrefcheck: ignore paragraph -->
          Bad ['org' reference](https://bad.reference.org)
          Bad ['com' reference](https://bad.reference.com)

          Bad ['io' reference](https://bad.reference.io)
          ```

          In this way, `https://bad.reference.org` and `https://bad.reference.com` will be ignored and `https://bad.reference.io` will still be verified.

      * Ignore the whole file:
          ```markdown
          <!-- a comment -->
          <!-- another comment -->

          <!-- xrefcheck: ignore file -->
          ...the rest of the file...
          ```

          Using this you can ignore the whole file.
          </details>

  ## Configuring

  Configuration template (with all options explained) can be dumped with:

  ```sh
  xrefcheck dump-config -t GitHub
  ```

  Currently supported options include:
  * Timeout for checking external references;
  * List of ignored files.

  ## Build instructions [↑](#xrefcheck)

  Run `stack install` to build everything and install the executable.
  If you want to use cabal, you need to run (`stack2cabal`)[https://hackage.haskell.org/package/stack2cabal] first!

  ### CI and nix [↑](#xrefcheck)

  To build only the executables, run `nix-build`. You can use this line on your CI to use xrefcheck:
  ```
  nix run -f https://github.com/serokell/xrefcheck/archive/master.tar.gz -c xrefcheck
  ```

  Our CI uses `nix-build xrefcheck.nix` to build the whole project, including tests and Haddock.
  It is based on the [`haskell.nix`](https://input-output-hk.github.io/haskell.nix/) project.
  You can do that too if you wish.

  ## For further work [↑](#xrefcheck)

  - [ ] Support for non-Unix systems.
  - [ ] Support link detection in different languages, not only Markdown.
    - [ ] Haskell Haddock is first in turn.

  ## Issue tracker [↑](#xrefcheck)

  We use GitHub issues as our issue tracker.
  You can login using your GitHub account to leave a comment or create a new issue.

  ## For Contributors [↑](#xrefcheck)

  Please see [CONTRIBUTING.md](/.github/CONTRIBUTING.md) for more information.

  ## About Serokell [↑](#xrefcheck)

  Xrefcheck is maintained and funded with ❤️ by [Serokell](https://serokell.io/).
  The names and logo for Serokell are trademark of Serokell OÜ.

  We love open source software! See [our other projects](https://serokell.io/community?utm_source=github) or [hire us](https://serokell.io/hire-us?utm_source=github) to design, develop and grow your idea!
license-name: MPL-2.0
