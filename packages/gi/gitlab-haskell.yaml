all-versions:
- 0.1.0.0
- 0.1.0.1
- 0.1.0.2
- 0.1.1
- 0.1.2
- 0.1.3
- 0.1.4
- 0.1.5
- 0.1.6
- 0.1.7
- 0.1.8
- '0.2'
- 0.2.1
- 0.2.2
- 0.2.3
- 0.2.4
- 0.2.5
- 0.3.0
- 0.3.0.1
- 0.3.0.2
- 0.3.1
- 0.3.1.1
- 0.3.2.0
- 1.0.0.0
- 1.0.0.1
- 1.0.0.3
- 1.0.0.4
- 1.0.0.5
- 1.0.1.0
- 1.0.2.0
- 1.0.2.1
- 1.0.2.2
- 1.1.0.0
author: Rob Stewart
basic-deps:
  aeson: '>=2.0.0.0'
  base: '>=4.7 && <5'
  bytestring: '>=0'
  crypton-connection: '>=0.4.1'
  data-default: '>=0'
  http-client: '>=0'
  http-conduit: '>=0'
  http-types: '>=0'
  mtl: '>=0'
  temporary: '>=0'
  text: '>=0'
  time: '>=1.9'
  transformers: '>=0'
  unix-compat: '>=0'
changelog: ''
changelog-type: ''
description: "# A Haskell library for the GitLab web API\n\nThis library lifts the
  GitLab REST API into Haskell. It supports\nqueries about and updates to:\n\n* Branches\n*
  Commits\n* Groups\n* Issues\n* Jobs\n* Members\n* Merge requests\n* Pipelines\n*
  Projects\n* Repositories\n* Repository files\n* Users\n* Discussions\n* Tags\n*
  Todos\n* Version\n* Notes\n* Boards\n\n## gitlab-haskell API\n\nThe library parses
  JSON results into Haskell data types in the\n`GitLab.Types` module, allowing you
  to work with statically typed\nGitLab data with data types and functions that the
  library\nprovides. E.g.\n\n    searchUser   :: Text -> GitLab (Maybe User)\n    userProjects
  :: User -> ProjectSearchAttrs -> GitLab (Maybe [Project])\n\n## Server-side GitLab
  file hooks\n\nThis library can also be used to implement rule based GitLab file\nsystem
  hooks that, when deployed a GitLab server, react in real time\nto GitLab events
  like project creation, new users, merge requests etc.\n\nThe rule based API for
  implementing file hooks is:\n\n    receive :: [Rule] -> GitLab ()\n\n    class (FromJSON
  a) => SystemHook a where\n      match   :: String -> (a -> GitLab ()) -> Rule\n
  \     matchIf :: String -> (a -> GitLab Bool) -> (a -> GitLab ()) -> Rule\n\nFor
  more details about the file system hooks support, see post:\n[GitLab automation
  with file hook rules](https://www.macs.hw.ac.uk/~rs46/posts/2020-06-06-gitlab-system-hooks.html).\n\nThis
  library has almost 100% coverage of the GitLab REST API. For the complete\n`gitlab-haskell`
  API, see the [hackage\ndocumentation](https://hackage.haskell.org/package/gitlab-haskell).\n\n##
  Example\n\nRun all GitLab actions with `runGitLab`: \n\n    runGitLab ::\n       =>
  GitLabServerConfig\n       -> GitLab a\n       -> IO a\n\nFor example the following
  project returns all GitLab projects for the\nuser \"joe\".\n\n    myProjects <-\n
  \     runGitLab\n        (defaultGitLabServer\n           { url = \"https://gitlab.example.com\"\n
  \          , token = AuthMethodToken \"my_token\"} )\n        (searchUser \"joe\"
  >>=  \\usr -> userProjects (fromJust usr) defaultProjectSearchAttrs)\n\n## Library
  use\n\nIt was initially developed to automate and support computer science\neducation.
  See our ICSE-SEET 2024 paper for the details: [_\"Integrating Canvas\nand GitLab
  to Enrich Learning\nProcesses\"_](https://doi.org/10.1145/3639474.3640056).\n\nAn
  example of an application using this library is `gitlab-tools`,\nwhich is a command
  line tool for bulk GitLab transactions [link](https://gitlab.com/robstewart57/gitlab-tools).\n\nUnsurprisingly,
  this library is maintained on GitLab: [GitLab project](https://gitlab.com/robstewart57/gitlab-haskell).\n"
description-type: markdown
hash: 18e2bc5718ae1004ee866fcf3ba2662ed9ea3ee2060328e8ce921856063c1f2b
homepage: https://gitlab.com/robstewart57/gitlab-haskell
latest: 1.1.0.0
license-name: BSD-3-Clause
maintainer: robstewart57@gmail.com
synopsis: A Haskell library for the GitLab web API
test-bench-deps:
  aeson: '>=2.0.0.0'
  ansi-wl-pprint: '>=0'
  base: '>=4.8.0.0 && <6'
  bytestring: '>=0'
  gitlab-haskell: '>=0'
  tasty: '>=0'
  tasty-hunit: '>=0'
  text: '>=0'
  tree-diff: '>=0'
  unordered-containers: '>=0'
  vector: '>=0'
