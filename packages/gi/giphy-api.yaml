all-versions:
- 0.1.0.0
- 0.2.0.0
- 0.2.1.0
- 0.2.2.0
- 0.2.3.0
- 0.2.4.0
- 0.2.5.0
- 0.3.0.0
- 0.4.0.0
- 0.5.0.0
- 0.5.1.0
- 0.5.2.0
- 0.6.0.0
- 0.6.0.1
- 0.7.0.0
author: Pascal Hartig
basic-deps:
  aeson: '>=0'
  base: '>=4.7 && <5'
  containers: '>=0'
  http-api-data: '>=0'
  http-client: '>=0'
  http-client-tls: '>=0'
  microlens: '>=0'
  microlens-th: '>=0'
  mtl: '>=0'
  network-uri: '>=0'
  servant: '>=0.16'
  servant-client: '>=0.16'
  text: '>=0'
  transformers: '>=0'
changelog: |
  # Changelog

  ## v0.6.0.1

  - Fix servant-client bounds.

  ## v0.6.0.0

  - Upgrade to Servant 0.13.

  ## v0.5.2.0

  - Fix #12: Compilation error with base 4.7

  ## v0.5.0.0

  - Upgrade to Servant 0.9. User-facing API should remain unchanged.

  ## v0.4.0.0

  - Upgrade to Servant 0.6. When running the Giphy monad it is now possible
    to provide a custom HTTP manager.

  ## v0.3.0.0

  - Upgrade to Servant 0.5. No changes in the API, but it's not in Stackage yet
    (as of 2016-03-30).

  ## v0.2.5.0

  - Clarify servant bounds.

  ## v0.2.4.0

  - Include extra source files for stackage test suite.

  ## v0.2.3.0

  - Losen upper bounds for Stackage inclusion (aeson 0.11 compat).

  ## v0.2.2.0

  - Retrieve single GIFs via GifId.
  - Another attempt in reducing the deps on Hackage.

  ## v0.2.1.0

  - Expose RandomResponse(..) type for non-lens use.

  ## v0.2.0.0

  - Make sample app optional via build flag `buildSample`. This dramatically
    reduces the dependency graph.

  ## v0.1.0.0

  - Initial release.
changelog-type: markdown
description: |
  # giphy-api
  [![Build Status](https://travis-ci.org/passy/giphy-api.svg?branch=master)](https://travis-ci.org/passy/giphy-api)
  [![Hackage](http://img.shields.io/hackage/v/giphy-api.svg)](https://hackage.haskell.org/package/giphy-api)
  [![Stackage 8](http://stackage.org/package/giphy-api/badge/lts-8)](http://stackage.org/lts-8/package/giphy-api)
  [![Stackage 9](http://stackage.org/package/giphy-api/badge/lts-9)](http://stackage.org/lts-9/package/giphy-api)
  [![Stackage Nightly](http://stackage.org/package/giphy-api/badge/nightly)](http://stackage.org/nightly/package/giphy-api)


  A Haskell wrapper for the [Giphy HTTP API](https://github.com/Giphy/GiphyAPI)
  using [servant-client](https://hackage.haskell.org/package/servant-client).

  ## Usage

  The module provides a `Giphy` monad which can be run with `runGiphy` to lift it
  into IO. Here's a simple usage example:

  ```hs
  {-# LANGUAGE OverloadedStrings #-}

  import qualified Data.Text as T
  import qualified Web.Giphy as Giphy

  apiKey :: Giphy.Key
  apiKey = Giphy.Key "dc6zaTOxFJmzC"

  sample :: IO ()
  sample = do
    let config = Giphy.GiphyConfig apiKey
    resp <- Giphy.runGiphy (app "puppies") config
    print resp

    where
      app :: T.Text -> Giphy.Giphy [Giphy.Gif]
      app q = do
        resp <- Giphy.search $ Giphy.Query q
        return $ Giphy._searchItems resp
  ```

  For a slightly more complex example, check out the [sample app](app/Main.hs),
  which also features the use of lenses.

  ## Building

  Use [stack](http://haskellstack.org) to build this library.

  ```bash
  $ stack setup
  $ stack test
  # Drop the flag if you don't want the sample app to be built.
  $ stack build --flag=giphy-api:buildSample
  # To install the sample tool
  $ stack install
  ```

  ## Sample CLI Tool Usage

  ```bash
  $ giphy-search --help
  giphy-search

  Usage: giphy-search ([-s|--search ARG] | [-t|--translate ARG] | [RANDOM_TAG])
    Find GIFs on the command line.

  Available options:
    -h,--help                Show this help text
    -s,--search ARG          Use search to find a matching GIF.
    -t,--translate ARG       Use translate to find a matching GIF.
    -V,--version             Show version information
  $ giphy-search puppies
  Just https://media2.giphy.com/media/PjQFtJnmdOlwI/giphy.gif
  $ giphy-search --translate superman
  Just https://media3.giphy.com/media/eOewytQL4tOOA/giphy.gif
  $ giphy-search "1C4D539A-B787-497F-B1DC-8FCF8D2C026D"
  Nothing
  ```

  ## Missing features

  - There is no compiler flag at the moment to disable lenses if those aren't
    needed. The library, however, uses `microlens` so the overhead should be
    minimal.

  - The "Stickers" API endpoints are currently not covered. If you need them, let
    me know. PRs obviously very welcome.

  - Some fields are currently not exposed. Again, if you need them, open an issue.
    For example, I have never seen a type value other than "gif" so I decided
    to skip it.
description-type: markdown
hash: 122134af65d97d8b7439c241801b452e96ce75548988016fbc37edd4a4997492
homepage: http://github.com/passy/giphy-api#readme
latest: 0.7.0.0
license-name: BSD-3-Clause
maintainer: Pascal Hartig <phartig@rdrei.net>
synopsis: Giphy HTTP API wrapper and CLI search tool.
test-bench-deps:
  aeson: '>=0'
  base: '>=4.7 && <5'
  basic-prelude: '>=0'
  bytestring: '>=0'
  containers: '>=0'
  directory: '>=0'
  giphy-api: '>=0'
  hspec: '>=0'
  lens: '>=0'
  network-uri: '>=0'
  text: '>=0'
