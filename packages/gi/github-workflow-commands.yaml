all-versions:
- 0.0.0.0
author: ''
basic-deps:
  base: '>=4.16.4.0 && <5'
  bytestring: '>=0.11.4.0'
  containers: '>=0.6.5.1'
  lens: '>=5.1.1'
  text: '>=1.2.5.0'
changelog: |
  ## [_Unreleased_](https://github.com/freckle/github-workflow-commands/compare/v0.0.0.0...main)

  ## [v0.0.0.0](https://github.com/freckle/github-workflow-commands/tree/v0.0.0.0)

  First tagged release.
changelog-type: markdown
description: |
  # github-workflow-commands

  For printing workflow commands in GitHub Actions.

  See [Workflow commands for GitHub Actions](https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions).

  The code herein is based on [GitHub Actions Toolkit](https://github.com/actions/toolkit/tree/main/packages/core/src).

  ---

  <!--
  ```haskell
  module Main (main) where

  import Prelude

  import Text.Markdown.Unlit ()
  ```
  -->

  ```haskell
  import qualified GitHub.Workflow.Command.Annotation as GH
  import Control.Lens
  ```

  An annotation is at minimum just a string.

  ```haskell
  example1 :: IO ()
  example1 =
    GH.printByteStringLn $
      GH.error "Something failed."
  ```

  An annotation can also include a location.

  ```haskell
  someLocation :: GH.Location
  someLocation =
    GH.inFile "app.js"
      & GH.position ?~
          ( GH.atLine 13
              & GH.extent ?~ GH.ToLine 16
          )
  ```

  ```haskell
  example2 :: IO ()
  example2 =
    GH.printByteStringLn $
      GH.warning "Something seems amiss here."
        & GH.location ?~ someLocation
  ```

  <!--
  ```haskell
  main :: IO ()
  main = example1 >> example2
  ```
  -->

  ---

  [CHANGELOG](./CHANGELOG.md) | [LICENSE](./LICENSE)
description-type: markdown
hash: 00f493a4527156d2328e17b6cccf0ec2333189351587c9c4937466dc44d44e20
homepage: https://github.com/freckle/github-workflow-commands#readme
latest: 0.0.0.0
license-name: MIT
maintainer: Freckle Education
synopsis: GitHub Actions workflow commands
test-bench-deps:
  base: '>=4.16.4.0 && <5'
  github-workflow-commands: '>=0'
  hspec: '>=2.11.9'
  hspec-junit-formatter: '>=1.1.2.1'
  lens: '>=5.1.1'
  markdown-unlit: '>=0.5.1'
