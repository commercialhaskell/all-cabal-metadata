homepage: https://github.com/phadej/github
changelog-type: markdown
hash: 074e69ad24b94b1199331b156e5373e9d4fa4a4452e02217f3539fe94a21a838
test-bench-deps:
  bytestring: -any
  base: -any
  unordered-containers: -any
  hspec: '>=2.6.1 && <2.8'
  text: -any
  tagged: -any
  base-compat: -any
  github: -any
  file-embed: -any
  aeson: -any
  vector: -any
maintainer: Oleg Grenrus <oleg.grenrus@iki.fi>
synopsis: Access to the GitHub API, v3.
changelog: "## Changes for 0.27\n\n- Add vector of SimpleTeam in \"requested_teams\"
  field of PullRequest\n  [#453](https://github.com/phadej/github/pull/453)\n- Add
  endpoint to create gist\n  [#455](https://github.com/phadej/github/pull/455)\n-
  Update RepoWebhookEvent\n  [#461](https://github.com/phadej/github/pull/461)\n-
  PullRequest Reviews may not have submitted_at field \n  [#450](https://github.com/phadej/github/pull/450)\n\n##
  Changes for 0.26\n\n- Generalize PagedQuery to allow its reuse by preview github
  APIs\n  [#439](https://github.com/phadej/github/pull/439)\n- Add endpoint for listing
  organizations outside collaborators\n  [#445](https://github.com/phadej/github/pull/445)\n-
  Add endpoint for users search\n  [#444](https://github.com/phadej/github/pull/444)\n-
  Make repoWebhookResponseStatus optional\n  [#436](https://github.com/phadej/github/pull/436)\n-
  Teams improvements\n  [#417](https://github.com/phadej/github/pull/417)\n- Add deleteReference
  endpoint\n  [#388](https://github.com/phadej/github/pull/388)\n\t\n## Changes for
  0.25\n\n- Add `executeRequestWithMgrAndRes`\n  [#421](https://github.com/phadej/github/pull/421)\n-
  Add `limitsFromHttpResponse`\n  [#421](https://github.com/phadej/github/pull/421)\n-
  Add label descriptions\n  [#418](https://github.com/phadej/github/pull/418)\n- Add
  \"draft\" option to mergeable state\n  [#431](https://github.com/phadej/github/pull/431)\n-
  Use IssueNumber in editIssueR and issueR\n  [#429](https://github.com/phadej/github/pull/429)\n-
  Manage orgs in GitHub Enterprise\n  [#420](https://github.com/phadej/github/pull/420)\n-
  Add support for collaborator permission endpoint\n  [#425](https://github.com/phadej/github/pull/425)\n-
  Add support for the comment reply endpoint\n  [#424](https://github.com/phadej/github/pull/424)\n-
  Organise exports in `GitHub`\n  [#430](https://github.com/phadej/github/pull/430)\n\n##
  Changes for 0.24\n\n**Major change**:\nIntroduce `github` n-ary combinator to hoist
  `... -> Request rw res`\ninto `... -> IO (Either Error res)` (i.e. n-ary `executeRequest`).\nWith
  that in place drop `.. -> IO (Either Error res)` functions.\n\nThis reduces symbol
  bloat in the library.\n[#415](https://github.com/phadej/github/pull/415)\n\n- Remove
  double `withOpenSSL`\n  [#414](https://github.com/phadej/github/pull/414)\n- Pull
  requests reviews API uses issue number\n  [#409](https://github.com/phadej/github/pull/409)\n-
  Update `Repo`, `NewRepo` and `EditRepo` data types\n  [#407](https://github.com/phadej/github/pull/407)\n\n##
  Changes for 0.23\n\n- Escape URI paths\n  [#404](https://github.com/phadej/github/pull/404)\n-
  Add OwnerBot to OwnerType\n  [#399](https://github.com/phadej/github/pull/399)\n-
  Make File.fileSha optional\n  [#392](https://github.com/phadej/github/pull/392)\n-
  Update User-Agent to contain up to date version\n  [#403](https://github.com/phadej/github/pull/403)\n
  \ [#394](https://github.com/phadej/github/pull/394)\n\n## Changes for 0.22\n\n-
  Type-class for various auth methods\n  [#365](https://github.com/phadej/github/pull/365)\n-
  Throw on non-200 responses\n  [#350](https://github.com/phadej/github/pull/350)\n-
  Add extension point for (preview) media types\n  [#370](https://github.com/phadej/github/pull/370)\n-
  Add missing webhook event types\n  [#359](https://github.com/phadej/github/pull/359)\n-
  Add invitation endpoint\n  [#360](https://github.com/phadej/github/pull/360)\n-
  Add notifications endpoints\n  [#324](https://github.com/phadej/github/pull/324)\n-
  Add ssh keys endpoints\n  [#363](https://github.com/phadej/github/pull/365)\n- Case
  insensitive enum parsing\n  [#373](https://github.com/phadej/github/pull/373)\n-
  Don't try parse unitary responses\n  [#377](https://github.com/phadej/github/issues/377)\n-
  Update dependencies\n  [#364](https://github.com/phadej/github/pull/364)\n  [#368](https://github.com/phadej/github/pull/368)\n
  \ [#369](https://github.com/phadej/github/pull/369)\n- Documentation improvements\n
  \ [#357](https://github.com/phadej/github/pull/357)\n\n## Changes for 0.21\n\n-
  Refactor `Request` type.\n  [#349](https://github.com/phadej/github/pull/349)\n-
  Allow `http-client-0.6`\n  [#344](https://github.com/phadej/github/pull/344)\n-
  Change to use `cryptohash-sha1` (`cryptohash` was used before)\n- Add Create milestone
  endponts\n  [#337](https://github.com/phadej/github/pull/337)\n- Make fileBlobUrl
  and fileRawUrl are optional\n  [#339](https://github.com/phadej/github/issues/339)\n
  \ [#340](https://github.com/phadej/github/pull/340)\n- Add organizationsR to request
  user organizations\n  [#345](https://github.com/phadej/github/pull/345)\n- Add updateMilestoneR,
  deleteMilestoneR\n  [#338](https://github.com/phadej/github/pull/338)\n- Allow multiple
  assignees in NewIssue and EditIssue\n  [#336](https://github.com/phadej/github/pull/336)\n-
  Add `pullRequestPatchR` and `pullRequestDiffR`\n  [#325](https://github.com/phadej/github/pull/325)\n\n##
  Changes for 0.20\n\n- Add ratelimit endpoint\n  [#315](https://github.com/phadej/github/pull/315)\n-
  Add some deployment endoints\n  [#330](https://github.com/phadej/github/pull/330)\n-
  Add webhook installation events\n  [#329](https://github.com/phadej/github/pull/330)\n-
  Tigthen lower bounds (also remove aeson-compat dep)\n  [#332](https://github.com/phadej/github/pull/332)\n\n##
  Changes for 0.19\n\n- Fix issue event type enumeration\n  [#301](https://github.com/phadej/github/issues/301)\n-
  Include label info in `IssseEvent`\n  [#302](https://github.com/phadej/github/issues/302)\n-
  Fix `ShowRepo` example\n  [#306](https://github.com/phadej/github/pull/306)\n- Add
  \"Get archive link\" API\n  [#307](https://github.com/phadej/github/pull/307)\n-
  Make \"repo\" in PullRequestCommit nullable (repository can be gone)\n  [#311](https://github.com/phadej/github/pull/311)\n-
  Add \tread-only emails endpoint\n  [#313](https://github.com/phadej/github/pull/313)\n-
  Organisation membership API\n  [#312](https://github.com/phadej/github/pull/312)\n-
  Fix isPullRequestMerged and other boolean responses\n  [#312](https://github.com/phadej/github/pull/312)\n-
  Add `behind` pull request mergeable state\n  [#308](https://github.com/phadej/github/pull/308)\n-
  Add list organisation invitations endpoint\n\n## Changes for 0.18\n\n- Endpoints
  for deleting issue comments.\n  [#294](https://github.com/phadej/github/pull/294)\n-
  Endpoints for (un)starring gists.\n  [#296](https://github.com/phadej/github/pull/296)\n-
  Add `archived` field to `Repo`.\n  [#298](https://github.com/phadej/github/pull/298)\n-
  Update dependencies.\n  [#295](https://github.com/phadej/github/pull/295)\n- Add
  Statuses endpoints.\n  [#268](https://github.com/phadej/github/pull/268)\n- Add
  requested reviewers field to pull request records.\n  [#292](https://github.com/phadej/github/pull/292)\n\n##
  Changes for 0.17.0\n\n- Add `Ord Request` instance\n- Repository contents\n- Repository
  starring endpoints\n- Pull Request review endpoints\n\n## Changes for 0.16.0\n\n-
  Add support for `mergeable_state = \"blocked\".`\n- Fix HTTP status code of merge
  PR\n- Supports newest versions of dependencies\n- user events\n- release endpoints\n-
  forkExistingRepo\n\n## Changes for 0.15.0\n\n- Reworked `PullRequest` (notably `pullRequestsFor`)\n-
  Reworked PR and Issue filtering\n- GHC-8.0.1 support\n- Change `repoMasterBranch`
  to `repoDefaultBranch` in `Repo`\n- Add `listTeamReposR`\n- Add `myStarredAcceptStarR`\n-
  Add `HeaderQuery` to `Request`\n- Add `Hashable Auth` instance\n- Add `mkUserId`,
  `mkUserName`, `fromUserId`, `fromOrganizationId`\n- Add 'userIssuesR'\n- Add 'organizationIssuesR'\n-
  Make `teamName :: Text` amnd `teamSlug :: Name Team` in both: `Team` and `SimpleTeam`\n-
  Refactor 'Request' structure\n- Added multiple issue assignees\n- Preliminary support
  for repository events: `repositoryEventsR`\n- Support for adding repository permissions
  to the team\n- Remove 'simpleUserType', it was always the same.\n\nSee [git commit
  summary](https://github.com/phadej/github/compare/v0.14.1...v0.15.0)\n\n## Changes
  for 0.14.1\n\n- Add `membersOfWithR`, `listTeamMembersR`\n- Add related enums: `OrgMemberFilter`,
  `OrgMemberRole`, `TeamMemberRole`\n- Add `Enum` and `Bounded` instances to `Privacy`,
  `Permission`,\n  `RepoPublicity`\n- Don't require network access for search tests\n\n##
  Changes for 0.14.0\n\nLarge API changes:\n\n- Use `Text` and `Vector` in place of
  `String` and `[]`.\n- Use `Name` and `Id` tagged types for names and identifiers.\n-
  Make detailed structures un-prefixed, simple ones prefixed with `Simple`. Example:
  `Team` and `SimpleTeam`.\n- Decouple request creation from execution (`*R` and `executeRequest*`
  functions).\n- Add `Binary` instances for all data\n- `GithubOwner` is a `newtype`
  of `Either User Organization`. There's still `SimpleOwner`.\n\n## Changes for 0.5.0:\n\n*
  OAuth.\n* New function: `Github.Repos.organizationRepo`, to get the repo for a specific
  organization.\n* Introduce a new `newRepoAutoInit` flag to `NewRepo`, for whether
  to initialize a repo while creating it.\n* Relax the attoparsec version requirements.\n*
  The above by [John Wiegley](https://github.com/jwiegley).\n\n## Changes for 0.4.1:\n\n*
  Stop using the uri package.\n* Use aeson version 0.6.1.0.\n* Use attoparsec version
  0.10.3.0.\n* Use http-conduit over 1.8.\n* Use unordered-containers between 0.2
  and 0.3.\n\n## Changes for 0.4.0:\n\n* Use http-conduit version 1.4.1.10.\n\n##
  Changes for 0.3.0:\n\n* Re-instantiate the Blobs API.\n* `repoDescription1` and
  `repoPushedAt` are a `Maybe GithubDate`.\n* Add `deleteRepo`, `editRepo`, and `createRepo`.\n*
  Private gists, issues, organizations, pull requests, and users.\n* Lock down `tls`
  and `tls-extra` instead of keeping up with the\n  ever-changing `http-conduit` package.\n*
  Features by [Pavel Ryzhov](https://github.com/paulrzcz) and [Simon Hengel](https://github.com/sol).\n\n##
  Changes for 0.2.1:\n\n* Expand the unordered-containers dependency to anything in
  0.1.x .\n\n## Changes for 0.2.0:\n\n* `milestoneDueOn` and `repoLanguage` are now
  `Maybe` types.\n* Introduce `GithubOwner` as the sum type for a `GithubUser` or
  `GithubOrganization`. Everything that once produced a `GithubUser` now produces
  a `GithubOwner`. All record accessors have changed their names\n* Similar to `GithubOwner`,
  introduce `DetailedOwner`, which can be a `DetailedUser` or a `DetailedOrganization`.
  All record accessors have changed their names\n* An `HTTPConnectionError` now composes
  `SomeException` instead of `IOException`. All exceptions raised by the underlying
  http-conduit library are encapulated there.\n* The `githubIssueClosedBy` function
  now produces a `Maybe GithubOwner`.\n* Remove the Blobs API, as it is broken upstream.\n*
  Bugs found and squashed thanks to [Joey Hess](https://github.com/joeyh) and [Simon
  Hengel](https://github.com/sol).\n"
basic-deps:
  http-client: '>=0.5.12 && <0.8'
  exceptions: '>=0.10.2 && <0.11'
  cryptohash-sha1: '>=0.11.100.1 && <0.12'
  bytestring: '>=0.10.4.0 && <0.11'
  base: '>=4.7 && <4.16'
  unordered-containers: '>=0.2.10.0 && <0.3'
  text: '>=1.2.0.6 && <1.3'
  tls: '>=1.4.1'
  vector-instances: '>=3.4 && <3.5'
  tagged: '>=0.8.5 && <0.9'
  time-compat: '>=1.9.2.2 && <1.10'
  containers: '>=0.5.5.1 && <0.7'
  base-compat: '>=0.11.1 && <0.13'
  deepseq-generics: '>=0.2.0.0 && <0.3'
  binary: '>=0.7.1.0 && <0.11'
  http-link-header: '>=1.0.3.1 && <1.3'
  iso8601-time: '>=0.1.5 && <0.2'
  http-client-tls: '>=0.3.5.3 && <0.4'
  network-uri: '>=2.6.1.0 && <2.7'
  mtl: '>=2.1.3.1 && <2.2 || >=2.2.1 && <2.3'
  hashable: '>=1.2.7.0 && <1.4'
  binary-instances: '>=1 && <1.1'
  base16-bytestring: '>=0.1.1.6 && <1.1'
  transformers: '>=0.3.0.0 && <0.6'
  deepseq: '>=1.3.0.2 && <1.5'
  http-types: '>=0.12.3 && <0.13'
  aeson: '>=1.4.0.0 && <1.6 || >=2.0.1.0 && <2.1'
  transformers-compat: '>=0.6.5 && <0.8'
  vector: '>=0.12.0.1 && <0.13'
all-versions:
- '0.1'
- 0.1.1
- 0.1.2
- 0.2.0
- 0.2.1
- 0.3.0
- 0.4.0
- 0.4.1
- 0.5.0
- 0.6.0
- 0.7.0
- 0.7.1
- 0.7.2
- 0.7.3
- 0.7.4
- '0.8'
- '0.9'
- 0.10.0
- 0.11.0
- 0.11.1
- '0.12'
- '0.13'
- 0.13.1
- 0.13.2
- 0.14.0
- 0.14.1
- 0.15.0
- 0.16.0
- 0.17.0
- '0.18'
- '0.19'
- '0.20'
- '0.21'
- '0.22'
- '0.23'
- '0.24'
- '0.25'
- '0.26'
- '0.27'
author: Mike Burns, John Wiegley, Oleg Grenrus
latest: '0.27'
description-type: markdown
description: |
  Github
  ------

  [![Build Status](https://travis-ci.org/phadej/github.svg?branch=master)](https://travis-ci.org/phadej/github)
  [![Hackage](https://img.shields.io/hackage/v/github.svg)][hackage]

  The Github API v3 for Haskell.

  Some functions are missing; these are functions where the Github API did
  not work as expected. The full Github API is in beta and constantly
  improving.

  Installation
  ============

  In your project's cabal file:

  ```cabal
  -- Packages needed in order to build this package.
  Build-depends:       github
  ```

  Or from the command line:

  ```sh
  cabal install github
  ```

  Example Usage
  =============

  See the samples in the
  [samples/](https://github.com/fpco/github/tree/master/samples) directory.

  Note: some samples might be outdated.

  Documentation
  =============

  For details see the reference [documentation on Hackage][hackage].

  Each module lines up with the hierarchy of
  [documentation from the Github API](http://developer.github.com/v3/).

  Request functions (ending with `R`) construct a data type which can be executed
  in `IO` by `executeRequest` functions. They are all listed in the root `GitHub`
  module.

  IO functions produce an `IO (Either Error a)`, where `a` is the actual thing
  you want. You must call the function using IO goodness, then dispatch on the
  possible error message. Here's an example from the samples:

  Many function have samples under
  [`samples/`](https://github.com/phadej/github/tree/master/samples) directory.

  ```hs
  {-# LANGUAGE NoImplicitPrelude #-}
  {-# LANGUAGE OverloadedStrings #-}

  import Prelude.Compat

  import Data.Text         (Text, pack)
  import Data.Text.IO as T (putStrLn)
  import Data.Monoid       ((<>))

  import GitHub (github')
  import qualified GitHub

  main :: IO ()
  main = do
      possibleUsers <- github' GitHub.usersFollowingR "phadej"
      T.putStrLn $ either (("Error: " <>) . pack . show)
                          (foldMap ((<> "\n") . formatUser))
                          possibleUsers

  formatUser :: GitHub.SimpleUser -> Text
  formatUser = GitHub.untagName . GitHub.simpleUserLogin
  ```

  Test setup
  ==========

  To run integration part of tests, you'll need [github access token](https://github.com/settings/tokens/new)
  Token is needed, because unauthorised access is highly limited.
  It's enough to add only basic read access for public information.

  With `travis encrypt --org --repo yournick/github "GITHUB_TOKEN=yourtoken"` command you get a secret,
  you can use in your travis setup to run the test-suite there.

  Contributions
  =============

  Please see
  [CONTRIBUTING.md](https://github.com/fpco/github/blob/master/CONTRIBUTING.md)
  for details on how you can help.

  Copyright
  =========

  Copyright 2011-2012 Mike Burns.
  Copyright 2013-2015 John Wiegley.
  Copyright 2016-2019 Oleg Grenrus.

  Available under the BSD 3-clause license.

  [hackage]: http://hackage.haskell.org/package/github "Hackage"
license-name: BSD-3-Clause
