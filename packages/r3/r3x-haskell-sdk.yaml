all-versions:
- 0.1.0.0
author: RubiXFunctions
basic-deps:
  aeson: '>=0'
  base: '>=4.7 && <5'
  blaze-html: '>=0'
  bytestring: '>=0'
  case-insensitive: '>=0'
  containers: '>=0'
  cookie: '>=0'
  http-types: '>=0'
  mtl: '>=0'
  r3x-haskell-sdk: '>=0'
  regex-pcre: '>=0'
  text: '>=0'
  transformers: '>=0'
  wai: '>=0'
  warp: '>=0'
changelog: |
  # Changelog for r3x-haskell-sdk

  ## Unreleased changes
changelog-type: markdown
description: |-
  # RubiX Haskell SDK

  [![CircleCI](https://circleci.com/gh/rubixFunctions/r3x-haskell-sdk.svg?style=svg)](https://circleci.com/gh/rubixFunctions/r3x-haskell-sdk)
  [![License](https://img.shields.io/badge/-Apache%202.0-blue.svg)](https://opensource.org/s/Apache-2.0)

  ## Prerequisites
  Stack is needed to build and execute SDK, it can be downloaded from [here](https://www.haskell.org/downloads/)

  ## Usage
  To build the SDK run :
  ```
  $ stack build
  ```
  To execute SDK run :
  ```
  $ stack exec r3x-haskell-sdk-exe
  ```
  alternatively you can run the script `run.sh`:
  ```
  $ ./run.sh
  ```

  ## Verify
  To quickly verify the SDK you can use the pre build example image by:
  ```
  $ docker run -p 8080:8080 quay.io/rubixfunctions/haskell-sdk
  $ curl localhost:8080
      {"message":"Hello RubiX!!!"}%
  ```

  ## Documentation
  For full information on how to use the SDK and deploy a function to Knative, refer to our [Documentation here.](https://github.com/rubixFunctions/r3x-docs/blob/master/README.md)

  ## License
  This project is licensed under the Apache 2.0 License - see the [LICENSE](LICENSE) file for details
description-type: markdown
hash: 5411ed12947b6cc623bbf25997a2abaf26686e5bd97c18dce6a486ab07187df8
homepage: https://github.com/rubixfunctions/r3x-haskell-sdk#readme
latest: 0.1.0.0
license-name: BSD-3-Clause
maintainer: r3xfunctions@gmail.com
synopsis: ''
test-bench-deps:
  aeson: '>=0'
  base: '>=4.7 && <5'
  blaze-html: '>=0'
  bytestring: '>=0'
  case-insensitive: '>=0'
  containers: '>=0'
  cookie: '>=0'
  http-types: '>=0'
  mtl: '>=0'
  r3x-haskell-sdk: '>=0'
  regex-pcre: '>=0'
  text: '>=0'
  transformers: '>=0'
  wai: '>=0'
  warp: '>=0'
