all-versions:
- 0.0.1
- 0.1.0.0
- 0.1.0.1
- 0.1.2.0
- 0.1.2.1
- 0.1.2.2
- 0.1.2.3
- 0.2.0.0
- 0.2.1.0
- 0.3.0.0
- 0.4.0.0
- 0.4.0.1
- 0.4.1.0
- 0.4.2.0
- 0.4.3.0
- 0.4.4.0
- 0.4.5.0
- 0.4.6.0
- 0.4.7.0
- 0.5.0.0
- 0.5.1.0
- 0.5.2.0
- 0.6.0.0
- 0.6.0.1
author: Daniel Diaz
basic-deps:
  base: '>=4 && <5'
  bifunctors: '>=5'
  bytestring: '>=0.9.2.1'
  comonad: '>=4'
  containers: '>=0'
  foldl: '>=1.4'
  free: '>=4'
  monoid-subclasses: '>=1.1'
  profunctors: '>=5'
  semigroupoids: '>=5.0'
  semigroups: '>=0.18'
  split: '>=0.2.2'
  text: '>=0.11.2.0'
  transformers: '>=0.2.0.0'
  void: '>=0.6'
changelog: "# 0.6.0.0\r\n\r\n- Update to match change in foldl library.\r\n\r\n# 0.5.1.0\r\n\r\n-
  Removed upper bounds in dependencies.\r\n\r\n# 0.5.0.0\r\n\r\n- Before, splitters
  always found at least one group, even for empty streams.\r\n  Now, no groups are
  found for empty streams.\r\n- Made some type signatures a bit more strict.\r\n-
  Eliminated previously deprecated functions and modules.\r\n\r\n# 0.4.7.0\r\n\r\n-
  Added \"sections\" splitter.\r\n- Deprecated Control.Foldl.Transduce.Textual\r\n\r\n#
  0.4.6.0\r\n\r\n- Deprecated Control.Foldl.Transduce.ByteString.IO \r\n- Added Control.Foldl.Transduce.ByteString\r\n-
  Added \"paragraphs\" splitter.\r\n\r\n# 0.4.5.0\r\n\r\n- added split\r\n\r\n# 0.4.4.0\r\n\r\n-
  deprecated quiesceWith\r\n- added Fallible.\r\n\r\n# 0.4.3.0\r\n\r\n- deprecated
  splitWhen in favor of break\r\n- deprecated textualSplitWhen in favor of textualBreak\r\n\r\n#
  0.4.2.0\r\n\r\n- Added \"trip\" fold.\r\n- Added Control.Foldl.Transduce.Textual.\r\n\r\n#
  0.4.1.0\r\n\r\n- Added module Control.Foldl.Transduce.ByteString.IO, to\r\n  avoid
  having to depend on other packages for simple I/O tasks.\r\n- Added \"unit\" fold.\r\n\r\n#
  0.4.0.0\r\n\r\n- Changed order of parameters for groups' and groupsM'. Hopefully
  the new one\r\n  is clearer.\r\n- It was annoying to use \"evenly (transduce ...)\"
  every time. Added new\r\n  ToTransductions' typeclass for types that can be converted
  to an infinite\r\n  list of transductions.\r\n- Added ToFold typeclass as well.\r\n\r\n#
  0.3.0.0\r\n\r\n- Transducers can now delimit segments in the done function, too.\r\n
  \ This was required for transducers like surround to work as splitters.\r\n- Strengthened
  the constraints on the surround function to Traversable.\r\n- Added dependency on
  free and monoid-subclasses.\r\n- group functions can now treat each group differently.\r\n-
  Added ignore, splitAt, splitWhen, splitLast\r\n- removed drop, take... use splitAt,
  splitWhen + bisect.\r\n- Added bisect, evenly convenience functions.\r\n\r\n# 0.2.1.0\r\n\r\n-
  Comonad and Extend instances for Transducer \r\n- Added words splitter\r\n- Added
  take, drop, takeWhile, dropWhile transducers\r\n\r\n# 0.2.0.0\r\n\r\n- Removed the
  Spliiter type. Now it's transducers for everything!\r\n- generalizeTransducer ->
  _generalize\r\n- simplifyTransducer -> _simplify\r\n- removed chokepoint and chokepointM\r\n\r\n\r\n#
  0.1.2.0\r\n\r\n- Added explicit bifunctors dependency.\r\n- Added Transduce', TransduceM'
  type synonyms.\r\n- Added groups', groupsM'.\r\n\r\n\r\n# 0.1.1.0\r\n\r\n- Changed
  signatures of transduce' and transduceM'.\r\n- generalize' -> generalizeTransducer\r\n-
  simplify' -> simplifyTransducer\r\n- dropped direct profunctors dependency.\r\n"
changelog-type: text
description: "## What's in this library?\r\n\r\nStateful transducers and streaming-preserving
  group operations for the folds in\r\nGabriel Gonzalez's [foldl](http://hackage.haskell.org/package/foldl)
  package.\r\n\r\n## When to use this library?\r\n\r\n- When you want to wrap a stateful
  decoder over a **Fold**. An example is\r\ndecoding UTF-8: the decoder must be stateful
  because a multi-byte character may\r\nhave been split across two blocks of bytes.\r\n\r\n-
  When you want to tweak the stream of data that arrives into a **Fold**, but\r\nonly
  at certain positions. Stripping whitespace at the beginning of a text\r\nstream,
  for example.\r\n\r\n- When you want to perform group operations without breaking
  \"streaminess\",\r\nsimilar to what [pipes-group](http://hackage.haskell.org/package/pipes-group)\r\ndoes.\r\n\r\n##
  Why use this library for grouping instead of **pipes-group**?\r\n\r\nGrouping fold-side
  instead of producer-side has the advantage that, since the\r\nresults are still
  **Fold**s, you can combine them using **Applicative**.\r\n\r\nAlso, **Fold**s can
  work with sources other than **Producer**s from pipes.\r\n\r\nGrouping fold-side
  has limitations as well:\r\n\r\n- You can't perform bracketing operations like \"withFile\"
  that span the folding\r\n  of an entire group. pipes-group allows them.\r\n\r\n-
  You have more flexibility in pipes-group to decide how to delimit and fold\r\n  the
  next group based on previous results.\r\n\r\n\r\n## Where can I find working examples
  for this library?\r\n\r\nIn the [examples](https://github.com/danidiaz/foldl-transduce/tree/master/examples)
  folder of the repo.\r\n"
description-type: markdown
hash: 228c13ff2010f8003330df98a16ffeddac9149d1370bedf64d56f16013e1944a
homepage: ''
latest: 0.6.0.1
license-name: BSD-3-Clause
maintainer: diaz_carrete@yahoo.com
synopsis: Transducers for foldl folds.
test-bench-deps:
  base: '>=4.4 && <5'
  criterion: '>=1.1.0.0 && <1.6'
  doctest: '>=0.10.1'
  foldl: '>=0'
  foldl-transduce: '>=0'
  free: '>=4'
  lens-family-core: '>=1.2.0'
  monoid-subclasses: '>=1.1'
  split: '>=0.2.2'
  tasty: '>=0.10.1.1'
  tasty-hunit: '>=0.9.2'
  tasty-quickcheck: '>=0.8.3.2'
  text: '>=0'
