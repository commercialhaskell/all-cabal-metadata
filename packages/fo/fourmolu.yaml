homepage: https://github.com/fourmolu/fourmolu
changelog-type: markdown
hash: c3501d5baab6917fcde6584c8ff943261108474339e27ea4dc3d1d20bb5f75b8
test-bench-deps:
  bytestring: -any
  path: '>=0.6 && <0.10'
  base: '>=4.14 && <5.0'
  Diff: '>=0.3 && <0.5'
  hspec: '>=2.0 && <3.0'
  text: '>=2.0 && <3.0'
  megaparsec: '>=9.0'
  filepath: '>=1.2 && <1.5'
  process: '>=1.6 && <2.0'
  Cabal-syntax: '>=3.10 && <3.11'
  containers: '>=0.5 && <0.7'
  ghc-lib-parser: '>=9.6 && <9.7'
  fourmolu: -any
  hspec-megaparsec: '>=2.2'
  temporary: ^>=1.3
  QuickCheck: '>=2.14'
  pretty: '>=1.0 && <2.0'
  path-io: '>=1.4.2 && <2.0'
  yaml: -any
  directory: ^>=1.3
maintainer: |-
  Matt Parsons <parsonsmatt@gmail.com>
  George Thomas <georgefsthomas@gmail.com>
  Brandon Chinn <brandonchinn178@gmail.com>
synopsis: A formatter for Haskell source code
changelog: |
  ## Fourmolu 0.13.1.0

  * Fix `single-constraint-parens: never` with `QuantifiedConstraints` ([#340](https://github.com/fourmolu/fourmolu/issues/340))
  * Fix issue with single documented export + `import-export-style: leading` ([#341](https://github.com/fourmolu/fourmolu/issues/341))
  * Fix reexports configuration not allowing repeated modules ([#336](https://github.com/fourmolu/fourmolu/issues/336))

  ## Fourmolu 0.13.0.0

  * Automatically ignore files in Cabal/Stack directories when recursively finding files to format.

  ### Upstream changes:

  #### Ormolu 0.7.1.0

  * Include `base` fixity information when formatting a Haskell file that's
    not mentioned in an existing cabal file. [Issue
    1032](https://github.com/tweag/ormolu/issues/1032)

  * Update `displayException` for `OrmoluException` to pretty print the
    exception. [PR 1031](https://github.com/tweag/ormolu/pull/1031).

  * Ormolu is now aware of more common module re-exports by default.

  * Support explicit mention of target package name in module re-exports. Even
    if the exported package is not specified as a direct dependency of the
    component being formatted it will still be taken into account correctly.
    [Issue 1037](https://github.com/tweag/ormolu/issues/1037).

  * Ormolu no longer fails when CPP directly follows the import section (a
    regression introduced in 0.7.0.0). [Issue
    1040](https://github.com/tweag/ormolu/issues/1040).

  #### Ormolu 0.7.0.0

  * Inference of operator fixity information is now more precise and takes
    into account the import section of the module being formatted. [Issue
    892](https://github.com/tweag/ormolu/issues/892) and [issue
    929](https://github.com/tweag/ormolu/issues/929).

  * Ormolu can now be made aware of module re-exports through ~~either special
    declarations in `.ormolu` files~~ the `reexports` configuration option (see the readme for a description of the
    syntax), or on the command line with the `--reexport`/`-r` option. [Issue
    1017](https://github.com/tweag/ormolu/issues/1017).

  * ~~Ormolu now looks for `.ormolu` files independently of `.cabal` files. This
    means that it is now possible to have one `.ormolu` file for multiple
    Cabal packages. [Issue 1019](https://github.com/tweag/ormolu/issues/1019).~~

  * Consistently format `do` blocks/`case`s/`MultiWayIf`s with 4 spaces if and
    only if they occur as the applicand. [Issue
    1002](https://github.com/tweag/ormolu/issues/1002) and [issue
    730](https://github.com/tweag/ormolu/issues/730).

  * Support the (deprecated) `DatatypeContexts` extension to avoid surprises.
    [Issue 1012](https://github.com/tweag/ormolu/issues/1012).

  * Don't let comments escape from empty export lists. [Issue
    906](https://github.com/tweag/ormolu/issues/906).

  * Format `\cases` with multiple patterns across multiple lines correctly. [Issue
    1025](https://github.com/tweag/ormolu/issues/1025).

  ## Fourmolu 0.12.0.0

  * Add `single-constraint-parens` option for controlling parenthesis around constraints in type
    signatures. See [issue 288](https://github.com/fourmolu/fourmolu/pull/304)

  * Add `column-limit` option to try to insert line breaks when lines exceed a certain length.
    May break idempotence in some particularly painful cases.
    See [issue 71](https://github.com/fourmolu/fourmolu/pull/305)

  * Add a new CLI flag `--print-defaults` which makes fourmolu print default options to stdout.
    This can be used to generate default config which can be further tweaked by user `fourmolu --print-defaults > fourmolu.yaml`.
    See [issue 307](https://github.com/fourmolu/fourmolu/pull/308)

  ### Upstream changes:

  #### Ormolu 0.6.0.1

  * Fix false positives in AST diffing related to `UnicodeSyntax`. [PR
    1009](https://github.com/tweag/ormolu/pull/1009).

  #### Ormolu 0.6.0.0

  * Haddocks attached to arguments of a data constructor are now formatted in
    the pipe style (rather than the caret style), consistent with everything
    else. As a consequence, now Ormolu's output will be deemed invalid by the
    Haddock shipped with GHC <9.0. [Issue
    844](https://github.com/tweag/ormolu/issues/844) and [issue
    828](https://github.com/tweag/ormolu/issues/828).

  * Insert space before char literals in ticked promoted constructs when
    necessary. [Issue 1000](https://github.com/tweag/ormolu/issues/1000).

  * Switched to `ghc-lib-parser-9.6`:
    * Extended `OverloadedLabels`: `#Foo`, `#3`, `#"Hello there"`.

      Also, it is now disabled by default, as it causes e.g. `a#b` to be parsed
      differently.
    * New extension: `TypeData`, enabled by default.
    * Parse errors now include error codes, cf. https://errors.haskell.org.

  * Updated to `Cabal-syntax-3.10`.

  * Now whenever Ormolu fails to parse a `.cabal` file it also explains why.
    [PR 999](https://github.com/tweag/ormolu/pull/999).

  ## Fourmolu 0.11.0.0

  * Added the `no-space` value for the `in-style` option. See [issue
    291](https://github.com/fourmolu/fourmolu/291)

  ### Upstream changes:

  #### Ormolu 0.5.2.0

  * Eliminated the `fixity-th` Cabal flag because it caused issues on GHC 9.4 as
    well as on aarch64. See [issue
    941](https://github.com/tweag/ormolu/issues/941) and [issue
    927](https://github.com/tweag/ormolu/issues/927).

  * Now operators without explicitly specified fixity default to left
    associativity and highest precedence. [Issue
    907](https://github.com/tweag/ormolu/issues/907).

  #### Ormolu 0.5.3.0

  * Stop making empty `let`s move comments. [Issue
    917](https://github.com/tweag/ormolu/issues/917).

  * Now `.ormolu` fixity override files can use both LF and CRLF line endings.
    [PR 969](https://github.com/tweag/ormolu/pull/969).

  * Normalize parentheses around constraints. [Issue
    264](https://github.com/tweag/ormolu/issues/264).

  * The `ormolu` function now consumes `Text` instead of `String` due to an
    internal refactoring.

  * Exposed a more complete public API in the `Ormolu` module. The API is
    supposed to be stable and change according to
    [PVP](https://pvp.haskell.org/).

  * Now warnings regarding Ormolu not being able to find `.cabal` files or
    finding such files but them not mentioning the source file in question are
    only displayed when `--debug` is used. Printing the warnings by default
    seems to have been confusing, see e.g. [Issue
    971](https://github.com/tweag/ormolu/issues/971) and [issue
    924](https://github.com/tweag/ormolu/issues/924).

  ## Fourmolu 0.10.1.0

  * Fix bug where using `{-` in a single-line comment would wrongfully escape it ([#265](https://github.com/fourmolu/fourmolu/issues/265))
  * Fix idempotence bug with indented multiline comments ([#273](https://github.com/fourmolu/fourmolu/issues/273))

  ## Fourmolu 0.10.0.0

  New options:

  * New `leading-args` option to `function-arrows` configuration that allows leading arrows only for function arguments ([#233](https://github.com/fourmolu/fourmolu/issues/233))
  * Add `haddock-style-module` option ([#135](https://github.com/fourmolu/fourmolu/pull/135))

  Improvements of existing options:

  * Add unicode formatting for quasiquotes and arrow brackets ([#261](https://github.com/fourmolu/fourmolu/pull/261))

  Bug fixes:

  * Fix bug with `let-style` changing single-line let-in blocks in `do` blocks to multiline.
  * Don't consider the first space after `--` part of the comment ([#255](https://github.com/fourmolu/fourmolu/pull/255))

  ### Upstream changes:

  #### Ormolu 0.5.1.0

  * Imports are now sorted by package qualifier, if one is present.
    [Issue 905](https://github.com/tweag/ormolu/issues/905).

  * Extension packs like `GHC2021` and `Haskell2010` are now bumped to the top of
    the list of language pragmas. [Issue
    922](https://github.com/tweag/ormolu/issues/922).

  * Fix formatting of `SCC` pragmas in `do` blocks. [Issue
    925](https://github.com/tweag/ormolu/issues/925).

  * Support type applications in patterns. [Issue
    930](https://github.com/tweag/ormolu/issues/930).

  * Handle `UnicodeSyntax` variants more consistently. [Issue
    934](https://github.com/tweag/ormolu/issues/934).

  * Fix an inconsistency in formatting of types in GADT declarations in
    certain cases. [PR 932](https://github.com/tweag/ormolu/pull/932).

  * Switched to `ghc-lib-parser-9.4`, which brings support for the following new
    syntactic features:
    * `\cases` via `LambdaCase`
    * `OPAQUE` pragmas
    * Unboxed sum type constructors like `(# | #)`.

  * Updated to `Cabal-syntax-3.8`, supporting `cabal-version: 3.8`.

  ## Fourmolu 0.9.0.0

  New configuration options:

  * Add `let-style` and `in-style` configuration options ([#229](https://github.com/fourmolu/fourmolu/pull/229)). The default is set to `let-style: auto` and `in-style: right-align`, which should not reformat already formatted files _(with some exceptions depending on comment placement)_, but allows users to format with `newline` without additional configuration.
  * Add `unicode` configuration ([#206](https://github.com/fourmolu/fourmolu/pull/206))

  Bug fixes:

  * Fix some edge cases with function arrows ([#247](https://github.com/fourmolu/fourmolu/pull/247))
  * Fix formatting of module header + export lists when `WARNING` or `DEPRECATED` pragma is present ([#244](https://github.com/fourmolu/fourmolu/pull/244))
  * Fixed a bug where an extra space was inserted before promoted types (e.g. `foo @'True`) ([#211](https://github.com/fourmolu/fourmolu/pull/211))
  * When `--respectful` is enabled, a `where` keyword on the line after the export list will not be moved up to the end of the previous line. ([#167](https://github.com/fourmolu/fourmolu/issues/167))

  ## Fourmolu 0.8.2.0

  * Add `multi-line-compact` option to `haddock-style` that will output `{-|` for multiline haddocks instead of `{- |` ([#130](https://github.com/fourmolu/fourmolu/pull/130))
  * Add `function-arrows` configuration option to style arrow placement in type signatures ([#209](https://github.com/fourmolu/fourmolu/pull/209))

  ## Fourmolu 0.8.1.0

  * Add `emptyConfig` ([#221](https://github.com/fourmolu/fourmolu/pull/221))
  * Fixed CLI options not overriding config file options, broken in 0.7.0.0 ([#225](https://github.com/fourmolu/fourmolu/pull/225))

  ## Fourmolu 0.8.0.0

  * Consolidate `import-export-comma-style` and `diff-friendly-import-export` into a new option `import-export-style` ([#201](https://github.com/fourmolu/fourmolu/pull/207))
  * Accept folders as input ([#213](https://github.com/fourmolu/fourmolu/issues/213))

  ### Upstream changes:

  #### Ormolu 0.5.0.1

  * Fixed a bug in the diff printing functionality. [Issue
    886](https://github.com/tweag/ormolu/issues/886).

  * Indent closing bracket for list comprehensions in `do` blocks.
    [Issue 893](https://github.com/tweag/ormolu/issues/893).

  * Fix `hs-source-dirs: .` resulting in failing to find a `.cabal` file for a
    Haskell source file. [Issue 909](https://github.com/tweag/ormolu/issues/909).

  * Comments in closed type family declarations are now indented correctly.
    [Issue 913](https://github.com/tweag/ormolu/issues/913).

  * Cache `.cabal` file parsing and processing when given multiple input files in
    the same project. This results in dramatic speedups on projects which have
    both huge `.cabal` files and a large number of individual modules. [Issue
    897](https://github.com/tweag/ormolu/issues/897).

  ## Fourmolu 0.7.0.1

  * Fix bad copy/paste where parsing errors for `haddock-style` would mention `CommaStyle`
  * Include relevant test files in sdist bundle

  ## Fourmolu 0.7.0.0

  * Add `--quiet` flag to make the output quieter
  * Removed `--cabal-default-extensions` flag; the behavior is now enabled by default
  * Add `fixities` configuration to `fourmolu.yaml`
    * See the notes in the Ormolu changelog below, except instead of providing fixity information in a `.ormolu` file, it should be in a `fixities` config option in `fourmolu.yaml`, e.g.

    ```yaml
    fixities:
      - 'infixr 8 .='
      - 'infixr 5 #'
    ```
  * Fixed issue with `import-export-comma-style` for multiline import/export elements ([#187](https://github.com/fourmolu/fourmolu/pull/187))
  * Multiline haddock comments with consecutive empty newlines will no longer report an "AST differs" error ([#172](https://github.com/fourmolu/fourmolu/issues/172))

  ### Upstream changes:

  #### Ormolu 0.5.0.0

  * Changed the way operator fixities and precedences are inferred.
    * Ormolu now tries to locate `.cabal` files of source files by default and
      in addition to default extensions it also infers the list of
      dependencies.
    * Ormolu comes equipped with extensive knowledge of all packages on
      Hackage and operators that those packages define. Knowing the names of
      the dependencies it can select the right fixity and precedence info from
      its knowledge base.
    * You can ask Ormolu not to look for `.cabal` files by using the
      `--no-cabal` switch.
    * Dependencies can be selected manually by using the `-p / --package`
      option (can be repeated many times).
    * The default heuristic algorithm will still try to guess the right
      fixities and precedence.
    * ~Fixity overrides can be provided by the user in the familiar Haskell
      notation (e.g. `infixr 9 .`, one declaration per line). They are loaded
      by default from the `.ormolu` file that is expected to be in the same
      directory as the `.cabal` file of a given source file. However, if
      `--no-cabal` is supplied, the `.ormolu` file will not be looked for either.~
      Fixity declarations can be also provided by using the `-f / --fixity`
      command line option, which see.
    * This resolves the following issues: [Issue
      826](https://github.com/tweag/ormolu/issues/826), [Issue
      785](https://github.com/tweag/ormolu/issues/785), [Issue
      690](https://github.com/tweag/ormolu/issues/690), [Issue
      825](https://github.com/tweag/ormolu/issues/825).

  * Invalid haddock comments are formatted in a more consistent way. Leading
    haddock triggers (`|`, `^`) in an invalid haddock comment block are now
    escaped with a backslash `\`. [Issue
    816](https://github.com/tweag/ormolu/issues/816).

  * Type synonyms and families are now formatted correctly when the equals sign
    is preceded by a comment. [Issue 829](
    https://github.com/tweag/ormolu/issues/829).

  * Bidirectional pattern synonyms are formatted nicer in certain cases.
    [Issue 843](https://github.com/tweag/ormolu/issues/843).

  * Magic comments (like `{- ORMOLU_DISABLED -}`) now allow arbitrary
    succeeding text. This fixes use cases like [Issue
    856](https://github.com/tweag/ormolu/issues/856).

  * Remove discrepancies between unboxed types and terms. [Issue 856
    ](https://github.com/tweag/ormolu/issues/856).
    * Unboxed sum types are now formatted with a space before each `|`.
    * Unboxed unit tuples on type and value levels are formatted as `(# #)`.

  * Errors caused by AST differences now print before/after diffs.
    [Issue 877](https://github.com/tweag/ormolu/issues/877).

  * Improved formatting of data declarations in the case of single-constructor
    record with a Haddock. [Issue
    881](https://github.com/tweag/ormolu/issues/881).

  ## Fourmolu 0.6.0.0

  * Fixed regression in 0.5.0.0 with multiline tuples ([#162](https://github.com/fourmolu/fourmolu/pull/162))
  * Fixed regression in 0.5.0.0 with multiline record types ([#160](https://github.com/fourmolu/fourmolu/pull/160))
  * Fixed regression in 0.5.0.0 with indentation after a list comprehension ([#149](https://github.com/fourmolu/fourmolu/pull/149))
  * Add `import-export-comma-style` configuration to allow leading commas in module import/export lists

  ## Fourmolu 0.5.0.0

  * Fixed issue with leading commas in guards ([#123](https://github.com/fourmolu/fourmolu/pull/123))
  * Use trailing haddocks for record fields when using leading commas ([#124](https://github.com/fourmolu/fourmolu/pull/124))

  ### Upstream changes:

  #### Ormolu 0.4.0.0

  * When a guard is located on its own line, the body associated with this
    guard is indented by one extra level, so that it can easily be
    distinguished from the guard predicate or pattern. [Issue
    806](https://github.com/tweag/ormolu/issues/806).

  * Now a space is forced after `--` in line comments. [Issue
    808](https://github.com/tweag/ormolu/issues/808).

  * Allow formatting Backpack signature files (`.hsig`). The switch between
    regular module mode and signature mode is based on the file extension by
    default, but can be overridden with the `-t / --source-type` command line
    option. [Issue 600](https://github.com/tweag/ormolu/issues/600).

  * Blank Haddock comments are now eliminated. This also fixes issues with
    differing ASTs in some special cases. [Issue
    726](https://github.com/tweag/ormolu/issues/726).

  * Rewrite rules that are never active are now formatted correctly.
    [Issue 823](https://github.com/tweag/ormolu/issues/823).

  * Promoted infix data constructors are now formatted correctly. [Issue 768](
    https://github.com/tweag/ormolu/issues/768).

  * Switched to `ghc-lib-parser-9.2`.
    [Issue 794](https://github.com/tweag/ormolu/issues/794).
     * Support for the new syntax-related language extensions:
       `OverloadedRecordDot` and `OverloadedRecordUpdate`
       (disabled by default).
       [Issue 709](https://github.com/tweag/ormolu/issues/709).
     * Removed support for `record-dot-preprocessor`. For the getter syntax,
       consider using `OverloadedRecordDot` instead. [Issue
       659](https://github.com/tweag/ormolu/issues/659). [Issue
       705](https://github.com/tweag/ormolu/issues/705).
     * Support for the `GHC2021` language.

  #### Ormolu 0.3.1.0

  * Allow check mode when working with stdin input. [Issue 634](
    https://github.com/tweag/ormolu/issues/634).

  * Now guards are printed on a new line if at least one guard is multiline or
    if all guards together occupy more than one line. The body of each guard
    is also indented one level deeper in that case. [Issue
    712](https://github.com/tweag/ormolu/issues/712).

  * Invalid Haddock comments are no longer silently deleted, but rather converted
    into regular comments. [Issue 474](https://github.com/tweag/ormolu/issues/474).

  ## Fourmolu 0.4.0.0

  * Write "Loaded config from" message to `stderr` instead of `stdout` ([#42](https://github.com/fourmolu/fourmolu/pull/42))
  * Fixed issue with multiline haddocks in indented contexts ([#64](https://github.com/fourmolu/fourmolu/pull/64))
  * Avoid renaming magic comments ([#90](https://github.com/fourmolu/fourmolu/pull/90))

  ### Upstream changes:

  #### Ormolu 0.3.0.1

  * Improvements to `.cabal` file handling:
     * When looking for a `.cabal` file, directories were previously
       erroneously also considered. [Issue 781](
       https://github.com/tweag/ormolu/issues/781).
     * We now print a note if Ormolu was told to consider
       `.cabal` files, but no suitable one could be found.
     * Handle an empty `hs-source-dirs` correctly.
     * Also consider modules which are only conditionally listed
       in the `.cabal` file.

  * The special handling of CPP is now only applied if CPP is
    actually enabled. [Issue 782](https://github.com/tweag/ormolu/issues/782).

  * The left hand side of the `:` operator now uses braces if
    necessary. [Issue 780](https://github.com/tweag/ormolu/issues/780).

  #### Ormolu 0.3.0.0

  * Data declarations with multiline kind signatures are now formatted
    correctly. [Issue 749](https://github.com/tweag/ormolu/issues/749).

  * Infix arrow command formations are formatted like usual operators.
    This fixes [Issue 748](https://github.com/tweag/ormolu/issues/748).

  * `do` arrow commands are formatted more flexibly. Fixes [Issue
    753](https://github.com/tweag/ormolu/issues/753).

  * Source code is always read and written using UTF8 and ignoring the native
    line ending conventions. [Issue
    717](https://github.com/tweag/ormolu/issues/717).

  * Opt-in support to respect default-extensions and default-language
    from .cabal files. [Issue 517](https://github.com/tweag/ormolu/issues/517).

  * Empty case expressions are now rendered with braces. [Issue
    765](https://github.com/tweag/ormolu/issues/765).

  * Omit braces on repeated application of `do` blocks. [Issue
    735](https://github.com/tweag/ormolu/issues/735).

  * Improved handling of disabled regions. [PR 773](
    https://github.com/tweag/ormolu/pull/773).
     * Disabled regions are now exactly preserved, in particular
       empty lines and trailing spaces. [Issue
       673](https://github.com/tweag/ormolu/issues/673).
     * Strings like `-}` can now be present in disabled regions.
       [Issue 708](https://github.com/tweag/ormolu/issues/708).

    This means that using CPP or magic comments in certain ways which
    were only supported as a side effect previously (like in
    [Issue 601](https://github.com/tweag/ormolu/issues/601))
    will now result in formatting failures. Also see [Issue 774](
    https://github.com/tweag/ormolu/issues/774).

  #### Ormolu 0.2.0.0

  * Now standalone kind signatures are grouped with type synonyms. [Issue
    683](https://github.com/tweag/ormolu/issues/683).

  * `TemplateHaskell` is not enabled by default anymore. [Issue
    699](https://github.com/tweag/ormolu/issues/699).

  * Made record dot pre-processor rendering idempotent in certain specific
    cases. [Issue 701](https://github.com/tweag/ormolu/issues/701).

  * Added support for arrow command application. [Issue
    716](https://github.com/tweag/ormolu/issues/716).

  * Switched to `ghc-lib-parser-9.0.1`. [PR
    722](https://github.com/tweag/ormolu/pull/722).
     * Support for the new language extensions:
        * `LexicalNegation`, `LinearTypes`: disabled by default
        * `QualifiedDo`: enabled by default
     * Due to [upstream changes in whitespace sensitity](
       https://gitlab.haskell.org/ghc/ghc/-/wikis/migration/9.0#whitespace-sensitive-and-),
       `TypeApplications` is now *enabled* by default. [Issue
       452](https://github.com/tweag/ormolu/issues/452).
     * Haddocks on declarations in files without a `module` header are no longer
       deleted. [Issue 480](https://github.com/tweag/ormolu/issues/480).
     * Due to a change in Haddock parsing, empty Haddock comments on function
       arguments now get deleted.

  * CTYPE pragmas are now preserved. [Issue 689](
    https://github.com/tweag/ormolu/issues/689).

  * `TypeApplications` in data/type family instances are now supported. [Issue
    698](https://github.com/tweag/ormolu/issues/698).

  * Formatting infix arrow command formations now preserves the AST. [Issue
    718](https://github.com/tweag/ormolu/issues/718).

  * Surround code in brackets with spaces if it contains a `StarIsType` `*` to
    prevent unparseable output. [Issue 704](https://github.com/tweag/ormolu/issues/704).

  * Formatting applied multiline constructs in do blocks now preserves the AST.
    [Issue 707](https://github.com/tweag/ormolu/issues/707).

    This will sometimes result in odd indentations, e.g. this snippet is a
    fixed point:
    ```haskell
    foo = do
      do
        (+1)
       1
    ```

  * GHC options passed in via the CLI can now be overridden in local files.
    Previously, if an extension was disabled via the CLI, it could not be
    re-enabled per file.

  * `NegativeLiterals` is no longer enabled by default. Also, spaces after
    negation via `-` are removed where possible. [Issue
    694](https://github.com/tweag/ormolu/issues/694).

  * Minus signs in literal patterns are now preserved in all cases. [Issue
    733](https://github.com/tweag/ormolu/issues/733).

  * Added support for left-to-right arrow application. [Issue
    737](https://github.com/tweag/ormolu/issues/737).

  * Now `--mode check` fails on missing trailing blank lines. [Issue
    743](https://github.com/tweag/ormolu/issues/743).

  * Fixed indentation of arrow forms in do blocks. [Issue
    739](https://github.com/tweag/ormolu/issues/739).

  #### Ormolu 0.1.4.1

  * Added command line option `--color` to control how diffs are printed.
    Standardized the way errors are printed.

  #### Ormolu 0.1.4.0

  * Added support for monad comprehensions. [Issue
    665](https://github.com/tweag/ormolu/issues/665).

  * Fixed a bug when a space was inserted in front of promoted types even when
    it wasn't strictly necessary. [Issue
    668](https://github.com/tweag/ormolu/issues/668).

  * Now the checking mode displays diffs per file when unformatted files are
    found. The rendering of the diffs is also improved. [Issue
    656](https://github.com/tweag/ormolu/issues/656).

  #### Ormolu 0.1.3.1

  * Fixed a problem with multiline record updates using the record dot
    preprocessor. [Issue 658](https://github.com/tweag/ormolu/issues/658).

  ## Fourmolu 0.3.0.0

  * New config option `newlines-between-decls`, to choose the number of blank lines between top-level declarations.
  * Minor CLI improvements. In particular, the set of valid values for each option is communicated more consistently.

  ## Fourmolu 0.2.0.0

  * More consistent indentation. Previously, with indentation set to n, some constructs such as nested lists and tuples would use an ugly mix of n-space and 2-space indentation.

  * New configuration options (see README or Hackage docs for details):
    * `comma-style`
    * `record-brace-space`
    * `indent-wheres`
    * `diff-friendly-import-export`
    * `respectful`
    * `haddock-style`

  ### Upstream changes:

  #### Ormolu 0.1.3.0:

  * Ormolu no longer overwrites already formatted files. [PR
    649](https://github.com/tweag/ormolu/pull/649).

  * Now a space is guaranteed before ticked promoted types. [Issue
    631](https://github.com/tweag/ormolu/issues/631).

  * Made formatting of single-line explicitly bidirectional pattern synonyms
    idempotent. [Issue 630](https://github.com/tweag/ormolu/issues/630).

  #### Ormolu 0.1.2.0:

  * Fixed the bug when comments in different styles got glued together after
    formatting. [Issue 589](https://github.com/tweag/ormolu/issues/589).

  * Added `-i` as a shortcut for `--mode inplace`. [Issue
    467](https://github.com/tweag/ormolu/issues/467).

  * Improved grouping of top-level declarations. [Issue
    466](https://github.com/tweag/ormolu/issues/466).

  ## Fourmolu 0.1.1.0

  ### Upstream changes:

  #### Ormolu 0.1.1.0:

  * Imports in a import lists are now normalized: duplicate imports are
    combined/eliminated intelligently.

  * Import declarations that can be merged are now automatically merged.
    [Issue 414](https://github.com/tweag/ormolu/issues/414).

  * The magic comments for disabling and enabling Ormolu now can encompass any
    fragment of code provided that the remaining code after exclusion of the
    disabled part is still syntactically correct. [Issue
    601](https://github.com/tweag/ormolu/issues/601).

  * Improved sorting of operators in imports. [Issue
    602](https://github.com/tweag/ormolu/issues/602).

  * Fixed a bug related to trailing space in multiline comments in certain
    cases. [Issue 603](https://github.com/tweag/ormolu/issues/602).

  * Added support for formatting linked lists with `(:)` as line terminator.
    [Issue 478](https://github.com/tweag/ormolu/issues/478).

  * Fixed rendering of function arguments in multiline layout. [Issue
    609](https://github.com/tweag/ormolu/issues/609).

  * Blank lines between definitions in `let` and `while` bindings are now
    preserved. [Issue 554](https://github.com/tweag/ormolu/issues/554).

  * Fixed the bug when type applications stuck to the `$` of TH splices that
    followed them. [Issue 613](https://github.com/tweag/ormolu/issues/613).

  * Improved region formatting so that indented fragments—such as definitions
    inside of `where` clauses—can be formatted. [Issue
    572](https://github.com/tweag/ormolu/issues/572).

  * Fixed the bug related to the de-association of pragma comments. [Issue
    619](https://github.com/tweag/ormolu/issues/619).

  ## Fourmolu 0.1.0.0

  * Allow configuration of indentation size via `fourmolu.yaml` config files.

  * An operator on a new line is no longer indented when its left operand is a do-block. This prevents the AST from potentially changing when indenting by more than two spaces.

  ### Upstream changes:

  #### Ormolu 0.1.0.0:

  * Fixed rendering of type signatures concerning several identifiers. [Issue
    566](https://github.com/tweag/ormolu/issues/566).

  * Fixed an idempotence issue with inline comments in tuples and parentheses.
    [Issue 450](https://github.com/tweag/ormolu/issues/450).

  * Fixed an idempotence issue when certain comments were picked up as
    “continuation” of a series of comments [Issue
    449](https://github.com/tweag/ormolu/issues/449).

  * Fixed an idempotence issue related to different indentation levels in a
    comment series. [Issue 512](https://github.com/tweag/ormolu/issues/512).

  * Fixed an idempotence issue related to comments which may happen to be
    separated from the elements they are attached to by the equality sign.
    [Issue 340](https://github.com/tweag/ormolu/issues/340).

  * Fixed an idempotence issue with type synonym and data declarations where
    the type has a Haddock. [Issue
    578](https://github.com/tweag/ormolu/issues/578).

  * Fix the false positive about AST differences in presence of comments with
    multiple blank lines in a row. [Issue
    518](https://github.com/tweag/ormolu/issues/518).

  * Fixed rendering of comments around if expressions. [Issue
    458](https://github.com/tweag/ormolu/issues/458).

  * Unnamed fields of data constructors are now documented using the `-- ^`
    syntax. [Issue 445](https://github.com/tweag/ormolu/issues/445) and [Issue
    428](https://github.com/tweag/ormolu/issues/428).

  * Fixed non-idempotent transformation of partly documented data definition.
    [Issue 590](https://github.com/tweag/ormolu/issues/590).

  * Fixed an idempotence issue related to operators. [Issue
    522](https://github.com/tweag/ormolu/issues/522).

  * Renamed the `--check-idempotency` flag to `--check-idempotence`.
    Apparently only the latter is correct.

  ## Fourmolu 0.0.6.0

  * The project was fourked to provide four space indent.

  ## Ormolu 0.0.5.0

  * Grouping of statements in `do`-blocks is now preserved. [Issue
    74](https://github.com/tweag/ormolu/issues/74).

  * Grouping of TH splices is now preserved. [Issue
    507](https://github.com/tweag/ormolu/issues/507).

  * Comments on pragmas are now preserved. [Issue
    216](https://github.com/tweag/ormolu/issues/216).

  * Ormolu can now be enabled and disabled via special comments. [Issue
    435](https://github.com/tweag/ormolu/issues/435).

  * Added experimental support for simple CPP. [Issue
    415](https://github.com/tweag/ormolu/issues/415).

  * Added two new options `--start-line` and `--end-line` that allow us to
    select a region to format. [Issue
    516](https://github.com/tweag/ormolu/issues/516).

  * Fixed rendering of module headers in the presence of preceding comments or
    Haddocks. [Issue 561](https://github.com/tweag/ormolu/issues/561).

  ## Ormolu 0.0.4.0

  * When given several files to format, Ormolu does not stop on the first
    failure, but tries to format all the files. [Issue
    502](https://github.com/tweag/ormolu/issues/502).

  * Made rendering of pattern matches involving operators consistent with
    other cases of rendering of operators. [Issue
    500](https://github.com/tweag/ormolu/issues/500).

  * More compact rendering of type family injectivity constraints. [Issue
    482](https://github.com/tweag/ormolu/issues/482).

  * Improved rendering of the keyword `where` in class, data, and type family
    declarations. When headers of these declarations are multi-line `where` is
    now put on its own line. [Issue
    509](https://github.com/tweag/ormolu/issues/509).

  * Fixed the bug pertaining to rendering of arrow notation with multiline
    expressions. [Issue 513](https://github.com/tweag/ormolu/issues/513).

  * Made rendering of data type definitions, value-level applications, and
    application of types use the same style. Moreover, existential now doesn't
    cause the data constructor be unconditionally rendered in multiline
    layout. [Issue 427](https://github.com/tweag/ormolu/issues/427).

  * Records with a single data constructor are now formatted more compactly.
    [Issue 425](https://github.com/tweag/ormolu/issues/425).

  * Switched to `ghc-lib-parser-8.10.1`.

  * Implemented support for the new language extensions `ImportQualifiedPost`
    and `StandaloneKindSignatures`.

  ## Ormolu 0.0.3.1

  * Fixed rendering of record updates with the record dot preprocessor syntax
    [Issue 498](https://github.com/tweag/ormolu/issues/498).

  ## Ormolu 0.0.3.0

  * Fixed an issue related to unnecessary use of curly braces. [Issue
    473](https://github.com/tweag/ormolu/issues/473).

  * Fixed the issue with formatting multi-way if when it happens to be a
    function applied to arguments [Issue
    488](https://github.com/tweag/ormolu/issues/488). This changed the way
    multi-line if is formatted in general.

  * Added support for record dot pre-processor when used via the plugin.
    [Issue 486](https://github.com/tweag/ormolu/issues/486).

  * Stopped hanging record constructors and improved placing
    potentially-hanging consturctions in the presence of comments. [Issue
    447](https://github.com/tweag/ormolu/issues/447).

  * Fixed indentation in presence of type applications. [Issue
    493](https://github.com/tweag/ormolu/issues/493).

  * Class and instance declarations now do not have a blank line after
    `where`. Grouping of methods from the original input is also preserved
    with some normalizations. [Issue
    431](https://github.com/tweag/ormolu/issues/431).

  ## Ormolu 0.0.2.0

  * Switched to `ghc-lib-parser` instead of depending on the `ghc` package
    directly. This should allow us to use newest features of GHC while not
    necessarily depending on the newest version of the compiler. In addition
    to that Ormolu is now GHCJS-compatible.

  * Now unrecognized GHC options passed with `--ghc-opt` cause Ormolu to fail
    (exit code 7).

  * Fixed formatting of result type in closed type families. See [issue
    420](https://github.com/tweag/ormolu/issues/420).

  * Fixed a minor inconsistency between formatting of normal and foreign type
    signatures. See [issue 408](https://github.com/tweag/ormolu/issues/408).

  * Fixed a bug when comment before module header with Haddock was moved
    inside the export list. See [issue
    430](https://github.com/tweag/ormolu/issues/430).

  * Empty `forall`s are now correctly preserved. See [issue
    429](https://github.com/tweag/ormolu/issues/429).

  * Fixed [issue 446](https://github.com/tweag/ormolu/issues/446), which
    involved braces and operators.

  * When there are comments between preceding Haddock (pipe-style) and its
    corresponding declaration they are preserved like this in the output
    instead of being shifted. To be clear, this is not a very good idea to
    have comments in that position because the Haddock will end up not being
    associated with the declarations. Issues
    [440](https://github.com/tweag/ormolu/issues/440) and
    [448](https://github.com/tweag/ormolu/issues/448).

  * Implemented correct handling of shebangs. [Issue
    377](https://github.com/tweag/ormolu/issues/377).

  * Implemented correct handling of stack headers. [Issue
    393](https://github.com/tweag/ormolu/issues/393).

  * Sorting language pragmas cannot not change meaning of the input program
    anymore. [Issue 404](https://github.com/tweag/ormolu/issues/404).

  * Fixed formatting of applications where function is a complex expression.
    [Issue 444](https://github.com/tweag/ormolu/issues/444).

  ## Ormolu 0.0.1.0

  * Initial release.
basic-deps:
  bytestring: '>=0.2 && <0.12'
  base: '>=4.14 && <5.0'
  Diff: '>=0.4 && <1.0'
  text: '>=2.0 && <3.0'
  megaparsec: '>=9.0'
  syb: '>=0.7 && <0.8'
  filepath: '>=1.2 && <1.5'
  array: '>=0.5 && <0.6'
  Cabal-syntax: ==3.10.*
  containers: '>=0.5 && <0.7'
  ansi-terminal: '>=0.10 && <1.1'
  ghc-lib-parser: ==9.6.*
  th-env: '>=0.1.1 && <0.2'
  binary: '>=0.8 && <0.9'
  fourmolu: -any
  mtl: '>=2.0 && <3.0'
  MemoTrie: '>=0.6 && <0.7'
  file-embed: '>=0.0.15 && <0.1'
  optparse-applicative: '>=0.14 && <0.19'
  deepseq: '>=1.4 && <1.5'
  scientific: '>=0.3.2 && <1'
  aeson: '>=1.0 && <3.0'
  yaml: '>=0.11.6.0 && <1'
  directory: '>=1.3.3 && <1.4'
all-versions:
- 0.0.6.0
- 0.1.0.0
- 0.2.0.0
- 0.3.0.0
- 0.4.0.0
- 0.5.0.0
- 0.5.0.1
- 0.6.0.0
- 0.7.0.0
- 0.7.0.1
- 0.8.0.0
- 0.8.1.0
- 0.8.2.0
- 0.9.0.0
- 0.10.0.0
- 0.10.1.0
- 0.11.0.0
- 0.12.0.0
- 0.13.0.0
- 0.13.1.0
author: ''
latest: 0.13.1.0
description-type: markdown
description: |
  # Fourmolu

  [![License BSD3](https://img.shields.io/badge/license-BSD3-brightgreen.svg)](http://opensource.org/licenses/BSD-3-Clause)
  [![Hackage](https://img.shields.io/hackage/v/fourmolu.svg?style=flat)](https://hackage.haskell.org/package/fourmolu)
  [![CI](https://github.com/fourmolu/fourmolu/actions/workflows/ci.yml/badge.svg)](https://github.com/fourmolu/fourmolu/actions/workflows/ci.yml)

  * [Configuration](#configuration)
  * [Installation](#installation)
  * [Building from source](#building-from-source)
  * [Usage](#usage)
      * [Web app](#web-app)
      * [Editor integration](#editor-integration)
      * [Language extensions, dependencies, and fixities](#language-extensions-dependencies-and-fixities)
      * [Magic comments](#magic-comments)
      * [Regions](#regions)
      * [Exit codes](#exit-codes)
      * [Using as a library](#using-as-a-library)
  * [Limitations](#limitations)
  * [Contributing](#contributing)
  * [License](#license)

  Fourmolu is a formatter for Haskell source code. It is a fork of [Ormolu](https://github.com/tweag/ormolu), with upstream improvements continually merged.

  We share all bar one of Ormolu's goals:

  * Using GHC's own parser to avoid parsing problems caused by
    [`haskell-src-exts`](https://hackage.haskell.org/package/haskell-src-exts).
  * Let some whitespace be programmable. The layout of the input influences
    the layout choices in the output. This means that the choices between
    single-line/multi-line layouts in certain situations are made by the user,
    not by an algorithm. This makes the implementation simpler and leaves some
    control to the user while still guaranteeing that the formatted code is
    stylistically consistent.
  * Writing code in such a way so it's easy to modify and maintain.
  * That formatting style aims to result in minimal diffs.
  * Choose a style compatible with modern dialects of Haskell. As new Haskell
    extensions enter broad use, we may change the style to accommodate them.
  * Idempotence: formatting already formatted code doesn't change it.
  * Be well-tested and robust so that the formatter can be used in large
    projects.
  * ~~Implementing one “true” formatting style which admits no configuration.~~ We allow configuration of various parameters, via CLI options or config files. We encourage any contributions which add further flexibility.

  ## Configuration

  See https://fourmolu.github.io/config/

  ## Installation

  To install the latest release from Hackage, simply install with Cabal or Stack:

  ```console
  $ cabal install fourmolu
  $ stack install fourmolu
  ```

  ## Building from source

  ```console
  $ cabal build -fdev
  $ stack build --flag fourmolu:dev
  ```

  The `dev` flag may be omitted in your local workflow as you work, but CI may not pass if you only build without the `dev` flag.

  ## Usage

  The following will print the formatted output to the standard output.

  ```console
  $ fourmolu Module.hs
  ```

  Add `-i` (or `--mode inplace`) to replace the contents of the input file with the formatted output.

  ```console
  $ fourmolu -i Module.hs
  ```

  Specify a directory to recursively process all of its `.hs` files:

  ```console
  $ fourmolu -i src
  ```

  Or find all files in a project with `git ls-files`:

  ```bash
  $ fourmolu --mode inplace $(git ls-files '*.hs')
  # Or to avoid hitting command line length limits:
  $ git ls-files -z '*.hs' | xargs -0 fourmolu --mode inplace
  ```

  To check if files are already formatted (useful on CI):

  ```console
  $ fourmolu --mode check src
  ```

  #### :zap: Beware git's `core.autocrlf` on Windows :zap:
  Fourmolu's output always uses LF line endings. In particular,
  `fourmolu --mode check` will fail if its input is correctly formatted
  *except* that it has CRLF line endings. This situation can happen on Windows
  when checking out a git repository without having set [`core.autocrlf`](
  https://www.git-scm.com/docs/git-config#Documentation/git-config.txt-coreautocrlf)
  to `false`.

  ### Web app

  See https://fourmolu.github.io/ to try Fourmolu in your browser. This is re-deployed on every new commit to `main`, so will use the latest version of Fourmolu, potentially including unreleased changes.

  ### Editor integration

  Fourmolu can be integrated with your editor via the [Haskell Language Server](https://haskell-language-server.readthedocs.io/en/latest/index.html). Just set `haskell.formattingProvider` to `fourmolu` ([instructions](https://haskell-language-server.readthedocs.io/en/latest/configuration.html#language-specific-server-options)).

  ### GitHub actions

  [`run-fourmolu`][https://github.com/haskell-actions/run-fourmolu] is the recommended way to ensure that a project is formatted with Fourmolu.

  ### Language extensions, dependencies, and fixities

  Fourmolu automatically locates the Cabal file that corresponds to a given
  source code file. Cabal files are used to extract both default extensions
  and dependencies. Default extensions directly affect behavior of the GHC
  parser, while dependencies are used to figure out fixities of operators that
  appear in the source code. Fixities can also be overridden via the `fixities` configuration option in `fourmolu.yaml`. When the input comes from
  stdin, one can pass `--stdin-input-file` which will give Fourmolu the location
  that should be used as the starting point for searching for `.cabal` files.

  Here is an example of the `fixities` configuration:

  ```yaml
  fixities:
    - infixr 9  .
    - infixr 5  ++
    - infixl 4  <$
    - infixl 1  >>, >>=
    - infixr 1  =<<
    - infixr 0  $, $!
    - infixl 4 <*>, <*, *>, <**>
  ```

  It uses exactly the same syntax as usual Haskell fixity declarations to make
  it easier for Haskellers to edit and maintain.

  `fourmolu.yaml` can also contain instructions about
  module re-exports that Fourmolu should be aware of. This might be desirable
  because at the moment Fourmolu cannot know about all possible module
  re-exports in the ecosystem and only few of them are actually important when
  it comes to fixity deduction. In 99% of cases the user won't have to do
  anything, especially since most common re-exports are already programmed
  into Fourmolu. (You are welcome to open PRs to make Fourmolu aware of more
  re-exports by default.) However, when the fixity of an operator is not
  inferred correctly, making Fourmolu aware of a re-export may come in handy.
  Here is an example:

  ```yaml
  reexports:
    - module Control.Lens exports Control.Lens.At
    - module Control.Lens exports "lens" Control.Lens.Lens
  ```

  Explicit package names are allowed in re-export declarations (see the example above).

  Finally, all of the above-mentioned parameters can be controlled from the
  command line:

  * Language extensions can be specified with the `-o` or `--ghc-opt` flag.
  * Dependencies can be specified with the `-p` or `--package` flag.
  * Fixities can be specified with the `-f` or `--fixity` flag.
  * Re-exports can be specified with the `-r` or `--reexport` flag.

  Searching for `.cabal` files can be disabled by passing
  `--no-cabal`.

  ### Magic comments

  Fourmolu understands two magic comments:

  ```haskell
  {- FOURMOLU_DISABLE -}
  ```

  and

  ```haskell
  {- FOURMOLU_ENABLE -}
  ```

  This allows us to disable formatting selectively for code between these
  markers or disable it for the entire file. To achieve the latter, just put
  `{- FOURMOLU_DISABLE -}` at the very top. Note that for Fourmolu to work the
  fragments where Fourmolu is enabled must be parseable on their own. Because of
  that the magic comments cannot be placed arbitrarily, but rather must
  enclose independent top-level definitions.

  `{- ORMOLU_DISABLE -}` and `{- ORMOLU_ENABLE -}`, respectively, can be used to the same effect,
  and the two styles of magic comments can be mixed.

  ### Regions

  One can ask Fourmolu to format a region of input and leave the rest
  unformatted. This is accomplished by passing the `--start-line` and
  `--end-line` command line options. `--start-line` defaults to the beginning
  of the file, while `--end-line` defaults to the end.

  ### Exit codes

  Exit code | Meaning
  ----------|-----------------------------------------------
  0         | Success
  1         | General problem
  2         | CPP used (deprecated)
  3         | Parsing of original input failed
  4         | Parsing of formatted code failed
  5         | AST of original and formatted code differs
  6         | Formatting is not idempotent
  7         | Unrecognized GHC options
  8         | Cabal file parsing failed
  9         | Missing input file path when using stdin input and accounting for .cabal files
  10        | Parse error while parsing fixity overrides
  100       | In checking mode: unformatted files
  101       | Inplace mode does not work with stdin
  102       | Other issue (with multiple input files)
  400       | Failed to load Fourmolu configuration file

  ### Using as a library

  The `fourmolu` package can also be depended upon from other Haskell programs.
  For these purposes only the top `Ormolu` module should be considered stable.
  It follows [PVP](https://pvp.haskell.org/) starting from the version
  0.10.2.0. Rely on other modules at your own risk.

  ## Limitations

  * CPP support is experimental. CPP is virtually impossible to handle
    correctly, so we process them as a sort of unchangeable snippets. This
    works only in simple cases when CPP conditionals surround top-level
    declarations. See the [CPP](https://github.com/tweag/ormolu/blob/master/DESIGN.md#cpp) section in the design notes for a
    discussion of the dangers.
  * Input modules should be parsable by Haddock, which is a bit stricter
    criterion than just being valid Haskell modules.
  * Various minor idempotence issues, most of them are related to comments or column limits.
  * Fourmolu is in a fairly early stage of development. The implementation should be as stable as Ormolu, as it only makes minimal changes, and is extensively tested. But the default configuration style may change in some minor ways in the near future, as we make more options available. It will always be possible to replicate the old default behaviour with a suitable `fourmolu.yaml`.

  ## Contributing

  If there are any options you'd like to see, let us know. If it's not too complicated to implement (and especially if you implement it yourself!) then we'll probably add it.

  See `DEVELOPER.md` for documentation.

  ## License

  See [LICENSE.md](LICENSE.md).

  Copyright © 2018–2020 Tweag I/O, 2020-present Matt Parsons

  ## Acknowledgements

  The vast majority of work here has been done by the Ormolu developers, and thus they deserve almost all of the credit. This project is simply intended as a haven for those of us who admire their work, but can't quite get on board with some of their decisions when it comes down to the details.
license-name: BSD-3-Clause
