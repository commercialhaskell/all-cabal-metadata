all-versions:
- '0.1'
- '0.2'
- 0.2.0.1
- 0.3.0.0
- 0.3.0.1
- 0.3.0.2
author: Roel van Dijk <vandijk.roel@gmail.com>, Ben Gamari <ben@smart-cactus.org>,
  David Cox <standardsemiconductor@gmail.com>
basic-deps:
  async: '>=2.2 && <2.3'
  base: '>=4.5 && <4.16'
  base-unicode-symbols: '>=0.1.1 && <0.3'
  bytestring: '>=0.10 && <0.12'
  transformers: '>=0.5 && <0.7'
  usb: '>=1.3 && <1.4'
  vector: '>=0.12 && <0.13'
changelog: |
  # Revision history for ftdi

  ## 0.3.0.2 -- 2021-09-25

  * Update README with code samples and additional resources
  * Update generic-random, transformers bounds

  ## 0.3.0.1 -- 2021-06-19

  * Update README
  * Update generic-random bounds

  ## 0.3.0.0 -- 2021-04-10

  * Major project update
  * MPSSE support
  * Additional documentation
changelog-type: markdown
description: "# FTDI\n[![Haskell CI](https://github.com/standardsemiconductor/ftdi/workflows/Haskell%20CI/badge.svg?branch=master)](https://github.com/standardsemiconductor/ftdi/actions/workflows/haskell.yml)\n[![Hackage][hackage-badge]][hackage]\n[![Hackage
  Dependencies][hackage-deps-badge]][hackage-deps]\n\nThis library enables you to
  communicate with FTDI USB devices. It is implemented as a lightweight wrapper around
  the [usb](https://hackage.haskell.org/package/usb) library.\n\nSee [bindings-libusb](https://hackage.haskell.org/package/bindings-libusb)
  for instructions to install [libusb](https://libusb.info).\n\n## Build Source (Ubuntu)\n\n```bash\n$
  sudo apt install libusb-1.0-0-dev\n$ git clone https://github.com/standardsemiconductor/ftdi.git\n$
  cd ftdi/\n$ cabal build\n$ cabal test\n```\n\n## Sample Usage\n\nFind the first
  USB device matching the vendor ID and product ID:\n\n```haskell\nimport qualified
  System.USB as USB\nimport qualified Data.Vector as V (toList)\nimport Data.List
  (find)\nimport System.FTDI\n\ndata Failure = FailureNotFound\n             | FailureOther\n\nfindUSBDevice
  \n  :: USB.VendorId \n  -> USB.ProductId \n  -> IO (Either Failure (USB.Device,
  USB.Ctx))\nfindUSBDevice vendorId productId = do\n  ctx <- USB.newCtx\n  devDescs
  <- getDeviceDescs ctx\n  return $ case fst <$> find (match . snd) devDescs of\n
  \   Nothing -> Left FailureNotFound\n    Just dev -> Right (dev, ctx)\n  where\n
  \   match :: USB.DeviceDesc -> Bool\n    match devDesc =  USB.deviceVendorId  devDesc
  == vendorId\n                  && USB.deviceProductId devDesc == productId\n\ngetDeviceDescs
  :: USB.Ctx -> IO [(USB.Device, USB.DeviceDesc)]\ngetDeviceDescs ctx = do\n  devs
  <- V.toList <$> USB.getDevices ctx\n  deviceDescs <- mapM USB.getDeviceDesc devs\n
  \ return $ zip devs deviceDescs\n```\n\nSetup an FT2232 FTDI device on interface
  A using MPSSE (Multi-Protocol Synchronous Serial Engine):\n\n```haskell\nwithFTDI
  \n  :: USB.VendorId \n  -> USB.productId\n  -> (InterfaceHandle -> IO (Either Failure
  a) \n  -> IO (Either Failure a)\nwithFTDI vendorId productId action = findUSBDevice
  vendorId productId >>= \\case\n  Left failure -> return $ Left failure\n  Right
  (usbDevice, ctx) -> do\n    ftdiDevice <- fromUSBDevice usbDevice ChipType_2232H\n
  \   withDeviceHandle ftdiDevice $ \\devHndl -> do\n      resetUSB devHndl\n      withDetachedKernelDriver
  devHndl Interface_A $\n        withInterfaceHandle devHndl Interface_A $ \\ifHndl
  -> do\n          reset ifHndl\n          purgeReadBuffer ifHndl\n          purgeWriteBuffer
  ifHndl\n          setLatencyTimer ifHndl 1\n          setBitMode ifHndl 0xFF BitMode_MPSSE\n
  \         action ifHndl\n```\n\n## References\n* [FTDI Website](https://ftdichip.com/)\n*
  [Application Note AN_108](https://www.ftdichip.com/Support/Documents/AppNotes/AN_108_Command_Processor_for_MPSSE_and_MCU_Host_Bus_Emulation_Modes.pdf):
  Command Processor for MPSSE and MCU Host Bus Emulation Modes\n* [USB in a NutShell](https://www.beyondlogic.org/usbnutshell/usb1.shtml):
  Making sense of the USB standard\n\n[hackage]:            <https://hackage.haskell.org/package/ftdi>\n[hackage-badge]:
  \     <https://img.shields.io/hackage/v/ftdi.svg?color=success>\n[hackage-deps-badge]:
  <https://img.shields.io/hackage-deps/v/ftdi.svg>\n[hackage-deps]:       <http://packdeps.haskellers.com/feed?needle=ftdi>\n"
description-type: markdown
hash: e15e83b66bac54593a7e643d25ca7b9a4b8358c7cf541283e0461be0aeb106f3
homepage: ''
latest: 0.3.0.2
license-name: BSD-3-Clause
maintainer: David Cox <standardsemiconductor@gmail.com
synopsis: A thin layer over USB to communicate with FTDI chips
test-bench-deps:
  QuickCheck: '>=2.11 && <2.15'
  base: '>=0'
  base-unicode-symbols: '>=0'
  bytestring: '>=0'
  generic-random: '>=1.3 && <1.6'
  random: '>=1.0.0 && <1.3'
  tagged: '>=0.8 && <0.9'
  test-framework: '>=0.8 && <0.9'
  test-framework-quickcheck2: '>=0.3 && <0.4'
  transformers: '>=0'
  usb: '>=0'
  vector: '>=0'
