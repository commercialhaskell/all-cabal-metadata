homepage: ''
changelog-type: ''
hash: 96131fb9a7fa8c6c81ba0ec49803306664541bf8395abcb4dc9936dc389d197a
test-bench-deps: {}
maintainer: Henning Thielemann <haskell@henning-thielemann.de>
synopsis: Sets of enumeration values represented by machine words
changelog: ''
basic-deps:
  base: '>=4 && <5'
  storable-record: '>=0.0.1 && <0.1'
  semigroups: '>=0.1 && <1.0'
  data-accessor: '>=0.2.1 && <0.3'
all-versions:
- '0.0'
- 0.0.1
- 0.0.2
- 0.0.3
- 0.0.4
- 0.0.4.1
- 0.0.5
- '0.1'
author: Henning Thielemann <haskell@henning-thielemann.de>
latest: '0.1'
description-type: haddock
description: |-
  With this package you can create a type safe interface to flag sets.
  It is intended for interfacing to C libraries via FFI,
  where Word8, Word16, or Word32 types are commonly used to store bit vectors.
  E.g. the type @EnumSet Word16 Ordering@
  represents a flag set stored in a Word16
  that supports the flags @LT@, @EQ@, @GT@.

  This package is similar to the @bitset@ package and
  the @Data.Edison.Coll.EnumSet@ module in the @edison@ package,
  however our implementation allows you to choose the embedding type
  and thus the maximum size of the set.

  See also @data-flags@ and @Data.EnumSet@ in @enummapset@.
license-name: BSD-3-Clause
