homepage: https://github.com/TomMD/entropy
changelog-type: ''
hash: daf9d89968eae0a249c79f15378e98bcb480cefb9936191a6d052163b8865de4
test-bench-deps: {}
maintainer: Thomas DuBuisson <thomas.dubuisson@gmail.com>
synopsis: A platform independent entropy source
changelog: ''
basic-deps:
  bytestring: -any
  unix: <2.8
  base: '>=4.8 && <5'
all-versions:
- '0.1'
- '0.2'
- 0.2.1
- 0.2.2
- 0.2.2.1
- 0.2.2.2
- 0.2.2.3
- 0.2.2.4
- '0.3'
- 0.3.1
- 0.3.2
- 0.3.3
- 0.3.4
- 0.3.4.1
- 0.3.5
- 0.3.6
- 0.3.7
- 0.3.8
- '0.4'
- 0.4.1
- 0.4.1.1
- 0.4.1.2
- 0.4.1.3
- 0.4.1.4
- 0.4.1.5
- 0.4.1.6
- 0.4.1.7
author: Thomas DuBuisson <thomas.dubuisson@gmail.com>
latest: 0.4.1.7
description-type: markdown
description: |
  # Introduction

  This package allows Haskell users to easily acquire entropy for use in critical
  security applications by calling out to either windows crypto api, unix/linux's
  `getrandom` and `/dev/urandom`. Hardware RNGs (currently RDRAND, patches
  welcome) are supported via the `hardwareRNG` function.

  ## Quick Start

  To simply get random bytes use `getEntropy`:

  ```
  #!/usr/bin/env cabal
  {- cabal:
      build-depends: base, entropy, bytestring
  -}
  import qualified Data.ByteString as BS
  import           System.Entropy

  main :: IO ()
  main = print . BS.unpack =<< getEntropy 16
  -- Example output: [241,191,215,193,225,27,121,244,16,155,252,41,131,38,6,100]
  ```

  ## Faster Randoms from Hardware

  Most x86 systems include a hardware random number generator.  These can be
  faster but require more trust in the platform:

  ```
  import qualified Data.ByteString as B
  import           System.Entropy

  eitherRNG :: Int -> IO B.ByteString
  eitherRNG sz = maybe (getEntropy sz) pure =<< getHardwareEntropy sz

  main :: IO ()
  main = print . B.unpack =<< eitherRNG 32
  ```

  This package supports Windows, {li,u}nix, QNX, and has preliminary support for HaLVM.

  Typically tested on Linux and OSX - testers are as welcome as patches.

  [![Build Status](https://travis-ci.org/TomMD/entropy.svg?branch=master)](https://travis-ci.org/TomMD/entropy)
license-name: BSD-3-Clause
