all-versions:
- 0.1.0.0
- 0.1.0.1
- 0.1.1.0
- 0.1.2.0
author: winterland1989
basic-deps:
  base: '>=4.6 && <5.0'
  semigroups: '>=0'
changelog: ''
changelog-type: ''
description: |
  [![Hackage](https://img.shields.io/hackage/v/roundRobin.svg?style=flat)](http://hackage.haskell.org/package/roundRobin)
  [![Travis-CI](https://travis-ci.org/winterland1989/roundRobin.svg)](https://travis-ci.org/winterland1989/roundRobin)

  # A simple round-robin data type

  This package provide a simple data type wrap a round-robin table. so you can select resources(host, connection...) using round-robin fashion.

  ## Example

  ```haskell
  import qualified Date.RoundRobin as RR
  import qualified Network.HTTP.Client as HTTP

  main :: IO ()
  main = do
      reqs <- mapM HTTP.parseUrl ["http://foo.com", "http://bar.com", "http://qux.com"]
      proxyTable <- RR.newRoundRobin reqs
      manager <- HTTP.newManager HTTP.defaultManagerSettings

      ...
      -- maybe now you're inside a server service(a forked thread)
      -- use select to choose a request in round-robin fashion
          req <- RR.select proxyTable
          res <- HTTP.httpLbs req manager
          ...
  ```
description-type: markdown
hash: 0f7074a24f65409720ba544f5da99a7c8417ebe004de6d2b30773c55d122f31f
homepage: ''
latest: 0.1.2.0
license-name: MIT
maintainer: winterland1989@gmail.com
synopsis: A simple round-robin data type
test-bench-deps:
  QuickCheck: '>=0'
  base: '>=0'
  roundRobin: '>=0'
  semigroups: '>=0'
  tasty: '>=0'
  tasty-quickcheck: '>=0'
