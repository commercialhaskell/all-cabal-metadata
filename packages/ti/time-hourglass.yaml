all-versions:
- 0.2.14
author: Vincent Hanquez <vincent@snarc.org>
basic-deps:
  base: '>=4.11 && <5'
  deepseq: '>=0'
changelog: "Change log for `time-hourglass`\r\n\r\nAll notable changes to this project
  will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand
  this project adheres to the\r\n[Haskell Package Versioning Policy](https://pvp.haskell.org/).\r\n\r\n##
  0.2.14\r\n\r\n* In test-suite and benchmark, depend on main library, drop dependency
  on\r\n  package `hourglass`.\r\n\r\n## 0.2.13\r\n\r\n* Drop support for GHC < 8.4.\r\n*
  Move library modules to directory `src` and benchmark module to directory\r\n  `benchmarks`.\r\n*
  Move module `Example.Time.Compat` to directory `examples`.\r\n* Expose module `Time.Epoch`
  and deprecate equivalent module\r\n  `Data.Hourglass.Epoch`.\r\n* Renamed non-exposed
  library modules under the `Time.*` hierarchy.\r\n* Use `LANGUAGE PackageImports`
  in module `Example.Time.Compat`, allowing\r\n  `stack ghci examples/Example/Time/Compat.hs`.\r\n*
  Eliminate the use of CPP to vary source code for different operating systems.\r\n*
  Fix `other-modules` of `bench-hourglass` benchmark.\r\n* `bench-hourglass` benchmark
  depends on `tasty-bench`, drop dependency on\r\n  `gauge`.\r\n* Improve Haddock
  and other documentation.\r\n* Export new `dateFromUnixEpoch` and deprecate identical
  `dateFromPOSIXEpoch` to\r\n  name epoch consistently.\r\n* Export new `dateFromMJDEpoch`
  and deprecate identical `dateFromTAIEpoch` to\r\n  fix the latter being a misnomer.\r\n\r\n##
  0.2.12\r\n\r\n* Rename `hourglass-0.2.12` package as `time-hourglass-0.2.12`.\r\n*
  Cabal file specifies `cabal-version: 1.12` (not `>= 1.10`).\r\n* Change maintainer
  field to `Mike Pilgrem <public@pilgrem.com>`.\r\n* Add `bug-reports` field to Cabal
  file.\r\n* Reset `CHANGELOG.md`.\r\n* Update `README.md` badges.\r\n* In test-suite
  `test-hourglass` replace use of `parseTime` (removed from\r\n  package `time-1.10`)
  with `parseTimeM True`.\r\n"
changelog-type: markdown
description: "time-hourglass\r\n==============\r\n\r\n![Build Status](https://github.com/mpilgrem/time-hourglass/actions/workflows/tests.yml/badge.svg)\r\n[![License](https://img.shields.io/badge/License-BSD%203--Clause-blue.svg)](https://opensource.org/licenses/BSD-3-Clause)\r\n[![Haskell](https://img.shields.io/badge/Haskell-5e5086?logo=haskell&logoColor=white)](http://haskell.org)\r\n\r\nOriginally
  forked from\r\n[`hourglass-0.2.12`](https://hackage.haskell.org/package/hourglass-0.2.12).\r\n\r\n`time-hourglass`
  (originally `hourglass`) is a simple and efficient time\r\nlibrary.\r\n\r\nDocumentation\r\n-------------\r\n\r\nSee
  the Haddock documentation on [Hackage](http://hackage.haskell.org/package/time-hourglass).\r\n\r\nDesign\r\n------\r\n\r\nA
  key part of the design is the `Timeable` and `Time` type classes. Types\r\nrepresenting
  time values that are instances of these classes allow easy\r\nconversion between
  values of one time type and another.\r\n\r\nFor example:\r\n\r\n~~~haskell\r\nlet
  dateTime0 =\r\n      DateTime\r\n        { dtDate = Date\r\n            { dateYear
  = 1970\r\n            , dateMonth = January\r\n            , dateDay = 1\r\n            }\r\n
  \       , dtTime = TimeOfDay\r\n            { todHour = 0\r\n            , todMin
  = 0\r\n            , todSec = 0\r\n            , todNSec = 0\r\n            }\r\n
  \       }\r\n    elapsed0 = Elasped 0\r\n\r\n> timeGetElapsed elapsed0 == timeGetElapsed
  dateTime0\r\nTrue\r\n> timeGetDate elapsed0 == timeGetDate dateTime0\r\nTrue\r\n>
  timePrint \"YYYY-MM\" elapsed0\r\n\"1970-01\"\r\n> timePrint \"YYYY-MM\" dateTime0\r\n\"1970-01\"\r\n~~~\r\n\r\nThe
  library has the same limitations as your operating system, namely:\r\n\r\n* on 32-bit
  Linux, you can't get a date after the year 2038; and\r\n* on Windows, you can't
  get a date before the year 1601.\r\n\r\nComparaison with the `time` package\r\n-----------------------------------\r\n\r\n*
  \  Getting the elapsed time since 1970-01-01 00:00:00 UTC (POSIX time) from the\r\n
  \   system clock:\r\n\r\n    ~~~haskell\r\n    -- With time:\r\n    import Data.Time.Clock.POSIX
  ( getPOSIXTime )\r\n\r\n    ptime <- getPOSIXTime\r\n\r\n    -- With time-hourglass:\r\n
  \   import System.Hourglass ( timeCurrent )\r\n\r\n    ptime <- timeCurrent\r\n
  \   ~~~\r\n\r\n*   Getting the current year:\r\n\r\n    ~~~haskell\r\n    -- With
  time:\r\n    import Data.Time.Clock ( UTCTime (..) )\r\n    import Data.Time.Clock.POSIX
  ( getCurrentTime )\r\n    import Data.Time.Calendar ( toGregorian )\r\n\r\n    currentYear
  <- (\\(y, _, _) -> y) . toGregorian . utcDay <$> getCurrentTime\r\n\r\n    -- With
  time-hourglass:\r\n    import System.Hourglass ( timeCurrent )\r\n    import Data.Hourglass
  ( Date (..), timeGetDate )\r\n\r\n    currentYear <- dateYear . timeGetDate <$>
  timeCurrent\r\n    ~~~\r\n\r\n*   Representating \"4th May 1970 15:12:24\"\r\n\r\n
  \   ~~~haskell\r\n    -- With time:\r\n    import Data.Time.Clock ( UTCTime (..),
  secondsToDiffTime )\r\n    import Date.Time.Calendar ( fromGregorian )\r\n\r\n    let
  day = fromGregorian 1970 5 4\r\n        diffTime = secondsToDiffTime (15 * 3600
  + 12 * 60 + 24)\r\n    in  UTCTime day diffTime\r\n\r\n    -- With time-hourglass:\r\n
  \   import Date.Time ( Date (..), DateTime (..), TimeOfDay (..) )\r\n\r\n    DateTime
  (Date 1970 May 4) (TimeOfDay 15 12 24 0)\r\n    ~~~\r\n\r\nHistory\r\n-------\r\n\r\nThe
  [`hourglass`](https://hackage.haskell.org/package/hourglass) package was\r\noriginated
  and then maintained by Vincent Hanquez. For published reasons, he\r\ndoes not intend
  to develop the package further after version 0.2.12 but he also\r\ndoes not want
  to introduce other maintainers.\r\n"
description-type: markdown
hash: 85d11bc87ea954d75a02f51adf91c6a5a5f60188354653ccf8052eceaba5b630
homepage: https://github.com/mpilgrem/time-hourglass
latest: 0.2.14
license-name: BSD-3-Clause
maintainer: Mike Pilgrem <public@pilgrem.com>
synopsis: A simple and efficient time library
test-bench-deps:
  base: '>=4.11 && <5'
  deepseq: '>=0'
  tasty: '>=0'
  tasty-bench: '>=0'
  tasty-hunit: '>=0'
  tasty-quickcheck: '>=0'
  time: '>=0'
  time-hourglass: '>=0'
