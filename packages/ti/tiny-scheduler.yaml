all-versions:
- 0.1.0.0
- 0.1.1.0
- 0.1.1.1
- 0.1.1.2
- 0.1.4.0
- 0.1.4.1
- 0.1.4.2
- 0.1.4.3
author: Functor soup
basic-deps:
  async: '>=0'
  base: '>=4.7 && <5'
  time: '>=0'
changelog: ''
changelog-type: ''
description: "# tiny-scheduler\n\nUtility Library to run jobs concurrently at predetermined
  Intervals\n\n## Basic Example\n\n```haskell\n\nimport TinyScheduler.Jobs\nimport
  TinyScheduler.SubJobs\nimport TinyScheduler.Time\nimport Data.Time\n\nintervalio
  :: Interval\nintervalio = (Minutes 1) + (Secs 20)\n\njobx :: UTCTime -> Job ()\njobx
  x = makeJob 1234 4 intervalio x (putStrLn \"Hello\")\n\nmain :: IO ()\nmain = getCurrentTime
  >>= (\\x ->\n      execSubJobs . convertJobIntoSubJobs x $ (jobx x)) >> \n      return
  ()\n\n```\n\n### A little more advanced Example\n\nIn the following, assuming that
  time starts at 0, jobs are fired at 1 minute 2 seconds, 1 minutes 4 seconds,\nand
  2 minutes 2 seconds and 2 minutes 4 seconds from current time\n\n```haskell\n\nimport
  TinyScheduler.Jobs\nimport TinyScheduler.SubJobs\nimport TinyScheduler.Time\nimport
  Data.Time\nimport Data.Monoid\n\natom1 :: TimeAtom\natom1 =  makeTimeAtom 2 (Minutes
  1)\n\natom2 :: TimeAtom\natom2 =  makeTimeAtom 2 (Secs 2)\n\njobx :: UTCTime ->
  Job ()\njobx x = timeAtomToJob 1234 (putStrLn \"Hello\") x (atom1 <> atom2)\n\nmain
  :: IO ()\nmain = getCurrentTime >>= (\\x ->\n      execSubJobs . convertJobIntoSubJobs
  x $ (jobx x)) >> \n      return ()\n\n```\n\n# how to install\n\n`stack install
  tiny-scheduler`\n\n## pending work\n1. Tests\n2. More documentation\n3. Haddock
  documentation\n4. Complete the example below\n\n\n### for an application based example
  (still in progress)\ngo to  [https://github.com/functor-soup/tiny-simple-scheduler-example](https://github.com/functor-soup/tiny-simple-scheduler-example)\n"
description-type: markdown
hash: 342fbfbffcda5f3fa9b73c889c52a2bdc5e520f0670688fa7af2ca3fbfa59c12
homepage: https://github.com/functor-soup/tiny-scheduler#readme
latest: 0.1.4.3
license-name: BSD-3-Clause
maintainer: functor.soup@gmail.com
synopsis: tiny no-brainer job scheduler
test-bench-deps: {}
