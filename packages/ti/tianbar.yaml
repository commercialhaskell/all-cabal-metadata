all-versions:
- 0.1.0.0
- 0.1.1.0
- 0.1.2.0
- 0.1.3.0
- 0.1.3.1
- 0.2.0.0
- 0.2.1.0
- 0.2.2.0
- 0.2.2.1
- 0.3.0.0
- 0.3.1.0
- 0.3.2.0
- 0.3.3.0
- 0.3.4.0
- 0.3.4.1
- 0.3.5.0
- 0.3.6.0
- 0.4.0.0
- 0.4.0.1
- 0.4.1.0
- 0.4.2.0
- 0.4.3.0
- 0.4.4.0
- 0.4.5.0
- 0.4.6.0
- 0.4.6.3
- 0.4.7.0
- 0.4.8.0
- 1.0.0.0
- 1.0.1.0
- 1.0.2.0
- 1.0.3.0
- 1.1.0.0
- 1.1.0.1
- 1.1.1.1
- 1.2.0.0
- 1.2.1.0
- 1.2.2.0
- 1.2.3.0
- 1.2.4
- 1.2.5
author: Alexey Kotlyarov
basic-deps:
  aeson: '>=0'
  base: '>3 && <5'
  blaze-html: '>=0'
  blaze-markup: '>=0'
  bytestring: '>=0'
  containers: '>=0'
  dbus: '>=0'
  directory: '>=0'
  filepath: '>=0'
  gi-gdk: '>=0'
  gi-gio: '>=0'
  gi-glib: '>=0'
  gi-gtk: '>=0'
  gi-webkit2: '>=0'
  haskell-gi-base: '>=0'
  http-types: '>=0'
  lens: '>=0'
  mime-types: '>=0'
  mtl: '>=0'
  network: '>=0'
  process: '>=0'
  random: '>=0'
  scientific: '>=0'
  split: '>=0'
  text: '>=0'
  transformers: '>=0'
  unordered-containers: '>=0'
  utf8-string: '>=0'
  vector: '>=0'
  xdg-basedir: '>=0'
  xmonad: '>=0'
  xmonad-contrib: '>=0'
changelog: ''
changelog-type: ''
description: |
  Tianbar
  =======

  [![Build status](https://img.shields.io/travis/aloetesting/aloe.svg)](https://travis-ci.org/aloetesting/aloe)
  [![Hackage](https://img.shields.io/hackage/v/tianbar.svg)](http://hackage.haskell.org/package/tianbar)

  Tianbar is a status bar for XMonad and possibly similar window managers. It is
  using WebKit as its rendering engine, meaning that the entire look and feel is
  customizable using HTML, CSS and JavaScript.

  ![Screenshot](tianbar.png)

  Usage
  -----

  Tianbar will show `index.html` from its [XDG configuration directory][xdg]
  (usually `$HOME/.config/tianbar`). It it up to you to create that, add styles,
  widgets and other behavior.

  A small collection of widgets written in JavaScript is bundled with Tianbar,
  see `scripts` directory. Widgets are loaded using [RequireJS][requirejs],
  which, as well as [jQuery][jquery] and other libraries required, are bundled
  with Tianbar.

  For an example of RequireJS configuration, see the
  [example index.html](index.html).

  ### IBus

  Displays the status of IBus input method.

  ### Network

  Displays the connection status from NetworkManager.

  ### Power

  Displays the battery status for all the batteries reporting through UPower.

  ### Time

  Displays the time and date.

  ### Volume

  Displays the current PulseAudio volume. Note that `module-dbus-protocol`
  is required to be available.

  ### Weather

  Displays the weather at current location (determined via HTML geolocation API)
  through [OpenWeatherMap][openweathermap].

  ### XMonad

  XMonad status widget works by listening on DBus for messages sent by the
  provided `logHook`, see `System.Tianbar.XMonadLog` documentation for details.

  Quirks
  ------

  * AJAX requests from Tianbar are not subject to the same origin policy. This
    makes it easier to interact with various Web services. You can also make
    requests to the local files, for example, to extract CPU activity statistics
    from `/proc/stat`.
  * Interaction with the displayed Web page is limited. For example, text fields
    are not active if there are other windows on the screen.

  Acknowledgements
  ----------------

  The project is essentially a fork of [Taffybar][taffybar], stripped down of
  Haskell configuration and widgets and not yet having achieved functional parity
  with it.

  [freegeoip]: http://freegeoip.net/
  [jquery]: http://jquery.com/
  [openweathermap]: http://openweathermap.org/
  [requirejs]: http://requirejs.org/
  [taffybar]: https://github.com/travitch/taffybar
  [xdg]: http://standards.freedesktop.org/basedir-spec/basedir-spec-latest.html
description-type: markdown
hash: a180743a97246b892ba8fed8b4640f6ca2137308c302f3f361329ec4535051b7
homepage: https://github.com/koterpillar/tianbar
latest: 1.2.5
license-name: MIT
maintainer: a@koterpillar.com
synopsis: A desktop bar based on WebKit
test-bench-deps:
  aeson: '>=0'
  base: '>3 && <5'
  bytestring: '>=0'
  containers: '>=0'
  dbus: '>=0'
  directory: '>=0'
  filepath: '>=0'
  gi-gdk: '>=0'
  gi-gio: '>=0'
  gi-glib: '>=0'
  gi-gtk: '>=0'
  gi-webkit2: '>=0'
  haskell-gi-base: '>=0'
  http-types: '>=0'
  lens: '>=0'
  mime-types: '>=0'
  mtl: '>=0'
  network: '>=0'
  process: '>=0'
  random: '>=0'
  scientific: '>=0'
  split: '>=0'
  tasty: '>=0'
  tasty-quickcheck: '>=0'
  text: '>=0'
  transformers: '>=0'
  unordered-containers: '>=0'
  utf8-string: '>=0'
  vector: '>=0'
  xdg-basedir: '>=0'
