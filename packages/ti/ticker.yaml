all-versions:
- 1.0.0
author: OSANAI Kazuyoshi
basic-deps:
  async: '>=2.0 && <3'
  base: '>=4.7 && <5'
  safe-exceptions: '>=0.1'
changelog: |
  1.0.0
  --------------------

  * Initial Release
changelog-type: markdown
description: "# ticker\n\nA utility of concurrent programming in Haskell, inspired
  by [Ticker](https://golang.org/pkg/time/#Ticker) in Go.\n\n\n```haskell\nimport
  Control.Concurrent.Ticker (newTicker)\nimport Control.Concurrent.Chan (getChanContents)\nimport
  Control.Concurrent.Async (async, cancel)\nimport Control.Monad (forM_)\n\nmain ::
  IO ()\nmain = do\n  (chan, cancelTicker) <- newTicker (10^3 * 100) -- tick rate:
  100ms\n  chanStream <- getChanContents chan\n  thread <- async $ forM_ chanStream
  $ \\_ -> do\n    putStr \"Tick!\"\n  threadDelay (10^3 * 350) -- wait 3 ticks\n
  \ putStrLn \"\"\n  cancel thread\n  cancelTicker\n  \n-- Tick!Tick!Tick!\n```\n\nMore
  functions are defined in `src/Control/Concurrent/Ticker.hs`.\n"
description-type: markdown
hash: e7fd996113be9dcd5d41ebcbcaaa16e865923aaf465fe425d063d20b7a903fb4
homepage: https://github.com/syocy/ticker-hs
latest: 1.0.0
license-name: BSD-3-Clause
maintainer: osmium.k@gmail.com
synopsis: A concurrent utility inspired by Ticker in golang
test-bench-deps:
  Glob: '>=0'
  async: '>=2.1'
  base: '>=4 && <5'
  deepseq: '>=1.4'
  doctest: '>=0'
  hspec: '>=2.4'
  ticker: '>=0'
