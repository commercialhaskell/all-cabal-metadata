homepage: https://github.com/pdlla/tinytools#readme
changelog-type: markdown
hash: 17570b245678e52435731839fd37083dfb7acc6767d1aedb29d2b1558218ba09
test-bench-deps:
  hspec-contrib: -any
  bimap: -any
  semialign: -any
  bytestring: -any
  these: -any
  dependent-sum: -any
  constraints-extras: -any
  MonadRandom: -any
  extra: -any
  reflex-potatoes: '>=0.1'
  dependent-sum-template: -any
  base: '>=4.7 && <5'
  hspec: -any
  text: -any
  dependent-map: -any
  vty: -any
  patch: -any
  ref-tf: -any
  data-default: -any
  HUnit: -any
  random-shuffle: -any
  containers: -any
  lens: -any
  binary: -any
  relude: -any
  text-icu: -any
  linear: -any
  mtl: -any
  pretty-simple: -any
  hashable: -any
  reflex: '>=0.8 && <1'
  ilist: -any
  deepseq: -any
  listsafe: -any
  data-ordlist: -any
  reflex-test-host: '>=0.1.2'
  aeson: -any
  template-haskell: -any
  vector: -any
  tinytools: -any
maintainer: chippermonky@gmail.com
synopsis: ''
changelog: |-
  # Changelog

  ## [Unreleased]

  ## [0.0.1]
  ### Added
  - tinytools
basic-deps:
  bimap: -any
  semialign: -any
  bytestring: -any
  these: -any
  dependent-sum: -any
  constraints-extras: -any
  MonadRandom: -any
  extra: -any
  reflex-potatoes: '>=0.1'
  dependent-sum-template: -any
  base: '>=4.7 && <5'
  text: -any
  dependent-map: -any
  vty: -any
  patch: -any
  ref-tf: -any
  data-default: -any
  random-shuffle: -any
  containers: -any
  lens: -any
  binary: -any
  relude: -any
  text-icu: -any
  linear: -any
  mtl: -any
  pretty-simple: -any
  hashable: -any
  reflex: '>=0.8 && <1'
  ilist: -any
  deepseq: -any
  listsafe: -any
  data-ordlist: -any
  reflex-test-host: '>=0.1.2'
  aeson: -any
  template-haskell: -any
  vector: -any
all-versions:
- 0.1.0.0
author: minimaple
latest: 0.1.0.0
description-type: markdown
description: "[![CircleCI](https://circleci.com/gh/pdlla/potato-flow.svg?style=svg)](https://circleci.com/gh/pdlla/potato-flow)\n\n#
  potato-illustrator\n`potato-illustrator` is a mono-space text flow-chart editor
  written in Haskell. It is currently a work in progress and an ALPHA release should
  be available soon.\n\n# architecture\n`potato-illustrator` is written using [reflex](https://github.com/reflex-frp/reflex)
  and follows a strict MVC architecture. This repository contains the platform-independent
  model and controller.\nThe View is connected to the reflex interface defined by
  `GoatWidget`.\n\n[potato-illustrator-vty](https://github.com/pdlla/potato-illustrator-vty)
  is currently the only view implementation. It is written in [reflex-vty](https://github.com/reflex-frp/reflex-vty)
  and runs in a terminal yay. Please see [potato-illustrator-vty](https://github.com/pdlla/potato-illustrator-vty)
  if you'd like to try it out.\n\n# features (completed)\n- sophisticated hierarchical
  layer system\n- transactional operations and change history\n- several configurable
  primitives including boxes, lines and text boxes\n\n# roadmap\n\n## alpha\n- save/load/export
  interface\n- multi-segment line input\n- free form text-area input\n\n## v1\n- UNICODE
  wide character support\n- UNICODE glyph widget\n\n## v2\n- attached line support\n-
  multi-document support\n- refactor handle non-linear action do/undo operations in
  preparation for multi-user mode\n\n## v3\n- graphene clusters support\n- multi-user
  mode\n  - ordering service interface\n  - basic single client authoritative implementation
  of ordering service interface (for now)\n- scripting\n\n\n# Contribution Guide\n\nHelp
  wanted! I will of course review any PR. For large or small ideas, it would be best
  to drop me an email first at chippermonky at gmail dot com\n\nBelow are a list of
  tasks that I think would be extra good projects to work on\n\n- CI scripts for creating
  binary releases\n- UNICODE wide character support\n- add text selection support
  to current `TextZipper` implementation\n- refactoring \U0001F611\n"
license-name: BSD-3-Clause
