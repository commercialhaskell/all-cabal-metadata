all-versions:
- '0.1'
- 0.1.0.1
- 0.1.1.0
- 0.1.2.0
author: Alexey Khudyakov <alexey.skladnoy@gmail.com>
basic-deps:
  base: '>=4.10 && <5'
  containers: '>=0.5'
  deepseq: '>=0'
  stm: '>=0'
  tasty: '>=0.11.3'
changelog: |
  * Changes in 0.1.2.0

    - `benchIngredients`, `consoleBenchReporter`, `csvReporter` are exported.


  * Changes in 0.1.1.0

    - Human readable error messages not just bare error codes

    - Fixed header in CSV output


  * Version 0.1

    Initial release
changelog-type: markdown
description: |
  # tasti-papi

  This is another approach to benchmarking which uses counting of CPU instructions
  instead of time measurements. Underlying hardware counters are accessed using
  [PAPI](https://icl.utk.edu/papi/) library so all hardware and OS support is
  inherited from there.

  This approach is suitable for benchmarking CPU bound code. Instruction count is
  only proxy for code performance but it has advantage of being
  deterministic. Timing measurements are affected by concurrent workloads and require
  dedicated hardware in order to get precise measurements. Instruction counting is
  not affected by this so it could be run as part of CI and used to detect
  performance regressions.
description-type: markdown
hash: 41a8d4b15d6bcb2c130557a8798d955528d7d443d4db6cbd6ae4f703562614f4
homepage: https://github.com/Shimuuar/tasty-papi
latest: 0.1.2.0
license-name: BSD-3-Clause
maintainer: Alexey Khudyakov <alexey.skladnoy@gmail.com>
synopsis: Bencmarking using instruction counting
test-bench-deps:
  base: '>=0'
  tasty: '>=0'
  tasty-papi: '>=0'
