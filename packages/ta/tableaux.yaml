homepage: ''
changelog-type: ''
hash: e57a44f4a23becd13eab343eb782d2121c5fa9fb6a06b34aa0eca9a44d6d1722
test-bench-deps: {}
maintainer: Pedro Vasconcelos <pbv@dcc.fc.up.pt>
synopsis: An interactive theorem prover based on semantic tableaux
changelog: ''
basic-deps:
  base: '>=4 && <5'
  parsec: '>=3.1.14 && <3.2'
  containers: '>=0.6.2 && <0.7'
  cgi: '>=3001.5.0 && <3001.6'
  mtl: '>=2.2.2 && <2.3'
  html: '>=1.0.1 && <1.1'
  QuickCheck: '>=2.13.2 && <2.14'
all-versions:
- '0.1'
- '0.2'
- '0.3'
author: Pedro Vasconcelos <pbv@dcc.fc.up.pt>
latest: '0.3'
description-type: text
description: "Tableaux theorem prover for first order logic\n---------------------------------------------\n\nThis
  is a simple interactive theorem prover for first order logic\nusing the tableaux
  method. The \"tableau\" is a tree depicting a proof\nwhere each node is a sentence;
  linear branches represent conjunctions\nwhile forks represent disjunctions. At each
  step one introduces\nnew nodes by \"breaking down\" a formula into its logical\nconsequences.
  To prove a formula F it is sufficient to show that\n~F is unsatisfiable, i.e. that
  all branches of the tableau lead\nto contradictions.\n  \nThe prover is implemented
  in Haskell as a CGI that shows the\ncurrent proof tree and highlights one focus
  node\n(initially the whole formula). The interface is consists of:\n* navigate the
  proof tree (point and click)\n* expand the current node \n* apply resolution to
  the branch with the current node\n\nClosed branches end in a \"false\" sentence,
  i.e. have been shown to \nbe inconsistent/unsatisfiable. To prove the original theorem
  one must close\nall branches.\n\n\nPedro Vasconcelos <pbv@dcc.fc.up.pt>, 2009.\nTree
  \"zipper\" implementation by Krasimir Angelov & Iavor S. Diatchki, 2008.\n\nReferences:
  First Order Logic, R. Smullyan, Dover.\nOn the web: http://en.wikipedia.org/wiki/Method_of_analytic_tableaux\n\n"
license-name: BSD-3-Clause
