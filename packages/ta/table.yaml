all-versions:
- 0.1.0.0
author: Daniel Choi
basic-deps:
  base: '>=4.6 && <4.8'
  csv: '>=0.1.0'
  optparse-applicative: '>=0'
  process: '>=0'
  split: '>=0.2'
changelog: ''
changelog-type: ''
description: "# table\n\nFormats lines of TSV, CSV, or DSV (delimiter-separated values)
  into a pretty\nplain text table, wrappings cells with long content to try to fit
  the table in\nthe screen.\n\n## Usage \n\n```\ntable\n\nUsage: table ([-d DELIM]
  | [-s]) [-c] [-R] [-H] [-w WIDTH]\n  Pretty format TSV input into table with aligned
  and wrapped cells\n\nAvailable options:\n  -h,--help                Show this help
  text\n  -d DELIM                 Input field delimiter. Default is TAB (\\t).\n
  \ -s                       Use any run of whitespace as input field delimiter\n
  \ -c                       Parse input as CSV\n  -R                       Don't
  print row dividers\n  -H                       Print header row divider\n  -w WIDTH
  \                Max table width. Defaults to value of `tput cols`\n                           command.\n\nhttps://github.com/danchoi/table\n```\n\n##
  Example\n\nFormat Rails issues from the GitHub API into a table. This example uses\n[jq](http://stedolan.github.io/jq/)
  and\n[jsontsv](https://github.com/danchoi/jsontsv) to transform the GitHub API JSON\ninto
  tab separated values before piping that data into `table`:\n\n```bash\ncurl -s \"https://api.github.com/repos/rails/rails/issues\"
  | \njq -M '.[]' | \njsontsv -H 'number title user.login:user state' |\ntable\n```\n\nOutputs
  this when the terminal width is 72 characters: \n\n```\n--------+--------------------------------------+----------------+-------\n
  number | title                                | user           | state \n--------+--------------------------------------+----------------+-------\n
  \ 18290 | Updating guides for Rails 5.0        | lucascaton     | open  \n--------+--------------------------------------+----------------+-------\n
  \ 18288 | Add --skip-action-mailer (or -M) to  | claudiob       | open  \n        |
  rails generate                       |                |       \n--------+--------------------------------------+----------------+-------\n
  \ 18287 | Rails 4.2.0: Scaffold generator      | dldinternet    | open  \n        |
  with --helper=false produced an      |                |       \n        | error
  \                               |                |       \n--------+--------------------------------------+----------------+-------\n
  \ 18285 | undefined method 'clear' for         | nPn-           | open  \n        |
  nil:NilClass in                      |                |       \n        | actionpack-4.2.0/lib/action_controll
  |                |       \n        | er/test_case.rb                      |                |
  \      \n--------+--------------------------------------+----------------+-------\n
  \ 18283 | Prefer `array?` rather than `array`  | kamipo         | open  \n--------+--------------------------------------+----------------+-------\n
  \ 18279 | Refactoring of add_constraints in    | eileencodes    | open  \n        |
  AssociationScope                     |                |       \n--------+--------------------------------------+----------------+-------\n
  \ 18273 | Rails 3.2.21 (4.x too?):             | jensb          | open  \n        |
  attribute_will_change! with symbol   |                |       \n        | parameter
  causes \"multiple           |                |       \n        | assignment\" error
  in Postgres        |                |       \n--------+--------------------------------------+----------------+-------\n
  \ 18257 | ActionView::Helpers::TranslationHelp | jcoyne         | open  \n        |
  er.translate makes unsafe values     |                |       \n        | html_safe
  \                           |                |       \n...\n```\n\nYou can use `table`
  to pretty-format TSV output for `mysql`, `psql`, or\n`sqlite3` as well, especially
  when you need row cell content to wrap to fit\neverything nicely on the screen.\n\n##
  Author\n\n* Daniel Choi <https://github.com/danchoi>\n\n## License\n\nMIT License\n"
description-type: markdown
hash: 75f9bfb1d81c777a00ac00ec8d9a80b36d19bde2fe4e2113d57d69b873c9f463
homepage: https://github.com/danchoi/table
latest: 0.1.0.0
license-name: MIT
maintainer: dhchoi@gmail.com
synopsis: Simple tool to generate tables from DSV input
test-bench-deps: {}
