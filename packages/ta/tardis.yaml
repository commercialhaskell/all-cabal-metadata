all-versions:
- 0.2.0.0
- 0.3.0.0
- 0.4.1.0
- 0.4.2.0
- 0.4.3.0
- 0.4.4.0
- 0.5.0
author: Dan Burton
basic-deps:
  base: '>=4.8 && <5'
  mmorph: '>=1 && <2'
  mtl: '>=2 && <3'
changelog: |+
  * **0.5.0**:
    2024-01-15: Removed MonadTrans instance, replaced with liftTardisT

changelog-type: markdown
description: "# TardisT\n\n![build status](https://github.com/DanBurton/tardis/actions/workflows/haskell.yml/badge.svg?branch=master)\n\nThe
  State monad allows you\nto send information forwards to the future,\nor to receive
  such information from the past.\nThe Reverse State monad allows you to do the reverse:\nsend
  information backwards to the past,\nor receive information from the future. \n\nTardisT
  is a monad transformer\nthat provides state operations that allow you\nto send information
  to both the future *and* the past,\nas well as receive information from both directions.\nIt
  is isomorphic to a StateT on top of a ReverseStateT,\nor vice-versa.\n\nSee test/Example.hs
  for an example.\n\n----\n\nThis was inspired by Luke Palmer's blog post on\nthe
  \"reverse state monad\".\n\nhttp://lukepalmer.wordpress.com/2008/08/10/mindfuck-the-reverse-state-monad/\n\nSee
  also:\n\nhttp://panicsonic.blogspot.com/2007/12/backwards-state-or-power-of-laziness.html\n\n----\n\n(c)
  2012 Dan Burton\n"
description-type: markdown
hash: 9eb3e42b73073686c5e5d0f35304f0dac3f7ad474c6b7aae0b44f9f7eb9b3003
homepage: https://github.com/DanBurton/tardis
latest: 0.5.0
license-name: BSD-3-Clause
maintainer: danburton.email@gmail.com
synopsis: Bidirectional state monad transformer
test-bench-deps:
  base: '>=4.8 && <5'
  tardis: '>=0'
