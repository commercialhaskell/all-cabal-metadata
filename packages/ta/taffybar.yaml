all-versions:
- 0.1.0
- 0.1.1
- 0.1.2
- 0.1.3
- 0.2.0
- 0.2.1
- 0.3.0
- 0.4.0
- 0.4.1
- 0.4.2
- 0.4.3
- 0.4.4
- 0.4.5
- 0.4.6
- 1.0.0
- 1.0.1
- 1.0.2
- 2.0.0
- 2.1.0
- 2.1.1
- 2.1.2
- 3.0.0
- 3.1.0
- 3.1.1
- 3.1.2
- 3.2.0
- 3.2.1
- 3.2.2
- 3.2.3
- 3.2.4
- 3.2.5
- 3.3.0
- 4.0.0
- 4.0.1
- 4.0.2
- 4.0.3
- 4.1.0
author: Ivan Malison
basic-deps:
  HStringTemplate: '>=0.8 && <0.9'
  X11: '>=1.5.0.1'
  aeson: '>=0'
  ansi-terminal: '>=0'
  base: '>=4.15.0.0 && <5'
  bytestring: '>=0'
  conduit: '>=0'
  containers: '>=0'
  data-default: '>=0'
  dbus: '>=1.2.11 && <2.0.0'
  dbus-hslogger: '>=0.1.0.1 && <0.2.0.0'
  directory: '>=0'
  dyre: '>=0.9.0 && <0.10'
  either: '>=4.0.0.0'
  enclosed-exceptions: '>=1.0.0.1'
  filepath: '>=0'
  fsnotify: '>=0.4 && <0.5'
  gi-cairo-connector: '>=0'
  gi-cairo-render: '>=0'
  gi-gdk: '>=3.0.6 && <3.1'
  gi-gdkpixbuf: '>=2.0.6 && <2.1'
  gi-gdkx11: '>=0'
  gi-glib: '>=0'
  gi-gtk: '>=3.0.26 && <4'
  gi-gtk-hs: '>=0.3.9 && <0.4'
  gi-pango: '>=0'
  gtk-sni-tray: '>=0.1.8.0'
  gtk-strut: '>=0.1.2.1'
  haskell-gi-base: '>=0.24'
  hslogger: '>=0'
  http-client: '>=0.5'
  http-client-tls: '>=0'
  http-conduit: '>=0'
  http-types: '>=0'
  multimap: '>=1.2.1'
  optparse-applicative: '>=0'
  parsec: '>=3.1'
  process: '>=1.0.1.1'
  rate-limit: '>=1.1.1'
  regex-compat: '>=0'
  safe: '>=0.3 && <1'
  scotty: '>=0.20 && <0.23'
  split: '>=0.1.4.2'
  status-notifier-item: '>=0.3.1.0'
  stm: '>=0'
  taffybar: '>=0'
  template-haskell: '>=0'
  text: '>=0'
  time: '>=1.9 && <2.0'
  time-locale-compat: '>=0.1 && <0.2'
  time-units: '>=1.0.0'
  transformers: '>=0.3.0.0'
  tuple: '>=0.3.0.2'
  unix: '>=0'
  utf8-string: '>=0'
  xdg-basedir: '>=0.2 && <0.3'
  xdg-desktop-entry: '>=0'
  xml: '>=0'
  xml-helpers: '>=0'
  xmonad: '>=0'
changelog: "# 4.1.0\n\n## Breaking Changes\n\n * The [`BroadcastChan`][broadcast-chan]
  dependency has not received\n   Cabal revisions for a while, so is replaced with
  [`Control.Concurrent.STM.TChan`][tchan].\n   Some types in `System.Taffybar.Hooks`
  and `System.Taffybar.Information.{Battery,Chrome,Crypto}` change accordingly.\n\n[broadcast-chan]:
  https://hackage.haskell.org/package/broadcast-chan\n[tchan]: https://hackage.haskell.org/package/stm-2.5.1.0/docs/Control-Concurrent-STM-TChan.html\n\n##
  Improvements\n\n * Add icon next to window label in Windows widget. This can be
  configured\n   with [`WindowsConfig(getActiveWindowIconPixbuf)`][WindowsConfig].\n\n
  * Taffybar now watches its CSS files with inotify. Changes to CSS\n   should be
  visible immediately after saving the file.\n\n   If Taffybar is not running in a
  terminal, and the process receives\n   a `SIGHUP` signal, then it will restart the
  inotify instance and\n   reload the CSS files.\n\n[WindowsConfig]: https://hackage.haskell.org/package/taffybar-4.1.0/docs/System-Taffybar-Widget-Windows.html#t:WindowsConfig\n\n\n#
  4.0.3\n\n## Breaking Changes\n\n * Taffybar is tested with GHC versions >= 9.2 &&
  < 9.10.\n   Other versions may or may not work.\n\n * The following symbols have
  been deprecated (not removed):\n    - `System.Taffybar.SimpleConfig.toTaffyConfig`
  -\n      Use [`toTaffybarConfig`][toTaffybarConfig] instead.\n    - `System.Taffybar.Support.PagerHints`
  -\n      Use the [`XMonad.Hooks.TaffybarPagerHints`][TaffybarPagerHints] module
  instead.\n    - `System.Taffybar.Util`:\n        * `liftReader` - Use [`Control.Monad.Trans.Reader.mapReaderT`][mapReaderT]
  instead.\n        * `logPrintFDebug` -  Use [`logPrintF`][logPrintF] instead.\n
  \       * `(??)` - Use `f <*> pure a` instead.\n        * `runCommandFromPath` -
  Use [`runCommand`][runCommand] instead.\n\n[toTaffybarConfig]: https://hackage.haskell.org/package/taffybar-4.0.3/docs/System-Taffybar-SimpleConfig.html#v:toTaffybarConfig\n[TaffybarPagerHints]:
  https://hackage.haskell.org/package/xmonad-contrib-0.18.1/docs/XMonad-Hooks-TaffybarPagerHints.html\n[mapReaderT]:
  https://hackage.haskell.org/package/transformers-0.6.1.0/docs/Control-Monad-Trans-Reader.html#v:mapReaderT\n[logPrintF]:
  https://hackage.haskell.org/package/taffybar-4.0.3/docs/System-Taffybar-Util.html#v:logPrintF\n[runCommand]:
  https://hackage.haskell.org/package/taffybar-4.0.3/docs/System-Taffybar-Util.html#v:runCommand\n\n##
  Improvements\n\n * Revise and expand documentation.\n\n * Some code cleanups such
  as applying HLint suggestions, fixing\n   compiler warnings, cleaning module imports.\n\n
  * The Nix code for `flake.nix` was streamlined, because upstream\n   nixpkgs already
  contains the necessary derivation overrides.\n\n## Bug Fixes\n\n * Fix handling
  of Ctrl-C.\n\n * Improve logging in [`System.Taffybar.Information.Battery`](https://hackage.haskell.org/package/taffybar-4.0.3/docs/System-Taffybar-Information-Battery.html)\n
  \  and [`System.Taffybar.WindowIcon`](https://hackage.haskell.org/package/taffybar-4.0.3/docs/System-Taffybar-WindowIcon.html).\n\n\n#
  4.0.2\n\n * Taffybar can now build with GHC 9.6.\n\n * Allow building with Scotty
  0.22.\n\n * Drop unused `ConfigFile` dependency.\n\n\n# 4.0.1\n\n## Improvements\n\n
  * Taffybar can now build with GHC 9.4.\n\n * Adds a `flake.nix`.\n\n## Bug Fixes\n\n
  * `Gtk.widgetShowAll` is run on the widget created by `cryptoPriceLabelWithIcon`,\n
  \  so that it shows up by default.\n\n * Fix misleading precision of rgba() parameters
  in `taffybar.css`.\n\n * Remove `cryptocurrency` Cabal flag, which is now unnecessary.\n\n\n#
  4.0.0\n\n## Breaking Changes\n\n * `simpleTaffybar` now starts taffybar using `startTaffybar`
  instead of\n   `dyreTaffybar`. Use `simpleDyreTaffybar` to start taffybar with\n
  \  `dyreTaffybar` as before.\n\n * The `cssPath` fields in 'SimpleTaffyConfig' and
  'TaffybarConfig' have been\n   renamed to `cssPaths` and have type `[FilePath]`
  instead of `Maybe Filepath`.\n\n * The module `System.Taffybar.Widget.Decorators`
  has been removed. The\n   functions that were in that module can now be found in\n
  \  `System.Taffybar.Widget.Util`.\n\n * The `barHeight` property of `SimpleTaffyConfig`
  is now a `StrutSize`. This\n   means that in addition to specifying an exact pixel
  count for the height of\n   taffybar, it is also possible to specify a fraction
  of the screen that it\n   should occupy. See the docs for `StrutSize` for more details.\n\n##
  New Features\n\n * A new module `System.Taffybar.Widget.Crypto` that contains widgets
  that display\n   the prices of crypto assets with icons was added.\n\n * `textBatteryNewLabelAction`
  provides a version of the text battery widget to\n   which a custom label updater
  function can be provided.\n\n * The textual battery widget now applies classes according
  to its charge level\n   that can be used to style the battery text with css.\n\n
  * A generalized interface to the text battery widget that accepts an arbitrary\n
  \  update function is available at `textBatteryNewLabelAction`.\n\n * New workspace
  widget builder `buildLabelOverlayController` that overlays the\n   workspace label
  on top of the the workspace icons.\n\n * It is now possible to customize the player
  widgets of the MPRIS2 Widget by\n   using the new function `mpris2NewWithConfig`.\n\n
  * Classes are added to the MPRIS2 Widget to indicate whether or not it has\n   visible
  player children.\n\n * The default MPRIS2 player widget now sends the play pause
  message to the\n   relevant player when clicked.\n\n * New `pollingGraphNewWithTooltip`
  that allows to specify a tooltip.\n\n * New `networkGraphNewWith` that allows to
  configure a tooltip format, scaling\n   and network interfaces via function.\n\n
  * New `showMemoryInfo` exposed from `MemoryMonitor` that can be used to format\n
  \  tooltips.\n\n * Swap variables are added to `MemoryMonitor`.\n\n * Many types
  have `Default` instances.\n\n * Window titles are shown on hover.\n\n * Allow sorting
  workspace window icons by _NET_CLIENT_LIST_STACKING.\n\n## Changes\n\n * Graph labels
  are now overlayed on top of the graph instead of placed beside\n   them.\n\n * MPRIS2
  Widgets will remain visible when their players are in the paused state.\n\n * `getSongInfo`
  now doesn't automatically return `Nothing` when `xesam:artist`\n   is missing. This
  makes the MPRIS2 Widget display in more situations than\n   before.\n\n * Network
  graph will have a tooltip by default.\n\n * The SNI Tray will respect `ItemIsMenu`
  property to handle mouse left click.\n\n## Bug Fixes\n\n * Center widgets will now
  properly expand vertically.\n\n * Errors, including icon missing from theme errors,
  in workspace pixbuf getters\n   are now handled gracefully.\n\n * A workaround to
  properly display the chrome icon in MPRIS was added.\n\n# 3.3.0\n\n## Bug Fixes\n\n
  * Compatibility with newer versions of GHC.\n\n## New Features\n\n * A wttr.in widget
  was added.\n\n * Make memoryAvailable action available inside the Text MemoryMonitor
  widget.\n\n * The SNI Tray supports triggering Activate and SecondaryActivate on
  icons.\n\n * Better formatting for Text MemoryMonitor Widget\n\n# 3.2.2\n\n## Bug
  Fixes\n\n * Solve space leaks on `updateSamples` and `getDeviceUpDown` (#472).\n\n
  * Prevent crash when using mpris2New and librsvg is not available (#478).\n\n *
  Fixed compilation issues that appear when using ghc 8.8.\n\n# 3.2.1\n\n## Bug Fixes\n\n
  * The workspaces widget now listens on the additional EWMH properties that it\n
  \  needs to in order to properly update things when the active window changes.\n
  \  This problem likely only emerged recently because xmonad has recently become\n
  \  much more conservative about emitting change events (#454).\n\n * The workspaces
  widget listens for changes to window geometry (similar to\n   above) (#456).\n\n#
  3.2.0\n\n## New Features\n\n * The Layout widget can now be styled with the css
  class \"layout-label\".\n\n * A new polling label function `pollingLabelWithVariableDelay`
  that allows for\n   variable poll times was added.\n\n * A new widget `System.Taffybar.Widget.SimpleCommandButton`
  was added.\n\n * Taffybar now outputs colorized and annotated logs by default.\n\n##
  Breaking Changes\n\n * The file specified in the cssPath parameter in config is
  now used instead of,\n   rather than in addition to the default user config file.\n\n
  * All parameters are now passed to `textClockNewWith` as part of the\n   ClockConfig
  it receives. A new mechanism for rounded variable polling should\n   allow the clock
  to always remain accurate (to the precision selected by the\n   user) without having
  a very high polling rate, thus reducing CPU usage.\n\n * The polling label functions
  no longer accept a default text parameter.\n\n## Miscellaneous\n\n * Battery updates
  are only triggered when a more limited number of UPower\n   properties are changed.
  This can be customized by manually calling\n   `setupDisplayBatteryChanVar` as a
  hook.\n\n## Bug Fixes\n\n * Calendar pops up below bar without hiding any other
  widget #261.\n\n * Avoid failing when parsing XDG Desktop files with unrecognized
  application\n   type, which previously resulted in \"Prelude.read: no parse\" #447.\n\n
  * Use XDG data dir so that taffybar dbus toggling functions correctly when\n   taffybar
  is installed in a location that is not writable by the user. This is\n   the case
  with nix when it is installed in the nix store #452.\n\n# 3.1.2\n\n## Updates\n\n
  * Weather now uses new uris and https (Kirill Zaborsky)\n\n * Bump the version of
  gi-gdkpixbuf, this fixes nixpkgs compilation\n\n# 3.1.0\n\n## New Features\n\n *
  A new module Chrome which makes it so that Workspaces can display the\n   favicons
  of the website that the chrome window is currently visiting.\n\n# 3.0.0\n\n## Breaking
  Changes\n\n * Taffybar has replaced gtk2hs with gi-gtk everywhere. All widgets must
  now be\n   created with gi-gtk.\n\n# 2.0.0\n\n## Breaking Changes\n\n * An entirely
  new config system has been put in place. TaffybarConfig now lives\n   in System.Taffybar.Context,
  but for most users, System.Taffybar.SimpleConfig\n   is the configuration interface
  that should be used.\n\n * The main entry point to taffybar is now dyreTaffybar
  instead of\n   defaultTaffybar.\n\n * All widget constructors provided to both config
  systems must now be of type\n   `TaffyIO Gtk.Widget`. If you have an existing `IO
  Gtk.Widget` you can convert it\n   using liftIO. All widgets provided by taffybar
  are now of type\n   `MonadIO m => m Gtk.Widget`, or specialized to `TaffyIO Gtk.Widgets`.\n\n
  * The `graphBackgroundColor` and `graphBorderColor` fields are now RGBA\n   quadruples
  instead of RGB triples.\n\n * Module removals:\n\n   - WorkspaceSwitcher: Workspaces
  is much more abstract and makes this widget\n     redundant.\n   - Pager: The Context
  module solves the problem that Pager solved in a much\n     more general way. It
  also makes it so that the user doesn't even need to\n     know about the Pager component
  at all.\n   - TaffyPager: Since you no longer need to explicitly initialize a Pager,
  it's\n     not really very hard to simply add the (Workspaces, Layout, Windows)
  triple\n     to your config any more.\n   - XMonadLog: This module has long been
  deprecated\n\n * Module moves:\n\n   - Everything in System.Information has been
  moved to\n     System.Information.Taffybar\n   - All Widgets that were found in
  System.Taffybar have been moved to\n     System.Taffybar.Widget\n   - The helper
  widgets that were previously located in System.Taffybar.Widgets\n     have been
  moved to System.Taffybar.Widget.Generic\n\n * Module renames:\n\n\t- WorkspaceHUD
  -> Workspaces\n\t- WindowSwitcher -> Windows\n\t- LayoutSwitcher -> Layout\n\t-
  ToggleMonitors -> DBus.Toggle\n\n  * Module deprecations:\n\n    - System.Taffybar.Widget.Systray
  (Use SNITray instead)\n\t- System.Taffybar.Widget.NetMonitor (Use\n      System.Taffybar.Widget.Text.NetworkMonitor
  instead)\n\n * Many widgets have subtle interface changes that may break existing
  configurations.\n\n## New Features\n\n * Widgets can now be placed in the center
  of taffybar with the `centerWidgets`\n   configuration parameter.\n\n * taffybar
  is now transparent by default, but you will need to use a compositor\n   for transparency
  to work. https://github.com/chjj/compton is recommended. If\n   you do not want
  a transparent taffybar set a background color on the class\n   `TaffyBox` in taffybar.css.\n\n
  * StatusNotifierItem support has been added to taffybar in the SNITray module.\n\n
  * Monitor configuration changes are handled automatically. Unfortunately the\n   bar
  must be completely recreated when this happens.\n\n * New network monitor widgets
  `System.Taffybar.Widget.Text.NetworkMonitor`\n   and `System.Taffybar.Widget.NetworkGraph`
  were added.\n\n * All widgets are now exported in `System.Taffybar.Widget`, which
  should\n   eliminate the need to import widgets explicitly.\n\n# 1.0.2\n\n## Bug
  Fixes\n\n * Fix long standing memory leak that was caused by a failure to free memory\n
  \  allocated for gtk pixbufs.\n * Widgets unregister from X11 event listening.\n\n#
  1.0.0\n\n## Breaking Changes\n\n * Migrate from Gtk2 to Gtk3, which replaces rc
  theming with css theming (Ivan Malison)\n\n## New Features\n\n * Support for taffybar
  on multiple monitors (Ivan Malison)\n * D-Bus toggling of taffybar per monitor (Ivan
  Malison)\n * A new workspace switcher widget called WorkspaceHUD (Ivan Malison)\n
  * Support for multiple batteries via ``batteryContextsNew`` (Edd Steel)\n * Add
  support for IO actions to configure vertical bar widgets\n * Images in WorkspaceSwitcher
  - images are taken from EWMH via \\_NET\\_WM_ICON (Elliot Wolk)\n * Preliminary
  support for i3wm (Saksham Sharma)\n * Support for multiple network interfaces in
  NetMonitor (Robert Klotzner)\n * Add a pager config field that configures the construction
  of window switcher titles (Ivan Malison)\n * Quick start script for installing from
  git with stack (Ivan Malison)\n * Add a volume widget (Nick Hu and Abdul Sattar)\n
  * Add available memory field to MemoryInfo (Will Price)\n * The freedesktop.org
  notifications widget now allows for notifications to\n   never expire and can handle
  multiple notifications at once. In particular the\n   default formatter now shows
  the number of pending notifications (Daniel\n   Oliveira)\n * Battery bar is more
  informative (Samshak Sharma)\n * Network monitor speeds are auto formatted to use
  the most appropriate units (TeXitoi)\n * A new freedesktop.org menu widget (u11gh)\n\n...and
  many smaller tweaks.\n\n## Bug Fixes\n\n * Fixes for outdated weather information
  sources\n * Various styling fixes in the gtkrc code\n * Share a single X11Connection
  between all components to fix the `user error\n   (openDisplay)` error (Ivan Malison)\n
  * Call initThreads at startup. This fixes ```taffybar-linux-x86_64:\n   xcb_io.c:259:
  poll_for_event: Assertion `!xcb_xlib_threads_sequence_lost'\n   failed.``` (Ivan
  Malison)\n * Add an eventBox to window switcher to allow setting its background
  (Ivan Malison)\n * #105 Prevent taffybar from crashing when two windows are closed\n
  \  simultaneously, or when taffybar otherwise requests data about a window that\n
  \  no longer exists.\n\n# 0.4.6\n\n * Fix a longstanding bug in loading .rc files
  (Peder Stray)\n * Add support for scrolling in the workspace switcher (Saksham Sharma)\n
  * Improve default formatting of empty workspaces in the pager (Saksham Sharma)\n
  * Relax gtk version bounds\n\n# 0.4.5\n\n * GHC 7.10 compat\n\n# 0.4.4\n\n * Fix
  compilation with gtk 0.13.1\n\n# 0.4.3\n\n * Try again to fix the network dependency\n\n#
  0.4.2\n\n * Expand the version range for time\n * Depend on network-uri instead
  of network\n\n# 0.4.1\n\n * Make the clock react to time zone changes\n\n# 0.4.0\n\n##
  Features\n\n * Resize the bar when the screen configuration changes (Robert Helgesson)\n
  * Support bypassing `dyre` by exposing `taffybarMain` (Christian Hoener zu Siederdissen)\n
  * Textual CPU and memory monitors (Zakhar Voit)\n * A new window switcher menu in
  the pager (José Alfredo Romero L)\n * Dynamic workspace support in the workspace
  switcher (Nick Hu)\n * More configurable network monitor (Arseniy Seroka)\n * New
  widget: text-based command runner (Arseniy Seroka)\n * The Graph widget supports
  lines graphs (via graphDataStyles) (Joachim Breitner)\n * Compile with gtk2hs 0.13\n\n##
  Bug Fixes\n\n * Reduce wakeups by tweaking the default GHC RTS options (Joachim
  Breitner)\n * UTF8 fixes (Nathan Maxson)\n * Various fixes to EWMH support (José
  Alfredo Romero L)\n\n## Deprecations\n\nThe `XMonadLog` module is deprecated.  This
  module let taffybar display XMonad desktop information through a dbus connection.
  \ The EWMH desktop support by José Alfredo Romero L is better in every way, so that
  (through TaffyPager) is the recommended replacement.  Upgrading should be straightforward.\n\n\n#
  0.3.0:\n\n * A new pager (System.Taffybar.TaffyPager) from José A. Romero L.  This
  pager is a drop-in replacement for the dbus-based XMonadLog widget.  It communicates
  via X atoms and EWMH like a real pager.  It even supports changing workspaces by
  clicking on them.  I recommend this over the old widget.\n * Added an MPRIS2 widget
  (contributed by Igor Babuschkin)\n * Ported to use the newer merged dbus library
  instead of dbus-client/dbus-core (contributed by CJ van den Berg)\n * Finally have
  the calendar widget pop up over the date/time widget (contributed by José A. Romero)\n
  * GHC 7.6 compatibility\n * Vertical bars can now have dynamic background colors
  (suggested by Elliot Wolk)\n * Bug fixes\n\n# 0.2.1:\n\n * More robust strut handling
  for multiple monitors of different sizes (contributed by Morgan Gibson)\n * New
  widgets from José A. Romero (network monitor, fs monitor, another CPU monitor)\n
  * Allow the bar widget to grow vertically (also contributed by José A. Romero)\n\n#
  0.2.0:\n\n * Add some more flexible formatting options for the XMonadLog widget
  (contributed by cnervi).\n * Make the PollingLabel more robust with an exception
  handler for IOExceptions\n * Added more documentation for a few widgets\n\n# 0.1.3:\n\n
  * Depend on gtk 0.12.1+ to be able to build under ghc 7.2\n * Fix the background
  colors in the calendar so that it follows the GTK theme instead of the bar-specific
  color settings\n * Fix the display of non-ASCII window titles in the XMonad log
  applet (assuming you use the dbusLog function)\n * Add a horrible hack to force
  the bar to not resize to be larger than the screen due to notifications or long
  window titles\n\n# 0.1.2:\n\n * Readable widget for freedesktop notifications\n
  * Fixed a few potential deadlocks on startup\n * Use the GTK+ rc-file styling system
  for colors instead of hard coding them\n"
changelog-type: markdown
description: "# Taffybar\n\n[![Build Status](https://github.com/taffybar/taffybar/actions/workflows/nix.yml/badge.svg)](https://github.com/taffybar/taffybar/actions/workflows/nix.yml)
  [![Hackage](https://img.shields.io/hackage/v/taffybar.svg?logo=haskell&label=taffybar)](https://hackage.haskell.org/package/taffybar)
  [![Commits](https://img.shields.io/github/commits-since/taffybar/taffybar/latest-release.svg?label=unreleased%20commits)](https://github.com/taffybar/taffybar/compare/latest-release...master)
  [![Stackage LTS](http://stackage.org/package/taffybar/badge/lts)](http://stackage.org/lts/package/taffybar)
  [![Stackage Nightly](http://stackage.org/package/taffybar/badge/nightly)](http://stackage.org/nightly/package/taffybar)
  [![Matrix Chat](https://img.shields.io/matrix/taffybar:matrix.org)](https://matrix.to/#/#taffybar:matrix.org)
  [![Gitter Chat](https://badges.gitter.im/gitterHQ/gitter.png)](https://gitter.im/taffybar/Lobby)
  [![License BSD3](https://img.shields.io/badge/license-BSD3-green.svg?dummy)](https://github.com/taffybar/taffybar/blob/master/LICENSE)\n\n##
  Summary\n \nTaffybar is a desktop\ninformation bar, intended primarily for use with
  [XMonad][], though it can also\nfunction alongside other EWMH compliant window managers.
  It is similar in spirit\nto [xmobar][], but it differs in that it gives up some
  simplicity for a reasonable\nhelping of [GTK 3][] eye candy.\n\n[![Screenshot](https://raw.githubusercontent.com/taffybar/taffybar/master/doc/screenshot.png)](https://github.com/taffybar/taffybar/blob/master/doc/screenshot.png)\n\n[GTK
  3]: https://www.gtk.org/\n[XMonad]: https://xmonad.org/\n[dwm]: https://dwm.suckless.org/\n[xmobar]:
  https://codeberg.org/xmobar/xmobar\n[gi-gtk]: https://hackage.haskell.org/package/gi-gtk\n[Haskell]:
  https://www.haskell.org/\n[GHC]: https://www.haskell.org/ghc/\n\n## Taffybar is
  a library\n\nAs with window managers like [XMonad][] and [dwm][], Taffybar is most
  appropriately\ndescribed as a library that allows you to build an executable that
  is customized\nto your tastes. Like [xmobar][] and [XMonad][], Taffybar is configured
  in [Haskell][].\n\nTaffybar has a reasonably useful default configuration built
  in.\n\nTo use a different configuration, however, you must install a Haskell compiler\n([GHC][])
  that can compile your [`taffybar.hs`](https://github.com/taffybar/taffybar/blob/master/example/taffybar.hs)
  source file.\n\nYou then select from [the list of available widgets][widgets] for\nfunctionality
  to add to your Taffybar. If the widget you need doesn't\nexist, then create your
  own with GTK.\n\n[widgets]: http://hackage.haskell.org/package/taffybar/docs/System-Taffybar-Widget.html\n\n##
  Documentation\n\n* [**Installation**][install]\n\n  Taffybar can be installed from
  Linux distribution packages,\n  or compiled from source.\n\n* [**Configuration**
  (and compilation)][config]\n\n  Taffybar can recompile itself from `taffybar.hs`,
  similar to how\n  [XMonad][] recompiles itself from `xmonad.hs`.\n\n  There are
  a number of ways to compile your configuration.\n\n* [**Customization**][custom]\n\n
  \ Taffybar has a library of functions and widgets for collecting and\n  displaying
  information.\n\n  Many aspects of the bar's appearance can be changed using CSS.\n\n*
  [**Running**][run]\n\n  Taffybar is one component of a desktop environment. To work\n
  \ correctly, it requires other desktop components and system services.\n\n* [**FAQ**][faq]\n\n
  \ Assorted information.\n\n* [**Contributing**][contrib]\n\n  [![Help Wanted](https://img.shields.io/github/issues/taffybar/taffybar/help%20wanted.svg)](https://github.com/taffybar/taffybar/labels/help%20wanted)\n
  \ [![Easy Issues](https://img.shields.io/github/issues/taffybar/taffybar/easy.svg)](https://github.com/taffybar/taffybar/labels/easy)\n\n
  \ Taffybar desperately needs contributors.\n  There is plenty to do; enquire within.\n
  \ \n[install]: https://github.com/taffybar/taffybar/blob/master/doc/install.md\n[config]:
  \ https://github.com/taffybar/taffybar/blob/master/doc/config.md\n[custom]:  https://github.com/taffybar/taffybar/blob/master/doc/custom.md\n[run]:
  \    https://github.com/taffybar/taffybar/blob/master/doc/run.md\n[faq]:     https://github.com/taffybar/taffybar/blob/master/doc/faq.md\n[contrib]:
  https://github.com/taffybar/taffybar/blob/master/doc/contrib.md\n"
description-type: markdown
hash: dcca16ee22667554e6d74f37c900c2d151eaa9277cb49eb807b2fab0b7cee220
homepage: http://github.com/taffybar/taffybar
latest: 4.1.0
license-name: BSD-3-Clause
maintainer: IvanMalison@gmail.com
synopsis: A desktop bar similar to xmobar, but with more GUI
test-bench-deps:
  QuickCheck: '>=0'
  base: '>=4.15.0.0 && <5'
  data-default: '>=0'
  filepath: '>=0'
  gi-gtk: '>=0'
  hspec: '>=0'
  hspec-core: '>=0'
  hspec-golden: '>=0'
  taffybar: '>=0'
  transformers: '>=0'
