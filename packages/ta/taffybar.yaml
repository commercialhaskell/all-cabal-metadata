homepage: http://github.com/taffybar/taffybar
changelog-type: markdown
hash: 0fc0134afa8b006c3ee836cfe6a6f835ed539d3b84394e435742f746cca2df50
test-bench-deps: {}
maintainer: IvanMalison@gmail.com
synopsis: A desktop bar similar to xmobar, but with more GUI
changelog: "# 3.2.2\n\n## Bug Fixes\n\n * Solve space leaks on `updateSamples` and
  `getDeviceUpDown` (#472).\n * Prevent crash when using mpris2New and librsvg is
  not available (#478).\n * Fixed compilation issues that appear when using ghc 8.8.\n\n#
  3.2.1\n\n## Bug Fixes\n\n * The workspaces widget now listens on the additional
  EWMH properties that it\n   needs to in order to properly update things when the
  active window changes.\n   This problem likely only emerged recently because xmonad
  has recently become\n   much more conservative about emitting change events (#454).\n\n
  * The workspaces widget listens for changes to window geometry (similar to\n   above)
  (#456).\n\n# 3.2.0\n\n## New Features\n\n * The Layout widget can now be styled
  with the css class \"layout-label\".\n\n * A new polling label function `pollingLabelWithVariableDelay`
  that allows for\n   variable poll times was added.\n\n * A new widget `System.Taffybar.Widget.SimpleCommandButton`
  was added.\n\n * Taffybar now outputs colorized and annotated logs by default.\n\n##
  Breaking Changes\n\n * The file specified in the cssPath parameter in config is
  now used instead of,\n   rather than in addition to the default user config file.\n\n
  * All parameters are now passed to `textClockNewWith` as part of the\n   ClockConfig
  it receives. A new mechanism for rounded variable polling should\n   allow the clock
  to always remain accurate (to the precision selected by the\n   user) without having
  a very high polling rate, thus reducing CPU usage.\n\n * The polling label functions
  no longer accept a default text parameter.\n\n## Miscellaneous\n\n * Battery updates
  are only triggered when a more limited number of UPower\n   properties are changed.
  This can be customized by manually calling\n   `setupDisplayBatteryChanVar` as a
  hook.\n\n## Bug Fixes\n\n * Calendar pops up below bar without hiding any other
  widget #261.\n\n * Avoid failing when parsing XDG Desktop files with unrecognized
  application\n   type, which previously resulted in \"Prelude.read: no parse\" #447.\n\n
  * Use XDG data dir so that taffybar dbus toggling functions correctly when\n   taffybar
  is installed in a location that is not writable by the user. This is\n   the case
  with nix when it is installed in the nix store #452.\n\n# 3.1.2\n\n## Updates\n\n
  * Weather now uses new uris and https (Kirill Zaborsky)\n\n * Bump the version of
  gi-gdkpixbuf, this fixes nixpkgs compilation\n\n# 3.1.0\n\n## New Features\n\n *
  A new module Chrome which makes it so that Workspaces can display the\n   favicons
  of the website that the chrome window is currently visiting.\n\n# 3.0.0\n\n## Breaking
  Changes\n\n * Taffybar has replaced gtk2hs with gi-gtk everywhere. All widgets must
  now be\n   created with gi-gtk.\n\n# 2.0.0\n\n## Breaking Changes\n\n * An entirely
  new config system has been put in place. TaffybarConfig now lives\n   in System.Taffybar.Context,
  but for most users, System.Taffybar.SimpleConfig\n   is the configuration interface
  that should be used.\n\n * The main entry point to taffybar is now dyreTaffybar
  instead of\n   defaultTaffybar.\n\n * All widget constructors provided to both config
  systems must now be of type\n   `TaffyIO Gtk.Widget`. If you have an existing `IO
  Gtk.Widget` you can convert it\n   using liftIO. All widgets provided by taffybar
  are now of type\n   `MonadIO m => m Gtk.Widget`, or specialized to `TaffyIO Gtk.Widgets`.\n\n
  * The `graphBackgroundColor` and `graphBorderColor` fields are now RGBA\n   quadruples
  instead of RGB triples.\n\n * Module removals:\n\n   - WorkspaceSwitcher: Workspaces
  is much more abstract and makes this widget\n     redundant.\n   - Pager: The Context
  module solves the problem that Pager solved in a much\n     more general way. It
  also makes it so that the user doesn't even need to\n     know about the Pager component
  at all.\n   - TaffyPager: Since you no longer need to explicitly initialize a Pager,
  it's\n     not really very hard to simply add the (Workspaces, Layout, Windows)
  triple\n     to your config any more.\n   - XMonadLog: This module has long been
  deprecated\n\n * Module moves:\n\n   - Everything in System.Information has been
  moved to\n     System.Information.Taffybar\n   - All Widgets that were found in
  System.Taffybar have been moved to\n     System.Taffybar.Widget\n   - The helper
  widgets that were previously located in System.Taffybar.Widgets\n     have been
  moved to System.Taffybar.Widget.Generic\n\n * Module renames:\n\n\t- WorkspaceHUD
  -> Workspaces\n\t- WindowSwitcher -> Windows\n\t- LayoutSwitcher -> Layout\n\t-
  ToggleMonitors -> DBus.Toggle\n\n  * Module deprecations:\n\n    - System.Taffybar.Widget.Systray
  (Use SNITray instead)\n\t- System.Taffybar.Widget.NetMonitor (Use\n      System.Taffybar.Widget.Text.NetworkMonitor
  instead)\n\n * Many widgets have subtle interface changes that may break existing
  configurations.\n\n## New Features\n\n * Widgets can now be placed in the center
  of taffybar with the `centerWidgets`\n   configuration parameter.\n\n * taffybar
  is now transparent by default, but you will need to use a compositor\n   for transparency
  to work. https://github.com/chjj/compton is recommended. If\n   you do not want
  a transparent taffybar set a background color on the class\n   `TaffyBox` in taffybar.css.\n\n
  * StatusNotifierItem support has been added to taffybar in the SNITray module.\n\n
  * Monitor configuration changes are handled automatically. Unfortunately the\n   bar
  must be completely recreated when this happens.\n\n * New network monitor widgets
  `System.Taffybar.Widget.Text.NetworkMonitor`\n   and `System.Taffybar.Widget.NetworkGraph`
  were added.\n\n * All widgets are now exported in `System.Taffybar.Widget`, which
  should\n   eliminate the need to import widgets explicitly.\n\n# 1.0.2\n\n## Bug
  Fixes\n\n * Fix long standing memory leak that was caused by a failure to free memory\n
  \  allocated for gtk pixbufs.\n * Widgets unregister from X11 event listening.\n\n#
  1.0.0\n\n## Breaking Changes\n\n * Migrate from Gtk2 to Gtk3, which replaces rc
  theming with css theming (Ivan Malison)\n\n## New Features\n\n * Support for taffybar
  on multiple monitors (Ivan Malison)\n * D-Bus toggling of taffybar per monitor (Ivan
  Malison)\n * A new workspace switcher widget called WorkspaceHUD (Ivan Malison)\n
  * Support for multiple batteries via ``batteryContextsNew`` (Edd Steel)\n * Add
  support for IO actions to configure vertical bar widgets\n * Images in WorkspaceSwitcher
  - images are taken from EWMH via \\_NET\\_WM_ICON (Elliot Wolk)\n * Preliminary
  support for i3wm (Saksham Sharma)\n * Support for multiple network interfaces in
  NetMonitor (Robert Klotzner)\n * Add a pager config field that configures the construction
  of window switcher titles (Ivan Malison)\n * Quick start script for installing from
  git with stack (Ivan Malison)\n * Add a volume widget (Nick Hu and Abdul Sattar)\n
  * Add available memory field to MemoryInfo (Will Price)\n * The freedesktop.org
  notifications widget now allows for notifications to\n   never expire and can handle
  multiple notifications at once. In particular the\n   default formatter now shows
  the number of pending notifications (Daniel\n   Oliveira)\n * Battery bar is more
  informative (Samshak Sharma)\n * Network monitor speeds are auto formatted to use
  the most appropriate units (TeXitoi)\n * A new freedesktop.org menu widget (u11gh)\n\n...and
  many smaller tweaks.\n\n## Bug Fixes\n\n * Fixes for outdated weather information
  sources\n * Various styling fixes in the gtkrc code\n * Share a single X11Connection
  between all components to fix the `user error\n   (openDisplay)` error (Ivan Malison)\n
  * Call initThreads at startup. This fixes ```taffybar-linux-x86_64:\n   xcb_io.c:259:
  poll_for_event: Assertion `!xcb_xlib_threads_sequence_lost'\n   failed.``` (Ivan
  Malison)\n * Add an eventBox to window switcher to allow setting its background
  (Ivan Malison)\n * #105 Prevent taffybar from crashing when two windows are closed\n
  \  simultaneously, or when taffybar otherwise requests data about a window that\n
  \  no longer exists.\n\n# 0.4.6\n\n * Fix a longstanding bug in loading .rc files
  (Peder Stray)\n * Add support for scrolling in the workspace switcher (Saksham Sharma)\n
  * Improve default formatting of empty workspaces in the pager (Saksham Sharma)\n
  * Relax gtk version bounds\n\n# 0.4.5\n\n * GHC 7.10 compat\n\n# 0.4.4\n\n * Fix
  compilation with gtk 0.13.1\n\n# 0.4.3\n\n * Try again to fix the network dependency\n\n#
  0.4.2\n\n * Expand the version range for time\n * Depend on network-uri instead
  of network\n\n# 0.4.1\n\n * Make the clock react to time zone changes\n\n# 0.4.0\n\n##
  Features\n\n * Resize the bar when the screen configuration changes (Robert Helgesson)\n
  * Support bypassing `dyre` by exposing `taffybarMain` (Christian Hoener zu Siederdissen)\n
  * Textual CPU and memory monitors (Zakhar Voit)\n * A new window switcher menu in
  the pager (José Alfredo Romero L)\n * Dynamic workspace support in the workspace
  switcher (Nick Hu)\n * More configurable network monitor (Arseniy Seroka)\n * New
  widget: text-based command runner (Arseniy Seroka)\n * The Graph widget supports
  lines graphs (via graphDataStyles) (Joachim Breitner)\n * Compile with gtk2hs 0.13\n\n##
  Bug Fixes\n\n * Reduce wakeups by tweaking the default GHC RTS options (Joachim
  Breitner)\n * UTF8 fixes (Nathan Maxson)\n * Various fixes to EWMH support (José
  Alfredo Romero L)\n\n## Deprecations\n\nThe `XMonadLog` module is deprecated.  This
  module let taffybar display XMonad desktop information through a dbus connection.
  \ The EWMH desktop support by José Alfredo Romero L is better in every way, so that
  (through TaffyPager) is the recommended replacement.  Upgrading should be straightforward.\n\n\n#
  0.3.0:\n\n * A new pager (System.Taffybar.TaffyPager) from José A. Romero L.  This
  pager is a drop-in replacement for the dbus-based XMonadLog widget.  It communicates
  via X atoms and EWMH like a real pager.  It even supports changing workspaces by
  clicking on them.  I recommend this over the old widget.\n * Added an MPRIS2 widget
  (contributed by Igor Babuschkin)\n * Ported to use the newer merged dbus library
  instead of dbus-client/dbus-core (contributed by CJ van den Berg)\n * Finally have
  the calendar widget pop up over the date/time widget (contributed by José A. Romero)\n
  * GHC 7.6 compatibility\n * Vertical bars can now have dynamic background colors
  (suggested by Elliot Wolk)\n * Bug fixes\n\n# 0.2.1:\n\n * More robust strut handling
  for multiple monitors of different sizes (contributed by Morgan Gibson)\n * New
  widgets from José A. Romero (network monitor, fs monitor, another CPU monitor)\n
  * Allow the bar widget to grow vertically (also contributed by José A. Romero)\n\n#
  0.2.0:\n\n * Add some more flexible formatting options for the XMonadLog widget
  (contributed by cnervi).\n * Make the PollingLabel more robust with an exception
  handler for IOExceptions\n * Added more documentation for a few widgets\n\n# 0.1.3:\n\n
  * Depend on gtk 0.12.1+ to be able to build under ghc 7.2\n * Fix the background
  colors in the calendar so that it follows the GTK theme instead of the bar-specific
  color settings\n * Fix the display of non-ASCII window titles in the XMonad log
  applet (assuming you use the dbusLog function)\n * Add a horrible hack to force
  the bar to not resize to be larger than the screen due to notifications or long
  window titles\n\n# 0.1.2:\n\n * Readable widget for freedesktop notifications\n
  * Fixed a few potential deadlocks on startup\n * Use the GTK+ rc-file styling system
  for colors instead of hard coding them\n"
basic-deps:
  http-client: '>=0.5'
  ConfigFile: -any
  xdg-basedir: '>=0.2 && <0.3'
  haskell-gi-base: '>=0.24'
  either: '>=4.0.0.0'
  bytestring: -any
  gi-cairo-render: -any
  dyre: '>=0.8.6 && <0.10'
  dbus-hslogger: '>=0.1.0.1 && <0.2.0.0'
  unix: -any
  gtk-sni-tray: '>=0.1.5.0'
  split: '>=0.1.4.2'
  stm: -any
  HStringTemplate: '>=0.8 && <0.9'
  base: '>3 && <5'
  time: '>=1.9 && <2.0'
  multimap: '>=1.2.1'
  taffybar: -any
  gi-cairo: -any
  status-notifier-item: '>=0.3.0.5'
  time-units: '>=1.0.0'
  text: -any
  tuple: '>=0.3.0.2'
  X11: '>=1.5.0.1'
  enclosed-exceptions: '>=1.0.0.1'
  gi-glib: -any
  gi-gtk: -any
  gi-gdk: -any
  filepath: -any
  process: '>=1.0.1.1'
  parsec: '>=3.1'
  xmonad: -any
  gtk-strut: '>=0.1.2.1'
  xml: -any
  containers: -any
  gi-pango: -any
  ansi-terminal: -any
  regex-compat: -any
  haskell-gi: '>=0.24'
  utf8-string: -any
  hslogger: -any
  old-locale: -any
  rate-limit: '>=1.1.1'
  http-client-tls: -any
  gi-gtk-hs: -any
  xdg-desktop-entry: -any
  transformers-base: '>=0.4'
  dbus: '>=1.2.11 && <2.0.0'
  transformers: '>=0.3.0.0'
  optparse-applicative: -any
  gi-cairo-connector: -any
  gi-gdkpixbuf: -any
  gi-gdkx11: -any
  broadcast-chan: '>=0.2.0.2'
  scotty: '>=0.11.0 && <0.12.0'
  http-types: -any
  template-haskell: -any
  safe: '>=0.3 && <1'
  time-locale-compat: '>=0.1 && <0.2'
  directory: -any
  xml-helpers: -any
all-versions:
- 0.1.0
- 0.1.1
- 0.1.2
- 0.1.3
- 0.2.0
- 0.2.1
- 0.3.0
- 0.4.0
- 0.4.1
- 0.4.2
- 0.4.3
- 0.4.4
- 0.4.5
- 0.4.6
- 1.0.0
- 1.0.1
- 1.0.2
- 2.0.0
- 2.1.0
- 2.1.1
- 2.1.2
- 3.0.0
- 3.1.0
- 3.1.1
- 3.1.2
- 3.2.0
- 3.2.1
- 3.2.2
- 3.2.3
- 3.2.4
- 3.2.5
author: Ivan Malison
latest: 3.2.5
description-type: markdown
description: |
  # Taffybar [![Build Status](https://travis-ci.org/taffybar/taffybar.svg?branch=master)](https://travis-ci.org/taffybar/taffybar) [![Hackage](https://img.shields.io/hackage/v/taffybar.svg?logo=haskell&label=taffybar)](https://hackage.haskell.org/package/taffybar) [![Commits](https://img.shields.io/github/commits-since/taffybar/taffybar/latest-release.svg?label=unreleased%20commits)](https://github.com/taffybar/taffybar/compare/latest-release...master) [![Stackage LTS](http://stackage.org/package/taffybar/badge/lts)](http://stackage.org/lts/package/taffybar) [![Stackage Nightly](http://stackage.org/package/taffybar/badge/nightly)](http://stackage.org/nightly/package/taffybar) [![Help Wanted](https://img.shields.io/github/issues/taffybar/taffybar/help%20wanted.svg)](https://github.com/taffybar/taffybar/labels/help%20wanted) [![Gitter chat](https://badges.gitter.im/gitterHQ/gitter.png)](https://gitter.im/taffybar/Lobby) [![License BSD3](https://img.shields.io/badge/license-BSD3-green.svg?dummy)](https://github.com/taffybar/taffybar/blob/master/LICENSE)

  ![https://github.com/taffybar/taffybar/blob/master/doc/screenshot.png](https://raw.githubusercontent.com/taffybar/taffybar/master/doc/screenshot.png)

  Taffybar is a gtk+3 [(through
  gi-gtk)](https://github.com/taffybar/taffybar/issues/256) based desktop
  information bar, intended primarily for use with XMonad, though it can also
  function alongside other EWMH compliant window managers. It is similar in spirit
  to xmobar, but it differs in that it gives up some simplicity for a reasonable
  helping of eye candy.

  Before Installing
  -----------------

  Taffybar's installation procedure varies depending on whether or not you intend
  to setup a new haskell project and use `startTaffybar` or use the `dyreTaffybar`
  with a global haskell installation . It is important for you to read this
  section so you can understand what all of that means before you decide how you
  want to install taffybar.

  ### Taffybar is a library

  As with window managers like XMonad and dwm, taffybar is most appropriately
  described as a library that allows you to build an executable that is customized
  to your tastes. This means that taffybar must be installed alongside a haskell
  compiler (ghc) that can compile the user's configuration source file.

  ### The taffybar binary and `startTaffybar` vs `dyreTaffybar`

  Taffybar can be started from your configuration file in two different ways:

  #### `dyreTaffybar`

  The `dyreTaffybar` entry point to taffybar uses the [dyre
  library](https://github.com/willdonnelly/dyre) to automatically recompile your
  taffybar configuration whenever it detects that it has changed. The binary that
  is distributed with taffybar does nothing more than call this entry point. The
  main downside of this approach is that it does not allow the user to use any
  sort of project files for their configuration, and they must have any packages
  that are necessary for compilation of their configuration available in their
  global ghc environment.

  #### `startTaffybar`

  The `startTaffybar` entry point to taffybar simply starts taffybar with the
  provided configuration. The user binary will not be automatically recompiled
  when source files change. The advantage of using `startTaffybar` directly is
  that you can use that in the main function of a cabal project.

  Distribution Packaging
  ----------------------
  Several linux distributions package taffybar
  ([nixos](https://github.com/NixOS/nixpkgs/blob/master/pkgs/applications/window-managers/taffybar/default.nix),
  [arch/aur](https://aur.archlinux.org/packages/taffybar/),
  [debian](https://aur.archlinux.org/packages/taffybar/)). Of these, only the
  NixOS distribution is officially supported by the maintainers. Using any of the
  others should be pretty similar to using a bare cabal installation of taffybar.

  #### NixOS

  If you wish to use the NixOS package for taffybar, make sure that you are using
  the
  [module](https://github.com/NixOS/nixpkgs/blob/master/pkgs/applications/window-managers/taffybar/default.nix),
  and not simply the haskellPackage for taffybar. If you need to add additional
  haskell packages to the environment that compiles your taffybar.hs you will need
  to invoke that module and use the packages parameter to allow this.

  It is also possible to run/use taffybar on NixOS without using this module by
  using a standalone haskell project for the taffybar configuration.

  ##### Using the overlay.nix when taffybar is broken in nixpkgs
  The taffybar haskell package in nixpkgs has been broken in the unstable channel
  from time to time. This repository provides a nix overlay file which can be used
  to build taffybar with current versions of nixpkgs. See [this
  comment](https://github.com/taffybar/taffybar/issues/464#issuecomment-503258726)
  for details on how to use the overlay.

  Installation From Hackage/Source
  --------------------------------

  ### Prerequisites

  If you are not using distribution packaging of taffybar or the nix package
  manager (it will handle getting all the necessary packages for you), you will
  need to install all of taffybar's non-haskell dependencies manually.

  Start by making sure you have installed everything that is needed for [haskell-gi](https://github.com/haskell-gi/haskell-gi). Taffybar also needs the
  equivalent of `libdbusmenu-gtk3-dev` and `libgirepository1.0-dev` on Debian.

  You can also get some idea of what the necessary dependencies are by looking at
  the nix section of the stack.yaml file in the taffybar repository.

  ### Cabal

  Cabal installation is a simple matter of installing taffybar from hackage:
  ```
  cabal install taffybar
  ```

  You do not need to do this if you are using the project approach with cabal.

  ### The project approach
  The project approach to installing/using taffybar involves maintaining a small
  haskell project that produces the users taffybar binary. No matter which package
  manager you choose to use you will need to make a .cabal file for this project.
  It is recommended that you use [this
  example](https://github.com/taffybar/taffybar/blob/master/example/my-taffybar.cabal)
  as a template. In that example, the users configuration resides in the file
  `taffybar.hs` in the same directory, but that can be changed as needed. As of
  right now, `dyreTaffybar` is incompatible with this approach because dyre simply
  calls ghc directly.

  ### Cabal

  Simply run `cabal new-install` to install the binary.

  ### Stack

  With stack, you will also need to maintain a stack.yaml file. Run `stack
  install` to install the binary. See [this
  example](https://github.com/taffybar/taffybar/blob/master/example/stack.yaml)

  ### Nix

  You will need to add default.nix file to your package. See [this
  example](https://github.com/taffybar/taffybar/blob/master/example/default.nix)

  You may also need to use the overlay provided by this repository. See [this
  comment](https://github.com/taffybar/taffybar/issues/464#issuecomment-503258726)
  for details.

  #### Overlay

  The taffybar haskell package is currently broken in nixpkgs, because some of its
  dependencies are not compiling correctly/are not sufficiently new. The
  environment.nix file in this repository fixes these build issues with an
  overlay. The overlay.nix file extends the environment overlay so that it
  overrides the taffybar package's build description to build the nix taffybar
  package from the repository source directory. An example of how to set up
  nixpkgs to use the taffybar overlay can be found
  [here](https://github.com/ivanmalison/dotfiles/blob/a20b11a070472d182e09cf39f2b0149f39eac9ac/dotfiles/config/taffybar/base.nix#L1).


  Configuration
  -------------

  Like xmobar and XMonad, taffybar is configured in haskell. Taffybar depends on
  dyre to automatically detect changes to its configuration file
  (`$XDG_CONFIG_HOME/taffybar/taffybar.hs`) and recompile when appropriate.

  For more details about how to configure taffybar, see the [full
  documentation](https://hackage.haskell.org/package/taffybar). You can find a
  list of available widgets
  [here](http://hackage.haskell.org/package/taffybar-2.0.0/docs/System-Taffybar-Widget.html)

  FAQ
  ---

  For the time being, taffybar's frequently asked questions page lives in [this
  github issue](https://github.com/taffybar/taffybar/issues/332).

  Contributing
  ------------

  Taffybar desperately needs contributors. If you want to help, but don't know
  where to get started you can check out our "help wanted" and "easy" labels:


  [![Help Wanted](https://img.shields.io/github/issues/taffybar/taffybar/help%20wanted.svg)](https://github.com/taffybar/taffybar/labels/help%20wanted)
  [![Help Wanted](https://img.shields.io/github/issues/taffybar/taffybar/easy.svg)](https://github.com/taffybar/taffybar/labels/easy)
license-name: BSD-3-Clause
