all-versions:
- 1.0.0
- 1.0.1
author: Jonas Carpay
basic-deps:
  base: '>=4.9 && <5'
  tagged: '>=0'
  tasty: '>=0'
changelog: |
  # Changelog

  ## 1.0.1

  ### [Changed]
  - Expanded haddocks
  - Added missing fields to cabal file

  ## 1.0.0

  ### [Added]
  - Initial version
changelog-type: markdown
description: "## tasty-focus\n[![tasty-focus on hackage](https://img.shields.io/hackage/v/tasty-focus)](http://hackage.haskell.org/package/tasty-focus)\n[![tasty-focus
  on Stackage Nightly](https://stackage.org/package/tasty-focus/badge/nightly)](https://stackage.org/nightly/package/tasty-focus)\n\nSimple
  focus mechanism for `tasty`, similar to `hspec`.\n\nMark the root of your test tree
  with `withFocus`.\nThen, if any of the subtrees of your test suite are marked with
  `focus`, only those test trees will be run.\n\nThe intended use case is similar
  to `--pattern`, but for quick `ghcid`-based feedback loops.\nUsing `focus` will
  throw a deprecation warning, so that together with `-Werror` you can check that
  you don't accidentally leave tests focused on CI.\n\n### Example\nIn this example,
  only `barTests` will run. Removing either `focus` or `withFocus` will run the entire
  tree again.\n\n```haskell\nmain :: IO ()\nmain = defaultMain . withFocus $\n  testGroup
  \"tests\"\n    [ fooTests\n    , testGroup \"subgroup\"\n      [ focus barTests\n
  \     , bazTests\n\t  ]\n\t, quuxTests\n    ]\n```\n"
description-type: markdown
hash: 10224819825b7ba8fb6114e3bd7c8b506b33a4adff8c93eef3db0028b9206a2c
homepage: https://github.com/jonascarpay/tasty-focus#readme
latest: 1.0.1
license-name: BSD-3-Clause
maintainer: Jonas Carpay <jonascarpay@gmail.com>
synopsis: Simple focus mechanism for tasty
test-bench-deps:
  base: '>=4.9 && <5'
  tasty: '>=0'
  tasty-expected-failure: '>=0'
  tasty-focus: '>=0'
  tasty-hunit: '>=0'
