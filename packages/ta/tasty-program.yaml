homepage: https://bitbucket.com/jstolarek/tasty-program
changelog-type: ''
hash: 7b872e2fe8f4078812d7db3b4bdebf940c502d1093fe09723d243157a42da925
test-bench-deps: {}
maintainer: jan.stolarek@binarapps.com
synopsis: Use tasty framework to test whether a program executes correctly
changelog: ''
basic-deps:
  base: '>=4.7 && <=5.0'
  filepath: -any
  process: -any
  tasty: '>=0.8'
  deepseq: -any
  directory: -any
all-versions:
- 1.0.0
- 1.0.1
- 1.0.2
- 1.0.3
- 1.0.5
- 1.1.0
author: Jan Stolarek
latest: 1.1.0
description-type: markdown
description: |
  tasty-program
  =============

  This package provides a function that extends
  [tasty](http://hackage.haskell.org/package/tasty) testing framework
  with capability to test whether an external program runs
  successfully. This package is inspired by
  [test-framework-program](http://hackage.haskell.org/package/test-framework-program)
  package by Adam Wick.

  tasty-program provides basic functionality of running a program with
  specified set of command line parameters, and optionally a working
  directory, and checking the exit code. Program's output and error
  streams are ignored.

  You can download latest stable release from
  [Hackage](http://hackage.haskell.org/package/tasty-program)

  ## Example

  Given `foo.hs` source file:

  ```haskell
  module Foo where

  foo :: Int
  foo = 5
  ```

  you can test whether GHC can compile it:

  ```haskell
  module Main (
    main
   ) where

  import Test.Tasty
  import Test.Tasty.Program

  main :: IO ()
  main = defaultMain $ testGroup "Compilation with GHC" $ [
      testProgram "Foo" "ghc" ["-fforce-recomp", "foo.hs"] Nothing
    ]
  ```
license-name: BSD-3-Clause
