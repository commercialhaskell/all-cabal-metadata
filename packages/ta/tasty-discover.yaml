homepage: https://github.com/haskell-works/tasty-discover
changelog-type: markdown
hash: 2799d2aa77c124e3f842abed9db7e8df260fe3d786549c293a322889c05484a8
test-bench-deps:
  bytestring: '>=0.9 && <1.0'
  tasty-smallcheck: '>=0.8 && <1.0'
  base: '>=4.11 && <5'
  tasty-golden: '>=2.0 && <3.0'
  tasty-hedgehog: '>=1.2 && <2.0'
  tasty-discover: -any
  hspec: '>=2.7 && <2.11'
  hspec-core: '>=2.7.10 && <2.11'
  tasty-hspec: '>=1.1 && <1.3'
  filepath: '>=1.3 && <2.0'
  hedgehog: '>=1.0 && <2.0'
  containers: '>=0.4 && <1.0'
  tasty-quickcheck: '>=0.10 && <0.11'
  tasty-hunit: '>=0.10 && <0.11'
  tasty: '>=1.3 && <2.0'
  Glob: '>=0.8 && <1.0'
  directory: '>=1.1 && <2.0'
maintainer: John Ky <newhoggy@gmail.com>
synopsis: Test discovery for the tasty framework.
changelog: |
  # Change Log

  All notable changes to this project will be documented in this file.

  The format is based on [Keep a Changelog] and this project adheres to
  [Semantic Versioning].

  [Keep a Changelog]: http://keepachangelog.com/
  [Semantic Versioning]: http://semver.org/

  # 5.0.0 [2022-07-08]

  - Fix tasty-hedgehog `testProperty` deprecation warning

  # 4.2.4 [2022-05-22]

  - Support for custom test libraries
  - Version module
  - Deduplicate imports in generated code
  - Rename library directory to src
  - Move existing library modules to Test.Discover.Internal

  # 4.2.3 [2022-05-21]

  - Added `--search-dir DIR` option
  - Adds an `--in-place` flag to write the generated driver to the source file.

  # 4.2.1 [2018-06-06]

  ## Changed
  - Migrated source code hosting to https://git.coop/lwm/tasty-discover.

  # 4.2.0 [2018-03-03]

  ## Fixed
  - Actually support `scprop_` prefixed SmallCheck test cases (see issue [#140]).

  [#140]: https://github.com/lwm/tasty-discover/issues/140

  # 4.1.5 [2018-02-26]

  ## Fixed
  - Fixed multi-byte string issue (see pull request [#138]).

  [#138]: https://github.com/lwm/tasty-discover/pull/138

  # 4.1.4 [2018-02-25]

  ## Added
  - Windows OS continuous integration build (see pull request [#136]).

  ## Fixed
  - Test failure related to path handling on Windows OS (see pull request [#136]).
  - Resolved upstream tasty-hedgehog nightly blocking issue (see issue [#131]).

  [#136]: https://github.com/lwm/tasty-discover/pull/136
  [#131]: https://github.com/lwm/tasty-discover/issues/131

  # 4.1.3 [2018-01-01]

  ## Fixed
  - Re-enable on Stackage due to tasty/tasty-hedgehog failure (see issue [#132]).

  [#132]: https://github.com/lwm/tasty-discover/pull/132

  # 4.1.2 [2017-12-19]

  ## Fixed
  - Escaping issues for the Windows platform (see issue [#124]).

  [#124]: https://github.com/lwm/tasty-discover/issues/124

  # 4.1.1 [2017-09-26]

  ## Fixed
  - Incorrect test case doing bad comparison (see issue [#123]).

  [#123]: https://github.com/lwm/tasty-discover/issues/123

  # 4.1.0 [2017-09-26]

  ## Fixed
  - Find tests recursively in test directory. (see pull request [#122]).

  ## Added
  - Add ability to override tasty arguments (see pull request [#120]).

  [#120]: https://github.com/lwm/tasty-discover/pull/120
  [#122]: https://github.com/lwm/tasty-discover/pull/122

  # 4.0.0 [2017-09-01]

  ## Changed
  - Deprecated `--[no-]module-suffix` for `--modules` (see pull request [#117]).
  - Deprecated `--ignore-module` for `--ignores` (see pull request [#117]).

  ## Added
  - `tasty-hedgehog` is now a supported test library.

  ## Removed
  - `case_` prefixes have been removed.

  [#117]: https://github.com/lwm/tasty-discover/pull/117

  # 3.0.2 [2017-06-05]

  ### Fixed
  - Make upper bounds for dependencies looser.
  - Fix typo in README.md option documentation.

  ### Remove
  - Remove TOC, the hyperlinks weren't working on Hackage.

  # 3.0.1 [2017-06-04]

  ### Fixed
  - Fixed CHANGELOG.md rendering for Hackage (see pull request [#106]).

  ### Added
  - Add missing --tree-display documentation note (see pull request [#107]).

  [#107]: https://github.com/lwm/tasty-discover/pull/107
  [#106]: https://github.com/lwm/tasty-discover/pull/106

  # 3.0.0 [2017-06-03]

  ### Added
  - Add --tree-display configuration option (see pull request [#103]).

  ### Changed
  - Deprecate `case_` in favour of `unit_` for HUnit test cases (see pull request [#97]).

  ### Fixed
  - Correctly handle sub-directories when using --no-module-suffix (see pull request [#102]).

  [#97]: https://github.com/lwm/tasty-discover/pull/97
  [#102]: https://github.com/lwm/tasty-discover/pull/102
  [#103]: https://github.com/lwm/tasty-discover/pull/103

  # 2.0.3 [2017-04-13]

  ### Fixed
  - Make the Cabal description more clear for Hackage.

  # 2.0.2 [2017-04-13]

  ### Added
  - README.md and CHANGELOG.md included for Hackage (see pull request [#96]).
  - Re-add stylish-haskell automated checking (see pull request [#88]).

  [#88]: https://github.com/lwm/tasty-discover/pull/88
  [#96]: https://github.com/lwm/tasty-discover/pull/96

  ## 2.0.1 [2017-03-18]

  ### Fixed
  - Fix flaky test comparison (see pull request [#86]).

  [#86]: https://github.com/lwm/tasty-discover/pull/86

  ### Removed
  - Remove the Test.Tasty.Type module (see pull request [#83]).

  [#83]: https://github.com/lwm/tasty-discover/pull/83

  ## 2.0.0 [2017-03-15]

  ### Added
  - Add new hpack format.
  - Add generator style test discovery from tasty-auto.
  - Add new configuration options: debug, ingredients and module name.
  - Add unit tests for all functionality.

  ### Fixed
  - Re-license to MIT.

  ### Removed
  - RTD documentation.
  - TemplateHaskell dependency
  - Example project and integration test project.

  ### Changed
  - Move all tests into test folder.

  ## 1.1.0 [2017-01-19]

  ### Added
  - Add --ignore-module configuration option.

  ## 1.0.1 [2017-11-13]

  ### Added
  - Add Cabal and Documentation testing on Travis CI.

  ### Fixed
  - Include missing extra-source-files.
  - Slim down LICENSE.md and mark as GPL-3 in Cabal file.

  ## 1.0.0 [2016-11-04]

  ### Added
  - Add documentation on RTD.
  - Release on Hackage and Stackage.

  ## 0.0.3 [2016-09-20]

  ### Added
  - --no-module-suffix configuration option.

  ## 0.0.2 [2016-02-20]

  ### Added
  - --module-suffix configuration option.

  ## 0.0.1 [2016-02-13]

  - tasty-discover initial release.
basic-deps:
  base: '>=4.11 && <5'
  tasty-discover: -any
  filepath: '>=1.3 && <2.0'
  containers: '>=0.4 && <1.0'
  tasty: '>=1.3 && <2.0'
  Glob: '>=0.8 && <1.0'
  directory: '>=1.1 && <2.0'
all-versions:
- 1.0.0
- 1.0.1
- 1.1.0
- 2.0.0
- 2.0.1
- 2.0.2
- 2.0.3
- 3.0.0
- 3.0.1
- 3.0.2
- 4.0.0
- 4.1.0
- 4.1.1
- 4.1.2
- 4.1.3
- 4.1.4
- 4.1.5
- 4.2.0
- 4.2.1
- 4.2.2
- 4.2.3
- 4.2.4
- 5.0.0
author: Luke Murphy
latest: 5.0.0
description-type: markdown
description: "[![CircleCI](https://circleci.com/gh/haskell-works/tasty-discover/tree/master.svg?style=svg)](https://circleci.com/gh/haskell-works/tasty-discover/tree/master)\n[![tasty-discover-nightly](http://stackage.org/package/tasty-discover/badge/nightly)](http://stackage.org/nightly/package/tasty-discover)\n[![tasty-discover-lts](http://stackage.org/package/tasty-discover/badge/lts)](http://stackage.org/lts/package/tasty-discover)\n[![Hackage
  Status](https://img.shields.io/hackage/v/tasty-discover.svg)](http://hackage.haskell.org/package/tasty-discover)\n[![GitHub
  license](https://img.shields.io/badge/license-MIT-brightgreen.svg)](https://raw.githubusercontent.com/lwm/tasty-discover/master/LICENSE)\n\n#
  tasty-discover\n\n- [Getting Started](#getting-started)\n  * [Create Test Driver
  File](#create-test-driver-file)\n  * [Configure Cabal or Hpack Test Suite](#configure-cabal-or-hpack-test-suite)\n-
  [Write Tests](#write-tests)\n- [Customise Discovery](#customise-discovery)\n  *
  [No Arguments](#no-arguments)\n  * [With Arguments](#with-arguments)\n- [Example
  Project](#example-project)\n- [Change Log](#change-log)\n- [Deprecation Policy](#deprecation-policy)\n-
  [Contributing](#contributing)\n- [FAQ](#frequently-asked-questions)\n- [Maintenance](#maintenance)\n-
  [Acknowledgements](#acknowledgements)\n\nHaskell auto-magic test discovery and runner
  for the [tasty test framework].\n\n[tasty test framework]: https://github.com/feuerbach/tasty\n\nPrefix
  your test case names and `tasty-discover` will discover, collect and run\nthem.
  All popular Haskell test libraries are covered. Configure once then just\nwrite
  your tests. Remember to add your test modules to your Cabal/Hpack\nfiles. Tasty
  ingredients are included along with various configuration options\nfor different
  use cases.\n\nSee below for full documentation and examples.\n\n# Getting Started\n\nThere
  are 4 simple steps:\n\n  1. [Create a test driver file in the test directory](#create-test-driver-file)\n
  \ 2. [Mark the driver file as the `main-is` in the test suite](#configure-cabal-or-hpack-test-suite)\n
  \ 3. [Mark tests with the correct prefixes](#write-tests)\n  4. [Customise test
  discovery as needed](#customise-discovery)\n\nCheck out the [example project](#example-project)
  to get moving quickly.\n\n## Create Test Driver File\n\nYou can name this file anything
  you want but it must contain the correct\npreprocessor definition for `tasty-discover`
  to run and to detect the\nconfiguration. It should be at the top level of the test
  directory.\n\nFor example (in `test/Driver.hs`):\n\n```\n{-# OPTIONS_GHC -F -pgmF
  tasty-discover #-}\n```\n\n## Configure Cabal or Hpack Test Suite\n\nIn order for
  Cabal/Stack to know where the tests are, you'll need to configure\nthe `main-is`
  option of your test-suite to point to the driver file. In the\nfollowing example,
  the test driver file is called `Driver.hs`:\n\n```\ntest-suite test\n  main-is:
  Driver.hs\n  hs-source-dirs: test\n  build-depends: base\n```\n\nIf you use [hpack],
  that might look like:\n\n[hpack]: https://git.coop/sol/hpack\n\n``` yaml\ntests:\n
  \ test:\n    main: \"Driver.hs\"\n    source-dirs: \"test\"\n    dependencies:\n
  \   - \"base\"\n```\n\nTo ensure that `tasty-discover` is available even without
  installation, add this\nto the test suite in your cabal file:\n\n```\n  build-tool-depends:\n
  \   tasty-discover:tasty-discover\n```\n\nSee [`hpack` documentation](https://github.com/sol/hpack)
  for `stack` equivalent.\n\n# Write Tests\n\nCreate test modules and prefix the test
  function name with an identifier that\ncorresponds to the testing library you wish
  to run the test with:\n\n  - **prop_**: [QuickCheck](http://hackage.haskell.org/package/tasty-quickcheck)
  properties.\n  - **scprop_**: [SmallCheck](http://hackage.haskell.org/package/tasty-smallcheck)
  properties.\n  - **hprop_**: [Hedgehog](http://hackage.haskell.org/package/tasty-hedgehog)
  properties.\n  - **unit_**: [HUnit](http://hackage.haskell.org/package/tasty-hunit)
  test cases.\n  - **spec_**: [Hspec](http://hackage.haskell.org/package/tasty-hspec)
  specifications.\n  - **test_**: [Tasty](http://hackage.haskell.org/package/tasty)
  TestTrees.\n  - **tasty_**: Custom tests\n\nHere is an example test module with
  a bunch of different tests:\n\n``` haskell\n{-# LANGUAGE ScopedTypeVariables #-}\n\nmodule
  ExampleTest where\n\nimport Data.List\nimport Test.Tasty\nimport Test.Tasty.Discover\nimport
  Test.Tasty.HUnit\nimport Test.Tasty.Hspec\nimport Test.Tasty.QuickCheck\n\n-- HUnit
  test case\nunit_listCompare :: IO ()\nunit_listCompare = [1, 2, 3] `compare` [1,2]
  @?= GT\n\n-- QuickCheck property\nprop_additionCommutative :: Int -> Int -> Bool\nprop_additionCommutative
  a b = a + b == b + a\n\n-- SmallCheck property\nscprop_sortReverse :: [Int] -> Bool\nscprop_sortReverse
  list = sort list == sort (reverse list)\n\n-- Hspec specification\nspec_prelude
  :: Spec\nspec_prelude = describe \"Prelude.head\" $ do\n  it \"returns the first
  element of a list\" $ do\n    head [23 ..] `shouldBe` (23 :: Int)\n\n-- Custom test\n--\n--
  Write a test for anything with a Tasty instance\n-- \n-- In order to use this feature,
  you must add tasty-discover as a library dependency\n-- to your test component in
  the cabal file.\n--\n-- The instance defined should not be an orphaned instance.
  \ A future version of\n-- tasty-discover may choose to define orphaned instances
  for popular test libraries.\nimport Test.Tasty (testCase)\nimport Test.Tasty.Discover
  (TestCase(..), descriptionOf)\n\ndata CustomTest = CustomTest String Assertion\n\ninstance
  Tasty CustomTest where\n  tasty info (CustomTest prefix act) =\n    pure $ testCase
  (prefix ++ descriptionOf info) act\n\ntasty_myTest :: CustomTest\ntasty_myTest =
  CustomTest \"Custom: \" $ pure ()\n\n-- Tasty TestTree\ntest_multiplication :: [TestTree]\ntest_multiplication
  = [testProperty \"One is identity\" $ \\(a :: Int) -> a * 1 == a]\n\n-- Tasty IO
  TestTree\ntest_generateTree :: IO TestTree\ntest_generateTree = do\n  input <- pure
  \"Some input\"\n  pure $ testCase input $ pure ()\n\n-- Tasty IO [TestTree]\ntest_generateTrees
  :: IO [TestTree]\ntest_generateTrees = do\n  inputs <- pure [\"First input\", \"Second
  input\"]\n  pure $ map (\\s -> testCase s $ pure ()) inputs\n```\n\n# Customise
  Discovery\n\nYou configure `tasty-discover` by passing options to the test driver
  file.\n\n## No Arguments\n\nExample: `{-# OPTIONS_GHC -F -pgmF tasty-discover -optF
  --debug #-}`\n\n  - **--debug**: Output the contents of the generated module while
  testing.\n  - **--tree-display**: Display the test output results hierarchically.\n\n##
  With Arguments\n\nExample: `{-# OPTIONS_GHC -F -pgmF tasty-discover -optF --modules=\"*CustomTest.hs\"
  #-}`\n\n  - **--modules**: Which test modules to discover (with glob pattern).\n
  \ - **--search-dir**: Where to look for tests. This is a directory relative\n    to
  the location of the source file. By default, this is the directory\n    of the source
  file.\"\n  - **--ignores**: Which test modules to ignore (with glob pattern).\n
  \ - **--generated-module**: The name of the generated test module.\n  - **--ingredient**:
  Tasty ingredients to add to your test runner.\n  - **--inplace**: Has the generated
  code written to the source file.\n\nIt is also possible to override [tasty test
  options] with `-optF`:\n\n[tasty test options]: https://git.coop/feuerbach/tasty#options\n\n```
  bash\n{-# OPTIONS_GHC -F -pgmF tasty-discover -optF --hide-successes #-}\n```\n\n#
  Example Project\n\nSee the [testing for this package] for a fully configured example.\n\n[testing
  for this package]: https://git.coop/lwm/tasty-discover/tree/master/test\n\n# Change
  Log\n\nPlease see the [CHANGELOG.md] for the latest changes.\n\nWe try to keep [tagged
  releases] in our release process, if you care about that.\n\n[CHANGELOG.md]: https://git.coop/lwm/tasty-discover/blob/master/CHANGELOG.md\n[tagged
  releases]: https://git.coop/lwm/tasty-discover/releases\n\n# Deprecation Policy\n\nIf
  a breaking change is implemented, you'll see a major version increase, an\nentry
  in the [change log] and a compile-time error with a deprecation warning\nand clear
  instructions on how to upgrade. Please do complain if we're doing\nthis too much.\n\n[change
  log]: https://git.coop/lwm/tasty-discover/blob/master/CHANGELOG.md\n\n# Contributing\n\nAll
  contributions welcome! The continuous integration suite is pretty\ncomprehensive,
  so just get hacking and add a test case - there are *plenty* of\nexamples, so this
  should be simple - and I'll get to review your change ASAP.\n\n# Frequently Asked
  Questions\n\n## Deleting Tests Breaks The Test Run\n\nThis is a known limitation
  and has been reported. No fix is planned unless you have time.\n\nPlease see [#145](https://git.coop/lwm/tasty-discover/issues/145)
  for more information.\n\n# Maintenance\n\nIf you're interested in helping maintain
  this package, please let [@newhoggy] know!\n\nIt doesn't take much time (max ~3
  hours a month) and all we need to do is:\n\n  * Triage issues that are raised.\n
  \ * Review pull requests from contributors.\n  * Fix bugs when present.\n  * Make
  releases.\n  * Manage bounds issues on Stackage.\n\nYou can [create an issue] or
  drop him a line at **lukewm AT riseup DOT NET**.\n\n[@newhoggy]: https://twitter.com/newhoggy\n[create
  an issue]: https://github.com/haskell-works/tasty-discover/issues/new\n\n# Acknowledgements\n\nThanks
  to [hspec-discover] and [tasty-auto] for making this possible.\n\nA huge thanks
  to the growing list of contributors.\n\n[hspec-discover]: https://hspec.github.io/hspec-discover.html\n[tasty-auto]:
  https://github.com/minad/tasty-auto\n"
license-name: MIT
