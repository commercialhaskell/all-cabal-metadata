homepage: https://github.com/BinderDavid/tasty-coverage
changelog-type: markdown
hash: 509b81a15a73ee95f3c0a721c2d9af40e91e35de53edc6b3acb50ff3633270a1
test-bench-deps: {}
maintainer: david.binder@uni-tuebingen.de
synopsis: Ingredient for tasty which generates per-test coverage reports
changelog: |
  # Revision history for tasty-test

  ## 0.1.0.0 -- 2023-08-07

  * Release of first version on Hackage
basic-deps:
  base: '>=4.16 && <4.20'
  hpc: '>=0.6 && <0.8'
  filepath: '>=1.3.8 && <1.4.100'
  tasty: ^>=1.4
all-versions:
- 0.1.0.0
author: David Binder
latest: 0.1.0.0
description-type: markdown
description: "# tasty-coverage\n\nA [tasty](https://hackage.haskell.org/package/tasty)
  ingredient which allows to generate per-test coverage data.\n\nIf the GHC compiler
  is passed the `-fhpc` flag, then the generated code is instrumented in order to
  also emit information about the executed parts of the sourcecode at runtime.\nThis
  coverage information is written to a file with the suffix `.tix`.\nFor testsuites
  it is sometimes more useful to have the coverage information for each test individually.\nThis
  information can be collected using the methods from the `Trace.Hpc.Reflect` module
  from the [hpc](https://hackage.haskell.org/package/hpc) library.\nThe `tasty-coverage`
  package provides a simple ingredient for the [tasty](https://hackage.haskell.org/package/tasty)
  testsuite driver which allows to run the testsuite with the `--report-coverage`
  option.\nWhen this option is passed, one `.tix` file is generated for each individual
  test.\nPassing tests have the file suffix `PASSED.tix`, whereas failing tests have
  the suffix `FAILED.tix`.\n\n```console\n> cabal run tasty-coverage-test -- --help\nMmm...
  tasty test suite\n\nUsage: tasty-coverage-test [-p|--pattern PATTERN] [-t|--timeout
  DURATION] \n                           [--report-coverage]\n\nAvailable options:\n
  \ -h,--help                Show this help text\n  -p,--pattern PATTERN     Select
  only tests which satisfy a pattern or awk\n                           expression\n
  \ -t,--timeout DURATION    Timeout for individual tests (suffixes: ms,s,m,h;\n                           default:
  s)\n  --report-coverage        Generate per-test coverage data\n\n> cabal run tasty-coverage-test
  -- --report-coverage\nWrote coverage file: tix/UnitTests.testOne.PASSED.tix\nWrote
  coverage file: tix/UnitTests.testTwo.PASSED.tix\nWrote coverage file: tix/UnitTests.testThree.FAILED.tix\n```\n"
license-name: BSD-3-Clause
