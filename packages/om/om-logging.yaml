homepage: https://github.com/owensmurray/om-logging
changelog-type: ''
hash: 62eb43fb4157c9184c882b012d2d763472b71bd4061f7990f3cf7b453bd4c7f8
test-bench-deps: {}
maintainer: rick@owensmurray.com
synopsis: Opinionated logging utilities.
changelog: ''
basic-deps:
  bytestring: '>=0.11.3.1 && <0.12'
  split: '>=0.2.3.4 && <0.3'
  base: '>=4.15.1.0 && <4.20'
  time: '>=1.12.2 && <1.13'
  text: '>=1.2.5.0 && <2.2'
  fast-logger: '>=3.1.1 && <3.2'
  om-show: '>=0.1.2.0 && <0.2'
  monad-logger: '>=0.3.36 && <0.4'
  aeson: '>=2.0.3.0 && <2.3'
all-versions:
- 1.1.0.4
- 1.1.0.6
author: Rick Owens
latest: 1.1.0.6
description-type: markdown
description: |
  # om-logging

  This package provides various combinators for composing loggers for use
  with the [monad-logger](https://hackage.haskell.org/package/monad-logger)
  package.

  It also provides an opinion about what a good log message looks like.

  For instance, the opinionated "standard" log format is defined using
  the other combinators:

  ```haskell
  {- |
    Log to the indicated destination, applying the "standard" filters
    and formats.
  -}
  withStandardFormat
    :: LogLevel {- ^ The minimum log level that will be logged. -}
    -> (Loc -> LogSource -> LogLevel -> LogStr -> IO ()) {- ^ The base logger. -}
    -> Loc
    -> LogSource
    -> LogLevel
    -> LogStr
    -> IO ()
  withStandardFormat logLevel =
    filterLogging (levelFilter logLevel)
    . withPrefix ": "
    . withThread
    . withPackage
    . withLevel
    . withTime
  ```
license-name: MIT
