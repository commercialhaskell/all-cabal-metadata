homepage: https://github.com/typeclasses/d10
changelog-type: ''
hash: 8fda8334141262ba8481b4c20e46d924d0381093d64d8404fdbc70c365bd207c
test-bench-deps:
  d10: -any
  base: '>=4.13 && <4.17'
  hedgehog: '>=1.0.1 && <1.2'
  hashable: '>=1.3 && <1.5'
  d10-test: -any
  template-haskell: '>=2.15 && <2.19'
maintainer: Chris Martin, Julie Moronuki
synopsis: Digits 0-9
changelog: ''
basic-deps:
  base: ^>=4.13 || ^>=4.14 || ^>=4.15 || ^>=4.16
  hashable: ^>=1.3 || ^>=1.4
  template-haskell: ^>=2.15 || ^>=2.16 || ^>=2.17 || ^>=2.18
all-versions:
- 0.1.0.0
- 0.1.0.1
- 0.1.1.0
- 0.2.0.1
- 0.2.1.0
- 0.2.1.2
- 0.2.1.4
- 0.2.1.6
- '0.3'
- 0.3.0.1
- '1'
- 1.0.0.1
- 1.0.0.2
- 1.0.1.0
author: Chris Martin
latest: 1.0.1.0
description-type: haddock
description: |-
  Data types representing the digits zero through nine.

  == Modules

  Each of the following modules defines a different type named
  @D10@, all of which are different representations of the same
  concept:

  * "D10.Char" - Defines a @D10@ type as a newtype for @Char@,
    where the values are restricted to characters between
    @'0'@ and @'9'@
  * "D10.Num" - Defines a @D10@ type as a newtype for any
    type with an instance of the @Num@ class, where the values
    are restricted to numbers between @fromInteger 0@ and
    @fromInteger 9@
  * "D10.Safe" - Defines a @D10@ type as @D0 | D1 | D2 | ... | D9@

  The @Arithmetic@ modules provide infix operators (@+@), (@-@), (@*@)
  for modular arithmetic:

  * "D10.Char.Arithmetic"
  * "D10.Num.Arithmetic"
  * "D10.Safe.Arithmetic"

  The following modules export constructors that can be used
  incorrectly:

  * "D10.Char.Unsafe"
  * "D10.Num.Unsafe"

  Functions to test whether values of various types represent
  digits in the range 0 to 9:

  * "D10.Predicate"

  == Quasi-quoters

  * The "D10.Char" and "D10.Num" modules include quasi-quoters
    named @d10@ used to express single digits. For example, 7
    can be written as @[d10|7|]@. This is an important feature
    because the @D10@ types defined in these modules have
    unsafe constructors, and the quasi-quoters provide
    compile-time assurance that we never construct a @D10@
    that represents a value outside the range 0 to 9.
  * "D10.Char", "D10.Num", and "D10.Safe" include quasi-quoters
    named @d10list@ to express lists of digits. For example,
    [4, 5, 6] can be written as @[d10list|456|]@.
license-name: MIT
