all-versions:
- '0.1'
- 0.1.1
- 0.1.2
author: Chris Yuen
basic-deps:
  array: '>=0'
  base: '>=4 && <5'
  containers: '>=0'
  mtl: '>=0'
  vector: '>=0'
changelog: ''
changelog-type: ''
description: |
  # Basic Encoding

  The `encode` function and the `toArray` function are all you need. See `Example.hs`. You can use ImageMagick to enlarge the symbol and convert to other formats:

      $ runhaskell Example.hs
      $ convert hello.pgm -bordercolor white -border 4 -scale 300x300 -interpolate integer hello.png

  Output:

  ![Example output](/kizzx2/haskell-qrcode/raw/master/doc/hello.png)
description-type: markdown
hash: 6fbed18e3c4ee0ea2acb2cb594c3d0d86d14c92fac7fa925a8834587f5124fb2
homepage: ''
latest: 0.1.2
license-name: BSD-3-Clause
maintainer: chris@kizzx2.com
synopsis: QR Code library in pure Haskell
test-bench-deps: {}
