all-versions:
- '0.1'
- '0.2'
author: Balazs Komuves, Peter Divianszky
basic-deps:
  base: '>=4 && <5'
changelog: ''
changelog-type: ''
description: |-
  List-like data structures implemented using nested data types and polymorphic
  recursion. Also called \"n-ary random access lists\". They supports @O(log(n))@ lookup
  while still having amortized @O(1)@ access to the left end of the sequence.
  Somewhat similar to finger trees, but much simpler, and the ternary and
  quaternary versions are also more memory efficient; however, modifying
  the right end of the sequence is still slow. See "Data.Nested.Seq"
  for general comments and "Data.Nested.Seq.Binary.Lazy" for an explanation
  of the data structure.
description-type: haddock
hash: 9530f264a7d398796bcbca105f5ec6cdca1408d35eb3b4f8a0a058aceaa0d32c
homepage: http://code.haskell.org/~bkomuves/
latest: '0.2'
license-name: BSD-3-Clause
maintainer: bkomuves (plus) hackage (at) gmail (dot) com
synopsis: List-like data structures with O(log(n)) random access
test-bench-deps:
  QuickCheck: '>=2'
  base: '>=4 && <5'
  nested-sequence: '>=0'
  test-framework: '>=0'
  test-framework-quickcheck2: '>=0'
