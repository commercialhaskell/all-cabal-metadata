all-versions:
- 0.1.0.0
author: Jeremy Bornstein
basic-deps:
  AES: '>=0.2 && <0.3'
  base: '>=4.7 && <5'
  bytestring: '>=0.10 && <0.11'
  containers: '>=0.5 && <0.7'
  deepseq: '>=1.4 && <1.5'
  mtl: '>=2.2 && <2.3'
  system-fileio: '>=0.3 && <90.4'
  system-filepath: '>=0.4 && <0.5'
  tasty-quickcheck: '>=0.10 && <0.11'
  text: '>=1.2 && <1.3'
  vector: '>=0.12 && <0.13'
changelog: "# Changelog for newhope\n\n2019-03-??\tInitial release\n\n\n\n"
changelog-type: markdown
description: |
  This is a Haskell implementation of the [NewHope key exchange
  protocol](https://newhopecrypto.org/). It has been made via
  examination of the official NewHope project's [public domain C
  reference code](https://github.com/newhopecrypto/newhope) and the
  author is not affiliated with that team or with NIST.

  This codebase has not yet been reviewed by anyone other than the
  author.  Until such time as it has been competently reviewed, please
  consider it as a draft implementation only, and do not rely on it for
  actual securtiy in practice. Judged by comparison with the reference
  library, it does produce correct results but could contain subtle (or
  obvious!) flaws.  In addition, it has not been optimized for
  performance and at this stage is probably quite a bit slower than the
  reference C implementation on any given platform.

  This project uses the Haskell build manager "stack" to produceː

   * `Crypto.NewHope`, a library intended for general use.

   * `PQCgenKAT` -- a binary which generates KAT (Known Answer Test)
    files in the format required by the NIST PQC project. Invoke this
    binary with the single argument "all" to generate all of the KAT
    files.

   * `speed` -- a binary which runs performance tests of some of the
    NewHope functionality. These tests correspond to largely equivalent
    tests in the reference NewHope C code.

  In addition, the project contains a fair number of
  automatically-evaluated tests that cover a large swath of the important
  functionality implemented, including that tested by the "test"
  binaries built by the reference C source, and including comparison
  between the KAT output that we produce and that produced by the
  reference C implementation. To run the tests and view the results,
  execute `stack test` at a command line.

  लोकाः समस्ताः सुखिनोभवंतु

  Patches, comments, and discussion are welcome. The most appropriate
  place for these for the time being is probably the Github repository.
description-type: markdown
hash: 5e039aea9574169caae22e927118cebb3ca86658bb7576799a8654d0ed44a0a0
homepage: https://github.com/unprolix/newhope#README.md
latest: 0.1.0.0
license-name: Apache-2.0
maintainer: jeremy@bornstein.org
synopsis: Library implementing the NewHope cryptographic key-exchange protocol
test-bench-deps:
  AES: '>=0'
  HUnit: '>=1.6 && <1.7'
  QuickCheck: '>=2.11 && <2.13'
  base: '>=4.7 && <5'
  bytestring: '>=0'
  containers: '>=0'
  deepseq: '>=0'
  hspec: '>=2.5 && <2.7'
  mtl: '>=0'
  parallel: '>=3.2 && <3.3'
  raw-strings-qq: '>=1.1 && <1.2'
  statistics: '>=0.14 && <0.16'
  system-fileio: '>=0'
  system-filepath: '>=0'
  tasty: '>=1.1 && <1.3'
  tasty-expected-failure: '>=0.11 && <0.12'
  tasty-hunit: '>=0.10 && <0.11'
  tasty-quickcheck: '>=0'
  text: '>=0'
  trifecta: '>=2 && <2.0'
  vector: '>=0'
