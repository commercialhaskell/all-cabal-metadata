homepage: ''
changelog-type: markdown
hash: 6e5856bece4bd94e16ee76b906975c2297d72d690d893e24aa488597a9994989
test-bench-deps: {}
maintainer: andrew.thaddeus@gmail.com
synopsis: Network functions that do not throw exceptions
changelog: |
  # Revision history for network-unexceptional

  ## 0.2.0.0 -- 2023-09-18

  * Receive functions now fail with `EEOI` when the peer shuts down.
    This is a considerable deviation from POSIX, which returns a
    length of zero when the peer shuts down. It is much easier to write
    code using "receive" functions when a shutdown is treated as an
    exception in this way.

  ## 0.1.3.1 -- 2023-08-31

  * Import `ByteArray` from `Data.Primitive` instead of `Data.Array.Byte`
    to fix build failure on GHC 9.2.

  ## 0.1.3.0 -- 2023-08-30

  * Add interruptible send and receive functions to give users control over
    when to give to abandon communicating.
  * Add these functions to `Network.Unexceptional`: `connect`,
    `connectInterruptible`, `socket`.

  ## 0.1.1.0 -- 2023-08-14

  * Add Network.Unexceptional module with `accept_`.
  * Add Network.Unexceptional.ByteString module

  ## 0.1.0.0 -- YYYY-mm-dd

  * First version.
basic-deps:
  primitive-addr: '>=0.1.0.2'
  bytestring: '>=0.11.4'
  stm: '>=2.5.1'
  base: '>=4.16.3 && <5'
  posix-api: '>=0.7'
  error-codes: '>=0.1.3'
  network: '>=3.1'
  byteslice: '>=0.2.8'
  primitive: '>=0.8'
all-versions:
- 0.1.0.0
- 0.1.1.0
- 0.1.2.0
- 0.1.3.0
- 0.1.3.1
- 0.2.0.0
author: Andrew Martin
latest: 0.2.0.0
description-type: haddock
description: |-
  Functions compatible with the Socket type from the network library that
  do not convert POSIX error codes to thrown exceptions. This library
  can throw exceptions, but they only happen in the case of misuse, not
  as the result of anything a network peer does.
license-name: BSD-3-Clause
