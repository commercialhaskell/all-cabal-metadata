all-versions:
- 0.1.0.0
- 0.1.1.0
- 0.1.2.0
- 0.1.3.0
- 0.1.3.1
- 0.2.0.0
- 0.2.1.0
author: Andrew Martin
basic-deps:
  base: '>=4.16.3 && <5'
  byteslice: '>=0.2.8'
  bytestring: '>=0.11.4'
  error-codes: '>=0.1.3'
  network: '>=3.1'
  posix-api: '>=0.7'
  primitive: '>=0.9'
  primitive-addr: '>=0.1.0.2'
  stm: '>=2.5.1'
changelog: |
  # Revision history for network-unexceptional

  ## 0.2.1.0 -- 2024-01-17

  * Add `receiveFromInterruptible"

  ## 0.2.0.0 -- 2023-09-18

  * Receive functions now fail with `EEOI` when the peer shuts down.
    This is a considerable deviation from POSIX, which returns a
    length of zero when the peer shuts down. It is much easier to write
    code using "receive" functions when a shutdown is treated as an
    exception in this way.

  ## 0.1.3.1 -- 2023-08-31

  * Import `ByteArray` from `Data.Primitive` instead of `Data.Array.Byte`
    to fix build failure on GHC 9.2.

  ## 0.1.3.0 -- 2023-08-30

  * Add interruptible send and receive functions to give users control over
    when to give to abandon communicating.
  * Add these functions to `Network.Unexceptional`: `connect`,
    `connectInterruptible`, `socket`.

  ## 0.1.1.0 -- 2023-08-14

  * Add Network.Unexceptional module with `accept_`.
  * Add Network.Unexceptional.ByteString module

  ## 0.1.0.0 -- YYYY-mm-dd

  * First version.
changelog-type: markdown
description: |-
  Functions compatible with the Socket type from the network library that
  do not convert POSIX error codes to thrown exceptions. This library
  can throw exceptions, but they only happen in the case of misuse, not
  as the result of anything a network peer does.
description-type: haddock
hash: e3ea0d8c1770ec34ba12ce510c19f6125bdfa4a9209ca2b9aed29fbb08e57d1f
homepage: ''
latest: 0.2.1.0
license-name: BSD-3-Clause
maintainer: andrew.thaddeus@gmail.com
synopsis: Network functions that do not throw exceptions
test-bench-deps: {}
