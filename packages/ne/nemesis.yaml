all-versions:
- 2009.6.12
- 2009.6.13
- 2009.6.13.1
- 2009.6.13.2
- 2009.6.14
- 2009.6.14.1
- 2009.6.14.2
- 2009.6.14.3
- 2009.6.24
- 2009.6.25
- 2009.8.4
- 2009.8.16
- 2009.8.17
- 2009.8.18
- 2009.10.7
- 2010.10.4
- 2010.10.4.1.1
- 2011.6.12
- 2011.6.19
- 2011.10.12
- 2012.5.24
- 2012.5.24.1
- 2012.12.18
- 2013.6.13
- 2013.6.16
- 2013.6.22
- 2013.7.27
- 2014.5.19
- 2015.5.4
- 2016.3.19
- 2018.1.27
author: Jinjing Wang
basic-deps:
  Glob: '>=0.9'
  base: '>4 && <=6'
  containers: '>=0'
  directory: '>=0'
  dlist: '>=0'
  lens: '>=0'
  mtl: '>=0'
  process: '>=0'
  time: '>=0'
changelog: "2018.1.27\n---------\n\n* Make it compile with latest Glob\n\n2016.3.19\n---------\n\n*
  remove `air` dependency\n\n2013.6.16\n---------\n\n* add Glob dependency\n* remove
  binary version as it's not 'simple'\n\n\n2009.10.7\n---------\n\n### Feature\n\n*
  allows 3 namespaces to be displayed in menu\n\n2009.8.18\n---------\n\n### Fix\n\n*
  mps dep\n\n2009.8.17\n---------\n\n### Feature\n\n* use - syntax in Nemesis file\n\n2009.8.16\n---------\n\n###
  Feature\n\n* no $ noise\n\n2009.8.4\n--------\n\n### Fix for Air ljust / rjust bug\n\n2009.6.25\n---------\n\n###
  Fix\n\n* fail when can not compile\n* detect all possible nemesis name\n\n2009.6.24\n---------\n\n###
  Feature\n\n* enrich `nemesis` to do task management too\n\n2009.6.14.3\n-----------\n\n###
  Feature\n\n* new keyword namespace\n\n2009.6.14.2\n-----------\n\n### Feature\n\n*
  nemesis bin rename to `.nemesis`, this keeps working directory clean\n\n2009.6.14.1\n-----------\n\n###
  Fix\n\n* only check \"main =\"\n* do not generate tmp file when name is `Nemesis.hs`\n\n2009.6.14\n---------\n\n###
  Feature\n\n* Support compilable Nemesis, i.e. with import and main\n* sort task
  list when output\n\n2009.6.13.2\n-----------\n\n### Fix\n\n* use glob instead of
  zsh specific feature\n\n2009.6.13.1\n-----------\n\n### Feature\n\n* add `clean`
  keyword\n\n### Fix\n\n* allow space before \":\" in task description\n* remove `.o
  .hi` for temp file\n\n2009.6.13\n---------\n\n### Feature\n\n* add `desc` keyword\n\n###
  Fix\n\n* super fast compile \n* -Wall clean\n\n2009.6.12\n---------\n\nInit\n"
changelog-type: markdown
description: "Nemesis: a task management tool for Haskell\n=====================================================\n\nDemo\n----\n
  \ \n    import System.Nemesis\n\n    main = run $ do\n\n      clean\n        [ \"**/*.hi\"\n
  \       , \"**/*.o\"\n        , \"manifest\"\n        ]\n\n      task \"dist\" $
  do\n        sh \"cabal clean\"\n        sh \"cabal configure\"\n        sh \"cabal
  sdist\"\n\n      task \"i\" (sh \"ghci -isrc src/System/Nemesis.hs\")\n\n      task
  \"manifest\" $ do\n        sh \"find . | grep 'hs$' > manifest\"\n\nTutorial\n--------\n\n###
  Install\n\n    cabal update\n    cabal install nemesis\n\n### DSL\n\nCreate a file
  named `Nemesis`\n\n    import System.Nemesis\n    import System.Nemesis.Utils ((-))\n
  \   import Prelude hiding ((-))\n    \n    main = run - do\n    \n      -- desc
  is optional, it gives some description to the task\n      -- task syntax: task \"keyword:
  space seperated dependencies\" io-action\n      desc \"Hunter attack macro\"\n      task
  \"attack: pet-attack auto-attack\" (putStrLn \"attack macro done!\")\n\n      desc
  \"Pet attack\"\n      task \"pet-attack: mark\" - do\n        sh \"echo 'pet attack'\"\n\n
  \     desc \"Hunter's mark\"\n      task \"mark\" - do\n        sh \"echo \\\"casting
  hunter's mark\\\"\"\n\n      desc \"Auto attack\"\n      task \"auto-attack\" -
  do\n        sh \"echo 'auto shoot'\"\n\n### Run\n\n`runghc Nemesis`\n\n    attack
  \         Hunter attack macro\n    auto-attack     Auto attack\n    mark            Hunter's
  mark\n    pet-attack      Pet attack\n\n`runghc Nemesis attack`\n\n    casting hunter's
  mark\n    pet attack\n    auto shoot\n    attack macro done!\n\n\n### Namespace\n\nCreate
  namespaces for tasks with the keyword `namespace`\n    \n    import System.Nemesis\n
  \   import System.Nemesis.Utils ((-))\n    import Prelude hiding ((-))\n\n    main
  = run - do\n    \n      namespace \"eat\" - do\n\n        task \"bread: salad\"
  - putStrLn \"eating bread\"\n        task \"salad: /drink/coke\" - putStrLn \"eating
  salad\"\n\n\n      namespace \"drink\" - do\n\n        task \"coke\" - putStrLn
  \"drinking coke\"\n\nNamespaces are referenced as path components.\n\n`runghc Nemesis
  bread`\n\n    Nemesis: bread does not exist!\n    \n`runghc Nemesis eat/bread`\n\n
  \   drinking coke\n    eating salad\n    eating bread\n    \n\n\nHints\n-----\n\n*
  alias `runghc Nemesis` to something sweeter, e.g. `n`\n"
description-type: markdown
hash: 7a42b3283ce82c05590d7a31b0a5e4cfa53095aaa284bde29970a0f017d8207c
homepage: http://github.com/nfjinjing/nemesis
latest: 2018.1.27
license-name: BSD-3-Clause
maintainer: Jinjing Wang <nfjinjing@gmail.com>
synopsis: a task management tool for Haskell
test-bench-deps: {}
