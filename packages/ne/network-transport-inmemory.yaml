homepage: http://haskell-distributed.github.com
changelog-type: text
hash: eead1fb207672127ccca1d04ae6a0eb20ee6ec10223eefb4274694dbbf4e9908
test-bench-deps:
  base: '>=4.6 && <5'
  network-transport-tests: '>=0.1 && <0.4'
  network-transport-inmemory: -any
  network-transport: -any
maintainer: Facundo DomÃ­nguez <facundo.dominguez@tweag.io>
synopsis: In-memory instantiation of Network.Transport
changelog: "0.5.2\n* Introduced and published N.T.IM.Internal module.\n0.5.1\n* Fixed
  bug in cleanup procedure.\n0.5 \n* Complete reimplementation based on STM primitives.\n*
  Rename Network.Transport.Chan to Network.Transport.InMemory.\n* Disable multicast
  support until it is properly implemented.\n* Expose internals.\n"
basic-deps:
  bytestring: '>=0.9 && <0.12'
  stm: '>=2.0 && <3.0'
  base: '>=4.6 && <5'
  containers: '>=0.4 && <0.7'
  data-accessor: '>=0.2 && <0.3'
  network-transport: '>=0.4.0.0 && <0.6'
all-versions:
- 0.5.0
- 0.5.1
- 0.5.2
author: Duncan Coutts, Nicolas Wu, Edsko de Vries, Alexander Vershilov
latest: 0.5.2
description-type: haddock
description: |-
  This is a transport implementation that could be used for local
  communication in the same address space (i.e. one process).

  It could be used either for testing purposes or for local
  communication that require the network-transport semantics.

  NB: network-tranpsport-inmemory does not support cross-transport
  communication. All endpoints that want to comminicate should be
  created using the same transport.
license-name: BSD-3-Clause
