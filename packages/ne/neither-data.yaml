homepage: https://github.com/schuelermine/neither-data
changelog-type: markdown
hash: 099335d18f1123351506612eec59bfed7b57ab059e35efe0fa1573763355dc2d
test-bench-deps: {}
maintainer: mail@anselmschueler.com
synopsis: The Neither datatype
changelog: "# Revision history for neither-data\n\n## 0.2.3.3 -- 2022-03-06\n\n* Rebuild
  documentation to docs/ in source repository, it was out-of-date\n\n## 0.2.3.2 --
  2022-03-06\n\n* Clarify README\n* Add links to GitHub and Hackage\n* Improve Nix
  flake, renamed `ghc-version` to `ghcVersion`\n\n## 0.2.3.1 -- 2022-02-16\n\n* Moved
  files in ./doc to top-level\n* Moved built haddock files to ./docs\n* Added Haddock
  comment for the Neither type itself\n\n## 0.2.3.0 -- 2022-02-16\n\n* Downgraded
  the compiler version from 9.2.1 to 8.10.7  \n  (This brings the two Nix build ways
  in line with each other and permits stack)\n* Added Stack as a build method\n* Added
  explanatory comments that serve as haddock documentation\n* Added documentation
  in ./doc that lists instances and explains missing ones\n* Built Haddock documentation
  as HTML to ./haddock\n* Added instances for:\n  * `Data`\n  * `Real`\n  * `Integral`\n
  \ * `Fractional`\n  * `Floating`\n  * `RealFrac`\n  * `Bits`\n  * `FiniteBits`\n
  \ * `Eq1`\n  * `Ord1`\n  * `Eq2`\n  * `Ord2`\n\n## 0.2.2.0 -- 2022-02-15\n\n* Added
  instances for:\n  * `Num`\n\n## 0.2.1.0 -- 2022-02-15\n\n* Added instances for:\n
  \ * `Traversable`\n  * `Bifoldable`\n  * `Bitraversable`\n  * `IsString`\n  * `Ix`\n\n##
  0.2.0.0 -- 2022-02-14\n\n* Renamed to neither-data\n* Added different build methods
  & updated the cabal one\n\n## 0.1.1.0 -- 2022-02-14\n\n* Removed non-canonical methods\n*
  Added instances for:\n  * `MonadFail`\n  * `MonadIO`\n  * `Foldable`\n\n## 0.1.0.0
  -- 2022-02-14\n\n* First version. Released on an unsuspecting world.\n"
basic-deps:
  base: ^>=4.14.0.0
all-versions:
- 0.2.3.1
- 0.2.3.2
- 0.2.3.3
author: Anselm Sch√ºler
latest: 0.2.3.3
description-type: markdown
description: "# Neither-Data\nNeither-Data provides the type Neither. It is a two-argument
  data type that ignores its arguments completely and has only one constructor.\nIt
  is a trivial instance of many typeclasses.  \nThis package also provides the `neither`
  function, which constructs a Neither from two type-matching objects, discarding
  them.\n\n## Sources\n\nThis package is available on Hackage: [neither-data on Hackage](https://hackage.haskell.org/package/neither-data)
  \ \nThis package is available on GitHub: [neither-data on GitHub](https://github.com/schuelermine/neither-data)"
license-name: MIT
