all-versions:
- 0.1.0.0
- 0.1.0.1
- 0.2.0.0
author: Kadzuya Okamoto, Dennis Gosnell
basic-deps:
  base: '>=4.14 && <4.18'
  envy: '>=2.1 && <2.2'
  rio: '>=0.1 && <0.2'
  say: '>=0.1 && <0.2'
  tonaparser: '>=0'
changelog: ''
changelog-type: ''
description: |
  # tonaparser

  Integrated parser library created for tonatona meta application framework.

  It can construct system configuration from environment variables, command line arguments, and any IO values depends on them.
  See details for `example/Main.hs`.

  ## Build example app

  ```
  $ stack build --pedantic --flag tonaparser:buildexample tonaparser
  ```

  Then check how it works with various command line options and environment variables.

  ```
  $ stack exec tonaparser-example -- --new-foo 3 --bar-baz foo
  Foo {foo = 3, bar = Bar {baz = "foo"}}

  $ stack exec tonaparser-example -- --new-foo 3
  Foo {foo = 3, bar = Bar {baz = "baz"}}

  $ stack exec tonaparser-example -- --foo 3 --bar-baz foo
  tonaparser-example: No required configuration for "Configuration for Foo.foo"

  $ FOO=5 stack exec tonaparser-example -- --bar-baz foo
  Foo {foo = 5, bar = Bar {baz = "foo"}}
  ```
description-type: markdown
hash: bbd53119ad4e31ecc75b78f9da0b09b7176a2d8aab86e8b4485c13c9265dda25
homepage: https://github.com/tonatona-project/tonatona#readme
latest: 0.2.0.0
license-name: MIT
maintainer: arow.okamoto+github@gmail.com
synopsis: Scalable way to pass runtime configurations for tonatona
test-bench-deps:
  base: '>=4.14 && <4.18'
  doctest: '>=0'
  envy: '>=2.1 && <2.2'
  rio: '>=0.1 && <0.2'
  say: '>=0.1 && <0.2'
  tonaparser: '>=0'
