homepage: https://github.com/teto/netlink_pm
changelog-type: text
hash: eb7bafad89066d7c2a584d2bbfafff7b62a5b70001b963e54956a8bba76e19d2
test-bench-deps:
  base: '>=4.12'
  text: -any
  HUnit: -any
  ip: -any
  mptcp-pm: -any
maintainer: teto
synopsis: A Multipath TCP path manager
changelog: "0.0.3-dev:\n- add --filter flag to filter connections from a json file\n-
  add a --log-level flag\n\n0.0.2:\n- saves to .json (--out argument)\n- accepts path
  to run a 3rd-party program (--optimizer)\n- can filter connections\n- addition of
  \n\n0.0.1:\n- addition of 100s of bugs\n- will mess up your mind\n"
basic-deps:
  cereal: -any
  netlink: '>=1.1.2.0'
  katip: -any
  bytestring: -any
  bytestring-conversion: -any
  base: '>=4.12 && <4.17'
  aeson-pretty: -any
  unordered-containers: -any
  text: -any
  filepath: -any
  process: -any
  ip: -any
  enumset: -any
  containers: -any
  hslogger: -any
  mptcp-pm: -any
  mtl: -any
  transformers: -any
  temporary: -any
  optparse-applicative: -any
  aeson: -any
  aeson-extra: -any
all-versions:
- 0.0.1
- 0.0.2
- 0.0.3
author: ''
latest: 0.0.3
description-type: markdown
description: |
  This is a userspace path manager for the [linux multipath TCP
  kernel][mptcp-fork], starting from version v0.95.

  This allows to monitor MPTCP connections and control what subflows to create and
  with a custom kernel it can even set specific values for the congestion windows.


  # Compilation

  For now we need a custom version of netlink
  With a custom netlink and kernel
  Compile the custom netlink library with
  ```
  $ cabal configure --enable-library-profiling
  ```
  You may need some headers as well (NOTE: reference cabal.project instead):
  ```
  kernel $ make headers_install
  $ cabal configure --package-db ~/netlink-hs/dist/package.conf.inplace --extra-include-dirs=~/mptcp/build/usr/include -v3 --enable-profiling
  ```

  To compile the doc (and understand why HLS fails displaying anything)
  `cabal haddock --all`

  # Usage

  The netlink module asks for `GENL_ADMIN_PERM` which requires the `CAP_NET_ADMIN` privilege.
  You can assign this privilege via:

  ```
  sudo setcap cap_net_admin+ep hs/dist-newstyle/build/x86_64-linux/ghc-8.6.3/netlink-pm-1.0.0/x/daemon/build/daemon/daemon
  ```

  Enter the development shell and start the daemon:

  ```
  $ nix develop
  $ cabal run daemon
  ```

  # TODO
  - remove the need for MptcpSocket everywhere: it's just needed to write the
  header, which could be added/modifier later instead ! (to increase purity in the
      library)
  - we need to better keep track of subflow status (established vs WIP) ?
  - pass local/server IPs as commands to the PM ?
  - generate completion scripts via --zsh-completion-script


  # Acknowledgements

  This work is sponsored by [NGI][ngi].

  [mptcp-fork]: http://multipath-tcp.org/
  [ngi]: https://www.ngi.eu/
license-name: GPL-3.0-only
