homepage: https://github.com/teto/quantum2
changelog-type: text
hash: 68326e73efd66e8d8c760f818e971e583179f3f39db7a1e424a2571ed4361993
test-bench-deps:
  base: '>=4.12'
  text: -any
  HUnit: -any
  ip: -any
  mptcp: -any
  mptcp-pm: -any
maintainer: teto
synopsis: A Multipath TCP path manager
changelog: "0.0.3-dev:\n- add --filter flag to filter connections from a json file\n-
  add a --log-level flag\n\n0.0.2:\n- saves to .json (--out argument)\n- accepts path
  to run a 3rd-party program (--optimizer)\n- can filter connections\n- addition of
  \n\n0.0.1:\n- addition of 100s of bugs\n- will mess up your mind\n"
basic-deps:
  polysemy-plugin: -any
  cereal: -any
  netlink: '>=1.1.1.0'
  bytestring: -any
  bytestring-conversion: -any
  base: '>=4.12 && <4.17'
  aeson-pretty: -any
  unordered-containers: -any
  text: -any
  polysemy-log-co: -any
  filepath: -any
  process: -any
  ip: '>=1.7.3'
  enumset: -any
  polysemy-log: -any
  containers: -any
  lens: -any
  formatting: -any
  mptcp: -any
  mptcp-pm: -any
  mtl: -any
  pretty-simple: -any
  polysemy: -any
  readable: -any
  transformers: -any
  temporary: -any
  optparse-applicative: -any
  aeson: -any
  aeson-extra: -any
all-versions:
- 0.0.1
- 0.0.2
- 0.0.3
- 0.0.4
- 0.0.5
author: ''
latest: 0.0.5
description-type: markdown
description: "[![Hackage][hk-img]][hk]\n\n# Presentation\nThis is a userspace mptcp
  path manager for the [linux multipath TCP\nkernel][mptcp-fork], starting from version
  v0.95.\nIt now also supports the upstream linux kernel.\n\nThis allows to monitor
  MPTCP connections and control what subflows to create and\nwith a custom kernel
  it can even set specific values for the congestion windows.\n\n\n# Compilation\n\nFor
  now we need a custom version of netlink\nWith a custom netlink and kernel\nCompile
  the custom netlink library with\n```\n$ cabal configure \n```\nYou may need some
  headers as well (NOTE: reference cabal.project instead):\n```\n$ cabal configure
  --extra-include-dirs=~/mptcp/build/usr/include\n# or on nix you can also pass $(nix-build
  -A linuxHeaders)/include\n# e.g., `cabal build --extra-include-dirs=/nix/store/3kag193bcwcslzz83chy93ryjv218rbp-linux-headers-5.14/include`\n```\n\n#
  Usage\n\nThe netlink module asks for `GENL_ADMIN_PERM` which requires the `CAP_NET_ADMIN`
  privilege.\nYou can assign this privilege via:\n\n```\nres=$(cabal list-bin exe:mptcp-manager)\nsudo
  setcap cap_net_admin+ep \"$res\"\n```\n\nEnter the development shell and start the
  daemon:\n\n```\n$ nix develop\n$ cabal run mptcp-manager\n```\n\n# TODO\n- remove
  the need for MptcpSocket everywhere: it's just needed to write the\nheader, which
  could be added/modifier later instead ! (to increase purity in the\n    library)\n-
  we need to better keep track of subflow status (established vs WIP) ?\n- pass local/server
  IPs as commands to the PM ?\n- generate completion scripts via --zsh-completion-script\n\n\n#
  Acknowledgements\n\nThis work is sponsored by [NGI][ngi].\n\n[hk-img]: https://img.shields.io/hackage/v/mptcp-pm.svg?logo=haskell\n[hk]:
  https://hackage.haskell.org/package/mptcp-pm\n[mptcp-fork]: http://multipath-tcp.org/\n[ngi]:
  https://www.ngi.eu/\n"
license-name: GPL-3.0-only
