homepage: https://github.com/stla/mpolynomials#readme
changelog-type: ''
hash: 213af2afb53023e60c31f386a10fb823d9ed45cd62c541ec807bdab0af3034c6
test-bench-deps: {}
maintainer: laurent_step@outlook.fr
synopsis: Simple multivariate polynomials.
changelog: ''
basic-deps:
  extra: '>=1.7.10 && <1.8'
  base: '>=4.7 && <5'
  text: '>=1.2.5.0 && <1.3'
  containers: '>=0.6.4.1 && <0.7'
  numeric-prelude: '>=0.4.4 && <0.5'
all-versions:
- 0.1.0.0
author: StÃ©phane Laurent
latest: 0.1.0.0
description-type: markdown
description: "# mpolynomials\n\nSimple multivariate polynomials in Haskell\n\n___\n\n```haskell\nimport
  Math.Algebra.MultiPol\nx = lone 1 :: Polynomial Double\ny = lone 2 :: Polynomial
  Double\nz = lone 3 :: Polynomial Double\npoly = (2 *^ (x^**^3 ^*^ y ^*^ z) ^+^ x^**^2)
  ^*^ (4 *^ (x ^*^ y ^*^ z))\npoly\n-- M (Monomial {coefficient = 4.0, powers = fromList
  [3,1,1]}) \n-- :+: \n-- M (Monomial {coefficient = 8.0, powers = fromList [4,2,2]})\nprettyPol
  show \"x\" poly\n-- \"(4.0) * x^(3, 1, 1) + (8.0) * x^(4, 2, 2)\"\n```\n\nMore generally,
  one can use the type `Polynomial a` as long as the type `a` has \nthe instances
  `Eq` and `Algebra.Ring` (defined in the **numeric-prelude** \nlibrary). For example
  `a = Rational`:\n\n```haskell\nimport Math.Algebra.MultiPol\nimport Data.Ratio\nx
  = lone 1 :: Polynomial Rational\ny = lone 2 :: Polynomial Rational\nz = lone 3 ::
  Polynomial Rational\n((2%3) *^ (x^**^3 ^*^ y ^*^ z) ^+^ x^**^2) ^*^ ((7%4) *^ (x
  ^*^ y ^*^ z))\n-- M (Monomial {coefficient = 7 % 4, powers = fromList [3,1,1]})
  \n-- :+: \n-- M (Monomial {coefficient = 7 % 6, powers = fromList [4,2,2]})\n```\n\nOr
  `a = Polynomial Double`:\n\n```haskell\nimport Math.Algebra.MultiPol\np = lone 1
  :: Polynomial Double\nx = lone 1 :: Polynomial (Polynomial Double)\ny = lone 2 ::
  Polynomial (Polynomial Double)\npoly = (p *^ x) ^+^ (p *^ y)  \npoly ^**^ 2 \n--
  (M (Monomial {\n--   coefficient = M (Monomial {coefficient = 1.0, powers = fromList
  [0,2]}), \n--   powers = fromList [0,2]}) \n-- :+: \n--  M (Monomial {\n--    coefficient
  = M (Monomial {coefficient = 2.0, powers = fromList [1,1]}), \n--    powers = fromList
  [1,1]})) \n-- :+: \n--  M (Monomial {\n--    coefficient = M (Monomial {coefficient
  = 1.0, powers = fromList [2,0]}), \n--    powers = fromList [2,0]})\nprettyPol (prettyPol
  show \"a\") \"X\" (poly ^**^ 2)\n-- \"((1.0) * a^(2)) * X^(0, 2) + ((2.0) * a^(2))
  * X^(1, 1) + ((1.0) * a^(2)) * X^(2, 0)\"\n```\n\nEvaluation:\n\n```haskell\nimport
  Math.Algebra.MultiPol\nx = lone 1 :: Polynomial Double\ny = lone 2 :: Polynomial
  Double\nz = lone 3 :: Polynomial Double\npoly = 2 *^ (x ^*^ y ^*^ z) \n-- evaluate
  poly at x=2, y=1, z=2\nevalPoly poly [2, 1, 2]\n-- 8.0\n```\n\n"
license-name: GPL-3.0-only
