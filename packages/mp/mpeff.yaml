all-versions:
- 0.1.0.0
author: Ningning Xie, Daan Leijen
basic-deps:
  base: '>=4.7 && <5'
  ghc-prim: '>=0'
  primitive: '>=0'
changelog: |
  # 0.1.0.0

  * Initial release.
changelog-type: markdown
description: "# MpEff: Efficient effect handlers based on Evidence Passing Semantics\n\nEfficient
  effect handlers based on Evidence Passing Semantics. The implementation\nis based
  on \n\n_Generalized Evidence Passing for Effect Handlers_, Ningning Xie and Daan
  Leijen, 2021 [(pdf)](https://www.microsoft.com/en-us/research/publication/generalized-evidence-passing-for-effect-handlers/).\n\nThe
  implementation is closely based on the [Ev.Eff](https://hackage.haskell.org/package/eveff)\nlibrary
  described in detail in\n\n_Effect Handlers in Haskell, Evidently_, Ningning Xie
  and Daan Leijen, Haskell 2020 [(pdf)](https://www.microsoft.com/en-us/research/publication/effect-handlers-in-haskell-evidently).\n\nThe
  _Mp.Eff_ and _Ev.Eff_ libraries expose the exact same interface, but\nthe _Mp.Eff_
  library can express full effect handler semantics, including non-scoped resumptions
  --\nit is slightly slower though (see the 2021 paper for benchmarks and a detailed
  comparison).\n\nInstallation:\n\n* First install [stack](https://docs.haskellstack.org)\n*
  Build with `> stack build`\n\nAn example of defining and using a `Reader` effect:\n\n```Haskell\n{-#
  LANGUAGE  TypeOperators, FlexibleContexts, Rank2Types #-}\nimport Control.Mp.Eff\n\n--
  A @Reader@ effect definition with one operation @ask@ of type @()@ to @a@.\ndata
  Reader a e ans = Reader{ ask :: Op () a e ans }\n\ngreet :: (Reader String :? e)
  => Eff e String\ngreet = do s <- perform ask ()\n           return (\"hello \" ++
  s)\n\ntest :: String\ntest = runEff $\n       handler (Reader{ ask = value \"world\"
  }) $  -- @:: Reader String () Int@\n       do s <- greet                              --
  executes in context @:: Eff (Reader String :* ()) Int@\n          return (length
  s)\n```\n\nEnjoy,\n\nNingning Xie and Daan Leijen,  Mar 2021.\n"
description-type: markdown
hash: 087f7270f1dde16239ccf750362311554f7af9c01fa21e82d606002ae8a599a1
homepage: https://github.com/xnning/mpeff#readme
latest: 0.1.0.0
license-name: MIT
maintainer: xnning@hku.hk;daan@microsoft.com
synopsis: Efficient effect handlers based on evidence-passing semantics
test-bench-deps: {}
