all-versions:
- 0.0.1
author: Bjorn Edstrom
basic-deps:
  base: '>=0'
  binary-strict: '>=0'
  bytestring: '>=0'
  haskell98: '>=0'
  mtl: '>=0'
changelog: ''
changelog-type: ''
description: "\n=== Prereq. ===\n\nUsing this code requires:\n\n*) A Haskell compiler,
  such as GHC.\n\n*) binary-strict, from here: \n   http://hackage.haskell.org/cgi-bin/hackage-scripts/package/binary-strict\n
  \  If you've never used Haskell before, install binary-strict by \n   downloading
  and unpacking the source, cd to the directory where the\n   Setup file is, and do\n\n
  \    $ runhaskell Setup.lhs configure\n     $ runhaskell Setup.lhs build\n     $
  runhaskell Setup.lhs install\n\nThat's it.\n\n\n\n=== Building the decoder ===\n\nBuilding
  the decoder works almost the same as building binary-strict. \nFrom the directory
  where this file is, do:\n\n$ runhaskell Setup.lhs configure\n$ runhaskell Setup.lhs
  build\n\nDo not install it (if you're familiar with Haskell and for some reason\nwant
  to install this decoder as a library, you'll have to edit the \ncabal file).\n\nWhen
  done, there will be an executable file in dist/build/mp3driver.\nPass an MP3 file
  to it\n\n$ mp3driver test.mp3\n\nAnd it will write a file, \"out.wav\", to the current
  directory.\n\nThe actual decoder is in Codec/Audio/MP3. Change parts of it, run\nthe
  build command again, and see what happens. :-)\n\n\n\n=== Trouble? ===\n\nIf, for
  some reason, the above doesn't work, there's a manual method\nof building the mp3driver
  program. Copy all *.hs, *.h and *.c files\nto the same directory. Build the two
  C files:\n\n$ gcc -O2 -c c_imdct.c\n$ gcc -O2 -c c_synth.c\n\nChange all \"import
  Codec.Audio.MP3.XXX\" in the Haskell source files\nto \"import XXX\". Then:\n\n$
  ghc c_imdct.o c_synth.o --make Driver.hs\n\n"
description-type: text
hash: 2ea4b91273ca3f186cf57e1391d9ddbb11e7d79a89d877bf3fe25fdde6a5c854
homepage: http://www.bjrn.se/mp3dec
latest: 0.0.1
license-name: LicenseRef-OtherLicense
maintainer: be@bjrn.se
synopsis: MP3 decoder for teaching.
test-bench-deps: {}
