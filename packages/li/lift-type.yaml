all-versions:
- 0.1.0.0
- 0.1.0.1
- 0.1.1.0
- 0.1.1.1
author: Matt Parsons
basic-deps:
  base: '>=4.10 && <5'
  template-haskell: '>=0'
changelog: |
  # Changelog for lift-typeable

  ## 0.1.1.1

  - Fix lifting the `Data.Kind.Type` into a `TemplateHaskell.Type` [#9](https://github.com/parsonsmatt/lift-type/pull/9)

  ## 0.1.1.0

  - Cleanup and a slight performance improvement [#7](https://github.com/parsonsmatt/lift-type/pull/7)
  - Implement `typeRepToType :: SomeTypeRep -> Type` [#8](https://github.com/parsonsmatt/lift-type/pull/8)

  ## 0.1.0.1

  - Support GHC 8.2.2, which evidently required `TypeInType` for the `forall k (a :: k)` signature.

  ## 0.1.0.0

  - Initial release
changelog-type: markdown
description: |
  # lift-type

  This library provides a utility function `liftType` which accepts a type application argument and returns the `Template Haskell` `Type` representation of it.
description-type: markdown
hash: f7f5e5922f202364b2392e8c1282ca203f17fcc3e7d222b474109d12017941fb
homepage: https://github.com/parsonsmatt/lift-type#readme
latest: 0.1.1.1
license-name: BSD-3-Clause
maintainer: parsonsmatt@gmail.com
synopsis: Lift a type from a Typeable constraint to a Template Haskell type
test-bench-deps:
  base: '>=0'
  lift-type: '>=0'
  template-haskell: '>=0'
