homepage: ''
changelog-type: markdown
hash: 0d18260ece0a9714af81762dbae670b246663366824b92c01226406d54a104ae
test-bench-deps:
  bytestring: -any
  composition-prelude: '>=2.0.5.0'
  dir-traverse: -any
  base: -any
  hspec: -any
  filepath: -any
  criterion: -any
  tar: -any
  mtl: '>=2.2.2'
  libarchive: -any
  pathological-bytestrings: -any
  temporary: -any
  deepseq: -any
  directory: '>=1.2.5.0'
maintainer: vamchale@gmail.com
synopsis: Haskell interface to libarchive
changelog: |
  # libarchive

  # 3.0.4.2

    * Package bounds for Hackage

  # 3.0.4.1

    * Bundled libarchive 3.7.1

  # 3.0.4.0

    * Bundled libarchive 3.6.1
    * Add `archiveReadDiskNoSparse`

  # 3.0.3.2

    * Bundled libarchive 3.5.3

  # 3.0.3.1

    * Properly export functions from libarchive 3.5.2.

  # 3.0.3.0

    * Bundle zlib sources so zip archives are guaranteed to work (work by Julian
      Ospald)
    * Upgrade bundled `libarchive` to 3.5.2. This introduces several functions.

  # 3.0.2.2

    * Builds on Windows (changes due to Julian Ospald)

  # 3.0.2.1

    * Upgrade bundled `libarchive` to 3.5.1

  # 3.0.2.0

    * Upgrade bundled `libarchive` to 3.5.0
    * Require `librachive >= 3.5.0`
    * Add `archiveReadSupportFilterByCode` and `archiveWriteOpen2`
    * Add `ArchiveFreeCallback` type
    * Add `ArchiveEntryDigest` sum type

  ## 3.0.1.1

    * Add `Internal` modules

  ## 3.0.0.0

    * Use `ForeignPtr` over `Ptr`
    * Fix `.cpio` and `.zip` functions
    * Add `.shar` functions
    * The `Entry` and `EntryContent` are now higher-kinded. This allows one to use
      the types with e.g. `RawFilePath`s.

  ## 2.2.5.2

    * Patch from upstream to work with pathological archives containing files that
      are hardlinks to themselves.
    * Some patches for various platforms when built with `+static`

  ## 2.2.5.1

    * Add `static` flag to cabal which builds from bundled sources rather than
      `pkg-config`

  ## 2.2.5.0

    * Speed improvements in places
    * Add `throwArchiveM` convenience function

  ## 2.2.4.0

    * Add convenience functions for `.xar` archives

  ## 2.2.3.0

    * Add convenience functions for working with `.cpio` archives

  ## 2.2.2.0

    * Add `Ord` instance to `Entry`, `Symlink`, `EntryContent`, `Ownership`
    * Make `content` field of `Entry` lazy
    * Add `Eq` instance to `ArchiveEncryption`

  ## 2.2.1.0

    * Add `Exception` instance for `ArchiveResult`

  ## 2.2.0.2

    * Use `bracket` where it doesn't crash GHC

  ## 2.2.0.1

    * Use `bracket` in a few places where it doesn't crash GHC

  ## 2.2.0.0

    * Haskell `Entry` type now includes `Symlink` field

  ## 2.1.3.2

    * Fix segfault in strict function

  ## 2.1.3.0

    * `archiveVersionString` &c. are now pure

  ## 2.1.2.1

    * Fixed bug that would cause segfaults on lazy bytestrings with large chunks

  ## 2.1.2.0

    * More complete API

  ## 2.1.1.0

    * Remove weeds, export things that were missing from past releases

  ## 2.1.0.1

    * `packEntries` and friends now detect hardlinks
    * Add `Cabal` to `custom-setup` depends to ensure builds work with stack

  ## 2.1.0.0

    * Remove `archiveEntryAclNext` since it doesn't exist in the static linked
      library. This means `libarchive` can be used in profiling builds.

  ## 2.0.0.2

    * Export `FilePtr` type constructor
    * Clean up spurious code

  ## 2.0.0.1

    * Polish documentation

  ## 2.0.0.0

    * Fix typo in documentation
    * Improve docs
    * `archiveReadOpenMemory` now accepts an argument of type `Ptr a` rather
      than `Ptr CChar`
    * `unpackToDirLazy`, `unpackArchive`, and `archiveUnpackToDir` now occur in the `ArchiveM` monad
    * `readArchiveBSL` and `readArchiveBS` now return `Either ArchiveResult [Entry]` rather than
      failing silently
    * `readArchiveFile` now returns an `ArchiveM [Entry]` rather than returning an
      `IO [Entry]`
    * `enriesToFile`, `entriesToFile7Zip`, and `entriesToFileZip` now occur in the
      `ArchiveM` monad
    * Make various parts of an `Entry` optional
    * Add `packToFile` functions and `packFiles` functions
    * Remove `ArchiveError` newtype, replace it with `ArchiveResult`
    * Fix bug in `archiveEntryMTimeIsSet`
    * Add `archiveEntryACLEntryInherited`, `archiveEntryACLStyleSolaris`,
      `archiveEntryACLStyleSeparatorComma`, `archiveEntryACLStyleCompact`
    * Add `archiveReadDiskNoAcl`, `archiveReadDiskNoFFlags`
    * Depend on `libarchive` >= 3.4.0
    * Remove `Raw` modules, use c2hs throughout.
    * Fix potential bug with lazy bytestrings of nonstandard size

  ## 1.0.5.1

    * Add `cross` flag

  ## 1.0.5.0

    * Add facilities for lazy packing, e.g. `entriesToBSL`
    * Minor documentation fixes

  ## 1.0.4.0

    * Add `noOpenCallback`
    * Add various facilities for lazy/streaming archives, viz. `unpackToDirLazy`,
      `bslToArchive`, and `readArchiveBSL`.
    * Remove `unsafe` stuff everywhere

  ## 1.0.3.0

    * Fix types for `archive_set_read_callback` and
      `archive_read_set_seek_callback`

  ## 1.0.2.0

    * Add `Eq` instance for `ArchiveFormat`

  ## 1.0.1.0

    * Remove functions from libarchive 3.3.3

  ## 1.0.0.0

    * Get rid of `cbits`
    * Add low-level FFI bindings
    * Add high-level functions for unpacking archives

  ## 0.2.1.2

    * Stream from a file when using `unpackArchive`

  ## 0.2.1.1

    * Preserve modification times by default

  ## 0.2.1.0

    * Enable autodetection of archive format/compression
    * Slightly improved docs
    * Rename `unpackTarball` to `unpackArchive`

  ## 0.2.0.0

    * Fix bug in paths
basic-deps:
  exceptions: -any
  bytestring: '>=0.9'
  bzlib: '>=0.4 && <0.7'
  composition-prelude: '>=2.0.5.0'
  base: '>=4.8 && <5'
  time: -any
  unix-compat: '>=0.1.2.1'
  filepath: '>=1.0'
  dlist: -any
  lzma-static: -any
  zlib: ^>=0.6.2.2
  mtl: '>=2.2.1'
  libarchive: -any
  deepseq: '>=1.4.0.0'
  directory: '>=1.0'
all-versions:
- 0.2.1.1
- 0.2.1.2
- 1.0.0.0
- 1.0.1.0
- 1.0.2.0
- 1.0.3.0
- 2.1.2.1
- 2.1.3.1
- 2.1.3.2
- 2.2.0.0
- 2.2.0.1
- 2.2.0.2
- 2.2.1.0
- 2.2.2.0
- 2.2.3.0
- 2.2.4.0
- 2.2.5.0
- 2.2.5.1
- 2.2.5.2
- 3.0.0.0
- 3.0.1.1
- 3.0.2.0
- 3.0.2.1
- 3.0.2.2
- 3.0.3.0
- 3.0.3.1
- 3.0.3.2
- 3.0.4.1
- 3.0.4.2
author: Vanessa McHale
latest: 3.0.4.2
description-type: markdown
description: |
  # libarchive

  [![Hackage CI](https://matrix.hackage.haskell.org/api/v2/packages/libarchive/badge)](https://matrix.hackage.haskell.org/package/libarchive)
  [![Hackage](https://img.shields.io/hackage/v/libarchive.svg)](http://hackage.haskell.org/package/libarchive)
  [![Dependencies of latest version on Hackage](https://img.shields.io/hackage-deps/v/libarchive.svg)](https://hackage.haskell.org/package/libarchive)

  This contains Haskell bindings to
  [libarchive](http://libarchive.org/). It was created as an alternative to
  [tar](http://hackage.haskell.org/package/tar) and
  [tar-conduit](http://hackage.haskell.org/package/tar-conduit), but it supports
  more archive formats.

  It has a high-level Haskell API for creating and unpacking archives in addition
  to the C API. Like the `tar` package, it can stream from lazy `ByteString`s.

  ## Hacking

  To run the test suite, first run

  ```
  make
  ```

  to download test data.

  ## Performance

  `libarchive` is faster than `tar` or `tar-conduit` when unpacking archives.

  ```
  benchmarking roundtrip/libarchive
  time                 248.5 μs   (247.0 μs .. 250.0 μs)
                       0.999 R²   (0.999 R² .. 1.000 R²)
  mean                 249.7 μs   (248.2 μs .. 251.6 μs)
  std dev              5.637 μs   (4.385 μs .. 8.012 μs)
  variance introduced by outliers: 15% (moderately inflated)

  benchmarking roundtrip/tar
  time                 322.7 μs   (321.9 μs .. 323.7 μs)
                       1.000 R²   (1.000 R² .. 1.000 R²)
  mean                 324.0 μs   (322.9 μs .. 325.1 μs)
  std dev              3.673 μs   (2.837 μs .. 5.119 μs)

  benchmarking unpack/libarchive (via bytestring)
  time                 1.146 ms   (1.133 ms .. 1.157 ms)
                       0.999 R²   (0.997 R² .. 0.999 R²)
  mean                 1.110 ms   (1.096 ms .. 1.156 ms)
  std dev              72.18 μs   (30.15 μs .. 141.7 μs)
  variance introduced by outliers: 51% (severely inflated)

  benchmarking unpack/libarchive (C API)
  time                 1.009 ms   (994.1 μs .. 1.022 ms)
                       0.999 R²   (0.997 R² .. 1.000 R²)
  mean                 1.002 ms   (999.0 μs .. 1.006 ms)
  std dev              11.81 μs   (8.603 μs .. 18.76 μs)

  benchmarking unpack/tar
  time                 3.600 ms   (3.271 ms .. 4.001 ms)
                       0.939 R²   (0.898 R² .. 0.977 R²)
  mean                 4.119 ms   (3.814 ms .. 5.295 ms)
  std dev              1.631 ms   (541.5 μs .. 3.272 ms)
  variance introduced by outliers: 98% (severely inflated)

  benchmarking unpack/tarConduit
  time                 4.946 ms   (4.072 ms .. 6.308 ms)
                       0.835 R²   (0.779 R² .. 0.988 R²)
  mean                 4.164 ms   (3.967 ms .. 4.574 ms)
  std dev              848.0 μs   (442.7 μs .. 1.620 ms)
  variance introduced by outliers: 88% (severely inflated)
  ```
license-name: BSD-3-Clause
