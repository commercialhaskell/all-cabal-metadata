all-versions:
- '0.1'
- 0.1.1
- 0.1.2
- 0.2.0
- 0.2.1
- 1.0.0
author: Thomas Gibson-Robinson <thomas.gibsonrobinson@gmail.com>
basic-deps:
  array: '>=0.3'
  base: '>=4 && <5'
  bytestring: '>=0.9'
  containers: '>=0.5'
  deepseq: '>=1.3 && <1.4'
  directory: '>=1.0'
  filepath: '>=1.2'
  graph-wrapper: '>=0.2'
  hashable: '>=1.1 && <1.2'
  hashtables: '>=1.0'
  mtl: '>=2.0'
  pretty: '>=1.1'
  text: '>=0.11 && <0.12'
  value-supply: '>=0.6'
changelog: "1.0.0 Thomas Gibson-Robinson <thomas.gibsonrobinson@gmail.com> 2013-10-11\n
  \   This is a major release that delivers a fully functional evaluator that\n    is
  both efficient and compatible with FDR2. This is the library used by FDR3\n    (available
  from https://www.cs.ox.ac.uk/projects/fdr) for parsing and\n    manipulating CSPm.\n\n
  \   * Changes to the evaluator included:\n        * Major efficiency and memory
  improvements. In particular, when a\n          pattern binds to a process, the entire
  tree of operator applications\n          is not saved in the environment, meaning
  that memory usage is\n          minimised. This should have no noticeable performance
  impact.\n        * Fixed the naming of processes within let expressions.\n        *
  The ability to handle all processes.\n        * Misc fixes with dot handling, including
  within prefixes.\n        * Improvements to the handling of infinite sets.\n        *
  An error is thrown when a datatype is not rectangular.\n        * Events is now
  available.\n        * An error is thrown when an invalid event or datatype is constructed\n
  \         (e.g. when c.1 is constructed, if c is a channel allowing only 0 as\n
  \         its first field).\n    * The pretty printing structure has been overhauled
  to make it possible to\n      have side effects. This permits more attractive pretty
  printing of values.\n    * Added Hashable instances for many of the built in datatypes.\n
  \   * Fixed many small incompatibilites in the parser.\n    * Fixed a bug that prevented
  multiple assertions from being included.\n    * Enhanced the renamer to produce
  better errors.\n    * Add full support for modules, including parameterised modules.\n
  \   * Fixed many small bugs in the evaluator.\n    \n0.2.1 Thomas Gibson-Robinson
  <thomas.gibsonrobinson@gmail.com> 2012-01-18\n    * Fixed a bug in the typechecker
  that prevented certain (uncommon)\n      functions that took function arguments
  that were polymorphic in dot from\n      being type checked.\n    * Exposed ErrorMessages
  to allow clients to present them more usefully.\n    * Added location information
  to renamer errors.\n    * Made compatible with GHC 7.0.4.\n\n0.2.0 Thomas Gibson-Robinson
  <thomas.gibsonrobinson@gmail.com> 2012-01-04\n    * Enhanced the evaluator:\n        *
  Dot is not handled correctly;\n        * More versions of infinite sets are allowed;\n
  \       * Add experimental and partial support of $ in prefixes.\n      This should
  mean that the evaluator has feature parity with FDR2, \n      although it does lack
  testing.\n    * Added a renamer that renames all variables in a file or expression
  to\n      ensure that they do not clash.\n    * Enhanced the parser to be more compatible
  with FDR2 with regard to the\n      ambiguity with > and end of sequence. See the
  comment in \n      src/CSPM/Parser.hs.\n    * Fixed a bug in the typechecker where
  it would incorrectly allow yield\n      types to be chosen in prefixes. For example,
  given c?x?y:{0,1} where\n      c is a channel that has only one field, of type A,
  the typechecker would\n      assign a type of Int=>A for x, which does not match
  the evaluator which\n      would assign x to the whole A. To fix this a new type
  constraint was \n      added, Inputable, that any type other than yield satisfies.\n
  \   * Added a lot more documentation, particularly on the abstract syntax tree\n
  \     and how to use the library.\n\n0.1.2 Thomas Gibson-Robinson <thomas.gibsonrobinson@gmail.com>
  2011-11-04\n    * Fix building with GHC 7.2 and Alex 3.\n    * Remove the last few
  remaining mentions to sfdr (the old name for\n      cspmchecker).\n\n0.1.1 Thomas
  Gibson-Robinson <thomas.gibsonrobinson@gmail.com> 2011-11-03\n    * Fix the build
  of cspmchecker.\n\n0.1 Thomas Gibson-Robinson <thomas.gibsonrobinson@gmail.com>
  2011-11-03\n    * Initial Release.\n"
changelog-type: text
description: "libcspm\n========\n\nThis library provides a [FDR](http://www.fsel.com/software.html)-compliant\nparser,
  type checker and (experimental) evaluator for machine CSP files.\n\nThere is also
  a program, `cspmchecker`, that makes use of this library to\nprovide command line
  type checking.\n\n[![Build Status](https://secure.travis-ci.org/tomgr/libcspm.png)](http://travis-ci.org/tomgr/libcspm)\n\nInstallation\n------------\n\nThe
  simplest method is to install via [Hackage](http://hackage.haskell.org/).\n`cabal
  install cspmchecker` will install cspmchecker and its dependencies.\n\nOtherwise,
  if you obtain a source distribution then the following commands \nwill install `libcspm`.\n\n
  \   cabal configure\n    cabal build\n    cabal install\n\nTo install `cspmchecker`,
  firstly install `libcspm` as above, then change\ndirectory to `cspmchecker` and
  run the following commands.\n\n    cabal configure\n    cabal build\n    cabal install\n\nThis
  should make `cspmchecker` available from your command line shell\n(if not check
  that the location `cabal` installs binaries to is on your \n`$PATH`).\n\nUsage of
  cspmchecker\n----------------------\n\nFrom a command line shell simply do `cspmchecker
  file.csp` to type check\nthe files. Any error messages will be printed out. For
  example:\n\n    $ cspmchecker ucsexamples/chapter04/abp.csp \n    Checking ucsexamples/chapter04/abp.csp.....\n
  \   ucsexamples/chapter04/abp.csp:80:36-39:\n        Couldn't match expected type
  Int.Int with actual type Int\n        In the expression: bit\n        In the expression:
  ack == bit\n        In the expression: (ack == bit)\n\nDocumentation of the type
  system is forthcoming.\n\nUsage of libcspm\n----------------\n\nSee http://hackage.haskell.org/package/libcspm
  for documentation.\n\nTesting\n-------\n\nTo test `libcspm` run the following commands.\n\n
  \   cabal configure --enable-tests\n    cabal build\n    cabal test\n\nBug Reports\n-----------\n\nPlease
  files bug reports at https://github.com/tomgr/libcspm/issues. Please\nprovide a
  minimal example script that exhibits the error (if possible).\n"
description-type: markdown
hash: 3d77e335e8484a63ca0dbab4eb93e485abc6369d97ed8c29075e2fbb7f0191a0
homepage: https://github.com/tomgr/libcspm
latest: 1.0.0
license-name: BSD-3-Clause
maintainer: Thomas Gibson-Robinson <thomas.gibsonrobinson@gmail.com>
synopsis: A library providing a parser, type checker and evaluator for CSPM.
test-bench-deps:
  base: '>=0'
  directory: '>=1.0'
  filepath: '>=1.2'
  libcspm: '>=0'
  mtl: '>=2.0'
  test-framework: '>=0.6 && <0.7'
