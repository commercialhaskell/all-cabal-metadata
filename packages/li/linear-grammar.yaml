all-versions:
- 0.0.2.1
author: Athan Clark <athan.clark@gmail.com>
basic-deps:
  QuickCheck: '>=0'
  base: '>=4.6 && <5'
  containers: '>=0'
changelog: ''
changelog-type: ''
description: |-
  This library provides some simple tools for building abstract syntax trees,
  representing linear equations and (inclusive) inequalities. As an example:

  > 12x + 3y - 4z + 12 <= 43x - 7b + 8q

  Would look like...

  > f = (12 :: Rational) .*. EVar "x" .+.
  >     (3 :: Rational) .*. EVar "y" .+.
  >     (-4 :: Rational) .*. EVar "z" .+.
  >     ELit 12
  >     .<=.
  >     (43 :: Rational) .*. EVar "x" .+.
  >     (-7 :: Rational) .*. EVar "b" .+.
  >     (8 :: Rational) .*. EVar "q"

  I've added some overloading functionality, to help ease the verbosity of the
  above statements - an @IsString@ instance, and some other utilities. To pack
  the equation into <https://en.wikipedia.org/wiki/Linear_equation#General_.28or_standard.29_form standard form>,
  use the @sandardForm@ function:

  > stdF = standardForm f
description-type: haddock
hash: d2d5d0a4df2d3466ee18bdce635040dc6cbe86ddee4edf166afba5519ee752ec
homepage: ''
latest: 0.0.2.1
license-name: BSD-3-Clause
maintainer: Athan Clark <athan.clark@gmail.com>
synopsis: A simple grammar for building linear equations and inclusive inequalities.
test-bench-deps:
  QuickCheck: '>=0'
  base: '>=0'
  containers: '>=0'
  hspec: '>=0'
