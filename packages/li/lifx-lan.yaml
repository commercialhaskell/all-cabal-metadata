homepage: https://github.com/georgefst/lifx-lan
changelog-type: markdown
hash: 25e71fd889c0d0dfc05fcdcab5c321ccbf094b9829c6d10c3715fc3068bdd0c9
test-bench-deps: {}
maintainer: georgefsthomas@gmail.com
synopsis: LIFX LAN API
changelog: |
  # Revision history for lifx-lan

  ## 0.7.1 -- 21-10-2022
  - Handle invalid UTF-8 in light label.
  - Ensure discovery exits successfully when zero devices wanted

  ## 0.7 -- 2022-02-20
  - Drop support for GHC < 9.2.
      - If anyone is stuck on an older version of GHC and needs recent features of `lifx-lan` then please let me know. It would be reasonably easy to create a branch for it.
  - Don't provide field selector functions for any types. Using `OverloadedRecordDot` in client code is recommended. We still export `unLifxT` as a normal function, for backward compatibility.
  - Move much of the implementation detail of `LifxT` to `Lifx.Lan.Internal`.
  - Add `Lifx.Lan.Mock.Terminal` module for testing programs without a physical LIFX device.
  - Add `sendMessageAndWait` function.
  - Use `Text` rather than `ByteString` for `label` field of `LightState`.
  - Rename `productId` field of `Product` to `id`.
  - Update to latest products list.

  ## 0.6.2 -- 2022-02-02
  - Update to latest products list.

  ## 0.6.1 -- 2022-02-01
  - Update to latest products list.

  ## 0.6 -- 2021-12-23
  - Refactor to expose lower-level product lookup functionality via `Lifx.Internal.ProductInfoMap`.
  - To facilitate the above, modify `LifxError` slightly, with a new `ProductLookupError` type.

  ## 0.5.1 -- 2021-12-12
  - Implement `getProductInfo`.
  - Expose `LifxT` constructor.

  ## 0.5.0 -- 2021-08-01
  - Fix bug which was causing broadcasting not to work with messages that expect no response.

  ## 0.4.0 -- 2021-07-30
  - Use abstract Device type.
  - Use more types from standard libraries where appropriate:
      - PortNumber
      - NominalDiffTime
  - General cleanup and documentation improvements.

  ## 0.3.0 -- 2021-06-19
  - Implement message broadcasting and device discovery.

  ## 0.2.0 -- 2021-06-18
  - Enable querying state (colour or power level).
      - Various breaking changes to enable this.

  ## 0.1.0.2
  - Basic. Only supports setting power and colour.
basic-deps:
  bytestring: ^>=0.10.8 || ^>=0.11
  extra: ^>=1.7.1
  base: ^>=4.16
  time: ^>=1.9.3 || ^>=1.10 || ^>=1.11 || ^>=1.12 || ^>=1.13
  text: ^>=1.2.3
  composition: ^>=1.0.2.1
  monad-loops: ^>=0.4.3
  network: ^>=3.1.1.1
  containers: ^>=0.6.2.1
  ansi-terminal: ^>=0.11.1
  binary: ^>=0.8.8
  mtl: ^>=2.2.2
  colour: ^>=2.3.6
  transformers: ^>=0.5.6 || ^>=0.6
  random: ^>=1.2.0
  safe: ^>=0.3.19
all-versions:
- '0.0'
- 0.1.0.2
- 0.2.0
- 0.3.0
- 0.4.0
- 0.4.0.1
- 0.5.0
- 0.5.0.1
- 0.5.1
- 0.5.1.1
- '0.6'
- 0.6.0.1
- 0.6.1
- 0.6.2
- '0.7'
- 0.7.1
author: George Thomas
latest: 0.7.1
description-type: markdown
description: |
  Haskell bindings to the [LIFX LAN API](https://lan.developer.lifx.com/docs).

  This library provides a reasonably high-level interface, but doesn't try to be *too* clever.
  For example, it doesn't check message delivery, and throws an error if a light takes too long to respond.
  Messages and response types map directly to the low-level API (with links provided in the documentation).

  It does not yet cover the full API, but PRs are very welcome and some functionality may be added on request.
license-name: BSD-3-Clause
