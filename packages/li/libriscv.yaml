all-versions:
- 0.1.0.0
author: Sören Tempel, Tobias Brandt, and Christoph Lüth
basic-deps:
  array: ^>=0.5.4.0
  base: '>=4.15.0.0 && <4.20.0.0'
  bv: '>=0.5 && <0.6'
  bytestring: '>=0.10.10 && <0.12'
  exceptions: ^>=0.10.4
  extra: '>=1.7.0 && <1.8'
  filepath: ^>=1.4.2.1
  freer-simple: '>=1.2.1.2 && <1.3'
  libriscv: '>=0'
  melf: ^>=1.3.0
  optparse-applicative: '>=0.16.1 && <0.19'
  parameterized-utils: ^>=2.1.6.0
  template-haskell: '>=2.18.0 && <2.22'
  transformers: '>=0.5.6.0 && <0.7'
changelog: ''
changelog-type: ''
description: |-
  A formal model for the <https://riscv.org/ RISC-V> /Instruction Set Architecture/ (ISA).
  Contrary to other Haskell RISC-V ISA models, like <https://github.com/GaloisInc/grift GRIFT>
  or <https://github.com/mit-plv/riscv-semantics riscv-semantics>, LibRISCV is specifically
  tailored to the creation of custom ISA interpreters. To this end, it is designed for
  flexibility, allowing a versatile representation of instruction operands. For example,
  instruction operands can be <https://en.wikipedia.org/wiki/Satisfiability_modulo_theories SMT>
  expressions for <https://doi.org/10.48550/arXiv.2404.04132 symbolic execution> of binary code.

  LibRISCV abstractly describes instruction semantics using an /Embedded Domain Specific Language/
  (EDSL) with <https://doi.org/10.1145/2887747.2804319 free(r) monads>. This Haskell library
  is intended to build custom interpreters for this free monad. The entry point for this purpose is
  the 'LibRISCV.Semantics.buildAST' function which obtains the free monad AST based on an entry address.
  The entry address can be obtained from a provided ELF loader implementation, this "Loader" module
  is also responsible for loading binary instructions into a provided memory implementation. Refer to
  provided example interpreters in the <https://github.com/agra-uni-bremen/libriscv GitHub repository>
  for practical usage instruction. More detailed information on LibRISCV and its concepts is also
  available in a <https://doi.org/10.1007/978-3-031-38938-2_2 TFP'23 publication>.
description-type: haddock
hash: 71b8849fc050b75072e0569f40647d97a9b46543f24ff4f2cf58f7904a44f8f4
homepage: https://github.com/agra-uni-bremen/libriscv
latest: 0.1.0.0
license-name: MIT
maintainer: Group of Computer Architecture <riscv@informatik.uni-bremen.de>
synopsis: A versatile, flexible and executable formal model for the RISC-V architecture.
test-bench-deps:
  array: '>=0'
  base: '>=0'
  bv: '>=0'
  bytestring: '>=0'
  libriscv: '>=0'
  tasty: '>=1.4.2.3'
  tasty-hunit: '>=0.10.0.3'
