homepage: ''
changelog-type: ''
hash: f324329a97a707a034ed43c22b4efc5b5b684db4579a3a2569f8e4878c8d8c0d
test-bench-deps:
  base: -any
  constraints: -any
  array: '>=0.5.4 && <666'
maintainer: jeanphilippe.bernardy@gmail.com
synopsis: Build SMC morphisms using linear types
changelog: ''
basic-deps:
  base: '>=4.16.4.0 && <666'
  constraints: '>=0.13.4 && <666'
  array: '>=0.5 && <666'
all-versions:
- 1.0.0
- 1.0.1
- 1.1.1
- 2.0.1
- 2.0.2
- 2.2.2
- 2.2.3
author: Jean-Philippe Bernardy
latest: 2.2.3
description-type: haddock
description: |-
  A number of domain specific languages, such as circuits or
  data-science workflows, are best expressed as diagrams of boxes
  connected by wires.
  A faithful abstraction of box-and-wires is Symmetric Monoidal Categories (SMCs)
  This library
  allows one to program SMCs with linear functions instead of SMC
  combinators. This is done without resorting to template haskell or compiler plugins.
  The rationale and design of this library is provided by the paper  "Evaluating Linear Functions to Symmetric Monoidal Categories", by Jean-Philippe Bernardy and Arnaud Spiwack, appearing at Haskell Symposium 2021. This implementation provides additionally: a much improved implementation as well as an interface specifically tailored towards tensor calculus and compact-closed categories in general.
license-name: LGPL-3.0-or-later
