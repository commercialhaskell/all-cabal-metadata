all-versions:
- 0.0.2
author: Jens-Ulrik Petersen
basic-deps:
  base: '>=0'
  gtk: '>=0'
  haskell98: '>=0'
  popenhs: '>=0'
  regex-compat: '>=0'
  unix: '>=0'
changelog: "2001-11-13  Jens Petersen  <juhp@01.246.ne.jp>\n\n\t* linkchk.hs: Simplified
  description.  Updated todo list.\n\t(gtksetup): No longer set window policy to auto_skrink.\n\tShorten
  initial label to just \"...\".\n\t(hopchk): debug \"hopchk:\".  Don't debug out
  when returning err.\n\t(reportTime): Remove quotes around regexp string.\n\t(ifaceDown):
  Use new ifconfig function.  Check ifconfig output to\n\tbe sure interface is really
  UP with regexp.\n\t(ifconfig): New function.\n\t(peeraddr): debug \"peeraddr:\".\n\t(ptpAddress):
  use new ifconfig function.  Don't quote regexp string.\n\t(popen): Add debug message
  for popen with commands and opts.\n\n2001-11-01  Jens Petersen  <juhp@01.246.ne.jp>\n\n\t*
  linkchk.hs: Updated todo list.  Import elemIndex from List,\n\treadFloat and showFFloat
  from Numeric.\n\t(FlagNullary): New type for options with no arg.\n\t(FlagUnary):
  New type for options with one arg.\n\t(Flag): Redefined in terms of them.\n\t(debugging):
  -V gone, -v is now --version.  Added --interface,\n\tand --host.  Restructured to
  use FlagNullary and FlagUnary.\n\t(unaryVal): New function that maybe returns value
  of option with\n\targ.\n\t(unaryOpt): New function to test whether a unary option
  present.\n\t(nullaryOpt): New function that tests whether a nullary opt present.\n\t(main):
  Use FlagNullary and FlagUnary.  Updated version.  Implicit\n\tparameter opts to
  start and optsOk.\n\t(optsOk): Tests directly whether both --version and --help,
  or\n\t--host and --interface specified in implicit ?opt.\n\t(optOk): Removed.\n\t(header):
  Interface is now an option.\n\t(AF): Removed.\n\t(start): Use implicit opts, and
  just test for --tty.\n\t(delay): Removed.\n\t(chkDelay): Removed.\n\t(startTty):
  Use ?opts.  labeltxt replaces ifname. doSleep for sleep.\n\t(startGtk): Use ?opts.\n\t(gtksetup):
  Use ?opts.  labeltxt instead of ifname.  Give window\n\tautoshrink policy.  signalConnect
  was widgetSignalConnect.  Use\n\tcontainerSetBorderWidth for containerBorderWidth.
  \ Rename label to\n\tlbl.  Fix width at 50 pixels for now.\n\t(idleHandler): Use
  ?opts and doSleep.\n\t(interface): New function to return interface.  Use ?opts
  and unaryVal.\n\t(labeltxt): was ifname.  Use ?opts and interface.\n\t(doSleep):
  New.  Use ?opts to read --delay.\n\t(hopchk): Use ?opts. Check ifconfig first if
  --interface given.\n\tifaceAddr is now pingOpts.  debug out when failing with err.\n\t(ping):
  Use ?opts.\n\t(pingOpts): was ifaceAddr.  Use ?opts.\n\t(sigfig): New function in
  reportTime, to round up time to 3sf's.\n\t(reportTime): Use it.\n\t(ifaceDown):
  New function to test with ifconfig whether interface\n\tis down.\n\t(peeraddr):
  Use ?opts and only maybe return interface.  If --host\n\tthen return host.  Use
  interface and defaultRoute.\n\t(maybeRead): New function which maybe ReadS from
  a string.\n\t(readRtGwys): Use ?opts.\n\t(gtwyHost): Use ?opts and defaultRoute.\n\t(parseRT):
  Use ?opts and afOpt.\n\t(adOpt): Use ?opts.\n\t(doParseRTE): Ditto.  Drop second
  guard.\n\t(debug): Use ?opts.\n\t(defaultRoute): New function.\n\t\n\t* README:
  Rewrote description.  Updated dependencies' versions.\n\n\t* NEWS: New features
  in 0.02\n\n2001-10-24  Jens Petersen  <juhp@01.246.ne.jp>\n\n\t* linkchk.spec.in:
  Added defattr.  Increased release number.\n\n\t* index.html: add screenshot of window.
  \ Restructured Releases and\n\tput Building at end.\n\n\t* configure.in: increment
  version number.  Removed AC_CACHE_CHECK \n\tfor popenhs version.\n\n2001-10-18  Jens
  Petersen  <juhp@01.246.ne.jp>\n\n\t* linkchk.hs: changed description and updated
  todo list.  Don't\n\timport readHex from Numeric.\n\t(main): Update version to 0.01.\n\t(optsOk):
  use `and'.\n\t(startTty): debug count.\n\t(gtksetup): window title is now linkchk
  ++ interface.\n\t(hopchk): peeraddr now returns (address, interface).  Add\n\tinterface
  option to ping if necessary.  Handle leaking fixed in\n\tghc-5.02, so drop guard
  hacks that read all of other stream.\n\t\"broken\" to \"dropped\".\n\t(ifaceAddr):
  return address arg for ping with interface option if\n\tlinklocal ipv6.\n\t(reportTime):
  simplify regexp since handle leaking fixed in ghc.\n\t(chkError): Removed for same
  reason.\n\t(reportError): Ditto.\n\t(linklocal): tests if an ipv6 address is linklocal.\n\t(peeraddr):
  returns (address, interface).\n\t\n\t* linkchk.hs: \n\t* linkchk.spec.in: New file,
  based on popenhs.spec.in\n\n\t* screenshot.png: new file.\n\n\t* index.html: Add
  image of window running.  Restructured page.\n\n\t* configure.in: added AM_INIT_AUTOMAKE.
  \ Don't test for grep and\n\thstags.  No more `cat VERSION`.  Put gtk+hs cflags
  in\n\tHCFLAGS.  Test for popenhs-config.  Add popenhs cflags to\n\tHCFLAGS.  Generate
  Makefile.\n\n\t* aclocal.m4: Now autogenerated by aclocal from\n\n\t* acinclude.m4:
  New file. Based on file in popenhs, which turn is\n\tbased on gtk+hs file, based
  on ghc....\n\n\t* VERSION: removed.  Version number is now in \"configure.in\" [and\n\t\"linkchk.hs\"
  :-( ]\n\n\t* README: updated for 0.01\n\n\t* NEWS: 0.01 entries, describing --delay,
  -6, time, netstat,\n\topenhs, automake  and autoconf\n\n\t* Makefile: now autogenerated
  by autoconf.\n\t\n\t* Makefile.in: autogenerated by automake.\n\n\t* Makefile.am:
  New file.  Based on popenhs \"Makefile.am\".\n\n\t* INSTALL: Moved contents to README.
  \ This is now generic GNU file.\n\t\n2001-10-02  Jens Petersen  <juhp@01.246.ne.jp>\n\n\t*
  linkchk.hs: changed license to GPL 2 only.\n\tProgram not library.  Not LGPL.\n\tImprove
  description.\n\tAdded Todo section.\n\tDon't import IO, since no longer used.\n\tImport
  Popen.\n\tImport RegexString is back\n\t(LinkState) gone.\n\t(Flag) new flags added:
  Delay, IPv6 and Debug.\n\tDerive Eq.\n\t(debugging): new unsafe IORef to hold debug
  state.\n\t(main): version 0.01.  Pass all options to start.\n\t(optsOk): handle
  multiple options.\n\t(AF): new type to denote IP v6 or v4.\n\t(start): Set debugging
  ioref if debug option set and decide\n\twhether IP v4 or v6.\n\t(delay):  New.  Converts
  delay option parameter to integer.\n\t(chkDelay): Helper function to read decimal
  from string.\n\t(startTty): Signature has maybe interface, af and delay.\n\tpppchk
  changed to hopchk with af.  Instead of report, use a case\n\tto display result.
  \ sleep for delay.\n\t(startGtk): Signature has maybe interface, af and delay.\n\t(gtksetup):
  Ditto.  Use ifname to decide name of interface.\n\t(idlehandler): pppchk changed
  to hopchk with af.  Instead of\n\treport, use a case to display result.  sleep for
  delay.\n\t(ifname): new function returns given interface or default as\n\tname.\n\t(Result):
  new type to denote result.\n\t(hopchk): was pppchk.  Signature includes af and Result.
  \ peeraddr\n\ttakes af.  If no address return \"no route\".  Use popen2 instead
  of\n\tpopen, and use ping.  If succeeds and no error or jusr warning --\n\tchecking
  closes err handle! -- return time, report broken if\n\terror, otherwise return ping
  error message.\n\t(ping): new function that gives ping command depending on af.\n\t(fdCat):
  removed.\n\t(reportTime): new function to read ping time and format it.\n\t(chkError):
  New.  If err null or just warning, then fine.\n\t(RtEntry): destination back again.\n\t(findInterface):
  removed\n\t(peeraddr): signature takes maybe interface and af to maybe\n\tstring
  address.  readRtHosts renamed to readRtGwys with af.\n\tFind with function cased
  on maybe interface and af.  If no address\n\treturn nothing instead of raising error,
  otherwise just address.\n\t(readRtGwys): was readRtHosts.  Takes af.  parseRT takes
  af.\n\t(gtwyHost): handle ipv6 \"::\" too.\n\t(parseRT): take af.  Don't openFile
  \"/proc/net/route\", popen2\n\tnetstat -rn instead.  afOpt gives inet6 or inet option.
  \ If ok,\n\tthen parse and return list route entries, otherwise empty list.\n\t(afOpt):
  New.  Returns inet or inet6 depending on af.\n\t(linesRoutingTable): Gone.\n\t(doParseRT):
  Reflect netstat -rn output instead of /proc/net/route\n\tformat.  Don't need to
  convNtoA since netstat gives decimal ipv4\n\taddresses.  Handle both v4 and v6 output.\n\t(convNtoA):
  Removed.\n\t(debug): new program to print value when debugging.\n\t(popenInOutErr):
  Moved to POpen, a new separate module.\n\n2001-10-02  Jens Petersen  <juhp@01.246.ne.jp>\n\n\t*
  INSTALL: updated to reflect current versions of dependencies.\n\tRemoved text about
  old versions of gtkhs-config.\n\n\t* Makefile: change call of gtkhs-config from
  variable shell call\n\tto backquote eval inside ghc call.  Include popen module.\n\n\t*
  README: GPL 2.  Changed description including v4 and v6.\n\tChanged text about /proc
  to Linux options of ping and netstat.\n\n\t* VERSION: 0.01\n\n\t* index.html: changed
  description.  Added section headings.\n\tImproved formatting of releases and add
  links to rpms.\n\n2001-08-17  Jens Petersen  <juhp@01.246.ne.jp>\n\n\t*  version
  0.00, first public release\n"
changelog-type: text
description: "linkchk is an active network link monitor\n(c) 2001 Jens-Ulrik Petersen
  <juhp@01.246.ne.jp>\n\nIt is licensed under GPL 2 and comes with no warranty.\n\nThe
  latest version can be found at: <http://www.01.246.ne.jp/~juhp/linkchk>\n\nDESCRIPTION\n\nBy
  default it repeatedly pings the IPv4 (or IPv6) address of\nthe default gateway of
  a given interface appearing in the\nrouting table and shows the link status in a
  small gtk\nwindow or in a tty.  With appropriate options it can be used\nmonitor
  any interface with a gateway or to ping any specific\nhost.  gtk+hs is currently
  required to build it.  The reason\nfor starting this project was to monitor an unreliable
  ppp\nlink at home with a tendency suddenly to start dropping\npackets after a while.\n\nCurrently
  it uses some options of ping, ping6 and netstat\nthat are probably specific to Linux,
  but porting to most\nunices should be straightforward I imagine.  If you get\nlinkchk
  working on another platform and can send me patches,\nor can send me \"ifconfig\"
  and \"netstat\" output from your\nplatform, then I will be happy to try to fold
  them into the\ndistribution.\n\nIf you find linkchk useful, or have comments, feedback
  or\nother contributions, I would be glad to hear from you.\n\nBUILDING\n\nIn order
  to build linkchk you need to have installed\n\n* gtk+hs: a recent version (I'm using
  0.12.1 from cvs)\n\t(available from <http://www.cse.unsw.edu.au/~chak/haskell/gtk/>).\n*
  c2hs: a recent version (I'm using 0.10.1 from cvs)\n* ghc: a recent version (I'm
  using 5.02)\n\nOnce you have those in place, you should be able to build in\nthe
  standard way;  ie something like:\n\n\t% ./configure\n\t% make\n\t% make install\n\nshould
  make and install the executable \"linkchk\", that\nyou can then test by running.
  \ \"linkchk --help\" lists its\noptions.\n\nSee the generic INSTALL instructions
  for more information on building. \n"
description-type: text
hash: c3072ce72a247b5900908b1278d711c68e927b81040d8fc4333c6dd77f7d41c0
homepage: http://www.haskell.org/~petersen/haskell/linkchk/
latest: 0.0.2
license-name: LicenseRef-GPL
maintainer: Jens-Ulrik Petersen <juhp@01.246.ne.jp>
synopsis: linkchk is a network interface link ping monitor.
test-bench-deps: {}
