all-versions:
- 0.1.0.0
- 0.4.0.0
- 0.4.0.1
- 0.5.0.0
- 0.5.1.0
- 0.6.0.0
- 0.7.0
- 0.8.0
- 0.8.1
- 0.9.0
- 0.9.1
- 0.9.2
- 0.10.0
- 0.10.1
- 0.10.2
- '0.11'
- 0.11.1
- 1.0.0
author: John Wiegley
basic-deps:
  QuickCheck: '>=0'
  base: '>=4.7 && <5'
  containers: '>=0'
  free: '>=0'
  hoopl: '>=3.10.0.1'
  linearscan: '>=1.0 && <1.1'
  transformers: '>=0'
changelog: ''
changelog-type: ''
description: |-
  This module provides two convenience features for Hoopl users that wish to
  use @linearscan@ for register allocation in their compilers.

  First, it defines a type class called 'NodeAlloc'. After defining an
  instance of this class for your particular graph node type, simply call
  'LinearScan.Hoopl.allocateHoopl'. This is a simpler interface than using
  @linearscan@ directly, which requires two records of functions that are more
  general in nature than the methods of 'NodeAlloc'.

  Second, it provides a DSL for constructing assembly language DSLs that
  compile into Hoople program graphs. See the tests for a concrete example.
  This is mainly useful for constructing tests of intermediate representations.

  Please see the tests for an example of the simple assembly language that is
  used to test the @linearscan@ allocator.
description-type: haddock
hash: c2c3dc6776f5e2eb1da87154be2a6f2777b742bd40cdfbf7a09a2b87b7e32ae9
homepage: http://github.com/jwiegley/linearscan-hoopl
latest: 1.0.0
license-name: BSD-3-Clause
maintainer: johnw@newartisans.com
synopsis: Makes it easy to use the linearscan register allocator with Hoopl
test-bench-deps:
  QuickCheck: '>=0'
  base: '>=3'
  containers: '>=0.5.5'
  deepseq: '>=0'
  hoopl: '>=3.10.0.1 && <3.11'
  hspec: '>=1.4.4'
  hspec-expectations: '>=0.3'
  lens-family-core: '>=0'
  linearscan: '>=1.0 && <1.1'
  linearscan-hoopl: '>=0'
  transformers: '>=0.3.0.0'
