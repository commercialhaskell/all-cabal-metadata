homepage: https://wrengr.org/software/hackage.html
changelog-type: text
hash: 2b8b7c2632f7a98ee94c74bcb836ba2df7c7089ac7ccb16b6e11aa9df4b20c21
test-bench-deps: {}
maintainer: wren@cpan.org
synopsis: Common not-so-common functions for lists
changelog: |
  0.4.1.6 (2021-10-17):
      - Updating maintainer's email, url, etc
      - Set up GithubActions for CI.
  0.4.1.4 (2015-05-30):
      - Moved VERSION to CHANGELOG
  0.4.1 (2012-09-26):
      - Prelude.Listless: Guarded re-export of Prelude.catch with CPP
  0.4.0.1 (2010-05-31):
      - Fixed some typos in the cabal file regarding base and the Prelude
  0.4.0 (2010-05-31):
      - Added Data.List.Extras.list (by Tom Lokhorst)
      - Changed the type of Data.List.Extras.Pair.zipBy to be correct

  0.3.0 (2009-04-02):
      - Relaxed type for Data.List.Extras.Pair.pairBy
      - Removed rewrite rules for Data.List.Extras.LazyLength.*

  0.2.2.1 (2008-10-12):
      - Now compiles under GHC 6.10
  0.2.1 (2008-08-17):
      - Rewrite rules for Data.List.Extras.LazyLength.* actually get picked up
  0.2.0 (2008-07-26):
      - Overhauled Data.List.Extras.Argmax

  0.1.0 (2008-07-21):
      - Initial public release
basic-deps:
  base: '>=4 && <5'
all-versions:
- 0.1.0
- 0.1.1
- 0.2.0
- 0.2.1
- 0.2.2
- 0.2.2.1
- 0.3.0
- 0.4.0
- 0.4.0.1
- 0.4.1.1
- 0.4.1.3
- 0.4.1.4
- 0.4.1.6
author: wren gayle romano
latest: 0.4.1.6
description-type: markdown
description: |
  list-extras
  ===========
  [![Hackage version](https://img.shields.io/hackage/v/list-extras.svg?style=flat)](https://hackage.haskell.org/package/list-extras)
  [![Build Status](https://github.com/wrengr/list-extras/workflows/ci/badge.svg)](https://github.com/wrengr/list-extras/actions?query=workflow%3Aci)
  [![Dependencies](https://img.shields.io/hackage-deps/v/list-extras.svg?style=flat)](http://packdeps.haskellers.com/specific?package=list-extras)

  The list-extras package provides a few common not-so-common functions
  for lists.

  ## Install

  This is a simple package and should be easy to install.  You should
  be able to use the standard:

      $> cabal install list-extras

  ## Portability

  The implementation is quite portable, relying only on a few basic
  language extensions. The complete list of extensions used is:

  * CPP
  * Rank2Types
  * ExistentialQuantification

  ## Links

  * [Website](http://wrengr.org/)
  * [Blog](http://winterkoninkje.dreamwidth.org/)
  * [Twitter](https://twitter.com/wrengr)
  * [Hackage](http://hackage.haskell.org/package/list-extras)
  * [GitHub](https://github.com/wrengr/list-extras)
license-name: BSD-3-Clause
