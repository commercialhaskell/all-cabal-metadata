all-versions:
- 0.1.0.0
- 0.1.0.1
author: Fabian Schneider
basic-deps:
  LiterateMarkdown: '>=0'
  base: '>=4.14 && <4.15'
changelog: |
  # Revision history for LiterateMarkdown

  ## 0.1.0.1 -- 2020-08-29
  * code maintainability improvements and update to newer `base` version

  ## 0.1.0.0 -- 2020-04-11

  * First version. Released on an unsuspecting world.
changelog-type: markdown
description: "# lhsc - a prepocessor for literate haskell markdown\r\n\r\nA Converter
  to convert from .lhs to .md and vice versa\r\n\r\n`lhsc` is a program to convert
  literate haskell files in the \r\nbirdtick format to correctly rendered (git flavoured,
  html containing) markdown files \r\nand vice versa.\r\n\r\nIt strips away the heading
  tags #, replacing them with the corresponding html tags,\r\nconverts the `'''haskell
  [...]'''` to `> [...]` as recognised by the GHC literate prepocessor.\r\n`''' [...]
  '''` will be converted to `< [...]` and will be discarded by ghc but will still
  be displayed as code when rendered. \r\n(In both cases `'''` is actually the three
  md backticks, but its a pain to write md about md.)\r\n\r\n# Usage\r\n\r\n`lhsc
  (toLhs|toMd) file1 [file2] [...]`\r\nThe `toLhs` and `toMd` commands are not case
  sensitive. \r\nThe program will convert each file from the other format to the specified
  one, \r\ncreating the files `file1.md` `file2.md` ... or `file1.lhs` `file2.lhs`
  ... in the same directory respectively.\r\n\r\nTo install the executeable on windows,
  if you can't convince cabal to use [`--bindir-method=copy`](https://github.com/haskell/cabal/issues/5748)
  you can build the project locally and copy the built executeable to `C:/Users/username/AppData/Roaming/cabal/bin`
  and ensure that this directory is in your path. \r\n"
description-type: markdown
hash: 84c79f4950d671e960686fb38696824460c96f0164e40b450e2d637d23d50ebb
homepage: ''
latest: 0.1.0.1
license-name: MIT
maintainer: faebl.taylor@pm.me
synopsis: Converter to convert from .lhs to .md and vice versa.
test-bench-deps:
  LiterateMarkdown: '>=0'
  base: '>=4.14 && <4.15'
