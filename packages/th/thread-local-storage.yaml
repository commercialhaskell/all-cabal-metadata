all-versions:
- 0.1.0.3
- 0.1.0.4
- 0.1.1
- 0.1.2
- '0.2'
author: Ryan Newton
basic-deps:
  base: '>=4.6 && <5.0'
  containers: '>=0.5'
changelog: |
  ## 0.2 [2018.07.01]
  * `thread-local-storage` now checks that threads calling
    `Data.TLS.PThread.getTLS` are bound threads, and throws a runtime error if
    this is not the case.

    For this reason, if you call `getTLS` in a thread spawned by `forkOn`, it
    will break with this release, so you are encouraged to switch uses of
    `forkOn` to `forkOS`.

  ## 0.1.2 [2017.06.23]
  * Fix the benchmark suite with `criterion-1.2`

  ## 0.1.1 [2017.01.22]
  * Expose `Data.TLS.PThread.Internal`. Note that there are no API guarantees
    whatsoever with this module, so use it with caution.
  * Add `pthread` to `extra-libraries`. Without it, some systems suffer
    from linker errors when using this library.
  * Fix build on GHC 7.6 and 7.8.
changelog-type: markdown
description: |
  # `thread-local-storage`
  [![Hackage](https://img.shields.io/hackage/v/thread-local-storage.svg)][Hackage: thread-local-storage]
  [![Hackage Dependencies](https://img.shields.io/hackage-deps/v/thread-local-storage.svg)](http://packdeps.haskellers.com/reverse/thread-local-storage)
  [![Haskell Programming Language](https://img.shields.io/badge/language-Haskell-blue.svg)][Haskell.org]
  [![BSD3 License](http://img.shields.io/badge/license-BSD3-brightgreen.svg)][tl;dr Legal: BSD3]
  [![Build](https://img.shields.io/travis/rrnewton/thread-local-storage.svg)](https://travis-ci.org/rrnewton/thread-local-storage)

  [Hackage: thread-local-storage]:
    http://hackage.haskell.org/package/thread-local-storage
    "thread-local-storage package on Hackage"
  [Haskell.org]:
    http://www.haskell.org
    "The Haskell Programming Language"
  [tl;dr Legal: BSD3]:
    https://tldrlegal.com/license/bsd-3-clause-license-%28revised%29
    "BSD 3-Clause License (Revised)"

  See .cabal file for description.

  Here are some example benchmark results (on an Ivy Bridge i7-3770), with a typical time of 10.4 nanoseconds to get to a TLS variable given one IO thread per OS thread:

  ![example benchmarks](https://raw.githubusercontent.com/rrnewton/thread-local-storage/master/bench/example_results.png)
description-type: markdown
hash: 5a9f85d1b01bdd4fac00fa82bccee4889b50c2a62cade21a00931b91215506a8
homepage: https://github.com/rrnewton/thread-local-storage
latest: '0.2'
license-name: BSD-3-Clause
maintainer: rrnewton@gmail.com
synopsis: Several options for thread-local-storage (TLS) in Haskell.
test-bench-deps:
  atomic-primops: '>=0.6.0.6'
  base: '>=4.6 && <5.0'
  criterion: '>=1.2.1'
  thread-local-storage: '>=0'
