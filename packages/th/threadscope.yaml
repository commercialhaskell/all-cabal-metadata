all-versions:
- '0.1'
- 0.1.1
- 0.1.2
- 0.1.3
- 0.2.0
- 0.2.1
- 0.2.2
- 0.2.3
- 0.2.4
- 0.2.5
- 0.2.6
- 0.2.7
- 0.2.8
- 0.2.9
- 0.2.10
- 0.2.11
- 0.2.11.1
- 0.2.12
- 0.2.13
- 0.2.14
- 0.2.14.1
author: |-
  Satnam Singh <s.singh@ieee.org>,
  Simon Marlow <marlowsd@gmail.com>,
  Donnie Jones <donnie@darthik.com>,
  Duncan Coutts <duncan@well-typed.com>,
  Mikolaj Konarski <mikolaj@well-typed.com>,
  Nicolas Wu <nick@well-typed.com>,
  Eric Kow <eric@well-typed.com>
basic-deps:
  array: <0.6
  base: '>=4.10 && <5'
  binary: <0.11
  bytestring: <0.13
  cairo: <0.14
  containers: '>=0.2 && <0.8'
  deepseq: '>=1.1'
  file-embed: <0.1
  filepath: <1.6
  ghc-events: '>=0.13 && <0.21'
  glib: <0.14
  gtk: '>=0.12 && <0.16'
  mtl: <2.4
  pango: <0.14
  template-haskell: <2.24
  temporary: '>=1.1 && <1.4'
  text: <2.2
  time: '>=1.1 && <1.15'
  unix: '>=2.3 && <2.9'
changelog: |
  # Revision history for threadscope

  ## 2022-05-10 - v0.2.14.1

  * Spelling fixes ([#121](https://github.com/haskell/ThreadScope/pull/121), [#123](https://github.com/haskell/ThreadScope/pull/123))
  * Add compatibility with GHC-9.2 ([#124](https://github.com/haskell/ThreadScope/pull/124), [ï¼ƒ125](https://github.com/haskell/ThreadScope/pull/125))
  * Update dependencies ([#126](https://github.com/haskell/ThreadScope/pull/126))

  ## 2021-01-09 - v0.2.14

  * Print times with more sensible units ([#111](https://github.com/haskell/ThreadScope/pull/111))
  * EventDuration: Make it more robust to truncated eventlogs ([#110](https://github.com/haskell/ThreadScope/pull/110))
  * Use GitHub Actions for CI ([#113](https://github.com/haskell/ThreadScope/pull/113))
  * Relax upper version bounds for ghc-events, time, bytestring, and template-haskell

  ## 2020-04-06 - v0.2.13

  * Add changelog to extra-source-files ([#105](https://github.com/haskell/ThreadScope/pull/105))
  * Fix broken GitHub Releases deployment ([#106](https://github.com/haskell/ThreadScope/pull/106))
  * Update ghc-events to 0.13.0 ([#107](https://github.com/haskell/ThreadScope/pull/107))
  * Relax upper version bound for time

  ## 2020-03-04 - v0.2.12

  * Remove unused events entry box ([#93](https://github.com/haskell/ThreadScope/pull/93))
  * Make the app work even if it fails to load the logo ([#96](https://github.com/haskell/ThreadScope/pull/96))
  * Support GHC 8.8 ([#99](https://github.com/haskell/ThreadScope/pull/99))
  * Support ghc-events 0.12.0 ([#101](https://github.com/haskell/ThreadScope/pull/101))
  * Stop using gtk-mac-integration and fix broken CI ([#103](https://github.com/haskell/ThreadScope/pull/103))
    * This causes a visual regression. The logo won't be displayed in Dock.

  ## 2018-07-12 - v0.2.11.1

  * Relax upper version bounds for containers and ghc-events (#88)

  ## 2018-06-08 - v0.2.11

  * Relax upper version bounds for template-haskell and temporary
  * Fix build failure with gtk-0.14.9
  * Modernise AppVeyor CI script

  ## 2018-02-16 - v0.2.10

  * Add instructions to install gtk2 in the README
  * Do not include windows_cconv.h on non mingw32 systems (#79)
  * Relax upper version bound for ghc-events (#80)
  * Relax upper version bound for time

  ## 2017-09-02 - v0.2.9

  * Render GC waiting periods in light orange (#70)
  * Fix inappropriate calling convention on Windows x86 (#71)
  * Enable GitHub Releases (#75)

  ## 2017-07-17 - v0.2.8

  * Add macOS support (#56)
  * Update ghc-events to 0.6.0 (#61)
  * CI builds for Linux/Windows/macOS (#64, #65)
  * Set upper version bounds for dependencies
changelog-type: markdown
description: |
  # ThreadScope

  [![Hackage](https://img.shields.io/hackage/v/threadscope.svg)](https://hackage.haskell.org/package/threadscope)
  [![Hackage-Deps](https://img.shields.io/hackage-deps/v/threadscope.svg)](http://packdeps.haskellers.com/feed?needle=threadscope)
  ![CI](https://github.com/haskell/ThreadScope/workflows/CI/badge.svg?branch=master)

  ## Using pre-built binaries

  Currently [pre-built binaries](https://github.com/haskell/ThreadScope/releases) for the following platforms are provided:

  * Ubuntu 18.04 (64-bit)
  * macOS 10.15
  * Windows Server 2019 (x64)

  GTK+2 needs to be installed for these binaries to work.

  On Windows, the [MSYS2](http://www.msys2.org) is the recommended way to install GTK+2. In MSYS2 MINGW64 shell:

  ```sh
  pacman -S $MINGW_PACKAGE_PREFIX-gtk2
  ```

  then you can run the threadscope binary from the shell.

  ## Building from source

  Use `git clone` or `cabal get threadscope` to get the source and move into the threadscope directory.

  ### Linux

  GTK+2 is required to be installed. On Ubuntu-like systems:

  ```sh
  sudo apt install libgtk2.0-dev
  ```

  Then you can build threadscope using cabal:

  ```sh
  cabal v2-build   # to only build the project, or
  cabal v2-install # to build and install the binary
  ```

  Or using stack:

  ```sh
  stack build   # to only build the project, or
  stack install # to build and install the binary
  ```

  ### macOS

  GTK+ is required:

  ```sh
  brew install gtk+
  ```

  Then you can build threadscope using cabal:

  ```sh
  cabal --project-file=cabal.project.osx v2-build   # to only build the project, or
  cabal --project-file=cabal.project.osx v2-install # to build and install the binary
  ```

  Or using stack:

  ```sh
  stack --stack-yaml=stack.osx.yaml build   # to only build the project, or
  stack --stack-yaml=stack.osx.yaml install # to install the binary
  ```

  ### Windows

  [Chocolatey](https://chocolatey.org/) can be used to install GHC and [MSYS2](https://www.msys2.org/) is the recommended way to install GTK+.

  ```sh
  choco install ghc
  refreshenv
  set PATH=C:\\msys64\\mingw64\\bin;C:\\msys64\\usr\\bin;%PATH%
  pacman -Sy mingw-w64-x86_64-gtk2
  ```

  then you can build threadscope using cabal:

  ```sh
  cabal v2-build
  ```

  Or you can use stack instead.

  CAVEAT: gtk2 needs to be installed twice: one for stack's MSYS2 environment and another for local MSYS2 environment.

  In command prompt:

  ```sh
  stack setup
  stack exec -- pacman --needed -Sy bash pacman pacman-mirrors msys2-runtime msys2-runtime-devel
  stack exec -- pacman -Syu
  stack exec -- pacman -Syuu
  stack exec -- pacman -S base-devel mingw-w64-x86_64-pkg-config mingw-w64-x86_64-toolchain mingw-w64-x86_64-gtk2
  stack install
  ```

  Then in MSYS2 MINGW64 shell:

  ```sh
  pacman -S $MINGW_PACKAGE_PREFIX-gtk2
  echo 'export PATH=$APPDATA/local/bin:$PATH' >> .profile
  source .profile
  threadscope
  ```

  Building using stack is not tested in CI. If you find any issues with building with stack, please update the instructions and send a PR.
description-type: markdown
hash: dd3c76592312b3d38a5e638e0969688210b57369775f6c9ed3290bd8193b36ef
homepage: http://www.haskell.org/haskellwiki/ThreadScope
latest: 0.2.14.1
license-name: BSD-3-Clause
maintainer: Simon Marlow <marlowsd@gmail.com>
synopsis: A graphical tool for profiling parallel Haskell programs.
test-bench-deps: {}
