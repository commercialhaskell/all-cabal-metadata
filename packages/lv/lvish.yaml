all-versions:
- 1.0.0.4
- 1.0.0.6
- 1.1.1.1
- 1.1.1.2
- 1.1.1.3
- 1.1.2
- 1.1.4
author: Aaron Turon, Lindsey Kuper, Ryan Newton
basic-deps:
  async: '>=0'
  atomic-primops: '>=0.6'
  base: '>=4.6 && <4.9'
  bits-atomic: '>=0'
  containers: '>=0.5'
  deepseq: '>=1.3'
  ghc-prim: '>=0'
  lattices: '>=1.2'
  missing-foreign: '>=0'
  random: '>=0'
  transformers: '>=0'
  vector: '>=0.10'
changelog: ''
changelog-type: ''
description: |2-

  A programming model based on monotonically-growing concurrent data structures.

  As a starting point, look at the main module, "Control.LVish", as well as one of these papers:

  * FHPC 2013: /LVars: lattice-based data structures for deterministic parallelism/ (<http://dl.acm.org/citation.cfm?id=2502326>).

  * POPL 2014: /Freeze after writing: quasi-deterministic parallel programming with LVars/ (<http://www.cs.indiana.edu/~lkuper/papers/2013-lvish-draft.pdf>).

  * PLDI 2014: /Taming the Parallel Effect Zoo: Extensible Deterministic Parallelism with LVish/ (<http://www.cs.indiana.edu/~rrnewton/papers/effectzoo-draft.pdf>).

  If the haddocks are not building, here is a mirror:
  <http://www.cs.indiana.edu/~rrnewton/haddock/lvish/>

  Change Log:

  * 1.0.0.6 - tighten up dependencies; remove unused flags; very minor doc fixes.

  * 1.1.2  - many bugfixes, plus a new logging infrastructure, and verification of finite lattices

  * 1.1.4 - GHC 7.8.3 compatibility.
description-type: haddock
hash: bb376e7ac0598a623c8222824a2ace2649a395be610f81912eb7193450aa3e7e
homepage: ''
latest: 1.1.4
license-name: BSD-3-Clause
maintainer: lindsey@composition.al
synopsis: Parallel scheduler, LVar data structures, and infrastructure to build more.
test-bench-deps:
  HUnit: '>=0'
  QuickCheck: '>=0'
  async: '>=0'
  atomic-primops: '>=0.6'
  base: '>=4.6 && <=4.8'
  bits-atomic: '>=0'
  containers: '>=0.5'
  deepseq: '>=1.3'
  ghc-prim: '>=0'
  lattices: '>=1.2'
  lvish: '>=0'
  missing-foreign: '>=0'
  random: '>=0'
  test-framework: '>=0'
  test-framework-hunit: '>=0'
  test-framework-quickcheck2: '>=0'
  test-framework-th: '>=0'
  text: '>=0'
  time: '>=0'
  transformers: '>=0'
  vector: '>=0.10'
