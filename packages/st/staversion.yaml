homepage: https://github.com/debug-ito/staversion
changelog-type: markdown
hash: 98fce59af46a044347606c89933dbdae50c3a54d1f39501499e3d4d67b2a8954
test-bench-deps:
  http-client: -any
  bytestring: -any
  heredoc: '>=0.2.0.0 && <0.3'
  Cabal: -any
  base: -any
  unordered-containers: -any
  hspec: '>=2.1.7'
  text: -any
  filepath: -any
  semigroups: -any
  staversion: -any
  http-client-tls: -any
  QuickCheck: '>=2.8.1 && <2.15'
maintainer: Toshio Ito <debug.ito@gmail.com>
synopsis: What version is the package X in stackage lts-Y.ZZ?
changelog: |
  # Revision history for staversion

  ## 0.2.4.1  -- 2021-05-16

  * Confirm test with `base-4.15.0.0` and `Cabal-3.4.0.0`.

  ## 0.2.4.0  -- 2020-10-26

  * Now staversion supports fetching and parsing build plan YAML files of the "Pantry" format (Fix #6).
    * Note that it still parses YAML files stored in the local storage in the old "V1" format.

  ### Internal changes

  * `BuildPlanMap` type is moved to a dedicated module.
  * Functions about v1 snapshot YAML files are moved to `V1` module.
  * Test files of v1 snapshot YAML files are moved to `build_plan_v1` directory.
  * Add `BuildPlan.Core` and `BuildPlan.Pantry` modules.
  * Add `Eq` and `Show` instances to `BuildPlanMap` type.
  * Add `textSatisfying` to `Megaparsec` module.
  * Add `resultPackages` function to `Result` module.
  * Confirm test with `megaparsec-9.0.0` and `optparse-applicative-0.16.0.0`.


  ## 0.2.3.7  -- 2020-06-21

  * Confirm test with `base-4.14.0.0`.

  ## 0.2.3.6  -- 2020-05-30

  * Confirm test with `http-client-0.7.0` and `aeson-1.5.0.0`.

  ## 0.2.3.5  -- 2020-04-26

  * Confirm test with `Cabal-3.2`.

  ## 0.2.3.4  -- 2020-03-29

  * Confirm test with `QuickCheck-2.14`.

  ## 0.2.3.3  -- 2020-01-02

  * Confirm test with `megaparsec-8.0.0` and `base-4.13`.

  ## 0.2.3.2  -- 2019-10-05

  * Support the following major versions of dependencies.

      * Cabal-3.0
      * optparse-applicative-0.15
      * semigroups-0.19

  ## 0.2.3.1  -- 2019-04-20

  * Support the following major versions of dependencies.

      * base-4.12
      * yaml-0.9
      * yaml-0.10
      * yaml-0.11
      * containers-0.6
      * http-client-0.6
      * megaparsec-7.0
      * Cabal-2.4
      * QuickCheck-2.12
      * QuickCheck-2.13


  ## 0.2.3.0  -- 2018-07-10

  * Now it reads "stack.yaml" file as a query (#4).
  * Now if no query argument is specified, "stack.yaml" is implied by default.
  * Now it warns if it gets no result. This is necessary now that it's
    not an error to specify no query argument.


  ## 0.2.2.0  -- 2018-07-01

  * Add `--stack` and `--stack-default` (`-S`) options (#4).
  * Now `--stack-default` option is implied if there is no package source specified (#4).
  * Support `aeson-1.4` and `megaparsec-6.5.0`.
  * [Bug fix] `-H` option: It now proceed if hackage returns 404
    error. That is probably because the user specified a package not on
    hackage, so it's not fatal.

  ## 0.2.1.4  -- 2018-03-26

  * Support `base-4.11.0.0`.


  ## 0.2.1.3  -- 2018-03-09

  * Support `aeson-1.3.0.0`, `base-4.10.0.0`, `Cabal-2.2.0.0`,
    `http-types-0.12.1`, `megaparsec-6.4.1`, `QuickCheck-2.11.3`,
    `transformers-0.6.0.6`


  ## 0.2.1.2  -- 2017-07-29

  * Fix build and test with `megaparsec-4`.


  ## 0.2.1.1  -- 2017-07-29

  * Support `megaparsec-6.0`, with compatibility wrapper "Staversion.Internal.Megaparsec".
  * Support `Cabal-2.0`, with compatibility wrapper "Staversion.Internal.Version".


  ## 0.2.1.0  -- 2017-06-18

  * Add `--format-version` option.
  * `--format-version cabal-caret` option uses the caret operator (`^>=`) if possible. (#2)


  ## 0.2.0.0  -- 2017-05-14

  * [breaking change] `pvp` aggregator now does "trailing-zero
    normalization". For example, it now assumes versions "2.2" and
    "2.2.0.0" are practically the same (#2).
  * Add `pvp-major` aggregator, which is just an alias for `pvp`
    aggregator.
  * Add `pvp-minor` aggregator, which is similar to `pvp-major` but it
    uses minor versions for upper bounds (#2).


  ## 0.1.4.0  -- 2017-04-08

  * Add `--aggregate` option, which aggregates versions in different LTS resolvers.
    There are `or` and `pvp` aggregators.
  * Bug fix: when it fails to load a given .cabal file, now it continues processing the next target.


  ## 0.1.3.2  -- 2017-01-05

  * Fix dependency lower bound for `base`.
    It was `>=4.6`, but now it's `>=4.8` due to dependency on `megaparsec`.

  ## 0.1.3.1  -- 2017-01-03

  * Now staversion can parse the "curly brace" format of .cabal files (to some extent.)
  * Confirmed test with `aeson-1.1.0.0`.

  ## 0.1.3.0  -- 2016-12-29

  * Now staversion shows the exact resolver for a partial resolver (e.g. "lts-4" -> "lts-4.2")
  * Now staversion reads .cabal files, and uses their `build-depends` fields as query.
  * Fix minor error in ordering the result.

  ## 0.1.2.0  -- 2016-11-10

  * New option `--hackage`, which searches hackage for the latest version number.

  ## 0.1.1.0  -- 2016-11-03

  * Now staversion fetches build plan YAML files over network, if necessary.
  * Now staversion disambiguates partial resolvers (e.g. "lts-2") into exact resolvers (e.g. "lts-2.22").
  * New option `--no-network`, which forbids staversion to access network.

  ## 0.1.0.0  -- 2016-10-16

  * First version. Released on an unsuspecting world.
basic-deps:
  http-client: '>=0.4.18 && <0.8'
  bytestring: '>=0.10.0 && <0.11'
  ansi-wl-pprint: '>=0.6.7.3 && <0.7'
  Cabal: '>=1.22.6.0 && <3.5'
  base: '>=4.8 && <4.16'
  unordered-containers: '>=0.2.3 && <0.3'
  text: '>=0.11.3 && <1.3'
  megaparsec: '>=4.2.0 && <9.1'
  filepath: '>=1.3.0 && <1.5'
  process: '>=1.2.3.0 && <1.7'
  semigroups: '>=0.18.0.1 && <0.20'
  containers: '>=0.5.5 && <0.7'
  staversion: -any
  http-client-tls: '>=0.2.2 && <0.4'
  hashable: '>=1.2.6.1 && <1.4'
  transformers: '>=0.3.0 && <0.6'
  optparse-applicative: '>=0.11.0 && <0.17'
  http-types: '>=0.8.6 && <0.13'
  pretty: '>=1.1.2.0 && <1.2'
  aeson: '>=0.8.0 && <1.6'
  yaml: '>=0.8.3 && <0.12'
  transformers-compat: '>=0.4.0 && <0.7'
  directory: '>=1.2.0 && <1.4'
all-versions:
- 0.1.0.0
- 0.1.1.0
- 0.1.2.0
- 0.1.3.0
- 0.1.3.1
- 0.1.3.2
- 0.1.4.0
- 0.2.0.0
- 0.2.1.0
- 0.2.1.1
- 0.2.1.2
- 0.2.1.3
- 0.2.1.4
- 0.2.2.0
- 0.2.3.0
- 0.2.3.1
- 0.2.3.2
- 0.2.3.3
- 0.2.3.4
- 0.2.3.5
- 0.2.3.6
- 0.2.3.7
- 0.2.4.0
- 0.2.4.1
author: Toshio Ito <debug.ito@gmail.com>
latest: 0.2.4.1
description-type: markdown
description: "# staversion\n\n![travis status](https://api.travis-ci.org/debug-ito/staversion.png)\n\nstaversion
  is a command-line tool to look for version numbers of Haskell packages.\n\nSee `--help`
  message for detailed usage.\n\n## Package version in Stackage\n\nstaversion mainly
  focuses on package versions in stackage, i.e. it answers to questions like \"What
  version is the package X in stackage lts-Y.ZZ?\" It aims to make it easier to write
  `build-depends` section in YOUR_PACKAGE.cabal.\n\n    $ staversion --resolver lts-4.2
  conduit\n    ------ lts-4.2\n    conduit ==1.2.6.1\n    \n    $ staversion --resolver
  lts-4.2 --resolver lts-7.0 conduit\n    ------ lts-4.2\n    conduit ==1.2.6.1\n
  \   \n    ------ lts-7.0\n    conduit ==1.2.7\n    \n    $ staversion --resolver
  lts-4.2 --resolver lts-6 conduit base\n    ------ lts-4.2\n    conduit ==1.2.6.1,\n
  \   base ==4.8.2.0\n    \n    ------ lts-6 (lts-6.31)\n    conduit ==1.2.9.1,\n
  \   base ==4.8.2.0\n\nstaversion first reads build plan YAML files that are stored
  locally in your computer, then it tries to fetch them over network.\n\n## Package
  version of your current stack project\n\nIf you omit `--resolver` (`-r`) option
  (or explicitly specify `--stack-default` (`-S`) option), staversion reads `stack.yaml`
  of your current project, and searches for package versions in the resolver specified
  in the `stack.yaml`.\n\n    $ staversion conduit\n    ------ default stack resolver
  (lts-10.8)\n    conduit ==1.2.13.1\n\n\n## Package version in Hackage\n\nYou can
  also look up the latest version numbers hosted on hackage with `--hackage` (`-H`)
  option.\n\n    $ staversion --hackage conduit base\n    ------ latest in hackage\n
  \   conduit ==1.2.8,\n    base ==4.9.0.0\n\n## Package version for build-depends\n\nYou
  can also specify .cabal files in the query. In that case, staversion reads `build-depends`
  fields in all sections of those .cabal files, and shows versions of the dependency
  packages.\n\n    $ staversion --hackage staversion.cabal \n    ------ latest in
  hackage\n    -- staversion.cabal - library\n    base ==4.9.0.0,\n    unordered-containers
  ==0.2.7.2,\n    aeson ==1.0.2.1,\n    text ==1.2.2.1,\n    bytestring ==0.10.8.1,\n
  \   yaml ==0.8.21.1,\n    filepath ==1.4.1.1,\n    directory ==1.3.0.0,\n    optparse-applicative
  ==0.13.0.0,\n    containers ==0.5.9.1,\n    http-client ==0.5.5,\n    http-client-tls
  ==0.3.3,\n    http-types ==0.9.1,\n    transformers ==0.5.2.0,\n    transformers-compat
  ==0.5.1.4,\n    megaparsec ==5.1.2\n    \n    (snip)\n\n## Package version for stack
  projects\n\nYou can also specify stack.yaml file in the query. In that case, staversion
  reads its `packages` field and treats all .cabal files under those package directories
  as the query.\n\n    $ staversion --hackage ./staversion/stack.yaml \n    ------
  latest in hackage\n    -- ./staversion/./staversion.cabal - library\n    base ==4.11.1.0,\n
  \   unordered-containers ==0.2.9.0,\n    aeson ==1.4.0.0,\n    text ==1.2.3.0,\n
  \   \n    (snip)\n\n\"stack.yaml\" in the query has a special meaning. It means
  the default stack.yaml of your current project. The \"stack.yaml\" does not have
  to be in the working directory. This query is implied by default if you pass no
  query arguments.\n\n    $ staversion --hackage stack.yaml\n    ------ latest in
  hackage\n    -- /home/toshio/programs/git/staversion/./staversion.cabal - library\n
  \   base ==4.11.1.0,\n    unordered-containers ==0.2.9.0,\n    aeson ==1.4.0.0,\n
  \   text ==1.2.3.0,\n    \n    (snip)\n\n\n## Package version ranges over different
  resolvers\n\nWith `--aggregate` (`-a`) option, you can aggregate version numbers
  in different resolvers into a version range using the given aggregation rule.\n\nFor
  example, `or` rule just concatenates versions with `(||)` condition.\n\n    $ staversion
  --aggregate or -r lts-5 -r lts-6 -r lts-7 -H aeson\n    ------ lts-5 (lts-5.18),
  lts-6 (lts-6.31), lts-7 (lts-7.20), latest in hackage\n    aeson ==0.9.0.1 || ==0.11.3.0
  || ==1.1.1.0\n\n`pvp` rule aggregates versions into a range that should be compatible
  with the obtained versions in terms of PVP (Package Versioning Policy.)\n\n    $
  staversion --aggregate pvp -r lts-5 -r lts-6 -r lts-7 -H aeson\n    ------ lts-5
  (lts-5.18), lts-6 (lts-6.31), lts-7 (lts-7.22), latest in hackage\n    aeson >=0.9.0.1
  && <0.10 || >=0.11.3 && <0.12 || ==1.2.*\n\nYou can use `--aggregate` option with
  querying .cabal files.\n\n    $ staversion --aggregate pvp -r lts-6 -r lts-7 -r
  lts-8 staversion.cabal \n    ------ lts-6 (lts-6.31), lts-7 (lts-7.22), lts-8 (lts-8.13)\n
  \   -- staversion.cabal - library\n    base >=4.8.2 && <4.10,\n    unordered-containers
  >=0.2.8 && <0.3,\n    aeson >=0.11.3 && <0.12 || >=1.0.2.1 && <1.1,\n    text >=1.2.2.1
  && <1.3,\n    bytestring >=0.10.6 && <0.11,\n    yaml >=0.8.22 && <0.9,\n    filepath
  ==1.4.*,\n    directory >=1.2.2 && <1.4,\n    optparse-applicative >=0.12.1 && <0.13
  || >=0.13.2 && <0.14,\n    containers >=0.5.6.2 && <0.6,\n    http-client >=0.4.31.2
  && <0.5 || >=0.5.6.1 && <0.6,\n    \n    (snip)\n\n\n## TODO\n\n- Cache build plans
  in some local storage (SQLite?)\n\n## Author\n\nToshio Ito <debug.ito@gmail.com>\n"
license-name: BSD-3-Clause
