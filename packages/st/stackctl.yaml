all-versions:
- 1.1.0.0
- 1.1.0.1
- 1.1.0.2
- 1.1.0.3
- 1.1.0.4
- 1.1.0.5
- 1.1.1.0
- 1.1.1.1
- 1.1.2.0
- 1.1.2.1
- 1.1.2.2
- 1.1.3.0
- 1.1.3.1
- 1.1.4.0
- 1.2.0.0
- 1.3.0.0
- 1.3.0.1
- 1.3.0.2
- 1.4.0.0
- 1.4.0.1
- 1.4.2.0
- 1.4.2.1
- 1.4.2.2
- 1.4.3.0
- 1.4.4.0
- 1.5.0.0
- 1.5.0.1
- 1.6.0.0
- 1.6.1.0
- 1.6.1.1
- 1.6.1.2
- 1.7.0.0
- 1.7.1.0
author: Freckle Engineering
basic-deps:
  Blammo: '>=1.1.2.3'
  Glob: '>=0.10.2'
  QuickCheck: '>=2.14.2'
  aeson: '>=2.0.3.0'
  aeson-casing: '>=0.2.0.0'
  aeson-pretty: '>=0.8.9'
  amazonka: '>=2.0'
  amazonka-cloudformation: '>=2.0'
  amazonka-core: '>=2.0'
  amazonka-ec2: '>=2.0'
  amazonka-lambda: '>=2.0'
  amazonka-mtl: '>=0.1.1.0'
  amazonka-sso: '>=2.0'
  amazonka-sts: '>=2.0'
  base: '>=4 && <5'
  bytestring: '>=0.11.3.1'
  cfn-flip: '>=0.1.0.3'
  conduit: '>=1.3.4.3'
  containers: '>=0.6.5.1'
  envparse: '>=0.5.0'
  errors: '>=2.3.0'
  exceptions: '>=0.10.4'
  extra: '>=1.7.12'
  filepath: '>=1.4.2.2'
  lens: '>=5.1.1'
  lens-aeson: '>=1.2.2'
  monad-logger: '>=0.3.37'
  mtl: '>=2.2.2'
  optparse-applicative: '>=0.17.0.0'
  resourcet: '>=1.2.6'
  rio: '>=0.1.22.0'
  semigroups: '>=0.20'
  stackctl: '>=0'
  text: '>=1.2.5.0'
  text-metrics: '>=0.3.2'
  time: '>=1.11.1.1'
  transformers: '>=0.5.6.2'
  typed-process: '>=0.2.10.1'
  unliftio: '>=0.2.25.0'
  unordered-containers: '>=0.2.19.1'
  uuid: '>=1.3.15'
  yaml: '>=0.11.8.0'
changelog: |
  ## [_Unreleased_](https://github.com/freckle/stackctl/compare/v1.7.1.0...main)

  ## [v1.7.1.0](https://github.com/freckle/stackctl/compare/v1.7.0.0...v1.7.1.0)

  - Add `withAssumedRole`, deprecate `assumeRole`

  ## [v1.7.0.0](https://github.com/freckle/stackctl/compare/v1.6.1.2...v1.7.0.0)

  - Retain numeric parameter types, and add boolean parameter handling, in our own
    yaml generation

    This required changing the `Generate` to use `ParametersYaml` instead of
    `[Parameter]`, and ultimately led us to removing it, hence the major version
    bump.

  ## [v1.6.1.2](https://github.com/freckle/stackctl/compare/v1.6.1.1...v1.6.1.2)

  - Require Blammo-1.2.2.3

  ## [v1.6.1.1](https://github.com/freckle/stackctl/compare/v1.6.1.0...v1.6.1.1)

  - Fix: finding removed stacks now respects `STACKCTL_DIRECTORY`

  ## [v1.6.1.0](https://github.com/freckle/stackctl/compare/v1.6.0.0...v1.6.1.0)

  - Add `Ord` instance on `RequiredVersion` and `RequiredVersionOp`

  ## [v1.6.0.0](https://github.com/freckle/stackctl/compare/v1.5.0.1...v1.6.0.0)

  - Re-implement `Stackctl.AWS` with `amazonka-mtl`.

  _No CLI or behavior changes._

  ## [v1.5.0.1](https://github.com/freckle/stackctl/compare/v1.5.0.0...v1.5.0.1)

  - Handle missing-or-empty specs directory more explicitly
  - Add warning for `Depends` pointing to non-existent spec
  - Fix formatting of required version in warning message

  ## [v1.5.0.0](https://github.com/freckle/stackctl/compare/v1.4.4.0...v1.5.0.0)

  Breaking changes:

  - Don't require a name argument to the `awsSimple` function

  New features:

  - Add `Exec` and `Shell` features in `actions[].run`
  - Support lists in `actions[].run` (single items still work)
  - Add more granular status indicators in `stack-ls(1)` output, print a legend of
    these indicators as a footer (disable with `--no-legend`)

  Fixes:

  - Fix for redundant change-set creation errors in logging output
  - Fix globbing bug in auto-expansion of `--filter` arguments

  ## [v1.4.4.0](https://github.com/freckle/stackctl/compare/v1.4.3.0...v1.4.4.0)

  - Add `awsSilently`

  ## [v1.4.3.0](https://github.com/freckle/stackctl/compare/v1.4.2.2...v1.4.3.0)

  - Add `awsWithAuth`
  - Add `forEachSpec_`

  ## [v1.4.2.2](https://github.com/freckle/stackctl/compare/v1.4.2.1...v1.4.2.2)

  - Use `amazonka-2.0` :tada:
  - Finalize update to `UnliftIO.Exception.Lens`
  - Re-export upstreamed `Blammo.Logging.Colors`

  ## [v1.4.2.1](https://github.com/freckle/stackctl/compare/v1.4.2.0...v1.4.2.1)

  No changes. Bumped to trigger release workflow.

  ## [v1.4.2.0](https://github.com/freckle/stackctl/compare/v1.4.0.1...v1.4.2.0)

  - Add `stackctl-ls` for listing stacks and their deployed status
  - Add `--auto-sso` option for automating `aws sso login` when required

  ## [v1.4.0.1](https://github.com/freckle/stackctl/compare/v1.4.0.0...v1.4.0.1)

  - Document and read a consistently-named `STACKCTL_FILTER` for `--filter`. For
    now, the old and incorrect `STACKCTL_FILTERS` will still work.

  ## [v1.4.0.0](https://github.com/freckle/stackctl/compare/v1.3.0.2...v1.4.0.0)

  - Add `awsAssumeRole` for running an action as an assumed role
  - Refactor `Generate` interface to better support generating stacks with
    pre-existing templates

  ## [v1.3.0.2](https://github.com/freckle/stackctl/compare/v1.3.0.1...v1.3.0.2)

  - Adjust timeout when invoking Lambdas to allow up to Lambda's own execution
    timeout (15 minutes).

  ## [v1.3.0.1](https://github.com/freckle/stackctl/compare/v1.3.0.0...v1.3.0.1)

  - Fix bug where `LOG_COLOR` was never respected
  - Also accept `"required_version: == <version>"`
  - Add `Eq`, `ToJSON` instance on `RequiredVersion`

  ## [v1.3.0.0](https://github.com/freckle/stackctl/compare/v1.2.0.1...v1.3.0.0)

  - Fix it so commands like `version` don't need a valid AWS environment

    This changes the `Subcommand` interface and so is a major version update for
    the purposes of those using Stackctl as a library.

  ## [v1.2.0.0](https://github.com/freckle/stackctl/compare/v1.1.3.1...v1.2.0.0)

  - Use more specific types in `Has{Directory,Filter,Color}Option`
  - Add environment variable configuration for `STACKCTL_{DIRECTORY,FILTERS}`

  ## [v1.1.4.0](https://github.com/freckle/stackctl/compare/v1.1.3.1...v1.1.4.0)

  - Support matching Stacks by glob in `capture`
  - Add `--tag` to `changes` and `deploy`

  ## [v1.1.3.1](https://github.com/freckle/stackctl/compare/v1.1.3.0...v1.1.3.1)

  - Fix JSON formatting bugs in generating specification

  ## [v1.1.3.0](https://github.com/freckle/stackctl/compare/v1.1.2.2...v1.1.3.0)

  - Repository-local configuration

    See https://github.com/freckle/stackctl/commit/564678203fe70b5c4c46c655dd3daeaafb6de9e0

  - Don't duplicate re-used templates in `stackctl-cat`
  - Improve `--filter`

    - Match against stack name and template, in addition to spec path.
    - Automatically prepend `**/` (unless there is already a leading wildcard) and
      append `{/*,.yaml,.json}` (unless there is already a trailing wildcard or
      extension).

    In general, this aims to make `--filter` match more things more intuitively
    for operators, but still match exactly in programmatic use-cases.

  - Various documentation improvements
  - Support more natural `{Key}: {Value}` syntax in `Parameters` and `Tags`
  - Fix bug where we may generate an `{}` element in `Parameters`

  ## [v1.1.2.2](https://github.com/freckle/stackctl/compare/v1.1.2.1...v1.1.2.2)

  - Add support for Stack descriptions

  ## [v1.1.2.1](https://github.com/freckle/stackctl/compare/v1.1.2.0...v1.1.2.1)

  - Build with LTS-20.4 / GHC 9.2

  ## [v1.1.2.0](https://github.com/freckle/stackctl/compare/v1.1.1.1...v1.1.2.0)

  - Fix incorrect ordering of log-messages by setting `LOG_CONCURRENCY=1`
  - Fix potential coloring of changes being redirected to a file
  - Make `PATH` optional (again) in `stackctl changes`
  - Add `--no-flip` to `stackctl capture`

  ## [v1.1.1.1](https://github.com/freckle/stackctl/compare/v1.1.1.0...v1.1.1.1)

  - Trigger release

  ## [v1.1.1.0](https://github.com/freckle/stackctl/compare/v1.1.0.5...v1.1.1.0)

  - Add `--parameter` to `changes` and `deploy`
  - Sort changes by causing-before-caused

  ## [v1.1.0.5](https://github.com/freckle/stackctl/compare/v1.1.0.4...v1.1.0.5)

  - Trigger release workflow

  ## [v1.1.0.4](https://github.com/freckle/stackctl/compare/v1.1.0.3...v1.1.0.4)

  - Fix bug where only the last spec in a multi-spec case had its changes present
    in the output file generated by `changes`.

  ## [v1.1.0.3](https://github.com/freckle/stackctl/compare/v1.1.0.2...v1.1.0.3)

  - Require Blammo-1.1.1.0

  ## [v1.1.0.2](https://github.com/freckle/stackctl/compare/v1.1.0.1...v1.1.0.2)

  - Log responses from `awsLambdaInvoke` when running actions
  - Clarify discovery logging
  - Add install script

  ## [v1.1.0.1](https://github.com/freckle/stackctl/compare/v1.1.0.0...v1.1.0.1)

  - Update to `cfn-flip-0.1.0.3`

  ## [v1.1.0.0](https://github.com/freckle/stackctl/compare/v1.0.2.0...v1.1.0.0)

  - Fix interleaved or out-of-order output bugs by streaming deployment events
    through the Logger instead of directly to `stdout`
  - Logging goes to `stdout` by default (`LOG_DESTINATION` can still be used)
  - The `changes` subcommand now requires a `PATH` argument

  ## [v1.0.2.0](https://github.com/freckle/stackctl/compare/v1.0.1.2...v1.0.2.0)

  - Add `Stackctl.Action`

    Support for taking actions during Stack management, currently we support
    invoking a lambda post-deployment. In the future, we can add more, such as
    running local pre-deploy validation or preparation scripts.

  - Add `awsCloudFormationDescribeStackOutputs`

  ## [v1.0.1.2](https://github.com/freckle/stackctl/compare/v1.0.1.1...v1.0.1.2)

  - Always flush log messages before our own output

  ## [v1.0.1.1](https://github.com/freckle/stackctl/compare/v1.0.1.0...v1.0.1.1)

  - Respect `LOG_DESTINATION` (the default remains `stderr`)

  ## [v1.0.1.0](https://github.com/freckle/stackctl/compare/v1.0.0.2...v1.0.1.0)

  - Support reading CloudGenesis specifications

    - Accept account paths like `id.name` or `name.id`
    - Read `Parameters` as `Parameter{Key,Value}` or `{Name,Value}`

    This allows us to work with specifications directories originally implemented
    for, and potentially still used with, the CloudGenesis tooling.

  ## [v1.0.0.2](https://github.com/freckle/stackctl/compare/v1.0.0.1...v1.0.0.2)

  - Fix tailing all events to read most recent, causing Throttling errors

  ## [v1.0.0.1](https://github.com/freckle/stackctl/compare/v1.0.0.0...v1.0.0.1)

  - Fix non-portable paths issue in OSX executable build

  ## [v1.0.0.0](https://github.com/freckle/stackctl/tree/v1.0.0.0)

  First release
changelog-type: markdown
description: |
  # Stackctl

  [![Hackage](https://img.shields.io/hackage/v/stackctl.svg?style=flat)](https://hackage.haskell.org/package/stackctl)
  [![CI](https://github.com/freckle/stackctl/actions/workflows/ci.yml/badge.svg)](https://github.com/freckle/stackctl/actions/workflows/ci.yml)

  Manage CloudFormation Stacks through specifications.

  ## About

  `stackctl` is a command-line tool for working with [Stack Specifications][spec]. A Stack
  Specification is a file-system format for describing deployed (or
  to-be-deployed) CloudFormation Stacks including the Template, Parameters, and
  Tags. `stackctl` can be used to pretty-print, diff, and deploy these
  specifications.

  [spec]: https://github.com/freckle/stackctl/blob/main/doc/stackctl.1.md#stack-specifications

  This project also contains a Haskell library for doing the same.

  ## Install

  ### Pre-requisites

  - Have `~/.local/bin` on your `$PATH`
  - Have `~/.local/share/man` on your `$MANPATH` (for documentation)
  - If on OSX, `brew install coreutils` (i.e. have `ginstall` available)
  - If on OSX, `brew install jq`

  ### Scripted

  ```console
  curl -L https://raw.githubusercontent.com/freckle/stackctl/main/install | bash
  ```

  **NOTE**: some in the community have expressed [concerns][curlsh-bad] about the
  security of so-called "curl-sh" installations. We think the argument has been
  [pretty well debunked][curlsh-ok], but feel free to use the manual steps
  instead.

  [curlsh-bad]: https://0x46.net/thoughts/2019/04/27/piping-curl-to-shell/
  [curlsh-ok]: https://www.arp242.net/curl-to-sh.html

  ### Manual

  Go to the [latest release][latest] and download the `.tar.gz` asset appropriate
  for your OS. Navigate to the directory containing the downloaded file and run:

  [latest]: https://github.com/freckle/stackctl/releases/latest

  ```console
  tar xvf stackctl-*.tar.gz
  cd stackctl
  ```

  User installation:

  ```console
  make install PREFIX="$HOME/.local"
  ```

  Global installation

  ```console
  sudo make install
  ```

  ## Usage

  Once installed, see:

  - `stackctl --help`,
  - `stackctl <command> --help`,
  - `man 1 stackctl`, or
  - `man 1 stackctl <command>`

  The man pages are also available [online](https://freckle.github.io/stackctl/),
  but contain documentation as of `main`, and not your installed version.

  ## Comparison to AWS CloudFormation Git Sync

  [AWS CloudFormation Git Sync][aws-git-sync] was recently released by AWS. It
  allows you to link a repository on GitHub to a CloudFormation Stack. The
  repository contains a "deployment file" that defines a `template-file-path`,
  `parameters`, and `tags` -- effectively, a Stack Specification.

  When AWS notices updates to the deployment or template file land on a defined
  branch, it updates the configured Stack accordingly, emitting events to SNS as
  it does.

  This is great for simple use-cases, and we fully expect they'll improve and
  extend it such that it obviates Stackctl one day. In the meantime, there are
  currently the following limitations when compared to Stackctl:

  1. A repository can only target a single account and region
  1. There is no changeset flow amenable to previewing changes via PRs. You update
     the file(s) on `main` and it syncs, that's it. If you're using a PR, you have
     only linting and human review as possible pre-deployment steps.
  1. There is no way to specify description, capabilities, or dependencies
  1. As of 12/23, there seemed to be some bugs, and the setup installs a managed
     event bridge that "phones home", sending events about your updates to some
     other AWS account ([source][first-look-blog])

  [aws-git-sync]: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/git-sync.html
  [first-look-blog]: https://medium.com/@mattgillard/first-look-git-sync-for-cloudformation-stacks-9e2f39c311ac

  ## Relationship to CloudGenesis

  [CloudGenesis][] is a project that also takes a directory of Stack
  Specifications and deploys them when changed. Its on-disk format inspired ours
  and, in fact, directories built for CloudGenesis can be managed by `stackctl`
  (not necessarily the other way around).

  [cloudgenesis]: https://github.com/LifeWay/CloudGenesis

  The key differences are:

  - CloudGenesis supplies AWS CodeBuild tooling for handling changes to your
    GitOps repository; Stackctl expects you to implement a GitHub Action that
    installs and executes `stackctl` commands as appropriate

    This makes Stackctl better if you need or want to also run the same tooling in
    a local context, but it makes CloudGenesis better if you need or want this
    activity to remain within the boundaries of your AWS VPC.

  - CloudGenesis reacts to file-change events in S3, which only happens when you
    synchronize from `main`; Stackctl can run on any branch and easily be scoped
    to files changed in the PR or push.

    This enables Stackctl features like commenting with ChangeSet details on PRs,
    which are not possible in CloudGenesis as it's currently implemented.

  - Stackctl adds the `Depends` key, for ordering multi-Stack processing

  ---

  [CHANGELOG](./CHANGELOG.md) | [LICENSE](./LICENSE)
description-type: markdown
hash: 020b41ea2a9576a094caa64b5e8ea406d97514d4fcc8dd61d146a49f7aadbd3e
homepage: https://github.com/freckle/stackctl#readme
latest: 1.7.1.0
license-name: MIT
maintainer: freckle-engineering@renaissance.com
synopsis: ''
test-bench-deps:
  Blammo: '>=1.1.2.3'
  Glob: '>=0.10.2'
  QuickCheck: '>=2.14.2'
  aeson: '>=2.0.3.0'
  amazonka: '>=2.0'
  amazonka-cloudformation: '>=2.0'
  amazonka-ec2: '>=2.0'
  amazonka-lambda: '>=2.0'
  amazonka-mtl: '>=0.1.1.0'
  base: '>=4 && <5'
  bytestring: '>=0.11.3.1'
  filepath: '>=1.4.2.2'
  hspec: '>=2.9.7'
  hspec-expectations-lifted: '>=0.10.0'
  hspec-golden: '>=0.2.1.0'
  http-types: '>=0.12.3'
  lens: '>=5.1.1'
  mtl: '>=2.2.2'
  stackctl: '>=0'
  text: '>=1.2.5.0'
  time: '>=1.11.1.1'
  unliftio: '>=0.2.25.0'
  yaml: '>=0.11.8.0'
