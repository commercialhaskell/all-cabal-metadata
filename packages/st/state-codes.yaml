all-versions:
- 0.1.0
- 0.1.1
- 0.1.2
- 0.1.3
author: Agustin Camino
basic-deps:
  aeson: '>=0'
  base: '>=4.7 && <5'
  shakespeare: '>=0'
  text: '>=0'
changelog: ''
changelog-type: ''
description: "# state-codes\n\n[![Build Status](https://travis-ci.org/acamino/state-codes.svg?branch=master)](https://travis-ci.org/acamino/state-codes)\n[![Hackage
  version](https://img.shields.io/hackage/v/state-codes.svg)](http://hackage.haskell.org/package/state-codes)\n\nThis
  package provides the ISO 3166-2:US state codes and i18n names.\nThis work is entirely
  based on the package [Data.CountryCodes](http://hackage.haskell.org/package/country-codes).\n\n##
  Local Development\n\n1. Fork the project [on GitHub](https://github.com/acamino/state-codes)
  and clone your fork locally.\n\n   ```bash\n   $ git clone git@github.com:acamino/state-codes.git\n
  \  $ cd state-codes\n   $ git remote add upstream https://github.com/acamino/state-codes.git\n
  \  ```\n\n1. Install [Stack](https://docs.haskellstack.org/en/stable/README/).\n\n1.
  Get the appropriate GHC for the project.\n\n   ```bash\n   $ stack setup\n   ```\n\n1.
  If you want to launch a REPL and have fun with this program.\n\n   ```bash\n   $
  stack repl\n   ```\n\n## Issues & Support\n\nPlease [file tickets](https://github.com/acamino/state-codes/issues)
  for\nbug or problems.\n\n## Contributing\n\nEdits and enhancements are welcome.
  Just fork the repository, make your changes\nand send me a pull request.\n\n## Licence\n\nThe
  code in this repository is licensed under the terms of the\n[MIT License](http://www.opensource.org/licenses/mit-license.html).
  \ \nPlease see the [LICENSE](LICENSE) file for details.\n"
description-type: markdown
hash: 61981a09694973bf03b87309610b744ea4c8570fed3d20f1876933f572bbdf2b
homepage: https://github.com/acamino/state-codes#README
latest: 0.1.3
license-name: MIT
maintainer: agustin.camino@gmail.com
synopsis: ISO 3166-2:US state codes and i18n names
test-bench-deps:
  QuickCheck: '>=0'
  aeson: '>=0'
  base: '>=4.7 && <5.0'
  hspec: '>=0'
  state-codes: '>=0'
  text: '>=0'
