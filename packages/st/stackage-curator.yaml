all-versions:
- 0.7.0
- 0.7.0.1
- 0.7.0.2
- 0.7.0.3
- 0.7.0.4
- 0.7.0.5
- 0.7.1
- 0.7.1.1
- 0.7.2
- 0.7.2.1
- 0.7.3
- 0.7.4
- 0.8.0
- 0.8.0.1
- 0.8.1
- 0.9.0
- 0.10.0
- 0.11.0
- 0.12.0
- 0.13.0
- 0.13.1
- 0.13.2
- 0.13.3
- 0.14.0
- 0.14.1
- 0.14.1.1
- 0.14.3
- 0.14.4
- 0.14.4.1
- 0.14.5
- 0.15.0.0
- 0.15.1.0
- 0.16.0.0
author: Michael Snoyman
basic-deps:
  Cabal: '>=2.2 && <2.3'
  aeson: '>=1'
  amazonka: '>=1.4.5'
  amazonka-core: '>=0'
  amazonka-s3: '>=0'
  async: '>=0'
  base: '>=4 && <5'
  blaze-html: '>=0'
  bytestring: '>=0'
  classy-prelude-conduit: '>=1'
  conduit: '>=0'
  conduit-extra: '>=0'
  containers: '>=0'
  cryptonite: '>=0'
  cryptonite-conduit: '>=0'
  data-default-class: '>=0'
  directory: '>=0'
  exceptions: '>=0'
  filepath: '>=0'
  hashable: '>=0'
  html-conduit: '>=0'
  http-client: '>=0.5'
  http-client-tls: '>=0'
  http-conduit: '>=0'
  lucid: '>=0'
  memory: '>=0'
  mime-types: '>=0'
  monad-unlift: '>=0.2'
  monad-unlift-ref: '>=0.2'
  mono-traversable: '>=0'
  mtl: '>=0'
  old-locale: '>=0'
  optparse-applicative: '>=0.11'
  optparse-simple: '>=0'
  process: '>=0'
  resourcet: '>=0'
  safe: '>=0'
  semigroups: '>=0'
  stackage-curator: '>=0'
  stm: '>=0'
  store: '>=0'
  streaming-commons: '>=0.1.7.1'
  syb: '>=0'
  system-fileio: '>=0'
  system-filepath: '>=0'
  tar: '>=0.3'
  temporary: '>=0'
  text: '>=0'
  time: '>=0'
  transformers: '>=0'
  unix-compat: '>=0'
  unordered-containers: '>=0'
  utf8-string: '>=0'
  vector: '>=0'
  xml-conduit: '>=0'
  xml-types: '>=0'
  yaml: '>=0'
  zlib: '>=0'
changelog: |
  ## 0.16.0.0

  * Use Cabal.Simple.BuildToolDepends.getAllToolDependencies to compute the tools field of SimpleDesc [#52](https://github.com/fpco/stackage-curator/issues/52)
  * Do not build tests/benches if there are no test suites or benchmarks
  * `non-parallel-build`
  * Cabal 2.2

  ## 0.15.2.0

  * Add a check for mistyped or otherwise unknown package names [#47](https://github.com/fpco/stackage-curator/issues/47)

  ## 0.15.1.0

  * `skipped-haddocks`
  * Support for GHC 8.2
  * Switch from cryptohash to cryptonite

  ## 0.15.0.0

  * Ignore packages with invalid flag definitions [fpco/stackage#2468](https://github.com/fpco/stackage/issues/2468)
  * Support a `no-revisions` field to ignore Hackage revisions (experimental) [fpco/stackage#2469](https://github.com/fpco/stackage/issues/2469)
  * Cabal 2.0
  * cabal-format-version

  ## 0.14.5

  * Add support for the `hide` field [yesodweb/wai#579](https://github.com/yesodweb/wai/issues/579)
  * `list-revdeps` command [#28](https://github.com/fpco/stackage-curator/issues/28)
  * Support for newer classy-prelude (fixes some char enc bugs)

  ## 0.14.4.1

  * A few missing fixes

  ## 0.14.4

  * Support latest Stackage Nightly [#27](https://github.com/fpco/stackage-curator/issues/27)

  ## 0.14.3

  * Much improved logic for calculating if a package needs to be rebuilt
    due to rebuilding a dependency
  * Include components using a dependency is check output

  ## 0.14.2

  * Add `all-cabal-hashes-commit`
  * Add `tell-me-when-its-released`
  * Fix warnings for `parseUrl`

  ## 0.14.1.1

  * Fix for latest nightly snapshot [#21](https://github.com/fpco/stackage-curator/issues/21)

  ## 0.14.1

  * configure-args
  * Support for GHC 8's documentation directory location
  * Checked cabal-version in .cabal files
  * Switch to store

  ## 0.14.0

  * Move stackage-types into this package
  * Move stackage-build-plan into this package
  * Start building benchmarks [stackage#1372](https://github.com/fpco/stackage/issues/1372)
  * Add cabal-from-head
  * Include cabal file size and hash info

  ## 0.13.3

  Move away from outdated stackage-metadata

  We already have local package index functionality, which uses the
  correct index. See:
  https://groups.google.com/d/msg/stackage/bf1xewtp9oo/MUB2K20OJQAJ

  ## 0.13.2

  * --no-rebuild-cabal
  * Fix allow-newer by simply stripping all version bounds in .cabal files
  * Fix build failure [#13](https://github.com/fpco/stackage-curator/issues/13)

  ## 0.13.1

  * Let test suite pass when no package index available [stackage#1165](https://github.com/fpco/stackage/issues/1165)

  ## 0.13.0

  * build-tool-overrides
  * Avoid using the cabal-install executable [stackage#1107](https://github.com/fpco/stackage/issues/1107)

  ## 0.12.0

  * New create-plan flags: `--add-package`, `--expect-test-failure` and `--expect-haddock-failure`
  * Package description caching

  ## 0.11.0

  * Use newest version of libraries [#6](https://github.com/fpco/stackage-curator/issues/6)

  ## 0.10.0

  * Added `pcSkipBuild`

  ## 0.8.2

  * `upload-docs` command

  ## 0.8.1

  * Redefine core packages [#395](https://github.com/fpco/stackage/issues/395)
  * Add --constraint flag for create-plan

  ## 0.8.0.1

  * GHC 7.10 support

  ## 0.8.0

  * Restructured commands to work on server/Docker setup

  ## 0.7.4

  * `-j`/`--jobs` option for build flags
  * Only pass in required .haddock files (more memory efficiency)

  ## 0.7.3

  * Number of jobs == number of capabilities
  * `--bundle-dest`
  * `--skip-git-push`
  * Removed some of the old upload stuff
  * Better exception output (limited to 500 characters)

  ## 0.7.2

  * Add `diff` command

  ## 0.7.1.1

  * Fix bug with existing .haddock file collection

  ## 0.7.1

  * Add the `stats` command

  ## 0.7.0.4

  * Respect --summary option

  ## 0.7.0.3

  * LTS bumps: specify a goal

  ## 0.7.0.2

  * Deal better with invariant violations around unregistered packages

  ## 0.7.0

  * Renamed to stackage-curator

  ## 0.6.1

  * Switch to V2 upload by default
  * --skip-hoogle option

  ## 0.6.0

  * Upload bundle V2 stuff

  ## 0.5.2

  * Upload LTS to Hackage with the name LTSHaskell

  ## 0.5.1

  * `loadBuildConstraints`
  * More command line options

  ## 0.5.0

  * Print "Still Alive" while checking, to avoid Travis timeouts
  * Include `stackage upload-nightly` command
  * Optional plan checking

  ## 0.4.0

  * Command line uses optparse-applicative with additional options
  * Library profiling support during build
  * Remove cfGlobalFlags (just use package-specific flags)

  ## 0.3.1

  * Added `justCheck` and `stackage check` command line.

  ## 0.3.0.1

  Pre-fetch all packages from Hackage to catch Hackage downtime early.

  ## 0.3.0.0

  * Return progress URL from uploadBundle

  ## 0.2.1.4

  Generate a `core` file in bundles.

  ## 0.2.1.1

  Run postBuild earlier to avoid problems from broken doc uploads.

  ## 0.2.1.0

  * Use TLS manager (to download from Github)

  ## 0.2.0.0

  * Minor fixes
  * `pbGlobalInstall`

  ## 0.1.0.0

  First version of Stackage which is made available as its own package. The
  codebase has been completely rewritten at this point, to be ready for generated
  both Stackage Nightly and LTS Haskell distributions.
changelog-type: markdown
description: |
  ## stackage-curator

  [![Build Status](https://travis-ci.org/fpco/stackage-curator.svg?branch=master)](https://travis-ci.org/fpco/stackage-curator)
  [![Hackage](http://img.shields.io/hackage/v/stackage-curator.png)](http://hackage.haskell.org/package/stackage-curator)
  [![Stackage LTS](http://stackage.org/package/stackage-curator/badge/lts)](http://stackage.org/lts/package/stackage-curator)
  [![Stackage Nightly](http://stackage.org/package/stackage-curator/badge/nightly)](http://stackage.org/nightly/package/stackage-curator)

  This repository contains the code for curating Stackage package sets and
  building reusable package databases. It was originally simply called the
  stackage package and was part of the stackage repository, but since this is a
  tool very few people need to use, we split it into its own package with a name
  to indicate it's limited usage (curators only).

  More information on Stackage:

  * [Stackage Homepage](https://www.stackage.org)
  * [Main stackage repo](https://github.com/fpco/stackage)

  ### Code explanation

  We start off with *constraints*. Constraints state things like "package X has a
  given version range," who the maintainer is for a package, the description of
  the system/compiler being used, etc. `BuildConstraints` describes the build as
  a whole, whereas `PackageConstraints` describes the constraints on an
  individual package.

  There are two primary ways of getting a `BuildConstraints`.
  `defaultBuildConstraints` inspects the first GHC in the PATH environment variable to
  determine GHC version, core packages, core tools, etc. It then uses the
  `Stackage.Config` module to extract information on additional packages to be
  installed. The secondary approach is in `Stackage2.UpdateBuildPlan`, which will be
  discussed later.

  `BuildConstraints` does not specify a build completely. That is given by a
  `BuildPlan`, which is similarly broken down into `BuildPlan` and `PackagePlan`.
  In order to get a `BuildPlan`, we need two pieces of information: the
  `BuildConstraints`, and a package index. The package index (usually downloaded
  from Hackage) is a collection of all of the cabal files available.

  By applying a `BuildConstraints` to a package index (via `newBuildPlan`), we
  get a proposed `BuildPlan`. There is no guarantee that this `BuildPlan` is
  valid. To validate it, we use `checkBuildPlan`. A `BuildPlan` is an instance of
  both `ToJSON` and `FromJSON`, and therefore can be serialized to a file for
  later use.

  When dealing with LTS Haskell, we want to be able to take a `BuildPlan`, and
  update to a newer `BuildPlan` that keeps all packages at the same major
  version.  `updateBuildConstraints` turns a `BuildPlan` into a new
  `BuildConstraints` with that restriction, and `updateBuildPlan` applies
  `newBuildPlan` to that result. As mentioned previously: this is *not* a
  validated result, and therefore `checkBuildPlan` must be used.

  A `BuildPlan` can be acted on. This is done to check that all packages compile
  together, run relevant test suites, test Haddock documentation is correct, and
  produce as artifacts both a self-contained GHC binary package database and a
  set of Haddock documentation. (Not yet implemented.)

  A `BuildPlan` may be converted into a bundle to be uploaded to Stackage Server.
  (Not yet implemented.)
description-type: markdown
hash: 91ae84dddd69da732d3089fe5329a7513e575b6519c5a4f65b8f6192e3b2d482
homepage: https://github.com/fpco/stackage-curator
latest: 0.16.0.0
license-name: MIT
maintainer: michael@fpcomplete.com
synopsis: Tools for curating Stackage bundles
test-bench-deps:
  Cabal: '>=0'
  QuickCheck: '>=0'
  base: '>=0'
  classy-prelude-conduit: '>=0'
  containers: '>=0'
  directory: '>=0'
  hspec: '>=0'
  http-client: '>=0'
  http-client-tls: '>=0'
  stackage-curator: '>=0'
  text: '>=0'
  yaml: '>=0'
