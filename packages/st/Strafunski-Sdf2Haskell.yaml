all-versions:
- 1.0.0.1
- 1.0.0.2
author: Ralf Laemmel, Joost Visser
basic-deps:
  Strafunski-ATermLib: <=1.6.1
  Strafunski-StrategyLib: <=5.0.1
  base: <=4.6.0.1
  directory: <=1.2.0.1
  haskell-src: <=1.0.2
  mtl: <=2.1.2
  pretty: <=1.1.1.0
  process: <=1.1.0.2
  template-haskell: '>=0'
changelog: "November 2005: Joost Visser\n  * Bumped to version 2.3.\n  * Upgraded
  to GHC 6.4.1.\n\n2004-12-21: Joost.Visser@di.uminho.pt\n\t* Version number increased
  to 2.2.\n        * Now includes support for generating Cfg grammars for HaGLR\n\t*
  Improved implosion support.\n\n2004-02-17: Joost.Visser@di.uminho.pt\n\t* Added
  functionality to generate customizable pretty printers.\n\t\n2003-11-18: Joost.Visser@di.uminho.pt\n\t*
  Modified to work with latest StrategyLib (version 4.0) and with\n\t  latest GHC
  (version 6.0.1) and latest Hugs (November 2002).\n\n2002-11-10: Ralf.Laemmel@cwi.nl\n\t*
  Debugged, cleaned up for distribution.\n\n2002-10-19: Joost.Visser@software-improvers.com\n\t*
  Started to make the package distributable.\n"
changelog-type: text
description: "------------------------------------------------------------------------------\n\n
  \             GENERATION OF HASKELL DATATYPES FROM SDF GRAMMARS\n\n                   Sdf2Haskell
  version 1.0, November 2002\n\n                   Ralf Laemmel                Joost
  Visser\n               CWI & VU, Amsterdam            CWI, Amsterdam\n\nThis package
  contains Sdf2Haskell, a generator that takes an SDF\ngrammar as input and produces
  a corresponding set of Haskell datatype\ndefinitions as output.\n\n\n--- GENERAL
  ------------------------------------------------------------------\n\nFor information
  see:\n\n  http://www.cs.vu.nl/Strafunski\n\nContents of this package:\n\n  - generator\tDirectory
  with the files that make up the generator\n  - examples\tDirectory with examples
  of using the generator\n  - scripts     Directory with sets of reusable make rules\n\n\n---
  PREREQUISITES ------------------------------------------------------------\n\nPrerequisites:\n\n
  I. Your path must contain the following programs:\n \n   - GHC (version 6.4 or higher)\n
  \  - DrIFT (version 2.1.2)\n   - sdf2table (version 1.10)\n   - sglr (version 3.4.1
  or higher)\n   - implodePT (version 1.1 is known to work)\n   \n II. The following
  Strafunski packages must be available:\n \n   - StrategyLib-5.0\n   - haterm-1.5\n
  \  \n   Preferably, these packages should be placed in the same directory\n   as
  this Sdf2Haskell package.\n   \n\nGHC and DrIFT can easily be found via the Haskell
  organization home\npage at: http://www.haskell.org/.\n\nThe programs sdf2haskell,
  sglr, and implodePT can be obtained in various\nways:\n   \n   - by installing the
  \"sdf2\" package from the Online Package Base at\n     http://www.program-transformation.org/package-base/
  (source\n     distribution only).\n   \n   - by installing StrategoXT's prerequisite
  package \"sdf2-bundle\"\n     from http://www.stratego-language.org/ (source and
  bindary\n     distributions available).\n     \n   - by installing the ASF+SDF Meta-Environment,
  which can be obtained\n     as \"asfsdf-meta\" from http://www.cwi.nl/projects/MetaEnv/\n\nThe
  required Strafunski packages can be downloaded from the\nStrafunfski home page http://www.cs.vu.nl/Strafunski/.\n\n\n---
  INSTALL ------------------------------------------------------------------\n\nThe
  Sdf2Haskell generator can be configured, built, and installed IN PLACE,\nas follows:\n\n
  \ ./configure [flags]\n  gmake\n  \nFor help on the configuration flags, type:\n\n
  \ ./configure --help\n\nIn particular, you might want to use the --with-haterm and
  --with-StrategyLib\nflags to point out where the required Strafunksi packages are.
  \ \n\n\n--- RUN ----------------------------------------------------------------------\n
  \ \nAfter configuration and builing, the Sdf2Haskell generator is available in:\n\n
  \ ./generator/Sdf2Haskell\n  \nYou may want to extend your PATH to include ./generator.\n\nYou
  can now run the generator as follows:\n\n  sdf2haskell -i <grammarfile> -m <modulename>
  -o <haskellfile>\n  \nwhere the <grammarfile> is a file containing the SDF grammar
  you want to feed\nto the generator as input, <modulename> is the name of the Haskell
  module\nyou want to be generated, and <haskellfile> is the name of the file into
  which\nyou want the generated Haskell file to be written. Use the -p option if you\nwant
  to generate customizable pretty-print functions instead of datatypes\nthat represent
  abstract syntax trees.\n\n\n--- EXAMPLES -----------------------------------------------------------------\n\nTo
  see the examples in action, you can type:\n\n  gmake check\n\nDo this in the top
  level directory to run all examples, or in a\nspecific example directory to run
  a single one. The example in\nexamples/twosorts is the most simple one which only
  invokes the\ngenerator. The other examples (for Java and Cobol) also involve\ncompilation
  of code depending on the generated Haskell datatypes\nas well as parser generation
  and parser invocation.\n\n\n------------------------------------------------------------------------------\n"
description-type: text
hash: 649ef045d9d2b6c910758e0b35f9229844d57a5abdf0800ee5bdb798f571c318
homepage: ''
latest: 1.0.0.2
license-name: BSD-3-Clause
maintainer: darmanithird@gmail.com
synopsis: Converts SDF to Haskell
test-bench-deps: {}
