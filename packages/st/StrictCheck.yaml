all-versions:
- 0.1.0
- 0.1.1
- 0.2.0
- 0.3.0
author: Kenneth Foner, Hengchu Zhang, and Leo Lampropoulos
basic-deps:
  QuickCheck: '>=2.10 && <2.12'
  base: '>=4.7 && <5'
  bifunctors: '>=5.5 && <5.6'
  containers: '>=0.5 && <0.7'
  generics-sop: '>=0.3.2 && <0.4'
  template-haskell: '>=2.12 && <2.15'
changelog: ''
changelog-type: ''
description: "  # StrictCheck: Keep Your Laziness In Check\n  \n  StrictCheck is a
  property-based random testing framework for\n  observing, specifying, and testing
  the strictness behaviors of Haskell\n  functions. Strictness behavior is traditionally
  considered a non-functional\n  property; StrictCheck allows it to be tested as if
  it were one, by reifying\n  demands on data structures so they can be manipulated
  and examined within\n  Haskell.\n  \n  For details, see the library on Hackage:
  <https://hackage.haskell.org/package/StrictCheck>.\n"
description-type: markdown
hash: 05a3e28f31ed363cf5d857a8a80a93d17c877562c06246b17b498a4f60cd8595
homepage: https://github.com/kwf/StrictCheck#readme
latest: 0.3.0
license-name: MIT
maintainer: kwf@very.science
synopsis: 'StrictCheck: Keep Your Laziness In Check'
test-bench-deps:
  HUnit: '>=0'
  QuickCheck: '>=0'
  StrictCheck: '>=0'
  base: '>=0'
  deepseq: '>=0'
  generics-sop: '>=0'
