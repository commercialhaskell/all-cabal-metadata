all-versions:
- 0.0.1
author: Shlok Datye
basic-deps:
  base: '>=4.14 && <5'
  bytestring: '>=0.10 && <0.12'
  containers: '>=0.6 && <0.7'
  streamly: '>=0.10.0 && <0.11'
  streamly-core: '>=0.2.0 && <0.3'
changelog: |
  ## 0.0.1

  * Initial release.
changelog-type: markdown
description: |
  # streamly-zip

  Stream data from zip archives using the Haskell [streamly](https://hackage.haskell.org/package/streamly) library.

  ## Comparison with streamly-archive

  This library was created because libarchive (which [streamly-archive](https://hackage.haskell.org/package/streamly-archive) relies on) does not seem to have support for jumping to specific files even when the format supports it.

  ## Requirements

  Install libzip on your system.

  * Debian Linux: `sudo apt-get install libzip-dev`.
  * macOS: `brew install libzip`.

  ## Quick start

  ```haskell
  module Main where

  import qualified Data.ByteString as B
  import Data.Function
  import qualified Streamly.Data.Fold as F
  import qualified Streamly.Data.Stream.Prelude as S
  import Streamly.External.Zip

  main :: IO ()
  main = do
    -- Obtain an archive.
    z <- openZip "/path/to/archive.zip" []

    -- Output a particular file to stdout.
    S.unfold unfoldFileAtPath (z, [], "file.txt")
      & S.mapM B.putStr
      & S.fold F.drain
  ```
description-type: markdown
hash: 88a8050fccefc6b2c5c23ef714ef59940a1124ce57a68bddf961dc3dcbbdc939
homepage: https://github.com/shlok/streamly-zip
latest: 0.0.1
license-name: BSD-3-Clause
maintainer: sd-haskell@quant.is
synopsis: Stream data from zip archives using the streamly library.
test-bench-deps:
  QuickCheck: '>=2.13.2 && <2.15'
  base: '>=4.14 && <5'
  base16-bytestring: '>=1.0.1.0 && <1.1'
  bytestring: '>=0.10 && <0.12'
  containers: '>=0.6 && <0.7'
  cryptohash: '>=0.11.9 && <0.12'
  directory: '>=1.3.6.0 && <1.4'
  filepath: '>=1.4.2.1 && <1.5'
  streamly: '>=0.10.0 && <0.11'
  streamly-core: '>=0.2.0 && <0.3'
  streamly-zip: '>=0'
  tar: '>=0.5.1.1 && <0.6'
  tasty: '>=1.2.3 && <1.5'
  tasty-hunit: '>=0.10.0.2 && <0.11'
  tasty-quickcheck: '>=0.10.1.1 && <0.11'
  temporary: '>=1.3 && <1.4'
  zlib: '>=0.6.2.1 && <0.7'
