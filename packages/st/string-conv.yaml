all-versions:
- '0.1'
- 0.1.1
- 0.1.2
- 0.2.0
author: Ozgun Ataman
basic-deps:
  base: '>=4.4 && <5'
  bytestring: '>=0'
  text: '>=0'
changelog: |
  0.2.0
  =====
  * Don't set optimization flag for library
  * Add property tests and fix to make String <-> ByteString conversion safer [PR 6](https://github.com/Soostone/string-conv/pull/6).
  * Add lib-Werror flag for development

  0.1.1
  =====
  * Fixed bug where decoding text from bytestrings would always decode
    leniently, even if Strict was used.

  0.1
  ===

  * Initial release
changelog-type: markdown
description: |
  # string-conv

  A type class to standardize string conversions.  With this type class you only
  need to remember one function for converting between any two string variants.
  This package includes support for String, ByteString, and Text as well as the
  Lazy and Strict variants where necessary.

  StringConv's `toS` function is most useful when you have a fully defined
  string conversion with a fixed (non-polymorphic) input and output type.  Of
  course you can still use it when you don't have a fixed type.  In that case
  you might need to specify a type class constraint such as `StringConv s
  String`.
description-type: markdown
hash: 5aaa21ad20be79ec6fedcc6f45ef2d34b32797da8715e48d803ac467059b7333
homepage: https://github.com/Soostone/string-conv
latest: 0.2.0
license-name: BSD-3-Clause
maintainer: ozgun.ataman@soostone.com
synopsis: Standardized conversion between string types
test-bench-deps:
  base: '>=4.4 && <5'
  bytestring: '>=0'
  quickcheck-instances: '>=0.3.17'
  string-conv: '>=0'
  tasty: '>=0'
  tasty-quickcheck: '>=0'
  text: '>=0'
