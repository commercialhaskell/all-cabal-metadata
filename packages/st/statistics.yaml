homepage: https://github.com/haskell/statistics
changelog-type: markdown
hash: 6641ab5c47f9ecebb3fd682d374d48a44e5361310f0f37ca09af4c4557bd9ede
test-bench-deps:
  dense-linear-algebra: -any
  base: -any
  tasty-expected-failure: -any
  erf: -any
  math-functions: -any
  binary: -any
  ieee754: '>=0.7.3'
  tasty-quickcheck: -any
  statistics: -any
  tasty-hunit: -any
  vector-algorithms: -any
  tasty: -any
  QuickCheck: '>=2.7.5'
  aeson: -any
  primitive: -any
  vector: -any
maintainer: Alexey Khudaykov <alexey.skladnoy@gmail.com>
synopsis: A library of statistical types, data, and functions
changelog: "## Changes in 0.16.2.0\n\n * Improved precision for `complCumulative`
  for hypergeometric and binomial\n   distributions. Precision improvements of geometric
  distribution\n\n * Negative binomial distribution added.\n\n\n## Changes in 0.16.1.2\n\n
  * Fixed bug in `fromSample` for exponential distribudion (#190)\n\n\n## Changes
  in 0.16.1.0\n\n * Dependency on monad-par is dropped. `parMap` from `parallel` is
  used instead.\n\n\n## Changes in 0.16.0.2\n\n * Bug in constructor of binomial distribution
  is fixed (#181). It accepted\n   out-of range probability before.\n\n\n## Changes
  in 0.16.0.0\n\n * Random number generation switched to API introduced in random-1.2\n\n
  * Support of GHC<7.10 is dropped\n\n * Fix for chi-squared test (#167) which was
  completely wrong\n\n * Computation of CDF and quantiles of Cauchy distribution is
  now numerically\n   stable.\n \n * Fix loss of precision in computing of CDF of
  gamma distribution\n\n * Log-normal and Weibull distributions added.\n \n * `DiscreteGen`
  instance added for `DiscreteUniform`\n\n\n## Changes in 0.15.2.0\n\n * Test suite
  is finally fixed (#42, #123). It took very-very-very long\n   time but finally happened.\n\n
  * Avoid loss of precision when computing CDF for exponential distribution.\n\n *
  Avoid loss of precision when computing CDF for geometric distribution. Add\n   complement
  of CDF.\n\n * Correctly handle case of n=0 in poissonCI\n\n\n## Changes in 0.15.1.1\n\n
  * Fix build for GHC8.0 & 7.10\n\n\n## Changes in 0.15.1.0\n\n * GHCJS support\n\n
  * Concurrent resampling now uses `async` instead of hand-rolled primitives\n\n\n##
  Changes in 0.15.0.0\n\n * Modules `Statistics.Matrix.*` are split into new package\n
  \  `dense-linear-algebra` and exponent field is removed from `Matrix` data type.\n\n
  * Module `Statistics.Normalize` which contains functions for normalization of\n
  \  samples\n\n * Module `Statistics.Quantile` reworked:\n\n   - `ContParam` given
  `Default` instance\n   - `quantile` should be used instead of `continuousBy`\n   -
  `median` and `mad` are added\n   - `quantiles` and `quantilesVec` functions for
  computation of set of\n     quantiles added.\n\n * Modules `Statistics.Function.Comparison`
  and `Statistics.Math.RootFinding`\n   are removed. Corresponding functionality could
  be found in `math-functions`\n   package.\n\n * Fix vector index out of bounds in
  `bootstrapBCA` and `bootstrapRegress`\n   (see issue #149)\n\n## Changes in 0.14.0.2\n\n
  * Compatibility fixes with older GHC\n\n\n## Changes in 0.14.0.1\n\n * Restored
  compatibility with GHC 7.4 & 7.6\n\n\n## Changes in 0.14.0.0\n\nBreaking update.
  It seriously changes parts of API. It adds new data types for\ndealing with with
  estimates, confidence intervals, confidence levels and\np-value. Also API for statistical
  tests is changed.\n\n * Module `Statistis.Types` now contains new data types for
  estimates,\n   upper/lower bounds, confidence level, and p-value.\n\n\t- `CL` for
  representing confidence level\n\t- `PValue` for representing p-values\n\t- `Estimate`
  data type moved here from `Statistis.Resampling.Bootstrap` and\n      now parametrized
  by type of error.\n\t- `NormalError` — represents normal error.\n    - `ConfInt`
  — generic confidence interval\n    - `UpperLimit`,`LowerLimit` for upper/lower limits.\n\n
  * New API for statistical tests. Instead of simply return significant/not\n   significant
  it returns p-value, test statistics and distribution of test\n   statistics if it's
  available. Tests also return `Nothing` instead of throwing\n   error if sample size
  is not sufficient. Fixes #25.\n\n * `Statistics.Tests.Types.TestType` data type
  dropped\n\n * New smart constructors for distributions are added. They return `Nothing`
  if\n   parameters are outside of allowed range.\n\n * Serialization instances (`Show/Read,
  Binary, ToJSON/FromJSON`) for\n   distributions no longer allows to create data
  types with invalid\n   parameters. They will fail to parse. Cached values are not
  serialized either\n   so `Binary` instances changed normal and F-distributions.\n\n
  \  Encoding to JSON changed for Normal, F-distribution, and χ²\n   distributions.
  However data created using older statistics will be\n   successfully decoded.\n\n
  \  Fixes #59.\n\n * Statistics.Resample.Bootstrap uses new data types for central
  estimates.\n\n * Function for calculation of confidence intervals for Poisson and
  binomial\n   distribution added in `Statistics.ConfidenceInt`\n\n * Tests of position
  now allow to ask whether first sample on average larger\n   than second, second
  larger than first or whether they differ significantly.\n   Affects Wilcoxon-T,
  Mann-Whitney-U, and Student-T tests.\n\n * API for bootstrap changed. New data types
  added.\n\n * Bug fixes for #74, #81, #83, #92, #94\n\n * `complCumulative` added
  for many distributions.\n\n\n\n## Changes in 0.13.3.0\n\n * Kernel density estimation
  and FFT use generic versions now.\n\n * Code for calculation of Spearman and Pearson
  correlation added. Modules\n   `Statistics.Correlation.Spearman` and `Statistics.Correlation.Pearson`.\n\n
  * Function for calculation covariance added in `Statistics.Sample`.\n\n * `Statistics.Function.pair`
  added. It zips vector and check that lengths are\n   equal.\n\n * New functions
  added to `Statistics.Matrix`\n\n * Laplace distribution added.\n\n\n## Changes in
  0.13.2.3\n\n * Vector dependency restored to >=0.10\n\n\n## Changes in 0.13.2.2\n\n
  * Vector dependency lowered to >=0.9\n\n\n## Changes in 0.13.2.1\n\n * Vector dependency
  bumped to >=0.10\n\n\n## Changes in 0.13.2.0\n\n * Support for regression bootstrap
  added\n\n\n## Changes in 0.13.1.1\n\n * Fix for out of bound access in bootstrap
  (see `bos/criterion#52`)\n\n\n## Changes in 0.13.1.0\n\n  * All types now support
  JSON encoding and decoding.\n\n\n## Changes in 0.12.0.0\n\n  * The `Statistics.Math`
  module has been removed, after being\n    deprecated for several years.  Use the\n
  \   [math-functions](http://hackage.haskell.org/package/math-functions)\n    package
  instead.\n\n  * The `Statistics.Test.NonParametric` module has been removed, after\n
  \   being deprecated for several years.\n\n  * Added support for Kendall's tau.\n\n
  \ * Added support for OLS regression.\n\n  * Added basic 2D matrix support.\n\n
  \ * Added the Kruskal-Wallis test.\n\n## Changes in 0.11.0.3\n\n  * Fixed a subtle
  bug in calculation of the jackknifed unbiased variance.\n\n  * The test suite now
  requires QuickCheck 2.7.\n\n  * We now calculate quantiles for normal distribution
  in a more\n    numerically stable way (bug #64).\n\n## Changes in 0.10.6.0\n\n  *
  The Estimator type has become an algebraic data type.  This allows\n    the jackknife
  function to potentially use more efficient jackknife\n    implementations.\n\n  *
  jackknifeMean, jackknifeStdDev, jackknifeVariance,\n    jackknifeVarianceUnb: new
  functions.  These have O(n) cost instead\n    of the O(n^2) cost of the standard
  jackknife.\n\n  * The mean function has been renamed to welfordMean; a new\n    implementation
  of mean has better numerical accuracy in almost all\n    cases.\n\n## Changes in
  0.10.5.2\n\n  * histogram correctly chooses range when all elements in the sample
  are same\n    (bug #57)\n\n\n## Changes in 0.10.5.1\n\n  * Bug fix for S.Distributions.Normal.standard
  introduced in 0.10.5.0 (Bug #56)\n\n\n## Changes in 0.10.5.0\n\n  * Enthropy type
  class for distributions is added.\n\n  * Probability and probability density of
  distribution is given in\n    log domain too.\n\n## Changes in 0.10.4.0\n\n  * Support
  for versions of GHC older than 7.2 is discontinued.\n\n  * All datatypes now support
  'Data.Binary' and 'GHC.Generics'.\n\n## Changes in 0.10.3.0\n\n  * Bug fixes\n\n##
  Changes in 0.10.2.0\n\n  * Bugs in DCT and IDCT are fixed.\n\n  * Accessors for
  uniform distribution are added.\n\n  * ContGen instances for all continuous distributions
  are added.\n\n  * Beta distribution is added.\n\n  * Constructor for improper gamma
  distribution is added.\n\n  * Binomial distribution allows zero trials.\n\n  * Poisson
  distribution now accept zero parameter.\n\n  * Integer overflow in calculation of
  Wilcoxon-T test is fixed.\n\n  * Bug in 'ContGen' instance for normal distribution
  is fixed.\n\n## Changes in 0.10.1.0\n\n  * Kolmogorov-Smirnov nonparametric test
  added.\n\n  * Pearson chi squared test added.\n\n  * Type class for generating random
  variates for given distribution\n    is added.\n\n  * Modules 'Statistics.Math'
  and 'Statistics.Constants' are moved to\n    the `math-functions` package. They
  are still available but marked\n    as deprecated.\n\n\n## Changes in 0.10.0.1\n\n
  \ * `dct` and `idct` now have type `Vector Double -> Vector Double`\n\n\n## Changes
  in 0.10.0.0\n\n  * The type classes Mean and Variance are split in two. This is\n
  \   required for distributions which do not have finite variance or\n    mean.\n\n
  \ * The S.Sample.KernelDensity module has been renamed, and\n    completely rewritten
  to be much more robust.  The older module\n    oversmoothed multi-modal data.  (The
  older module is still\n    available under the name S.Sample.KernelDensity.Simple).\n\n
  \ * Histogram computation is added, in S.Sample.Histogram.\n\n  * Discrete Fourie
  transform is added, in S.Transform\n\n  * Root finding is added, in S.Math.RootFinding.\n\n
  \ * The complCumulative function is added to the Distribution\n    class in order
  to accurately assess probabilities P(X>x) which are\n    used in one-tailed tests.\n\n
  \ * A stdDev function is added to the Variance class for\n    distributions.\n\n
  \ * The constructor S.Distribution.normalDistr now takes standard\n    deviation
  instead of variance as its parameter.\n\n  * A bug in S.Quantile.weightedAvg is
  fixed. It produced a wrong\n    answer if a sample contained only one element.\n\n
  \ * Bugs in quantile estimations for chi-square and gamma distribution\n    are
  fixed.\n\n  * Integer overflow in mannWhitneyUCriticalValue is fixed. It\n    produced
  incorrect critical values for moderately large\n    samples. Something around 20
  for 32-bit machines and 40 for 64-bit\n    ones.\n\n  * A bug in mannWhitneyUSignificant
  is fixed. If either sample was\n    larger than 20, it produced a completely incorrect
  answer.\n\n  * One- and two-tailed tests in S.Tests.NonParametric are selected\n
  \   with sum types instead of Bool.\n\n  * Test results returned as enumeration
  instead of `Bool`.\n\n  * Performance improvements for Mann-Whitney U and Wilcoxon
  tests.\n\n  * Module `S.Tests.NonParamtric` is split into `S.Tests.MannWhitneyU`\n
  \   and `S.Tests.WilcoxonT`\n\n  * sortBy is added to S.Function.\n\n  * Mean and
  variance for gamma distribution are fixed.\n\n  * Much faster cumulative probability
  functions for Poisson and\n    hypergeometric distributions.\n\n  * Better density
  functions for gamma and Poisson distributions.\n\n  * Student-T, Fisher-Snedecor
  F-distributions and Cauchy-Lorentz\n    distribution are added.\n\n  * The function
  S.Function.create is removed. Use generateM from\n    the vector package instead.\n\n
  \ * Function to perform approximate comparison of doubles is added to\n    S.Function.Comparison\n\n
  \ * Regularized incomplete beta function and its inverse are added to\n    S.Function\n"
basic-deps:
  mwc-random: '>=0.15.0.0'
  dense-linear-algebra: '>=0.1 && <0.2'
  base: '>=4.9 && <5'
  data-default-class: '>=0.1.2'
  async: '>=2.2.2 && <2.3'
  vector-binary-instances: '>=0.2.1'
  math-functions: '>=0.3.4.1'
  binary: '>=0.5.1.0'
  vector-algorithms: '>=0.4'
  random: '>=1.2'
  parallel: '>=3.2.2.0 && <3.3'
  deepseq: '>=1.1.0.2'
  vector-th-unbox: -any
  aeson: '>=0.6.0.0'
  primitive: '>=0.3'
  vector: '>=0.10'
all-versions:
- '0.1'
- '0.2'
- 0.2.1
- 0.2.2
- '0.3'
- 0.3.1
- 0.3.2
- 0.3.3
- 0.3.4
- 0.3.5
- 0.3.6
- 0.4.0
- 0.4.1
- 0.5.0.0
- 0.5.1.0
- 0.5.1.1
- 0.5.1.2
- 0.6.0.0
- 0.6.0.1
- 0.6.0.2
- 0.7.0.0
- 0.8.0.0
- 0.8.0.1
- 0.8.0.2
- 0.8.0.3
- 0.8.0.4
- 0.8.0.5
- 0.9.0.0
- 0.10.0.0
- 0.10.0.1
- 0.10.1.0
- 0.10.2.0
- 0.10.3.0
- 0.10.3.1
- 0.10.4.0
- 0.10.4.1
- 0.10.5.0
- 0.10.5.1
- 0.10.5.2
- 0.11.0.0
- 0.11.0.1
- 0.11.0.2
- 0.11.0.3
- 0.12.0.0
- 0.13.1.0
- 0.13.1.1
- 0.13.2.0
- 0.13.2.1
- 0.13.2.2
- 0.13.2.3
- 0.13.3.0
- 0.14.0.0
- 0.14.0.1
- 0.14.0.2
- 0.15.0.0
- 0.15.1.0
- 0.15.1.1
- 0.15.2.0
- 0.16.0.1
- 0.16.0.2
- 0.16.1.0
- 0.16.1.2
- 0.16.2.0
author: Bryan O'Sullivan <bos@serpentine.com>, Alexey Khudaykov <alexey.skladnoy@gmail.com>
latest: 0.16.2.0
description-type: markdown
description: |
  # Statistics: efficient, general purpose statistics

  This package provides the Statistics module, a Haskell library for
  working with statistical data in a space- and time-efficient way.

  Where possible, we give citations and computational complexity
  estimates for the algorithms used.


  # Performance

  This library has been carefully optimised for high performance.  To
  obtain the best runtime efficiency, it is imperative to compile
  libraries and applications that use this library using a high level of
  optimisation.


  # Get involved!

  Please report bugs via the
  [github issue tracker](https://github.com/bos/statistics/issues).

  Master [git mirror](https://github.com/bos/statistics):

  * `git clone git://github.com/bos/statistics.git`

  There's also a [Mercurial mirror](https://bitbucket.org/bos/statistics):

  * `hg clone https://bitbucket.org/bos/statistics`

  (You can create and contribute changes using either Mercurial or git.)


  # Authors

  This library is written and maintained by Bryan O'Sullivan,
  <bos@serpentine.com>.
license-name: BSD-2-Clause
