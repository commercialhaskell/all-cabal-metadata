all-versions:
- 0.0.0
- 0.0.1
- 0.0.2
- 0.0.2.1
- 0.0.3
- 0.1.0.0
- 0.1.1.0
- 0.1.2.0
- 0.1.3.0
- 0.1.3.1
- 0.1.4.0
- 0.1.4.1
- 0.1.5.0
- 0.1.6.0
- 0.1.8.0
- 0.1.10.0
- 0.1.10.1
- 1.0.0
- 1.0.2
- 1.0.4
- 1.0.4.1
- 1.0.4.2
- 1.0.4.3
- 1.1.0
- 1.1.2
- 1.2.0
- 1.3.0
- 1.3.2
- 1.4.0
- 1.5.0
- 1.5.1
- 1.6.1
- 1.6.1.1
- 1.6.3
- 1.6.3.1
- 1.6.5
- 1.7.1
- 1.9.1
- 1.9.1.1
- 1.9.3
- 1.9.3.1
- 2.1.1
- 2.1.1.1
- 2.1.3
- 2.1.3.1
- 2.3.1
- 2.3.3
- 2.5.1
- 2.5.1.1
- 2.7.1
- 2.7.3
- 2.7.5
- 2.9.1
- 2.9.3
- 2.9.3.1
- 2.11.1
- 2.13.1
- 2.15.1
- 2.15.3
- 2.15.5
- 2.15.7
- 3.1.1
- 3.3.1
- 3.5.1
author: Commercial Haskell SIG
basic-deps:
  Cabal: '>=3.8.1.0 && <3.12'
  aeson: '>=2.0.3.0'
  aeson-warning-parser: '>=0.1.1'
  ansi-terminal: '>=1.0.2'
  array: '>=0.5.8.0'
  async: '>=2.2.5'
  attoparsec: '>=0.14.4'
  base: '>=4.16.0.0 && <5'
  base64-bytestring: '>=1.2.1.0'
  bytestring: '>=0.12.1.0'
  casa-client: '>=0.0.2'
  companion: '>=0.1.0'
  conduit: '>=1.3.6.1'
  conduit-extra: '>=1.3.7'
  containers: '>=0.6.8'
  crypton: '>=1.0.1'
  directory: '>=1.3.8.5'
  echo: '>=0.1.4'
  exceptions: '>=0.10.7'
  extra: '>=1.7.16'
  file-embed: '>=0.0.16.0'
  filelock: '>=0.1.1.7'
  filepath: '>=1.4.301.0'
  fsnotify: '>=0.4.1'
  generic-deriving: '>=1.14.6'
  ghc-boot: '>=9.8.4'
  githash: '>=0.1.7.0'
  hashable: '>=1.4.7.0'
  hi-file-parser: '>=0.1.7.0'
  hpack: '>=0.36.0'
  hpc: '>=0.7.0.0'
  hspec: '>=2.11.11'
  http-client: '>=0.7.18'
  http-client-tls: '>=0.3.6.2'
  http-conduit: '>=2.3.9.1'
  http-download: '>=0.2.1.0'
  http-types: '>=0.12.4'
  memory: '>=0.18.0'
  microlens: '>=0.4.13.1'
  mtl: '>=2.3.1'
  mustache: '>=2.4.2'
  neat-interpolation: '>=0.5.1.4'
  open-browser: '>=0.2.1.0'
  optparse-applicative: '>=0.18.1.0'
  optparse-generic: '>=1.5.2'
  optparse-simple: '>=0.1.1.4'
  pantry: '>=0.10.0'
  path: '>=0.9.5'
  path-io: '>=1.8.2'
  persistent: '>=2.14.0.0 && <2.15'
  persistent-sqlite: '>=2.13.3.0'
  pretty: '>=1.1.3.6'
  process: '>=1.6.13.2'
  project-template: '>=0.2.1.0'
  random: '>=1.2.1.3'
  rio: '>=0.1.22.0'
  rio-prettyprint: '>=0.1.8.0'
  split: '>=0.2.5'
  stack: '>=0'
  stm: '>=2.5.3.1'
  tar: '>=0.6.2.0'
  template-haskell: '>=2.21.0.0'
  text: '>=2.1.1'
  time: '>=1.12.2'
  transformers: '>=0.6.1.0'
  unix: '>=0'
  unix-compat: '>=0.7.3'
  unordered-containers: '>=0.2.20'
  vector: '>=0.13.2.0'
  yaml: '>=0.11.11.2'
  zlib: '>=0.7.1.0'
changelog: "# Changelog\r\n\r\n## v3.5.1 - 2025-03-29\r\n\r\n**Changes since v3.3.1:**\r\n\r\nBehavior
  changes:\r\n\r\n* Stack will also warn (message S-8432) if there is any non-ISO/IEC
  8859-1\r\n  (Latin-1) character in Stack's 'programs' path, as `hsc2hs` does not
  work if\r\n  there is such a character in the path to its default template\r\n  `template-hsc.h`.\r\n*
  Stack customizes setup using `Cabal`, so if a `setup-depends` field does not\r\n
  \ mention it as a dependency, Stack warns and adds the GHC boot package as a\r\n
  \ dependency. Previously, Stack would not do so but only warn that build errors\r\n
  \ were likely.\r\n\r\nOther enhancements:\r\n\r\n* Bump to Hpack 0.38.0.\r\n* In
  YAML configuration files, the `install-msys` key is introduced, to enable\r\n  or
  disable the download and installation of Stack-supplied MSYS2 when\r\n  necessary
  (subject to `skip-msys: false`). The default is the same as the\r\n  `install-ghc`
  setting (including if that is set at the command line).\r\n  Consequently, the default
  behaviour of Stack is unaffected.\r\n* Add the `stack config set install-msys` command
  to configure the\r\n  `install-msys` option in YAML configuration files.\r\n* Option
  `allow-newer-deps` is no longer classified as experimental in\r\n  documentation.\r\n*
  `stack sdist` and `stack upload` report the version of Cabal (the library)\r\n  being
  used to check packages.\r\n* Add the `stack config build-files` command to generate
  (when applicable) a\r\n  Cabal file from a package description in the Hpack format
  and/or a lock file\r\n  for Stack's project-level configuration, without taking
  any other build steps.\r\n\r\n## v3.3.1 - 2024-12-28\r\n\r\n**Changes since v3.1.1:**\r\n\r\nBehavior
  changes:\r\n\r\n* Stack interprets consecutive line ends in the value of the `user-message`\r\n
  \ project-specific configuration option as a single blank line. Previously all\r\n
  \ line ends were interpreted as white space.\r\n* Stack no longer supports Docker
  versions before Docker 1.9.1 and,\r\n  consequently, if a Docker container is not
  being run 'detached', its standard\r\n  input channel will always be kept open.
  (Before Docker 1.9.1 the use of an\r\n  interactive container could hang in certain
  circumstances.)\r\n* On Windows, Stack will always warn (message S-8432) if there
  is a space\r\n  character in Stack's 'programs' path, as GHC 9.4.1 and later do
  not work if\r\n  there is a space in the path to the `ghc` executable. S-8432 now
  presents as a\r\n  warning and not an error.\r\n* Stack respects the `--no-run-tests`
  and `--no-run-benchmarks` flags when\r\n  determining build actions. Previously
  Stack respected the flags when executing\r\n  the run test suites or run benchmarks
  actions for each targeted project\r\n  package.\r\n\r\nOther enhancements:\r\n\r\n*
  Consider GHC 9.10 to be a tested compiler and remove warnings.\r\n* Consider Cabal
  3.12 to be a tested library and remove warnings.\r\n* Add flags `--run-tests` and
  `--run-benchmarks` (the existing defaults) to\r\n  Stack's `build` command, which
  take precedence over the existing\r\n  `no-run-tests` and `no-run-benchmarks` configuration
  options, respectively.\r\n* In configuration files, the `notify-if-no-run-tests`
  and\r\n  `notify-if-no-run-benchmarks` keys are introduced, to allow the exisitng\r\n
  \ notification to be muted if unwanted.\r\n\r\nBug fixes:\r\n\r\n* Stack's in-app
  messages refer to https://haskellstack.org as currently\r\n  structured. (Most URLs
  in older Stack versions are redirected.)\r\n* Stack's `upgrade` command only treats
  the current running Stack executable\r\n  as '`stack`' if the executable file is
  named `stack` or, on Windows,\r\n  `stack.exe`. Previously only how it was invoked
  was considered.\r\n* `stack test --no-run-tests --dry-run` no longer reports that
  Stack would test\r\n  project packages with test suites and\r\n  `stack bench --no-run-benchmarks
  --dry-run` no longer reports that Stack\r\n  would benchmark project packages with
  benchmarks.\r\n* `StackSetupShim` compiles with `Cabal >= 3.14.0.0`.\r\n\r\n## v3.1.1
  - 2024-07-28\r\n\r\nRelease notes:\r\n\r\n* The change in major version from 2.x
  to 3.1 marks the dropping of support for\r\n  versions of GHC before 8.4, deprecated
  in Stack 2.15.1.\r\n\r\n**Changes since v2.15.7:**\r\n\r\nBehavior changes:\r\n\r\n*
  Stack uses the version of the Cabal package that comes with the specified\r\n  version
  of GHC. Stack no longer supports such Cabal versions before 2.2, which\r\n  came
  with versions of GHC before 8.4. Consequently, the `init` command will\r\n  not
  try LTS Haskell before 12.0.\r\n* The `init` command initialises `stack.yaml` with
  a `snapshot` key rather than\r\n  a `resolver` key.\r\n* After installing GHC or
  another tool, Stack deletes the archive file which\r\n  provided the tool.\r\n*
  Remove hidden flag `--skip-intermediate-deps`, effectively deprecated since\r\n
  \ Stack 1.3.0, from `ghci` and `repl` commands.\r\n* The `haddock --haddock-for-hackage`
  command only seeks to create an archive of\r\n  the `<package_version>-docs` directory
  for build targets and if flags\r\n  excluding the building of project packages are
  not set.\r\n* The predecessor of configuration option `package-index`, `package-indices`\r\n
  \ (deprecated in Stack 2.9.3) has been removed as an alternative option.\r\n* If
  a build target is a package identifier, and the package version is not in\r\n  the
  snapshot or the package index, Stack will report an error when the target\r\n  is
  parsed. Previously, if another version of the package was in the snapshot,\r\n  Stack
  would construct the build plan with that other version or, if it was\r\n  not, Stack
  would defer an error to the construction of the build plan.\r\n* The `list` command,
  with a specified snapshot and package, also reports the\r\n  version of the package
  included indirectly in the snapshot (as a boot package\r\n  of the compiler specified
  by the snapshot).\r\n* `stack build --flag *:[-]<flag_name>` now only applies the
  flag setting to\r\n  packages for which the Cabal flag is defined, as opposed to
  all packages.\r\n* On Unix-like operating systems, drop support for `/etc/stack/config`,\r\n
  \ deprecated in Stack 0.1.6.0.\r\n* Drop support for, in the Stack root, directory
  `global` and file `stack.yaml`,\r\n  both deprecated in Stack 0.1.6.0.\r\n\r\nOther
  enhancements:\r\n\r\n* Bump to Hpack 0.37.0.\r\n* In YAML configuration files, the
  `msys-environment` key is introduced to\r\n  allow, on Windows, the MSYS2 environment
  to be specified. The default\r\n  environment is still `MINGW64` on 64-bit Windows
  and `MINGW32` on 32-bit\r\n  Windows.\r\n* In YAML configuration files, the `default-init-snapshot`
  key is introduced to\r\n  allow a default snapshot to be specified for use with
  the `stack init`\r\n  command, as if it had been specified at the command line.\r\n*
  Add flags `--haddock-executables`, `--haddock-tests` and\r\n  `--haddock-benchmarks`
  to Stack's `build` command (including the `haddock`\r\n  synonym for `build --haddock`)
  to enable also building Haddock\r\n  documentation for executables, test suites
  and benchmarks. Due to a bug in\r\n  Cabal (the library), Stack will ignore the
  flags with a warning for GHC\r\n  versions before 9.4.\r\n* Add flag `--[no-]save-hackage-creds`
  to Stack's `upload` command, which takes\r\n  precedence over the existing `save-hackage-creds`
  configuration option.\r\n* In YAML configuration files, the `global-hints-location`
  key is introduced to\r\n  allow the location of the global hints YAML specification
  file to be\r\n  specified.\r\n* By default, Hpack 0.20.0 or later will decline to
  overwrite a Cabal file that\r\n  was modified manually. In YAML configuration files,
  the `hpack-force` key is\r\n  introduced to allow Hpack to overwrite such a Cabal
  file. The corresponding\r\n  `--hpack-force` flag is also added.\r\n* Add the `stack
  config set recommend-stack-upgrade` command to configure\r\n  whether or not Stack
  should notify the user if it identifes a new version of\r\n  Stack is available
  in YAML configuration files.\r\n* Add the `ls globals` command to list all global
  packages for the version of\r\n  GHC specified by the snapshot.\r\n* Add `stack
  -h` (equivalent to `stack --help`).\r\n* In YAML configuration files, the `file-watch-hook`
  key is introduced to allow\r\n  `--file-watch` post-processing to be customised
  with a executable or `sh`\r\n  shell script.\r\n* Add flag `--[no-]allow-newer`
  to Stack's `build` command, which takes\r\n  precedence over the existing `allow-newer`
  configuration option.\r\n\r\nBug fixes:\r\n\r\n* The `config set snapshot` and `config
  set resolver` commands now respect the\r\n  presence of a synoymous key.\r\n* The
  `config set` commands support existing keys only in the form `key: value`\r\n  on
  a single line. The commands now recognise that a line `key:` does not have\r\n  that
  form.\r\n* On Unix-like operating systems, the `test --coverage` command now finds\r\n
  \ package keys even for very long package names.\r\n* The Error S-6362 message now
  acknowledges when the wanted compiler has been\r\n  specified at the command line.\r\n*
  Fix a regression, introduced in Stack 2.11.1, that caused the `script` command\r\n
  \ to parse an (otherwise ignored) project-level configuration file.\r\n* Stack no
  longer makes recommendations about a project-level configuration file\r\n  when
  only a global configuration file is in use.\r\n* Fix a regression, introduced in
  Stack 2.15.7, that caused GHC 8.10.7 or\r\n  earlier to fail to build a package
  with a `Custom` build type, if GHC option\r\n  `-haddock` was specified.\r\n\r\n##
  v2.15.7 - 2024-05-12\r\n\r\nRelease notes:\r\n\r\n* This release fixes potential
  bugs.\r\n* The hash that Stack uses to distinguish one build plan from another has\r\n
  \ changed for plans that set (as opposed to unset) manually Cabal flags for\r\n
  \ immutable dependencies. This will cause Stack to rebuild dependencies for such\r\n
  \ plans.\r\n\r\n**Changes since v2.15.5:**\r\n\r\nMajor changes:\r\n\r\n* Stack
  2.15.5 and earlier cannot build with Cabal (the library) version\r\n  `3.12.0.0`.
  Stack can now build with that Cabal version.\r\n\r\nBehavior changes:\r\n\r\n* Stack's
  `StackSetupShim` executable, when called with `repl` and\r\n  `stack-initial-build-steps`,
  no longer uses Cabal's `replHook` to apply\r\n  `initialBuildSteps` but takes a
  more direct approach.\r\n\r\nBug fixes:\r\n\r\n* Fix a regression introduced in
  Stack 2.15.1 that caused a 'no operation'\r\n  `stack build` to be slower than previously.\r\n*
  The hashes that Stack uses to distinguish one build plan from another now\r\n  include
  the Cabal flags for immutable dependencies set manually. Previously,\r\n  in error,
  only such flags that were unset manually were included.\r\n\r\n## v2.15.5 - 2024-03-28\r\n\r\nRelease
  notes:\r\n\r\n* This release fixes potential bugs.\r\n\r\n**Changes since v2.15.3:**\r\n\r\nBehavior
  changes:\r\n\r\n* Following the handover of the Stackage project to the Haskell
  Foundation, the\r\n  default value of the `urls` key is\r\n  `latest-snapshot: https://stackage-haddock.haskell.org/snapshots.json`.\r\n*
  Stack no longer includes the snapshot package database when compiling the\r\n  setup
  executable for a package with `build-type: Configure`.\r\n\r\n## v2.15.3 - 2024-03-07\r\n\r\nRelease
  notes:\r\n\r\n* With one exception, this release fixes bugs.\r\n\r\n**Changes since
  v2.15.1:**\r\n\r\nBehavior changes:\r\n\r\n* `stack path --global-config`, `--programs`,
  and `--local-bin` no longer set\r\n  up Stack's environment.\r\n\r\nBug fixes:\r\n\r\n*
  Due to a bug, Stack 2.15.1 did not support versions of GHC before 8.2. Stack\r\n
  \ now supports GHC versions from 8.0.\r\n* `--haddock-for-hackage` does not ignore
  `--haddock-arguments`.\r\n* On Windows, package locations that are Git repositories
  with submodules now\r\n  work as intended.\r\n* The `ghc`, `runghc` and `runhaskell`
  commands accept `--package` values that\r\n  are a list of package names or package
  identifiers separated by spaces and, in\r\n  the case of package identifiers, in
  the same way as if they were specified as\r\n  targets to `stack build`.\r\n\r\n##
  v2.15.1 - 2024-02-09\r\n\r\nRelease notes:\r\n\r\n* After an upgrade from an earlier
  version of Stack, on first use only,\r\n  Stack 2.15.1 may warn that it had trouble
  loading the CompilerPaths cache.\r\n* The hash used as a key for Stack's pre-compiled
  package cache has changed,\r\n  following the dropping of support for Cabal versions
  older than `1.24.0.0`.\r\n\r\n**Changes since v2.13.1:**\r\n\r\nBehavior changes:\r\n\r\n*
  Stack does not leave `*.hi` or `*.o` files in the `setup-exe-src` directory of\r\n
  \ the Stack root, and deletes any corresponding to a `setup-<hash>.hs` or\r\n  `setup-shim-<hash>.hs`
  file, to avoid GHC issue\r\n  [#21250](https://gitlab.haskell.org/ghc/ghc/-/issues/21250).\r\n*
  If Stack's Nix integration is not enabled, Stack will notify the user if a\r\n  `nix`
  executable is on the PATH. This usually indicates the Nix package\r\n  manager is
  available. In YAML configuration files, the `notify-if-nix-on-path`\r\n  key is
  introduced, to allow the notification to be muted if unwanted.\r\n* Drop support
  for Intero (end of life in November 2019).\r\n* `stack path --stack-root` no longer
  sets up Stack's environment and does not\r\n  load Stack's configuration.\r\n* Stack
  no longer locks on configuration, so packages (remote and local) can\r\n  be configured
  in parallel. This increases the effective concurrency of builds\r\n  that before
  would use fewer threads. Reconsider your `--jobs` setting\r\n  accordingly. See
  [#84](https://github.com/commercialhaskell/stack/issues/84).\r\n* Stack warns that
  its support for Cabal versions before `2.2.0.0` is deprecated\r\n  and may be removed
  in the next version of Stack. Removal would mean that\r\n  projects using snapshots
  earlier than `lts-12.0` or `nightly-2018-03-18`\r\n  (GHC 8.4.1) might no longer
  build. See\r\n  [#6377](https://github.com/commercialhaskell/stack/issues/6377).\r\n*
  If Stack's `--resolver` option is not specified, Stack's `unpack` command with\r\n
  \ a package name will seek to update the package index before seeking to\r\n  download
  the most recent version of the package in the index.\r\n* If the version of Cabal
  (the library) provided with the specified GHC can copy\r\n  specific components,
  Stack will copy only the components built and will not\r\n  build all executable
  components at least once.\r\n\r\nOther enhancements:\r\n\r\n* Consider GHC 9.8 to
  be a tested compiler and remove warnings.\r\n* Stack can build packages with dependencies
  on public sub-libraries of other\r\n  packages.\r\n* Add flag `--no-init` to Stack's
  `new` command to skip the initialisation of\r\n  the newly-created project for use
  with Stack.\r\n* The HTML file paths produced at the end of `stack haddock` are
  printed on\r\n  separate lines and without a trailing dot.\r\n* Add option of the
  form `--doctest-option=<argument>` to `stack build`, where\r\n  `doctest` is a program
  recognised by versions of the Cabal library from\r\n  `1.24.0.0`.\r\n* Experimental:
  Add flag `--haddock-for-hackage` to Stack's `build` command\r\n  (including the
  `haddock` synonym for `build --haddock`) to enable building\r\n  project packages
  with flags to generate Haddock documentation, and an archive\r\n  file, suitable
  for upload to Hackage. The form of the Haddock documentation\r\n  generated for
  other packages is unaffected.\r\n* Experimental: Add flag `--documentation` (`-d`
  for short) to Stack's `upload`\r\n  command to allow uploading of documentation
  for packages to Hackage.\r\n* `stack new` no longer rejects project templates that
  specify a `package.yaml`\r\n  in a subdirectory of the project directory.\r\n* Stack
  will notify the user if Stack has not been tested with the version of\r\n  GHC that
  is being user or a version of Cabal (the library) that has been\r\n  found. In YAML
  configuration files, the `notify-if-ghc-untested` and\r\n  `notify-if-cabal-untested`
  keys are introduced, to allow the notification to\r\n  be muted if unwanted.\r\n*
  The compiler version is included in Stack's build message (e.g.\r\n  `stack> build
  (lib + exe + test) with ghc-9.6.4`).\r\n* Add flag `--candidate` to Stack's `unpack`
  command, to allow package\r\n  candidates to be unpacked locally.\r\n* Stack will
  notify the user if a specified architecture value is unknown to\r\n  Cabal (the
  library). In YAML configuration files, the `notify-if-arch-unknown`\r\n  key is
  introduced, to allow the notification to be muted if unwanted.\r\n* Add option `--filter
  <item>` to Stack's `ls dependencies text` command to\r\n  filter out an item from
  the results, if present. The item can be `$locals` for\r\n  all project packages.\r\n*
  Add option `--snapshot` as synonym for `--resolver`.\r\n* Add the `config set snapshot`
  command, corresponding to the\r\n  `config set resolver` command.\r\n\r\nBug fixes:\r\n\r\n*
  Fix the `Curator` instance of `ToJSON`, as regards `expect-haddock-failure`.\r\n*
  Better error message if a `resolver:` or `snapshot:` value is, in error, a\r\n  YAML
  number.\r\n* Stack accepts all package names that are, in fact, acceptable to Cabal.\r\n*
  Stack's `sdist` command can check packages with names that include non-ASCII\r\n
  \ characters.\r\n\r\n## v2.13.1 - 2023-09-29\r\n\r\nRelease notes:\r\n\r\n* Further
  to the release notes for Stack 2.3.1, the `-static` suffix has been\r\n  removed
  from the statically linked Linux/x86_64 binaries.\r\n* The binaries for Linux/Aarch64
  are now statically linked.\r\n* Binaries are now provided for macOS/AArch64.\r\n\r\n**Changes
  since v2.11.1:**\r\n\r\nBehavior changes:\r\n\r\n* Build artefacts are placed in
  `.stack-work/dist/<platform>/<GHC_version>`\r\n  (hashed to a shorter path on Windows),
  rather than\r\n  `.stack-work/dist/<platform>/<Cabal_version>`. This allows build
  artifacts to\r\n  be distinguished by GHC version.\r\n* By default, the `stack build`
  progress bar is capped to a length equal to the\r\n  terminal width.\r\n* When building
  GHC from source, Stack no longer uses Hadrian's deprecated\r\n  `--configure`\\\\`-c`
  flag and, instead, seeks to run GHC's Python `boot` and\r\n  sh `configure` scripts,
  and ensure that the `happy` and `alex` executables are\r\n  on the PATH.\r\n* When
  auto-detecting `--ghc-build` on Linux, the `musl` GHC build only is\r\n  considered
  a possible GHC build if `libc.musl-x86_64.so.1` is found in `\\lib`\r\n  or `\\lib64`.\r\n*
  No longer supports Cabal versions older than `1.24.0.0`. This means projects\r\n
  \ using snapshots earlier than `lts-7.0` or `nightly-2016-05-26` (GHC 8.0.1)\r\n
  \ will no longer build. GHC 8.0.1 comes with Haddock 2.17.2.\r\n* When unregistering
  many packages in a single step, Stack can now do that\r\n  efficiently. Stack no
  longer uses GHC-supplied `ghc-pkg unregister` (which is,\r\n  currently, slower).\r\n*
  `stack hpc report`, `stack list`, `stack templates` and `stack uninstall`\r\n  output
  their information to the standard output stream rather than to the\r\n  standard
  error stream. Logging is still to the standard error stream.\r\n* `stack upgrade`
  no longer assumes that binary upgrade is not supported on a\r\n  AArch64 machine
  architecture.\r\n\r\nOther enhancements:\r\n\r\n* Consider GHC 9.6 to be a tested
  compiler and remove warnings.\r\n* Consider Cabal 3.10 to be a tested library and
  remove warnings.\r\n* Bump to Hpack 0.36.0.\r\n* Depend on `pantry-0.9.2`, for support
  for long filenames and directory names\r\n  in archives created by `git archive`.\r\n*
  Avoid the duplicate resolving of usage files when parsing `*.hi` files into a\r\n
  \ set of modules and a collection of resolved usage files. See\r\n  [#6123](https://github.com/commercialhaskell/stack/pull/6123).\r\n*
  Add composable component type flags `--exes`, `--tests` and `--benchmarks` to\r\n
  \ Stack's `ide targets` command, to list only those components.\r\n* `stack --verbose`
  excludes lengthy information about build plan construction\r\n  in the debug output
  by default. The new `stack --[no-]plan-in-log` flag\r\n  enables or disables the
  inclusion of the information in the debug output.\r\n* In YAML configuration files,
  the `casa` key is introduced, which takes\r\n  precedence over the existing `casa-repo-prefix`
  key. The latter is deprecated.\r\n  The new key also allows Stack's use of a Casa
  (content-addressable storage\r\n  archive) server to be disabled and the maximum
  number of keys per request to\r\n  be configured. The default Casa prefix references
  https://casa.stackage.org,\r\n  instead of https://casa.fpcomplete.com.\r\n* Add
  option `--progress-bar=<format>` to Stack's `build` command to configure\r\n  the
  format of the progress bar, where `<format>` is one of `none`,\r\n  `count-only`
  (only the package count), `capped` (capped to a length equal to\r\n  the terminal
  width) and `full` (the previous format).\r\n\r\nBug fixes:\r\n\r\n* Restore `stack
  sdist --pvp-bounds lower` (broken with Stack 2.9.1).\r\n* Restore building of Stack
  with Cabal flag `disable-git-info` (broken with\r\n  Stack 2.11.1).\r\n* With `stack
  hoogle`, avoid the message\r\n  `Minimum version is hoogle-5.0. Found acceptable
  hoogle-<x.y.z> in your index, requiring its installation.`\r\n  when a `hoogle`
  executable has already been found on the `PATH`.\r\n* Stack's sanity check on a
  selected GHC now passes GHC flag\r\n  `-hide-all-packages`, stopping GHC from looking
  for a package environment in\r\n  default locations.\r\n* Restore Stack script files
  without extensions (broken with Stack 2.11.1).\r\n* Restore message suffix `due
  to warnings` with `dump-logs: warning` (broken\r\n  with Stack 2.11.1).\r\n* On
  Windows, the `local-programs-path` directory can now be on a different\r\n  drive
  to the system temporary directory and MSYS2 will still be installed.\r\n\r\n## v2.11.1
  - 2023-05-18\r\n\r\n**Changes since v2.9.3:**\r\n\r\nBehavior changes:\r\n\r\n*
  Add flag `--[no-]-only-local-bin` to Stack's `upgrade` command for a binary\r\n
  \ upgrade. If the Stack executable is `my-stack`, the default is\r\n  `my-stack
  upgrade --only-local-bin` where previously it was, effectively,\r\n  `my-stack upgrade
  --no-only-local-bin`. If the Stack executable is `stack`,\r\n  the default is `stack
  upgrade --no-only-local-bin`, the same behaviour as\r\n  previously.\r\n* Use `$XDG_CACHE_HOME/stack/ghci-script`,
  rather than\r\n  `<temp>/haskell-stack-ghci` (where `<temp>` is the directory yielded
  by the\r\n  `temporary` package's `System.IO.Temp.getCanonicalTemporaryDirectory`),
  as the\r\n  base location for GHCi script files generated by `stack ghci` or `stack
  repl`.\r\n  See [#5203](https://github.com/commercialhaskell/stack/issues/5203)\r\n*
  Drop support for `Cabal` versions before 1.22 and, consequently, GHC versions\r\n
  \ before 7.10.\r\n* `stack ghci` and `stack repl` now take into account the values
  of\r\n  `default-language` fields in Cabal files, like they take into account the\r\n
  \ values of `default-extensions` fields.\r\n* Removed `--ghc-paths`, `--global-stack-root`
  and `--local-bin-path` flags for\r\n  `stack path`, deprecated in Stack 1.1.0 in
  favour of `--programs`,\r\n  `--stack-root` and `local-bin` respectively.\r\n* On
  Windows, `stack upgrade` always renames the file of the running Stack\r\n  executable
  (adding extension `.old`) before attempting to write to the\r\n  original file name.\r\n*
  On Windows, `stack upgrade` does not offer `sudo` command alternatives if\r\n  attempting
  to write to the original file name of the running Stack exectuable\r\n  results
  in a 'Permission' error.\r\n* On Linux, Stack's `setup` command now distinguishes
  GHC build\r\n  `tinfo6-libc6-pre232` from existing `tinfo6`. The former refers to
  systems\r\n  where the version of `libc6` (the GNU C Library) is not compatible
  with\r\n  version 2.32. `tinfo6-libc6-pre232` is now a possible value for the\r\n
  \ `ghc-build` configuration option.\r\n\r\nOther enhancements:\r\n\r\n* Add options
  of the form `--PROG-option=<argument>` to `stack build`, where\r\n  `PROG` is a
  program recognised by the Cabal library and one of `alex`, `ar`,\r\n  `c2hs`, `cpphs`,
  `gcc`, `greencard`, `happy`, `hsc2hs`, `hscolour`, `ld`,\r\n  `pkg-config`, `strip`
  and `tar`. If Cabal uses the program during the\r\n  configuration step, the argument
  is passed to it.\r\n* By default all `--PROG-option` options are applied to all
  project packages.\r\n  This behaviour can be changed with new configuration option\r\n
  \ `apply-prog-options`.\r\n* Add flag `--[no-]use-root` to `stack script` (default
  disabled). Used with\r\n  `--compile` or `--optimize`, when enabled all compilation
  outputs (including\r\n  the executable) are written to a script-specific location
  in the `scripts`\r\n  directory of the Stack root rather than the script's directory,
  avoiding\r\n  clutter of the latter directory.\r\n* Better error message if the
  value of the `STACK_WORK` environment variable or\r\n  `--work-dir` option is not
  a valid relative path.\r\n* Stack will use the value of the `GH_TOKEN`, or `GITHUB_TOKEN`,
  environment\r\n  variable as credentials to authenticate its GitHub REST API requests.\r\n*
  `stack uninstall` also shows how to uninstall Stack-supplied tools.\r\n\r\nBug fixes:\r\n\r\n*
  Fix incorrect warning if `allow-newer-deps` are specified but `allow-newer` is\r\n
  \ `false`. See\r\n  [#6068](https://github.com/commercialhaskell/stack/issues/6086).\r\n*
  `stack build` with `--file-watch` or `--file-watch-poll` outputs 'pretty'\r\n  error
  messages, as intended. See\r\n  [#5978](https://github.com/commercialhaskell/stack/issues/5978).\r\n*
  `stack build` unregisters any project packages for the sub libraries of a\r\n  project
  package that is to be unregistered. See\r\n  [#6046](https://github.com/commercialhaskell/stack/issues/6046).\r\n*
  The warning that sublibrary dependency is not supported is no longer triggered\r\n
  \ by internal libraries.\r\n\r\n## v2.9.3.1 - 2023-06-22\r\n\r\nHackage-only release
  of the `stack` package:\r\n\r\n* Supports building against snapshot Stackage LTS
  Haskell 21.0 (GHC 9.4.5),\r\n  without extra-deps.\r\n* Supports build with `persistent-2.14.5.0`,
  using CPP directives.\r\n* Supports build with `unix-compat-0.7`, by removing reliance
  on the module\r\n  `System.PosixCompat.User` removed in that package.\r\n* Includes
  `cabal.project` and `cabal.config` files in the package.\r\n\r\n## v2.9.3 - 2022-12-16\r\n\r\n**Changes
  since v2.9.1:**\r\n\r\nBehavior changes:\r\n\r\n* In YAML configuration files, the
  `package-index` key is introduced which takes\r\n  precedence over the existing
  `package-indices` key. The latter is deprecated.\r\n* In YAML configuration files,
  the `hackage-security` key of the `package-index`\r\n  key or the `package-indices`
  item can be omitted, and the Hackage Security\r\n  configuration for the item will
  default to that for the official Hackage\r\n  server. See [#5870](https://github.com/commercialhaskell/stack/issues/5870).\r\n*
  Add the `stack config set package-index download-prefix` command to set the\r\n
  \ location of Stack's package index in YAML configuration files.\r\n* `stack setup`
  with the `--no-install-ghc` flag warns that the flag and the\r\n  command are inconsistent
  and now takes no action. Previously the flag was\r\n  silently ignored.\r\n* To
  support the Haskell Foundation's\r\n  [Haskell Error Index](https://errors.haskell.org/)
  initiative, all Stack\r\n  error messages generated by Stack itself begin with an
  unique code in the\r\n  form `[S-nnnn]`, where `nnnn` is a four-digit number.\r\n*
  Test suite executables that seek input on the standard input stream (`stdin`)\r\n
  \ will not throw an exception. Previously, they would thow an exception,\r\n  consistent
  with Cabal's 'exitcode-stdio-1.0' test suite interface\r\n  specification. Pass
  the flag `--no-tests-allow-stdin` to `stack build` to\r\n  enforce Cabal's specification.
  See\r\n  [#5897](https://github.com/commercialhaskell/stack/issues/5897)\r\n\r\nOther
  enhancements:\r\n\r\n* Help documentation for `stack upgrade` warns that if GHCup
  is used to install\r\n  Stack, only GHCup should be used to upgrade Stack. That
  is because GHCup uses\r\n  an executable named `stack` to manage versions of Stack,
  that Stack will\r\n  likely overwrite on upgrade.\r\n* Add `stack ls dependencies
  cabal` command, which lists dependencies in the\r\n  format of exact Cabal constraints.\r\n*
  Add `STACK_XDG` environment variable to use the XDG Base Directory\r\n  Specification
  for the Stack root and Stack's global YAML configuration file,\r\n  if the Stack
  root location is not set on the command line or by using the\r\n  `STACK_ROOT` environment
  variable.\r\n* Add `stack path --global-config`, to yield the full path of Stack's\r\n
  \ user-specific global YAML configuration file (`config.yaml`).\r\n* Experimental:
  Add option `allow-newer-deps`, which allows users to specify a\r\n  subset of dependencies
  for which version bounds should be ignored\r\n  (`allow-newer-deps: ['foo', 'bar']`).
  This key has no effect unless\r\n  `allow-newer` is enabled.\r\n\r\nBug fixes:\r\n\r\n*
  Fix ambiguous module name `Distribution.PackageDescription`, if compiling\r\n  `StackSetupShim`
  with `Cabal-syntax-3.8.1.0` in package database. See\r\n  [#5886](https://github.com/commercialhaskell/stack/pull/5886).\r\n*
  In YAML configuration files, if the `package-indices` key (or the\r\n  `hackage-security`
  key of its item) is omitted, the expiration of timestamps\r\n  is now ignored, as
  intended. See Pantry\r\n  [#63](https://github.com/commercialhaskell/pantry/pull/63)\r\n\r\n##
  v2.9.1 - 2022-09-19\r\n\r\n**Changes since v2.7.5:**\r\n\r\nRelease notes:\r\n\r\n*
  After an upgrade from an earlier version of Stack, on first use only,\r\n  Stack
  2.9.1 may warn that it had trouble loading the CompilerPaths cache.\r\n* The support
  from the Stack team for binary releases now includes Linux/AArch64\r\n  and is limited
  to:\r\n\r\n    * Linux 64-bit/x86_64 (statically linked)\r\n    * Linux AArch64
  (dynamically linked)\r\n    * macOS x86_64\r\n    * Windows 64-bit/x86_64\r\n\r\nBehavior
  changes:\r\n\r\n* `stack build --coverage` will generate a unified coverage report,
  even if\r\n  there is only one `*.tix` file, in case a package has tested the library
  of\r\n  another package that has not tested its own library. See\r\n  [#5713](https://github.com/commercialhaskell/stack/issues/5713)\r\n*
  `stack --verbose` no longer includes the lengthy raw snapshot layer (rsl) in\r\n
  \ the debug output by default. The new `stack --[no-]rsl-in-log` flag enables or\r\n
  \ disables the inclusion of the rsl in the debug output.\r\n\r\nOther enhancements:\r\n\r\n*
  Consider GHC 9.2 and 9.4 to be tested compilers and remove warnings.\r\n* Consider
  Cabal 3.6 and 3.8 to be a tested libraries and remove warnings.\r\n* Bump to Hpack
  0.35.0.\r\n* On Windows, the installer now sets `DisplayVersion` in the registry,
  enabling\r\n  tools like `winget` to properly read the version number.\r\n* Adds
  flag `--script-no-run-compile` (disabled by default) that uses the\r\n  `--no-run`
  option with `stack script` (and forces the `--compile` option).\r\n  This enables
  a command like `stack --script-no-run-compile Script.hs` to\r\n  behave like `stack
  script <arguments> --no-run --compile -- Script.hs` but\r\n  without having to list
  all the `<arguments>` in the Stack interpreter options\r\n  comment in `Script.hs`
  on the command line. That may help test that scripts\r\n  compile in CI (continuous
  integration). See\r\n  [#5755](https://github.com/commercialhaskell/stack/issues/5755)\r\n*
  Fuller help is provided at the command line if a subcommand is missing (for\r\n
  \ example, `stack ls` now yields the equivalent of `stack ls --help`). See\r\n  [#809](https://github.com/commercialhaskell/stack/issues/809)\r\n*
  Add build option `--cabal-verbosity=VERBOSITY` to specify the Cabal verbosity\r\n
  \ level (the option accepts Cabal's numerical and extended syntax).\r\n  See [#1369](https://github.com/commercialhaskell/stack/issues/809)\r\n*
  Add the possibility of a `sh` script to customise fully GHC installation. See\r\n
  \ [#5585](https://github.com/commercialhaskell/stack/pull/5585)\r\n* `tools` subcommand
  added to `stack ls`, to list stack's installed tools.\r\n* `stack uninstall` shows
  how to uninstall Stack.\r\n* `--ghc-variant` accepts `int-native` as a variant.\r\n\r\nBug
  fixes:\r\n\r\n* Fix `stack clean --full`, so that the files to be deleted are not
  in use. See\r\n  [#5714](https://github.com/commercialhaskell/stack/issues/5714)\r\n*
  Fix an inconsistency in the pretty formatting of the output of\r\n  `stack build
  --coverage`\r\n* Fix repeated warning about missing parameters when using `stack
  new`\r\n* Include `pantry-0.5.6`: Remove operational and mirror keys from bootstrap
  key\r\n  set [#53](https://github.com/commercialhaskell/pantry/pull/53)\r\n* Pass
  any CPP options specified via `cpp-options:` in the Cabal file to GHCi\r\n  using
  GHC's `-optP` flag. See\r\n  [#5608](https://github.com/commercialhaskell/stack/pull/5608)\r\n*
  On Unix-like operating systems, respect the `with-gcc` option when installing\r\n
  \ GHC. See [#5609](https://github.com/commercialhaskell/stack/pull/5609)\r\n* Fixed
  logic in `get_isa()` in `get-stack.sh` to exclude systems that don't\r\n  have x86
  in their `uname -m` output. See\r\n  [5792](https://github.com/commercialhaskell/stack/issues/5792).\r\n*
  Fixed output of `stack ls snapshots local` on Windows, to behave like that on\r\n
  \ Unix-like operating systems.\r\n* Fix non-deterministic test failures when executing
  a test suite for a\r\n  multi-project repository with parallelism enabled. See\r\n
  \ [#5024](https://github.com/commercialhaskell/stack/issues/5024)\r\n\r\n## v2.7.5
  - 2022-03-06\r\n\r\n**Changes since v2.7.3:**\r\n\r\nBehavior changes:\r\n\r\n*
  Cloning git repositories isn't per sub-directory anymore, see\r\n  [#5411](https://github.com/commercialhaskell/stack/issues/5411)\r\n\r\nOther
  enhancements:\r\n\r\n* `stack setup` supports installing GHC for macOS aarch64 (M1)\r\n*
  `stack upload` supports authentication with a Hackage API key (via\r\n  `HACKAGE_KEY`
  environment variable).\r\n\r\nBug fixes:\r\n\r\n* Ensure that `extra-path` works
  for case-insensitive `PATH`s on Windows.\r\n  See [rio#237](https://github.com/commercialhaskell/rio/pull/237)\r\n*
  Fix handling of overwritten `ghc` and `ghc-pkg` locations.\r\n  [#5597](https://github.com/commercialhaskell/stack/pull/5597)\r\n*
  Fix failure to find package when a dependency is shared between projects.\r\n  [#5680](https://github.com/commercialhaskell/stack/issues/5680)\r\n*
  `stack ghci` now uses package flags in `stack.yaml`\r\n  [#5434](https://github.com/commercialhaskell/stack/issues/5434)\r\n\r\n\r\n##
  v2.7.3 - 2021-07-20\r\n\r\n**Changes since v2.7.1:**\r\n\r\nOther enhancements:\r\n\r\n*
  `stack upgrade` will download from `haskellstack.org` before trying\r\n  `github.com`.
  See\r\n  [#5288](https://github.com/commercialhaskell/stack/issues/5288)\r\n* `stack
  upgrade` makes less assumptions about archive format. See\r\n  [#5288](https://github.com/commercialhaskell/stack/issues/5288)\r\n*
  Add a `--no-run` flag to the `script` command when compiling.\r\n\r\nBug fixes:\r\n\r\n*
  GHC source builds work properly for recent GHC versions again. See\r\n  [#5528](https://github.com/commercialhaskell/stack/issues/5528)\r\n*
  `stack setup` always looks for the unpacked directory name to support\r\n  different
  tar file naming conventions. See\r\n  [#5545](https://github.com/commercialhaskell/stack/issues/5545)\r\n*
  Bump `pantry` version for better OS support. See\r\n  [pantry#33](https://github.com/commercialhaskell/pantry/issues/33)\r\n*
  When building the sanity check for a new GHC install, make sure to clear\r\n  `GHC_PACKAGE_PATH`.\r\n*
  Specifying GHC RTS flags in the `stack.yaml` no longer fails with an error.\r\n
  \ [#5568](https://github.com/commercialhaskell/stack/pull/5568)\r\n* `stack setup`
  will look in sandboxed directories for executables, not\r\n  relying on `findExecutables.
  See\r\n  [GHC issue 20074](https://gitlab.haskell.org/ghc/ghc/-/issues/20074)\r\n*
  Track changes to `setup-config` properly to avoid reconfiguring on every\r\n  change.
  See\r\n  [#5578](https://github.com/commercialhaskell/stack/issues/5578)\r\n\r\n\r\n##
  v2.7.1 - 2021-05-07\r\n\r\n**Changes since v2.5.1.1:**\r\n\r\nBehavior changes:\r\n\r\n*
  `stack repl` now always warns about GHCi problems with loading multiple\r\n  packages.
  It also sets now proper working directory when invoked with\r\n  one package. See\r\n
  \ [#5421](https://github.com/commercialhaskell/stack/issues/5421)\r\n* `custom-setup`
  dependencies are now properly initialized for `stack dist`.\r\n  This makes `explicit-setup-deps`
  no longer required and that option was\r\n  removed. See\r\n  [#4006](https://github.com/commercialhaskell/stack/issues/4006)\r\n\r\nOther
  enhancements:\r\n\r\n* Consider GHC 9.0 to be a tested compiler and remove warnings.\r\n*
  Consider Cabal 3.6 to be a tested library and remove warnings.\r\n* Nix integration
  now passes `ghcVersion` (in addition to existing `ghc`) to\r\n  `shell-file` as
  an identifier that can be looked up in a compiler attribute\r\n  set.\r\n* Nix integration
  now allows Nix integration if the user is ready in nix-shell.\r\n  This gets rid
  of \"In Nix shell but reExecL is False\" error.\r\n* `stack list` is a new command
  to list package versions in a snapshot.\r\n  See [#5431](https://github.com/commercialhaskell/stack/pull/5431)\r\n*
  `custom-preprocessor-extensions` is a new configuration option for allowing\r\n
  \ Stack to be aware of any custom preprocessors you have added to `Setup.hs`.\r\n
  \ See [#3491](https://github.com/commercialhaskell/stack/issues/3491)\r\n* Added
  `--candidate` flag to `upload` command to upload a package candidate\r\n  rather
  than publishing the package.\r\n* Error output using `--no-interleaved-output` no
  longer prepends indenting\r\n  whitespace. This allows emacs compilation-mode and
  vim quickfix to locate\r\n  and track errors. See\r\n  [#5523](https://github.com/commercialhaskell/stack/pull/5523)\r\n\r\nBug
  fixes:\r\n\r\n* `stack new` now supports branches other than `master` as default
  for GitHub\r\n  repositories. See\r\n  [#5422](https://github.com/commercialhaskell/stack/issues/5422)\r\n*
  Ignore all errors from `hi-file-parser`. See\r\n  [#5445](https://github.com/commercialhaskell/stack/issues/5445)
  and\r\n  [#5486](https://github.com/commercialhaskell/stack/issues/5486).\r\n* Support
  basic auth in package-indices. See\r\n  [#5509](https://github.com/commercialhaskell/stack/issues/5509).\r\n*
  Add support for parsing `.hi`. files from GHC 8.10 and 9.0. See\r\n  [hi-file-parser#2](https://github.com/commercialhaskell/hi-file-parser/pull/2).\r\n\r\n\r\n##
  v2.5.1.1 - 2020-12-09\r\n\r\nHackage-only release:\r\n\r\n* Support build with persistent-2.11.x
  and optparse-applicative-0.16.x\r\n\r\n\r\n## v2.5.1 - 2020-10-15\r\n\r\n**Changes
  since v2.3.3**\r\n\r\nMajor changes:\r\n\r\n* Add the `snapshot-location-base` yaml
  configuration option, which allows to\r\n  override the default location of snapshot
  configuration files. This option\r\n  affects how snapshot synonyms (LTS/Nightly)
  are expanded to URLs by the\r\n  `pantry` library.\r\n* `docker-network` configuration
  key added to override docker `--net` arg\r\n\r\nBehavior changes:\r\n\r\n* File
  watching now takes into account specified targets, old behavior could be\r\n  restored
  using the new flag `--watch-all`\r\n  [#5310](https://github.com/commercialhaskell/stack/issues/5310)\r\n\r\nOther
  enhancements:\r\n\r\n* The output of `stack ls dependencies json` now includes keys
  `sha256` and\r\n  `size` for dependencies of `type` `archive` in `location`.\r\n
  \ [#5280](https://github.com/commercialhaskell/stack/issues/5280)\r\n* Build failures
  now show a hint to scroll up to the corresponding section\r\n  [#5279](https://github.com/commercialhaskell/stack/issues/5279)\r\n*
  Customisable output styles (see `stack --help` and the `--stack-colors`\r\n  option,
  and `stack ls stack-colors --help`) now include `info`, `debug`,\r\n  `other-level`,
  `secondary` and `highlight`, used with verbose output.\r\n\r\nBug fixes:\r\n\r\n*
  Fix `stack test --coverage` when using Cabal 3\r\n* `stack new` now generates PascalCase'd
  module name correctly.\r\n  [#5376](https://github.com/commercialhaskell/stack/issues/5376)\r\n*
  Connection issues to Casa server no longer cause builds to failure. Casa acts\r\n
  \ only as an optimizing cache layer, not a critical piece of infrastructure.\r\n*
  Fix modified time busting caches by always calculating sha256 digest during\r\n
  \ the build process.\r\n  [#5125](https://github.com/commercialhaskell/stack/issues/5125)\r\n\r\n\r\n##
  v2.3.3 - 2020-08-06\r\n\r\n**Changes since v2.3.1**\r\n\r\nOther enhancements:\r\n\r\n*
  Add the `stack-developer-mode` flag\r\n\r\nBug fixes:\r\n\r\n* When using the `STACK_YAML`
  env var with Docker, make the path absolute.\r\n* Fix the problem of `stack repl
  foo:test:bar` failing without a project build\r\n  before that. See\r\n  [#5213](https://github.com/commercialhaskell/stack/issues/5213)\r\n*
  Fix `stack sdist` introducing unnecessary sublibrary syntax when using\r\n  pvp-bounds.
  See\r\n  [#5289](https://github.com/commercialhaskell/stack/issues/5289)\r\n\r\n##
  v2.3.1 - 2020-04-29\r\n\r\nRelease notes:\r\n\r\n* We have reduced the number of
  platforms that we support with binary releases.\r\n  The reason behind this is that
  we've been slowed down in our release process\r\n  until now with issues trying
  to build binaries for less common platforms. In\r\n  order to make sure we can address
  issues more quickly (like supporting new GHC\r\n  versions), we're limiting support
  from the Stack team to:\r\n\r\n    * Linux 64-bit/x86_64 (statically linked)\r\n
  \   * macOS x86_64\r\n    * Windows 64-bit/x86_64\r\n\r\n  If others want to provide
  additional binaries, we will definitely be happy for\r\n  the support. But since
  our CI system is currently able to produce these three\r\n  bindists only, that's
  what we will be providing with the next release.\r\n\r\n* Since we no longer have
  dynamically linked Linux binaries, we are removing the\r\n  `-static` suffix from
  the static Linux/x86_64 binaries. If you have scripts to\r\n  download the latest
  stable Linux/x86_64 binary, update them to use\r\n  `linux-x86_64` instead of `linux-x86_64-static`
  (if you are already using the\r\n  former, nothing needs to change). For this release,
  both are supported, but\r\n  the next release will no longer have the `-static`
  variant.\r\n\r\n* We are also deprecating the download links at https://stackage.org/stack.
  See\r\n  this page for the current installation instructions:\r\n  https://docs.haskellstack.org/en/stable/install_and_upgrade/.\r\n\r\n*
  These are the canonical locations to download the latest stable binaries from,\r\n
  \ and will continue to be supported going forward:\r\n\r\n    * Linux 64-bit/x86_64
  (static):\r\n      https://get.haskellstack.org/stable/linux-x86_64.tar.gz\r\n    *
  macOS x86_64: https://get.haskellstack.org/stable/osx-x86_64.tar.gz\r\n    * Windows
  64-bit/x86_64:\r\n      https://get.haskellstack.org/stable/windows-x86_64.zip\r\n\r\n
  \ As always, binaries for specific versions are available from the GitHub\r\n  releases:
  https://github.com/commercialhaskell/stack/releases.\r\n\r\n**Changes since v2.1.3.1**\r\n\r\nMajor
  changes:\r\n\r\n* `setup-info-locations` yaml configuration now allows overwriting
  the default\r\n  locations of `stack-setup-2.yaml`.\r\n  [#5031](https://github.com/commercialhaskell/stack/pull/5031)\r\n
  \ [#2983](https://github.com/commercialhaskell/stack/issues/2983)\r\n  [#2913](https://github.com/commercialhaskell/stack/issues/2913)\r\n\r\n*
  The `setup-info` configuration key now allows overwriting parts of the default\r\n
  \ `setup-info`\r\n\r\n* The `--setup-info-yaml` command line flag now may be used
  in all Stack\r\n  commands such as `stack build`, and not only in `stack setup`\r\n\r\n*
  The `--setup-info-yaml` may specify multiple locations for `stack-setup.yaml`\r\n
  \ files.\r\n\r\n* The `stack upload` can read first reads environment Variable\r\n
  \ `$HACKAGE_USERNAME` and `$HACKAGE_PASSWORD` if they are missing only then asks\r\n
  \ for `username` or `password`\r\n\r\n* Fully remove GHCJS support.\r\n\r\n* Remove
  the `freeze` command. It has been replaced by lock files.\r\n\r\nBehavior changes:\r\n\r\n*
  Remove the deprecated `--stack-setup-yaml` command line argument in favor of\r\n
  \ `--setup-info-yaml`. See\r\n  [#2647](https://github.com/commercialhaskell/stack/issues/2647)\r\n\r\n*
  We now recommend checking in generated Cabal files for repos. When generating\r\n
  \ lock files for extra-deps that only include `package.yaml` files, a\r\n  deprecation
  warning will be generated. Also, those packages will no longer be\r\n  included
  in the generated lock files. See\r\n  [#5210](https://github.com/commercialhaskell/stack/issues/5210).\r\n\r\nOther
  enhancements:\r\n\r\n* Add `build-output-timestamps` flag in yaml. Setting it to
  true prefixes each\r\n  build log output line with a timestamp.\r\n\r\n* Show warning
  about `local-programs-path` with spaces on windows when running\r\n  scripts. See\r\n
  \ [#5013](https://github.com/commercialhaskell/stack/pull/5013)\r\n\r\n* Add `ls
  dependencies json` which will print dependencies as JSON.\r\n  `ls dependencies
  --tree`  is now `ls dependencies tree`. See\r\n  [#4424](https://github.com/commercialhaskell/stack/pull/4424)\r\n\r\n*
  Remove warning for using Stack with GHC 8.8-8.10, and Cabal 3.0-3.2.\r\n\r\n* Allow
  relative paths in `--setup-info-yaml` and tool paths\r\n  [#3394](https://github.com/commercialhaskell/stack/issues/3394)\r\n\r\n*
  Added the `--only-locals` flag. See\r\n  [#5272](https://github.com/commercialhaskell/stack/issues/5272)\r\n\r\nBug
  fixes:\r\n\r\n* Upgrade `pantry`: module mapping insertions into the database are
  now atomic.\r\n  Previously, if you SIGTERMed at the wrong time while running a
  script, you\r\n  could end up with an inconsistent database state.\r\n\r\n* `--resolver
  global` doesn't retrieve snapshots list from the internet because\r\n  doesn't need
  it. See\r\n  [#5103](https://github.com/commercialhaskell/stack/issues/5103)\r\n\r\n*
  Fix using relative links in haddocks output.  See\r\n  [#4971](https://github.com/commercialhaskell/stack/issues/4971).\r\n\r\n*
  Do not include generated Cabal file information in lock files. See\r\n  [#5045](https://github.com/commercialhaskell/stack/issues/5045).\r\n\r\n*
  Use proper Hoogle executable path when installed automatically. See\r\n  [#4905](https://github.com/commercialhaskell/stack/issues/4905)\r\n\r\n*
  Fix GHC version for batched package unregistration. See\r\n  [#4951](https://github.com/commercialhaskell/stack/issues/4951)\r\n\r\n*
  Use Hoogle from the snapshot used and not the latest version. See\r\n  [#4905](https://github.com/commercialhaskell/stack/issues/4905)\r\n\r\n*
  Resolve \"'stty' is not recognized\". See\r\n  [#4901](https://github.com/commercialhaskell/stack/issues/4901)\r\n\r\n*
  Fix missing reconfigure check causing errors when a package gets\r\n  used in multiple
  projects. See\r\n  [#5147](https://github.com/commercialhaskell/stack/issues/5147)\r\n\r\n##
  v2.1.3.1 - 2019-07-16\r\n\r\nHackage-only release:\r\n\r\n* Support persistent-template-2.7.x\r\n*
  Support rio-0.1.11.0\r\n* Add `stack.yaml` back to hackage sdist, and add `snapshot.yaml`\r\n\r\n\r\n##
  v2.1.3 - 2019-07-13\r\n\r\n**Changes since v2.1.1**\r\n\r\nBehavior changes:\r\n\r\n*
  Disable WAL mode for SQLite3 databases, to improve compatibility with some\r\n  platforms
  and filesystems. See\r\n  [#4876](https://github.com/commercialhaskell/stack/issues/4876).\r\n\r\n*
  By default, do not perform expiry checks in Hackage Security. See\r\n  [#4928](https://github.com/commercialhaskell/stack/issues/4928).\r\n\r\nOther
  enhancements:\r\n\r\n* Do not rerun expected test failures. This is mostly a change
  that will only\r\n  affect the Stackage Curator use case, but there is now an additional
  message\r\n  letting the user know when a previously-failed test case is being rerun.\r\n\r\n*
  Move configure information for project packages back to .stack-work to improve\r\n
  \ caching. See\r\n  [#4893](https://github.com/commercialhaskell/stack/issues/4893).\r\n\r\nBug
  fixes:\r\n\r\n* Fix to allow dependencies on specific versions of local git repositories.
  See\r\n  [#4862](https://github.com/commercialhaskell/stack/pull/4862)\r\n\r\n*
  Allow Stack commands to be run in Nix mode without having a project file\r\n  available.
  See\r\n  [#4854](https://github.com/commercialhaskell/stack/issues/4864).\r\n\r\n*
  Removes dependency on gnu-tar for OSX and Linux environment. The\r\n  `--force-local`
  option was required only for windows environment.\r\n\r\n* Properly wait for the
  `tar` subprocess to complete before returning, thereby\r\n  avoiding a SIGTERM screwing
  up GHC installation. See\r\n  [#4888](https://github.com/commercialhaskell/stack/issues/4888).\r\n\r\n*
  Use package complete locations from lock files when resolving dependencies in\r\n
  \ `extra-deps`. See\r\n  [#4887](https://github.com/commercialhaskell/stack/issues/4887).\r\n\r\n*
  Set the `HASKELL_DIST_DIR` environment to a proper package dist directory so\r\n
  \ `doctest` is able to load modules autogenerated by Cabal.\r\n\r\n* Expose package
  library when running tests.\r\n\r\n* Fix support for non-ASCII module names. See\r\n
  \ [#4938](https://github.com/commercialhaskell/stack/issues/4938)\r\n\r\nOther changes:\r\n\r\n*
  Rename `pantry-tmp` package back to `pantry`, now that we have gained\r\n  maintainership
  (which had been used by someone else for a candidate-only test\r\n  that made it
  look like the name was free but prevented uploading a real\r\n  package).\r\n\r\n\r\n##
  v2.1.1.1 - 2019-06-14\r\n\r\nHackage-only release that removes `stack.yaml` from
  the sdist.  This is because\r\n`stack.yaml` now defines a multi-package project,
  whereas Hackage works on the\r\nbasis on individual packages (see\r\n[#4860](https://github.com/commercialhaskell/stack/issues/4860))\r\n\r\nIf
  building a `stack` executable for distribution, please download the source\r\ncode
  from https://github.com/commercialhaskell/stack/releases/tag/v2.1.1 and\r\nbuild
  it using Stack itself in order to ensure identical behaviour to official\r\nbinaries.
  This package on Hackage is provided for convenience and bootstrapping\r\npurposes.\r\n\r\n\r\n##
  v2.1.1 - 2019-06-13\r\n\r\nThe Stack 2 release represents a series of significant
  changes to how Stack\r\nworks internally. For the vast majority of cases, these
  changes are backwards\r\ncompatible, in that existing projects will continue to
  build in the same way\r\nwith Stack 2 as they did with Stack 1. The large version
  bump is due to the\r\nfundamental internal changes to cache handling, database storage
  (using SQLite\r\nin place of binary files), implicit snapshots (which greatly improve
  the\r\nprecompiled cache), and moving to Pantry. We have also removed some less
  used\r\nfeatures, as listed below.\r\n\r\n**Changes since v1.9.3**\r\n\r\nMajor
  changes:\r\n\r\n* Switch over to pantry for managing packages. This is a major change
  to Stack's\r\n  internals, and affects user-visible behavior in a few places. Some
  highlights:\r\n    * Drop support for multiple package indices and legacy\r\n      `00-index.tar`
  style indices. See\r\n      [#4137](https://github.com/commercialhaskell/stack/issues/4137).\r\n
  \   * Support for archives and repos in values of the `packages` key has been\r\n
  \     removed. Instead, you must use the `extra-deps` key for such dependencies.\r\n
  \     `packages` now only supports local filepaths.\r\n    * Add support for Git
  repositories containing (recursive) submodules.\r\n    * Addition of new configuration
  options for specifying a \"pantry\r\n      tree\" key, which provides more reproducibility
  around builds,\r\n      and (in the future) will be used for more efficient package\r\n
  \     content downloads. You can also specify package name and version\r\n      for
  more efficient config parsing.\r\n          * __NOTE__ The new `stack freeze` command
  provides support\r\n            for automatically generating this additional\r\n
  \           information.\r\n    * Package contents and metadata are stored in an
  SQLite database\r\n      in place of files on the filesystem. The `pantry` library
  can be\r\n      used for interacting with these contents.\r\n    * Internally, Stack
  has changed many datatypes, including moving\r\n      to Cabal's definition of many
  data types. As a result of such\r\n      changes, existing cache files will in general
  be invalidated,\r\n      resulting in Stack needing to rebuild many previously cached\r\n
  \     builds in the new version. Sorry :(.\r\n    * A new command, `stack freeze`
  has been added which outputs\r\n      project and snapshot definitions with dependencies
  pinned to\r\n      their exact versions.\r\n    * The `ignore-revision-mismatch`
  setting is no longer needed, and\r\n      has been removed.\r\n    * Overriding
  GHC boot packages results in any other GHC boot\r\n      packages depending on it
  being no longer available as a dependency,\r\n      such packages need to be added
  explicitly when needed. See\r\n      [#4510] (https://github.com/commercialhaskell/stack/issues/4510).\r\n
  \   * Cabal solver integration was not updated to support newer\r\n      `cabal-install`
  versions so `stack solver` command was removed as\r\n      well as a related option
  `--solver` from `stack new` and\r\n      `stack init`.\r\n* Upgrade to Cabal 2.4\r\n
  \   * Note that, in this process, the behavior of file globbing has\r\n      been
  modified to match that of Cabal. In particular, this means\r\n      that for Cabal
  spec versions less than 2.4, `*.txt` will\r\n      match `foo.txt`, but not `foo.2.txt`.\r\n*
  Remove the `stack image` command. With the advent of Docker multistage\r\n  builds,
  this functionality is no longer useful. For an example, please see\r\n  [Building
  Haskell Apps with Docker](https://www.fpcomplete.com/blog/2017/12/building-haskell-apps-with-docker).\r\n*
  Experimental: Support building GHC from source\r\n    * Stack now supports building
  and installing GHC from source. The built GHC\r\n      is uniquely identified by
  a commit id and an Hadrian \"flavour\" (Hadrian is\r\n      the newer GHC build
  system), hence `compiler` can be set to use a GHC\r\n      built from source with
  `ghc-git-COMMIT-FLAVOUR`\r\n* `stack.yaml` now supports a `configure-options`, which
  are passed directly to\r\n  the `configure` step in the Cabal build process. See\r\n
  \ [#1438](https://github.com/commercialhaskell/stack/issues/1438)\r\n* Remove support
  for building GHCJS itself. Future releases of Stack\r\n  may remove GHCJS support
  entirely.\r\n* Support for lock files for pinning exact project dependency versions\r\n\r\nBehavior
  changes:\r\n\r\n* `stack.yaml` now supports `snapshot`: a synonym for `resolver`.
  See\r\n  [#4256](https://github.com/commercialhaskell/stack/issues/4256)\r\n* `stack
  script` now passes `-i -idir` in to the `ghc`\r\n  invocation. This makes it so
  that the script can import local\r\n  modules, and fixes an issue where `.hs` files
  in the current\r\n  directory could affect interpretation of the script. See\r\n
  \ [#4538](https://github.com/commercialhaskell/stack/pull/4538)\r\n* When using
  `stack script`, custom snapshot files will be resolved\r\n  relative to the directory
  containing the script.\r\n* Remove the deprecated `--upgrade-cabal` flag to `stack
  setup`.\r\n* Support the `drop-packages` key in `stack.yaml`\r\n* Remove the GPG
  signing code during uploads. The GPG signatures have\r\n  never been used yet, and
  there are no plans to implement signature\r\n  verification.\r\n* Remove the `--plain`
  option for the `exec` family of commands\r\n* Always use the `--exact-configuration`
  Cabal configuration option when\r\n  building (should mostly be a non-user-visible
  enhancement).\r\n* No longer supports Cabal versions older than `1.19.2`.  This
  means\r\n  projects using snapshots earlier than `lts-3.0` or\r\n  `nightly-2015-05-05`
  will no longer build.\r\n* Remove the `stack docker cleanup` command.  Docker itself
  now has\r\n  [`docker image prune`](https://docs.docker.com/engine/reference/commandline/image_prune/)\r\n
  \ and\r\n  [`docker container prune`](https://docs.docker.com/engine/reference/commandline/container_prune/),\r\n
  \ which you can use instead.\r\n* Interleaved output is now turned on by default,
  see\r\n  [#4702](https://github.com/commercialhaskell/stack/issues/4702). In\r\n
  \ addition, the `packagename> ` prefix is no longer included in\r\n  interleaved
  mode when only building a single target.\r\n* The `-fhide-source-paths` GHC option
  is now enabled by default and\r\n  can be disabled via the `hide-source-paths` configuration
  option in\r\n  `stack.yaml`. See\r\n  [#3784](https://github.com/commercialhaskell/stack/issues/3784)\r\n*
  Stack will reconfigure a package if you modify your `PATH` environment\r\n  variable.
  See\r\n  [#3138](https://github.com/commercialhaskell/stack/issues/3138).\r\n* For
  GHC 8.4 and later, disable the \"shadowed dependencies\" workaround. This\r\n  means
  that Stack will no longer have to force reconfigures as often. See\r\n  [#3554](https://github.com/commercialhaskell/stack/issues/3554).\r\n*
  When building a package, Stack takes a lock on the dist directory in\r\n  use to
  avoid multiple runs of Stack from trampling each others'\r\n  files. See\r\n  [#2730](https://github.com/commercialhaskell/stack/issues/2730).\r\n*
  Stack will check occasionally if there is a new version available and prompt\r\n
  \ the user to upgrade. This will not incur any additional network traffic, as\r\n
  \ it will piggy-back on the existing Hackage index updates. You can set\r\n  `recommend-stack-upgrade:
  false` to bypass this. See\r\n  [#1681](https://github.com/commercialhaskell/stack/issues/1681).\r\n*
  `stack list-dependencies` has been removed in favour of\r\n  `stack ls dependencies`.\r\n*
  The new default for `--docker-auto-pull` is enabled. See\r\n  [#3332](https://github.com/commercialhaskell/stack/issues/3332).\r\n\r\nOther
  enhancements:\r\n\r\n* Support MX Linux in get-stack.sh. Fixes\r\n  [#4769](https://github.com/commercialhaskell/stack/issues/4769).\r\n*
  Defer loading up of files for project packages. This allows us to get\r\n  plan
  construction errors much faster, and avoid some unnecessary\r\n  work when only
  building a subset of packages. This is especially\r\n  useful for the curator use
  case.\r\n* Existing global option `--color=WHEN` is now also available as a\r\n
  \ non-project-specific yaml configuration parameter `color:`.\r\n* Adopt the standard
  proposed at http://no-color.org/, that color should not be\r\n  added by default
  if the `NO_COLOR` environment variable is present.\r\n* New command `stack ls stack-colors`
  lists the styles and the associated 'ANSI'\r\n  control character sequences that
  Stack uses to color some of its output. See\r\n  `stack ls stack-colors --help`
  for more information.\r\n* New global option `--stack-colors=STYLES`, also available
  as a\r\n  non-project-specific yaml configuration parameter, allows a Stack user
  to\r\n  redefine the default styles that Stack uses to color some of its output.
  See\r\n  `stack --help` for more information.\r\n* British English spelling of 'color'
  (colour) accepted as an alias for\r\n  `--color`, `--stack-colors`, `stack ls stack-colors`
  at the command line and\r\n  for `color:` and `stack-colors:` in yaml configuration
  files.\r\n* New build option `--ddump-dir`. (See\r\n  [#4225](https://github.com/commercialhaskell/stack/issues/4225))\r\n*
  Stack parses and respects the `preferred-versions` information from\r\n  Hackage
  for choosing latest version of a package in some cases,\r\n  e.g. `stack unpack
  packagename`.\r\n* The components output in the `The main module to load is ambiguous`
  message\r\n  now include package names so they can be more easily copy-pasted.\r\n*
  Git repos are shared across multiple projects. See\r\n  [#3551](https://github.com/commercialhaskell/stack/issues/3551)\r\n*
  Use en_US.UTF-8 locale by default in pure Nix mode so programs won't\r\n  crash
  because of Unicode in their output\r\n  [#4095](https://github.com/commercialhaskell/stack/issues/4095)\r\n*
  Add `--tree` to `ls dependencies` to list dependencies as tree.\r\n  [#4101](https://github.com/commercialhaskell/stack/issues/4101)\r\n*
  Add `--pedantic` to `ghci` to run with `-Wall` and `-Werror`\r\n  [#4463](https://github.com/commercialhaskell/stack/issues/4463)\r\n*
  Add `--cabal-files` flag to `stack ide targets` command.\r\n* Add `--stdout` flag
  to all `stack ide` subcommands.\r\n* Use batches when unregistering packages with
  `ghc-pkg`.\r\n  (See [#2662](https://github.com/commercialhaskell/stack/issues/2662))\r\n*
  `get-stack` script now works on Windows CI machines of Appveyor,\r\n  Travis and
  Azure Pipelines. See\r\n  [#4535](https://github.com/commercialhaskell/stack/issues/4535)/\r\n*
  Show snapshot being used when `stack ghci` is invoked outside of a project\r\n  directory.
  See\r\n  [#3651](https://github.com/commercialhaskell/stack/issues/3651)\r\n* The
  script interpreter now accepts a `--extra-dep` flag for adding\r\n  packages not
  present in the snapshot. Currently, this only works\r\n  with packages from Hackage,
  not Git repos or archives.\r\n* When using the script interpreter with `--optimize`
  or `--compile`,\r\n  Stack will perform an optimization of checking whether a newer\r\n
  \ executable exists, making reruns significantly faster. There's a\r\n  downside
  to this, however: if you have a multifile script, and\r\n  change one of the dependency
  modules, Stack will not automatically\r\n  detect and recompile.\r\n* `stack clean`
  will delete the entire `.stack-work/dist` directory,\r\n  not just the relevant
  subdirectory for the current GHC version. See\r\n  [#4480](https://github.com/commercialhaskell/stack/issues/4480).\r\n*
  Add `stack purge` as a shortcut for `stack clean --full`. See\r\n  [#3863](https://github.com/commercialhaskell/stack/issues/3863).\r\n*
  Both `stack dot` and `stack ls dependencies` accept a\r\n  `--global-hints` flag
  to bypass the need for an installed GHC. See\r\n  [#4390](https://github.com/commercialhaskell/stack/issues/4390).\r\n*
  Add the `stack config env` command for getting shell script environment\r\n  variables.
  See [#620](https://github.com/commercialhaskell/stack/issues/620).\r\n* Less verbose
  output from `stack setup` on Windows. See\r\n  [#1212](https://github.com/commercialhaskell/stack/issues/1212).\r\n*
  Add an optional `ignore-expiry` key to the `hackage-security` key of\r\n  `~/.stack/config.yaml`.
  It allows disabling of timestamp expiration\r\n  verification just like `cabal --ignore-expiry`
  does. The flag is not enabled\r\n  by default so that the default functionality
  is not changed.\r\n* Include default values for most command line flags in the `--help`
  output. See\r\n  [#893](https://github.com/commercialhaskell/stack/issues/893).\r\n*
  Set the `GHC_ENVIRONMENT` environment variable to specify dependency\r\n  packages
  explicitly when running test. This is done to prevent\r\n  ambiguous module name
  errors in `doctest` tests.\r\n* `get-stack` script now works on Windows CI machines
  of Appveyor,\r\n  Travis and Azure Pipelines. See\r\n  [#4535](https://github.com/commercialhaskell/stack/issues/4535)\r\n*
  Warn when a Docker image does not include a `PATH` environment\r\n  variable. See\r\n
  \ [#2472](https://github.com/commercialhaskell/stack/issues/2742)\r\n* When using
  `system-ghc: true`, Stack will now find the appropriate GHC\r\n  installation based
  on the version suffix, allowing you to more easily switch\r\n  between various system-installed
  GHCs. See\r\n  [#2433](https://github.com/commercialhaskell/stack/issues/2433).\r\n*
  `stack init` will now support create a `stack.yaml` file without any local\r\n  packages.
  See [#2465](https://github.com/commercialhaskell/stack/issues/2465)\r\n* Store caches
  in SQLite database instead of files.\r\n* No longer use \"global\" Docker image
  database (`docker.db`).\r\n* User config files are respected for the script command.
  See\r\n  [#3705](https://github.com/commercialhaskell/stack/issues/3705),\r\n  [#3887](https://github.com/commercialhaskell/stack/issues/3887).\r\n*
  Set the `GHC_ENVIRONMENT` environment variable to `-` to tell GHC to ignore\r\n
  \ any such files when GHC is new enough (>= 8.4.4), otherwise simply unset the\r\n
  \ variable. This allows Stack to have control of package databases when running\r\n
  \ commands like `stack exec ghci`, even in the presence of implicit environment\r\n
  \ files created by `cabal new-build`. See\r\n  [#4706](https://github.com/commercialhaskell/stack/issues/4706).\r\n*
  Use a database cache table to speed up discovery of installed GHCs\r\n* You can
  specify multiple `--test-arguments` options. See\r\n  [#2226](https://github.com/commercialhaskell/stack/issues/2226)\r\n*
  Windows terminal width detection is now done. See\r\n  [#3588](https://github.com/commercialhaskell/stack/issues/3588)\r\n*
  On Windows, informs users if the 'programs' path contains a space character\r\n
  \ and further warns users if that path does not have an alternative short\r\n  ('8
  dot 3') name, referencing the `local-programs-path` configuration option.\r\n  See
  [#4726](https://github.com/commercialhaskell/stack/issues/4726)\r\n* Add `--docker-mount-mode`
  option to set the Docker volume mount mode\r\n  for performance tuning on macOS.\r\n\r\nBug
  fixes:\r\n\r\n* Ignore duplicate files for a single module when a Haskell module
  was\r\n  generated from a preprocessor file. See\r\n  [#4076](https://github.com/commercialhaskell/stack/issues/4076).\r\n*
  Only track down components in current directory if there are no\r\n  hs-source-dirs
  found. This eliminates a number of false-positive\r\n  warnings, similar to\r\n
  \ [#4076](https://github.com/commercialhaskell/stack/issues/4076).\r\n* Handle a
  change in GHC's hi-dump format around `addDependentFile`,\r\n  which now includes
  a hash. See\r\n  [yesodweb/yesod#1551](https://github.com/yesodweb/yesod/issues/1551)\r\n*
  Fix `subdirs` for git repos in `extra-deps` to match whole directory names.\r\n
  \ Also fixes for `subdirs: .`. See\r\n  [#4292](https://github.com/commercialhaskell/stack/issues/4292)\r\n*
  Fix for git packages to update submodules to the correct state. See\r\n  [#4314](https://github.com/commercialhaskell/stack/pull/4314)\r\n*
  Add `--cabal-files` flag to `stack ide targets` command.\r\n* Don't download ghc
  when using `stack clean`.\r\n* Support loading in GHCi definitions from symlinked
  C files. Without this\r\n  patch, Stack will try to find object files in the directory
  pointed to\r\n  by symlinks, while GCC will produce the object files in the original\r\n
  \ directory. See\r\n  [#4402](https://github.com/commercialhaskell/stack/pull/4402)\r\n*
  Fix handling of GitHub and URL templates on Windows. See\r\n  [#4394](https://github.com/commercialhaskell/stack/issues/4394)\r\n*
  Fix `--file-watch` not responding to file modifications when running\r\n  inside
  docker on Mac. See\r\n  [#4506](https://github.com/commercialhaskell/stack/issues/4506)\r\n*
  Using `--ghc-options` with `stack script --compile` now works.\r\n* Ensure the detailed-0.9
  type tests work.\r\n  See [#4453](https://github.com/commercialhaskell/stack/issues/4453).\r\n*
  Extra include and lib dirs are now order-dependent. See\r\n  [#4527](https://github.com/commercialhaskell/stack/issues/4527).\r\n*
  Apply GHC options when building a `Setup.hs` file. See\r\n  [#4526](https://github.com/commercialhaskell/stack/issues/4526).\r\n*
  Stack handles ABI changes in FreeBSD 12 by differentiating that version from\r\n
  \ previous.\r\n* Help text for the `templates` subcommand now reflects behaviour
  in Stack 1.9\r\n  — that it downloads and shows a help file, rather than listing
  available\r\n  templates.\r\n* Fix detection of aarch64 platform (this broke when
  we upgraded to a newer\r\n  Cabal version).\r\n* Docker: fix detecting and pulling
  missing images with `--docker-auto-pull`.\r\n  See\r\n  [#4598](https://github.com/commercialhaskell/stack/issues/4598)\r\n*
  Hackage credentials are not world-readable. See\r\n  [#2159](https://github.com/commercialhaskell/stack/issues/2159).\r\n*
  Warnings are dumped from logs even when color is enabled. See\r\n  [#2997](https://github.com/commercialhaskell/stack/issues/2997)\r\n*
  `stack init` will now work for Cabal files with sublibraries. See\r\n  [#4408](https://github.com/commercialhaskell/stack/issues/4408)\r\n*
  When the Cabal spec version is newer than the global Cabal version, build\r\n  against
  the snapshot's Cabal library. See\r\n  [#4488](https://github.com/commercialhaskell/stack/issues/4488)\r\n*
  Docker: fix detection of expected subprocess failures.  This fixes\r\n  downloading
  a compatible `stack` executable  when the host `stack` is not\r\n  compatible with
  the Docker image (on Linux), and doesn't show an unnecessary\r\n  extra error when
  the in-container re-exec'ed `stack` exits with failure.\r\n* The `stack ghci` command's
  `--ghc-options` flag now parses multiple options.\r\n  See [#3315](https://github.com/commercialhaskell/stack/issues/3315).\r\n\r\n\r\n##
  v1.9.3.1 - 2019-04-18\r\n\r\nHackage-only release with no user facing changes (added
  compatibility\r\nwith `rio-0.1.9.2`).\r\n\r\n\r\n## v1.9.3 - 2018-12-02\r\n\r\nBug
  fixes:\r\n\r\n* Stack can now be compiled again inside a directory that does not\r\n
  \ contain a `.git` directory. See\r\n  [#4364](https://github.com/commercialhaskell/stack/issues/4364#issuecomment-431600841)\r\n*
  Handle a change in GHC's hi-dump format around `addDependentFile`,\r\n  which now
  includes a hash. See\r\n  [yesodweb/yesod#1551](https://github.com/yesodweb/yesod/issues/1551)\r\n*
  Allow variables to appear in template file names.\r\n\r\n\r\n## v1.9.1.1 - 2018-11-14\r\n\r\nHackage-only
  release with no user facing changes.\r\n\r\n* Stack can now be compiled again inside
  a directory that does not\r\n  contain a `.git` directory. See\r\n  [#4364](https://github.com/commercialhaskell/stack/issues/4364#issuecomment-431600841)\r\n\r\n\r\n##
  v1.9.1 - 2018-10-17\r\n\r\nRelease notes:\r\n\r\n* Statically linked Linux bindists
  are back again, thanks to\r\n  [@nh2](https://github.com/nh2).\r\n* We will be deleting
  the Ubuntu, Debian, CentOS, Fedora, and Arch package repos\r\n  from `download.fpcomplete.com`
  soon. These have been deprecated for over a\r\n  year and have not received new
  releases, but were left in place for\r\n  compatibility with older scripts.\r\n\r\nMajor
  changes:\r\n\r\n* Upgrade to Cabal 2.4\r\n    * Note that, in this process, the
  behavior of file globbing has\r\n      been modified to match that of Cabal. In
  particular, this means\r\n      that for Cabal spec versions less than 2.4, `*.txt`
  will\r\n      match `foo.txt`, but not `foo.2.txt`.\r\n* `GHCJS` support is being
  downgraded to 'experimental'. A warning notifying the\r\n  user of the experimental
  status of `GHCJS` will be displayed.\r\n\r\nBehavior changes:\r\n\r\n* `ghc-options`
  from `stack.yaml` are now appended to `ghc-options` from\r\n  `config.yaml`, whereas
  before they would be replaced.\r\n* `stack build` will now announce when sublibraries
  of a package are being\r\n  build, in the same way executables, tests, benchmarks
  and libraries are\r\n  announced\r\n* `stack sdist` will now announce the destination
  of the generated tarball,\r\n    regardless of whether or not it passed the sanity
  checks\r\n* The `--upgrade-cabal` option to `stack setup` has been\r\n  deprecated.
  This feature no longer works with GHC 8.2 and\r\n  later. Furthermore, the reason
  for this flag originally being\r\n  implemented was drastically lessened once Stack
  started using the\r\n  snapshot's `Cabal` library for custom setups. See:\r\n  [#4070](https://github.com/commercialhaskell/stack/issues/4070).\r\n*
  With the new namespaced template feature, `stack templates` is no\r\n  longer able
  to meaningfully display a list of all templates\r\n  available. Instead, the command
  will download and display a\r\n  [help file](https://github.com/commercialhaskell/stack-templates/blob/master/STACK_HELP.md)\r\n
  \ with more information on how to discover templates. See:\r\n  [#4039](https://github.com/commercialhaskell/stack/issues/4039)\r\n*
  Tools used during building ('build tools') are now handled in a similar way to\r\n
  \ `cabal-install`. In particular, for legacy `build-tools` fields, we use a\r\n
  \ hard-coded list of build tools in place of looking up build tool packages in a\r\n
  \ tool map. This both brings Stack's behavior closer into line with\r\n  `cabal-install`,
  avoids some bugs, and opens up some possible\r\n  optimizations/laziness. See:\r\n
  \ [#4125](https://github.com/commercialhaskell/stack/issues/4125).\r\n* Mustache
  templating is not applied to large files (over 50kb) to\r\n  avoid performance degradation.
  See:\r\n  [#4133](https://github.com/commercialhaskell/stack/issues/4133).\r\n*
  `stack upload` signs the package by default, as documented. `--no-signature`\r\n
  \ turns the signing off.\r\n  [#3739](https://github.com/commercialhaskell/stack/issues/3739)\r\n*
  In case there is a network connectivity issue while trying to\r\n  download a template,
  Stack will check whether that template had\r\n  been downloaded before. In that
  case, the cached version will be\r\n  used. See [#3850](https://github.com/commercialhaskell/stack/issues/3850).\r\n*
  In Stack's script interpreter, `-- stack --verbosity=info script` and\r\n  `-- stack
  script --verbosity=info` now have the same effect and both override\r\n  the `--verbosity=error`
  default in the interpreter. Previously the default\r\n  meant the former was equivalent
  to\r\n  `-- stack --verbosity=info script --verbosity=error` and the latter was\r\n
  \ equivalent to `-- stack --verbosity=error script --verbosity=info`, with the\r\n
  \ subcommand's global option having precedence over the Stack command's\r\n  global
  option in each case. See\r\n  [#5326](https://github.com/commercialhaskell/stack/issues/5326).\r\n\r\nOther
  enhancements:\r\n\r\n* On Windows before Windows 10, --color=never is the default
  on terminals that\r\n  can support ANSI color codes in output only by emulation\r\n*
  On Windows, recognise a 'mintty' (false) terminal as a terminal, by default\r\n*
  `stack build` issues a warning when `base` is explicitly listed in\r\n  `extra-deps`
  of `stack.yaml`\r\n* `stack build` suggests trying another GHC version should the
  build\r\n  plan end up requiring unattainable `base` version.\r\n* A new sub command
  `run` has been introduced to build and run a specified\r\n  executable similar to
  `cabal run`. If no executable is provided as the first\r\n  argument, it defaults
  to the first available executable in the project.\r\n* `stack build` missing dependency
  suggestions (on failure to construct a valid\r\n  build plan because of missing
  deps) are now printed with their latest Cabal\r\n  file revision hash. See\r\n  [#4068](https://github.com/commercialhaskell/stack/pull/4068).\r\n*
  Added new `--tar-dir` option to `stack sdist`, that allows to copy\r\n  the resulting
  tarball to the specified directory.\r\n* Introduced the `--interleaved-output` command
  line option and\r\n  `build.interleaved-output` config value which causes multiple
  concurrent\r\n  builds to dump to stderr at the same time with a `packagename> `
  prefix. See\r\n  [#3225](https://github.com/commercialhaskell/stack/issues/3225).\r\n*
  The default retry strategy has changed to exponential backoff.\r\n  This should
  help with\r\n  [#3510](https://github.com/commercialhaskell/stack/issues/3510).\r\n*
  `stack new` now allows template names of the form `username/foo` to\r\n  download
  from a user other than `commercialstack` on GitHub, and can be\r\n  prefixed with
  the service `github:`, `gitlab:`, or `bitbucket:`. See\r\n  [#4039](https://github.com/commercialhaskell/stack/issues/4039)\r\n*
  Switch to `githash` to include some unmerged bugfixes in `gitrev`\r\n  Suggestion
  to add `'allow-newer': true` now shows path to user config\r\n  file where this
  flag should be put into\r\n  [#3685](https://github.com/commercialhaskell/stack/issues/3685)\r\n*
  `stack ghci` now asks which main target to load before doing the build,\r\n  rather
  than after\r\n* Bump to Hpack 0.29.0\r\n* With GHC 8.4 and later, Haddock is given
  the `--quickjump` flag.\r\n* It is possible to specify the Hackage base URL to upload
  packages to, instead\r\n  of the default of `https://hackage.haskell.org/`, by using
  `hackage-base-url`\r\n  configuration option.\r\n* When using Nix, if a specific
  minor version of GHC is not requested, the\r\n  latest minor version in the given
  major branch will be used automatically.\r\n\r\nBug fixes:\r\n\r\n* `stack ghci`
  now does not invalidate `.o` files on repeated runs,\r\n  meaning any modules compiled
  with `-fobject-code` will be cached\r\n  between ghci runs. See\r\n  [#4038](https://github.com/commercialhaskell/stack/pull/4038).\r\n*
  `~/.stack/config.yaml` and `stack.yaml` terminating by newline\r\n* The previous
  released caused a regression where some `stderr` from the\r\n  `ghc-pkg` command
  showed up in the terminal. This output is now silenced.\r\n* A regression in recompilation
  checking introduced in v1.7.1 has been fixed.\r\n  See [#4001](https://github.com/commercialhaskell/stack/issues/4001)\r\n*
  `stack ghci` on a package with internal libraries was erroneously looking\r\n  for
  a wrong package corresponding to the internal library and failing to\r\n  load any
  module. This has been fixed now and changes to the code in the\r\n  library and
  the sublibrary are properly tracked. See\r\n  [#3926](https://github.com/commercialhaskell/stack/issues/3926).\r\n*
  For packages with internal libraries not depended upon, `stack build` used\r\n  to
  fail the build process since the internal library was not built but it\r\n  was
  tried to be registered. This is now fixed by always building internal\r\n  libraries.
  See\r\n  [#3996](https://github.com/commercialhaskell/stack/issues/3996).\r\n* `--no-nix`
  was not respected under NixOS\r\n* Fix a regression which might use a lot of RAM.
  See\r\n  [#4027](https://github.com/commercialhaskell/stack/issues/4027).\r\n* Order
  of commandline arguments does not matter anymore.\r\n  See [#3959](https://github.com/commercialhaskell/stack/issues/3959)\r\n*
  When prompting users about saving their Hackage credentials on upload,\r\n  flush
  to stdout before waiting for the response so the prompt actually\r\n  displays.
  Also fixes a similar issue with ghci target selection prompt.\r\n* If `cabal` is
  not on PATH, running `stack solver` now prompts the user\r\n  to run `stack install
  cabal-install`\r\n* `stack build` now succeeds in building packages which contain
  sublibraries\r\n  which are dependencies of executables, tests or benchmarks but
  not of the\r\n  main library. See\r\n  [#3787](https://github.com/commercialhaskell/stack/issues/3787).\r\n*
  Sublibraries are now properly considered for coverage reports when the test\r\n
  \ suite depends on the internal library. Before, Stack was erroring when\r\n  trying
  to generate the coverage report, see\r\n  [#4105](https://github.com/commercialhaskell/stack/issues/4105).\r\n*
  Sublibraries are now added to the precompiled cache and recovered from there\r\n
  \ when the snapshot gets updated. Previously, updating the snapshot when there\r\n
  \ was a package with a sublibrary in the snapshot resulted in broken builds.\r\n
  \ This is now fixed, see\r\n  [#4071](https://github.com/commercialhaskell/stack/issues/4071).\r\n*
  [#4114](https://github.com/commercialhaskell/stack/issues/4114) Stack pretty\r\n
  \ prints error messages with proper `error` logging level instead of `warning`\r\n
  \ now. This also fixes self-executing scripts not piping plan construction\r\n  errors
  from runhaskell to terminal (issue\r\n  [#3942](https://github.com/commercialhaskell/stack/issues/3942)).\r\n*
  Fix invalid \"While building Setup.hs\" when Cabal calls fail. See:\r\n  [#3934](https://github.com/commercialhaskell/stack/issues/3934)\r\n*
  `stack upload` signs the package by default, as documented. `--no-signature`\r\n
  \ turns the signing off.\r\n  [#3739](https://github.com/commercialhaskell/stack/issues/3739)\r\n\r\n\r\n##
  v1.7.1 - 2018-04-27\r\n\r\nRelease notes:\r\n\r\n* aarch64 (64-bit ARM) bindists
  are now available for the first time.\r\n* Statically linked Linux bindists are
  no longer available, due to difficulty\r\n  with GHC 8.2.2 on Alpine Linux.\r\n*
  32-bit Linux GMP4 bindists for CentOS 6 are no longer available, since\r\n  GHC
  8.2.2 is no longer being built for that platform.\r\n\r\nMajor changes:\r\n\r\n*
  Upgrade from Cabal 2.0 to Cabal 2.2\r\n\r\nBehavior changes:\r\n\r\n* `stack setup`
  no longer uses different GHC configure options on Linux\r\n  distributions that
  use GCC with PIE enabled by default.  GHC detects\r\n  this itself since ghc-8.0.2,
  and Stack's attempted workaround for older\r\n  versions caused more problems than
  it solved.\r\n* `stack new` no longer initializes a project if the project template
  contains\r\n   a `stack.yaml` file.\r\n\r\nOther enhancements:\r\n\r\n* A new sub
  command `ls` has been introduced to Stack to view\r\n  local and remote snapshots
  present in the system. Use `stack ls\r\n  snapshots --help` to get more details
  about it.\r\n* `list-dependencies` has been deprecated. The functionality has\r\n
  \ to accessed through the new `ls dependencies` interface. See\r\n  [#3669](https://github.com/commercialhaskell/stack/issues/3669)\r\n
  \ for details.\r\n* Specify User-Agent HTTP request header on every HTTP request.\r\n
  \ See [#3628](https://github.com/commercialhaskell/stack/issues/3628) for details.\r\n*
  `stack setup` looks for GHC bindists and installations by any OS key\r\n  that is
  compatible (rather than only checking a single one).   This is\r\n  relevant on
  Linux where different distributions may have different\r\n  combinations of libtinfo
  5/6, ncurses 5/6, and gmp 4/5, and will allow\r\n  simplifying the setup-info metadata
  YAML for future GHC releases.\r\n* The build progress bar reports names of packages
  currently building.\r\n* `stack setup --verbose` causes verbose output of GHC configure
  process.\r\n  See [#3716](https://github.com/commercialhaskell/stack/issues/3716)\r\n*
  Improve the error message when an `extra-dep` from a path or git reference\r\n  can't
  be found. See\r\n  [#3808](https://github.com/commercialhaskell/stack/pull/3808)\r\n*
  Nix integration is now disabled on windows even if explicitly enabled,\r\n  since
  it isn't supported. See\r\n  [#3600](https://github.com/commercialhaskell/stack/issues/3600)\r\n*
  `stack build` now supports a new flag `--keep-tmp-files` to retain\r\n  intermediate
  files and directories for the purpose of debugging. It is best\r\n  used with ghc's
  equivalent flag,\r\n  i.e. `stack build --keep-tmp-files --ghc-options=-keep-tmp-files`.\r\n
  \ See [#3857](https://github.com/commercialhaskell/stack/issues/3857)\r\n* Improved
  error messages for snapshot parse exceptions\r\n* `stack unpack` now supports a
  `--to /target/directory` option to\r\n  specify where to unpack the package into\r\n*
  `stack hoogle` now supports a new flag `--server` that launches local\r\n  Hoogle
  server on port 8080. See\r\n  [#2310](https://github.com/commercialhaskell/stack/issues/2310)\r\n\r\nBug
  fixes:\r\n\r\n* The script interpreter's implicit file arguments are now passed
  before other\r\n  arguments. See\r\n  [#3658](https://github.com/commercialhaskell/stack/issues/3658).\r\n
  \ In particular, this makes it possible to pass `-- +RTS ... -RTS` to specify\r\n
  \ RTS arguments used when running the script.\r\n* Don't ignore the template `year`
  parameter in config files, and clarify the\r\n  surrounding documentation. See\r\n
  \ [#2275](https://github.com/commercialhaskell/stack/issues/2275).\r\n* Benchmarks
  used to be run concurrently with other benchmarks\r\n  and build steps. This is
  non-ideal because CPU usage of other processes\r\n  may interfere with benchmarks.
  It also prevented benchmark output from\r\n  being displayed by default. This is
  now fixed. See\r\n  [#3663](https://github.com/commercialhaskell/stack/issues/3663).\r\n*
  `stack ghci` now allows loading multiple packages with the same\r\n  module name,
  as long as they have the same filepath. See\r\n  [#3776](https://github.com/commercialhaskell/stack/pull/3776).\r\n*
  `stack ghci` no longer always adds a dependency on `base`. It is\r\n  now only added
  when there are no local targets. This allows it to\r\n  be to load code that uses
  replacements for `base`. See\r\n  [#3589](https://github.com/commercialhaskell/stack/issues/3589#issuecomment)\r\n*
  `stack ghci` now uses correct paths for autogen files with\r\n  [#3791](https://github.com/commercialhaskell/stack/issues/3791)\r\n*
  When a package contained sublibraries, Stack was always recompiling the\r\n  package.
  This has been fixed now, no recompilation is being done because of\r\n  sublibraries.
  See\r\n  [#3899](https://github.com/commercialhaskell/stack/issues/3899).\r\n* The
  `get-stack.sh` install script now matches manual instructions\r\n  when it comes
  to Debian/Fedora/CentOS install dependencies.\r\n* Compile Cabal-simple with gmp
  when using Nix.\r\n  See [#2944](https://github.com/commercialhaskell/stack/issues/2944)\r\n*
  `stack ghci` now replaces the Stack process with ghci. This improves\r\n  signal
  handling behavior. In particular, handling of Ctrl-C.  To make\r\n  this possible,
  the generated files are now left behind after exit.\r\n  The paths are based on
  hashing file contents, and it's stored in the\r\n  system temporary directory, so
  this shouldn't result in too much\r\n  garbage. See\r\n  [#3821](https://github.com/commercialhaskell/stack/issues/3821).\r\n\r\n\r\n##
  v1.6.5 - 2018-02-19\r\n\r\nBug fixes:\r\n\r\n* Some unnecessary rebuilds when no
  files were changed are now avoided, by\r\n  having a separate build cache for each
  component of a package. See\r\n  [#3732](https://github.com/commercialhaskell/stack/issues/3732).\r\n*
  Correct the behavior of promoting a package from snapshot to local\r\n  package.
  This would get triggered when version bounds conflicted in\r\n  a snapshot, which
  could be triggered via Hackage revisions for old\r\n  packages. This also should
  allow custom snapshots to define\r\n  conflicting versions of packages without issue.
  See\r\n  [Stackage issue #3185](https://github.com/fpco/stackage/issues/3185).\r\n*
  When promoting packages from snapshot to local, we were\r\n  occasionally discarding
  the actual package location content and\r\n  instead defaulting to pulling the package
  from the index. We now\r\n  correctly retain this information. Note that if you
  were affected by\r\n  this bug, you will likely need to delete the binary build
  cache\r\n  associated with the relevant custom snapshot. See\r\n  [#3714](https://github.com/commercialhaskell/stack/issues/3714).\r\n*
  `--no-rerun-tests` has been fixed. Previously, after running a test\r\n  we were
  forgetting to record the result, which meant that all tests\r\n  always ran even
  if they had already passed before. See\r\n  [#3770](https://github.com/commercialhaskell/stack/pull/3770).\r\n*
  Includes a patched version of `hackage-security` which fixes both\r\n  some issues
  around asynchronous exception handling, and moves from\r\n  directory locking to
  file locking, making the update mechanism\r\n  resilient against SIGKILL and machine
  failure. See `hackage-security` issue\r\n  [#187](https://github.com/haskell/hackage-security/issues/187)\r\n
  \ and Stack issue\r\n  [#3073](https://github.com/commercialhaskell/stack/issues/3073).\r\n\r\n##
  v1.6.3.1 - 2018-02-16\r\n\r\nHackage-only release with no user facing changes (updated
  to build with\r\nnewer version of Hpack dependency).\r\n\r\n## v1.6.3 - 2017-12-23\r\n\r\nEnhancements:\r\n\r\n*
  In addition to supporting `.tar.gz` and `.zip` files as remote archives,\r\n  plain
  `.tar` files are now accepted too. This will additionally help with\r\n  cases where
  HTTP servers mistakenly set the transfer encoding to `gzip`. See\r\n  [#3647](https://github.com/commercialhaskell/stack/issues/3647).\r\n*
  Links to docs.haskellstack.org ignore Stack version patchlevel.\r\n* Downloading
  Docker-compatible `stack` binary ignores Stack version patchlevel.\r\n\r\nBug fixes:\r\n\r\n*
  For versions of Cabal before 1.24, ensure that the dependencies of\r\n  non-buildable
  components are part of the build plan to work around an old\r\n  Cabal bug. See\r\n
  \ [#3631](https://github.com/commercialhaskell/stack/issues/3631).\r\n* Run the
  Cabal file checking in the `sdist` command more reliably by\r\n  allowing the Cabal
  library to flatten the\r\n  `GenericPackageDescription` itself.\r\n\r\n## v1.6.1.1
  - 2017-12-20\r\n\r\nHackage-only release with no user facing changes (updated to
  build with\r\nnewer dependency versions).\r\n\r\n## v1.6.1 - 2017-12-07\r\n\r\nMajor
  changes:\r\n\r\n* Complete overhaul of how snapshots are defined, the `packages`
  and\r\n  `extra-deps` keys, and a number of related items. For full\r\n  details,
  please see the\r\n  [writeup](https://www.fpcomplete.com/blog/2017/07/stacks-new-extensible-snapshots)\r\n
  \ on these changes.\r\n  [PR #3249](https://github.com/commercialhaskell/stack/pull/3249),\r\n
  \ see the PR description for a number of related issues.\r\n* Upgraded to version
  2.0 of the Cabal library.\r\n\r\nBehavior changes:\r\n\r\n* The `--install-ghc`
  flag is now on by default. For example, if you\r\n  run `stack build` in a directory
  requiring a GHC that you do not\r\n  currently have, Stack will automatically download
  and install that\r\n  GHC. You can explicitly set `install-ghc: false` or pass the
  flag\r\n  `--no-install-ghc` to regain the previous behavior.\r\n* `stack ghci`
  no longer loads modules grouped by package. This is\r\n  always an improvement for
  plain ghci - it makes loading faster and\r\n  less noisy. For intero, this has the
  side-effect that it will no\r\n  longer load multiple packages that depend on TH
  loading relative\r\n  paths.  TH relative paths will still work when loading a single\r\n
  \ package into intero. See\r\n  [#3309](https://github.com/commercialhaskell/stack/issues/3309)\r\n*
  Setting GHC options for a package via `ghc-options:` in your\r\n  `stack.yaml` will
  promote it to a local package, providing for more\r\n  consistency with flags and
  better reproducibility. See:\r\n  [#849](https://github.com/commercialhaskell/stack/issues/849)\r\n*
  The `package-indices` setting with Hackage no longer works with the\r\n  `00-index.tar.gz`
  tarball, but must use the `01-index.tar.gz` file\r\n  to allow revised packages
  to be found.\r\n* Options passed via `--ghci-options` are now passed to the end
  of the\r\n  invocation of ghci, instead of the middle.  This allows using `+RTS`\r\n
  \ without an accompanying `-RTS`.\r\n* When auto-detecting `--ghc-build`, `tinfo6`
  is now preferred over\r\n  `standard` if both versions of libtinfo are installed\r\n*
  Addition of `stack build --copy-compiler-tool`, to allow tools like\r\n  intero
  to be installed globally for a particular compiler.\r\n  [#2643](https://github.com/commercialhaskell/stack/issues/2643)\r\n*
  Stack will ask before saving hackage credentials to file. This new\r\n  prompt can
  be avoided by using the `save-hackage-creds` setting. Please\r\n  see [#2159](https://github.com/commercialhaskell/stack/issues/2159).\r\n*
  The `GHCRTS` environment variable will no longer be passed through to\r\n  every
  program Stack runs. Instead, it will only be passed through\r\n  commands like `exec`,
  `runghc`, `script`, `ghci`, etc.\r\n  See [#3444](https://github.com/commercialhaskell/stack/issues/3444).\r\n*
  `ghc-options:` for specific packages will now come after the options\r\n  specified
  for all packages / particular sets of packages. See\r\n  [#3573](https://github.com/commercialhaskell/stack/issues/3573).\r\n*
  The `pvp-bounds` feature is no longer fully functional, due to some\r\n  issues
  with the Cabal library's printer. See\r\n  [#3550](https://github.com/commercialhaskell/stack/issues/3550).\r\n\r\nOther
  enhancements:\r\n\r\n* The `with-hpack` configuration option specifies an Hpack
  executable to use\r\n  instead of the Hpack bundled with Stack. Please\r\n  see
  [#3179](https://github.com/commercialhaskell/stack/issues/3179).\r\n* It's now possible
  to skip tests and benchmarks using `--skip`\r\n  flag\r\n* `GitSHA1` is now `StaticSHA256`
  and is implemented using the\r\n  `StaticSize 64 ByteString` for improved performance.
  See\r\n  [#3006](https://github.com/commercialhaskell/stack/issues/3006)\r\n* Dependencies
  via HTTP(S) archives have been generalized to allow\r\n  local file path archives,
  as well as to support setting a\r\n  cryptographic hash (SHA256) of the contents
  for better\r\n  reproducibility.\r\n* Allow specifying `--git-branch` when upgrading\r\n*
  When running `stack upgrade` from a file which is different from the\r\n  default
  executable path (e.g., on POSIX systems,\r\n  `~/.local/bin/stack`), it will now
  additionally copy the new\r\n  executable over the currently running `stack` executable.
  If\r\n  permission is denied (such as in `/usr/local/bin/stack`), the user\r\n  will
  be prompted to try again using `sudo`. This is intended to\r\n  assist with the
  user experience when the `PATH` environment variable\r\n  has not been properly
  configured, see\r\n  [#3232](https://github.com/commercialhaskell/stack/issues/3232).\r\n*
  `stack setup` for ghcjs will now install `alex` and `happy` if\r\n  they are not
  present.  See\r\n  [#3109](https://github.com/commercialhaskell/stack/issues/3232).\r\n*
  Added `stack ghci --only-main` flag, to skip loading / importing\r\n  all but main
  modules. See the ghci documentation page\r\n  for further info.\r\n* Allow GHC's
  colored output to show through. GHC colors output\r\n  starting with version 8.2.1,
  for older GHC this does nothing.\r\n  Sometimes GHC's heuristics would work fine
  even before this change,\r\n  for example in `stack ghci`, but this override's GHC's
  heuristics\r\n  when they're broken by our collecting and processing GHC's output.\r\n*
  Extended the `ghc-options` key to support `$locals`, `$targets`,\r\n  and `$everything`.
  See:\r\n  [#3329](https://github.com/commercialhaskell/stack/issues/3329)\r\n* Better
  error message for case that `stack ghci` file targets are\r\n  combined with invalid
  package targets. See:\r\n  [#3342](https://github.com/commercialhaskell/stack/issues/3342)\r\n*
  For profiling now uses `-fprof-auto -fprof-cafs` instead of\r\n  the deprecated
  `-auto-all -caf-all`. See:\r\n  [#3360](https://github.com/commercialhaskell/stack/issues/3360)\r\n*
  Better descriptions are now available for `stack upgrade --help`. See:\r\n  [#3070](https://github.com/commercialhaskell/stack/issues/3070)\r\n*
  When using Nix, nix-shell now depends always on gcc to prevent build errors\r\n
  \ when using the FFI. As ghc depends on gcc anyway, this doesn't increase the\r\n
  \ dependency footprint.\r\n* `--cwd DIR` can now be passed to `stack exec` in order
  to execute the\r\n  program in a different directory. See:\r\n  [#3264](https://github.com/commercialhaskell/stack/issues/3264)\r\n*
  Plan construction will detect if you add an executable-only package\r\n  as a library
  dependency, resulting in much clearer error\r\n  messages. See:\r\n  [#2195](https://github.com/commercialhaskell/stack/issues/2195).\r\n*
  Addition of `--ghc-options` to `stack script` to pass options directly\r\n  to GHC.
  See:\r\n  [#3454](https://github.com/commercialhaskell/stack/issues/3454)\r\n* Add
  Hpack `package.yaml` to build Stack itself\r\n* Add `ignore-revision-mismatch` setting.
  See:\r\n  [#3520](https://github.com/commercialhaskell/stack/issues/3520).\r\n*
  Log when each individual test suite finishes. See:\r\n  [#3552](https://github.com/commercialhaskell/stack/issues/3552).\r\n*
  Avoid spurious rebuilds when using `--file-watch` by not watching files for\r\n
  \ executable, test and benchmark components that aren't a target. See:\r\n  [#3483](https://github.com/commercialhaskell/stack/issues/3483).\r\n*
  Stack will now try to detect the width of the running terminal\r\n  (only on POSIX
  for the moment) and use that to better display\r\n  output messages. Work is ongoing,
  so some messages will not\r\n  be optimal yet. The terminal width can be overridden
  with the\r\n  new `--terminal-width` command-line option (this works even on\r\n
  \ non-POSIX).\r\n* Passing non local packages as targets to `stack ghci` will now\r\n
  \ cause them to be used as `-package` args along with package\r\n  hiding.\r\n*
  Detect when user changed Cabal file instead of `package.yaml`. This\r\n  was implemented
  upstream in Hpack. See\r\n  [#3383](https://github.com/commercialhaskell/stack/issues/3383).\r\n*
  Automatically run `autoreconf -i` as necessary when a `configure`\r\n  script is
  missing. See\r\n  [#3534](https://github.com/commercialhaskell/stack/issues/3534)\r\n*
  GHC bindists can now be identified by their SHA256 checksum in addition to\r\n  their
  SHA1 checksum, allowing for more security in download.\r\n* For filesystem setup-info
  paths, it's no longer assumed that the\r\n  directory is writable, instead a temp
  dir is used.  See\r\n  [#3188](https://github.com/commercialhaskell/stack/issues/3188).\r\n\r\nBug
  fixes:\r\n\r\n* `stack hoogle` correctly generates Hoogle databases. See:\r\n  [#3362](https://github.com/commercialhaskell/stack/issues/3362)\r\n*
  `stack --docker-help` is now clearer about --docker implying\r\n   system-ghc: true,
  rather than both --docker and --no-docker.\r\n* `stack haddock` now includes package
  names for all modules in the\r\n   Haddock index page. See:\r\n  [#2886](https://github.com/commercialhaskell/stack/issues/2886)\r\n*
  Fixed an issue where Stack wouldn't detect missing Docker images\r\n  properly with
  newer Docker versions.\r\n  [#3171](https://github.com/commercialhaskell/stack/pull/3171)\r\n*
  Previously, Cabal files with just test-suite could cause build to fail\r\n  ([#2862](https://github.com/commercialhaskell/stack/issues/2862))\r\n*
  If an invalid snapshot file has been detected (usually due to\r\n  mismatched hashes),
  Stack will delete the downloaded file and\r\n  recommend either retrying or filing
  an issue upstream. See\r\n  [#3319](https://github.com/commercialhaskell/stack/issues/3319).\r\n*
  Modified the flag parser within Stack to match the behavior of\r\n  Cabal's flag
  parser, which allows multiple sequential dashes. See\r\n  [#3345](https://github.com/commercialhaskell/stack/issues/3345)\r\n*
  Now clears the hackage index cache if it is older than the\r\n  downloaded index.
  \ Fixes potential issue if Stack was interrupted when\r\n  updating index.\r\n  See
  [#3033](https://github.com/commercialhaskell/stack/issues/3033)\r\n* The Stack install
  script now respects the `-d` option.\r\n  See [#3366](https://github.com/commercialhaskell/stack/pull/3366).\r\n*
  `stack script` can now handle relative paths to source files.\r\n  See [#3372](https://github.com/commercialhaskell/stack/issues/3372).\r\n*
  Fixes explanation of why a target is needed by the build plan, when the\r\n  target
  is an extra-dep from the commandline.\r\n  See [#3378](https://github.com/commercialhaskell/stack/issues/3378).\r\n*
  Previously, if you delete a yaml file from ~/.stack/build-plan, it would\r\n  trust
  the etag and not re-download.  Fixed in this version.\r\n* Invoking `stack --docker`
  in parallel now correctly locks the sqlite database.\r\n  See [#3400](https://github.com/commercialhaskell/stack/issues/3400).\r\n*
  docs.haskellstack.org RTD documentation search is replaced by the mkdocs\r\n  search.
  Please see\r\n  [#3376](https://github.com/commercialhaskell/stack/issues/3376).\r\n*
  `stack clean` now works with nix.  See\r\n  [#3468](https://github.com/commercialhaskell/stack/issues/3376).\r\n*
  `stack build --only-dependencies` no longer builds local project packages\r\n  that
  are depended on. See\r\n  [#3476](https://github.com/commercialhaskell/stack/issues/3476).\r\n*
  Properly handle relative paths stored in the precompiled cache files. See\r\n  [#3431](https://github.com/commercialhaskell/stack/issues/3431).\r\n*
  In some cases, Cabal does not realize that it needs to reconfigure, and must\r\n
  \ be told to do so automatically. This would manifest as a \"shadowed\r\n  dependency\"
  error message. We now force a reconfigure whenever a dependency is\r\n  built, even
  if the package ID remained the same. See\r\n  [#2781](https://github.com/commercialhaskell/stack/issues/2781).\r\n*
  When `--pvp-bounds` is enabled for sdist or upload, internal\r\n  dependencies could
  cause errors when uploaded to hackage.  This is\r\n  fixed, see [#3290](https://github.com/commercialhaskell/stack/issues/3290)\r\n*
  Fixes a bug where nonexistent hackage versions would cause Stack to\r\n  suggest
  the same package name, without giving version info. See\r\n  [#3562](https://github.com/commercialhaskell/stack/issues/3562)\r\n*
  Fixes a bug that has existed since 1.5.0, where\r\n  `stack setup --upgrade-cabal`
  would say that Cabal is already the latest\r\n  version, when it wasn't.\r\n* Ensure
  that an `extra-dep` from a local directory is not treated as\r\n  a `$locals` for
  GHC options purposes. See\r\n  [#3574](https://github.com/commercialhaskell/stack/issues/3574).\r\n*
  Building all executables only happens once instead of every\r\n  time. See\r\n  [#3229](https://github.com/commercialhaskell/stack/issues/3229)
  for\r\n  more info.\r\n\r\n## 1.5.1 - 2017-08-05\r\n\r\nBug fixes:\r\n\r\n* Stack
  eagerly tries to parse all Cabal files related to a\r\n  snapshot. Starting with
  Stackage Nightly 2017-07-31, snapshots are\r\n  using GHC 8.2.1, and the `ghc.cabal`
  file implicitly referenced uses\r\n  the (not yet supported) Cabal 2.0 file format.
  Future releases of\r\n  Stack will both be less eager about Cabal file parsing and
  support\r\n  Cabal 2.0. This patch simply bypasses the error for invalid parsing.\r\n\r\n##
  1.5.0 - 2017-07-25\r\n\r\nBehavior changes:\r\n\r\n* `stack profile` and `stack
  trace` now add their extra RTS arguments for\r\n  benchmarks and tests to the beginning
  of the args, instead of the end.\r\n  See [#2399](https://github.com/commercialhaskell/stack/issues/2399)\r\n*
  Support for Git-based indices has been removed.\r\n\r\nOther enhancements:\r\n\r\n*
  `stack setup` allow to control options passed to ghcjs-boot with\r\n  `--ghcjs-boot-options`
  (one word at a time) and `--[no-]ghcjs-boot-clean`\r\n* `stack setup` now accepts
  a `--install-cabal VERSION` option which\r\n  will install a specific version of
  the Cabal library globally.\r\n* Updates to store-0.4.1, which has improved performance
  and better error\r\n  reporting for version tags.  A side-effect of this is that
  all of\r\n  stack's binary caches will be invalidated.\r\n* `stack solver` will
  now warn about unexpected `cabal-install` versions.\r\n  See [#3044](https://github.com/commercialhaskell/stack/issues/3044)\r\n*
  Upstream packages unpacked to a temp dir are now deleted as soon as\r\n  possible
  to avoid running out of space in `/tmp`.\r\n  See [#3018](https://github.com/commercialhaskell/stack/issues/3018)\r\n*
  Add short synonyms for `test-arguments` and `benchmark-arguments` options.\r\n*
  Adds `STACK_WORK` environment variable, to specify work dir.\r\n  See [#3063](https://github.com/commercialhaskell/stack/issues/3063)\r\n*
  Can now use relative paths for `extra-include-dirs` and `extra-lib-dirs`.\r\n  See
  [#2830](https://github.com/commercialhaskell/stack/issues/2830)\r\n* Improved bash
  completion for many options, including `--ghc-options`,\r\n  `--flag`, targets,
  and project executables for `exec`.\r\n* `--haddock-arguments` is actually used
  now when `haddock` is invoked\r\n  during documentation generation.\r\n* `--[no-]haddock-hyperlink-source`
  flag added which allows toggling\r\n  of sources being included in Haddock output.\r\n
  \ See [#3099](https://github.com/commercialhaskell/stack/issues/3099)\r\n* `stack
  ghci` will now skip building all local targets, even if they have\r\n  downstream
  deps, as long as it's registered in the DB.\r\n* The `pvp-bounds` feature now supports
  adding `-revision` to the end of each\r\n  value, e.g. `pvp-bounds: both-revision`.
  This means that, when uploading to\r\n  Hackage, Stack will first upload your tarball
  with an unmodified Cabal file,\r\n  and then upload a Cabal file revision with the
  PVP bounds added. This can be\r\n  useful - especially combined with the\r\n  [Stackage
  no-revisions feature](http://www.snoyman.com/blog/2017/04/stackages-no-revisions-field)
  - as\r\n  a method to ensure PVP compliance without having to proactively fix bounds\r\n
  \ issues for Stackage maintenance.\r\n* Expose a `save-hackage-creds` configuration
  option\r\n* On GHC <= 7.8, filters out spurious linker warnings on windows\r\n  See
  [#3127](https://github.com/commercialhaskell/stack/pull/3127)\r\n* Better error
  messages when creating or building packages which alias\r\n  wired-in packages.
  See\r\n  [#3172](https://github.com/commercialhaskell/stack/issues/3172).\r\n* MinGW
  bin folder now is searched for dynamic libraries. See\r\n  [#3126](https://github.com/commercialhaskell/stack/issues/3126)\r\n*
  When using Nix, nix-shell now depends always on git to prevent runtime errors\r\n
  \ while fetching metadata\r\n* Experimental: The `stack unpack` command now accepts
  a form where an explicit\r\n  Hackage revision hash is specified, e.g.\r\n  `stack
  unpack foo-1.2.3@gitsha1:deadbeef`. Note that Stack will likely move\r\n  towards
  a different hash format in the future.\r\n* Binary \"stack upgrade\" will now warn
  if the installed executable is not\r\n  on the PATH or shadowed by another entry.\r\n*
  Allow running tests on tarball created by sdist and upload\r\n  [#717](https://github.com/commercialhaskell/stack/issues/717).\r\n\r\nBug
  fixes:\r\n\r\n* Fixes case where `stack build --profile` might not cause executables
  /\r\n  tests / benchmarks to be rebuilt.\r\n  See [#2984](https://github.com/commercialhaskell/stack/issues/2984)\r\n*
  `stack ghci file.hs` now loads the file even if it isn't part of\r\n  your project.\r\n*
  `stack clean --full` now works when docker is enabled.\r\n  See [#2010](https://github.com/commercialhaskell/stack/issues/2010)\r\n*
  Fixes an issue where cyclic deps can cause benchmarks or tests to be run\r\n  before
  they are built.\r\n  See [#2153](https://github.com/commercialhaskell/stack/issues/2153)\r\n*
  Fixes `stack build --file-watch` in cases where a directory is removed\r\n  See
  [#1838](https://github.com/commercialhaskell/stack/issues/1838)\r\n* Fixes `stack
  dot` and `stack list-dependencies` to use info from the\r\n  package database for
  wired-in-packages (ghc, base, etc).\r\n  See [#3084](https://github.com/commercialhaskell/stack/issues/3084)\r\n*
  Fixes `stack --docker build` when user is part of libvirt/libvirtd\r\n  groups on
  Ubuntu Yakkety (16.10).\r\n  See [#3092](https://github.com/commercialhaskell/stack/issues/3092)\r\n*
  Switching a package between extra-dep and local package now forces\r\n  rebuild
  (previously it wouldn't if versions were the same).\r\n  See [#2147](https://github.com/commercialhaskell/stack/issues/2147)\r\n*
  `stack upload` no longer reveals your password when you type it on\r\n  MinTTY-based
  Windows shells, such as Cygwin and MSYS2.\r\n  See [#3142](https://github.com/commercialhaskell/stack/issues/3142)\r\n*
  `stack script`'s import parser will now properly parse files that\r\n  have Windows-style
  line endings (CRLF)\r\n\r\n\r\n## 1.4.0 - 2017-03-15\r\n\r\nRelease notes:\r\n\r\n*
  Docker images:\r\n  [fpco/stack-full](https://hub.docker.com/r/fpco/stack-full/)
  and\r\n  [fpco/stack-run](https://hub.docker.com/r/fpco/stack-run/)\r\n  are no
  longer being built for LTS 8.0 and above.\r\n  [fpco/stack-build](https://hub.docker.com/r/fpco/stack-build/)\r\n
  \ images continue to be built with a\r\n  [simplified process](https://github.com/commercialhaskell/stack/tree/master/etc/dockerfiles/stack-build).\r\n
  \ [#624](https://github.com/commercialhaskell/stack/issues/624)\r\n\r\nMajor changes:\r\n\r\n*
  A new command, `script`, has been added, intended to make the script\r\n  interpreter
  workflow more reliable, easier to use, and more\r\n  efficient. This command forces
  the user to provide a `--resolver`\r\n  value, ignores all config files for more
  reproducible results, and\r\n  optimizes the existing package check to make the
  common case of all\r\n  packages already being present much faster. This mode does
  require\r\n  that all packages be present in a snapshot, however.\r\n  [#2805](https://github.com/commercialhaskell/stack/issues/2805)\r\n\r\nBehavior
  changes:\r\n\r\n* The default package metadata backend has been changed from Git
  to\r\n  the 01-index.tar.gz file, from the hackage-security project. This is\r\n
  \ intended to address some download speed issues from GitHub for\r\n  people in
  certain geographic regions. There is now full support for\r\n  checking out specific
  Cabal file revisions from downloaded tarballs\r\n  as well. If you manually specify
  a package index with only a Git\r\n  URL, Git will still be used. See\r\n  [#2780](https://github.com/commercialhaskell/stack/issues/2780)\r\n*
  When you provide the `--resolver` argument to the `stack unpack`\r\n  command, any
  packages passed in by name only will be looked up in\r\n  the given snapshot instead
  of taking the latest version. For\r\n  example, `stack --resolver lts-7.14 unpack
  mtl` will get version\r\n  2.2.1 of `mtl`, regardless of the latest version available
  in the\r\n  package indices. This will also force the same Cabal file revision\r\n
  \ to be used as is specified in the snapshot.\r\n\r\n    Unpacking via a package
  identifier (e.g. `stack --resolver lts-7.14\r\n    unpack mtl-2.2.1`) will ignore
  any settings in the snapshot and take\r\n    the most recent revision.\r\n\r\n    For
  backwards compatibility with tools relying on the presence of a\r\n    `00-index.tar`,
  Stack will copy the `01-index.tar` file to\r\n    `00-index.tar`. Note, however,
  that these files are different; most\r\n    importantly, 00-index contains only
  the newest revisions of Cabal\r\n    files, while 01-index contains all versions.
  You may still need to\r\n    update your tooling.\r\n* Passing `--(no-)nix-*` options
  now no longer implies `--nix`, except for\r\n  `--nix-pure`, so that the user preference
  whether or not to use Nix is\r\n  honored even in the presence of options that change
  the Nix behavior.\r\n\r\nOther enhancements:\r\n\r\n* Internal cleanup: configuration
  types are now based much more on lenses\r\n* `stack build` and related commands
  now allow the user to disable debug symbol\r\n  stripping with new `--no-strip`,
  `--no-library-stripping`, and\r\n  `--no-executable-shipping` flags, closing\r\n
  \ [#877](https://github.com/commercialhaskell/stack/issues/877). Also turned\r\n
  \ error message for missing targets more readable\r\n  ([#2384](https://github.com/commercialhaskell/stack/issues/2384))\r\n*
  `stack haddock` now shows index.html paths when documentation is already up to\r\n
  \ date. Resolved [#781](https://github.com/commercialhaskell/stack/issues/781)\r\n*
  Respects the `custom-setup` stanza introduced in Cabal 1.24. This supercedes\r\n
  \ any `explicit-setup-deps` settings in your `stack.yaml` and trusts the\r\n  package's
  Cabal file to explicitly state all its dependencies.\r\n* If system package installation
  fails, `get-stack.sh` will fail as well. Also\r\n  shows warning suggesting to run
  `apt-get update` or similar, depending on the\r\n  OS.\r\n  ([#2898](https://github.com/commercialhaskell/stack/issues/2898))\r\n*
  When `stack ghci` is run with a config with no packages (e.g. global project),\r\n
  \ it will now look for source files in the current work dir.\r\n  ([#2878](https://github.com/commercialhaskell/stack/issues/2878))\r\n*
  Bump to Hpack 0.17.0 to allow `custom-setup` and `!include \"...\"` in\r\n  `package.yaml`.\r\n*
  The script interpreter will now output error logging.  In particular,\r\n  this
  means it will output info about plan construction errors.\r\n  ([#2879](https://github.com/commercialhaskell/stack/issues/2879))\r\n*
  `stack ghci` now takes `--flag` and `--ghc-options` again (inadvertently\r\n  removed
  in 1.3.0).\r\n  ([#2986](https://github.com/commercialhaskell/stack/issues/2986))\r\n*
  `stack exec` now takes `--rts-options` which passes the given arguments inside\r\n
  \ of `+RTS ... args .. -RTS` to the executable. This works around Stack itself\r\n
  \ consuming the RTS flags on Windows.\r\n  ([#2640](https://github.com/commercialhaskell/stack/issues/2640))\r\n*
  Upgraded `http-client-tls` version, which now offers support for the\r\n  `socks5://`
  and `socks5h://` values in the `http_proxy` and `https_proxy`\r\n  environment variables.\r\n\r\nBug
  fixes:\r\n\r\n* Bump to Hpack 0.16.0 to avoid character encoding issues when reading
  and\r\n  writing on non-UTF8 systems.\r\n* `stack ghci` will no longer ignore hsSourceDirs
  that contain `..`.\r\n  ([#2895](https://github.com/commercialhaskell/stack/issues/2895))\r\n*
  `stack list-dependencies --license` now works for wired-in-packages,\r\n  like base.
  ([#2871](https://github.com/commercialhaskell/stack/issues/2871))\r\n* `stack setup`
  now correctly indicates when it uses system ghc\r\n  ([#2963](https://github.com/commercialhaskell/stack/issues/2963))\r\n*
  Fix to `stack config set`, in 1.3.2 it always applied to\r\n  the global project.\r\n
  \ ([#2709](https://github.com/commercialhaskell/stack/issues/2709))\r\n* Previously,
  Cabal files without exe or lib would fail on the \"copy\" step.\r\n  ([#2862](https://github.com/commercialhaskell/stack/issues/2862))\r\n*
  `stack upgrade --git` now works properly.  Workaround for affected\r\n  versions
  (>= 1.3.0) is to instead run `stack upgrade --git --source-only`.\r\n  ([#2977](https://github.com/commercialhaskell/stack/issues/2977))\r\n*
  Added support for GHC 8's slightly different warning format for\r\n  dumping warnings
  from logs.\r\n* Work around a bug in Cabal/GHC in which package IDs are not unique\r\n
  \ for different source code, leading to Stack not always rebuilding\r\n  packages
  depending on local packages which have\r\n  changed. ([#2904](https://github.com/commercialhaskell/stack/issues/2904))\r\n\r\n##
  1.3.2 - 2016-12-27\r\n\r\nBug fixes:\r\n\r\n* `stack config set` can now be used
  without a compiler installed\r\n  [#2852](https://github.com/commercialhaskell/stack/issues/2852).\r\n*
  `get-stack.sh` now installs correct binary on ARM for generic linux and\r\n  raspbian,
  closing\r\n  [#2856](https://github.com/commercialhaskell/stack/issues/2856).\r\n*
  Correct the testing of whether a package database exists by checking\r\n  for the
  `package.cache` file itself instead of the containing\r\n  directory.\r\n* Revert
  a change in the previous release which made it impossible to\r\n  set local extra-dep
  packages as targets. This was overkill; we\r\n  really only wanted to disable their
  test suites, which was already\r\n  handled by a later\r\n  patch. [#2849](https://github.com/commercialhaskell/stack/issues/2849)\r\n*
  `stack new` always treats templates as being UTF-8 encoding,\r\n  ignoring locale
  settings on a local machine. See\r\n  [Yesod mailing list discussion](https://groups.google.com/d/msg/yesodweb/ZyWLsJOtY0c/aejf9E7rCAAJ)\r\n\r\n##
  1.3.0 - 2016-12-12\r\n\r\nRelease notes:\r\n\r\n* For the _next_ Stack release after
  this one, we are planning\r\n  changes to our Linux releases, including dropping
  our Ubuntu,\r\n  Debian, CentOS, and Fedora package repositories and switching to\r\n
  \ statically linked binaries. See\r\n  [#2534](https://github.com/commercialhaskell/stack/issues/2534).\r\n
  \ Note that upgrading without a package manager has gotten easier\r\n  with new
  binary upgrade support in `stack upgrade` (see the Major\r\n  Changes section below
  for more information). In addition, the\r\n  get.haskellstack.org script no longer
  installs from Ubuntu,\r\n  Debian, CentOS, or Fedora package repositories. Instead
  it places\r\n  a generic binary in /usr/local/bin.\r\n\r\nMajor changes:\r\n\r\n*
  Stack will now always use its own GHC installation, even when a suitable GHC\r\n
  \ installation is available on the PATH. To get the old behaviour, use\r\n  the
  `--system-ghc` flag or run `stack config set system-ghc --global true`.\r\n  Docker-
  and Nix-enabled projects continue to use the GHC installations\r\n  in their environment
  by default.\r\n\r\n    NB: Scripts that previously used Stack in combination with
  a system GHC\r\n    installation should now include a `stack setup` line or use
  the\r\n    `--install-ghc` flag.\r\n    [#2221](https://github.com/commercialhaskell/stack/issues/2221)\r\n\r\n*
  `stack ghci` now defaults to skipping the build of target packages, because\r\n
  \ support has been added for invoking \"initial build steps\", which create\r\n
  \ autogen files and run preprocessors. The `--no-build` flag is now deprecated\r\n
  \ because it should no longer be necessary. See\r\n  [#1364](https://github.com/commercialhaskell/stack/issues/1364)\r\n\r\n*
  Stack is now capable of doing binary upgrades instead of always\r\n  recompiling
  a new version from source. Running `stack upgrade` will\r\n  now default to downloading
  a binary version of Stack from the most\r\n  recent release, if one is available.
  See `stack upgrade --help` for\r\n  more options.\r\n  [#1238](https://github.com/commercialhaskell/stack/issues/1238)\r\n\r\nBehavior
  changes:\r\n\r\n* Passing `--resolver X` with a Stack command which forces creation
  of a global\r\n  project config, will pass resolver X into the initial config.\r\n
  \ See [#2579](https://github.com/commercialhaskell/stack/issues/2229).\r\n\r\n*
  Switch the \"Run from outside project\" messages to debug-level, to\r\n  avoid spamming
  users in the normal case of non-project usage\r\n\r\n* If a remote package is specified
  (such as a Git repo) without an explicit\r\n  `extra-dep` setting, a warning is
  given to the user to provide one\r\n  explicitly.\r\n\r\nOther enhancements:\r\n\r\n*
  `stack haddock` now supports `--haddock-internal`. See\r\n  [#2229](https://github.com/commercialhaskell/stack/issues/2229)\r\n*
  Add support for `system-ghc` and `install-ghc` subcommands to\r\n  `stack config
  set` command.\r\n* Add `ghc-build` option to override autodetected GHC build to
  use (e.g. gmp4,\r\n  tinfo6, nopie) on Linux.\r\n* `stack setup` detects systems
  where gcc enables PIE by default (such as Ubuntu\r\n  16.10 and Hardened Gentoo)
  and adjusts the GHC `configure` options\r\n  accordingly. [#2542](https://github.com/commercialhaskell/stack/issues/2542)\r\n*
  Upload to Hackage with HTTP digest instead of HTTP basic.\r\n* Make `stack list-dependencies`
  understand all of the `stack dot` options too.\r\n* Add the ability for `stack list-dependencies`
  to list dependency licenses by\r\n  passing the `--license` flag.\r\n* Dump logs
  that contain warnings for any local non-dependency packages\r\n  [#2545](https://github.com/commercialhaskell/stack/issues/2545)\r\n*
  Add the `dump-logs` config option and `--dump-logs` command line\r\n  option to
  get full build output on the\r\n  console. [#426](https://github.com/commercialhaskell/stack/issues/426)\r\n*
  Add the `--open` option to \"stack hpc report\" command, causing the report to\r\n
  \ be opened in the browser.\r\n* The `stack config set` command now accepts a `--global`
  flag for suitable\r\n  subcommands which causes it to modify the global user configuration\r\n
  \ (`~/.stack/config.yaml`) instead of the project configuration.\r\n  [#2675](https://github.com/commercialhaskell/stack/pull/2675)\r\n*
  Information on the latest available snapshots is now downloaded from S3\r\n  instead
  of stackage.org, increasing reliability in case of stackage.org\r\n  outages. [#2653](https://github.com/commercialhaskell/stack/pull/2653)\r\n*
  `stack dot` and `stack list-dependencies` now take targets and flags.\r\n  [#1919](https://github.com/commercialhaskell/stack/issues/1919)\r\n*
  Deprecate `stack setup --stack-setup-yaml` for `--setup-info-yaml` based\r\n  on
  discussion in\r\n  [#2647](https://github.com/commercialhaskell/stack/issues/2647).\r\n*
  The `--main-is` flag for GHCI now implies the TARGET, fixing\r\n  [#1845](https://github.com/commercialhaskell/stack/issues/1845).\r\n*
  `stack ghci` no longer takes all build options, as many weren't useful\r\n  [#2199](https://github.com/commercialhaskell/stack/issues/2199)\r\n*
  `--no-time-in-log` option, to make verbose logs more diffable\r\n  [#2727](https://github.com/commercialhaskell/stack/issues/2727)\r\n*
  `--color` option added to override auto-detection of ANSI support\r\n  [#2725](https://github.com/commercialhaskell/stack/issues/2725)\r\n*
  Missing extra-deps are now warned about, adding a degree of typo detection\r\n  [#1521](https://github.com/commercialhaskell/stack/issues/1521)\r\n*
  No longer warns about missing build-tools if they are on the PATH.\r\n  [#2235](https://github.com/commercialhaskell/stack/issues/2235)\r\n*
  Replace enclosed-exceptions with safe-exceptions.\r\n  [#2768](https://github.com/commercialhaskell/stack/issues/2768)\r\n*
  The install location for GHC and other programs can now be configured with the\r\n
  \ `local-programs-path` option in `config.yaml`.\r\n  [#1644](https://github.com/commercialhaskell/stack/issues/1644)\r\n*
  Added option to add nix dependencies as nix GC roots\r\n* Proper pid 1 (init) process
  for `stack exec` with Docker\r\n* Dump build logs if they contain warnings.\r\n
  \ [#2545](https://github.com/commercialhaskell/stack/issues/2545)\r\n* Docker: redirect
  stdout of `docker pull` to stderr so that\r\n  it will not interfere with output
  of other commands.\r\n* Nix & docker can be activated at the same time, in order
  to run Stack in a\r\n  nix-shell in a container, preferably from an image already
  containing the nix\r\n  dependencies in its /nix/store\r\n* Stack/nix: Dependencies
  can be added as nix GC roots, so they are not removed\r\n  when running `nix-collect-garbage`\r\n\r\nBug
  fixes:\r\n\r\n* Fixed a gnarly bug where programs and package tarballs sometimes
  have\r\n  corrupted downloads. See\r\n  [#2657](https://github.com/commercialhaskell/stack/issues/2568).\r\n*
  Add proper support for non-ASCII characters in file paths for the `sdist`\r\n  command.
  See [#2549](https://github.com/commercialhaskell/stack/issues/2549)\r\n* Never treat
  `extra-dep` local packages as targets. This ensures\r\n  things like test suites
  are not run for these packages, and that\r\n  build output is not hidden due to
  their presence.\r\n* Fix a resource leak in `sinkProcessStderrStdout` which could
  affect\r\n  much of the codebase, in particular copying precompiled\r\n  packages.
  [#1979](https://github.com/commercialhaskell/stack/issues/1979)\r\n* Docker: ensure
  that interrupted extraction process does not cause corrupt file\r\n  when downloading
  a Docker-compatible Stack executable\r\n  [#2568](https://github.com/commercialhaskell/stack/issues/2568)\r\n*
  Fixed running `stack hpc report` on package targets.\r\n  [#2664](https://github.com/commercialhaskell/stack/issues/2664)\r\n*
  Fix a long-standing performance regression where Stack would parse the\r\n  `.dump-hi`
  files of the library components of local packages twice.\r\n  [#2658](https://github.com/commercialhaskell/stack/pull/2658)\r\n*
  Fixed a regression in \"stack ghci --no-load\", where it would prompt for a main\r\n
  \ module to load. [#2603](https://github.com/commercialhaskell/stack/pull/2603)\r\n*
  Build Setup.hs files with the threaded RTS, mirroring the behavior of\r\n  `cabal-install`
  and enabling more complex build systems in those files.\r\n* Fixed a bug in passing
  along `--ghc-options` to ghcjs.  They were being\r\n  provided as `--ghc-options`
  to Cabal, when it needs to be `--ghcjs-options`.\r\n  [#2714](https://github.com/commercialhaskell/stack/issues/2714)\r\n*
  Launch Docker from the project root regardless of the working\r\n  directory Stack
  is invoked from. This means paths relative to the project root\r\n  (e.g. environment
  files) can be specified in `stack.yaml`'s docker `run-args`.\r\n* `stack setup --reinstall`
  now behaves as expected.\r\n  [#2554](https://github.com/commercialhaskell/stack/issues/2554)\r\n\r\n##
  1.2.0 - 2016-09-16\r\n\r\nRelease notes:\r\n\r\n* On many Un*x systems, Stack can
  now be installed with a simple\r\n  one-liner:\r\n\r\n        wget -qO- https://get.haskellstack.org/
  | sh\r\n\r\n* The fix for\r\n  [#2175](https://github.com/commercialhaskell/stack/issues/2175)\r\n
  \ entails that Stack must perform a full clone of a large Git repo of\r\n  Hackage
  meta-information. The total download size is about 200 MB.\r\n  Please be aware
  of this when upgrading your Stack installation.\r\n\r\n* If you use Mac OS X, you
  may want to delay upgrading to macOS Sierra as there\r\n  are reports of GHC panics
  when building some packages (including Stack\r\n  itself). See [#2577](https://github.com/commercialhaskell/stack/issues/2577)\r\n\r\n*
  This version of Stack does not build on ARM or PowerPC systems (see\r\n  [store#37](https://github.com/fpco/store/issues/37)).
  \ Please stay with\r\n  version 1.1.2 for now on those architectures.  This will
  be rectified soon!\r\n\r\n* We are now releasing a statically linked Stack binary
  for\r\n  [64-bit Linux](https://get.haskellstack.org/stable/linux-x86_64-static.tar.gz).\r\n
  \ Please try it and let us know if you run into any trouble on your platform.\r\n\r\n*
  We are planning some changes to our Linux releases, including dropping our\r\n  Ubuntu,
  Debian, CentOS, and Fedora package repositories and switching to\r\n  statically
  linked binaries.  We would value your feedback in\r\n  [#2534](https://github.com/commercialhaskell/stack/issues/2534).\r\n\r\nMajor
  changes:\r\n\r\n* Add `stack hoogle` command.\r\n  [#55](https://github.com/commercialhaskell/stack/issues/55)\r\n*
  Support for absolute file path in `url` key of `setup-info` or `--ghc-bindist`\r\n*
  Add support for rendering GHCi scripts targeting different GHCi like\r\n  applications\r\n
  \ [#2457](https://github.com/commercialhaskell/stack/pull/2457)\r\n\r\nBehavior
  changes:\r\n\r\n* Remove `stack ide start` and `stack ide load-targets` commands.\r\n
  \ [#2178](https://github.com/commercialhaskell/stack/issues/2178)\r\n* Support .buildinfo
  files in `stack ghci`.\r\n  [#2242](https://github.com/commercialhaskell/stack/pull/2242)\r\n*
  Support -ferror-spans syntax in GHC error messages.\r\n* Avoid unpacking ghc to
  `/tmp`\r\n  [#996](https://github.com/commercialhaskell/stack/issues/996)\r\n* The
  Linux `gmp4` GHC bindist is no longer considered a full-fledged GHC\r\n  variant
  and can no longer be specified using the `ghc-variant` option,\r\n  and instead
  is treated more like a slightly different platform.\r\n\r\nOther enhancements:\r\n\r\n*
  Use the `store` package for binary serialization of most caches.\r\n* Only require
  minor version match for Docker Stack exe.\r\n  This way, we can make patch releases
  for version bounds and similar\r\n  build issues without needing to upload new binaries
  for Docker.\r\n* Stack/Nix: Passes the right ghc derivation as an argument to the
  `shell.nix`\r\n  when a custom `shell.nix` is used. See\r\n  [#2243](https://github.com/commercialhaskell/stack/issues/2243)\r\n*
  Stack/Nix: Sets `LD_LIBRARY_PATH` so packages using C libs for Template\r\n  Haskell
  can work (See _e.g._\r\n  [this HaskellR issue](https://github.com/tweag/HaskellR/issues/253))\r\n*
  Parse CLI arguments and configuration files into less permissive types,\r\n  improving
  error messages for bad inputs.\r\n  [#2267](https://github.com/commercialhaskell/stack/issues/2267)\r\n*
  Add the ability to explicitly specify a gcc executable.\r\n  [#593](https://github.com/commercialhaskell/stack/issues/593)\r\n*
  Nix: No longer uses LTS mirroring in nixpkgs. Gives to nix-shell a derivation\r\n
  \ like `haskell.compiler.ghc801`\r\n  See [#2259](https://github.com/commercialhaskell/stack/issues/2259)\r\n*
  Perform some subprocesses during setup concurrently, slightly speeding up most\r\n
  \ commands. [#2346](https://github.com/commercialhaskell/stack/pull/2346)\r\n* `stack
  setup` no longer unpacks to the system temp dir on posix systems.\r\n  [#996](https://github.com/commercialhaskell/stack/issues/996)\r\n*
  `stack setup` detects libtinfo6 and ncurses6 and can download alternate GHC\r\n
  \ bindists [#257](https://github.com/commercialhaskell/stack/issues/257)\r\n  [#2302](https://github.com/commercialhaskell/stack/issues/2302).\r\n*
  `stack setup` detects Linux ARMv7 downloads appropriate GHC bindist\r\n  [#2103](https://github.com/commercialhaskell/stack/issues/2103)\r\n*
  Custom `stack` binaries list dependency versions in output for `--version`.\r\n
  \ See [#2222](https://github.com/commercialhaskell/stack/issues/2222)\r\n  and [#2450](https://github.com/commercialhaskell/stack/issues/2450).\r\n*
  Use a pretty printer to output dependency resolution errors.\r\n  [#1912](https://github.com/commercialhaskell/stack/issues/1912)\r\n*
  Remove the `--os` flag\r\n  [#2227](https://github.com/commercialhaskell/stack/issues/2227)\r\n*
  Add 'netbase' and 'ca-certificates' as dependency for .deb packages.\r\n  [#2293](https://github.com/commercialhaskell/stack/issues/2293).\r\n*
  Add `stack ide targets` command.\r\n* Enhance debug logging with subprocess timings.\r\n*
  Pretty-print YAML parse errors\r\n  [#2374](https://github.com/commercialhaskell/stack/issues/2374)\r\n*
  Clarify confusing `stack setup` output\r\n  [#2314](https://github.com/commercialhaskell/stack/issues/2314)\r\n*
  Delete `Stack.Types` multimodule to improve build times\r\n  [#2405](https://github.com/commercialhaskell/stack/issues/2405)\r\n*
  Remove spurious newlines in build logs\r\n  [#2418](https://github.com/commercialhaskell/stack/issues/2418)\r\n*
  Interpreter: Provide a way to hide implicit packages\r\n  [#1208](https://github.com/commercialhaskell/stack/issues/1208)\r\n*
  Check executability in exec lookup\r\n  [#2489](https://github.com/commercialhaskell/stack/issues/2489)\r\n\r\nBug
  fixes:\r\n\r\n* Fix Cabal warning about use of a deprecated Cabal flag\r\n  [#2350](https://github.com/commercialhaskell/stack/issues/2350)\r\n*
  Support most executable extensions on Windows\r\n  [#2225](https://github.com/commercialhaskell/stack/issues/2225)\r\n*
  Detect resolver change in `stack solver`\r\n  [#2252](https://github.com/commercialhaskell/stack/issues/2252)\r\n*
  Fix a bug in docker image creation where the wrong base image was\r\n  selected\r\n
  \ [#2376](https://github.com/commercialhaskell/stack/issues/2376)\r\n* Ignore special
  entries when unpacking tarballs\r\n  [#2361](https://github.com/commercialhaskell/stack/issues/2361)\r\n*
  Fixes src directory pollution of `style.css` and `highlight.js` with GHC 8's\r\n
  \ haddock [#2429](https://github.com/commercialhaskell/stack/issues/2429)\r\n* Handle
  filepaths with spaces in `stack ghci`\r\n  [#2266](https://github.com/commercialhaskell/stack/issues/2266)\r\n*
  Apply ghc-options to snapshot packages\r\n  [#2289](https://github.com/commercialhaskell/stack/issues/2289)\r\n*
  `stack sdist`: Fix timestamp in tarball\r\n  [#2394](https://github.com/commercialhaskell/stack/pull/2394)\r\n*
  Allow global Stack arguments with a script\r\n  [#2316](https://github.com/commercialhaskell/stack/issues/2316)\r\n*
  Inconsistency between ToJSON and FromJSON instances of PackageLocation\r\n  [#2412](https://github.com/commercialhaskell/stack/pull/2412)\r\n*
  Perform Unicode normalization on filepaths\r\n  [#1810](https://github.com/commercialhaskell/stack/issues/1810)\r\n*
  Solver: always keep ghc wired-in as hard constraints\r\n  [#2453](https://github.com/commercialhaskell/stack/issues/2453)\r\n*
  Support OpenBSD's tar where possible, require GNU tar for xz support\r\n  [#2283](https://github.com/commercialhaskell/stack/issues/2283)\r\n*
  Fix using --coverage with Cabal-1.24\r\n  [#2424](https://github.com/commercialhaskell/stack/issues/2424)\r\n*
  When marking exe installed, remove old version\r\n  [#2373](https://github.com/commercialhaskell/stack/issues/2373)\r\n*
  Stop truncating `all-cabal-hashes` git repo\r\n  [#2175](https://github.com/commercialhaskell/stack/issues/2175)\r\n*
  Handle non-ASCII filenames on Windows\r\n  [#2491](https://github.com/commercialhaskell/stack/issues/2491)\r\n*
  Avoid using multiple versions of a package in script interpreter\r\n  by passing
  package-id to ghc/runghc\r\n  [#1957](https://github.com/commercialhaskell/stack/issues/1957)\r\n*
  Only pre-load compiler version when using nix integration\r\n  [#2459](https://github.com/commercialhaskell/stack/issues/2459)\r\n*
  Solver: parse Cabal errors also on Windows\r\n  [#2502](https://github.com/commercialhaskell/stack/issues/2502)\r\n*
  Allow exec and ghci commands in interpreter mode.\r\n  Scripts can now automatically
  open in the repl by using `exec ghci`\r\n  instead of `runghc` in the shebang command.\r\n
  \ [#2510](https://github.com/commercialhaskell/stack/issues/2510)\r\n* Now consider
  a package to be dirty when an extra-source-file is changed.\r\n  See [#2040](https://github.com/commercialhaskell/stack/issues/2040)\r\n\r\n##
  1.1.2 - 2016-05-20\r\n\r\nRelease notes:\r\n\r\n* Official FreeBSD binaries are\r\n
  \ [now available](http://docs.haskellstack.org/en/stable/install_and_upgrade/#freebsd)\r\n
  \ [#1253](https://github.com/commercialhaskell/stack/issues/1253).\r\n\r\nMajor
  changes:\r\n\r\n* Extensible custom snapshots implemented. These allow you to define
  snapshots\r\nwhich extend other snapshots. See\r\n[#863](https://github.com/commercialhaskell/stack/issues/863).
  Local file custom\r\nsnapshots can now be safely updated without changing their
  name.  Remote custom\r\nsnapshots should still be treated as immutable.\r\n\r\nBehavior
  changes:\r\n\r\n* `stack path --compiler` was added in the last release, to yield
  a path to the\r\n  compiler. Unfortunately, `--compiler` is a global option that
  is useful to use\r\n  with `stack path`. The same functionality is now provided
  by `stack path\r\n  --compiler-exe`. See\r\n  [#2123](https://github.com/commercialhaskell/stack/issues/2123)\r\n*
  For packages specified in terms of a git or hg repo, the hash used in the\r\n  location
  has changed.  This means that existing downloads from older stack\r\n  versions
  won't be used.  This is a side-effect of the fix to\r\n  [#2133](https://github.com/commercialhaskell/stack/issues/2133)\r\n*
  `stack upgrade` no longer pays attention to local `stack.yaml` files, just the\r\n
  \ global config and CLI options.\r\n  [#1392](https://github.com/commercialhaskell/stack/issues/1392)\r\n*
  `stack ghci` now uses `:add` instead of `:load`, making it potentially work\r\n
  \ better with user scripts. See\r\n  [#1888](https://github.com/commercialhaskell/stack/issues/1888)\r\n\r\nOther
  enhancements:\r\n\r\n* Grab Cabal files via Git SHA to avoid regressions from Hackage
  revisions\r\n  [#2070](https://github.com/commercialhaskell/stack/pull/2070)\r\n*
  Custom snapshots now support `ghc-options`.\r\n* Package git repos are now re-used
  rather than re-cloned. See\r\n  [#1620](https://github.com/commercialhaskell/stack/issues/1620)\r\n*
  `DESTDIR` is filtered from environment when installing GHC. See\r\n  [#1460](https://github.com/commercialhaskell/stack/issues/1460)\r\n*
  `stack haddock` now supports `--haddock-arguments`. See\r\n  [#2144](https://github.com/commercialhaskell/stack/issues/2144)\r\n*
  Signing: warn if GPG_TTY is not set as per `man gpg-agent`\r\n\r\nBug fixes:\r\n\r\n*
  Now ignore project config when doing `stack init` or `stack new`. See\r\n  [#2110](https://github.com/commercialhaskell/stack/issues/2110)\r\n*
  Packages specified by git repo can now have submodules. See\r\n  [#2133](https://github.com/commercialhaskell/stack/issues/2133)\r\n*
  Fix of hackage index fetch retry. See re-opening of\r\n  [#1418](https://github.com/commercialhaskell/stack/issues/1418#issuecomment-217633843)\r\n*
  HPack now picks up changes to filesystem other than package.yaml.  See\r\n  [#2051](https://github.com/commercialhaskell/stack/issues/2051)\r\n*
  \"stack solver\" no longer suggests --omit-packages. See\r\n  [#2031](https://github.com/commercialhaskell/stack/issues/2031)\r\n*
  Fixed an issue with building Cabal's Setup.hs. See\r\n  [#1356](https://github.com/commercialhaskell/stack/issues/1356)\r\n*
  Package dirtiness now pays attention to deleted files. See\r\n  [#1841](https://github.com/commercialhaskell/stack/issues/1841)\r\n*
  `stack ghci` now uses `extra-lib-dirs` and `extra-include-dirs`. See\r\n  [#1656](https://github.com/commercialhaskell/stack/issues/1656)\r\n*
  Relative paths outside of source dir added via `qAddDependentFile` are now\r\n  checked
  for dirtiness. See\r\n  [#1982](https://github.com/commercialhaskell/stack/issues/1982)\r\n*
  Signing: always use `--with-fingerprints`\r\n\r\n## 1.1.0 - 2016-05-04\r\n\r\nRelease
  notes:\r\n\r\n* Added Ubuntu 16.04 LTS (xenial) Apt repo.\r\n* No longer uploading
  new versions to Fedora 21 repo.\r\n\r\nBehavior changes:\r\n\r\n* Snapshot packages
  are no longer built with executable profiling. See\r\n  [#1179](https://github.com/commercialhaskell/stack/issues/1179).\r\n*
  `stack init` now ignores symlinks when searching for Cabal files. It also now\r\n
  \ ignores any directory that begins with `.` (as well as `dist` dirs) - before\r\n
  \ it would only ignore `.git`, `.stack-work`, and `dist`.\r\n* The Stack executable
  is no longer built with `-rtsopts`.  Before, when\r\n  `-rtsopts` was enabled, Stack
  would process `+RTS` options even when intended\r\n  for some other program, such
  as when used with `stack exec -- prog +RTS`.\r\n  See [#2022](https://github.com/commercialhaskell/stack/issues/2022).\r\n*
  The `stack path --ghc-paths` option is deprecated and renamed to `--programs`.\r\n
  \ `--compiler` is added, which points directly at the compiler used in\r\n  the
  current project.  `--compiler-bin` points to the compiler's bin dir.\r\n* For consistency
  with the `$STACK_ROOT` environment variable, the\r\n  `stack path --global-stack-root`
  flag and the `global-stack-root` field\r\n  in the output of `stack path` are being
  deprecated and replaced with the\r\n  `stack-root` flag and output field.\r\n  Additionally,
  the Stack root can now be specified via the\r\n  `--stack-root` command-line flag.
  See\r\n  [#1148](https://github.com/commercialhaskell/stack/issues/1148).\r\n* `stack
  sig` GPG-related sub-commands were removed (folded into `upload` and\r\n  `sdist`)\r\n*
  GPG signing of packages while uploading to Hackage is now the default. Use\r\n  `upload
  --no-signature` if you would rather not contribute your package\r\n  signature.
  If you don't yet have a GPG keyset, read this\r\n  [blog post on GPG keys](https://fpcomplete.com/blog/2016/05/stack-security-gnupg-keys).\r\n
  \ We can add a `stack.yaml` config setting to disable signing if some people\r\n
  \ desire it. We hope that people will sign. Later we will be adding GPG\r\n  signature
  verification options.\r\n* `stack build pkg-1.2.3` will now build even if the snapshot
  has a different\r\n  package version - it is treated as an extra-dep. `stack build
  local-pkg-1.2.3`\r\n  is an error even if the version number matches the local package\r\n
  \ [#2028](https://github.com/commercialhaskell/stack/issues/2028).\r\n* A `nix`
  key in a Stack YAML configuration file no longer implies enabling a\r\n  Nix build.
  This allows the user to globally configure whether Nix is used\r\n  (unless the
  project overrides the default explicitly). See\r\n  [#1924](https://github.com/commercialhaskell/stack/issues/1924).\r\n*
  Remove deprecated `valid-wanted` key.\r\n* Docker: mount home directory in container\r\n
  \ [#1949](https://github.com/commercialhaskell/stack/issues/1949).\r\n* Deprecate
  `stack path --local-bin-path`; instead use `--local-bin`.\r\n* `stack image`: allow
  absolute source paths for `add`.\r\n\r\nOther enhancements:\r\n\r\n* `stack haddock
  --open [PACKAGE]` opens the local haddocks in the browser.\r\n* Fix too much rebuilding
  when enabling/disabling profiling flags.\r\n* `stack build pkg-1.0` will now build
  `pkg-1.0` even if the snapshot specifies\r\n  a different version (it introduces
  a temporary extra-dep)\r\n* Experimental: Support for `--split-objs` added\r\n  [#1284](https://github.com/commercialhaskell/stack/issues/1284).\r\n*
  `git` packages with submodules are supported by passing the `--recursive`\r\n  flag
  to `git clone`.\r\n* When using [Hpack](https://github.com/sol/hpack), only regenerate
  Cabal files\r\n  when Hpack files change.\r\n* Hpack files can now be used in templates\r\n*
  `stack ghci` now runs ghci as a separate process\r\n  [#1306](https://github.com/commercialhaskell/stack/issues/1306)\r\n*
  Retry when downloading snapshots and package indices\r\n* Many build options are
  configurable now in `stack.yaml`:\r\n\r\n  ~~~yaml\r\n  build:\r\n    library-profiling:
  true\r\n    executable-profiling: true\r\n    haddock: true\r\n    haddock-deps:
  true\r\n    copy-bins: true\r\n    prefetch: true\r\n    force-dirty: true\r\n    keep-going:
  true\r\n    test: true\r\n    test-arguments:\r\n      rerun-tests: true\r\n      additional-args:
  ['-fprof']\r\n      coverage: true\r\n      no-run-tests: true\r\n    bench: true\r\n
  \   benchmark-opts:\r\n      benchmark-arguments: -O2\r\n      no-run-benchmarks:
  true\r\n    reconfigure: true\r\n    cabal-verbose: true\r\n  ~~~\r\n\r\n* A number
  of URLs are now configurable, useful for firewalls. See\r\n  [#1794](https://github.com/commercialhaskell/stack/issues/1884).\r\n*
  Suggest causes when executables are missing.\r\n* Allow `--omit-packages` even without
  `--solver`.\r\n* Improve the generated `stack.yaml`.\r\n* Improve ghci results after
  :load Main module collision with main file path.\r\n* Only load the hackage index
  if necessary\r\n  [#1883](https://github.com/commercialhaskell/stack/issues/1883),\r\n
  \ [#1892](https://github.com/commercialhaskell/stack/issues/1892).\r\n* init: allow
  local packages to be deps of deps\r\n  [#1965](https://github.com/commercialhaskell/stack/issues/1965).\r\n*
  Always use full fingerprints from GPG\r\n  [#1952](https://github.com/commercialhaskell/stack/issues/1952).\r\n*
  Default to using `gpg2` and fall back to `gpg`\r\n  [#1976](https://github.com/commercialhaskell/stack/issues/1976).\r\n*
  Add a flag for --verbosity silent.\r\n* Add `haddock --open` flag\r\n  [#1396](https://github.com/commercialhaskell/stack/issues/1396).\r\n\r\nBug
  fixes:\r\n\r\n* Package tarballs would fail to unpack.\r\n  [#1884](https://github.com/commercialhaskell/stack/issues/1884).\r\n*
  Fixed errant warnings about missing modules, after deleted and removed from\r\n
  \ Cabal file [#921](https://github.com/commercialhaskell/stack/issues/921)\r\n  [#1805](https://github.com/commercialhaskell/stack/issues/1805).\r\n*
  Now considers a package to dirty when the Hpack file is changed\r\n  [#1819](https://github.com/commercialhaskell/stack/issues/1819).\r\n*
  Nix: cancelling a Stack build now exits properly rather than dropping into a\r\n
  \ nix-shell [#1778](https://github.com/commercialhaskell/stack/issues/1778).\r\n*
  `allow-newer: true` now causes `--exact-configuration` to be passed to Cabal.\r\n
  \ See [#1579](https://github.com/commercialhaskell/stack/issues/1579).\r\n* `stack
  solver` no longer fails with `InvalidRelFile` for relative package\r\n  paths including
  `..`. See\r\n  [#1954](https://github.com/commercialhaskell/stack/issues/1954).\r\n*
  Ignore emacs lock files when finding Cabal files\r\n  [#1897](https://github.com/commercialhaskell/stack/issues/1897).\r\n*
  Use lenient UTF-8 decode for build output\r\n  [#1945](https://github.com/commercialhaskell/stack/issues/1945).\r\n*
  Clear index cache whenever index updated\r\n  [#1962](https://github.com/commercialhaskell/stack/issues/1962).\r\n*
  Fix: Building a container image drops a .stack-work dir in the current working\r\n
  \ (sub)directory\r\n  [#1975](https://github.com/commercialhaskell/stack/issues/1975).\r\n*
  Fix: Rebuilding when disabling profiling\r\n  [#2023](https://github.com/commercialhaskell/stack/issues/2023).\r\n\r\n##
  1.0.4.3 - 2016-04-07\r\n\r\nBug fixes:\r\n\r\n* Don't delete contents of ~/.ssh
  when using `stack clean --full` with Docker\r\n  enabled [#2000](https://github.com/commercialhaskell/stack/issues/2000)\r\n\r\n##
  1.0.4.2 - 2016-03-09\r\n\r\nBuild with `path-io-1.0.0`. There are no changes in
  behaviour from 1.0.4, so no\r\nbinaries are released for this version.\r\n\r\n##
  1.0.4.1 - 2016-02-21\r\n\r\nFixes build with `aeson-0.11.0.0`. There are no changes
  in behaviour from 1.0.4,\r\nso no binaries are released for this version.\r\n\r\n##
  1.0.4 - 2016-02-20\r\n\r\nMajor changes:\r\n\r\n* Some notable changes in `stack
  init`:\r\n    * Overall it should now be able to initialize almost all existing
  Cabal\r\n      packages out of the box as long as the package itself is consistently\r\n
  \     defined.\r\n    * Choose the best possible snapshot and add extra-deps on
  top\r\n      of a snapshot other than a compiler snapshot -\r\n      [#1583](https://github.com/commercialhaskell/stack/pull/1583)\r\n
  \   * Automatically omit a package (`--omit-packages`) when it is compiler\r\n      incompatible
  or when there are packages with conflicting dependency\r\n      requirements. See\r\n
  \     [#1674](https://github.com/commercialhaskell/stack/pull/1674).\r\n    * Some
  more changes for a better user experience. Please refer to\r\n      the doc guide
  for details.\r\n* Add support for Hpack, alternative package description format\r\n
  \ [#1679](https://github.com/commercialhaskell/stack/issues/1679)\r\n\r\nOther enhancements:\r\n\r\n*
  Docker: pass ~/.ssh and SSH auth socket into container, so that git repos\r\n  work
  [#1358](https://github.com/commercialhaskell/stack/issues/1358).\r\n* Docker: strip
  suffix from docker --version.\r\n  [#1653](https://github.com/commercialhaskell/stack/issues/1653)\r\n*
  Docker: pass USER and PWD environment variables into container.\r\n* On each run,
  Stack will test the Stack root directory (~/.stack), and the\r\n  project and package
  work directories (.stack-work) for whether they are\r\n  owned by the current user
  and abort if they are not. This precaution can\r\n  be disabled with the `--allow-different-user`
  flag or `allow-different-user`\r\n  option in the global config (~/.stack/config.yaml).\r\n
  \ [#471](https://github.com/commercialhaskell/stack/issues/471)\r\n* Added `stack
  clean --full` option for full working dir cleanup.\r\n* YAML config: support Zip
  archives.\r\n* Redownload build plan if parsing fails\r\n  [#1702](https://github.com/commercialhaskell/stack/issues/1702).\r\n*
  Give mustache templates access to a 'year' tag\r\n  [#1716](https://github.com/commercialhaskell/stack/pull/1716).\r\n*
  Have \"stack ghci\" warn about module name aliasing.\r\n* Add \"stack ghci --load-local-deps\".\r\n*
  Build Setup.hs with -rtsopts\r\n  [#1687](https://github.com/commercialhaskell/stack/issues/1687).\r\n*
  `stack init` accepts a list of directories.\r\n* Add flag infos to DependencyPlanFailures
  (for better error output in case of\r\n  flags) [#713](https://github.com/commercialhaskell/stack/issues/713)\r\n*
  `stack new --bare` complains for overwrites, and add `--force` option\r\n  [#1597](https://github.com/commercialhaskell/stack/issues/1597).\r\n\r\nBug
  fixes:\r\n\r\n* Previously, `stack ghci` would fail with `cannot satisfy -package-id`
  when the\r\n  implicit build step changes the package key of some dependency.\r\n*
  Fix: Building with ghcjs: \"ghc-pkg: Prelude.chr: bad argument: 2980338\"\r\n  [#1665](https://github.com/commercialhaskell/stack/issues/1665).\r\n*
  Fix running test / bench with `--profile` / `--trace`.\r\n* Fix: build progress
  counter is no longer visible\r\n  [#1685](https://github.com/commercialhaskell/stack/issues/1685).\r\n*
  Use \"-RTS\" w/ profiling to allow extra args\r\n  [#1772](https://github.com/commercialhaskell/stack/issues/1772).\r\n*
  Fix withUnpackedTarball7z to find name of srcDir after unpacking\r\n  (fixes `stack
  setup` fails for ghcjs project on windows)\r\n  [#1774](https://github.com/commercialhaskell/stack/issues/1774).\r\n*
  Add space before auto-generated bench opts (makes profiling options work\r\n  uniformly
  for applications and benchmark suites)\r\n  [#1771](https://github.com/commercialhaskell/stack/issues/1771).\r\n*
  Don't try to find plugin if it resembles flag.\r\n* Setup.hs changes cause package
  dirtiness\r\n  [#1711](https://github.com/commercialhaskell/stack/issues/1711).\r\n*
  Send \"stack templates\" output to stdout\r\n  [#1792](https://github.com/commercialhaskell/stack/issues/1792).\r\n\r\n##
  1.0.2 - 2016-01-18\r\n\r\nRelease notes:\r\n\r\n- Arch Linux: Stack has been adopted
  into the\r\n  [official community repository](https://www.archlinux.org/packages/community/x86_64/stack/),\r\n
  \ so we will no longer be updating the AUR with new versions. See the\r\n  [install/upgrade
  guide](http://docs.haskellstack.org/en/stable/install_and_upgrade/#arch-linux)\r\n
  \ for current download instructions.\r\n\r\nMajor changes:\r\n\r\n- `stack init`
  and `solver` overhaul\r\n  [#1583](https://github.com/commercialhaskell/stack/pull/1583)\r\n\r\nOther
  enhancements:\r\n\r\n- Disable locale/codepage hacks when GHC >=7.10.3\r\n  [#1552](https://github.com/commercialhaskell/stack/issues/1552)\r\n-
  Specify multiple images to build for `stack image container`\r\n  [docs](http://docs.haskellstack.org/en/stable/yaml_configuration/#image)\r\n-
  Specify which executables to include in images for `stack image container`\r\n  [docs](http://docs.haskellstack.org/en/stable/yaml_configuration/#image)\r\n-
  Docker: pass supplementary groups and umask into container\r\n- If git fetch fails
  wipe the directory and try again from scratch\r\n  [#1418](https://github.com/commercialhaskell/stack/issues/1418)\r\n-
  Warn if newly installed executables won't be available on the PATH\r\n  [#1362](https://github.com/commercialhaskell/stack/issues/1362)\r\n-
  `stack.yaml`: for `stack image container`, specify multiple images to\r\n  generate,
  and which executables should be added to those images\r\n- GHCI: add interactive
  Main selection\r\n  [#1068](https://github.com/commercialhaskell/stack/issues/1068)\r\n-
  Care less about the particular name of a GHCJS sdist folder\r\n  [#1622](https://github.com/commercialhaskell/stack/issues/1622)\r\n-
  Unified Enable/disable help messaging\r\n  [#1613](https://github.com/commercialhaskell/stack/issues/1613)\r\n\r\nBug
  fixes:\r\n\r\n- Don't share precompiled packages between GHC/platform variants and
  Docker\r\n  [#1551](https://github.com/commercialhaskell/stack/issues/1551)\r\n-
  Properly redownload corrupted downloads with the correct file size.\r\n  [Mailing
  list discussion](https://groups.google.com/d/msg/haskell-stack/iVGDG5OHYxs/FjUrR5JsDQAJ)\r\n-
  Gracefully handle invalid paths in error/warning messages\r\n  [#1561](https://github.com/commercialhaskell/stack/issues/1561)\r\n-
  Nix: select the correct GHC version corresponding to the snapshot\r\n  even when
  an abstract resolver is passed via `--resolver` on the\r\n  command-line.\r\n  [#1641](https://github.com/commercialhaskell/stack/issues/1641)\r\n-
  Fix: Stack does not allow using an external package from ghci\r\n  [#1557](https://github.com/commercialhaskell/stack/issues/1557)\r\n-
  Disable ambiguous global '--resolver' option for 'stack init'\r\n  [#1531](https://github.com/commercialhaskell/stack/issues/1531)\r\n-
  Obey `--no-nix` flag\r\n- Fix: GHCJS Execute.hs: Non-exhaustive patterns in lambda\r\n
  \ [#1591](https://github.com/commercialhaskell/stack/issues/1591)\r\n- Send file-watch
  and sticky logger messages to stderr\r\n  [#1302](https://github.com/commercialhaskell/stack/issues/1302)\r\n
  \ [#1635](https://github.com/commercialhaskell/stack/issues/1635)\r\n- Use globaldb
  path for querying Cabal version\r\n  [#1647](https://github.com/commercialhaskell/stack/issues/1647)\r\n\r\n##
  1.0.0 - 2015-12-24\r\n\r\nRelease notes:\r\n\r\n*  We're calling this version 1.0.0
  in preparation for Stackage\r\n   LTS 4.  Note, however, that this does not mean
  the code's API\r\n   will be stable as this is primarily an end-user tool.\r\n\r\nEnhancements:\r\n\r\n*
  Added flag `--profile` flag: passed with `stack build`, it will\r\n  enable profiling,
  and for `--bench` and `--test` it will generate a\r\n  profiling report by passing
  `+RTS -p` to the executable(s). Great\r\n  for using like `stack build --bench --profile`
  (remember that\r\n  enabling profile will slow down your benchmarks by >4x). Run
  `stack\r\n  build --bench` again to disable the profiling and get proper speeds\r\n*
  Added flag `--trace` flag: just like `--profile`, it enables\r\n  profiling, but
  instead of generating a report for `--bench` and\r\n  `--test`, prints out a stack
  trace on exception. Great for using\r\n  like `stack build --test --trace`\r\n*
  Nix: all options can be overridden on command line\r\n  [#1483](https://github.com/commercialhaskell/stack/issues/1483)\r\n*
  Nix: build environments (shells) are now pure by default.\r\n* Make verbosity silent
  by default in script interpreter mode\r\n  [#1472](https://github.com/commercialhaskell/stack/issues/1472)\r\n*
  Show a message when resetting git commit fails\r\n  [#1453](https://github.com/commercialhaskell/stack/issues/1453)\r\n*
  Improve Unicode handling in project/package names\r\n  [#1337](https://github.com/commercialhaskell/stack/issues/1337)\r\n*
  Fix ambiguity between a Stack command and a filename to execute (prefer\r\n  `stack`
  subcommands)\r\n  [#1471](https://github.com/commercialhaskell/stack/issues/1471)\r\n*
  Support multi line interpreter directive comments\r\n  [#1394](https://github.com/commercialhaskell/stack/issues/1394)\r\n*
  Handle space separated pids in ghc-pkg dump (for GHC HEAD)\r\n  [#1509](https://github.com/commercialhaskell/stack/issues/1509)\r\n*
  Add ghci --no-package-hiding option\r\n  [#1517](https://github.com/commercialhaskell/stack/issues/1517)\r\n*
  `stack new` can download templates from URL\r\n  [#1466](https://github.com/commercialhaskell/stack/issues/1466)\r\n\r\nBug
  fixes:\r\n\r\n* Nix: `stack exec` options are passed properly to the Stack sub process\r\n
  \ [#1538](https://github.com/commercialhaskell/stack/issues/1538)\r\n* Nix: specifying
  a shell-file works in any current working directory\r\n  [#1547](https://github.com/commercialhaskell/stack/issues/1547)\r\n*
  Nix: use `--resolver` argument\r\n* Docker: fix missing image message and '--docker-auto-pull'\r\n*
  No HTML escaping for \"stack new\" template params\r\n  [#1475](https://github.com/commercialhaskell/stack/issues/1475)\r\n*
  Set permissions for generated .ghci script\r\n  [#1480](https://github.com/commercialhaskell/stack/issues/1480)\r\n*
  Restrict commands allowed in interpreter mode\r\n  [#1504](https://github.com/commercialhaskell/stack/issues/1504)\r\n*
  `stack ghci` doesn't see preprocessed files for executables\r\n  [#1347](https://github.com/commercialhaskell/stack/issues/1347)\r\n*
  All test suites run even when only one is requested\r\n  [#1550](https://github.com/commercialhaskell/stack/pull/1550)\r\n*
  Edge cases in broken templates give odd errors\r\n  [#1535](https://github.com/commercialhaskell/stack/issues/1535)\r\n*
  Fix test coverage bug on windows\r\n\r\n## 0.1.10.1 - 2015-12-13\r\n\r\nBug fixes:\r\n\r\n*
  `stack image container` did not actually build an image\r\n  [#1473](https://github.com/commercialhaskell/stack/issues/1473)\r\n\r\n##
  0.1.10.0 - 2015-12-04\r\n\r\nRelease notes:\r\n\r\n* The Stack home page is now
  at [haskellstack.org](http://haskellstack.org),\r\n  which shows the documentation
  rendered by readthedocs.org. Note: this\r\n  has necessitated some changes to the
  links in the documentation's markdown\r\n  source code, so please check the links
  on the website before submitting a PR\r\n  to fix them.\r\n* The locations of the\r\n
  \ [Ubuntu](http://docs.haskellstack.org/en/stable/install_and_upgrade/#ubuntu)\r\n
  \ and\r\n  [Debian](http://docs.haskellstack.org/en/stable/install_and_upgrade/#debian)\r\n
  \ package repositories have changed to have correct URL semantics according to\r\n
  \ Debian's guidelines\r\n  [#1378](https://github.com/commercialhaskell/stack/issues/1378).
  The old\r\n  locations will continue to work for some months, but we suggest that
  you\r\n  adjust your `/etc/apt/sources.list.d/fpco.list` to the new location to
  avoid\r\n  future disruption.\r\n* [openSUSE and SUSE Linux Enterprise](http://docs.haskellstack.org/en/stable/install_and_upgrade/#suse)\r\n
  \ packages are now available, thanks to [@mimi1vx](https://github.com/mimi1vx).\r\n
  \ Note: there will be some lag before these pick up new versions, as they are\r\n
  \ based on Stackage LTS.\r\n\r\nMajor changes:\r\n\r\n* Support for building inside
  a Nix-shell providing system dependencies\r\n  [#1285](https://github.com/commercialhaskell/stack/pull/1285)\r\n*
  Add optional GPG signing on `stack upload --sign` or with\r\n  `stack sig sign ...`\r\n\r\nOther
  enhancements:\r\n\r\n* Print latest applicable version of packages on conflicts\r\n
  \ [#508](https://github.com/commercialhaskell/stack/issues/508)\r\n* Support for
  packages located in Mercurial repositories\r\n  [#1397](https://github.com/commercialhaskell/stack/issues/1397)\r\n*
  Only run benchmarks specified as build targets\r\n  [#1412](https://github.com/commercialhaskell/stack/issues/1412)\r\n*
  Support git-style executable fall-through (`stack something` executes\r\n  `stack-something`
  if present)\r\n  [#1433](https://github.com/commercialhaskell/stack/issues/1433)\r\n*
  GHCi now loads intermediate dependencies\r\n  [#584](https://github.com/commercialhaskell/stack/issues/584)\r\n*
  `--work-dir` option for overriding `.stack-work`\r\n  [#1178](https://github.com/commercialhaskell/stack/issues/1178)\r\n*
  Support `detailed-0.9` tests\r\n  [#1429](https://github.com/commercialhaskell/stack/issues/1429)\r\n*
  Docker: improved POSIX signal proxying to containers\r\n  [#547](https://github.com/commercialhaskell/stack/issues/547)\r\n\r\nBug
  fixes:\r\n\r\n* Show absolute paths in error messages in multi-package builds\r\n
  \ [#1348](https://github.com/commercialhaskell/stack/issues/1348)\r\n* Docker-built
  binaries and libraries in different path\r\n  [#911](https://github.com/commercialhaskell/stack/issues/911)\r\n
  \ [#1367](https://github.com/commercialhaskell/stack/issues/1367)\r\n* Docker: `--resolver`
  argument didn't effect selected image tag\r\n* GHCi: Spaces in filepaths caused
  module loading issues\r\n  [#1401](https://github.com/commercialhaskell/stack/issues/1401)\r\n*
  GHCi: cpp-options in Cabal files weren't used\r\n  [#1419](https://github.com/commercialhaskell/stack/issues/1419)\r\n*
  Benchmarks couldn't be run independently of each other\r\n  [#1412](https://github.com/commercialhaskell/stack/issues/1412)\r\n*
  Send output of building setup to stderr\r\n  [#1410](https://github.com/commercialhaskell/stack/issues/1410)\r\n\r\n##
  0.1.8.0 - 2015-11-20\r\n\r\nMajor changes:\r\n\r\n* GHCJS can now be used with stackage
  snapshots via the new `compiler` key.\r\n* Windows installers are now available:\r\n
  \ [download them here](http://docs.haskellstack.org/en/stable/install_and_upgrade/#windows)\r\n
  \ [#613](https://github.com/commercialhaskell/stack/issues/613)\r\n* Docker integration
  works with non-FPComplete generated images\r\n  [#531](https://github.com/commercialhaskell/stack/issues/531)\r\n\r\nOther
  enhancements:\r\n\r\n* Added an `allow-newer` config option\r\n  [#922](https://github.com/commercialhaskell/stack/issues/922)\r\n
  \ [#770](https://github.com/commercialhaskell/stack/issues/770)\r\n* When a Hackage
  revision invalidates a build plan in a snapshot, trust the\r\n  snapshot [#770](https://github.com/commercialhaskell/stack/issues/770)\r\n*
  Added a `stack config set resolver RESOLVER` command. Part of work on\r\n  [#115](https://github.com/commercialhaskell/stack/issues/115)\r\n*
  `stack setup` can now install GHCJS on windows. See\r\n  [#1145](https://github.com/commercialhaskell/stack/issues/1145)
  and\r\n  [#749](https://github.com/commercialhaskell/stack/issues/749)\r\n* `stack
  hpc report` command added, which generates reports for HPC tix files\r\n* `stack
  ghci` now accepts all the flags accepted by `stack build`. See\r\n  [#1186](https://github.com/commercialhaskell/stack/issues/1186)\r\n*
  `stack ghci` builds the project before launching GHCi. If the build fails,\r\n  try
  to launch GHCi anyway. Use `stack ghci --no-build` option to disable\r\n  [#1065](https://github.com/commercialhaskell/stack/issues/1065)\r\n*
  `stack ghci` now detects and warns about various circumstances where it is\r\n  liable
  to fail. See\r\n  [#1270](https://github.com/commercialhaskell/stack/issues/1270)\r\n*
  Added `require-docker-version` configuration option\r\n* Packages will now usually
  be built along with their tests and benchmarks. See\r\n  [#1166](https://github.com/commercialhaskell/stack/issues/1166)\r\n*
  Relative `local-bin-path` paths will be relative to the project's root\r\n  directory,
  not the current working directory.\r\n  [#1340](https://github.com/commercialhaskell/stack/issues/1340)\r\n*
  `stack clean` now takes an optional `[PACKAGE]` argument for use in\r\n  multi-package
  projects. See\r\n  [#583](https://github.com/commercialhaskell/stack/issues/583)\r\n*
  Ignore cabal_macros.h as a dependency\r\n  [#1195](https://github.com/commercialhaskell/stack/issues/1195)\r\n*
  Pad timestamps and show local time in --verbose output\r\n  [#1226](https://github.com/commercialhaskell/stack/issues/1226)\r\n*
  GHCi: Import all modules after loading them\r\n  [#995](https://github.com/commercialhaskell/stack/issues/995)\r\n*
  Add subcommand aliases: `repl` for `ghci`, and `runhaskell` for `runghc`\r\n  [#1241](https://github.com/commercialhaskell/stack/issues/1241)\r\n*
  Add typo recommendations for unknown package identifiers\r\n  [#158](https://github.com/commercialhaskell/stack/issues/158)\r\n*
  Add `stack path --local-hpc-root` option\r\n* Overhaul dependencies' haddocks copying\r\n
  \ [#1231](https://github.com/commercialhaskell/stack/issues/1231)\r\n* Support for
  extra-package-dbs in 'stack ghci'\r\n  [#1229](https://github.com/commercialhaskell/stack/pull/1229)\r\n*
  `stack new` disallows package names with \"words\" consisting solely of numbers\r\n
  \ [#1336](https://github.com/commercialhaskell/stack/issues/1336)\r\n* `stack build
  --fast` turns off optimizations\r\n* Show progress while downloading package index\r\n
  \ [#1223](https://github.com/commercialhaskell/stack/issues/1223).\r\n\r\nBug fixes:\r\n\r\n*
  Fix: Haddocks not copied for dependencies\r\n  [#1105](https://github.com/commercialhaskell/stack/issues/1105)\r\n*
  Fix: Global options did not work consistently after subcommand\r\n  [#519](https://github.com/commercialhaskell/stack/issues/519)\r\n*
  Fix: 'stack ghci' doesn't notice that a module got deleted\r\n  [#1180](https://github.com/commercialhaskell/stack/issues/1180)\r\n*
  Rebuild when Cabal file is changed\r\n* Fix: Paths in GHC warnings not canonicalized,
  nor those for packages in\r\n  subdirectories or outside the project root\r\n  [#1259](https://github.com/commercialhaskell/stack/issues/1259)\r\n*
  Fix: unlisted files in tests and benchmarks trigger extraneous second build\r\n
  \ [#838](https://github.com/commercialhaskell/stack/issues/838)\r\n\r\n## 0.1.6.0
  - 2015-10-15\r\n\r\nMajor changes:\r\n\r\n* `stack setup` now supports building
  and booting GHCJS from source tarball.\r\n* On Windows, build directories no longer
  display \"pretty\" information\r\n  (like x86_64-windows/Cabal-1.22.4.0), but rather
  a hash of that\r\n  content. The reason is to avoid the 260 character path limitation
  on\r\n  Windows. See\r\n  [#1027](https://github.com/commercialhaskell/stack/pull/1027)\r\n*
  Rename config files and clarify their purposes\r\n  [#969](https://github.com/commercialhaskell/stack/issues/969)\r\n
  \   * `~/.stack/stack.yaml` --> `~/.stack/config.yaml`\r\n    * `~/.stack/global`
  --> `~/.stack/global-project`\r\n    * `/etc/stack/config` --> `/etc/stack/config.yaml`\r\n
  \   * Old locations still supported, with deprecation warnings\r\n* New command
  \"stack eval CODE\", which evaluates to \"stack exec ghc -- -e CODE\".\r\n\r\nOther
  enhancements:\r\n\r\n* No longer install `git` on Windows\r\n  [#1046](https://github.com/commercialhaskell/stack/issues/1046).
  You\r\n  can still get this behavior by running the following yourself:\r\n  `stack
  exec -- pacman -Sy --noconfirm git`.\r\n* Typing enter during --file-watch triggers
  a rebuild\r\n  [#1023](https://github.com/commercialhaskell/stack/pull/1023)\r\n*
  Use Haddock's `--hyperlinked-source` (crosslinked source), if available\r\n  [#1070](https://github.com/commercialhaskell/stack/pull/1070)\r\n*
  Use Stack-installed GHCs for `stack init --solver`\r\n  [#1072](https://github.com/commercialhaskell/stack/issues/1072)\r\n*
  Experimental: Add `stack query` command\r\n  [#1087](https://github.com/commercialhaskell/stack/issues/1087)\r\n*
  By default, Stack no longer rebuilds a package due to GHC options changes.\r\n  This
  behavior can be tweaked with the `rebuild-ghc-options` setting.\r\n  [#1089](https://github.com/commercialhaskell/stack/issues/1089)\r\n*
  By default, ghc-options are applied to all local packages, not just targets.\r\n
  \ This behavior can be tweaked with the `apply-ghc-options` setting.\r\n  [#1089](https://github.com/commercialhaskell/stack/issues/1089)\r\n*
  Docker: download or override location of Stack executable to re-run in\r\n  container
  [#974](https://github.com/commercialhaskell/stack/issues/974)\r\n* Docker: when
  Docker Engine is remote, don't run containerized processes as\r\n  host's UID/GID
  [#194](https://github.com/commercialhaskell/stack/issues/194)\r\n* Docker: `set-user`
  option to enable/disable running containerized processes as\r\n  host's UID/GID
  [#194](https://github.com/commercialhaskell/stack/issues/194)\r\n* Custom Setup.hs
  files are now precompiled instead of interpreted. This should\r\n  be a major performance
  win for certain edge cases (biggest example:\r\n  [building Cabal itself](https://github.com/commercialhaskell/stack/issues/1041))\r\n
  \ while being either neutral or a minor slowdown for more common cases.\r\n* `stack
  test --coverage` now also generates a unified coverage report for\r\n  multiple
  test-suites / packages.  In the unified report, test-suites can\r\n  contribute
  to the coverage of other packages.\r\n\r\nBug fixes:\r\n\r\n* Ignore stack-built
  executables named `ghc`\r\n  [#1052](https://github.com/commercialhaskell/stack/issues/1052)\r\n*
  Fix quoting of output failed command line arguments\r\n* Mark executable-only packages
  as installed when copied from cache\r\n  [#1043](https://github.com/commercialhaskell/stack/pull/1043)\r\n*
  Canonicalize temporary directory paths\r\n  [#1047](https://github.com/commercialhaskell/stack/pull/1047)\r\n*
  Put code page fix inside the build function itself\r\n  [#1066](https://github.com/commercialhaskell/stack/issues/1066)\r\n*
  Add `explicit-setup-deps` option\r\n  [#1110](https://github.com/commercialhaskell/stack/issues/1110),
  and change\r\n  the default to the old behavior of using any package in the global
  and\r\n  snapshot database\r\n  [#1025](https://github.com/commercialhaskell/stack/issues/1025)\r\n*
  Precompiled cache checks full package IDs on Cabal < 1.22\r\n  [#1103](https://github.com/commercialhaskell/stack/issues/1103)\r\n*
  Pass -package-id to ghci\r\n  [#867](https://github.com/commercialhaskell/stack/issues/867)\r\n*
  Ignore global packages when copying precompiled packages\r\n  [#1146](https://github.com/commercialhaskell/stack/issues/1146)\r\n\r\n##
  0.1.5.0 - 2015-09-24\r\n\r\nMajor changes:\r\n\r\n* On Windows, we now use a full
  MSYS2 installation in place of the previous\r\n  PortableGit. This gives you access
  to the pacman package manager for more\r\n  easily installing libraries.\r\n* Support
  for custom GHC binary distributions\r\n  [#530](https://github.com/commercialhaskell/stack/issues/530)\r\n
  \   * `ghc-variant` option in `stack.yaml` to specify the variant (also\r\n      `--ghc-variant`
  command-line option)\r\n    * `setup-info` in `stack.yaml`, to specify where to
  download custom binary\r\n      distributions (also `--ghc-bindist` command-line
  option)\r\n    * Note: On systems with libgmp4 (aka `libgmp.so.3`), such as CentOS
  6, you\r\n      may need to re-run `stack setup` due to the centos6 GHC bindist
  being\r\n      treated like a variant\r\n* A new `--pvp-bounds` flag to the sdist
  and upload commands allows automatic\r\n  adding of PVP upper and/or lower bounds
  to your dependencies\r\n\r\nOther enhancements:\r\n\r\n* Adapt to upcoming Cabal
  installed package identifier format change\r\n  [#851](https://github.com/commercialhaskell/stack/issues/851)\r\n*
  `stack setup` takes a `--stack-setup-yaml` argument\r\n* `--file-watch` is more
  discerning about which files to rebuild for\r\n  [#912](https://github.com/commercialhaskell/stack/issues/912)\r\n*
  `stack path` now supports `--global-pkg-db` and `--ghc-package-path`\r\n* `--reconfigure`
  flag\r\n  [#914](https://github.com/commercialhaskell/stack/issues/914)\r\n  [#946](https://github.com/commercialhaskell/stack/issues/946)\r\n*
  Cached data is written with a checksum of its structure\r\n  [#889](https://github.com/commercialhaskell/stack/issues/889)\r\n*
  Fully removed `--optimizations` flag\r\n* Added `--cabal-verbose` flag\r\n* Added
  `--file-watch-poll` flag for polling instead of using filesystem events\r\n  (useful
  for running tests in a Docker container while modifying code in the\r\n  host environment.
  When code is injected into the container via a volume, the\r\n  container won't
  propagate filesystem events).\r\n* Give a preemptive error message when `-prof`
  is given as a GHC option\r\n  [#1015](https://github.com/commercialhaskell/stack/issues/1015)\r\n*
  Locking is now optional, and will be turned on by setting the `STACK_LOCK`\r\n  environment
  variable to `true`\r\n  [#950](https://github.com/commercialhaskell/stack/issues/950)\r\n*
  Create default `stack.yaml` with documentation comments and commented out\r\n  options
  [#226](https://github.com/commercialhaskell/stack/issues/226)\r\n* Out of memory
  warning if Cabal exits with -9\r\n  [#947](https://github.com/commercialhaskell/stack/issues/947)\r\n\r\nBug
  fixes:\r\n\r\n* Hacky workaround for optparse-applicative issue with `stack exec
  --help`\r\n  [#806](https://github.com/commercialhaskell/stack/issues/806)\r\n*
  Build executables for local extra-deps\r\n  [#920](https://github.com/commercialhaskell/stack/issues/920)\r\n*
  copyFile can't handle directories\r\n  [#942](https://github.com/commercialhaskell/stack/pull/942)\r\n*
  Support for spaces in Haddock interface files\r\n  [fpco/minghc#85](https://github.com/fpco/minghc/issues/85)\r\n*
  Temporarily building against a \"shadowing\" local package?\r\n  [#992](https://github.com/commercialhaskell/stack/issues/992)\r\n*
  Fix `Setup.exe` name for `--upgrade-cabal` on Windows\r\n  [#1002](https://github.com/commercialhaskell/stack/issues/1002)\r\n*
  Unlisted dependencies no longer trigger extraneous second build\r\n  [#838](https://github.com/commercialhaskell/stack/issues/838)\r\n\r\n##
  0.1.4.1 - 2015-09-04\r\n\r\nFix stack's own Haddocks.  No changes to functionality
  (only comments updated).\r\n\r\n## 0.1.4.0 - 2015-09-04\r\n\r\nMajor changes:\r\n\r\n*
  You now have more control over how GHC versions are matched, e.g. \"use exactly\r\n
  \ this version,\" \"use the specified minor version, but allow patches,\" or \"use\r\n
  \ the given minor version or any later minor in the given major release.\" The\r\n
  \ default has switched from allowing newer later minor versions to a specific\r\n
  \ minor version allowing patches. For more information, see\r\n  [#736](https://github.com/commercialhaskell/stack/issues/736)
  and\r\n  [#784](https://github.com/commercialhaskell/stack/pull/784).\r\n* Support
  added for compiling with GHCJS\r\n* Stack can now reuse prebuilt binaries between
  snapshots. That means that, if\r\n  you build package foo in LTS-3.1, that binary
  version can be reused in\r\n  LTS-3.2, assuming it uses the same dependencies and
  flags.\r\n  [#878](https://github.com/commercialhaskell/stack/issues/878)\r\n\r\nOther
  enhancements:\r\n\r\n* Added the `--docker-env` argument, to set environment variables
  in Docker\r\n  container.\r\n* Set locale environment variables to UTF-8 encoding
  for builds to avoid\r\n  \"commitBuffer: invalid argument\" errors from GHC\r\n
  \ [#793](https://github.com/commercialhaskell/stack/issues/793)\r\n* Enable transliteration
  for encoding on stdout and stderr\r\n  [#824](https://github.com/commercialhaskell/stack/issues/824)\r\n*
  By default, `stack upgrade` automatically installs GHC as necessary\r\n  [#797](https://github.com/commercialhaskell/stack/issues/797)\r\n*
  Added the `ghc-options` key to `stack.yaml`\r\n  [#796](https://github.com/commercialhaskell/stack/issues/796)\r\n*
  Added the `extra-path` key to `stack.yaml`\r\n* Code page changes on Windows only
  apply to the build command (and its\r\n  synonyms), and can be controlled via a
  command line flag (still defaults to\r\n  on) [#757](https://github.com/commercialhaskell/stack/issues/757)\r\n*
  Implicitly add packages to extra-deps when a flag for them is set\r\n  [#807](https://github.com/commercialhaskell/stack/issues/807)\r\n*
  Use a precompiled Setup.hs for simple build types\r\n  [#801](https://github.com/commercialhaskell/stack/issues/801)\r\n*
  Set --enable-tests and --enable-benchmarks optimistically\r\n  [#805](https://github.com/commercialhaskell/stack/issues/805)\r\n*
  `--only-configure` option added\r\n  [#820](https://github.com/commercialhaskell/stack/issues/820)\r\n*
  Check for duplicate local package names\r\n* Stop nagging people that call `stack
  test`\r\n  [#845](https://github.com/commercialhaskell/stack/issues/845)\r\n* `--file-watch`
  will ignore files that are in your VCS boring/ignore files\r\n  [#703](https://github.com/commercialhaskell/stack/issues/703)\r\n*
  Add `--numeric-version` option\r\n\r\nBug fixes:\r\n\r\n* `stack init --solver`
  fails if `GHC_PACKAGE_PATH` is present\r\n  [#860](https://github.com/commercialhaskell/stack/issues/860)\r\n*
  `stack solver` and `stack init --solver` check for test suite and benchmark\r\n
  \ dependencies [#862](https://github.com/commercialhaskell/stack/issues/862)\r\n*
  More intelligent logic for setting UTF-8 locale environment variables\r\n  [#856](https://github.com/commercialhaskell/stack/issues/856)\r\n*
  Create missing directories for `stack sdist`\r\n* Don't ignore Cabal files with
  extra periods\r\n  [#895](https://github.com/commercialhaskell/stack/issues/895)\r\n*
  Deprecate unused `--optimizations` flag\r\n* Truncated output on slow terminals\r\n
  \ [#413](https://github.com/commercialhaskell/stack/issues/413)\r\n\r\n## 0.1.3.1
  - 2015-08-12\r\n\r\nBug fixes:\r\n\r\n* Ignore disabled executables\r\n  [#763](https://github.com/commercialhaskell/stack/issues/763)\r\n\r\n##
  0.1.3.0 - 2015-08-12\r\n\r\nMajor changes:\r\n\r\n* Detect when a module is compiled
  but not listed in the Cabal file\r\n  ([#32](https://github.com/commercialhaskell/stack/issues/32))\r\n
  \   * A warning is displayed for any modules that should be added to\r\n      `other-modules`
  in the Cabal file\r\n    * These modules are taken into account when determining
  whether a package\r\n      needs to be built\r\n* Respect TemplateHaskell addDependentFile
  dependency changes\r\n  ([#105](https://github.com/commercialhaskell/stack/issues/105))\r\n
  \   * TH dependent files are taken into account when determining whether a\r\n      package
  needs to be built.\r\n* Overhauled target parsing, added `--test` and `--bench`
  options\r\n  [#651](https://github.com/commercialhaskell/stack/issues/651)\r\n    *
  For details, see\r\n      [Build commands documentation](http://docs.haskellstack.org/en/stable/build_command/)\r\n\r\nOther
  enhancements:\r\n\r\n* Set the `HASKELL_DIST_DIR` environment variable\r\n  [#524](https://github.com/commercialhaskell/stack/pull/524)\r\n*
  Track build status of tests and benchmarks\r\n  [#525](https://github.com/commercialhaskell/stack/issues/525)\r\n*
  `--no-run-tests` [#517](https://github.com/commercialhaskell/stack/pull/517)\r\n*
  Targets outside of root dir don't build\r\n  [#366](https://github.com/commercialhaskell/stack/issues/366)\r\n*
  Upper limit on number of flag combinations to test\r\n  [#543](https://github.com/commercialhaskell/stack/issues/543)\r\n*
  Fuzzy matching support to give better error messages for close version numbers\r\n
  \ [#504](https://github.com/commercialhaskell/stack/issues/504)\r\n* `--local-bin-path`
  global option. Use to change where binaries get placed on a\r\n  `--copy-bins` [#342](https://github.com/commercialhaskell/stack/issues/342)\r\n*
  Custom snapshots [#111](https://github.com/commercialhaskell/stack/issues/111)\r\n*
  --force-dirty flag: Force treating all local packages as having dirty files\r\n
  \ (useful for cases where Stack can't detect a file change)\r\n* GHC error messages:
  display file paths as absolute instead of relative for\r\n  better editor integration\r\n*
  Add the `--copy-bins` option\r\n  [#569](https://github.com/commercialhaskell/stack/issues/569)\r\n*
  Give warnings on unexpected config keys\r\n  [#48](https://github.com/commercialhaskell/stack/issues/48)\r\n*
  Remove Docker `pass-host` option\r\n* Don't require `cabal-install` to upload\r\n
  \ [#313](https://github.com/commercialhaskell/stack/issues/313)\r\n* Generate indexes
  for all deps and all installed snapshot packages\r\n  [#143](https://github.com/commercialhaskell/stack/issues/143)\r\n*
  Provide `--resolver global` option\r\n  [#645](https://github.com/commercialhaskell/stack/issues/645)\r\n
  \   * Also supports `--resolver nightly`, `--resolver lts`, and\r\n      `--resolver
  lts-X`\r\n* Make `stack build --flag` error when flag or package is unknown\r\n
  \ [#617](https://github.com/commercialhaskell/stack/issues/617)\r\n* Preserve file
  permissions when unpacking sources\r\n  [#666](https://github.com/commercialhaskell/stack/pull/666)\r\n*
  `stack build` etc work outside of a project\r\n* `list-dependencies` command\r\n
  \ [#638](https://github.com/commercialhaskell/stack/issues/638)\r\n* `--upgrade-cabal`
  option to `stack setup`\r\n  [#174](https://github.com/commercialhaskell/stack/issues/174)\r\n*
  `--exec` option [#651](https://github.com/commercialhaskell/stack/issues/651)\r\n*
  `--only-dependencies` implemented correctly\r\n  [#387](https://github.com/commercialhaskell/stack/issues/387)\r\n\r\nBug
  fixes:\r\n\r\n* Extensions from the Cabal `other-extensions` field no longer enabled
  by\r\n  default [#449](https://github.com/commercialhaskell/stack/issues/449)\r\n*
  Fix: haddock forces rebuild of empty packages\r\n  [#452](https://github.com/commercialhaskell/stack/issues/452)\r\n*
  Don't copy over executables excluded by component selection\r\n  [#605](https://github.com/commercialhaskell/stack/issues/605)\r\n*
  Fix: Stack fails on Windows with git package in `stack.yaml` and no git binary\r\n
  \ on path [#712](https://github.com/commercialhaskell/stack/issues/712)\r\n* Fixed
  GHCi issue: Specifying explicit package versions (#678)\r\n* Fixed GHCi issue: Specifying
  -odir and -hidir as .stack-work/odir (#529)\r\n* Fixed GHCi issue: Specifying A
  instead of A.ext for modules (#498)\r\n\r\n## 0.1.2.0 - 2015-07-05\r\n\r\n* Add
  `--prune` flag to `stack dot`\r\n  [#487](https://github.com/commercialhaskell/stack/issues/487)\r\n*
  Add `--[no-]external`,`--[no-]include-base` flags to `stack dot`\r\n  [#437](https://github.com/commercialhaskell/stack/issues/437)\r\n*
  Add `--ignore-subdirs` flag to init command\r\n  [#435](https://github.com/commercialhaskell/stack/pull/435)\r\n*
  Handle attempt to use non-existing resolver\r\n  [#436](https://github.com/commercialhaskell/stack/pull/436)\r\n*
  Add `--force` flag to `init` command\r\n* exec style commands accept the `--package`
  option (see\r\n  [Reddit discussion](http://www.reddit.com/r/haskell/comments/3bd66h/stack_runghc_turtle_as_haskell_script_solution/))\r\n*
  `stack upload` without arguments doesn't do anything\r\n  [#439](https://github.com/commercialhaskell/stack/issues/439)\r\n*
  Print latest version of packages on conflicts\r\n  [#450](https://github.com/commercialhaskell/stack/issues/450)\r\n*
  Flag to avoid rerunning tests that haven't changed\r\n  [#451](https://github.com/commercialhaskell/stack/issues/451)\r\n*
  Stack can act as a script interpreter (see [Script interpreter]\r\n  (https://github.com/commercialhaskell/stack/wiki/Script-interpreter)
  and\r\n  [Reddit discussion](http://www.reddit.com/r/haskell/comments/3bd66h/stack_runghc_turtle_as_haskell_script_solution/))\r\n*
  Add the __`--file-watch`__ flag to auto-rebuild on file changes\r\n  [#113](https://github.com/commercialhaskell/stack/issues/113)\r\n*
  Rename `stack docker exec` to `stack exec --plain`\r\n* Add the `--skip-msys` flag\r\n
  \ [#377](https://github.com/commercialhaskell/stack/issues/377)\r\n* `--keep-going`,
  turned on by default for tests and benchmarks\r\n  [#478](https://github.com/commercialhaskell/stack/issues/478)\r\n*
  `concurrent-tests: BOOL`\r\n  [#492](https://github.com/commercialhaskell/stack/issues/492)\r\n*
  Use hashes to check file dirtiness\r\n  [#502](https://github.com/commercialhaskell/stack/issues/502)\r\n*
  Install correct GHC build on systems with libgmp.so.3\r\n  [#465](https://github.com/commercialhaskell/stack/issues/465)\r\n*
  `stack upgrade` checks version before upgrading\r\n  [#447](https://github.com/commercialhaskell/stack/issues/447)\r\n\r\n##
  0.1.1.0 - 2015-06-26\r\n\r\n* Remove GHC uncompressed tar file after installation\r\n
  \ [#376](https://github.com/commercialhaskell/stack/issues/376)\r\n* Put stackage
  snapshots JSON on S3\r\n  [#380](https://github.com/commercialhaskell/stack/issues/380)\r\n*
  Specifying flags for multiple packages\r\n  [#335](https://github.com/commercialhaskell/stack/issues/335)\r\n*
  single test suite failure should show entire log\r\n  [#388](https://github.com/commercialhaskell/stack/issues/388)\r\n*
  valid-wanted is a confusing option name\r\n  [#386](https://github.com/commercialhaskell/stack/issues/386)\r\n*
  `stack init` in multi-package project should use local packages for dependency\r\n
  \ checking [#384](https://github.com/commercialhaskell/stack/issues/384)\r\n* Display
  information on why a snapshot was rejected\r\n  [#381](https://github.com/commercialhaskell/stack/issues/381)\r\n*
  Give a reason for unregistering packages\r\n  [#389](https://github.com/commercialhaskell/stack/issues/389)\r\n*
  `stack exec` accepts the `--no-ghc-package-path` parameter\r\n* Don't require build
  plan to upload\r\n  [#400](https://github.com/commercialhaskell/stack/issues/400)\r\n*
  Specifying test components only builds/runs those tests\r\n  [#398](https://github.com/commercialhaskell/stack/issues/398)\r\n*
  `STACK_EXE` environment variable\r\n* Add the `stack dot` command\r\n* `stack upgrade`
  added\r\n  [#237](https://github.com/commercialhaskell/stack/issues/237)\r\n* `--stack-yaml`
  command line flag\r\n  [#378](https://github.com/commercialhaskell/stack/issues/378)\r\n*
  `--skip-ghc-check` command line flag\r\n  [#423](https://github.com/commercialhaskell/stack/issues/423)\r\n\r\nBug
  fixes:\r\n\r\n* Haddock links to global packages no longer broken on Windows\r\n
  \ [#375](https://github.com/commercialhaskell/stack/issues/375)\r\n* Make flags
  case-insensitive\r\n  [#397](https://github.com/commercialhaskell/stack/issues/397)\r\n*
  Mark packages uninstalled before rebuilding\r\n  [#365](https://github.com/commercialhaskell/stack/issues/365)\r\n\r\n##
  0.1.0.0 - 2015-06-23\r\n\r\n* Fall back to Cabal dependency solver when a snapshot
  can't be found\r\n* Basic implementation of `stack new`\r\n  [#137](https://github.com/commercialhaskell/stack/issues/137)\r\n*
  `stack solver` command\r\n  [#364](https://github.com/commercialhaskell/stack/issues/364)\r\n*
  `stack path` command\r\n  [#95](https://github.com/commercialhaskell/stack/issues/95)\r\n*
  Haddocks [#143](https://github.com/commercialhaskell/stack/issues/143):\r\n    *
  Build for dependencies\r\n    * Use relative links\r\n    * Generate module contents
  and index for all packages in project\r\n\r\n## 0.0.3 - 2015-06-17\r\n\r\n* `--prefetch`\r\n
  \ [#297](https://github.com/commercialhaskell/stack/issues/297)\r\n* `upload` command
  ported from stackage-upload\r\n  [#225](https://github.com/commercialhaskell/stack/issues/225)\r\n*
  `--only-snapshot`\r\n  [#310](https://github.com/commercialhaskell/stack/issues/310)\r\n*
  `--resolver` [#224](https://github.com/commercialhaskell/stack/issues/224)\r\n*
  `stack init` [#253](https://github.com/commercialhaskell/stack/issues/253)\r\n*
  `--extra-include-dirs` and `--extra-lib-dirs`\r\n  [#333](https://github.com/commercialhaskell/stack/issues/333)\r\n*
  Specify intra-package target\r\n  [#201](https://github.com/commercialhaskell/stack/issues/201)\r\n\r\n##
  0.0.2 - 2015-06-14\r\n\r\n* Fix some Windows specific bugs\r\n  [#216](https://github.com/commercialhaskell/stack/issues/216)\r\n*
  Improve output for package index updates\r\n  [#227](https://github.com/commercialhaskell/stack/issues/227)\r\n*
  Automatically update indices as necessary\r\n  [#227](https://github.com/commercialhaskell/stack/issues/227)\r\n*
  --verbose flag [#217](https://github.com/commercialhaskell/stack/issues/217)\r\n*
  Remove packages (HTTPS and Git)\r\n  [#199](https://github.com/commercialhaskell/stack/issues/199)\r\n*
  Config values for system-ghc and install-ghc\r\n* Merge `stack deps` functionality
  into `stack build`\r\n* `install` command\r\n  [#153](https://github.com/commercialhaskell/stack/issues/153)
  and\r\n  [#272](https://github.com/commercialhaskell/stack/issues/272)\r\n* overriding
  architecture value (useful to force 64-bit GHC on Windows, for\r\n  example)\r\n*
  Overhauled test running (allows cycles, avoids unnecessary recompilation, etc)\r\n\r\n##
  0.0.1 - 2015-06-09\r\n\r\n* First public release, beta quality\r\n"
changelog-type: markdown
description: "## The Haskell Tool Stack\r\n\r\n[![Unit tests](https://github.com/commercialhaskell/stack/workflows/Unit%20tests/badge.svg)](https://github.com/commercialhaskell/stack/actions/workflows/unit-tests.yml)\r\n[![Integration
  tests](https://github.com/commercialhaskell/stack/workflows/Integration%20tests/badge.svg)](https://github.com/commercialhaskell/stack/actions/workflows/integration-tests.yml)\r\n[![Release](https://img.shields.io/github/release/commercialhaskell/stack.svg)](https://github.com/commercialhaskell/stack/releases)\r\n\r\nStack
  is a cross-platform program for developing Haskell projects. It is intended for
  Haskellers both new and experienced.\r\n\r\nSee [haskellstack.org](http://haskellstack.org),
  or the [doc](./doc) directory\r\nof this repository, for more information.\r\n\r\n###
  Learning to use Stack\r\n\r\nIf are learning to use Stack and have questions, a
  discussion at the\r\n[Haskell Community](https://discourse.haskell.org/) forum may
  help. See its\r\n'Learn' category.\r\n\r\n### Community\r\n\r\nYou can participate
  with the Stack community in the following areas:\r\n\r\n* the [Haskell Community](https://discourse.haskell.org/)
  forum\r\n\r\n* the Haskell\r\n  [Stack and Stackage](https://matrix.to/#/#haskell-stack:matrix.org)\r\n
  \ room (address `#haskell-stack:matrix.org`) on [Matrix](https://matrix.org/)\r\n"
description-type: markdown
hash: f10248859872afc4d1e77302c90e0a4fc2d3b743b999850f1847e26f6ea32a4a
homepage: http://haskellstack.org
latest: 3.5.1
license-name: BSD-3-Clause
maintainer: manny@fpcomplete.com
synopsis: The Haskell Tool Stack
test-bench-deps:
  Cabal: '>=3.8.1.0 && <3.12'
  QuickCheck: '>=2.14.3'
  aeson: '>=2.0.3.0'
  aeson-warning-parser: '>=0.1.1'
  ansi-terminal: '>=1.0.2'
  array: '>=0.5.8.0'
  async: '>=2.2.5'
  attoparsec: '>=0.14.4'
  base: '>=4.16.0.0 && <5'
  base64-bytestring: '>=1.2.1.0'
  bytestring: '>=0.12.1.0'
  casa-client: '>=0.0.2'
  companion: '>=0.1.0'
  conduit: '>=1.3.6.1'
  conduit-extra: '>=1.3.7'
  containers: '>=0.6.8'
  crypton: '>=1.0.1'
  directory: '>=1.3.8.5'
  echo: '>=0.1.4'
  exceptions: '>=0.10.7'
  extra: '>=1.7.16'
  file-embed: '>=0.0.16.0'
  filelock: '>=0.1.1.7'
  filepath: '>=1.4.301.0'
  fsnotify: '>=0.4.1'
  generic-deriving: '>=1.14.6'
  ghc-boot: '>=9.8.4'
  hashable: '>=1.4.7.0'
  hi-file-parser: '>=0.1.7.0'
  hpack: '>=0.36.0'
  hpc: '>=0.7.0.0'
  hspec: '>=2.11.11'
  http-client: '>=0.7.18'
  http-client-tls: '>=0.3.6.2'
  http-conduit: '>=2.3.9.1'
  http-download: '>=0.2.1.0'
  http-types: '>=0.12.4'
  memory: '>=0.18.0'
  microlens: '>=0.4.13.1'
  mtl: '>=2.3.1'
  mustache: '>=2.4.2'
  neat-interpolation: '>=0.5.1.4'
  open-browser: '>=0.2.1.0'
  optparse-applicative: '>=0.18.1.0'
  pantry: '>=0.10.0'
  path: '>=0.9.5'
  path-io: '>=1.8.2'
  persistent: '>=2.14.0.0 && <2.15'
  persistent-sqlite: '>=2.13.3.0'
  pretty: '>=1.1.3.6'
  process: '>=1.6.13.2'
  project-template: '>=0.2.1.0'
  random: '>=1.2.1.3'
  raw-strings-qq: '>=1.1'
  rio: '>=0.1.22.0'
  rio-prettyprint: '>=0.1.8.0'
  split: '>=0.2.5'
  stack: '>=0'
  stm: '>=2.5.3.1'
  tar: '>=0.6.2.0'
  template-haskell: '>=2.21.0.0'
  text: '>=2.1.1'
  time: '>=1.12.2'
  transformers: '>=0.6.1.0'
  unix: '>=0'
  unix-compat: '>=0.7.3'
  unordered-containers: '>=0.2.20'
  vector: '>=0.13.2.0'
  yaml: '>=0.11.11.2'
  zlib: '>=0.7.1.0'
