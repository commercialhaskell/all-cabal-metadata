homepage: ''
changelog-type: markdown
hash: 2981d5e05107c02ef579cce55c0229918de926fed600ac66db8611162c6fe933
test-bench-deps: {}
maintainer: Duncan Coutts dunca@well-typed.com, Marcin Szamotulski coot@coot.me
synopsis: Strict STM interface polymorphic over stm implementation.
changelog: |
  # Changelog

  ## 1.0.0.0

  ## 0.6.0.0

  ## 0.5.0.0

  ## 0.4.0.0

  ## 0.3.0.0

  * split modules in a similar way that the `stm` package is.
  * added `StrictTChan`, `TSem` and `StrictTArray`
  * added `unGetTQueue` & `unGetTBQueue`
  * added `StrictTQueue` & `StrictTBQueue`
  * support `ghc-9.2` & `ghc-9.4`
basic-deps:
  stm: '>=2.5 && <2.6'
  base: '>=4.9 && <4.18'
  array: -any
  io-classes: ^>=1.0
all-versions:
- 1.0.0.0
author: Alexander Vieth, Duncan Coutts, Marcin Szamotulski, Thomas Winant
latest: 1.0.0.0
description-type: markdown
description: |
  # Strict Software Transaction Memory

  The `strict-stm` package provides a strict interface to software transaction
  memory.  It builds on top of [`io-classes`] and thus it provides the interface
  for both [`stm`] as well as [`io-sim`].

  # Novel testing / space-leak elimination approach

  The strict interface provides a novel way of testing/eliminating space-leaks
  which might lurk in `stm` shared mutable variables.  Together with the
  [`nothunks`] library it was successfully used to eliminate and keep a large
  system ([`cardano-node`]) space leak free.

  [`cardano-node`]: https://www.github.com/input-output-hk/cardano-node
  [`io-classes`]: https://hackage.haskell.org/package/io-classes
  [`io-sim`]: https://hackage.haskell.org/package/io-sim
  [`nothunks`]: https://hackage.haskell.org/package/nothunks
  [`stm`]: https://hackage.haskell.org/package/stm
license-name: Apache-2.0
