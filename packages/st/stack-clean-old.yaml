homepage: https://github.com/juhp/stack-clean-old
changelog-type: markdown
hash: 7c61a70bcfc683b09f21e915de66020424d5748bcc245e2510e670704ffa668b
test-bench-deps: {}
maintainer: Jens Petersen <juhpetersen@gmail.com>
synopsis: Clean away old stack build artefacts
changelog: |
  # Release history for stack-clean-old-work

  ## 0.4 (2021-09-26)
  - dryrun is now default: use --delete for actual removal
    (suggested by @andreasabel #6)
  - new --subdirs and --recursive options
  - various output improvements
  - purge-older now also says "would be removed" when dryrun

  ## 0.3.1 (2021-08-01)
  - 'delete-work': use find -prune and ignore inaccessible files (@petrem, #4)

  ## 0.3 (2021-01-08)
  - drop subsubcommands to simplify UI
  - default to project if there is a .stack-work/ dir, otherwise global ~/.stack
  - rename commands:
    - remove-version -> remove
    - remove-earlier-minor -> keep-minor
    - remove-older -> purge-older
    - remove-work -> delete-work
  - fix handling of partially installed ghc compiler temp dirs (#2)
  - rename --dryrun to --dry-run (#1)
  - drop --dir option
  - delete-work: use --all to run from a non-project dir

  ## 0.2.2 (2002-12-31)
  - add 'project remove-work' to recursively remove .stack-work from projects

  ## 0.2.1 (2020-11-14)
  - remove-earlier-minor can now take a major version
  - major internal refactors with VersionSnapshots type
  - split code into modules

  ## 0.2 (2020-10-26)
  - add --dryrun to all remove commands
  - remove-earlier-minor subcommands to purge for previous ghc minor versions
  - allow major ghc X.Y versions (prompts for removal)
  - 'ghc list' is now sorted

  ## 0.1 (2020-09-22)
  - initial release with project and snapshots subcommands
basic-deps:
  extra: '>=1.4.3'
  filemanip: -any
  base: '>=4.8 && <5'
  simple-cmd-args: '>=0.1.2'
  filepath: -any
  simple-cmd: '>=0.1.4'
  directory: '>=1.2.5'
all-versions:
- '0.1'
- '0.2'
- 0.2.1
- 0.2.2
- '0.3'
- 0.3.1
- '0.4'
author: Jens Petersen <juhpetersen@gmail.com>
latest: '0.4'
description-type: markdown
description: |
  # stack-clean-old

  A small tool to clean away older Haskell [stack](https://docs.haskellstack.org)
  snapshot builds and ghc versions to recover diskspace.

  ## Usage
  ```
  stack-clean-old [size|list|remove|keep-minor|purge-older|delete-work] [(-p|--project) | (-g|--ghc)] [--delete] [GHCVER]
  ```
  Options:

  - `--project` (default in a stack project dir): act on `.stack-work/install/`
  - `--global` (default outside a project dir): act on `~/.stack/snapshots/` and `~/.stack/programs/`

  and the subcommands:

  `size`:
      prints the total size of the above directories
      (`size` does not take a GHCVER argument).

  `list`:
      shows the total size and number of snapshots per ghc version
      (the GHCVER argument is optional).

  `remove`:
      removes for the specified ghc version (the GHCVER argument is required).

  `keep-minor`:
      removes the builds/installs for older minor releases of ghc major versions.
      If GHCVER is given then only minor versions older than it are removed.

  `purge-older` and `delete-work`:
      see sections below

  If you remove any needed snapshot builds for a version of ghc,
  then you would have to rebuild them again for any projects still using them,
  so removal should be used cautiously, but it can recover a lot of diskspace.

  Since version 0.4 dry-run mode is now the default and one needs to use
  `--delete` (`-d`) for actual deletion of files,
  after checking the dry-run output first.

  ### Example usage
  To remove project builds for ghc-8.2.2:
  ```
  $ stack-clean-old list
  154M  8.2.2  (5 dirs)
  154M  8.4.4  (5 dirs)
  163M  8.6.5  (5 dirs)
  $ stack-clean-old remove --delete -p 8.2.2
  ```

  Remove stack ghc-8.4 snapshot builds and compilers before 8.4.4:
  ```
  $ stack-clean-old list -g 8.4
  421M  8.4.1  (7 dirs)
  368M  8.4.2  (6 dirs)
  489M  8.4.3  (8 dirs)
  799M  8.4.4  (24 dirs)
  $ stack-clean-old keep-minor -d -g 8.4.4
  ghc-tinfo6-8.4.3 removed
  7 dirs removed for 8.4.1
  6 dirs removed for 8.4.2
  8 dirs removed for 8.4.3
  ```

  Incidently I build my projects across as many major Stackage LTS versions as possible (using my stack-all tool), and collectively this piles up to a lot of diskspace: so I wrote this tool to help manage that.

  ### Purging older stack project builds
  ```
  stack-clean-old purge-older
  ```
  This command removes older stack builds from `.stack-work/install/`.
  By default it keeps 5 newest builds per ghc version.

  The preservation/deletion is calculated and done per ghc version.

  NB: If you regularly build your project for several branches/tags against the same LTS or ghc version then it is safer to avoid using `purge-older`.

  ### Deleting all `.stack-work/` subdirectories
  `stack-clean-old delete-work` can be used to recursively remove
  _all_ `.stack-work/` dirs from a project to save space
  (seems same as `stack clean --full`).

  `stack-clean-old delete-work --all` works from outside stack projects:
  please use with care.

  ## Installation

  Run `stack install` or `cabal install`

  ## Related
  This tool complements [stack-all](https://hackage.haskell.org/package/stack-all)
  which builds projects over LTS major versions and hence generates lot of stack builds.

  [cabal-clean](https://hackage.haskell.org/package/cabal-clean) is
  a similar tool for cleaning old cached cabal build files.

  ## Contributing
  BSD license

  Project: https://github.com/juhp/stack-clean-old

  ## Warning disclaimer
  Use at your own risk: the author takes no responsibility for any loss or
  damaged caused by using this tool.

  Bug reports, suggestions, and improvements are welcome.
license-name: BSD-3-Clause
