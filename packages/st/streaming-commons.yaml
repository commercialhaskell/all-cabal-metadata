homepage: https://github.com/fpco/streaming-commons
changelog-type: markdown
hash: d5c6fb99efd4e71bdb0351d55f2d87e16c11880f42998e39363eb63f057ae24b
test-bench-deps:
  streaming-commons: -any
  bytestring: '>=0.10.2.0'
  unix: -any
  base: -any
  hspec: '>=1.8'
  text: -any
  network: '>=2.4.0.0'
  async: -any
  array: -any
  gauge: -any
  zlib: -any
  deepseq: -any
  QuickCheck: -any
maintainer: michael@snoyman.com
synopsis: Common lower-level functions needed by various streaming data libraries
changelog: |
  # ChangeLog for streaming-commons

  ## 0.2.2.6

  * Remove the zlib headers [#72](https://github.com/fpco/streaming-commons/issues/72)

  ## 0.2.2.4

  * Fix docstrings for text 2.0

  ## 0.2.2.3

  * Support text 2.0 [#65](https://github.com/fpco/streaming-commons/pull/65)

  ## 0.2.2.2

  * Support GHC 9.2 [#62](https://github.com/fpco/streaming-commons/pull/62)

  ## 0.2.2.1

  * Fix test suite compilation issue [stackage#5528](https://github.com/commercialhaskell/stackage/issues/5528)

  ## 0.2.2.0

  * Remove `AI_ADDRCONFIG` [#58](https://github.com/fpco/streaming-commons/issues/58)

  ## 0.2.1.2

  * Update `defaultReadBufferSize` to use system default instead of hardcoded value [#54](https://github.com/fpco/streaming-commons/issues/54)

  ## 0.2.1.1

  * Fix a failing test case (invalid `ByteString` copying), does not affect library itself

  ## 0.2.1.0

  * Change `bindRandomPortGen` to use binding to port 0

  ## 0.2.0

  * Drop `blaze-builder` dependency

  ## 0.1.19

  * Update `getAddrInfo` hints to allow hostnames and portnames [#46](https://github.com/fpco/streaming-commons/issues/46)

  ## 0.1.18

  * Add `isCompleteInflate`

  ## 0.1.17

  * Add `bindPortGenEx`

  ## 0.1.16

  * Add `closeStreamingProcessHandle`

  ## 0.1.15.5

  * Make getSocket{Family}TCP try all addr candidates [#32](https://github.com/fpco/streaming-commons/pull/32)

  ## 0.1.15.3

  * Fix benchmarks

  ## 0.1.15.2

  * Document child process behavior in `waitForProcess`

  ## 0.1.15.1

  * Catch exceptions thrown by `waitForProcess`

  ## 0.1.15

  * Use `NO_DELAY1 for TCP client connections [#27](https://github.com/fpco/streaming-commons/issues/27)

  ## 0.1.14.2

  * Fix bug in process exception display of args with spaces/quotes

  ## 0.1.14

  * Exporting HasReadBufferSize; instance for ClientSettingsUnix [#24](https://github.com/fpco/streaming-commons/pull/24)

  ## 0.1.13

  * Make size of read buffer configurable, change default size to 32 kiB [#23](https://github.com/fpco/streaming-commons/pull/23)

  ## 0.1.12.1

  * Fix up `acceptSafe` as [mentioned by Kazu](https://github.com/yesodweb/wai/issues/361#issuecomment-102204803)

  ## 0.1.12

  * `appRawSocket`

  ## 0.1.11

  * `getUnusedInflated`: Return uncompressed data following compressed data [#20](https://github.com/fpco/streaming-commons/issues/20)

  ## 0.1.10

  Support blaze-builder >= 0.4.  Add `newByteStringBuilderRecv` to Data.Streaming.ByteString.Builder; add modules Data.Streaming.ByteString.Builder.Buffer and  Data.Streaming.ByteString.Builder.Class.

  ## 0.1.9

  Add Data.Streaming.ByteString.Builder

  ## 0.1.8

  Generalise types of run\*Server which never cleanly return [#13](https://github.com/fpco/streaming-commons/pull/13)

  ## 0.1.7.1

  Fix `streamingProcess` so that it doesn't close `Handle`s passed in with
  `UseProvidedHandle`.

  ## 0.1.7

  `withCheckedProcess` added.

  ## 0.1.6

  Provide `appCloseConnection` to get the underlying connection from an `AppData`.
basic-deps:
  bytestring: '>=0.10.2.0'
  unix: -any
  stm: -any
  base: '>=4.12 && <5'
  text: '>=1.2 && <1.3 || >=2.0 && <2.2'
  process: -any
  network: '>=2.4.0.0'
  async: -any
  array: -any
  zlib: -any
  transformers: -any
  random: -any
  directory: -any
all-versions:
- 0.1.0.0
- 0.1.0.1
- 0.1.0.2
- 0.1.1
- 0.1.2
- 0.1.2.1
- 0.1.2.2
- 0.1.2.3
- 0.1.2.4
- 0.1.3
- 0.1.3.1
- 0.1.4
- 0.1.4.1
- 0.1.4.2
- 0.1.5
- 0.1.6
- 0.1.7
- 0.1.7.2
- 0.1.7.3
- 0.1.8
- 0.1.8.1
- 0.1.9
- 0.1.9.1
- 0.1.10.0
- 0.1.11
- 0.1.12
- 0.1.12.1
- 0.1.13
- 0.1.14
- 0.1.14.1
- 0.1.14.2
- 0.1.15
- 0.1.15.1
- 0.1.15.2
- 0.1.15.3
- 0.1.15.4
- 0.1.15.5
- 0.1.16
- 0.1.17
- 0.1.18
- 0.1.19
- 0.2.0.0
- 0.2.1.0
- 0.2.1.1
- 0.2.1.2
- 0.2.2.0
- 0.2.2.1
- 0.2.2.2
- 0.2.2.3
- 0.2.2.4
- 0.2.2.5
- 0.2.2.6
author: Michael Snoyman, Emanuel Borsboom
latest: 0.2.2.6
description-type: markdown
description: |
  streaming-commons
  =================

  Common lower-level functions needed by various streaming data libraries.
  Intended to be shared by libraries like conduit and pipes.

  [![Build status](https://github.com/fpco/streaming-commons/actions/workflows/tests.yml/badge.svg)](https://github.com/fpco/streaming-commons/actions/workflows/tests.yml)

  Dependencies
  ------------

  One of the requirements of this package is to restrict ourselves to "core"
  dependencies. The definition of core is still to be decided, but here's a
  working start:

  * *No* dependency on system libraries, beyond that which is required by other
    dependencies.
  * Anything which ships with GHC. *However*, we must retain compatibility with
    versions of those packages going back to at least GHC 7.4, and preferably
    earlier.
  * text, once again with backwards compatibility for versions included with
    legacy Haskell Platform. In other words, 0.11.2 support is required.
  * network, support back to 2.3. We do *not* need to support the
    network/network-bytestring split.
  * stm, preferably all the way back to 2.1.
  * transformers

  For debate:

  * Other Haskell Platform packages, especially vector and attoparsec.
license-name: MIT
