homepage: https://github.com/haskell-streaming/streaming-utils
changelog-type: markdown
hash: 99ad7a2816921a55a19147e42edf44ddbeedaa965c97df079393455564e0b701
test-bench-deps: {}
maintainer: chessai1996@gmail.com
synopsis: http, attoparsec, pipes and other utilities for the streaming libraries
changelog: |
  # 0.2.2.0

  - Build with `streaming-bytestring` 0.2.3.
  - Build with `aeson-2.1`.
basic-deps:
  http-client: '>=0.2 && <0.8'
  streaming: '>=0.2 && <0.3'
  streaming-commons: '>0.2 && <0.3'
  bytestring: '>0.10 && <0.11'
  base: '>=4.8 && <5.0'
  network-simple: -any
  network: -any
  json-stream: '>0.4 && <0.5'
  pipes: '>=4.0 && <4.4'
  http-client-tls: -any
  mtl: '>=2.2 && <2.3'
  attoparsec: '>0.13.0.0 && <0.15'
  transformers: '>=0.4 && <0.6'
  streaming-bytestring: '>=0.1 && <0.3'
  resourcet: '>1.0 && <1.3'
  aeson: '>0.8 && <2.2'
all-versions:
- 0.1.0.0
- 0.1.0.1
- 0.1.1.0
- 0.1.1.1
- 0.1.2.0
- 0.1.2.2
- 0.1.3.0
- 0.1.4.0
- 0.1.4.1
- 0.1.4.2
- 0.1.4.3
- 0.1.4.4
- 0.1.4.5
- 0.1.4.6
- 0.1.4.7
- 0.2.0.0
- 0.2.1.0
- 0.2.2.0
author: michaelt
latest: 0.2.2.0
description-type: haddock
description: |-
  This package includes http-client, aeson, attoparsec, zlib and pipes utilities for use with
  the <http://hackage.haskell.org/package/streaming streaming> and
  <http://hackage.haskell.org/package/streaming-bytestring streaming bytestring> libraries.
  The modules generally closely follow similarly named modules in the pipes
  \'ecosystem\', using similar function names, where possible.

  Thus, for example, using the http client module, we might number the lines
  of a remote document thus:

  > import Streaming
  > import Streaming.Prelude (with, each)
  > import qualified Streaming.Prelude as S
  > import Data.ByteString.Streaming.HTTP
  > import qualified Data.ByteString.Streaming.Char8 as Q
  >
  > main =  runResourceT $ do
  >    let output = numbers <|> Q.lines (simpleHTTP "http://lpaste.net/raw/146542")
  >    Q.putStrLn $ Q.unlines output
  >
  > numbers :: Monad m => Stream (Q.ByteString m) m ()
  > numbers = with (each [1..]) $ \n -> Q.pack (each (show n ++ ".  "))
  > -- ["1. ", "2. " ..]

  The memory requirements of this @Prelude@-ish program will not be
  affected by the fact that, say, the third \'line\' is 10 terabytes long.

  This package of course heaps together a number of dependencies, as it
  seemed best not to spam hackage with numerous packages. If it seems
  reasonable to detach some of it, please raise an issue on the github page.

  Questions about usage can be raised as issues, or addressed to the
  <https://groups.google.com/forum/#!forum/haskell-pipes pipes list>.
license-name: BSD-3-Clause
