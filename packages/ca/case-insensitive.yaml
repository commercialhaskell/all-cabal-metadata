all-versions:
- '0.1'
- '0.2'
- 0.2.0.1
- 0.2.0.2
- '0.3'
- 0.3.0.1
- '0.4'
- 0.4.0.1
- 0.4.0.2
- 0.4.0.3
- 0.4.0.4
- '1.0'
- 1.0.0.1
- 1.0.0.2
- '1.1'
- 1.1.0.1
- 1.1.0.2
- 1.1.0.3
- 1.2.0.0
- 1.2.0.1
- 1.2.0.2
- 1.2.0.3
- 1.2.0.4
- 1.2.0.5
- 1.2.0.6
- 1.2.0.7
- 1.2.0.8
- 1.2.0.9
- 1.2.0.10
- 1.2.0.11
- 1.2.1.0
author: Bas van Dijk
basic-deps:
  base: '>=3 && <5'
  bytestring: '>=0.9'
  deepseq: '>=1.1'
  hashable: '>=1.0'
  text: '>=0.3'
changelog: |
  1.2.1.0

  *  Add traverse

  1.2.0.11

  *  Dropped upper version bounds of dependencies because it's to much work to maintain.

  1.2.0.10

  * Support criterion-1.2


  1.2.0.9

  * Support base-4.10


  1.2.0.8

  * Support HUnit-1.5.


  1.2.0.7

  * Fix build of benchmarks when getting the sources from Hackage.


  1.2.0.6

  * Add Travis CI support
  * Add Semigroup s => Semigroup (CI s) instance


  1.2.0.5

  * Support HUnit-1.3
  * Support criterion-1.1
  * Updated .nix files


  1.2.0.4

  * Fixed #17: https://github.com/basvandijk/case-insensitive/issues/17


  1.2.0.3

  * Add CHANGELOG to extra-source files so that it shows up on Hackage


  1.2.0.2

  * Bump base and deepseq upper bounds for GHC 7.10 compatibility

  * Add case-insensitive.nix and default.nix

  * Fix #14: Build failure with GHC 7.2.2

  * Fix #8: Don't unnecessarily use NoImplicitPrelude


  1.2.0.1

  * Solved warnings on GHC-7.8.3

  * Bump text upper version bounds


  1.2.0.0

  * Derived a Data instance for CI


  1.1.0.3

  * Support text-1.1


  1.1.0.2

  * Support text-1.0


  1.1.0.1

  * Fixed bad character L178


  1.1

  * Added the Data.CaseInsensitive.Unsafe module

  * Mark Data.CaseInsensitive.Internal as Unsafe


  1.0.0.2

  *  Support criterion-0.8


  1.0.0.1

  * Fix building on GHC-6.12.1

  * Bump base upper bound for GHC 7.7

  * Added a NEWS file


  1.0  @  Mon Jan 28 14:39:05 UTC 2013

  * Make package ready for the Haskell Platform

  * Drop the UnicodeSyntax, TypeSynonymInstances and FlexibleInstances
    language extensions

  * Add instance NFData s => NFData (CI s)

  * Add a hidden method to the FoldCase type class:
      foldCaseList :: [s] -> [s]
      foldCaseList = L.map foldCase

  * Add instance FoldCase a => FoldCase [a] where
          foldCase = foldCaseList

  * Add instance FoldCase Char where
          foldCase     = toLower
          foldCaseList = TL.unpack . TL.toCaseFold . TL.pack

  * Added a simple test suite

  * Added a simple benchmark

  * Added a rewrite rule to make 'mk' more efficient on strict
    ByteStrings


  0.4.0.4  @  Fri Dec 14 07:06:58 UTC 2012

  * Support hashable-1.2


  0.4.0.3  @  Sat Aug 18 07:20:49 UTC 2012

  * Improve performance of foldCase on sctrict and lazy ByteStrings


  0.4.0.2  @  Thu Aug 16 14:58:33 UTC 2012

  * Declare Data.CaseInsensitive to be Trustworthy

  * Support base-4.6

  * Support bytestring-0.10


  0.4.0.1  @  Wed Dec 14 15:24:55 UTC 2011

  * Support base-4.5


  0.4  @  Thu Oct 27 18:29:58 UTC 2011

  * Remove instance FoldCase Char

  * Perform proper case folding on Strings:
    -instance FoldCase String where foldCase = L.map toLower
    +instance FoldCase String where foldCase = TL.unpack . TL.toCaseFold . TL.pack


  0.3.0.1  @  Mon Aug 8 06:28:21 UTC 2011

  * Support base-4.4


  0.3  @  Thu Jul 14 07:38:52 UTC 2011

  * Add instance Hashable s => Hashable (CI s)


  0.2.0.2  @  Thu Jun 30 22:24:23 UTC 2011

  * Moved from darcs on code.haskell.org
    to git on githb.com


  0.2.0.1  @  Tue Mar 29 20:30:32 UTC 2011

  * Drop dependency on base-unicode-symbols


  0.2  @  Mon Feb 7 20:18:34 UTC 2011

  * Export foldedCase :: CI s -> s

  * Remove instance FoldCase s â‡’ FoldCase [s]

  * Add instance FoldCase String


  0.1  @  Sun Feb 6 23:54:22 UTC 2011

  * Initial release
changelog-type: text
description: |
  [![Hackage](https://img.shields.io/hackage/v/case-insensitive.svg)](https://hackage.haskell.org/package/case-insensitive)
  [![Build Status](https://travis-ci.org/basvandijk/case-insensitive.svg)](https://travis-ci.org/basvandijk/case-insensitive)

  The module `Data.CaseInsensitive` provides the `CI` type constructor
  which can be parameterised by a string-like type like: `String`,
  `ByteString`, `Text`, etc.. Comparisons of values of the resulting
  type will be insensitive to cases.
description-type: markdown
hash: 9dfd3171fc7698cf8d931727d3af3a7b389135b583e46b5adac1f9d2026fff61
homepage: https://github.com/basvandijk/case-insensitive
latest: 1.2.1.0
license-name: BSD-3-Clause
maintainer: Bas van Dijk <v.dijk.bas@gmail.com>
synopsis: Case insensitive string comparison
test-bench-deps:
  HUnit: '>=1.2.2'
  base: '>=3 && <5'
  bytestring: '>=0.9'
  case-insensitive: '>=0'
  criterion: '>=0.6.1'
  deepseq: '>=1.1'
  test-framework: '>=0.2.4'
  test-framework-hunit: '>=0.2.4'
  text: '>=0.3'
