homepage: ''
changelog-type: markdown
hash: fc38ad708bc536d99c010d130bf5823b5b1fa08e3b1e5075071f3f5964d84a1a
test-bench-deps:
  base: -any
  silently: ^>=1.2.5.2
  tasty-hunit: ^>=0.10.0.3
  tasty: ^>=1.4.2.3
  cabal-hoogle: -any
maintainer: kokobd <contact@zelinf.net>
synopsis: Just like "stack hoogle", but for cabal projects
changelog: |
  # Revision history for cabal-hoogle

  ## 0.1.0.0 -- 2022-07-22

  * First version. Supports `cabal-hoogle generate` and `cabal-hoogle run`
basic-deps:
  string-interpolate: ^>=0.3.1.2
  extra: ^>=1.7.10
  Cabal: '>=3.2.0.0 && <4'
  base: '>=4.14 && <5'
  text: ^>=1.2.4
  filepath: ^>=1.4.2
  containers: ^>=0.6.2.1
  regex-tdfa: ^>=1.3.1
  typed-process: ^>=0.2.10
  transformers: ^>=0.5.6
  optparse-applicative: ^>=0.17.0
  cabal-hoogle: -any
  directory: ^>=1.3.6
all-versions:
- 0.1.0.0
author: kokobd <contact@zelinf.net>
latest: 0.1.0.0
description-type: markdown
description: "# cabal-hoogle\n\n![GitHub Action Badge](https://github.com/kokobd/cabal-hoogle/actions/workflows/test.yml/badge.svg?branch=main)\n\nLike
  `stack hoogle`, but works for cabal projects. Generates hoogle database of your
  local packages and all dependencies.\n\n<img src=\"https://user-images.githubusercontent.com/16440269/180609310-643ff9a1-c1eb-479a-b9ca-0cf69d65a62a.gif\"
  width=\"600\"/>\n\n## Installation\n\nCompiling from source requires a minimum GHC
  version of 8.10. Having `cabal-hoogle` installed, you may use it on a wider range
  of GHC,\nas long as the `Cabal` used to build `cabal-hoogle` and `cabal-install`
  match.\n\nStep 1, run `cabal update` to make sure you are using the latest hackage
  index\n\nStep 2, check the `Cabal` library version used by your cabal\n```\ncabal
  --version\n```\nIt shows my cabal is using `3.6.3.0` of Cabal library. **`cabal-hoogle`
  requires at least Cabal 3.2**. Update it before continue.\n```\ncabal-install version
  3.6.2.0\ncompiled using version 3.6.3.0 of the Cabal library \n```\n\nStep 3, use
  `cabal install` to install `cabal-hoogle` from Hackage, specifying the `Cabal` library
  version you fetched above.\n```\ncabal install --constraint=\"Cabal == 3.6.3.0\"
  cabal-hoogle\n```\n\n## Usage\n\n### Prerequisite\n\n#### Install Hoogle\nMake sure
  `hoogle` is installed in your `$PATH`. You can do this by running `cabal install
  hoogle`\n\n#### Enable Hoogle for Cabal\nMake sure your `~/.cabal/config` has the
  following entries. (DON'T remove existing entries!) [Check the official docs](https://cabal.readthedocs.io/en/3.6/installing-packages.html)
  if you don't know where is your cabal's global configuration file \n\n```\ndocumentation:
  True\nhaddock\n  hoogle: True\n  html: True\n```\n\nOr, run this command in bash:\n```\ncabal
  user-config update -a \"documentation: True\nhaddock\n  hoogle: True\n  html: True\"\n```\n\n####
  Build Project with Cabal\n\nThen, run `cabal build all` on your project, so that
  cabal will build haddock and\nhoogle files for your local packages and dependencies.\n\n>
  NOTE: Adding `--enable-documentation --haddock-hoogle --haddock-html` to your build
  command won't work for dependencies as I tried.\n\n### Generate\n```\ncabal-hoogle
  generate\n```\n\nThis generates the hoogle database. You will see logs very similar
  to `stack hoogle --rebuild`\n\n### Run Hoogle\n\nWith `cabal-hoogle run --`, extra
  arguments are passed directly to `hoogle`.\n\nYou may start a server like this:\n```\ncabal-hoogle
  run -- server --local --port 9000\n```\n\nOr directly search in command line like
  this:\n```\ncabal-hoogle run -- search catMaybes\n```\n\n### More Options\n\nRun
  `cabal-hoogle --help` to see more options. For example if you are using a non-default
  build dir (not `dist-newstyle`), or you have multiple GHC verisons on the same project.\n\nBelow
  is a complex example:\n```\ncabal-hoogle --compiler ghc-9.2.3 --platform \"x86_64-linux\"
  --builddir mydist generate\n```\n\n## FAQ\n\n### Many packages missing documentation\n\nIf
  you see output like this when running `cabal-hoogle generate`\n```\nPackages missing
  documentation: ansi-terminal ansi-wl-pprint async base-orphans base16-bytestring
  base64-bytestring Cabal cabal-hoogle clock colour extra hashable haskell-src-exts
  haskell-src-meta optparse-applicative primitive regex-base regex-tdfa safe split
  string-interpolate syb text-conversions th-abstraction th-compat th-expand-syns
  th-lift th-lift-instances th-orphans th-reify-many transformers-compat typed-process
  unliftio-core utf8-string vector vector-stream\nFound 27 warnings when processing
  items\n```\n\nProbably you haven't built dependencies with hoogle enabled. Check
  [prerequisites](#prerequisite) more carefully.\n\n### Cabal version mismatch\n\nMake
  sure to build `cabal-hoogle` with the exact same `Cabal` library as your `cabal-install`.
  You can use `cabal --version`\nto check the version of `Cabal` library. See [Installation](#installation).\n\n###
  Core libraries missing documentation\n\nIf you are on macOS or Windows, and using
  `ghcup`, your `ghc` probably doesn't come with docs.\nSee [this](https://gitlab.haskell.org/ghc/ghc/-/issues/20903)
  and [this](https://github.com/haskell/haskell-language-server/issues/208#issuecomment-1162169087)
  for details of the upstream issue.\n"
license-name: BSD-3-Clause
