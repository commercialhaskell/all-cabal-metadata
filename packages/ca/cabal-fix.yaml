all-versions:
- 0.0.0.1
- 0.0.0.2
- 0.1.0.0
author: Tony Day
basic-deps:
  Cabal-syntax: '>=3.10 && <3.15'
  algebraic-graphs: '>=0.7 && <0.8'
  base: '>=4.14 && <5'
  bytestring: '>=0.11 && <0.13'
  cabal-fix: '>=0'
  containers: '>=0.6 && <0.8'
  directory: '>=1.3 && <1.4'
  dotparse: '>=0.1 && <0.2'
  filepath: '>=1.4 && <1.6'
  flatparse: '>=0.3 && <0.6'
  optics-extra: '>=0.4 && <0.5'
  optparse-applicative: '>=0.17 && <0.19'
  pretty: '>=1.1 && <1.2'
  pretty-simple: '>=4.1 && <4.2'
  string-interpolate: '>=0.3 && <0.4'
  tar: '>=0.5 && <0.7'
  text: '>=2.0 && <2.2'
  these: '>=1.2 && <1.3'
  tree-diff: '>=0.3 && <0.4'
  vector: '>=0.13 && <0.14'
changelog: |2+

  # 0.1

  * Added doctests

  # 0.0.0.1

  * conception

changelog-type: markdown
description: "\n# Table of Contents\n\n1.  [cabal-fix](#orgbfbcd8c)\n2.  [App Usage](#org2f4aafb)\n3.
  \ [App Configuration](#orga921360)\n4.  [Library Usage](#orgbb0e777)\n5.  [cabal
  init](#orge6fca8d)\n    1.  [minimal](#orgc14dafe)\n    2.  [code example](#orgd8c294c)\n
  \   3.  [simple](#org2493565)\n6.  [Archive Exploration](#org733a366)\n    1.  [imports](#org69e0aa6)\n
  \   2.  [tar file to list of cabal files](#org241dfdb)\n        1.  [entries](#orgdc43fe9)\n
  \       2.  [Maximum file size:](#org39c1923)\n        3.  [zero size](#orgcf21c34)\n
  \       4.  [preferred-versions](#orgb39b7ed)\n        5.  [package.json](#org9b4f148)\n
  \       6.  [cabal files](#orge4acb82)\n    3.  [latestCabals to CabalFields map](#org9ce30f8)\n
  \   4.  [CabalFields map to dependency graph](#orgb4f4cbb)\n    5.  [algebraic-graphs](#org6f1757a)\n
  \   6.  [sections](#orgd2876cc)\n        1.  [section count](#org39f7aed)\n        2.
  \ [section types](#orge952475)\n        3.  [section in section](#org74c0b33)\n
  \       4.  [zero-section cfs](#orgd5e491e)\n    7.  [Dependency counts](#org9a284e6)\n
  \   8.  [version ranges](#org198f27d)\n        1.  [all versions are unique?](#org0b08b16)\n
  \       2.  [Version counts](#org39af952)\n7.  [Field re-ordering](#org9771b7b)\n8.
  \ [references](#org15314af)\n\n\n<a id=\"orgbfbcd8c\"></a>\n\n# cabal-fix\n\n[![img](https://img.shields.io/hackage/v/cabal-fix.svg)](https://hackage.haskell.org/package/cabal-fix)\n[![img](https://github.com/tonyday567/cabal-fix/workflows/haskell-ci/badge.svg)](https://github.com/tonyday567/cabal-fix/actions?query=workflow%3Ahaskell-ci)\n\n`cabal-fix`
  helps fix your cabal files. This package:\n\n-   Contains an app which parses your
  existing cabal file, re-renders it according to some config, then either displays
  a diff or alters your cabal file, in-place.\n-   Is an idempotent parser of a cabal
  file or ByteString, into the `Field` type used in Cabal.\n-   Is an inexact printer.\n-
  \  Contains code to explore the cabal index archive at the base of your cabal installation.\n\n\n<a
  id=\"org2f4aafb\"></a>\n\n# App Usage\n\n    \n    #+end_export\n    cabal-fix --help\n\n
  \   fixes your cabal file\n    \n    Usage: cabal-fix COMMAND [-d|--directory ARG]
  [-c|--config ARG]\n    \n      cabal fixer\n    \n    Available options:\n      -d,--directory
  ARG       project directory\n      -c,--config ARG          config file\n      -h,--help
  \               Show this help text\n    \n    Available commands:\n      inplace
  \                 fix cabal file inplace\n      check                    check cabal
  file\n      genConfig                generate config file\n\n\n<a id=\"orga921360\"></a>\n\n#
  App Configuration\n\nThe configuration of cabal-fix is encapsulated in the Config
  type. The configuration file generated by the app (via `cabal-fix genConfig`) just
  (pretty) prints defaultConfig.\n\n    import Text.Pretty.Simple\n    pPrint defaultConfig\n\n
  \   Config\n        { freeTexts = [ \"description\" ]\n        , fieldRemovals =
  []\n        , preferredDeps =\n            [\n                ( \"base\"\n                ,
  \">=4.7 && <5\"\n                )\n            ]\n        , addFields = []\n        ,
  fixCommas =\n            [\n                ( \"extra-doc-files\"\n                ,
  NoCommas\n                )\n            ,\n                ( \"build-depends\"\n
  \               , PrefixCommas\n                )\n            ]\n        , sortFieldLines
  =\n            [ \"build-depends\"\n            , \"exposed-modules\"\n            ,
  \"default-extensions\"\n            , \"ghc-options\"\n            , \"extra-doc-files\"\n
  \           , \"tested-with\"\n            ]\n        , sortFields = True\n        ,
  fieldOrdering =\n            [\n                ( \"cabal-version\"\n                ,
  0.0\n                )\n            ,\n                ( \"import\"\n                ,
  1.0\n                )\n            ,\n                ( \"main-is\"\n                ,
  2.0\n                )\n            ,\n                ( \"default-language\"\n
  \               , 3.0\n                )\n            ,\n                ( \"name\"\n
  \               , 4.0\n                )\n            ,\n                ( \"hs-source-dirs\"\n
  \               , 5.0\n                )\n            ,\n                ( \"version\"\n
  \               , 6.0\n                )\n            ,\n                ( \"build-depends\"\n
  \               , 7.0\n                )\n            ,\n                ( \"exposed-modules\"\n
  \               , 8.0\n                )\n            ,\n                ( \"license\"\n
  \               , 9.0\n                )\n            ,\n                ( \"license-file\"\n
  \               , 10.0\n                )\n            ,\n                ( \"other-modules\"\n
  \               , 11.0\n                )\n            ,\n                ( \"copyright\"\n
  \               , 12.0\n                )\n            ,\n                ( \"category\"\n
  \               , 13.0\n                )\n            ,\n                ( \"author\"\n
  \               , 14.0\n                )\n            ,\n                ( \"default-extensions\"\n
  \               , 15.0\n                )\n            ,\n                ( \"ghc-options\"\n
  \               , 16.0\n                )\n            ,\n                ( \"maintainer\"\n
  \               , 17.0\n                )\n            ,\n                ( \"homepage\"\n
  \               , 18.0\n                )\n            ,\n                ( \"bug-reports\"\n
  \               , 19.0\n                )\n            ,\n                ( \"synopsis\"\n
  \               , 20.0\n                )\n            ,\n                ( \"description\"\n
  \               , 21.0\n                )\n            ,\n                ( \"build-type\"\n
  \               , 22.0\n                )\n            ,\n                ( \"tested-with\"\n
  \               , 23.0\n                )\n            ,\n                ( \"extra-doc-files\"\n
  \               , 24.0\n                )\n            ,\n                ( \"source-repository\"\n
  \               , 25.0\n                )\n            ,\n                ( \"type\"\n
  \               , 26.0\n                )\n            ,\n                ( \"common\"\n
  \               , 27.0\n                )\n            ,\n                ( \"location\"\n
  \               , 28.0\n                )\n            ,\n                ( \"library\"\n
  \               , 29.0\n                )\n            ,\n                ( \"executable\"\n
  \               , 30.0\n                )\n            ,\n                ( \"test-suite\"\n
  \               , 31.0\n                )\n            ]\n        , fixBuildDeps
  = True\n        , depAlignment = DepAligned\n        , removeBlankFields = True\n
  \       , valueAligned = ValueUnaligned\n        , sectionMargin = Margin\n        ,
  commentMargin = NoMargin\n        , narrowN = 60\n        , indentN = 4\n        }\n\n\n<a
  id=\"orgbb0e777\"></a>\n\n# Library Usage\n\n    :set -XOverloadedStrings\n    :set
  -XOverloadedLabels\n    :set -Wno-incomplete-uni-patterns\n    :set -Wno-name-shadowing\n
  \   import CabalFix\n    import Optics.Extra\n    import Data.ByteString.Char8 qualified
  as C\n    bs = minimalExampleBS\n    cfg = defaultConfig\n    (Just cf) = preview
  (cabalFields' cfg) bs\n    fs = cf & view (#fields % fieldList')\n\n    Build profile:
  -w ghc-9.4.8 -O1\n    In order, the following will be built (use -v for more details):\n
  \    - cabal-fix-0.0.0.1 (lib) (ephemeral targets)\n    Preprocessing library for
  cabal-fix-0.0.0.1..\n    GHCi, version 9.4.8: https://www.haskell.org/ghc/  :? for
  help\n    [1 of 4] Compiling CabalFix.FlatParse ( src/CabalFix/FlatParse.hs, interpreted
  )\n    [2 of 4] Compiling CabalFix         ( src/CabalFix.hs, interpreted )\n    [3
  of 4] Compiling CabalFix.Archive ( src/CabalFix/Archive.hs, interpreted )\n    [4
  of 4] Compiling CabalFix.Patch   ( src/CabalFix/Patch.hs, interpreted )\n    Ok,
  four modules loaded.\n\n    cf & review (cabalFields' cfg) & C.putStr\n\n    cabal-version:
  3.0\n    name: minimal\n    version: 0.1.0.0\n    license: BSD-2-Clause\n    license-file:
  LICENSE\n    build-type: Simple\n    extra-doc-files: CHANGELOG.md\n    \n    common
  warnings\n        ghc-options: -Wall\n    \n    library\n        import: warnings\n
  \       exposed-modules: MyLib\n        build-depends: base ^>=4.17.2.1\n        hs-source-dirs:
  src\n        default-language: GHC2021\n    \n    test-suite minimal-test\n        import:
  warnings\n        default-language: GHC2021\n        type: exitcode-stdio-1.0\n
  \       hs-source-dirs: test\n        main-is: Main.hs\n        build-depends:\n
  \           base ^>=4.17.2.1,\n            minimal\n\n\n<a id=\"orge6fca8d\"></a>\n\n#
  cabal init\n\n\n<a id=\"orgc14dafe\"></a>\n\n## minimal\n\nA minimal `cabal init`\n\n
  \   mkdir minimal && cd minimal && cabal init --minimal --simple --overwrite --lib
  --tests --language=GHC2021 --license=BSD-2-Clause  -p minimal\n\n    [Log] Using
  cabal specification: 3.0\n    [Log] Creating fresh file LICENSE...\n    [Log] Creating
  fresh file CHANGELOG.md...\n    [Log] Creating fresh directory ./src...\n    [Log]
  Creating fresh file src/MyLib.hs...\n    [Log] Creating fresh directory ./test...\n
  \   [Log] Creating fresh file test/Main.hs...\n    [Log] Creating fresh file minimal.cabal...\n
  \   [Warning] No synopsis given. You should edit the .cabal file and add one.\n
  \   [Info] You may want to edit the .cabal file and add a Description field.\n\nCompared
  with the original `cabal init` contents, `cabal-fix`:\n\n-   widens the `base` range,
  in line with standard practice.\n-   reorders the `test-suite` section fields, in
  line with the ordering of the `library` section ones.\n\n    cabal-fix check -d
  \"minimal\" -c \"other/minimal.config\"\n\n    Right (Just [\n      -\"    build-depends:
  \   base ^>=4.17.2.1\",\n      +\"    build-depends:    base >=4.14 && <5\",\n      -\"
  \   default-language: GHC2021\",\n      +\"    main-is:          Main.hs\",\n      -\"
  \   type:             exitcode-stdio-1.0\",\n      +\"    build-depends:\",\n      -\"
  \   hs-source-dirs:   test\",\n      +\"        base    >=4.14 && <5,\",\n      -\"
  \   main-is:          Main.hs\",\n      +\"        minimal\",\n      -\"    build-depends:\",\n
  \     +\"    hs-source-dirs:   test\",\n      -\"        base ^>=4.17.2.1,\",\n
  \     +\"    default-language: GHC2021\",\n      -\"        minimal\",\n      +\"
  \   type:             exitcode-stdio-1.0\"])\n\n\n<a id=\"orgd8c294c\"></a>\n\n##
  code example\n\nFor reference, the code below should produce the same results as
  the app run above:\n\n    :set -XOverloadedStrings\n    :set -XOverloadedLabels\n
  \   :set -Wno-incomplete-uni-patterns\n    :set -Wno-name-shadowing\n    :set -Wno-type-defaults\n
  \   import CabalFix\n    import Text.Pretty.Simple\n    import CabalFix.Patch\n
  \   import Data.TreeDiff\n    bs = minimalExampleBS\n    cfg = minimalConfig\n    (Just
  cf) = preview (cabalFields' cfg) bs\n    bs' = review (cabalFields' cfg) cf\n    (Just
  cf') = preview (cabalFields' cfg) bs'\n    cfFixed = fixCabalFields cfg cf\n    bsFixed
  = review (cabalFields' cfg) cfFixed\n    fmap ansiWlBgEditExpr $ patch (C.lines
  bs) (C.lines bsFixed)\n\n    Just [\n      -\"    build-depends:    base ^>=4.17.2.1\",\n
  \     +\"    build-depends:    base >=4.14 && <5\",\n      -\"    default-language:
  GHC2021\",\n      +\"    main-is:          Main.hs\",\n      -\"    type:             exitcode-stdio-1.0\",\n
  \     +\"    build-depends:\",\n      -\"    hs-source-dirs:   test\",\n      +\"
  \       base    >=4.14 && <5,\",\n      -\"    main-is:          Main.hs\",\n      +\"
  \       minimal\",\n      -\"    build-depends:\",\n      +\"    hs-source-dirs:
  \  test\",\n      -\"        base ^>=4.17.2.1,\",\n      +\"    default-language:
  GHC2021\",\n      -\"        minimal\",\n      +\"    type:             exitcode-stdio-1.0\"]\n\n\n<a
  id=\"org2493565\"></a>\n\n## simple\n\n    mkdir simple && cd simple && cabal init
  --simple --overwrite --lib --tests --language=GHC2021 --license=BSD-2-Clause  -p
  simple\n\n    [Log] Using cabal specification: 3.0\n    [Log] Creating fresh file
  LICENSE...\n    [Log] Creating fresh file CHANGELOG.md...\n    [Log] Creating fresh
  directory ./src...\n    [Log] Creating fresh file src/MyLib.hs...\n    [Log] Creating
  fresh directory ./test...\n    [Log] Creating fresh file test/Main.hs...\n    [Log]
  Creating fresh file simple.cabal...\n    [Warning] No synopsis given. You should
  edit the .cabal file and add one.\n    [Info] You may want to edit the .cabal file
  and add a Description field.\n\n    cabal-fix check -d \"simple\" -c \"other/minimal.config\"\n\n
  \   Right (Just [\n      +\"cabal-version:   3.0\",\n      -\"cabal-version:      3.0\",\n
  \     +\"\",\n      -\"name:               simple\",\n      +\"name:            simple\",\n
  \     -\"version:            0.1.0.0\",\n      +\"version:         0.1.0.0\",\n
  \     -\"license:            BSD-2-Clause\",\n      +\"license:         BSD-2-Clause\",\n
  \     -\"license-file:       LICENSE\",\n      +\"license-file:    LICENSE\",\n
  \     -\"build-type:         Simple\",\n      +\"build-type:      Simple\",\n      -\"extra-doc-files:
  \   CHANGELOG.md\",\n      +\"extra-doc-files: CHANGELOG.md\",\n      -\"    build-depends:
  \   base ^>=4.17.2.1\",\n      +\"    build-depends:    base >=4.14 && <5\",\n      -\"
  \   -- Base language which the package is written in.\",\n      +\"    -- The entrypoint
  to the test suite.\",\n      -\"    default-language: GHC2021\",\n      +\"    main-is:
  \         Main.hs\",\n      -\"    -- Modules included in this executable, other
  than Main.\",\n      -\"    -- other-modules:\",\n      +\"    -- Test dependencies.\",\n
  \     -\"\",\n      +\"    build-depends:\",\n      -\"    -- LANGUAGE extensions
  used by modules in this package.\",\n      +\"        base   >=4.14 && <5,\",\n
  \     -\"    -- other-extensions:\",\n      +\"        simple\",\n      -\"    --
  The interface type and version of the test suite.\",\n      +\"    -- Directories
  containing source files.\",\n      -\"    type:             exitcode-stdio-1.0\",\n
  \     +\"    hs-source-dirs:   test\",\n      -\"    -- Directories containing source
  files.\",\n      +\"    -- Base language which the package is written in.\",\n      -\"
  \   hs-source-dirs:   test\",\n      +\"    default-language: GHC2021\",\n      -\"
  \   -- The entrypoint to the test suite.\",\n      +\"    -- Modules included in
  this executable, other than Main.\",\n      -\"    main-is:          Main.hs\",\n
  \     +\"    -- other-modules:\",\n      +\"    -- LANGUAGE extensions used by modules
  in this package.\",\n      -\"    -- Test dependencies.\",\n      +\"    -- other-extensions:\",\n
  \     -\"    build-depends:\",\n      +\"\",\n      -\"        base ^>=4.17.2.1,\",\n
  \     +\"    -- The interface type and version of the test suite.\",\n      -\"
  \       simple\",\n      +\"    type:             exitcode-stdio-1.0\"])\n\n\n<a
  id=\"org733a366\"></a>\n\n# Archive Exploration\n\nCabalFix.Archive contains functions
  to extract and explore cabal files listed in your cabal index file.\n\nThe sections
  below are some exploration notes.\n\n\n<a id=\"org69e0aa6\"></a>\n\n## imports\n\n
  \   :r\n    :set -Wno-type-defaults\n    :set -Wno-name-shadowing\n    :set -XOverloadedLabels\n
  \   :set -XOverloadedStrings\n    :set -Wno-incomplete-uni-patterns\n    import
  Algebra.Graph\n    import Algebra.Graph.ToGraph qualified as ToGraph\n    import
  CabalFix\n    import CabalFix.Archive\n    import CabalFix.FlatParse\n    import
  Codec.Archive.Tar qualified as Tar\n    import Control.Monad\n    import Data.Bifunctor\n
  \   import Data.ByteString (ByteString)\n    import Data.ByteString qualified as
  BS\n    import Data.ByteString.Char8 qualified as C\n    import Data.ByteString.Lazy
  qualified as BSL\n    import Data.Char\n    import Data.Either\n    import Data.Function\n
  \   import Data.List qualified as List\n    import Data.Map.Strict qualified as
  Map\n    import Data.Ord\n    import Data.Set qualified as Set\n    import DotParse\n
  \   import FlatParse.Basic qualified as FP\n    import System.Directory\n    import
  Text.Pretty.Simple\n\n    Ok, four modules loaded.\n\n\n<a id=\"org241dfdb\"></a>\n\n##
  tar file to list of cabal files\n\n\n<a id=\"orgdc43fe9\"></a>\n\n### entries\n\n
  \   es <- cabalEntries\n    length es\n\n    317368\n\n    Tar.entryPath <$> take
  5 es\n\n    [\"iconv/0.2/iconv.cabal\",\"Crypto/3.0.3/Crypto.cabal\",\"HDBC/1.0.1/HDBC.cabal\",\"HDBC-odbc/1.0.1.0/HDBC-odbc.cabal\",\"HDBC-postgresql/1.0.1.0/HDBC-postgresql.cabal\"]\n\nThey
  are all normal files\n\n    (length [x | (Tar.NormalFile x _) <- Tar.entryContent
  <$> es])\n\n    317368\n\n\n<a id=\"org39c1923\"></a>\n\n### Maximum file size:\n\n
  \   (\\xs -> filter ((maximum (snd <$> xs) ==) . snd) xs) $ [(fp,x) | (fp, Tar.NormalFile
  _ x) <- (\\e -> (Tar.entryPath e, Tar.entryContent e)) <$> es]\n\n    [(\"acme-everything/2018.11.18/acme-everything.cabal\",261865)]\n\n\n<a
  id=\"orgcf21c34\"></a>\n\n### zero size\n\n    take 4 $ (\\xs -> filter ((0 ==)
  . snd) xs) $ [(fp,x) | (fp, Tar.NormalFile _ x) <- (\\e -> (Tar.entryPath e, Tar.entryContent
  e)) <$> es]\n\n    [(\"lzma/preferred-versions\",0),(\"signal/preferred-versions\",0),(\"peyotls-codec/preferred-versions\",0),(\"th-orphans/preferred-versions\",0)]\n\n\n<a
  id=\"orgb39b7ed\"></a>\n\n### preferred-versions\n\n[Cabal: preferred and deprecated
  versions | Hackage](https://hackage.haskell.org/package/Cabal/preferred)\n\n    take
  3 $ (\\xs -> filter ((List.isSuffixOf \"preferred-versions\") . fst) xs) $ [(fp,bs)
  | (fp, Tar.NormalFile bs _) <- (\\e -> (Tar.entryPath e, Tar.entryContent e)) <$>
  es]\n\n    [(\"ADPfusion/preferred-versions\",\"ADPfusion <0.4.0.0 || >0.4.0.0\"),(\"AesonBson/preferred-versions\",\"AesonBson
  <0.2.0 || >0.2.0 && <0.2.1 || >0.2.1\"),(\"BiobaseXNA/preferred-versions\",\"BiobaseXNA
  <0.9.1.0 || >0.9.1.0\")]\n\n    length $ (\\xs -> filter ((List.isSuffixOf \"preferred-versions\")
  . fst) xs) $ [(fp,bs) | (fp, Tar.NormalFile bs _) <- (\\e -> (Tar.entryPath e, Tar.entryContent
  e)) <$> es]\n\n    3376\n\n\n<a id=\"org9b4f148\"></a>\n\n### package.json\n\n`package-json`
  content is a security/signing feature you can read about in [hackage-security](https://github.com/haskell-ng/hackage-security/blob/master/README.md).\n\n
  \   length $ filter ((== \"package.json\") . filenameFN . runParser_ filenameP .
  FP.strToUtf8 . fst) $ filter (not . (List.isSuffixOf \"preferred-versions\") . fst)
  $ [(fp,bs) | (fp, Tar.NormalFile bs _) <- (\\e -> (Tar.entryPath e, Tar.entryContent
  e)) <$> es]\n\n    137524\n\n\n<a id=\"orge4acb82\"></a>\n\n### cabal files\n\nUnique
  package/version combinations.\n\nThere are multiple versions of package/versions
  because of revisions. See [revisions-information.md](https://github.com/haskell-infra/hackage-trustees/blob/master/revisions-information.md)\n\nUnique
  `*/*.cabal/version` entries\n\n    cs <- cabals\n    length cs\n\n    137524\n\nUnique
  cabal packages\n\n    lcs <- latestCabals\n    Map.size lcs\n\n    17631\n\nAverage
  number of versions per package\n\n    (fromIntegral (length cs)) / fromIntegral
  (Map.size lcs)\n\n    7.800124780216664\n\n\n<a id=\"org9ce30f8\"></a>\n\n## latestCabals
  to CabalFields map\n\n    lcs <- latestCabals defaultConfig\n    Map.size lcs\n
  \   cfg = defaultConfig\n    lcs' = fmap (second (parseCabalFields cfg)) lcs\n    Map.size
  $ Map.filter (snd >>> isLeft) lcs'\n    :t lcs'\n    badParse = Map.filter (isLeft
  . parseCabalFields cfg . snd) lcs\n    Map.size badParse\n\n    17631\n    6\n    lcs'
  :: Map.Map ByteString (Version, Either ByteString CabalFields)\n    6\n\n\n<a id=\"orgb4f4cbb\"></a>\n\n##
  CabalFields map to dependency graph\n\n    lcfs <- latestCabalFields\n    vlds =
  validLibDeps $ fmap snd lcfs\n    Map.size vlds\n    depG = allDepGraph $ fmap snd
  lcfs\n    vertexCount depG\n    edgeCount depG\n\n    15547\n    15621\n    107566\n\n\n<a
  id=\"org6f1757a\"></a>\n\n## algebraic-graphs\n\nAn (algebraic) graph of dependencies:\n\n`text`
  package dependency example\n\n    supers = upstreams \"text\" depG <> Set.singleton
  \"text\"\n    superG = induce (`elem` (Data.Foldable.toList supers)) depG\n\n    supers\n\n
  \   fromList [\"array\",\"binary\",\"bytestring\",\"deepseq\",\"ghc-prim\",\"template-haskell\",\"text\"]\n\n
  \   baseGraph = defaultGraph & attL GraphType (ID \"size\") .~ Just (IDQuoted \"5!\")
  & attL NodeType (ID \"shape\") .~ Just (ID \"box\") & attL NodeType (ID \"height\")
  .~ Just (ID 2) & gattL (ID \"rankdir\") .~ Just (IDQuoted \"TB\")\n    g = toDotGraphWith
  Directed baseGraph superG\n    processDotWith Directed [\"-Tsvg\", \"-oother/textdeps.svg\"]
  (dotPrint defaultDotConfig g)\n    BS.writeFile \"other/textdeps.dot\" (dotPrint
  defaultDotConfig g)\n\n![img](other/textdeps.svg)\n\n\n<a id=\"orgd2876cc\"></a>\n\n##
  sections\n\n\n<a id=\"org39f7aed\"></a>\n\n### section count\n\n    cfs = lcfs &
  Map.toList & fmap (snd . snd)\n    cfs & toListOf (each % #fields % fieldList')
  & fmap (filter isSection >>> length) & count_\n\n    fromList [(0,359),(1,2559),(2,5508),(3,4730),(4,2224),(5,956),(6,479),(7,236),(8,138),(9,98),(10,63),(11,57),(12,31),(13,32),(14,22),(15,16),(16,12),(17,7),(18,11),(19,8),(20,8),(21,8),(22,4),(23,3),(24,7),(25,4),(26,6),(27,1),(28,1),(29,4),(30,2),(32,4),(33,2),(34,4),(36,1),(37,4),(38,1),(39,2),(40,1),(41,1),(43,2),(47,2),(48,2),(50,1),(65,1),(93,1),(97,1),(295,1)]\n\n\n<a
  id=\"orge952475\"></a>\n\n### section types\n\n    cfs & toListOf (each % #fields
  % fieldList') & fmap (filter isSection) & fmap (fmap (view fieldName')) & mconcat
  & count_ & Map.toList & List.sortOn (Down . snd)\n\n    [(\"library\",16028),(\"source-repository\",13889),(\"test-suite\",8718),(\"executable\",7292),(\"flag\",4134),(\"common\",2302),(\"benchmark\",1246),(\"custom-setup\",321),(\"foreign-library\",4)]\n\ncombinations:\n\n
  \   cfs & toListOf (each % #fields % fieldList') & fmap (filter isSection) & fmap
  (fmap (view fieldName')) & fmap (filter (not . (flip List.elem) [\"source-repository\",
  \"custom-setup\", \"foreign-library\", \"flag\", \"common\"])) & fmap (count_ >>>
  Map.toList >>> List.sortOn fst) & count_ & Map.toList & List.sortOn (Down . snd)
  & take 10\n\n    [([(\"library\",1)],7291),([(\"library\",1),(\"test-suite\",1)],4195),([(\"executable\",1),(\"library\",1)],1148),([(\"executable\",1)],1105),([(\"executable\",1),(\"library\",1),(\"test-suite\",1)],901),([(\"benchmark\",1),(\"library\",1),(\"test-suite\",1)],520),([(\"library\",1),(\"test-suite\",2)],416),([],359),([(\"executable\",2),(\"library\",1)],163),([(\"executable\",2),(\"library\",1),(\"test-suite\",1)],133)]\n\nat
  least 1 combinations:\n\n    cfs & toListOf (each % #fields % fieldList') & fmap
  (filter isSection) & fmap (fmap (view fieldName')) & fmap (filter (not . (flip List.elem)
  [\"source-repository\", \"custom-setup\", \"foreign-library\", \"flag\", \"common\"]))
  & fmap (count_ >>> Map.toList >>> fmap fst >>> List.sortOn id) & count_ & Map.toList
  & List.sortOn (Down . snd) & take 10\n\n    [([\"library\"],7297),([\"library\",\"test-suite\"],4778),([\"executable\",\"library\"],1490),([\"executable\",\"library\",\"test-suite\"],1309),([\"executable\"],1263),([\"benchmark\",\"library\",\"test-suite\"],739),([],359),([\"benchmark\",\"executable\",\"library\",\"test-suite\"],182),([\"executable\",\"test-suite\"],119),([\"benchmark\",\"library\"],59)]\n\n\n<a
  id=\"org74c0b33\"></a>\n\n### section in section\n\n    sections' = to (filter isSection)\n
  \   -- cfs & fmap (foldOf (#fields % fieldList' % sections' % each % secFields'
  % sections')) & filter (not . null) & fmap (second (fmap (view fieldName'))) & fmap
  snd & mconcat & count_\n    cfs & fmap (foldOf (#fields % fieldList' % sections'
  % each % secFields' % sections')) & filter (not . null) & fmap ((fmap (view fieldName')))
  & mconcat & count_\n\n    fromList [(\"elif\",52),(\"else\",3203),(\"if\",11459),(\"library\",3)]\n\nEmbedded
  libraries are all deprecated.\n\n\n<a id=\"orgd5e491e\"></a>\n\n### zero-section
  cfs\n\nLooks like library fields used to be allowed at the top level&#x2026;\n\n
  \   cfs0 = cfs & toListOf (each % #fields % fieldList') & filter ((==0) . length
  . (filter isSection))\n    length cfs0\n    count_ $ cfs0 & fmap (foldOf (field'
  \"build-depends\") >>> length)\n    cfs00 = cfs0 & filter (foldOf (field' \"build-depends\")
  >>> length >>> (==0))\n    length cfs00\n\n    359\n    fromList [(0,2),(1,349),(2,7),(4,1)]\n
  \   2\n\n\n<a id=\"org9a284e6\"></a>\n\n## Dependency counts\n\npackage dependency
  count:\n\n    lcfs & fmap (snd >>> libDeps >>> fmap dep >>> List.nub >>> length)
  & Map.toList & List.sortOn (Down . snd) & take 20\n\n    [(\"acme-everything\",7533),(\"yesod-platform\",132),(\"planet-mitchell\",109),(\"freckle-app\",78),(\"cachix\",76),(\"btc-lsp\",71),(\"too-many-cells\",70),(\"swarm\",68),(\"ghcide\",67),(\"pandoc\",67),(\"sprinkles\",65),(\"pantry-tmp\",64),(\"taffybar\",63),(\"NGLess\",60),(\"project-m36\",59),(\"stack\",59),(\"espial\",58),(\"hermes\",58),(\"purescript\",56),(\"futhark\",55)]\n\ndependency
  count:\n\n    lcfs & fmap (snd >>> libDeps >>> fmap dep >>> List.nub) & Map.toList
  & fmap snd & mconcat & count_ & Map.toList & List.sortOn (snd >>> Down) & take 40\n\n
  \   [(\"base\",14883),(\"bytestring\",5384),(\"text\",4972),(\"containers\",4753),(\"mtl\",3468),(\"transformers\",3070),(\"aeson\",2013),(\"time\",1961),(\"vector\",1793),(\"directory\",1597),(\"filepath\",1510),(\"template-haskell\",1472),(\"unordered-containers\",1392),(\"deepseq\",1240),(\"lens\",1173),(\"hashable\",930),(\"binary\",929),(\"array\",892),(\"exceptions\",855),(\"process\",844),(\"stm\",819),(\"random\",811),(\"http-types\",784),(\"attoparsec\",781),(\"network\",756),(\"parsec\",744),(\"data-default\",609),(\"QuickCheck\",597),(\"conduit\",503),(\"http-client\",497),(\"split\",472),(\"primitive\",470),(\"ghc-prim\",456),(\"async\",449),(\"semigroups\",427),(\"monad-control\",424),(\"scientific\",420),(\"resourcet\",401),(\"unix\",398),(\"utf8-string\",392)]\n\n\n<a
  id=\"org198f27d\"></a>\n\n## version ranges\n\n    cs <- cabals\n    length cs\n\n
  \   137323\n\n    :t cs\n    \n    mVersions = Map.fromListWith (<>) $ ((\\x ->
  (nameFN x, (:[]) $ (versionInts $ versionFN x))) . fst) <$> cs\n    Map.size mVersions\n\n
  \   cs :: [(FileName, ByteString)]\n    17631\n\n    (Just x1) = Map.lookup \"chart-svg\"
  mVersions\n    x1\n    minimum x1\n    maximum x1\n\n    [[0,6,0,0],[0,5,2,0],[0,5,1,1],[0,5,1,0],[0,5,0,0],[0,4,1,1],[0,4,1,0],[0,4,0],[0,3,3],[0,3,2],[0,3,1],[0,3,0],[0,2,3],[0,2,2],[0,2,1],[0,2,0],[0,1,3],[0,1,2],[0,1,1],[0,1,0],[0,0,3],[0,0,2],[0,0,1]]\n
  \   [0,0,1]\n    [0,6,0,0]\n\n\n<a id=\"org0b08b16\"></a>\n\n### all versions are
  unique?\n\n    take 10 $ Map.toList $ Map.filter (\\a -> length a /= length (List.nub
  a)) mVersions\n\n    []\n\n\n<a id=\"org39af952\"></a>\n\n### Version counts\n\n
  \   take 10 $ List.sortOn (Down . snd) $ Map.toList $ Map.map length mVersions\n\n
  \   [(\"haskoin-store\",298),(\"git-annex\",282),(\"hlint\",221),(\"yesod-core\",216),(\"purescript\",204),(\"warp\",204),(\"pandoc\",193),(\"hakyll\",192),(\"egison\",190),(\"persistent\",186)]\n\n\n<a
  id=\"org9771b7b\"></a>\n\n# Field re-ordering\n\n    zipWith (\\o l -> (fst l, o))
  [0..] (List.sortOn snd $ fieldOrdering defaultConfig)\n\n    [(\"cabal-version\",0),(\"import\",1),(\"main-is\",2),(\"default-language\",3),(\"name\",4),(\"hs-source-dirs\",5),(\"version\",6),(\"build-depends\",7),(\"exposed-modules\",8),(\"license\",9),(\"license-file\",10),(\"other-modules\",11),(\"copyright\",12),(\"category\",13),(\"author\",14),(\"default-extensions\",15),(\"ghc-options\",16),(\"maintainer\",17),(\"homepage\",18),(\"bug-reports\",19),(\"synopsis\",20),(\"description\",21),(\"build-type\",22),(\"tested-with\",23),(\"extra-doc-files\",24),(\"source-repository\",25),(\"type\",26),(\"common\",27),(\"location\",28),(\"library\",29),(\"executable\",30),(\"test-suite\",31)]\n\n\n<a
  id=\"org15314af\"></a>\n\n# references\n\n[Distribution.Fields.Field](https://hackage.haskell.org/package/Cabal-syntax-3.10.2.0/docs/Distribution-Fields-Field.html)\n\n[optics-core:
  Optics as an abstract interface: core definitions](https://hackage.haskell.org/package/optics-core-0.4.1.1)\n\n[6.
  Package Description — Cabal 3.10.1.0 User&rsquo;s Guide](https://cabal.readthedocs.io/en/stable/cabal-package.html#package-descriptions)\n\n"
description-type: markdown
hash: 538cf5d29f175de09a7a77ec3d9fd35726e7e02af10498793f1342ed0762a724
homepage: https://github.com/tonyday567/cabal-fix#readme
latest: 0.1.0.0
license-name: BSD-3-Clause
maintainer: tonyday567@gmail.com
synopsis: Fix for cabal files.
test-bench-deps:
  base: '>=4.14 && <5'
  doctest-parallel: '>=0.3 && <0.4'
