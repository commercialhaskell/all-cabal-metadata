all-versions:
- 0.1.0
- 0.1.1
author: Jens Petersen <juhpetersen@gmail.com>
basic-deps:
  aeson: '>=0'
  base: <5
  bytestring: '>=0'
  directory: '>=0'
  filepath: '>=0'
  http-query: '>=0'
  time: '>=0'
  xdg-basedir: '>=0'
changelog: |
  # Version history for cached-json-file

  ## 0.1.1 (2021-12-27)
  - pull new data if cache file is empty

  ## 0.1.0 (2021-07-29)
  - initial release with getCachedJSON and getCachedJSONQuery
  - exports lookupKey from http-query
changelog-type: markdown
description: |
  # cached-json-file

  A Haskell library providing a cached json file.

  Useful for frequently used programs that use some remote json data
  which changes rather slowly (like in hours, days, weeks or months),
  where it is not critical to have always the latest data locally immediately.

  ## Usage

  `getCachedJSON dir file url minutes` caches the json obtained from `url` in
  `~/.cache/dir/file` for `minutes`.

  eg:

  ```haskell
  import System.Cached.JSON

  getSnapshots :: IO Object
  getSnapshots =
    getCachedJSON "stackage-snapshots" "snapshots.json" "http://haddock.stackage.org/snapshots.json" 180

  main = getSnapshots >>= print
  ```

  Each time you run this program within 3 hours the data will be read
  from the local cache file `~/.cache/stackage-snapshots/snapshots.json`
  rather than re-downloading it each time,
  which helps to speed up the program and avoid unnecessary web queries.

  There is also `getCachedJSONQuery prog jsonfile webquery minutes`
  which uses `webquery :: (FromJSON a, ToJSON a) => IO a` to download
  the json data.

  The shortest cache time is 1 minute.
description-type: markdown
hash: ae7d1ad441ef8db96c61b15858f5e3e26e5374883acf79ff289a3a29543317c0
homepage: https://github.com/juhp/cached-json-file
latest: 0.1.1
license-name: BSD-3-Clause
maintainer: Jens Petersen <juhpetersen@gmail.com>
synopsis: Locally cache a json file obtained by http
test-bench-deps: {}
