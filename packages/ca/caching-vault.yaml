all-versions:
- 0.1.0.0
author: Alexander Thiemann
basic-deps:
  base: '>=4.7 && <5'
  stm: '>=0'
  stm-containers: '>=0'
  text: '>=0'
  time: '>=0'
changelog: ''
changelog-type: ''
description: "# caching-vault\n\nA simple [vault](https://hackage.haskell.org/package/vault)
  style cache implementation based on [stm-containers](https://hackage.haskell.org/package/stm-containers).\n\n##
  Example\n\n``` haskell\nimport Data.Time\nimport qualified Data.Cache.Vault as C\n\nmain
  :: IO ()\nmain =\n  do cache <- C.newCache\n     let key :: C.Key String\n         key
  = C.mintLabeledKey \"foo\"\n     C.insert key Nothing \"cached value\" cache\n     \n
  \    now <- getCurrentTime\n     value <- C.lookup now key cache\n     case value
  of\n       Nothing -> putStrLn \"Cache miss\"\n       Just val -> putStrLn (\"Cache
  value is: \" <> val)\n```\n"
description-type: markdown
hash: bd7046ad80a7e27bdbc1470624324e0632c5ecc95ca23da56c03dff4b5e37753
homepage: https://github.com/agrafix/caching-vault#readme
latest: 0.1.0.0
license-name: BSD-3-Clause
maintainer: Alexander Thiemann <mail@thiemann.at>
synopsis: A vault-style cache implementation
test-bench-deps:
  base: '>=4.7 && <5'
  caching-vault: '>=0'
  hspec: '>=0'
  stm: '>=0'
  stm-containers: '>=0'
  text: '>=0'
  time: '>=0'
  timespan: '>=0'
