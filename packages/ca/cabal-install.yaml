homepage: http://www.haskell.org/cabal/
changelog-type: text
hash: 485d70a4d00fce9cfe29bfcf65d5b469ad21528baf2ccaed9410884b66118f56
test-bench-deps: {}
maintainer: Cabal Development Team <cabal-devel@haskell.org>
synopsis: The command-line interface for Cabal and Hackage.
changelog: "-*-change-log-*-\n\n3.4.0.0 Oleg Grenrus <oleg.grenrus@iki.fi> February
  2021\n\t* See https://github.com/haskell/cabal/blob/master/release-notes/cabal-install-3.4.0.0.md\n\n3.2.0.0
  Herbert Valerio Riedel <hvr@gnu.org> April 2020\n\t* `v2-build` (and other `v2-`prefixed
  commands) now accept the\n\t  `--benchmark-option(s)` flags, which pass options
  to benchmark executables\n\t  (analogous to how `--test-option(s)` works). (#6209)\n\t*
  Add solver optimization to skip a version of a package if it does not resolve\n\t
  \ any conflicts encountered in the last version, controlled by flag\n\t  '--fine-grained-conflicts'.
  (#5918)\n\t* `cabal v2-exec` doesn't fail in clean package (#6479)\n\t* Show full
  ABI hash for installed packages in solver log (#5892)\n\t* Create incoming directory
  even for empty packages (#4130)\n\t* Start GHCi with `main-is` module in scope (#6311)\n\t*
  Implement `--benchmark-options` for `v2-bench` (#6224)\n\t* Fix store-dir in ghc
  env files generated by `cabal install --lib\n\t  --package-env` (#6298)\n\t* `cabal
  v2-run` works with `.lhs` files (#6134)\n\t* `subdir` in source-repository-package
  accepts multiple entries (#5472)\n\n3.0.1.0 Herbert Valerio Riedel <hvr@gnu.org>
  April 2020\n\t* Create store incoming directory\n\t  ([#4130](https://github.com/haskell/cabal/issues/4130))\n\t*
  `fetchRepoTarball` output is not marked\n\t  ([#6385](https://github.com/haskell/cabal/pull/6385))\n\t*
  Update `setupMinCabalVersionConstraint` for GHC-8.8\n\t  ([#6217](https://github.com/haskell/cabal/pull/6217))\n\t*
  Implement `cabal install --ignore-project`\n\t  ([#5919](https://github.com/haskell/cabal/issues/5919))\n\t*
  `cabal install executable` solver isn't affected by default\n\t  environment contents\n\t
  \ ([#6410](https://github.com/haskell/cabal/issues/6410))\n\t* Use `lukko` for file
  locking\n\t  ([#6345](https://github.com/haskell/cabal/pull/6345))\n\t* Use `hackage-security-0.6`\n\t
  \ ([#6388](https://github.com/haskell/cabal/pull/6388))\n\t* Other dependency upgrades\n\n3.0.0.0
  Mikhail Glushenkov <mikhail.glushenkov@gmail.com> August 2019\n\t* `v2-haddock`
  fails on `haddock` failures (#5977)\n\t* `v2-run` works when given `File.lhs` literate
  file. (#6134)\n\t* Parse comma-separated lists for extra-prog-path, extra-lib-dirs,
  extra-framework-dirs,\n\t  and extra-include-dirs as actual lists. (#5420)\n\t*
  `v2-repl` no longer changes directory to a randomized temporary folder\n\t  when
  used outside of a project. (#5544)\n\t* `install-method` and `overwrite-policy`
  in `.cabal/config` now actually work. (#5942)\n\t* `v2-install` now reports the
  error when a package fails to build. (#5641)\n\t* `v2-install` now has a default
  when called in a project (#5978, #6014, #6092)\n\t* '--write-ghc-environment-files'
  now defaults to 'never' (#4242)\n\t* Fix `sdist`'s output when sent to stdout. (#5874)\n\t*
  Allow a list of dependencies to be provided for `repl --build-depends`. (#5845)\n\t*
  Legacy commands are now only accessible with the `v1-` prefixes, and the `v2-`\n\t
  \ commands are the new default. Accordingly, the next version of Cabal will be\n\t
  \ the start of the 3.x version series. (#5800)\n\t* New solver flag: '--reject-unconstrained-dependencies'.
  (#2568)\n\t* Ported old-style test options to the new-style commands (#5455).\n\t*
  Improved error messages for cabal file parse errors. (#5710)\n\t* Removed support
  for `.zip` format source distributions (#5755)\n\t* Add \"simple project\" initialization
  option. (#5707)\n\t* Add '--minimize-conflict-set' flag to try to improve the solver's\n\t
  \ error message, but with an increase in run time. (#5647)\n\t* v2-test now succeeds
  when there are no test suites. (#5435)\n\t* Add '--lib', '--exe', and '--libandexe'
  shorthands to init. (#5759)\n\t* init now generates valid `Main.lhs` files. (#5577)\n\t*
  Init improvements: add flag '--application-dir', and when creating\n\t  a library
  also create a MyLib.hs module. (#5740)\n\t* Add support for generating test-suite
  via cabal init. (#5761)\n\t* Increase `max-backjumps` default from 2000 to 4000.\n\t*
  Make v2-install/new-install-specific flags configurable in\n\t  ~/.cabal/config\n\t*
  Add --installdir and --install-method=copy flags to v2-install\n\t  that make it
  possible to copy the executable instead of symlinking it\n\t* --symlink-bindir no
  longer controls the symlinking directory of\n\t  v2-install (installdir controls
  both symlinking and copying now)\n\t* Default to non-interactive init.\n\t* Add
  --test-wrapper that allows a prebuild script to set the test environment.\n\t* Add
  filterTestFlags: filter test-wrapper for Cabal < 3.0.0.\n\t* Cabal now only builds
  the minimum of a package for `v2-install` (#5754, #6091)\n\n2.4.1.0 Mikhail Glushenkov
  <mikhail.glushenkov@gmail.com> November 2018\n\t* Add message to alert user to potential
  package casing errors. (#5635)\n\t* new-clean no longer deletes dist-newstyle/src
  with `-s`. (#5699)\n\t* 'new-install' now warns when failing to symlink an exe (#5602)\n\t*
  Extend 'cabal init' support for 'cabal-version' selection (#5567)\n\t* 'new-sdist'
  now generates tarballs with file modification\n\t  times from a date in 2001. Using
  the Unix epoch caused\n\t  problems on Windows. (#5596)\n\t* Register monolithic
  packages installed into the store due to a\n\t  build-tool dependency if they also
  happen to contain a buildable\n\t  public lib. (#5379,#5604)\n\t* Fixed a Windows
  bug where cabal-install tried to copy files\n\t  after moving them (#5631).\n\t*
  'cabal v2-repl' now works for indefinite (in the Backpack sense) components. (#5619)\n\t*
  Set data dir environment variable for tarballs and remote repos (#5469)\n\t* Fix
  monolithic inplace build tool PATH (#5633)\n\t* 'cabal init' now supports '-w'/'--with-compiler'
  flag (#4936, #5654)\n\t* Fix ambiguous --builddir on new-install (#5652)\n\t* Allow
  relative --storedir (#5662)\n\t* Respect --dry on new-install (#5671)\n\t* Warn
  when new-installing zero exes (#5666)\n\t* Add 'pkg-cabal-sha256' field to plan.json
  (#5695)\n\t* New v2-build flag: '--only-configure'. (#5578)\n\t* Fixed a 'new-install'
  failure that manifested when it\n\t  encountered remote source dependencies in a
  project. (#5643)\n\t* New 'v2-[build,configure' flag: '--write-ghc-environment-files'\n\t
  \ to control the generation of .ghc.environment files. (#5711)\n\n2.4.0.0 Mikhail
  Glushenkov <mikhail.glushenkov@gmail.com> September 2018\n\t* Bugfix: \"cabal new-build
  --ghc-option '--bogus' --ghc-option '-O1'\"\n\t  no longer ignores all arguments
  except the last one (#5512).\n\t* Add the following option aliases for '-dir'-suffixed
  options:\n\t  'storedir', 'logsdir', 'packagedir', 'sourcedir', 'outputdir' (#5484).\n\t*
  'new-run' now allows the user to run scripts that use a special block\n\t  to define
  their requirements (as in the executable stanza) in place\n\t  of a target. This
  also allows the use of 'cabal' as an interpreter\n\t  in a shebang line.\n\t* Add
  aliases for the \"new-\" commands that won't change when they\n\t  lose their prefix
  or are eventually replaced by a third UI\n\t  paradigm in the future. (#5429)\n\t*
  'outdated' now accepts '--project-file FILE', which will look for bounds\n\t  from
  the new-style freeze file named FILE.freeze. This is only\n\t  available when `--new-freeze-file`
  has been passed.\n\t* 'new-repl' now accepts a '--build-depends' flag which accepts
  the\n\t  same syntax as is used in .cabal files to add additional dependencies\n\t
  \ to the environment when developing in the REPL. It is now usable outside\n\t  of
  projects. (#5425, #5454)\n\t* 'new-build' now treats Haddock errors non-fatally.
  In addition,\n\t  it attempts to avoid trying to generate Haddocks when there is\n\t
  \ nothing to generate them from. (#5232, #5459)\n\t* 'new-run', 'new-test', and
  'new-bench' now will attempt to resolve\n\t  ambiguous selectors by filtering out
  selectors that would be invalid.\n\t  (#4679, #5461)\n\t* 'new-install' now supports
  installing libraries and local\n\t  components. (#5399)\n\t* Drop support for GHC
  7.4, since it is out of our support window\n\t  (and has been for over a year!).\n\t*
  'new-update' now works outside of projects. (#5096)\n\t* Extend `plan.json` with
  `pkg-src` provenance information. (#5487)\n\t* Add 'new-sdist' command (#5389).
  Creates stable archives based on\n\t  cabal projects in '.zip' and '.tar.gz' formats.\n\t*
  Add '--repl-options' flag to 'cabal repl' and 'cabal new-repl'\n\t  commands. Passes
  its arguments to the invoked repl, bypassing the\n\t  new-build's cached configurations.
  This assures they don't trigger\n\t  useless rebuilds and are always applied within
  the repl. (#4247, #5287)\n\t* Add 'v1-' prefixes for the commands that will be replaced
  in the\n\t  new-build universe, in preparation for it becoming the default.\n\t
  \ (#5358)\n\t* 'outdated' accepts '--v1-freeze-file' and '--v2-freeze-file'\n\t
  \ in the same spirit.\n\t* Completed the 'new-clean' command (#5357). The functionality
  is\n\t  equivalent to old-style clean, but for nix-style builds.\n\t* Ensure that
  each package selected for a build-depends dependency\n\t  contains a library (#5304).\n\t*
  Support packages from local tarballs in the cabal.project file.\n\t* Default changelog
  generated by 'cabal init' is now named\n\t  'CHANGELOG.md' (#5441).\n\t* Align output
  of 'new-build' command phases (#4040).\n\t* Add suport for specifying remote VCS
  dependencies via new\n\t  'source-repository-package' stanzas in 'cabal.project'
  files\n\t  (#5351).\n\n2.2.0.0 Mikhail Glushenkov <mikhail.glushenkov@gmail.com>
  March 2018\n\t* '--with-PROG' and '--PROG-options' are applied to all packages\n\tand
  not local packages only (#5019).\n\t* Completed the 'new-update' command (#4809),
  which respects nix-style\n\tcabal.project(.local) files and allows to update from\n\tmultiple
  repositories when using overlays.\n\t* Completed the 'new-run' command (#4477).
  The functionality is the\n\tsame of the old 'run' command but using nix-style builds.\n\tAdditionally,
  it can run executables across packages in a project.\n\tTests and benchmarks are
  also treated as executables, providing a\n\tquick way to pass them arguments.\n\t*
  Completed the 'new-bench' command (#3638). Same as above.\n\t* Completed the 'new-exec'
  command (#3638). Same as above.\n\t* Added a preliminary 'new-install' command (#4558,
  nonlocal exes\n\tpart) which allows to quickly install executables from Hackage.\n\t*
  Set symlink-bindir (used by new-install) to .cabal/bin by default on\n\t.cabal/config
  initialization (#5188).\n\t* 'cabal update' now supports '--index-state' which can
  be used to\n\troll back the index to an earlier state.\n\t* '--allow-{newer,older}'
  syntax has been enhanced. Dependency\n\trelaxation can be now limited to a specific
  release of a package,\n\tplus there's a new syntax for relaxing only caret-style
  (i.e. '^>=')\n\tdependencies (#4575, #4669).\n\t* New config file field: 'cxx-options'
  to specify which options to be\n\tpassed to the compiler when compiling C++ sources
  specified by the\n\t'cxx-sources' field. (#3700)\n\t* New config file field: 'cxx-sources'
  to specify C++ files to be\n\tcompiled separately from C source files. Useful in
  conjunction with the\n\t'cxx-options' flag to pass different compiler options to
  C and C++\n\tsource files. (#3700)\n\t* Use [lfxtb] letters to differentiate component
  kind instead of\n\topaque \"c\" in dist-dir layout.\n\t* 'cabal configure' now supports
  '--enable-static', which can be\n\tused to build static libaries with GHC via GHC's
  `-staticlib`\n\tflag.\n\t* 'cabal user-config now supports '--augment' which can
  append\n\tadditional lines to a new or updated cabal config file.\n\t* Added support
  for '--enable-tests' and '--enable-benchmarks' to\n\t'cabal fetch' (#4948).\n\t*
  Misspelled package-names on CLI will no longer be silently\n\tcase-corrected (#4778).\n\t*
  'cabal new-configure' now backs up the old 'cabal.project.local'\n\tfile if it exists
  (#4460).\n\t* On macOS, `new-build` will now place dynamic libraries into\n\t`store/lib`
  and aggressively shorten their names in an effort to\n\tstay within the load command
  size limits of macOSs mach-o linker.\n\t* 'new-build' now checks for the existence
  of executables for\n\tbuild-tools and build-tool-depends dependencies in the solver\n\t(#4884).\n\t*
  Fixed a spurious warning telling the user to run 'cabal update'\n\twhen it wasn't
  necessary (#4444).\n\t* Packages installed in sandboxes via 'add-source' now have\n\ttheir
  timestamps updated correctly and so will not be reinstalled\n\tunncecessarily if
  the main install command fails (#1375).\n\t* Add Windows device path support for
  copyFile, renameFile. Allows cabal\n\tnew-build to use temporary store path of up
  to 32k length\n\t(#3972, #4914, #4515).\n\t* When a flag value is specified multiple
  times on the command\n\tline, the last one is now preferred, so e.g. '-f+dev -f-dev'
  is\n\tnow equivalent to '-f-dev' (#4452).\n\t* Removed support for building cabal-install
  with GHC < 7.10 (#4870).\n\t* New 'package *' section in 'cabal.project' files that
  applies\n\toptions to all packages, not just those local to the project.\n\t* Paths_
  autogen modules now compile when `RebindableSyntax` or\n\t`OverloadedStrings` is
  used in `default-extensions`.\n\t[stack#3789](https://github.com/commercialhaskell/stack/issues/3789)\n\t*
  getDataDir` and other `Paths_autogen` functions now work correctly\n\twhen compiling
  a custom `Setup.hs` script using `new-build` (#5164).\n\n2.0.0.1 Mikhail Glushenkov
  <mikhail.glushenkov@gmail.com> December 2017\n\t* Support for GHC's numeric -g debug
  levels (#4673).\n\t* Demoted 'scope' field version check to a warning (#4714).\n\t*
  Fixed verbosity flags getting removed before being passed to\n\t'printPlan' (#4724).\n\t*
  Added a '--store-dir' option that can be used to configure the\n\tlocation of the
  build global build store (#4623).\n\t* Turned `allow-{newer,older}` in `cabal.project`
  files into an\n\taccumulating field to match CLI flag semantics (#4679).\n\t* Improve
  success message when `cabal upload`ing documentation\n\t(#4777).\n\t* Documentation
  fixes.\n\n2.0.0.0 Mikhail Glushenkov <mikhail.glushenkov@gmail.com> August 2017\n\t*
  See http://coldwa.st/e/blog/2017-09-09-Cabal-2-0.html\n\tfor more detailed release
  notes.\n\t* Removed the '--root-cmd' parameter of the 'install' command\n\t(#3356).\n\t*
  Deprecated 'cabal install --global' (#3356).\n\t* Changed 'cabal upload' to upload
  a package candidate by default\n\t(#3419). Same applies to uploading documentation.\n\t*
  Added a new 'cabal upload' flag '--publish' for publishing a\n\tpackage on Hackage
  instead of uploading a candidate (#3419).\n\t* Added optional solver output visualisation
  support via the\n\ttracetree package. Mainly intended for debugging (#3410).\n\t*
  Removed the '--check' option from 'cabal upload'\n\t(#1823). It was replaced by
  package candidates.\n\t* Fixed various behaviour differences between network transports\n\t(#3429).\n\t*
  The bootstrap script now works correctly when run from a Git\n\tclone (#3439).\n\t*
  Removed the top-down solver (#3598).\n\t* The '-v/--verbosity' option no longer
  affects GHC verbosity\n\t(except in the case of '-v0'). Use '--ghc-options=-v' to
  enable\n\tverbose GHC output (#3540, #3671).\n\t* Changed the default logfile template
  from\n\t'.../$pkgid.log' to '.../$compiler/$libname.log' (#3807).\n\t* Added a new
  command, 'cabal reconfigure', which re-runs 'configure'\n\twith the most recently
  used flags (#2214).\n\t* Added the '--index-state' flag for requesting a specific\n\tversion
  of the package index (#3893, #4115).\n\t* Support for building Backpack packages.
  \ See\n\thttps://github.com/ezyang/ghc-proposals/blob/backpack/proposals/0000-backpack.rst\n\tfor
  more details.\n\t* Support the Nix package manager (#3651).\n\t* Made the 'template-haskell'
  package non-upgradable again (#4185).\n\t* Fixed password echoing on MinTTY (#4128).\n\t*
  Added a new solver flag, '--allow-boot-library-installs', that allows\n\tany package
  to be installed or upgraded (#4209).\n\t* New 'cabal-install' command: 'outdated',
  for listing outdated\n\tversion bounds in a .cabal file or a freeze file (#4207).\n\t*
  Added qualified constraints for setup dependencies. For example,\n\t--constraint=\"setup.bar
  == 1.0\" constrains all setup dependencies on\n\tbar, and --constraint=\"foo:setup.bar
  == 1.0\" constrains foo's setup\n\tdependency on bar (part of #3502).\n\t* Non-qualified
  constraints, such as --constraint=\"bar == 1.0\", now\n\tonly apply to top-level
  dependencies. They don't constrain setup or\n\tbuild-tool dependencies. The new
  syntax --constraint=\"any.bar == 1.0\"\n\tconstrains all uses of bar.\n\t* Added
  a technical preview version of the 'cabal doctest' command\n\t(#4480).\n\n1.24.0.2
  Mikhail Glushenkov <mikhail.glushenkov@gmail.com> December 2016\n\t* Adapted to
  the revert of a PVP-noncompliant API change in\n\tCabal 1.24.2.0 (#4123).\n\t* Bumped
  the directory upper bound to < 1.4 (#4158).\n\n1.24.0.1 Ryan Thomas <ryan@ryant.org>
  October 2016\n\t* Fixed issue with passing '--enable-profiling' when invoking\n\tSetup
  scripts built with older versions of Cabal (#3873).\n\t* Fixed various behaviour
  differences between network transports\n\t(#3429).\n\t* Updated to depend on the
  latest hackage-security that fixes\n\tvarious issues on Windows.\n\t* Fixed 'new-build'
  to exit with a non-zero exit code on failure\n\t(#3506).\n\t* Store secure repo
  index data as 01-index.* (#3862).\n\t* Added new hackage-security root keys for
  distribution with\n\tcabal-install.\n\t* Fix an issue where 'cabal install' sometimes
  had to be run twice\n\tfor packages with build-type: Custom and a custom-setup stanza\n\t(#3723).\n\t*
  'cabal sdist' no longer ignores '--builddir' when the package's\n\tbuild-type is
  Custom (#3794).\n\n1.24.0.0 Ryan Thomas <ryan@ryant.org> March 2016\n\t* If there
  are multiple remote repos, 'cabal update' now updates\n\tthem in parallel (#2503).\n\t*
  New 'cabal upload' option '-P'/'--password-command' for reading\n\tHackage password
  from arbitrary program output (#2506).\n\t* Better warning for 'cabal run' (#2510).\n\t*
  'cabal init' now warns if the chosen package name is already\n\tregistered in the
  source package index (#2436).\n\t* New 'cabal install' option: '--offline' (#2578).\n\t*
  Accept 'builddir' field in cabal.config (#2484)\n\t* Read 'builddir' option from
  'CABAL_BUILDDIR' environment variable.\n\t* Remote repos may now be configured to
  use https URLs. This uses\n\teither curl or wget or, on Windows, PowerShell, under
  the hood (#2687).\n\t* Install target URLs can now use https e.g. 'cabal install\n\thttps://example.com/foo-1.0.tar.gz'.\n\t*
  Automatically use https for cabal upload for the main\n\thackage.haskell.org (other
  repos will use whatever they are\n\tconfigured to use).\n\t* Support for dependencies
  of custom Setup.hs scripts\n\t(see http://www.well-typed.com/blog/2015/07/cabal-setup-deps/).\n\t*
  'cabal' program itself now can be used as an external setup\n\tmethod. This fixes
  an issue when Cabal version mismatch caused\n\tunnecessary reconfigures (#2633).\n\t*
  Improved error message for unsatisfiable package constraints\n\t(#2727).\n\t* Fixed
  a space leak in 'cabal update' (#2826).\n\t* 'cabal exec' and 'sandbox hc-pkg' now
  use the configured\n\tcompiler (#2859).\n\t* New 'cabal haddock' option: '--for-hackage'
  (#2852).\n\t* Added a warning when the solver cannot find a dependency (#2853).\n\t*
  New 'cabal upload' option: '--doc': upload documentation to\n\thackage (#2890).\n\t*
  Improved error handling for 'sandbox delete-source' (#2943).\n\t* Solver support
  for extension and language flavours (#2873).\n\t* Support for secure repos using
  hackage-security (#2983).\n\t* Added a log file message similar to one printed by
  'make' when\n\tbuilding in another directory (#2642).\n\t* Added new subcommand
  'init' to 'cabal user-config'. This\n\tsubcommand creates a cabal configuration
  file in either the\n\tdefault location or as specified by --config-file (#2553).\n\t*
  The man page for 'cabal-install' is now automatically generated\n\t(#2877).\n\t*
  The '--allow-newer' option now works as expected when specified\n\tmultiple times
  (#2588).\n\t* New config file field: 'extra-framework-dirs' (extra locations\n\tto
  find OS X frameworks in). Can be also specified as an argument\n\tfor 'install'
  and 'configure' commands (#3158).\n\t* It's now possible to limit the scope of '--allow-newer'
  to\n\tsingle packages in the install plan (#2756).\n\t* Full '--allow-newer' syntax
  is now supported in the config file\n\t(that is, 'allow-newer: base, ghc-prim,  some-package:vector')\n\t(#3171).\n\t*
  Improved performance of '--reorder-goals' (#3208).\n\t* Fixed space leaks in modular
  solver (#2916, #2914).\n\t* Made the solver aware of pkg-config constraints (#3023).\n\t*
  Added a new command: 'gen-bounds' (#3223). See\n\thttp://softwaresimply.blogspot.se/2015/08/cabal-gen-bounds-easy-generation-of.html.\n\t*
  Tech preview of new nix-style isolated project-based builds.\n\tCurrently provides
  the commands (new-)build/repl/configure.\n\n1.22.9.0 Ryan Thomas <ryan@ryant.org>
  March 2016\n\t* Include Cabal-1.22.8.0\n\n1.22.8.0 Ryan Thomas <ryan@ryant.org>
  February 2016\n\t* Only Custom setup scripts should be compiled with '-i -i.'.\n\t*
  installedCabalVersion: Don't special-case Cabal anymore.\n\t* Bump the HTTP upper
  bound. See #3069.\n\n1.22.7.0 Ryan Thomas <ryan@ryant.org> December 2015\n\t* Remove
  GZipUtils tests\n\t* maybeDecompress: bail on all errors at the beginning of the\n\tstream
  with zlib < 0.6\n\t* Correct maybeDecompress\n\n1.22.6.0 Ryan Thomas <ryan@ryant.org>
  June 2015\n\t* A fix for @ezyang's fix for #2502. (Mikhail Glushenkov)\n\n1.22.5.0
  Ryan Thomas <ryan@ryant.org> June 2015\n\t* Reduce temporary directory name length,
  fixes #2502. (Edward Z. Yang)\n\n1.22.4.0 Ryan Thomas <ryan@ryant.org> May 2015\n\t*
  Force cabal upload to always use digest auth and never basic auth.\n\t* Add dependency-graph
  information to `printPlan` output\n\t* bootstrap.sh: fixes linker matching to avoid
  cases where tested\n\tlinker names appear unexpectedly in compiler output (fixes
  #2542)\n\n1.22.3.0 Ryan Thomas <ryan@ryant.org> April 2015\n\t* Fix bash completion
  for sandbox subcommands - Fixes #2513\n\t(Mikhail Glushenkov)\n\t* filterConfigureFlags:
  filter more flags (Mikhail Glushenkov)\n\n1.22.2.0 Ryan Thomas <ryan@ryant.org>
  March 2015\n\t* Don't pass '--{en,dis}able-profiling' to old setup exes.\n\t* -Wall
  police\n\t* Allow filepath 1.4\n\n1.22.0.0 Johan Tibell <johan.tibell@gmail.com>
  January 2015\n\t* New command: user-config (#2159).\n\t* Implement 'cabal repl --only'
  (#2016).\n\t* Fix an issue when 'cabal repl' was doing unnecessary compilation\n\t(#1715).\n\t*
  Prompt the user to specify source directory in 'cabal init'\n\t(#1989).\n\t* Remove
  the self-upgrade check (#2090).\n\t* Don't redownload already downloaded packages
  when bootstrapping\n\t(#2133).\n\t* Support sandboxes in 'bootstrap.sh' (#2137).\n\t*
  Install profiling and shared libs by default in 'bootstrap.sh'\n\t(#2009).\n\n1.20.2.0
  Ryan Thomas <ryan@ryant.org> February 2016\n\t* Only Custom setup scripts should
  be compiled with '-i -i.'.\n\t* installedCabalVersion: Don't special-case Cabal
  anymore.\n\n1.20.1.0 Ryan Thomas <ryan@ryant.org> May 2015\n\t* Force cabal upload
  to always use digest auth and never basic auth.\n\t* bootstrap.sh: install network-uri
  before HTTP\n\n1.20.0.5 Johan Tibell <johan.tibell@gmail.com> December 2014\n\t*
  Support random 1.1.\n\t* Fix bootstrap script after network package split.\n\t*
  Support network-2.6 in test suite.\n\n1.20.0.3 Johan Tibell <johan.tibell@gmail.com>
  June 2014\n\t* Don't attempt to rename dist if it is already named correctly\n\t*
  Treat all flags of a package as interdependent.\n\t* Allow template-haskell to be
  upgradable again\n\n1.20.0.2 Johan Tibell <johan.tibell@gmail.com> May 2014\n\t*
  Increase max-backjumps to 2000.\n\t* Fix solver bug which led to missed install
  plans.\n\t* Fix streaming test output.\n\t* Tweak solver heuristics to avoid reinstalls.\n\n1.20.0.1
  Johan Tibell <johan.tibell@gmail.com> May 2014\n\t* Fix cabal repl search path bug
  on Windows\n\t* Include OS and arch in cabal-install user agent\n\t* Revert --constraint
  flag behavior in configure to 1.18 behavior\n\n1.20.0.0 Johan Tibell <johan.tibell@gmail.com>
  April 2014\n\t* Build only selected executables\n\t* Add -j flag to build/test/bench/run\n\t*
  Improve install log file\n\t* Don't symlink executables when in a sandbox\n\t* Add
  --package-db flag to 'list' and 'info'\n\t* Make upload more efficient\n\t* Add
  --require-sandbox option\n\t* Add experimental Cabal file format command\n\t* Add
  haddock section to config file\n\t* Add --main-is flag to init\n\n1.18.2.0 Ryan
  Thomas <ryan@ryant.org> February 2016\n\t* Only Custom setup scripts should be compiled
  with '-i -i.'.\n\t* installedCabalVersion: Don't special-case Cabal anymore.\n\n1.18.1.0
  Ryan Thomas <ryan@ryant.org> May 2015\n\t* Force cabal upload to always use digest
  auth and never basic auth.\n\t* Merge pull request #2367 from juhp/patch-2\n\t*
  Fix bootstrap.sh by bumping HTTP to 4000.2.16.1\n\n1.18.0.7 Johan Tibell <johan.tibell@gmail.com>
  December 2014\n\t* Support random 1.1.\n\t* Fix bootstrap script after network package
  split.\n\t* Support network-2.6 in test suite.\n\n1.18.0.5 Johan Tibell <johan.tibell@gmail.com>
  July 2014\n\t* Make solver flag resolution more conservative.\n\n1.18.0.4 Johan
  Tibell <johan.tibell@gmail.com> May 2014\n\t* Increase max-backjumps to 2000.\n\t*
  Fix solver bug which led to missed install plans.\n\t* Tweak solver heuristics to
  avoid reinstalls.\n\n0.14.0 Andres Loeh <andres@well-typed.com> April 2012\n\t*
  Works with ghc-7.4\n\t* Completely new modular dependency solver (default in most
  cases)\n\t* Some tweaks to old topdown dependency solver\n\t* Install plans are
  now checked for reinstalls that break packages\n\t* Flags --constraint and --preference
  work for nonexisting packages\n\t* New constraint forms for source and installed
  packages\n\t* New constraint form for package-specific use flags\n\t* New constraint
  form for package-specific stanza flags\n\t* Test suite dependencies are pulled in
  on demand\n\t* No longer install packages on --enable-tests when tests fail\n\t*
  New \"cabal bench\" command\n\t* Various \"cabal init\" tweaks\n\n0.10.0 Duncan
  Coutts <duncan@community.haskell.org> February 2011\n\t* New package targets: local
  dirs, local and remote tarballs\n\t* Initial support for a \"world\" package target\n\t*
  Partial fix for situation where user packages mask global ones\n\t* Removed cabal
  upgrade, new --upgrade-dependencies flag\n\t* New cabal install --only-dependencies
  flag\n\t* New cabal fetch --no-dependencies and --dry-run flags\n\t* Improved output
  for cabal info\n\t* Simpler and faster bash command line completion\n\t* Fix for
  broken proxies that decompress wrongly\n\t* Fix for cabal unpack to preserve executable
  permissions\n\t* Adjusted the output for the -v verbosity level in a few places\n\n0.8.2
  Duncan Coutts <duncan@community.haskell.org> March 2010\n\t* Fix for cabal update
  on Windows\n\t* On windows switch to per-user installs (rather than global)\n\t*
  Handle intra-package dependencies in dependency planning\n\t* Minor tweaks to cabal
  init feature\n\t* Fix various -Wall warnings\n\t* Fix for cabal sdist --snapshot\n\n0.8.0
  Duncan Coutts <duncan@haskell.org> Dec 2009\n\t* Works with ghc-6.12\n\t* New \"cabal
  init\" command for making initial project .cabal file\n\t* New feature to maintain
  an index of haddock documentation\n\n0.6.4 Duncan Coutts <duncan@haskell.org> Nov
  2009\n\t* Improve the algorithm for selecting the base package version\n\t* Hackage
  errors now reported by \"cabal upload [--check]\"\n\t* Improved format of messages
  from \"cabal check\"\n\t* Config file can now be selected by an env var\n\t* Updated
  tar reading/writing code\n\t* Improve instructions in the README and bootstrap output\n\t*
  Fix bootstrap.sh on Solaris 9\n\t* Fix bootstrap for systems where network uses
  parsec 3\n\t* Fix building with ghc-6.6\n\n0.6.2 Duncan Coutts <duncan@haskell.org>
  Feb 2009\n\t* The upgrade command has been disabled in this release\n\t* The configure
  and install commands now have consistent behaviour\n\t* Reduce the tendency to re-install
  already existing packages\n\t* The --constraint= flag now works for the install
  command\n\t* New --preference= flag for soft constraints / version preferences\n\t*
  Improved bootstrap.sh script, smarter and better error checking\n\t* New cabal info
  command to display detailed info on packages\n\t* New cabal unpack command to download
  and untar a package\n\t* HTTP-4000 package required, should fix bugs with http proxies\n\t*
  Now works with authenticated proxies.\n\t* On Windows can now override the proxy
  setting using an env var\n\t* Fix compatibility with config files generated by older
  versions\n\t* Warn if the hackage package list is very old\n\t* More helpful --help
  output, mention config file and examples\n\t* Better documentation in ~/.cabal/config
  file\n\t* Improved command line interface for logging and build reporting\n\t* Minor
  improvements to some messages\n\n0.6.0 Duncan Coutts <duncan@haskell.org> Oct 2008\n\t*
  Constraint solver can now cope with base 3 and base 4\n\t* Allow use of package
  version preferences from hackage index\n\t* More detailed output from cabal install
  --dry-run -v\n\t* Improved bootstrap.sh\n\n0.5.2 Duncan Coutts <duncan@haskell.org>
  Aug 2008\n\t* Suport building haddock documentaion\n\t* Self-reinstall now works
  on Windows\n\t* Allow adding symlinks to excutables into a separate bindir\n\t*
  New self-documenting config file\n\t* New install --reinstall flag\n\t* More helpful
  status messages in a couple places\n\t* Upload failures now report full text error
  message from the server\n\t* Support for local package repositories\n\t* New build
  logging and reporting\n\t* New command to upload build reports to (a compatible)
  server\n\t* Allow tilde in hackage server URIs\n\t* Internal code improvements\n\t*
  Many other minor improvements and bug fixes\n\n0.5.1 Duncan Coutts <duncan@haskell.org>
  June 2008\n\t* Restore minimal hugs support in dependency resolver\n\t* Fix for
  disabled http proxies on Windows\n\t* Revert to global installs on Windows by default\n\n0.5.0
  Duncan Coutts <duncan@haskell.org> June 2008\n\t* New package dependency resolver,
  solving diamond dep problem\n\t* Integrate cabal-setup functionality\n\t* Integrate
  cabal-upload functionality\n\t* New cabal update and check commands\n\t* Improved
  behavior for install and upgrade commands\n\t* Full Windows support\n\t* New command
  line handling\n\t* Bash command line completion\n\t* Allow case insensitive package
  names on command line\n\t* New --dry-run flag for install, upgrade and fetch commands\n\t*
  New --root-cmd flag to allow installing as root\n\t* New --cabal-lib-version flag
  to select different Cabal lib versions\n\t* Support for HTTP proxies\n\t* Improved
  cabal list output\n\t* Build other non-dependent packages even when some fail\n\t*
  Report a summary of all build failures at the end\n\t* Partial support for hugs\n\t*
  Partial implementation of build reporting and logging\n\t* More consistent logging
  and verbosity\n\t* Significant internal code restructuring\n\n0.4 Duncan Coutts
  <duncan@haskell.org> Oct 2007\n\t* Renamed executable from 'cabal-install' to 'cabal'\n\t*
  Partial Windows compatibility\n\t* Do per-user installs by default\n\t* cabal install
  now installs the package in the current directory\n\t* Allow multiple remote servers\n\t*
  Use zlib lib and internal tar code and rather than external tar\n\t* Reorganised
  configuration files\n\t* Significant code restructuring\n\t* Cope with packages
  with conditional dependencies\n\n0.3 and older versions by Lemmih, Paolo Martini
  and others 2006-2007\n\t* Switch from smart-server, dumb-client model to the reverse\n\t*
  New .tar.gz based index format\n\t* New remote and local package archive format\n"
basic-deps:
  bytestring: '>=0.10.6.0 && <0.11'
  unix: '>=2.5 && <2.9'
  edit-distance: '>=0.2.2 && <0.3'
  stm: '>=2.0 && <2.6'
  Cabal: ==3.4.*
  base: '>=4.8 && <4.15'
  time: '>=1.5.0.1 && <1.11'
  text: '>=1.2.3 && <1.3'
  filepath: '>=1.4.0.0 && <1.5'
  process: '>=1.2.3.0 && <1.7'
  async: '>=2.0 && <2.3'
  parsec: '>=3.1.13.0 && <3.2'
  array: '>=0.4 && <0.6'
  hackage-security: '>=0.6.0.1 && <0.7'
  containers: '>=0.5.6.2 && <0.7'
  tar: '>=0.5.0.3 && <0.6'
  binary: '>=0.7.3 && <0.9'
  cryptohash-sha256: '>=0.11 && <0.12'
  regex-base: '>=0.94.0.0 && <0.95'
  regex-posix: '>=0.96.0.0 && <0.97'
  zlib: '>=0.5.3 && <0.7'
  network-uri: '>=2.6.0.2 && <2.7'
  mtl: '>=2.0 && <2.3'
  hashable: '>=1.0 && <1.4'
  HTTP: '>=4000.1.5 && <4000.4'
  base16-bytestring: '>=0.1.1 && <0.2'
  transformers: '>=0.4.2.0 && <0.6'
  random: '>=1.2 && <1.3'
  deepseq: '>=1.4.1.1 && <1.5'
  lukko: '>=0.1 && <0.2'
  pretty: '>=1.1 && <1.2'
  resolv: '>=0.1.1 && <0.2'
  echo: '>=0.1.3 && <0.2'
  directory: '>=1.2.2.0 && <1.4'
all-versions:
- 0.4.0
- 0.5.0
- 0.5.1
- 0.5.2
- 0.6.0
- 0.6.2
- 0.6.4
- 0.8.0
- 0.8.2
- 0.10.0
- 0.10.2
- 0.14.0
- 0.14.1
- 1.16.0
- 1.16.0.1
- 1.16.0.2
- 1.16.1.0
- 1.18.0
- 1.18.0.1
- 1.18.0.2
- 1.18.0.3
- 1.18.0.4
- 1.18.0.5
- 1.18.0.6
- 1.18.0.7
- 1.18.0.8
- 1.18.1.0
- 1.18.2.0
- 1.20.0.0
- 1.20.0.1
- 1.20.0.2
- 1.20.0.3
- 1.20.0.4
- 1.20.0.5
- 1.20.0.6
- 1.20.1.0
- 1.20.2.0
- 1.22.0.0
- 1.22.0.1
- 1.22.2.0
- 1.22.3.0
- 1.22.4.0
- 1.22.5.0
- 1.22.6.0
- 1.22.7.0
- 1.22.8.0
- 1.22.9.0
- 1.24.0.0
- 1.24.0.1
- 1.24.0.2
- 2.0.0.0
- 2.0.0.1
- 2.2.0.0
- 2.4.0.0
- 2.4.1.0
- 3.0.0.0
- 3.2.0.0
- 3.4.0.0
author: Cabal Development Team (see AUTHORS file)
latest: 3.4.0.0
description-type: markdown
description: |
  The cabal-install package
  =========================

  See the [Cabal web site] for more information.

  The `cabal-install` package provides a command line tool named `cabal`.
  It uses the [Cabal] library and provides a user interface to the
  Cabal/[Hackage] build automation and package management system. It can
  build and install both local and remote packages, including
  dependencies.

  [Cabal web site]: http://www.haskell.org/cabal/
  [Cabal]: ../Cabal/README.md

  Installing the `cabal` command-line tool
  ========================================

  The `cabal-install` package requires a number of other packages, most of
  which come with a standard GHC installation. It requires the [network]
  package, which is sometimes packaged separately by Linux distributions;
  for example, on Debian or Ubuntu, it is located in the
  "libghc6-network-dev" package.

  `cabal` requires a few other Haskell packages that are not always
  installed. The exact list is specified in the [.cabal] file or in the
  [bootstrap.sh] file. All these packages are available from [Hackage].

  Note that on some Unix systems you may need to install an additional
  zlib development package using your system package manager; for example,
  on Debian or Ubuntu, it is located in the "zlib1g-dev" package; on
  Fedora, it is located in the "zlib-devel" package. It is required
  because the Haskell zlib package uses the system zlib C library and
  header files.

  The `cabal-install` package is now part of the [Haskell Platform], so you
  do not usually need to install it separately. However, if you are
  starting from a minimal GHC installation, you need to install
  `cabal-install` manually. Since it is an ordinary Cabal package,
  `cabal-install` can be built the standard way; to facilitate this, the
  process has been partially automated. It is described below.

  [.cabal]: cabal-install.cabal
  [network]: http://hackage.haskell.org/package/network
  [Haskell Platform]: http://www.haskell.org/platform/

  Quick start on Unix-like systems
  --------------------------------

  As a convenience for users on Unix-like systems, there is a
  [bootstrap.sh] script that will download and install each of
  `cabal-install`'s dependencies in turn.

      $ ./bootstrap.sh

  It will download and install the dependencies. The script will install the
  library packages (vanilla, profiling and shared) into `$HOME/.cabal/` and the
  `cabal` program into `$HOME/.cabal/bin/`. If you don't want to install profiling
  and shared versions of the libraries, use

      $ EXTRA_CONFIGURE_OPTS="" ./bootstrap.sh

  You then have the choice either to place `$HOME/.cabal/bin` on your
  `$PATH` or move the `cabal` program to somewhere on your `$PATH`. Next,
  you can get the latest list of packages by running:

      $ cabal update

  This will also create a default configuration file, if it does not
  already exist, at `$HOME/.cabal/config`.

  By default, `cabal` will install programs to `$HOME/.cabal/bin`. If you
  do not want to add this directory to your `$PATH`, you can change
  the setting in the config file; for example, you could use the
  following:

      installdir: $HOME/bin


  Quick start on Windows systems
  ------------------------------

  For Windows users, a precompiled program ([cabal.exe]) is provided.
  Download and put it somewhere on your `%PATH%` (for example,
  `C:\Program Files\Haskell\bin`.)

  Next, you can get the latest list of packages by running:

      $ cabal update

  This will also create a default configuration file (if it does not
  already exist) at
  `C:\Documents and Settings\%USERNAME%\Application Data\cabal\config`.

  [cabal.exe]: http://www.haskell.org/cabal/release/cabal-install-latest/

  Using `cabal`
  =============

  There are two sets of commands: commands for working with a local
  project build tree and those for working with packages distributed
  from [Hackage].

  For the list of the full set of commands and flags for each command,
  run:

      $ cabal help


  Commands for developers for local build trees
  ---------------------------------------------

  The commands for local project build trees are almost the same as the
  `runghc Setup` command-line interface you may already be familiar with.
  In particular, it has the following commands:

    * `cabal configure`
    * `cabal build`
    * `cabal haddock`
    * `cabal clean`
    * `cabal sdist`

  The `install` command is somewhat different; it is an all-in-one
  operation. If you run `cabal install` in your build tree, it will
  configure, build, and install. It takes all the flags that `configure`
  takes such as `--global` and `--prefix`.

  In addition, `cabal` will download and install any dependencies that are
  not already installed. It can also rebuild packages to ensure a
  consistent set of dependencies.


  Commands for released Hackage packages
  --------------------------------------

      $ cabal update

  This command gets the latest list of packages from the [Hackage] server.
  On occasion, this command must be run manually--for instance, if you
  want to install a newly released package.

      $ cabal install xmonad

  This command installs one or more named packages, and all their
  dependencies, from Hackage. By default, it installs the latest available
  version; however, you may specify exact versions or version ranges. For
  example, `cabal install alex-2.2` or `cabal install parsec < 3`.

      $ cabal list xml

  This does a search of the installed and available packages. It does a
  case-insensitive substring match on the package name.


  [Hackage]: http://hackage.haskell.org
  [bootstrap.sh]: bootstrap.sh
license-name: BSD-3-Clause
