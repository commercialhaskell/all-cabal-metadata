all-versions:
- '1.0'
- '1.1'
- '1.2'
- '1.3'
- '1.4'
- '1.5'
- '1.6'
- '1.7'
- '1.8'
- '1.9'
- '1.10'
- '1.11'
- '1.12'
- '1.13'
- '1.14'
- '1.15'
- '1.16'
- '1.17'
- '1.18'
- '1.19'
- '1.20'
- '1.21'
- '1.23'
- '1.24'
- '1.25'
- '1.26'
- '1.27'
- '1.28'
- '1.29'
- '1.30'
- '1.31'
- '1.32'
- '1.33'
- '1.34'
- '1.35'
- '1.37'
- '1.38'
- '1.39'
- '1.40'
- '1.41'
- '1.42'
- '1.43'
- '1.44'
- '1.45'
- '1.46'
- '1.47'
- '1.48'
- '1.49'
- '1.50'
- '1.51'
- '1.52'
- '1.53'
- '1.54'
- '1.55'
- '1.56'
- '1.57'
- '1.58'
- '1.59'
- '1.60'
- '1.61'
- '1.63'
- '1.64'
- '1.65'
- '1.66'
- '1.67'
- '1.68'
- '1.69'
- '1.70'
- '1.71'
- '1.72'
- '1.73'
- '2.0'
- 2.0.1
- 2.0.2
- 2.0.3
- 2.0.4
- '2.1'
- 2.1.1
- '2.2'
- 2.2.1
- '2.3'
- 2.3.1
- 2.4.1
- '2.5'
- '2.6'
- '2.7'
- 2.7.2
- '2.8'
- 2.8.1
- 2.8.2
- '2.9'
- 2.9.1
- 2.9.2
- 2.9.3
- 2.10.0
- 2.10.1
- 2.10.2
- '2.11'
- 2.11.1
- '2.12'
- '2.13'
- '2.14'
- 2.14.1
- 2.14.2
- 2.14.3
- 2.14.4
- 2.15.0
- 2.15.1
- 2.15.2
- 2.15.3
- 2.15.4
- 2.15.5
- 2.15.6
- 2.16.0
- 2.17.0
- 2.18.0
- 2.19.0
- 2.19.1
- 2.20.0
author: Peter Simons <simons@cryp.to>
basic-deps:
  Cabal: '>=3.0'
  aeson: '>1'
  ansi-terminal: '>=0'
  ansi-wl-pprint: '>=0'
  base: '>4.11 && <5'
  bytestring: '>=0'
  cabal2nix: '>=0'
  containers: '>=0.5.9'
  deepseq: '>=1.4'
  directory: '>=0'
  distribution-nixpkgs: '>=1.7 && <1.8'
  filepath: '>=0'
  hackage-db: '>=2.0.1'
  hopenssl: '>=2'
  hpack: '>=0.29.6'
  language-nix: '>=0'
  lens: '>=0'
  monad-par: '>=0'
  monad-par-extras: '>=0'
  mtl: '>=0'
  optparse-applicative: '>=0'
  pretty: '>=1.1.2'
  process: '>=0'
  split: '>=0'
  text: '>=0'
  time: '>=0'
  transformers: '>=0'
  yaml: '>=0'
changelog: "# Revision History for cabal2nix\n\n## 2.20.0\n\n* `cabal2nix` now [prints
  the commands it runs when fetching sources](https://github.com/nixOS/cabal2nix/commit/5327953d299eba0b6de4e88bacf4bba9022bb5e2).\n*
  `cabal2nix` now [produces colorful output](https://github.com/NixOS/cabal2nix/pull/636)\n
  \ using ANSI SGR escape sequences when printing to a TTY.\n  This can be disabled
  using the [`NO_COLOR` environment variable](https://no-color.org/)\n  or forcibly
  enabled using `FORCE_COLOR`.\n* `hackage2nix` now defaults internally to an utf-8
  locale, ignoring enviroment\n  variables.\n* `cabal2nix` now exclusively uses the
  new\n  [plural testTargets](https://github.com/NixOS/nixpkgs/pull/306283)\n  argument.\n
  \ * This is an **API breaking change**: `_testTarget` was removed in\n    favor
  of `_testTargets`.\n  * Expressions using `_testTargets` will only work with\n    Nixpkgs
  24.11, 25.05 or newer.\n    **Warning**: As of this writing (2025-03-10), the unstable
  channels of\n    nixpkgs don't support testTargets yet. Inclusion is tracked by\n
  \   [nixpkgs#371032](https://github.com/NixOS/nixpkgs/pull/371032).\n* Added support
  for the [testFlags argument](https://github.com/NixOS/nixpkgs/pull/126364),\n  available
  since 21.11, to `Derivation`. **API breaking change**.\n* Remove `_enableSplitObjs`
  from `Derivation` since it [hasn't been\n  supported by Nixpkgs in a while](https://github.com/nixOS/nixpkgs/commit/a62b24be6d650757deb8fe222763f436a53650ff),\n
  \ **API breaking change**.\n* Added and updated various library name to Nixpkgs
  attribute name mappings.\n* Dropped/reduced post-processing hooks for\n  * `pandoc`\n
  \ * `git-annex`\n  * `haddock`\n  * `tz`\n* Postprocessing hooks utilising `replace`
  no longer fail when they can't find\n  the binding to replace. This fixes an issue
  where `cabal2nix` would fail to\n  generate an expression for a package when `hackage2nix`
  would succeed.\n\n## 2.19.1\n\n**Warning**: This version of `cabal2nix` generates
  Nix expressions that\nare expected to be used with at least NixOS 22.11 or the unstable\nchannels
  at `3928cfa27d9925f9fbd1d211cf2549f723546a81` or later (which\nshould be all unstable
  channels published after 2022-10-23) due to changes\nhow `libcrypt` is provided
  by `nixpkgs`. For details read below.\n\n* `cabal2nix` and `hackage2nix` will now
  emit a dependency on `libxcrypt`\n  if the `crypt` library is requested by a package
  description. This has\n  been done because `nixpkgs` has\n  [disabled `libcrypt`
  being bundled with `glibc`](https://github.com/NixOS/nixpkgs/pull/181764),\n  so
  the library will need to be pulled in from elsewhere.\n  These new generated nix
  expressions may not work correctly with older\n  versions of `nixpkgs` (since two
  `libcrypt`s would be pulled in).\n  Versions expected to work are listed in the
  warning above.\n  See also [#576](https://github.com/NixOS/cabal2nix/pull/576).\n*
  `cabal2nix` and `hackage2nix` can now resolve the `FLAC` library name.\n  See also
  [#567](https://github.com/NixOS/cabal2nix/pull/567).\n* Fix test suite compilation
  with `Cabal >= 3.8`.\n  See also [#572](https://github.com/NixOS/cabal2nix/pull/572).\n*
  Packages closely tied to `cabal2nix` have been merged into the main\n  `cabal2nix`
  source repository. As a consequence, the cabal2nix source\n  code has been moved
  into the `cabal2nix` subdirectory.\n  See also [#567](https://github.com/NixOS/cabal2nix/pull/567).\n\n##
  2.19.0\n\nNote that some of the API has also changed in a breaking\nmanner because
  of the upgrade to [`distribution-nixpkgs`\n1.7.0](https://github.com/nixos/distribution-nixpkgs/blob/v1.7.0/CHANGELOG.md#170),\nsee
  [#506](https://github.com/NixOS/cabal2nix/pull/506).\n\n* Only use `hpack` when
  building if no cabal file is found\n  for the package to process.\n  See also [#508](https://github.com/NixOS/cabal2nix/pull/508).\n*
  `hackage2nix` now supports arbitrary Nix-style platform tuples\n  in `unsupported-platforms`
  (including the new `aarch64-darwin`) as\n  well as nixpkgs platform groups which
  are denoted as e. g.\n  `platforms.darwin` and can be used instead of platform tuples.\n
  \ See also [#506](https://github.com/NixOS/cabal2nix/pull/506).\n  **API breaking
  change**: The `IsString` instance for `Platform` in\n  `Distribution.Nixpkgs.Haskell.OrphanInstances`
  has been removed.\n* The new `hackage2nix` `supported-platforms` configuration field\n
  \ allows prescribing a specific list of platforms to set in the\n  package's `platforms`
  meta attribute. `unsupported-platforms`\n  are now translated to `badPlatforms`
  instead of being subtracted\n  from `platforms`.\n  See also [#506](https://github.com/NixOS/cabal2nix/pull/506)\n
  \ and [#560](https://github.com/NixOS/cabal2nix/pull/560).\n  **API Breaking Change**
  for\n  `Distribution.Nixpkgs.Haskell.FromCabal.Configuration`.\n* `cabal2nix` will
  no longer emit a dependency on `webkitgtk24x-gtk{2,3}`\n  if it detects the older
  3.0 API of WebKit being used. Nixpkgs hasn't\n  contained this package for a few
  years now due to security\n  vulnerabilities and the packages still using it on
  Hackage are\n  unmaintained. If you have a legacy project built with an old\n  version
  of nixpkgs, either don't upgrade `cabal2nix` or emulate\n  the old behavior using
  overrides.\n  See also [#521](https://github.com/NixOS/cabal2nix/pull/521).\n* If
  the input cabal file declares just a single executable, the `mainProgram`\n  meta
  attribute will be set in the resulting Nix expression.\n  See also [#506](https://github.com/NixOS/cabal2nix/pull/506)
  and\n  [#557](https://github.com/NixOS/cabal2nix/pull/557).\n* If `cabal2nix` (or
  `hackage2nix`) doesn't recognize the license\n  of a package, it'll still assume
  that it's free and enable building\n  on Hydra (i. e. use the default value of `hydraPlatforms`).\n
  \ This is done because Hackage requires uploaded packages to\n  be open source.
  You may need to keep this change in mind,\n  however, if you use `cabal2nix` for
  packaging unfree\n  software. See also [#520](https://github.com/NixOS/cabal2nix/pull/520).\n
  \ `isFreeLicense` has changed semantically as a result.\n* Argument parsing logic
  in `cabal2nix` has been refactored\n  in [#544](https://github.com/NixOS/cabal2nix/pull/544).\n
  \ **API breaking change** for the following modules:\n  \n  * `Cabal2nix`\n  * `Distribution.Nixpkgs.Fetch`\n
  \ * `Distribution.Nixpkgs.Haskell.Derivation` (removed instance)\n  * `Distribution.Nixpkgs.Haskell.PackageSourceSpec`\n*
  Update handling of Lua bindings to reflect current state upstream.\n  See [#527](https://github.com/NixOS/cabal2nix/pull/527)
  and\n  [#547](https://github.com/NixOS/cabal2nix/pull/547).\n\n## 2.18.0\n\n* Support
  GHC 9.0.x and Cabal 3.4.0.0,\n  **API breaking change**\n  (See [#503](https://github.com/NixOS/cabal2nix/pull/503))\n*
  Fix fetching remote _archives_: Previously they weren't properly\n  unpacked, **API
  breaking change**\n  (See [#455](https://github.com/NixOS/cabal2nix/pull/455))\n*
  Resolution of system dependency attribute names in nixpkgs\n  * Update changed upstream
  attribute names, reflect deprecations\n  * Fix hackage2nix not resolving certain
  attribute names if multiple\n    attribute names referred to the same derivation.\n
  \   (See [#492](https://github.com/NixOS/cabal2nix/pull/492) and\n    [distribution-nixpkgs#10](https://github.com/NixOS/distribution-nixpkgs/pull/10))\n*
  hackage2nix: accept multiple config files at the command\n  line given by specifying
  `--config` more than once\n  (See [#494](https://github.com/NixOS/cabal2nix/pull/494))\n"
changelog-type: markdown
description: |
  Cabal2nix
  =========

  [![hackage release](https://img.shields.io/hackage/v/cabal2nix.svg?label=hackage)](http://hackage.haskell.org/package/cabal2nix)
  [![stackage LTS package](http://stackage.org/package/cabal2nix/badge/lts)](http://stackage.org/lts/package/cabal2nix)
  [![stackage Nightly package](http://stackage.org/package/cabal2nix/badge/nightly)](http://stackage.org/nightly/package/cabal2nix)
  ![Continous Integration](https://github.com/NixOS/cabal2nix/workflows/Haskell-CI/badge.svg)

  `cabal2nix` converts a single Cabal file into a single Nix build expression.
  For example:

  ```console
  $ cabal2nix cabal://mtl
  { mkDerivation, base, lib, transformers }:
  mkDerivation {
    pname = "mtl";
    version = "2.2.1";
    sha256 = "1icdbj2rshzn0m1zz5wa7v3xvkf6qw811p4s7jgqwvx1ydwrvrfa";
    libraryHaskellDepends = [ base transformers ];
    homepage = "http://github.com/ekmett/mtl";
    description = "Monad classes, using functional dependencies";
    license = lib.licenses.bsd3;
  }
  ```

  Cabal files can be referred to using the magic URL `cabal://NAME-VERSION`,
  which will automatically download the file from Hackage. Alternatively, a
  direct `http://host/path/pkg.cabal` URL can be provided, as well as a
  `file:///local/path/pkg.cabal` URI that doesn't depend on network access.
  However, if the source hash is not already in `cabal2nix`'s cache or provided
  using the `--sha256` option, `cabal2nix` still needs to download the source
  code to compute the hash, which still causes network traffic. Run the utility
  with `--help` to see the complete list of supported command-line flags.

  Detailed instructions on how to use those generated files with Nix can be found at
  https://haskell4nix.readthedocs.io/nixpkgs-users-guide.html#how-to-create-nix-builds-for-your-own-private-haskell-packages.

  `cabal2nix` can also build derivations for projects from other sources than
  Hackage. You only need to provide a URI that points to a cabal project. The
  most common use-case for this is probably to generate a derivation for a
  project on the local file system:

  ```console
  $ cabal get mtl-2.2.1 && cd mtl-2.2.1
  $ cabal2nix .
  { mkDerivation, base, lib, transformers }:
  mkDerivation {
    pname = "mtl";
    version = "2.2.1";
    src = ./.;
    libraryHaskellDepends = [ base transformers ];
    homepage = "http://github.com/ekmett/mtl";
    description = "Monad classes, using functional dependencies";
    license = lib.licenses.bsd3;
  }
  ```

  This derivation will not fetch from hackage, but instead use the directory which
  contains the derivation as the source repository.

  `cabal2nix` currently supports the following repository types:

  * directory
  * source archive (zip, tar.gz, ...) from http or https URL or local file.
  * git, mercurial, svn or bazaar repository

  ## `hackage2nix`

  This repository also contains, in the [`hackage2nix/`](./hackage2nix) directory,
  the tool to update the Haskell packages in
  [nixpkgs](https://github.com/NixOS/nixpkgs). It has its own README there.
description-type: markdown
hash: b088542eddc81151eac6d7c75198ef67258d17ba0a2098fa25f0b050c125f86f
homepage: https://github.com/nixos/cabal2nix#readme
latest: 2.20.0
license-name: BSD-3-Clause
maintainer: sternenseemann <sternenseemann@systemli.org>
synopsis: Convert Cabal files into Nix build instructions.
test-bench-deps:
  Cabal: '>=0'
  base: '>=0'
  cabal2nix: '>=0'
  containers: '>=0'
  directory: '>=0'
  filepath: '>=0'
  language-nix: '>=0'
  lens: '>=0'
  pretty: '>=0'
  process: '>1.2'
  tasty: '>=0'
  tasty-golden: '>=0'
