all-versions:
- '0.7'
- 0.7.1
- 0.7.2
- 0.7.2.1
- 0.7.3.1
- 0.7.3.2
- 0.7.4.0
- 0.7.4.1
- '0.8'
- '0.9'
- 0.9.1
- 0.9.2
author: Josh Hoyt, Jonathan Daugherty, Rogan Creswick
basic-deps:
  Cabal: '>=1.10.0.0 && <1.17'
  HTTP: '>=4000.0.9 && <4000.3'
  base: '>=4 && <5'
  bytestring: '>=0.9 && <0.11'
  containers: '>=0.3 && <0.6'
  directory: '>=1.0 && <1.3'
  filepath: '>=1.1 && <1.4'
  mtl: '>=1.1 && <2.2'
  network: '>=2.2 && <2.5'
  pretty: '>=1.0 && <1.2'
  process: '>=1.0 && <1.2'
  setenv: '>=0.1 && <0.2'
  tar: '>=0.4 && <0.5'
  template-haskell: '>=0'
  transformers: '>=0.2 && <0.4'
  zlib: '>=0.5 && <0.6'
changelog: ''
changelog-type: ''
description: |-
  cabal-dev is a tool for managing development builds of
  Haskell projects. It supports maintaining sandboxed
  cabal-install repositories, and sandboxed ghc package
  databases.

  By default, it uses a cabal-dev directory under
  the current working directory as the sandbox.

  For most packages, just use @cabal-dev@ instead of
  @cabal@, and you will get a sandboxed build that
  will not install anything (even automatically installed
  dependencies) into the user or global ghc package
  databases.

  If your build depends on patched or unreleased libraries,
  you can add them to your sandboxed build environment by
  installing them to the sandbox directly:so

  > cd /path/to/dependency
  > cabal-dev install --sandbox=/path/to/sandbox

  Then build your library/application with the specified
  sandbox.


  Additional documentation can be found in the README.md on
  github:

  <http://github.com/creswick/cabal-dev/blob/master/README.md>
description-type: haddock
hash: eefa71fa1424dfa9e1c451a829d382a3462a96bc95a698fc258c27c4bcb1b953
homepage: http://github.com/creswick/cabal-dev
latest: 0.9.2
license-name: BSD-3-Clause
maintainer: joshhoyt@gmail.com, jtd@galois.com, creswick@galois.com
synopsis: Manage sandboxed Haskell build environments
test-bench-deps: {}
