homepage: https://github.com/andreasabel/cabal-clean
changelog-type: markdown
hash: 739594f001d231654caf98d4b625802011326850ab5192bbfdb0a7787d57cc23
test-bench-deps: {}
maintainer: Andreas Abel <andreas.abel@cse.gu.se>
synopsis: Remove outdated cabal build artefacts from `dist-newstyle`.
changelog: |
  0.1.20210924
  ------------

  Added one-line report on how many directories are (or could be) removed.

  0.1.20210815
  ------------

  Initial release.
basic-deps:
  split: -any
  base: '>=4.9 && <5'
  string-qq: -any
  filepath: -any
  process: -any
  containers: '>=0.5.8'
  pretty-terminal: -any
  mtl: -any
  optparse-applicative: -any
  directory: -any
all-versions:
- 0.1.20210815
- 0.1.20210924
author: Andreas Abel
latest: 0.1.20210924
description-type: markdown
description: "[![Hackage version](https://img.shields.io/hackage/v/cabal-clean.svg?label=Hackage&color=informational)](http://hackage.haskell.org/package/cabal-clean)\n[![cabal-clean
  on Stackage Nightly](https://stackage.org/package/cabal-clean/badge/nightly)](https://stackage.org/nightly/package/cabal-clean)\n[![Stackage
  LTS version](https://www.stackage.org/package/cabal-clean/badge/lts?label=Stackage)](https://www.stackage.org/package/cabal-clean)\n[![Cabal
  build](https://github.com/andreasabel/cabal-clean/workflows/Haskell-CI/badge.svg)](https://github.com/andreasabel/cabal-clean/actions)\n\ncabal-clean
  : Remove superseded artefacts of `cabal v2-build`\n=============================================================\n\nRemoves
  compilation artefacts in `dist-newstyle/build` from older\nversions of the package
  or superseded minor versions of GHC.\n\nFor the impatient\n-----------------\n\n###
  Installation\n\n    cabal install cabal-clean\n\n### Run\n\n    cd $MY_PROJECT\n
  \   cabal-clean\n\nThis lists the build artifacts under `dist-newstyle/build`.\n```diff\n---\t191M\tdist-newstyle/build/x86_64-osx/ghc-7.10.3/$MY_PROJECT-2.9.2\n---\t
  72M\tdist-newstyle/build/x86_64-osx/ghc-8.10.4/$MY_PROJECT-2.9.2\n---\t162M\tdist-newstyle/build/x86_64-osx/ghc-9.0.1/$MY_PROJECT-2.9.2\n+++\t135M\tdist-newstyle/build/x86_64-osx/ghc-7.10.3/$MY_PROJECT-2.9.3\n---\t
  70M\tdist-newstyle/build/x86_64-osx/ghc-8.10.4/$MY_PROJECT-2.9.3\n+++\t145M\tdist-newstyle/build/x86_64-osx/ghc-8.10.5/$MY_PROJECT-2.9.3\n+++\t159M\tdist-newstyle/build/x86_64-osx/ghc-9.0.1/$MY_PROJECT-2.9.3\n```\nThe
  superseded ones, printed in red and prefixed by dashes (`---`),\ncan then be removed
  by:\n\n    cabal-clean --delete\n\nRationale\n---------\n\n`v2-cabal` (the nix-based
  `cabal`) maintains a directory structure for\nlocal builds of the form\n`dist-newstyle/build/$ARCH/$HC/$PACKAGE-$VERSION`
  (plus other stuff\nthat does not take up much disk space).  During active development\nwith
  several `$HC` versions and `$VERSION` bumps for the `$PACKAGE`,\nlots of out-dated
  build artefacts accumulate over time.\n\nA simple way to clean up is removing the
  whole `dist-newstyle` folder,\nbut one might want to keep the build artefacts of
  the most recent\npackage `$VERSION`s of the most recent versions of the Haskell\ncompiler
  (`$HC`).\n\nPhilosophy\n----------\n\n- Go for saving the most disk space with the
  simplest approach, rather\n  than a complete clean-up.  E.g., don't care about outdated
  contents\n  in `dist-newstyle/package-db` as they take little space.\n\n- Keep only
  the most recent `$VERSION` of the package.\n\n- Keep only the most recent major
  versions of `$HC`.\n\n- Assume a monopoly of GHC, ignoring other Haskell compilers,
  so only\n  treat `$HC`s of the form `ghc-$GHCVER`.\n\n- Work autonomously, ignoring
  `cabal` files.\n  This saves us parsing various home-grown `cabal` file formats.\n
  \ The latter could be easy using the `Cabal` package,\n  but this package is not
  very stable,\n  and we shy the maintenance effort of depending on `Cabal`.\n\n-
  Dry-run is the default, giving the user opportunity to review the clean-up plan.\n\nFunctionality\n-------------\n\n-
  Read the contents of `dist-newstyle/build`,\n  organizing them into a tree according
  to the pattern\n  `$ARCH/ghc-$GHCVER/$PACKAGE-$VERSION`.\n\n- Display the outdated
  versions.\n\n  Try to get the disk usage with `du -h` and display it.\n  (I could
  not find a Haskell library that gets the disk usage OS-agnostically.)\n\n- With
  option `--delete` actually remove the respective folders.\n\nExamples\n--------\n\nList
  build artifacts of current project,\nmarking superseded ones that can be deleded:\n\n
  \   cabal-clean\n\nActually delete superseded builds:\n\n    cabal-clean --delete\n\nDelete
  superseded builds without changing to directory:\n\n    cabal-clean --delete path/to/my/project/dist-newstyle\n\nDelete
  superseded builds in many projects:\n\n    find . -name \"dist-newstyle\" -exec
  cabal-clean --delete {} \\;\n\nGet help:\n\n    cabal-clean --help\n\nRelated\n-------\n\n`cabal
  v2-clean` (as of 2021-08-16)\n\n  - Removes *all* build artefacts.\n  - Does not
  have a `--dry-run` preview.\n"
license-name: BSD-3-Clause
