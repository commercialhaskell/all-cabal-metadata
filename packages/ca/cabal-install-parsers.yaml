all-versions:
- '0.1'
- '0.2'
- '0.3'
- 0.3.0.1
- '0.4'
- 0.4.1
- 0.4.2
- 0.4.3
- 0.4.4
- 0.4.5
- '0.5'
- '0.6'
- 0.6.1
- 0.6.1.1
author: Herbert Valerio Riedel, Oleg Grenrus
basic-deps:
  Cabal-syntax: ^>=3.10.1.0
  aeson: ^>=2.1.0.0 || ^>=2.2.0.0
  base: '>=4.10 && <4.20'
  base16-bytestring: ^>=1.0.0.0
  binary: ^>=0.8.5
  binary-instances: ^>=1
  bytestring: ^>=0.10.8.1 || ^>=0.11.1.0 || ^>=0.12.0.2
  containers: ^>=0.5.7.1 || ^>=0.6.0.1
  cryptohash-sha256: ^>=0.11.101.0
  deepseq: ^>=1.4.2.0 || ^>=1.5.0.0
  directory: ^>=1.3.0.0
  filepath: ^>=1.4.1.1
  lukko: ^>=0.1.1
  network-uri: ^>=2.6.1.0
  parsec: ^>=3.1.13.0
  pretty: ^>=1.1.3.3
  tar: ^>=0.5.1.1 || ^>=0.6.0.0
  text: ^>=1.2.3.0 || ^>=2.0.1 || ^>=2.1
  time: ^>=1.8.0.2 || ^>=1.9.3 || ^>=1.11.1.1 || ^>=1.12.2
  transformers: ^>=0.5.2.0 || ^>=0.6.1.0
changelog: |
  ## 0.6.1

  - Use `Cabal-syntax-3.10`

  ## 0.6

  - Add sizes of tarball and cabal files to `Cabal.Index.ReleaseInfo` data structure.

  ## 0.5

  - Move to use `Cabal-syntax` package
    It's possible to have a build-plan with (old) `Cabal`,
    and new `cabal-install` syntax, which may cause
    `...Version` is not `...Version` like errors.

  ## 0.4.5

  - Resolve `.tar.gz` package files to `file:` URI-locations

  ## 0.4.4

  - Try to fix glob behavior on Windows
  - Add `Show (Project ...)` instance

  ## 0.4.3

  - Use `Cabal-3.6`
  - `resolveConfig` respects `CABAL_DIR` environment variable

  ## 0.4.2

  - `findConfig` respects `CABAL_DIR` environment variable

  ## 0.4.1

  - Use `Cabal-3.4`

  ## 0.4

  - Rewrite `Cabal.Index` module
    - Added `riTarOffset` field to `ReleaseInfo`
    - Make `SHA256` be backed by four `Word64`.
      Hackage cache file size drops from 11673149 to 4423787 bytes.

  - Update dependencies

  ## 0.3

  - Require `Cabal-3.2`.
  - Rename `prjOrigFields` to `prjOtherFields` to reflect its intended purpose:
    contain all fields of a `cabal.project` file that are not already covered by
    a different field of `Project`, such as `prjPackages`, `prjOptPackages`,
    `prjSourceRepos`, etc. The semantics of `parseProject` have also been changed
    accordingly, so `Project`s produced by `parseProject` will no longer have
    `prjOtherFields` entries that overlap with other `Project` fields.
  - `ParseError` from `Cabal.Parse` now parameterizes the list type used in
    `peErrors`. Most of the time, this will be instantiated to `NonEmpty`.
  - Add `NFData` instances

  ## 0.2

  Add `repoSecure` field to `Repo` in `Cabal.Config`.
changelog-type: markdown
description: |-
  @cabal-install-parsers@ provides parsers for @cabal-install@ files:
  @cabal.project@ ("Cabal.Project"),
  @cabal.config@ ("Cabal.Config"),
  @01-index.tar@ ("Cabal.Index");
  as well as some other utilities.

  The feature set is mainly motivated by the needs of @haskell-ci@ package.
  The parsed data is not complete, functionality is added on demand.
description-type: haddock
hash: 2a7541f7acb119be698167e3c339f799d11620bf582ea9f12ca7c8f0e869e446
homepage: https://haskell-ci.rtfd.org/
latest: 0.6.1.1
license-name: GPL-2.0-or-later AND BSD-3-Clause
maintainer: hvr@gnu.org, oleg.grenrus@iki.fi
synopsis: Utilities to work with cabal-install files
test-bench-deps:
  Cabal-syntax: '>=0'
  ansi-terminal: '>=1.0 && <1.1'
  base: '>=0'
  base16-bytestring: '>=0'
  bytestring: '>=0'
  cabal-install-parsers: '>=0'
  containers: '>=0'
  criterion: ^>=1.6.0.0
  directory: '>=0'
  filepath: '>=0'
  pretty: '>=0'
  tar: '>=0'
  tasty: '>=1.4 && <1.6'
  tasty-golden: ^>=2.3.1.1
  tasty-hunit: ^>=0.10.0.2
  tree-diff: '>=0.2 && <0.4'
