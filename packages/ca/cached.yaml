all-versions:
- 0.1.0.0
author: Guillaume ChÃ©rel
basic-deps:
  base: '>=4.7 && <5'
  containers: '>=0.5.10 && <0.8'
  protolude: '>=0.2.2 && <0.4'
  shake: '>=0.16.4 && <0.20'
  text: '>=1.2.3 && <1.3 || >=2.0 && <2.2'
changelog: |
  # Changelog for cached

  ## Unreleased changes
changelog-type: markdown
description: |
  # cached

  Cache values to disk.

  The module `Data.Cached` lets you cache values to disk to avoid re-running
  (potentially long) computations between consecutive executions of your
  program. Cached values are recomputed only when needed, i.e. when other
  cached values on which they depend change. Independent computations are
  run in parallel. It offers convenient fonctions for caching to text files,
  but caching and uncaching using arbitrary IO actions is also possible.

  The module was motivated by writing scientific data flows, simulation
  experiments or data science scripts. Those often involve long
  computations and create "flows" where the output of some computation
  are the inputs of others, until final results are produced (values,
  figures, statistical tests, etc.).

  See the module Data.Cached documentation:
  - On hackage: <https://hackage.haskell.org/package/cached/docs/Data-Cached.html>
  - In the source: [./src/Data/Cached.hs](./src/Data/Cached.hs)
description-type: markdown
hash: f87efcbf4086ec5ff611b366a54b7fa950fd4a48ff410c37bbf31a91edd80a1e
homepage: https://github.com/guillaumecherel/cached#readme
latest: 0.1.0.0
license-name: BSD-3-Clause
maintainer: guillaume.cherel@iscpif.fr
synopsis: Cache values to disk.
test-bench-deps:
  QuickCheck: '>=2.11.3 && <2.15'
  base: '>=0'
  cached: '>=0'
  containers: '>=0'
  directory: '>=1.3.1 && <1.4'
  doctest: '>=0.16.0 && <0.23'
  filepath: '>=1.4.2 && <1.5'
  protolude: '>=0'
  quickcheck-assertions: '>=0.3.0 && <0.4'
  shake: '>=0'
  text: '>=0'
