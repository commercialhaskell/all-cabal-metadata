all-versions:
- 0.1.0.0
- 0.1.1.0
- 0.1.2.0
- 0.2.0.0
- 0.3.0.0
- 0.3.1.0
- 0.3.2.0
author: Kazuki Okamoto (岡本和樹)
basic-deps:
  base: '>=4 && <5'
  mtl: '>=0'
  transformers: '>=0'
changelog: |
  # Revision history for either-result

  ## 0.3.2.0

  *2025.08.18*

  - add COMPLETE Pragma for `Result` pattern
  - add `mapError`
  - make `Control.Monad.Result` re-export `Control.Monad.Error.Class`

  ## 0.3.1.0

  *2020.08.16*

  - Add mtl instances

  ## 0.3.0.0

  *2020.08.05*

  ### Breaking changes

  - Change `Either String` to `Result` for some monad transformer functions' types
    - `Control.Monad.Result.liftEither` → `Control.Monad.Result.liftResult`
    - `Control.Monad.Trans.Result.ResultT`
    - `Control.Monad.Trans.Result.runResultT`
    - `Control.Monad.Trans.Result.mapResultT`

  ## 0.2.0.0

  *2020.08.04*

  ### Breaking changes

  - Change `Data.Either.Result.Result` from a `newtype` to a type synonym.
    - Get `Result` data constructor not to be exposed
      - Use `Result` pattern instead
      - Or use `Control.Monad.Trans.Except.Result.ResultT` data constructor instead

  ### Other changes

  - Add monad transformers

  ## 0.1.2.0

  *2020.07.31*

  - Add `toMonadFail`.

  ## 0.1.1.0

  *2020.07.28*

  - Expose a value constructor and a field for coercion.

  ## 0.1.0.0

  *2020.07.26*

  - Release.
changelog-type: markdown
description: |
  # either-result

  [![Hackage](https://img.shields.io/badge/Hackage-5D4F85?logo=haskell)](http://hackage.haskell.org/package/either-result) [![GitHub Actions: main](https://github.com/kakkun61/either-result/workflows/main/badge.svg)](https://github.com/kakkun61/either-result/actions?query=workflow%3Amain) [![Join the chat at https://gitter.im/either-result/community](https://badges.gitter.im/either-result/community.svg)](https://gitter.im/either-result/community?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge) [![Sponsor](https://img.shields.io/badge/Sponsor-%E2%9D%A4-red?logo=GitHub)](https://github.com/sponsors/kakkun61)

  The simplest `MonadFail` instance. `Result a` is a wrapper of `Either String a`, but `Result` is an instance of `MonadFail`.

  [Article](https://dev.to/kakkun61/the-simplest-monadfail-instance-2i4e).
description-type: markdown
hash: 377562ecfe4ef6097d63f4f5107e177b62a61566026c84d9d1434af499dc1647
homepage: https://github.com/kakkun61/either-result
latest: 0.3.2.0
license-name: Apache-2.0
maintainer: kazuki.okamoto@kakkun61.com
synopsis: The simplest ‘MonadFail’ instance
test-bench-deps:
  base: '>=4 && <5'
  doctest: '>=0'
  either-result: '>=0'
  hspec: '>=0'
  transformers: '>=0'
