all-versions:
- 1.0.1.3
- 1.0.2.2
- 1.0.2.3
- 1.0.2.4
- 1.0.2.6
- 1.0.3.0
- 1.0.3.1
- 1.0.3.2
- 1.0.3.3
- 1.0.3.4
author: Luis Cabellos
basic-deps:
  base: '>=4.0 && <5'
  bytestring: '>=0'
  mtl: '>=2'
changelog: ''
changelog-type: ''
description: "#+STARTUP: showall\n* OpenCL\n  A high-level OpenCL library for Haskell.\n\n
  \ Based on the [[http://hackage.haskell.org/package/OpenCLRaw][OpenCLRaw]] package
  by J.R. Heard.\n\n  By Luis Cabellos at [[http://www.ifca.es/en/home2][IFCA]]\n\n**
  Installation\n   *Requirements:* [[http://hackage.haskell.org/package/c2hs][c2hs]]
  must be installed. (Try ~cabal install c2hs~.)\n\n  With the usual commands to install
  as a user library:\n  \n  : cabal install --user\n\n  Programs using the library
  must link against OpenCL; for example, by\n  passing ~-lOpenCL~ to GHC.\n\n*** About
  versioning\n\n    OpenCL module uses Package Version Policy:\n\n    http://www.haskell.org/haskellwiki/Package_versioning_policy\n\n
  \   But It differs in the A version number. It use OpenCL API version as A\n    number,
  so 1.0.3.0 correspond to A=1.0=OpenCL API version 1.0, B=3 and\n    C=0. The major
  version number is 1.0.3\n\n** Optional Requisites\n   Some OpenCL libraries require
  additional NUMA libraries. For instance,\n   on Ubuntu 11.04:\n\n   : sudo apt-get
  install libnuma1 libnuma-dev\n\n** Example\n   There is an simple working example
  in the examples folder. You can create an\n   executable using:\n\n   : ghc --make
  examples/example01.hs\n\n** Using ghci\n\n   It's possible to use GHCi with OpenCL,
  e.g.:\n\n   : ghci examples/example01.hs\n"
description-type: text
hash: ef90f955632749353251887ce66357c5ed8e98e8b437ff91ce406ae9187f3953
homepage: https://github.com/IFCA/opencl
latest: 1.0.3.4
license-name: BSD-3-Clause
maintainer: Luis Cabellos
synopsis: Haskell high-level wrapper for OpenCL
test-bench-deps:
  OpenCL: '>=0'
  QuickCheck: '>=2.4 && <2.5'
  base: '>=4.0 && <5'
