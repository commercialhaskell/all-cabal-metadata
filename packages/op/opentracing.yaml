homepage: https://github.com/kim/opentracing
changelog-type: markdown
hash: 47f8e1fedd9568cd9ea898333f75fde1ed4a0e0ce9793f243b03084e0a2569cb
test-bench-deps: {}
maintainer: Kim Altintop <kim.altintop+opentracing@gmail.com>
synopsis: OpenTracing for Haskell
changelog: |
  * 0.1.0.0 (2012-04-20)

  After years of friendly reminders, a zero version gets finally released =]
basic-deps:
  bytestring: '>=0.10'
  mwc-random: '>=0.13'
  case-insensitive: '>=1.2'
  stm: '>=2.4'
  base: '>=4.9 && <4.16'
  time: '>=1.6'
  base64-bytestring: '>=1.0'
  unordered-containers: '>=0.2'
  text: '>=1.2'
  safe-exceptions: '>=0.1'
  clock: '>=0.7'
  network: '>=2.8'
  async: '>=2.1'
  semigroups: '>=0.18'
  containers: '>=0.5'
  uri-bytestring: '>=0.2'
  vinyl: '>=0.9'
  lens: '>=4.19'
  mtl: '>=2.2'
  iproute: '>=1.7'
  transformers: '>=0.5'
  http-types: '>=0.9'
  aeson: '>=1.1'
all-versions:
- 0.1.0.0
author: Kim Altintop
latest: 0.1.0.0
description-type: markdown
description: |
  ## OpenTracing

  The [OpenTracing spec](https://github.com/opentracing/specification/blob/master/specification.md) defines a platform agnostic approach for distributed tracing. Distributed
  tracing gives us insights into how complex programs spread across multiple processes are
  performing together.

  This package provides a core implementation of the OpenTracing spec. It includes
  functionality to

    * Create `Span`s describing application code executions, including `Tag`s and
      `LogRecord`s

    * Serialize and deserialize `SpanContext`s across process boundaries

    * Batch and log `FinishedSpan`s

  It does not provide any functionality for consuming `Span`s. There are platform specific
  backends (CloudTrace, Zipkin, Jaeger, etc) that are provided in other packages.
license-name: Apache-2.0
