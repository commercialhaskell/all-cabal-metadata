homepage: https://github.com/kim/opentracing
changelog-type: markdown
hash: 0518fa7f3324bb26ef8879cf2db43265cc8aba68f23d6bc680cc9176de729bd9
test-bench-deps: {}
maintainer: Kim Altintop <kim@eagain.io>
synopsis: OpenTracing for Haskell
changelog: |
  * 0.3.0 (2023-09-28)

    - GHC 8.x is no longer tested, the minimum version is 9.2.8
    - Various fixes the Jaeger backend
    - Fix Zipkin backend to use POST (#49)
    - Use a bounded queue for the batch reporter (#46)

    This release is considered _breaking_ due to #46, and (potential)
    incompatibility with older GHCs.

  * 0.2.2 (2022-05-09)

    Support for base 4.16 / GHC 9.2

    GHC versions below 8.10 are no longer tested in CI.

  * opentracing/0.2.1 (2021-11-08)

    Support aeson 2.x (#39)

  * 0.2.0 (2021-06-03)

    - Drop support for GHC 8.0 (#35)
    - Add support for GHC 9.0 (#36)
    - Replace the unmaintained `thrift` package with `pinch` (#34)
    - wai: Better default operation name, and allow customising it (#33, #37)

    The major version is bumped because the packages won't compile with GHC 8.0
    anymore.

  * 0.1.0.0 (2021-04-20)

    After years of friendly reminders, a zero version gets finally released =]
basic-deps:
  bytestring: '>=0.10'
  mwc-random: '>=0.13'
  case-insensitive: '>=1.2'
  stm: '>=2.4'
  base: '>=4.9 && <4.19'
  time: '>=1.6'
  base64-bytestring: '>=1.0'
  unordered-containers: '>=0.2'
  text: '>=1.2'
  safe-exceptions: '>=0.1'
  clock: '>=0.7'
  network: '>=2.8'
  async: '>=2.1'
  semigroups: '>=0.18'
  containers: '>=0.5'
  uri-bytestring: '>=0.2'
  vinyl: '>=0.9'
  lens: '>=4.19'
  mtl: '>=2.2'
  iproute: '>=1.7'
  transformers: '>=0.5'
  http-types: '>=0.9'
  aeson: '>=1.1'
all-versions:
- 0.1.0.0
- 0.2.0
- 0.2.1
- 0.2.2
- 0.3.0
author: Kim Altintop
latest: 0.3.0
description-type: markdown
description: |
  ## OpenTracing

  The [OpenTracing spec](https://github.com/opentracing/specification/blob/master/specification.md) defines a platform agnostic approach for distributed tracing. Distributed
  tracing gives us insights into how complex programs spread across multiple processes are
  performing together.

  This package provides a core implementation of the OpenTracing spec. It includes
  functionality to

    * Create `Span`s describing application code executions, including `Tag`s and
      `LogRecord`s

    * Serialize and deserialize `SpanContext`s across process boundaries

    * Batch and log `FinishedSpan`s

  It does not provide any functionality for consuming `Span`s. There are platform specific
  backends (CloudTrace, Zipkin, Jaeger, etc) that are provided in other packages.
license-name: Apache-2.0
