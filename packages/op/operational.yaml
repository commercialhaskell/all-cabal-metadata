all-versions:
- 0.1.0.0
- 0.2.0.0
- 0.2.0.1
- 0.2.0.2
- 0.2.0.3
- 0.2.1.0
- 0.2.1.1
- 0.2.1.2
- 0.2.1.3
- 0.2.2.0
- 0.2.2.1
- 0.2.3.2
- 0.2.3.3
- 0.2.3.4
- 0.2.3.5
- 0.2.4.0
- 0.2.4.1
- 0.2.4.2
author: Heinrich Apfelmus
basic-deps:
  base: '>=4.8 && <5'
  mtl: '>=1.1 && <2.4'
  operational: '>=0'
  random: '>=1 && <2'
  transformers: '>=0.5.6 && <0.7'
changelog: |
  Changelog for the `operational` package
  ---------------------------------------

  **0.2.4.2** -- Maintenance release.

  * Compatibility with `mtl-2.3.1`

  **0.2.4.1** -- Maintenance release.

  * Restrict dependencies to ensure GHC >= 7.10.

  **0.2.4.0** -- Feature release.

  * Update to build with GHC 9.0.1.
  * Add utility functions `interpretWithMonadT`, `unviewT` and `mapInstr`
  * Add utility `Functor`, `Applicative`, and `Monad` instances for `ProgramViewT` type.

  **0.2.3.5** -- Maintenance release.

  * Update references to other packages.
  * Modernize `.cabal` file.

  **0.2.3.4** -- Maintenance release.

  * Restrict dependencies to ensure GHC >= 7.2.

  **0.2.3.3** -- Maintenance release.

  * Minor fixes to documentation and examples

  **0.2.3.2** -- Maintenance release.

  * Bump `mtl` dependency to allow 2.3

  **0.2.3.1** -- Maintenance release.

  * Bump `mtl` dependency to allow 2.2

  **0.2.3.0** -- Maintenance release.

  * added instance for `MonadReader` class
  * clean up documentation

  **0.2.2.0** -- Feature release.

  * add utility function `interpretWithMonad`

  **0.2.1.0** -- Maintenance release.

  * minor change: eta-reduce `Program` and `ProgramView` type synonyms

  **0.2.0.3** -- Maintenance release.

  * moved project repository to github

  **0.2.0.0** -- Feature release.

  * changed name of view type to `ProgramView`
  * added instances for  mtl  classes
  * new function `liftProgram` to embed `Program` in `ProgramT`
  * new example `TicTacToe.hs`
  * various documentation updates

  **0.1.0.0**

  * initial release
changelog-type: markdown
description: |-
  This library makes it easy to implement monads with tricky control flow.

  This is useful for: writing web applications in a sequential style, programming games with a uniform interface for human and AI players and easy replay capababilities, implementing fast parser monads, designing monadic DSLs, etc.

  Related packages:

  * MonadPrompt — <http://hackage.haskell.org/package/MonadPrompt>

  * free — <http://hackage.haskell.org/package/free>

  * free-operational — <http://hackage.haskell.org/package/free-operational>
description-type: haddock
hash: 51e95653245ac4eae9637b92ca0ecb70e9033ef5e9d1879145ce5c19aae4b841
homepage: https://github.com/HeinrichApfelmus/operational
latest: 0.2.4.2
license-name: BSD-3-Clause
maintainer: Heinrich Apfelmus <apfelmus quantentunnel de>
synopsis: |-
  Implementation of difficult monads made easy
  with operational semantics.
test-bench-deps: {}
