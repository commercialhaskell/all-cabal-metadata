all-versions:
- '1.4'
- 1.5.1.1
author: John MacFarlane <jgm@berkeley.edu>
basic-deps:
  HTTP: '>=4000.0.5'
  base: '>=4 && <5'
  bytestring: '>=0.9'
  containers: '>=0.1'
  directory: '>=1'
  extensible-exceptions: '>=0'
  filepath: '>=1.1'
  mtl: '>=1.1'
  network: '>=2'
  old-time: '>=1'
  parsec: '>=2.1'
  pretty: '>=1'
  process: '>=1'
  syb: '>=0'
  texmath: '>=0'
  utf8-string: '>=0.3'
  xhtml: '>=3000.0'
  xml: '>=1.3.5 && <1.4'
  zip-archive: '>=0.1.1.4'
changelog: "pandoc (1.5.1.1)\n\n  [ John MacFarlane ]\n\n * Fixed uniqueIdent in Shared
  so that header identifiers work as\n   advertized in the README and are are valid
  XHTML names.\n\npandoc (1.5.1)\n\n  [ John MacFarlane ]\n\n  * Fixed treatment of
  unicode characters in URIs.\n    + Shared now exports escapeURI and unescapeURI.
  These handle\n      UTF8 encoding and decoding as well as URI escaping/unescaping.\n
  \   + Shared: uri and emailAddress now return a pair of the original\n      parsed
  text and the escaped URI (in the latter case, with\n      the mailto: prefix).\n
  \   + HTML reader: unsanitaryURI has been modified to allow unicode\n\t\t  high
  characters in a URI.\n    + Readers:  All link and image URIs are now escaped using\n\t\t
  \ escapeURI.\n    + Markdown and RST writers:  unescapeURI is used so that URIs\n
  \     in these formats are human-readable.\n\n  * Setup.hs: Don't assume that the
  build directory is \"dist\".\n    Instead, get it from localBuildInfo.\n\n  * OpenDocument
  writer: Use a Map for stTextStyleAttr.\n    This avoids duplicates (and invalid
  xml). Resolves Issue #222.\n\npandoc (1.5.0.1)\n\n  [ John MacFarlane ]\n\n  * HTML
  writer: Fixed error in math writer (with MathML option)\n    that caused an infinite
  loop for unparsable MathML.\n\npandoc (1.5)\n\n  [ John MacFarlane ]\n\n  * Added
  --mathml option.  When this is selected, pandoc will convert\n    TeX math into
  MathML.\n    + Added data/MathMLinHTML.js, which is included when no URL is\n      provided
  for --mathml.  This allows MathML to be displayed (in\n      better browsers) as
  text/html.\n    + Removed Text.Pandoc.LaTeXMathML.  The module was no longer\n      necessary;
  it was replaced by two lines in pandoc.hs.\n    + Replaced LaTeXMathML.js.commend
  and LaTeXMathML.js.packed with a\n      single combined file, LaTeXMathML.js.\n\n
  \ * Added --data-dir option.\n    This specifies a user data directory. If not specified,
  will default\n    to ~/.pandoc on unix or Application Data\\pandoc on Windows.\n
  \   Files placed in the user data directory will override system default\n    data
  files.\n\n  * Added Maybe datadir parameter to readDataFile, saveOpenDocumentAsODT,\n
  \   latexMathMLScript, s5HeaderIncludes, and getDefaultTemplate. If\n\t  Nothing,
  no user directory is searched for an override.\n\n  * Added 'plain' output format.
  This is similar to markdown, but\n    removes links, pictures, inline formatting,
  and most anything that\n    looks even vaguely markupish. The function writePlain
  is exported by\n    Text.Pandoc.Writers.Markdown, with which it shares most of its
  code.\n\n  * Allow multi-line titles and authors in meta block.\n    Titles may
  span multiple lines, provided continuation lines\n    begin with a space character.
  \ Separate authors may be put on\n    multiple lines, provided each line after the
  first begins with\n    a space character.  Each author must fit on one line. Multiple\n
  \   authors on a single line may still be separated by a semicolon.\n    Based on
  a patch by Justin Bogner.\n\n  * When given an absolute URI as parameter, pandoc
  will try to fetch\n    the content via HTTP.  So you can do:\n    'pandoc -r html
  -w markdown http://www.fsf.org'\n    Adds dependency on HTTP.\n\n  * Made HTML reader
  much more forgiving.\n    + Incorporated idea (from HXT) that an element can be
  closed\n      by an open tag for another element.\n    + Javascript is partially
  parsed to make sure that a <script>\n      section is not closed by a </script>
  in a comment or string.\n    + More lenient non-quoted attribute values.\n      Now
  we accept anything but a space character, quote, or <>.\n      This helps in parsing
  e.g. www.google.com!\n    + Bare & signs are now parsed as a string.  This is a
  common\n      HTML mistake.\n    + Skip a bare < in malformed HTML.\n\n  * Removed
  html2markdown and hsmarkdown.\n    + html2markdown is no longer needed, since you
  can now pass URI\n      arguments to pandoc and directly convert web pages. (Note,\n
  \     however, that pandoc assumes the pages are UTF8. html2markdown\n      made
  an attempt to guess the encoding and convert them.)\n    + hsmarkdown is pointless
  -- a large executable that could be\n      replaced by 'pandoc --strict'.\n\n  *
  In most writers, an image in a paragraph by itself is now rendered\n    as a figure,
  with the alt text as the caption. (Texinfo, HTML, RST,\n    MediaWiki, Docbook,
  LaTeX, ConTeXt, HTML.) Other images are\n    rendered inline.\n\n  * Depend on extensible-exceptions.
  \ This allows pandoc to be compiled\n    on GHC 6.8.\n\n  * Added --base-header-level
  option.  For example, --base-header-level=2\n    will change level 1 headers to
  level 2, level 2 to level 3, etc.\n    Closes Debian #563416.\n\n  * Incomplete
  support for RST tables (simple and grid).\n    Thanks to Eric Kow. Colspans and
  rowspans not yet supported.\n\n  * Added accessors (docTitle, docAuthors, docDate)
  to Meta type.\n\n  * MediaWiki writer:  format links with relative URLs as wikilinks.\n
  \   The new rule:  If the link target is an absolute URL, an external\n    link
  is created. Otherwise, a wikilink is created.\n\n  * Text.Pandoc.Shared: Export
  uniqueIdent, and don't allow tilde in\n    identifier.  Note:  This may break links
  to sections that involve\n    tildes.\n\n  * Markdown(+lhs) reader:  handle \"inverse
  bird tracks.\"\n    Inverse bird tracks (<) are used for haskell example code that
  is not\n    part of the literate Haskell program.  Resolves Issue #211.\n\n  * LaTeX
  reader:\n    + Recognize '\\ ' (interword space).\n    + Recognize nonbreaking space
  '~'.\n    + Ignore \\section, \\pdfannot, \\pdfstringdef.  Ignore alt title in\n
  \     section headers.  Don't treat \\section as inline LaTeX.\n      Resolves Issue
  #202.\n    + LaTeX reader:  allow any special character to be escaped.\n      Resolves
  Issue #221.\n    + LaTeX reader: treat \\paragraph and \\subparagraph as level 4,
  5\n      headers.  Resolves Issue #207.\n\n  * Use template variables for include-before/after.\n
  \   + These options now imply -s; previously they worked also in fragment\n      mode.\n
  \   + Users can now adjust position of include-before and include-after\n      text
  in the templates.\n    + Default position of include-before moved back (as it was
  before 1.4)\n      before table of contents.\n    + Resolves Issue #217.\n\n  *
  Don't print an empty table header: (all writers).\n    Resolves Issue #210.\n\n
  \ * HTML, Docbook writer: Use tbody, thead, and cols in tables.\n\n  * HTML writer:
  Don't include TOC div if table of contents is empty.\n\n  * Markdown writer:  Fixed
  citations.\n    Previously the markdown writer printed raw citation codes, e.g.\n
  \   [geach1970], rather than the expanded citations provided by\n    citeproc, e.g.
  (Geach 1970). Now it prints the expanded citations.\n    This means that the document
  produced can be processed as a markdown\n    document without citeproc. Thanks to
  dsanson for reporting, and\n    Andrea Rossato for the patch.\n\n  * Improved and
  simplified title block in context template.\n    Previously it caused an error if
  there was no title.\n    This method should also be easier for users to customize.\n\n
  \ * Markdown reader:\n    + Treat p., pp., sec., ch., as abbreviations in smart
  mode.\n    + Disallow blank lines in inline code span.\n    + Allow footnotes to
  be indented < 4 spaces.\n      This fixes a regression.  A test case has been added.\n
  \   + Escape spaces in URLs as %20. Previously they were incorrectly\n\t\t  escaped
  as +, which is appropriate only for the query part of\n\t\t\ta URL. Resolves Issue
  #220.\n    + Require two spaces after capital letter + period for list item.\n      Otherwise
  \"E. coli\" starts a list. This might change the semantics\n      of some existing
  documents, since previously the two-space\n      requirement was only enforced when
  the second word started\n      with a capital letter. But it is consistent with
  the existing\n      documentation and follows the principle of least surprise.\n
  \     Resolves Issue #212.\n\n  * LaTeX template: redefine labelwidth when using
  enumerate package.\n    Otherwise the list labels (numbers) often extend past the
  left\n    margin, which looks bad.\n\n  * Mediawiki writer: Don't print a \"== Notes
  ==\" header before\n    references.  This is too English-centric. Writers can provide
  their\n    own header at the end of the document.\n\n  * Promoted mediawiki headers.
  \ '= head =' is now level 1, '== head =='\n    level 2, etc.  This seems to be correct;
  it's only by convention\n    that wikipedia articles have level 2 headers at most.\n
  \   Patch due to Eric Kow.\n\n  * RunTests.hs: Set LANG to a UTF-8 locale. Use 'pandoc
  --data-dir=' so\n    data files don't need to have been installed. This removes
  the need to\n    set HOME.\n\n  * HTML reader:\n    + Handle spaces before <html>.
  \ Resolves Issue #216.\n    + Be forgiving in parsing a bare list within a list.\n
  \     The following is not valid xhtml, but the intent is clear:\n      <ol>\n      <li>one</li>\n
  \     <ol><li>sub</li></ol>\n      <li>two</li>\n      </ol>\n      We'll treat
  the <ol> as if it's in a <li>.  Resolves Issue #215.\n\n  * Updated INSTALL instructions.
  \ cabal method is now promoted.\n\n  * Updated markdown2pdf man page. It no longer
  says all pandoc options\n    are accepted.\n\n  * README/man pages: Removed advice
  to pipe through tidy before HTML\n    reader.  This is obsolete, now that we have
  a forgiving HTML parser.\n\n  * LaTeX writer: set numbersections template variable,
  so\n    the section numbering options work again.\n\n  * Removed obsolete Makefile.\n\n
  \ * Website: renamed index.txt.in -> index.txt.\n\n  * New batch file to make-windows-installer.\n
  \   + Removed old Makefile.windows\n    + Added make-windows-installer.bat\n    +
  Modified default installer name in pandoc-setup.iss\n\n  * Removed freebsd and macports
  directories.\n    They are no longer up to date.\n\n  * Setup.hs:\n    + Made man
  page building sensitive to build verbosity.\n    + Improved detection of highlighting
  support in test hook.\n    + Install wrapper scripts into cabal bin directory.\n
  \   + Also simplified installManpages.\n    + Setup.hs: install manpages to mandir.
  \ Code borrowed from darcs.\n\n  * Changed default of writerXeTeX to False.\n\n
  \ * HTML writer: don't include empty UL if --toc but no sections.\n    Resolves
  Issue #199.\n\n  * LaTeX writer:\n\t  + If book, report, or memoir documentclass,
  use \\chapter{}\n      for first-level headers. Otherwise use \\section{}.\n    +
  Removed stLink, link template variable. Reason: we now always\n      include hyperref
  in the template.\n\n  * Latex template:\n\t  + Only show \\author if there are some.\n
  \   + Always include hyperref package. It is used not just for links but\n      for
  toc, section heading bookmarks, footnotes, etc. Also added\n      unicode=true on
  hyperref options.\n\n  * markdown2pdf: always do at least two runs. hyperref bookmarks\n
  \   require this.\n\n  * cabal file: Removed unneeded dependency on template-haskell.\n\n
  \ * Windows installer - fixed bug in data file locations.\n    Resolves Issue #197.\n\n
  \ * Deprecated --custom-header in documentation.\n    Removed old \"Custom Headers\"
  section in README.\n\npandoc (1.4)\n\n  [ John MacFarlane ]\n\n  * Pandoc will now
  compile with either GHC 6.10 or 6.12.\n    + Don't use System.IO.UTF8 when compiling
  with 6.12\n    + Use -fno-warn-unused-do-bind option when compiling with 6.12\n\n
  \ * Replaced old headers with templates.  Now users have much more\n    control
  over the way documents appear in --standalone mode,\n    and writer code is simplified.
  \ Resolves Issues #59, 147.\n    Every effort has been made to retain backwards
  compatibilty.\n    So, the --custom-header option should still work as before.\n\n
  \   + Added Text.Pandoc.Templates.  This provides functions for\n      retrieving
  default templates and for rendering templates.\n    + System templates (in the pandoc
  data directory) can be\n      overridden by user templates in $HOME/.pandoc/templates.\n
  \   + Removed Text.Pandoc.DefaultHeaders.\n    + Removed data/headers directory.\n
  \   + Added templates directory.\n    + Added writerTemplate and writerVariables
  fields to WriterOptions.\n    + Removed writerTitlePrefix, writerHeader fields from
  WriterOptions.\n    + Changed --print-default-header to --print-default-template.\n
  \   + Added --template option.\n    + Added -V/--variable option to set custom template
  variables.\n\n  * Pandoc no longer requires Template Haskell.  Resolves Issue #186.\n\n
  \   + Removed need for TH in ODT module. Instead get reference.odt from\n\t  data
  file at run time.\n    + Removed TH dependency from S5 module. S5 module now exports\n
  \     s5HeaderIncludes, which pandoc.hs includes if writer is s5 and\n      standalone.\n
  \   + Refactored LaTeXMathML not to use TH.\n\n  * Meta is now Meta [Inline] [[Inline]]
  [Inline] rather than\n    Meta [Inline] [String] String. Authors and date in Meta
  are now lists\n    of Inline elements rather than raw strings. This means that they
  can\n    be formatted and can include footnotes. NOTE: This may be a breaking\n
  \   change for those using pandoc as a library.\n\n  * Added readDataFile to Text.Pandoc.Shared.
  \ This retrieves\n    a data file from the user pandoc data directory (~/.pandoc\n
  \   on unix), or, if not found there, from the system data\n    directory ($CABALDIR/shared/pandoc-VERSION/).
  All data\n    files, including templates, LaTeXMathML.js, s5 styles,\n\tand reference.odt,
  can be overridden by the user.\n\n  * s5 files moved from data/ui/default to s5/default.\n\n
  \ * Use unicode instead of entities in HTML and XML output.  Resolves\n    Issue
  #163.\n\n  * Prettier HTML footnote references:  put anchor inside sup,\n    instead
  of other way.  Resolves Issue #191. Thanks to\n    infinity0x.\n\n  * Added --xetex
  option to pandoc and markdown2pdf.\n    If --xetex is specified, pandoc produces
  latex suitable for\n    processing by xelatex, and markdown2pdf uses xelatex to
  create\n    the PDF. Resolves Issue #185.\n\n  * RTF writer: multiple authors now
  occupy multiple paragraphs rather\n    than using a line break.\n\n  * Man writer:
  now the \"--after-body\" will come after the \"AUTHORS\"\n    section, whereas before
  it would come before it.  This is a\n    slight break from backwards compatibility.\n\n
  \ * Added --reference-odt option, so users may customize the styles\n    used in
  pandoc-generated ODT files.  Users may also place a\n\tdefault reference.odt in
  the ~\\.pandoc directory.\n\n  * ODT writer:\n    + Indented and line-broke styles.xml
  so it can be modified more easily.\n    + Omitted some unnecessary style declarations.\n
  \   + Don't wrap text in OpenDocument writer.  The tags are too long, making\n      wrapping
  ugly and pointless.\n\n  * LaTeX reader: use \\\\ to separate multiple authors.\n\n
  \ * Markdown reader: use ; as separator between authors.\n    This allows you to
  use ',' within author names: e.g. \"John Jones, Jr.\"\n\n  * S5 writer: use linebreak
  to separate authors in title page.\n\n  * RST reader: Allow :: before lhs code block.
  The RST spec requires the\n    :: before verbatim blocks. This :: should not be
  treated as literal\n    colons. Resolves Issue #189.\n\n  * Documented pandoc 1.3's
  new definition list syntax in README.\n    (An oversight in the last release.)\n\n
  \ * markdown2pdf.hs:\n    + interpret ! in a log as an error line.\n    + --toc
  now works properly.\n\n  * Changes in RunTests.hs:\n    + Use the Diff library rather
  than a local copy of Diff.hs.\n      (This vastly increases performance.) This change
  means that 'cabal\n      test' presupposes that the Diff library is installed.\n
  \   + Removed tests/Diff.hs from cabal file.\n    + Changed RunTests to use local
  environment. We need at least HOME, so\n      pandoc can find its data directory.\n\n
  \ * Updated windows installer to install data files in the app directory.\n\n  *
  Windows installer now installs portable wrappers hsmarkdown and\n    markdown2pdf.\n\npandoc
  (1.3)\n\n  [ John MacFarlane ]\n\n  * Added --id-prefix option (Issue #41). This
  adds a prefix to all\n    automatically generated HTML identifiers, which helps
  prevent\n    duplicate identifiers when you're generating a fragment (say a blog\n
  \   post).\n\n  * Added --indented-code-classes option.  This specifies classes\n
  \   to use for indented code blocks.  (Patch due to buttock; Issue #87.)\n\n  *
  --number-sections now affects HTML output as well as ConTeXt and LaTeX\n    (Issue
  #150).\n\n  * Improved syntax for markdown definition lists (Issue #24).\n    Definition
  lists are now more compatible with PHP Markdown Extra.\n    + You can have multiple
  definitions for a term (but still not\n      multiple terms).\n    + Multi-block
  definitions no longer need a column before each block\n      (indeed, this will
  now cause multiple definitions).\n    + The marker no longer needs to be flush with
  the left margin,\n      but can be indented at or two spaces.  Also, ~ as well as
  :\n      can be used as the marker (this suggestion due to David\n      Wheeler.)\n
  \   + There can now be a blank line between the term and the\n      definitions.\n\n
  \ * Better looking simple tables.  Resolves Issue #180.\n    + Markdown reader:
  simple tables are now given column widths of 0.\n    + Column width of 0 is interpreted
  as meaning: use default column width.\n    + Writers now include explicit column
  width information only\n      for multiline tables.  (Exception:  RTF writer, which
  requires\n      column widths.  In this case, columns are given equal widths,\n
  \     adding up to the text width.)\n    + Simple tables should now look better
  in most output formats.\n\n  * Allow markdown tables without headers (Issue #50).\n
  \   The new syntax is described in README. Also allow optional line of\n    dashes
  at bottom of simple tables.\n\n  * Compensate for width of final table column (Issue
  #144).\n\n  * Treat a backslash followed by a newline as a hard line break\n    in
  markdown.  Resolves Issue #154.  This is a nice alternative\n\tto markdown's \"invisible\"
  way of indicating hardline breaks\n\tusing lines that end with two spaces.\n\n  *
  Improved performance of markdown reader by ~10% by eliminating the\n    need for
  a separate parsing pass for notes. Raw notes are now stored\n    on the first pass
  (which parses references), then parsed when the\n    note is inserted into the AST.
  The stateNotes field in ParserState\n    is now a list of [(String, String)] pairs
  instead of [(String,\n    [Block])].\n\n  * In markdown reader, treat 4 or more
  * or _ in a row as literal\n    text.  (Trying to parse long strings of * or _ as
  strong or emph\n\tleads to exponential performance problems.)\n\n  * Markdown reader:
  Use + rather than %20 for spaces in URLs.\n\n  * Fixed htmlComment parser, adding
  a needed 'try'.\n\n  * Don't print raw HTML in man output.\n\n  * Allow . _ and
  ~ in header identifiers.\n\n  * Specially mark code blocks that were \"literate\"
  in the input.\n    They can then be treated differently in the writers.  This allows\n
  \   authors to distinguish bits of the literate program they are writing\n    from
  source code examples, even if the examples are marked as\n    Haskell for highlighting.
  \ (Issue #174.)\n\n  * Modified html+lhs output to use \"haskell\" highlighter instead\n
  \   of \"literateHaskell\". The highlighting module now adds bird tracks\n\tafter
  highlighting (for HTML output), if the code block has the\n\t\"literate\" class.
  \ This gives better results, because kate's\n    haskell highlighter is much better
  than the literateHaskell\n    highlighter.\n\n  * Fixed handling of footnotes in
  titles (HTML) and headers (LaTeX).\n    (Issue #137.)\n\n  * Support for \"..code-block\"
  directive in RST reader. Not core\n    RST, but used in Sphinx for code blocks annotated
  with syntax\n    information. Thanks to Luke Plant for the patch.\n\n  * Added \"head\"
  to list of block-level HTML tags. Resolves\n    Issue #108.\n\n  * Added stripTags
  to Text.Pandoc.XML.  This is used in the HTML writer.\n\n  * Set utf-8 encoding
  in texinfo headers.\n\n  * Docbook writer: add ids to sections.  Use link for internal
  links.\n    (Issue #60.)\n\n  * Blank lines after lists in MediaWiki writer.\n\n
  \ * Properly handle commented-out list items in markdown.\n    Resolves Issue #142.
  \ Example:\n\n    - a\n    <!--\n    - b\n    -->\n    - c\n\n  * Changed heuristic
  in compactify. compactify has to decide whether a\n    Para that ends a list is
  a Para intentionally, or just because of\n    the blank lines at the end of every
  list. In the latter case the\n    Para is turned to a Plain. The old heuristic was:
  change final Para\n    to Plain iff the other items all end in Plain. This produces
  bad\n    results when, for example, an item contains just a Plain and an HTML\n
  \   comment, as it does in the list above. The new heuristic: change\n    final
  Para to Plain iff the other items don't contain a Para.\n\n  * Added % as an rst
  underline character.  Resolves Issue #173.\n\n  * Fix inline math parser so that
  \\$ is allowed in math.\n    Resolves Issue #169.\n\n  * Translate \\int (integral)
  into unicode when using unicode math\n    method. Resolves Issue #177.\n\n  * markdown2pdf.hs
  improvements:\n    + Use System.IO.UTF8.\n    + Print error messages on last attempt.\n
  \   + Do not create a backup when overwriting a PDF (Issue #166).\n    + Accept
  --longopt=val options.\n    + Added man/man1/markdown2pdf.1 to extra-tmp-files in
  cabal, so that\n      it is properly cleaned.\n\n  * Added haddock comments warning
  that readers assume \\n line endings.\n\n  * Updated COPYRIGHT file.\n\n  * Makefile:
  Changed EXECSBASE so it doesn't pull in hsmarkdown &\n    markdown2pdf. Otherwise
  strip tries to strip shell scripts when you\n    install using 'make'.\n\n  * Changed
  Makefile so it doesn't build Haskell wrappers.\n\n  * Fixed Makefile so it doesn't
  try to build man pages in build-doc.\n\n  * Install pcre3.dll in Windows install
  script; this allows us to\n    package a version of pandoc with highlighting support.\n\npandoc
  (1.2.1)\n\n  [ John MacFarlane ]\n\n  * Fixed regression with --preserveTabs. Brought
  back optPreserveTabs.\n    The trick of setting tabStop to 0 to mean \"preserve
  tabs\" had a bad\n    side effect: strings of 0 spaces were interpreted as indentation.\n
  \   So, with --preserve-tabs, unindented paragraphs were treated as\n    code. Resolves
  Issue #138.\n\n  * HTML writer:  wrap sections in divs.  Resolves Issue #70.\n\n
  \   + hierarchicalize has been rationalized; it builds a hierarchical\n      representation
  of the document from the headers, and simultaneously\n      gives each section a
  unique identifier based on the heading title.\n    + Identifiers are now attached
  to the divs rather than\n      to the headers themselves.\n    + Table of content
  backlinks go to the beginning of the table, rather\n      than to the section reference
  that was clicked.\n    + Code for constructing identifiers has been moved to Text.Pandoc.Shared\n
  \     from the HTML writer, since it is now consumed only by\n      hierarchicalize.\n
  \   + In --strict mode, pandoc just prints bare headings, as before\n      (unless
  --toc has been specified).\n    + In s5 output, it does not wrap sections in divs,
  as that seems to\n      confuse the s5 javascript.\n\n  * Man writer: break lines
  at end of each sentence. groff expects this\n    and treats '.' and '?' differently
  when followed by line ending as\n    opposed to ordinary space. Also, don't escape
  periods. Instead, use\n    zero-width character \\& to avoid unwanted interpretation
  of periods\n    at start of line. Resolves Issue #148.\n\n  * Markdown writer:  Added
  '#' and '>' to list of characters to be\n    escaped in markdown output.  Removed
  '<', as it is not an officially\n    escapable character. This partially resolves
  Issue #96.\n\n  * Make --smart the default for man output format. Otherwise we have\n
  \   trouble dividing lists of endlines into sentences.\n\n  * DocBook writer: Use
  language attribute to indicate source language\n    in code blocks.\n\n  * RST reader:\n\n
  \   + Allow # to continue list, even if the list was started with an\n      explicit
  marker. For example:\n\n        A. my list\n\t\t#. continued\n\n      Resolves Issue
  #140.\n    + Allow continuation lines in line blocks. Also added test cases for\n
  \     line blocks for RST reader. Resolves Issue #149.\n    + Allow explicit links
  with spaces in URL: `link <to this>`_\n\n  * Improved LaTeX reader's coverage of
  math modes. Remove displaymath*\n    (which is not in LaTeX) and recognize all the
  amsmath environments\n    that are alternatives to eqnarray, namely equation, equation*,\n
  \   gather, gather*, gathered, multline, multline*, align, align*,\n    alignat,
  alignat*, aligned, alignedat, split. Resolves Issue #103.\n    Thanks to shreevatsa.public
  for the patch.\n\n  * Markdown reader:\n\n    + Allow -, _, :, . in markdown attribute
  names. These are legal in\n      XML attribute names.\n    + Use non-breaking spaces
  in abbreviations.\n    + Markdown reader: improved efficiency of abbreviation parsing.\n
  \     Instead of a separate abbrev parser, we just check for\n      abbreviations
  each time we parse a string. This gives a huge\n      performance boost with -S.
  Resolves Issue #141.\n\n  * Improved efficiency of shared parsers:  hexNum, htmlComment,\n
  \   whitespace, indentSpaces.\n\n  * Export HTMLMathMethod in Text.Pandoc.\n\n  *
  Export languagesByExtension in Text.Pandoc.Highlighting.\n\n  * Added new Haskell
  version of markdown2pdf, due to\n    Paulo Tanimoto.  This should be more portable
  than the old\n\tshell script.\n\n  * Made 'pandoc -v' more explicit about compiler
  options.\n    Resolves Issue #139.\n\n  * pandoc.hs:  Made --strict compatible with
  --standalone, --toc.\n\n  * Use Paths_pandoc to get version number, instead of hard-coding
  it\n    into Text/Pandoc.hs.\n\npandoc (1.2)\n\n  [ John MacFarlane ]\n\n  * Added
  support for literate Haskell. lhs support is triggered by\n    '+lhs' suffixes in
  formats. For example, 'latex+lhs' is literate\n    Haskell LaTeX. '.lhs' files are
  treated by default as literate\n    markdown.\n\n    + Added stateLiterateHaskell
  to parser state.\n    + Added parser for lhsCodeBlock to Markdown, RST, LaTeX readers.\n
  \   + Added parser for |inline lhs| to LaTeX reader.\n    + Added writerLiterateHaskell
  to WriterOptions.\n    + Added lhs support to Markdown, RST, LaTeX, HTML writers.\n
  \   + Added definition of code environment to LaTeX header.\n    + Added tests (run
  only if highlighting support compiled in).\n    + Documented lhs features in man
  page and README.\n\n  * In Text.Pandoc.Definition, added processWith, processWithM,\n
  \   and queryWith, and deprecated processPandoc and queryPandoc\n    for these more
  general functions.\n\n  * Fixed bug in mediawiki writer:  improper closing tags
  in tables.\n    Thanks to Benct Philip Jonsson for reporting the bug.\n\n  * Added
  --email-obfuscation option.\n\n    + Added writer option for email obfuscation.\n
  \   + Implemented email obfuscation options in HTML writer.\n    + Added option
  to option parser.\n    + Documented in README and pandoc man page.\n    + Resolves
  Issue #97.\n\n  * LaTeX writer: fixed bug with empty table cells.\n    Resolves
  Issue #107.  Thanks to rodja.trappe for the patch.\n\n  * Fixed bug with header
  spacing in Markdown and RST writers.\n    A null header (Meta [] [] []) should not
  cause a blank line\n    at the beginning of output.  But a blank line is needed
  between\n    a non-null header and the main text.\n\n  * Markdown reader: Relax
  spacing rules for $$ in display math. Now\n    space and newlines are allowed after
  the opening $$ and before the\n    closing $$. However, the display math cannot
  contain an entirely\n    blank line. Resolves Issue #105.\n\n  * Markdown reader:
  Gobble space after Plain blocks containing only\n    raw html inline. Otherwise
  following header blocks are not parsed\n    correctly, since the parser sees blank
  space before them. Resolves\n    Issue #124.\n\n  * Markdown reader: Allow \" as
  well as '' to end a latex double-quote.\n\n  * Conditionally depend on syb and base
  >= 4 if ghc >= 6.10.\n    Resolves Issue #109.\n\n  * Fixed problems in RST and
  markdown output due to bug in pretty-1.0.1.0\n\n    + Added hang' function to Text.Pandoc.Shared;
  this will be used instead\n      of hang, which doesn't work properly in pretty-1.0.1.0.
  \ When pretty\n      is upgraded, we can go back to hang.\n      See  http://article.gmane.org/gmane.comp.lang.haskell.general/16687\n
  \   + Use hang' (and some different techniques) in RST and markdown writers.\n      Some
  output is now a bit different.\n\n  * Brought citeproc support up to date for citeproc-hs-0.2.\n
  \   (Patch by Andrea Rossato.)\n\n  * Moved all haskell source to src subdirectory.
  \ Renamed Main.hs to\n    pandoc.hs.\n\n  * Rewrote hsmarkdown in Haskell for portability
  (src/hsmarkdown.hs).\n    For now, keeping the old shell script too.\n\n  * Added
  TemplateHaskell to Extensions for executable, removed\n    -threaded for library.
  Thanks to duncan.coutts for the bug report.\n    Resolves Issue #121.\n\n  * Moved
  some Extra-Source-Files to Data-Files.\n\n  * Moved tabFilter to Shared.\n\n  *
  In pandoc.hs, removed optPreserveTabs; instead, tabstop of 0 means\n    preserve
  tabs.\n\n  * Minor code cleanup based on hlint suggestions.\n\npandoc (1.1)\n\n
  \ [ John MacFarlane ]\n\n  * Main.hs:\n\n    + Changed date on copyright message
  in Main.hs.\n    + Have the '-v' option print syntax highlighting languages\n      separated
  by commas, and wrapped in lines, instead of in five\n      columns as before.\n\n
  \ * Added --jsmath option.  Resolves Issue #68.\n\n    + Added --jsmath option to
  Main.hs\n    + Added JsMath to HTMLMathMethod in Text.Pandoc.Shared.\n    + Handle
  math appropriately in HTML writer when JsMath selected.\n    + Documented the option
  in README and man page.\n\n  * Text.Pandoc.Shared:  Changed compactify to use a
  better heuristic\n    for tight and loose lists. Final Para is changed to Plain
  if all\n    other list items *end* with a Plain block. Addresses Issue #99.\n\n
  \ * HTML reader:\n\n    + Added colons to protocols in unsanitaryURI. Closes Issue
  #88.\n    + HTML reader: Don't interpret contents of <pre> blocks as markdown.\n
  \     Added rawVerbatimBlock parser.  Resolves Issue #94.\n\n  * Markdown reader:\n\n
  \   + Allow URLs with spaces in them in links and references, but escape\n      them
  as \"%20\".\n    + Allow blank space at the end of horizontal rules.\n\n  * RST
  reader: Modified 'unknownDirective' parser to handle comment\n    blocks correctly,
  and added tests for comment blocks. Resolves Issue\n    #86. Closes Debian Bug #500662.\n\n
  \ * HTML writer:\n\n    + Include classes on tr elements in HTML output:\n      \"header\",
  \"odd\", \"even\".  This allows tables to be styled with\n      lines in alternating
  colors.  Resolves Issue #91.\n    + Enclose all LaTeXMathML bits in <span class=\"LaTeX\">.\n
  \     This prevents parts of the document that are not math from being\n      interpreted
  as math by LaTeXMathML.js.\n\n  * OpenDocument and ODT writers:  Added support for
  HorizontalRule elements,\n    which were formerly ignored.  Resolves Issue #95.\n\n
  \ * Text.Pandoc.Shared:  Modified wrappedTeX to eliminate the line break\n    between
  a footnote and immediately following nonspace characters in\n    LaTeX and ConTeXt
  output. (This gets interpreted as a space, which\n    is not desired in cases like
  \"text^[note]---\".)  Resolves Issue #93.\n\n  * Windows installer: Don't require
  admin privileges to run\n    installer.  Modified pandoc-setup.iss, and changed
  modpath.iss to\n    modify HKCU path if user lacks admin privileges.  Also fixed
  case\n    where oldpath is empty (previously this led to the new path\n    beginning
  with a semicolon).\n\n  * Updated INSTALL instructions for Arch packages and OS
  X install using\n    cabal-install.\n\n  * Removed the (now unneeded) debian directory.\n
  \   Removed empty Codec and System directories.\n\n  * Moved odt-styles/ to data/.
  \ Removed unneeded variable in Makefile.\n\n  * Modified Setup.hs so that the \"test\"
  target returns an error status\n    when tests fail, and \"build\" returns a success
  status if\n    the build succeeds.  Resolves Issue #100.\n\n  * Added BUGS to files
  in tarball.\n\n\npandoc (1.0.0.1)\n\n  [ John MacFarlane ]\n\n  * Removed spurious
  reference to pdf output format from pandoc(1) man page.\n\npandoc (1.0)\n\n  [ Andrea
  Rossato ]\n\n  * Added new OpenDocument writer.\n\n  * Added support for SmallCaps
  inline element.\n\n  * Added support for integrating pandoc with citeproc-hs.\n\n
  \   + Added Cite element to definition and writers.\n    + Added Text.Pandoc.Biblio
  module\n    + Note: This support is included only if the 'citeproc'\n      Cabal
  configuration flag is set.\n\n  * Made Pandoc data structure an instance of Typeable.\n
  \   Added new processPandoc and queryPandoc functions, to query\n    or transform
  matching elements in a Pandoc structure.\n\n  [ Peter Wang ]\n\n  * Added new Texinfo
  writer.\n\n  [ John MacFarlane ]\n\n  * Changes to Texinfo writer:\n\n    + No space
  between paragraph and following @verbatim (provides more\n      pleasing appearance
  in text formats)\n    + Blank line consistently after list environments.\n    +
  Removed deVerb.\n    + Use @code instead of @verb for inline code (this solves the
  character\n      escaping problem for texi2dvi and texi2pdf).\n    + Added news
  of Texinfo writer to README.\n    + Added Texinfo to list of formats in man page,
  and removed extra 'groff'.\n    + Added texi & texinfo extensions to Main.hs, and
  fixed bug in determining\n      default output extension.\n    + Modified disallowedInNode
  in Texinfo writer to correct list of disallowed characters.\n\n  * Added tests for
  OpenDocument writer.\n\n  * Added ODT writer (using zip-archive library to package
  output of\n    OpenDocument writer).  Added odt-styles directory with default ODT
  styles.\n\n  * Added new mediawiki writer and tests.\n\n  * Markdown reader: Added
  support for delimited code blocks, with optional\n    syntax highlighting using
  highlighting-kate (if the 'highlighting'\n    configuration option is selected).\n\n
  \   + Currently highlighting is supported only in the HTML writer.\n    + Delimited
  code blocks can have attributes; using the language name as\n      class triggers
  highlighting.\n    + New Attributes parameter in CodeBlock structure.\n    + --version
  now indicates whether syntax highlighting support is compiled\n      in, and prints
  a list of supported languages\n\n  * Removed debian directory. Pandoc is no longer
  a native debian package.\n\n  * Changes to build process:  pandoc can now be built
  from the repository\n    using Cabal.  No unix tools are needed (so, pandoc can
  be built on Windows\n    without Cygwin).\n\n    + Include shell scripts themselves
  in repo, rather than generating from wrappers.\n      Removed wrappers directory
  and wrappers Makefile target.\n    + Text/Pandoc/ASCIIMathML.hs, Text/Pandoc/DefaultHeaders.hs,\n
  \     and Text/Pandoc/Writers/S5.hs are no longer built in Makefile\n      from
  templates in the templates/ directory. Instead, they use template\n      haskell
  to read data at compile time from the relevant files in data/.\n      Template haskell
  functions go in a new module, Text.Pandoc.TH.\n    + man pages are now generated
  in Setup.hs hook, not by Makefile\n    + Makefile 'tarball' target now calls Cabal's
  'sdist'\n    + Added \"Extra-Source-Files\" to pandoc.cabal, so sdist contains everything
  needed\n    + Added \"Build-Type\" field to pandoc.cabal to avoid warning.\n    +
  Added to \"Extra-source-files\" and \"Extra-tmp-files\" in pandoc.cabal,\n      so
  'sdist' and 'clean' will work properly.\n    + Setup.hs now generates man pages
  in a postbuild hook.\n    + Added dependency-checking to Setup.hs, so it only rebuilds
  things\n      that need rebuilding.\n    + Added 'library' and 'executable' configuration
  flags.\n      Cabal can now be told to build just the library or just the executable.\n
  \   + CABALOPTS may now be specified with 'make' to pass Cabal configuration flags.\n
  \     For example:  CABALOPTS=-fhighlighting make\n\n  * Rewrote test suite so it
  doesn't depend on perl or unix tools.\n\n    + Replaced old runtests.pl with a Haskell
  script RunTests.hs.\n    + Added Diff.hs module to be used by RunTests.hs instead
  of unix 'diff'.\n    + Added test hook to Setup.hs, so tests may be run from cabal.\n
  \   + Changed Makefile's 'test' target to run tests via cabal.\n    + Removed old
  generate.sh.\n    + Since we no longer have 'sed' to filter out raw HTML sections\n
  \     from the docbook writer test, or raw LaTeX sections from the\n      context
  writer test, we now just include these sections.\n      They can be taken out if
  it is necessary to process the files.\n    + Updated latex and context writer tests
  to remove extra spaces\n      after '\\\\item'\n    + Added a markdown table reader
  test.\n    + Added markdown-reader-more.txt to test suite, for additional test cases\n
  \     for raw ConTeXt environments and more.\n\n  * Compatibility fixes for CPP,
  Cabal, and haddock:\n\n    + Use CPP in \"Extensions\" field in pandoc.cabal.\n
  \   + Removed use of backslash string continuations in source files.\n\n  * Removed
  pandoc.cabal.ghc66.  We now require Cabal >= 1.2, GHC >= 6.8,\n    base >= 3.\n\n
  \ * Require parsec < 3.\n    The compatibility module in parsec 3.0.0 gives far
  worse performance than\n    parsec 2.1.  Eventually pandoc will be upgraded to use
  the new bytestring\n    version of parsec, and then we'll go to parsec 3.0.0.\n\n
  \ * Removed Text.Regex dependencies by rewriting using plain Haskell\n    (Text.Pandoc.Writers.RTF,
  Text.Pandoc.Writers.HTML, Main.hs)\n\n  * Moved Text.Pandoc.Writers.DefaultHeaders
  -> Text.Pandoc.DefaultHeaders.\n\n  * Makefile:\n\n    + Added 'configure' as dependency
  of 'uninstall-all'.\n      (It uses the Cabal build program.)\n    + Makefile:  only
  use --with-hc-pkg if GHC_PKG is defined.\n      Note that Cabal will automatically
  choose the ghc-pkg appropriate\n      for the compiler selected, so normally specifying
  GHC by itself\n      is sufficient.\n\n  * Removed Text.Pandoc.UTF8 module; instead,
  depend on utf8-string and use\n    its IO and conversion functions.\n\n  * Added
  -Wall to ghc-options in pandoc.cabal.  Cleaned up modules so that\n    everything
  is -Wall clean.\n\n    + Added pragma to HTML writer to avoid deprecation warning
  for use of \"start\" attribute.\n    + Added pragma to Text/Pandoc/Shared.hs to
  get rid of \"orphan instance\" warnings.\n      (These are caused by the Lift instance
  for ByteString.)\n\n  * Changed the comment used to replace unsafe HTML if sanitize-html
  option\n    selected.\n\n  * Made -c/--css option repeatable on the command line
  (like -H, -A, -B).\n\n  * Moved XML-formatting functions to new unexported module
  Text.Pandoc.XML.\n\n  * Escape '\\160' as \"&#160;\", not \"&nbsp;\" in XML.\n    \"nbsp\"
  isn't a predefined XML entity.\n\n  * Fixed bug in RST reader, which would choke
  on: \"p. one\\ntwo\\n\".\n    Added some try's in ordered list parsers.\n\n  * Man
  writer:  don't escape \" as \\\".\n\n  * Allow newline before URL in markdown link
  references.  Resolves Issue #81.\n    Added tests for this issue in new \"markdown-reader-more\"
  tests.\n    Changed RunTests.hs to run these tests.\n\n  * Support for display math.
  \ Resolves Issue #47.\n\n    + Added a DisplayMath/InlineMath selector to Math inlines.\n
  \   + Markdown parser yields DisplayMath for $$...$$.\n    + LaTeX parser yields
  DisplayMath when appropriate.  Removed\n      mathBlock parsers, since the same
  effect is achieved by the math\n      inline parsers, now that they handle display
  math.\n    + Writers handle DisplayMath as appropriate for the format.\n    + Modified
  tests accordingly; added new tests for display math.\n\n  * Use LaTeXMathML instead
  of ASCIIMathML.  LaTeXMathML is closer\n    to LaTeX in its display of math, and
  supports many non-math LaTeX environments.\n\n    + Changed -m option to use LaTeXMathML
  rather than ASCIIMathML.\n    + Modified HTML writer to print raw TeX when LaTeXMathML
  is\n      being used instead of suppressing it.\n    + Removed ASCIIMathML files
  from data/ and added LaTeXMathML.\n    + Replaced ASCIIMathML with LaTeXMathML in
  source files.\n    + Modified README and pandoc man page source.\n    + Added --latexmathml
  option (kept --asciimathml as a synonym\n      for backwards compatibility)\n\n
  \ * Markdown reader: Parse setext headers before atx headers.\n    Test case:\n
  \      # hi\n       ====\n    parsed by Markdown.pl as an H1 header with contents
  \"# hi\".\n\n  * Markdown reader: Treat \"mixed\" lists the same way as Markdown.pl
  does.\n    The marker on the first list item determines the type of the whole\n
  \   list.  Thus, a list like\n       1. one\n       -  two\n       *  three\n    gets
  parsed as a single ordered list.  (Previous versions of pandoc\n    treated this
  as an ordered list with an unordered sublist.)\n\n  * Markdown smart typography:\n\n
  \   + Em dashes no longer eat surrounding whitespace.  Resolves Issue #69.\n    +
  Use nonbreaking spaces after known abbreviations in markdown parser.\n      Thus,
  for example, \"Mr. Brown\" comes out as \"Mr.~Brown\" in LaTeX, and does\n      not
  produce a sentence-separating space.  Resolves Issue #75.\n\n  * Markdown writer:
  Print unicode \\160 literally, rather than as &nbsp;.\n\n  * Treat '\\ ' in (extended)
  markdown as nonbreaking space.\n    Print nonbreaking space appropriately in each
  writer (e.g. ~ in LaTeX).\n\n  * The '--sanitize-html' option now examines URIs
  in markdown links\n    and images, and in HTML href and src attributes.  If the
  URI scheme\n    is not on a whitelist of safe schemes, it is rejected.  The main
  point\n    is to prevent cross-site scripting attacks using 'javascript:' URIs.\n
  \   See http://www.mail-archive.com/markdown-discuss@six.pairlist.net/msg01186.html\n
  \   and http://ha.ckers.org/xss.html.  Resolves Issue #62.\n\n  * HTML writer:\n\n
  \   + Override Text.XHtml's stringToHtml function,\n      so that characters below
  0xff are not converted to numerical entity\n      references. Also convert '\\160'
  to \"&nbsp;\". This should aid readability\n      and editability of the HTML source.
  It does presuppose that the HTML\n      will be served as UTF-8.\n    + In code
  blocks, change leading newlines to <br /> tags.\n      (Some browsers ignore them.)
  \ Resolves Issue #71.\n      See http://six.pairlist.net/pipermail/markdown-discuss/2008-May/001297.html\n
  \   + Use style attributes rather than css classes for strikethrough\n      and
  ordered list styles.  This works better when fragments, rather than\n      standalone
  documents, are generated.\n\n  * HTML reader: Count anything that isn't a known
  block (HTML) tag as an\n    inline tag (rather than the other way around).  Added
  \"html\", \"head\", and\n    \"body\" to list of block tags.  Resolves Issue #66,
  allowing\n    <lj> to count as an inline tag.\n\n  * RTF writer: Fixed bug.  Extra
  spaces were being printed after emphasized,\n    boldface, and other inline elements.
  \ Resolves Issue #64.\n\n  * LaTeX reader:  improvements in raw LaTeX parsing.\n\n
  \   + \"loose punctuation\" (like {}) parsed as Space\n    + Para elements must
  contain more than Str \"\" and Space elements\n    + Added parser for \"\\ignore\"
  command used in literate haskell.\n    + Reworked unknownCommand and rawLaTeXInline:
  when not in \"parse raw\"\n      mode, these parsers simply strip off the command
  part and allow\n      the arguments to be parsed normally.  So, for example,\n      \\blorg{\\emph{hi}}
  will be parsed as Emph \"hi\" rather than\n      Str \"{\\\\emph{hi}}\".\n    +
  Parse lhs \"code\" environments as verbatim.\n      Refactored parsers for verbatim
  environments.\n    + Removed specialEnvironment parser.\n    + parse '{}', if present,
  after \\textless, \\textgreater,\n      \\textbar, \\textbackslash, \\ldots.\n    +
  Parse unescaped special characters verbatim rather than\n      changing them to
  spaces.  This way arguments of unknown\n      commands will appear in braces.\n\n
  \ * Parse raw ConTeXt environments as TeX in markdown reader.\n    Resolves Issue
  #73.\n\n  * Moved BlockWrapper and wrappedBlocksToDoc from ConTeXt writer to Shared.\n\n
  \ * Made some structural changes to parsing of raw LaTeX environments.\n    Previously
  there was a special block parser for LaTeX environments.\n    It returned a Para
  element containing the raw TeX inline. This has\n    been removed, and the raw LaTeX
  environment parser is now used in the\n    rawLaTeXInline parser. The effect is
  exactly the same, except that we\n    can now handle consecutive LaTeX and ConTeXt
  environments not separated\n    by spaces.  This new flexibility is required by
  the example in\n    Issue #73:\n\n        \\placeformula \\startformula\n             L_{1}
  = L_{2}\n        \\stopformula\n\n    API change: The LaTeX reader now exports rawLaTeXEnvironment'
  (which\n    returns a string) rather than rawLaTeXEnvironment (which returns a block\n
  \   element). This is more likely to be useful in other applications.\n\n  * Use
  \\textsubscr instead of \\textsubscript for LaTeX subscript macro.\n    \\textsubscript
  conflicts with a definition in the memoir class.\n    Resolves Issue #65.\n\n  *
  Removed unneeded space after \"\\\\item\" in LaTeX and ConTeXt output.\n\n  * Added
  amsmath package to default LaTeX header. Resolves Issue #48.\n\n  * Added \\setupitemize[autointro]
  to ConTeXt header, to prevent orphaned\n    list introduction lines.\n\n  * Changed
  Float to Double in definition of Table element.\n    (Double is more efficient in
  GHC.)\n\n  * Fixed bug in Markdown parser:  regular $s triggering math mode.\n    For
  example:  \"shoes ($20) and socks ($5).\"\n    The fix consists in two new restrictions:\n\n
  \   + the $ that ends a math span may not be directly followed by a digit.\n    +
  no blank lines may be included within a math span.\n\n    Thanks to Joseph Reagle
  for noticing the bug.\n\n  * Use Data.List's 'intercalate' instead of custom 'joinWithSep'.\n
  \   Removed 'joinWithSep' from Text.Pandoc.Shared.\n\n  * Updated README and man
  pages.  Acknowledge contributors in README.\n    Added paragraph to README about
  producing S5 with separate CSS/javascript.\n\n  * Updated INSTALL to reflect new
  build system (including configuration\n    options) and document new dependencies.
  \ Added note to INSTALL that\n    Cabal >= 1.2 is required for build.  Resolves
  Issue #74.\n\n  * Fixed some haddock documentation errors.\n\n  * Small fix to markdown2pdf
  man page: only input needs to be piped through iconv.\n\npandoc (0.46) unstable;
  urgency=low\n\n  [ John MacFarlane ]\n\n  * Made -H, -A, and -B options cumulative:
  if they are specified\n    multiple times, multiple files will be included.\n\n
  \ * Added optional HTML sanitization using a whitelist.\n    When this option is
  specified (--sanitize-html on the command line),\n    unsafe HTML tags will be replaced
  by HTML comments, and unsafe HTML\n    attributes will be removed.  This option
  should be especially useful\n    for those who want to use pandoc libraries in web
  applications, where\n    users will provide the input.\n\n    + Main.hs:  Added
  --sanitize-html option.\n\n    + Text.Pandoc.Shared:  Added stateSanitizeHTML to
  ParserState.\n\n    + Text.Pandoc.Readers.HTML:\n      - Added whitelists of sanitaryTags
  and sanitaryAttributes.\n      - Added parsers to check these lists (and state)
  to see if a given\n        tag or attribute should be counted unsafe.\n      - Modified
  anyHtmlTag and anyHtmlEndTag to replace unsafe tags\n        with comments.\n      -
  Modified htmlAttribute to remove unsafe attributes.\n      - Modified htmlScript
  and htmlStyle to remove these elements if\n        unsafe.\n\n    + Modified README
  and man pages to document new option.\n\n  * Improved handling of email addresses
  in markdown and reStructuredText.\n    Consolidated uri and email address parsers.
  \ (Resolves Issue #37.)\n\n    + New emailAddress and uri parsers in Text.Pandoc.Shared.\n
  \     - uri parser uses parseURI from Network.URI.\n      - emailAddress parser
  properly handles email addresses with periods\n        in them.\n\n    + Removed
  uri and emailAddress parsers from Text.Pandoc.Readers.RST\n      and Text.Pandoc.Readers.Markdown.\n\n
  \ * Markdown reader:\n\n    + Fixed emph parser so that \"*hi **there***\" is parsed
  as a Strong\n      nested in an Emph. (A '*' is only recognized as the end of the\n
  \     emphasis if it's not the beginning of a strong emphasis.)\n\n    + Moved blockQuote
  parser before list parsers for performance.\n\n    + Modified 'source' parser to
  allow backslash-escapes in URLs.\n      So, for example, [my](/url\\(1\\)) yields
  a link to /url(1).\n      Resolves Issue #34.\n\n    + Disallowed links within links.
  (Resolves Issue #35.)\n      - Replaced inlinesInBalanced with inlinesInBalancedBrackets,
  which\n        instead of hard-coding the inline parser takes an inline parser\n
  \       as a parameter.\n      - Modified reference and inlineNote to use inlinesInBalancedBrackets.\n
  \     - Removed unneeded inlineString function.\n      - Added inlineNonLink parser,
  which is now used in the definition of\n        reference.\n      - Added inlineParsers
  list and redefined inline and inlineNonLink parsers\n        in terms of it.\n      -
  Added failIfLink parser.\n\n    + Better handling of parentheses in URLs and quotation
  marks in titles.\n      - 'source' parser first tries to parse URL with balanced
  parentheses;\n        if that doesn't work, it tries to parse everything beginning
  with\n        '(' and ending with ')'.\n      - source parser now uses an auxiliary
  function source'.\n      - linkTitle parser simplified and improved, under assumption
  that it\n        will be called in context of source'.\n\n    + Make 'block' conditional
  on strictness state, instead of using\n      failIfStrict in block parsers. Use
  a different ordering of parsers\n      in strict mode (raw HTML block before paragraph)
  for performance.\n      In non-strict mode use rawHtmlBlocks instead of htmlBlock.\n
  \     Simplified htmlBlock, since we know it's only called in strict\n      mode.\n\n
  \   + Improved handling of raw HTML.  (Resolves Issue #36.)\n      - Tags that can
  be either block or inline (e.g. <ins>) should\n        be treated as block when
  appropriate and as inline when\n        appropriate. Thus, for example,\n        <ins>hi</ins>\n
  \       should be treated as a paragraph with inline <ins> tags, while\n        <ins>\n
  \       hi\n        </ins>\n        should be treated as a paragraph within <ins>
  tags.\n      - Moved htmlBlock after para in list of block parsers.  This ensures\n
  \       that tags that can be either block or inline get parsed as inline\n        when
  appropriate.\n      - Modified rawHtmlInline' so that block elements aren't treated
  as\n        inline.\n      - Modified para parser so that paragraphs containing
  only HTML tags and\n        blank space are not allowed.  Treat these as raw HTML
  blocks instead.\n\n    + Fixed bug wherein HTML preceding a code block could cause
  it to\n      be parsed as a paragraph.  The problem is that the HTML parser\n      used
  to eat all blank space after an HTML block, including the\n      indentation of
  the code block.  (Resolves Issue #39.)\n      - In Text.Pandoc.Readers.HTML, removed
  parsing of following space\n        from rawHtmlBlock.\n      - In Text.Pandoc.Readers.Markdown,
  modified rawHtmlBlocks so that\n        indentation is eaten *only* on the first
  line after the HTML\n        block.  This means that in\n        <div>\n             foo\n
  \       <div>\n        the foo won't be treated as a code block, but in\n        <div>\n\n
  \           foo\n\n        </div>\n        it will.  This seems the right approach
  for least surprise.\n\n  * RST reader:\n\n    + Fixed bug in parsing explicit links
  (resolves Issue #44).\n      The problem was that we were looking for inlines until
  a '<' character\n      signaled the start of the URL; so, if you hit a reference-style
  link,\n      it would keep looking til the end of the document.  Fix:  change\n
  \     inline => (notFollowedBy (char '`') >> inline).  Note that this won't\n      allow
  code inlines in links, but these aren't allowed in resT anyway.\n\n    + Cleaned
  up parsing of reference names in key blocks and links.\n      Allow nonquoted reference
  links to contain isolated '.', '-', '_', so\n      so that strings like 'a_b_' count
  as links.\n\n    + Removed unnecessary check for following link in str.\n      This
  is unnecessary now that link is above str in the definition of\n      'inline'.\n\n
  \ * HTML reader:\n\n    + Modified rawHtmlBlock so it parses </html> and </body>
  tags.\n      This allows these tags to be handled correctly in Markdown.\n      HTML
  reader now uses rawHtmlBlock', which excludes </html> and </body>,\n      since
  these are handled in parseHtml.  (Resolves Issue #38.)\n\n    + Fixed bug (emph
  parser was looking for <IT> tag, not <I>).\n\n    + Don't interpret contents of
  style tags as markdown.\n      (Resolves Issue #40.)\n      - Added htmlStyle, analagous
  to htmlScript.\n      - Use htmlStyle in htmlBlockElement and rawHtmlInline.\n      -
  Moved \"script\" from the list of tags that can be either block or\n        inline
  to the list of block tags.\n\n    + Modified rawHtmlBlock to use anyHtmlBlockTag
  instead of anyHtmlTag\n      and anyHtmlEndTag.  This fixes a bug in markdown parsing,
  where\n      inline tags would be included in raw HTML blocks.\n\n    + Modified
  anyHtmlBlockTag to test for (not inline) rather than\n      directly for block.
  \ This allows us to handle e.g. docbook in\n      the markdown reader.\n\n  * LaTeX
  reader:  Properly recognize --parse-raw in rawLaTeXInline.\n    Updated LaTeX reader
  test to use --parse-raw.\n\n  * HTML writer:\n\n    + Modified rules for automatic
  HTML header identifiers to\n      ensure that identifiers begin with an alphabetic
  character.\n      The new rules are described in README.  (Resolves Issue #33.)\n\n
  \   + Changed handling of titles in HTML writer so you don't get\n      \"titleprefix
  - \" followed by nothing.\n\n  * ConTeXt writer: Use wrappers around Doc elements
  to ensure proper\n    spacing.  Each block element is wrapped with either Pad or
  Reg.\n    Pad'ed elements are guaranteed to have a blank line in between.\n\n  *
  RST writer:\n\n    + Refactored RST writer to use a record instead of a tuple for
  state,\n      and to include options in state so it doesn't need to be passed as\n
  \     a parameter.\n\n    + Use an interpreted text role to render math in restructuredText.\n
  \     See http://www.american.edu/econ/itex2mml/mathhack.rst for the\n      strategy.\n\n
  \ [ Recai Oktaş ]\n\n  * Debian packaging changes:\n\n    + Remove the empty 'include'
  directory in -dev package, which lintian\n      complains about.\n    + Bump Standarts-Version
  to 3.7.3.\n    + Use new 'Homepage:' field to specify the upstream URL on suggestion
  of\n      lintian.\n\n -- Recai Oktaş <roktas@debian.org>  Tue, 08 Jan 2008 05:13:31
  +0200\n\npandoc (0.45) unstable; urgency=low\n\n  [ John MacFarlane ]\n\n  * Simplified
  parsing of reference keys and notes in markdown and RST\n    readers: The Reference
  data structure from Text.Pandoc.Shared is no\n    longer needed, since referenceKey
  and noteBlock parses return strings\n    (as many blank lines as were occupied by
  the key or note) and update\n    state themselves.  getPosition and setPosition
  are now used to ensure\n    that error messages will give the correct line number.
  This yields\n    cleaner (and slightly faster) code, with more accurate parsing
  error\n    messages.\n\n  * Added new Math inline element:\n\n    + Markdown and
  LaTeX readers now convert TeX math into Math elements,\n      not TeX.\n    + This
  allows math to be treated differently from raw TeX in output.\n      TeX elements
  are no longer printed in output formats other than\n      Markdown, LaTeX, and ConTeXt.
  \ But Math elements are always printed.\n\n  * New default handling of math in writers:\n\n
  \   + New module Text.Pandoc.Readers.TeXMath exports readTeXMath, which\n      parses
  raw TeX math and outputs a string of Pandoc inlines that\n      tries to render
  it as far as possible using unicode characters,\n      lapsing into literal TeX
  when needed.\n    + readTeXMath is now used for default HTML output in HTML, S5,
  RTF,\n      and Docbook, if no other method for displaying math in HTML is\n      specified.
  \ Enclosing $'s are no longer printed by default.\n    + By default, math is put
  inside <span class=\"math\">. This way it can be\n      distinguished from the surrounding
  text, e.g. put in a different\n      font.\n\n  * New --gladtex and --mimetex options
  for display of math in HTML:\n\n    + If --gladtex is specified, math is output
  between <eq> tags, so\n      it can be processed by gladTeX.\n    + If --mimetex
  is specified, math is put in <img> tags with a link\n      to the mimetex CGI script
  (or any other script that takes TeX math\n      as input and outputs an image).
  \ The URL of the script may be\n      specified, but defaults to /cgi-bin/mimetex.cgi.\n
  \   + HTMLMathMethod structure in WriterOptions keeps track of how to\n      display
  math in HTML output.\n    + Updated README with a description of the four options
  for displaying\n      math in HTML.\n\n  * HTML reader:\n\n    + Fixed bug: parser
  for minimized attributes should not swallow\n      trailing spaces.\n    + Simplified
  HTML attribute parsing.\n    + Changed parsing of code blocks in HTML reader:  <code>
  tag is no\n      longer needed. <pre> suffices. All HTML tags in the code block\n
  \     (e.g. for syntax highlighting) are skipped, because they are not\n      portable
  to other output formats. A <code>...</code> block not\n      surrounded by <pre>
  now counts as inline HTML, not a code block.\n    + Remove just one leading and
  one trailing newline from contents of\n      <pre>...</pre> in codeBlock parser.\n\n
  \ * Markdown reader:\n\n    + Removed support for box-style block quotes.\n    +
  Require space before title in links and references.\n      This fixes a bug in parsing
  URLs like http://silly/url(withparen).\n    + Improved and simplified setextHeader
  parser.\n    + Fixed logic in smart quote parsing, adding some needed 'try'\n      statements.\n
  \   + Fixed smart quote parsing so that unicode characters 8216 and 8217\n      are
  recognized as single quotes, and 8220 and 8221 as double quotes.\n\n  * RST reader:\n\n
  \   + Fixed bug in parsing of code blocks. Previously a full tab indent\n      was
  required, but RST allows code to be indented any amount.\n      Resolves Issue #27.\n
  \   + Allow field lists to be indented.\n    + Parse the contents of field lists
  instead of treating as a raw string.\n    + Represent field lists as definition
  lists instead of blockquotes.\n    + Fixed bug in which metadata would be overridden
  if the document\n      contained multiple field lists.\n    + Parse fields associated
  with '.. image::' blocks, and use 'alt'\n      field, if given, for image alt and
  title attributes.\n\n  * LaTeX reader:\n\n    + Modified specialChar so that '\"'
  characters are parsed.\n    + Fixed a bug in parsing of \\[ \\] math blocks (thanks
  to Mark Kalderon).\n\n  * HTML writer:\n\n    + Changes in handling of math (see
  above).\n    + Don't produce HTML for table of contents if there are\n      no headers.
  (This would be an empty list, which is invalid XHTML.)\n\n  * Markdown writer:\n\n
  \   + Don't print title attribute if title is empty. (This differs from\n      the
  behavior of Markdown.pl, and agrees with PHP Markdown. But John\n      Gruber has
  indicated that he prefers this behavior.) Adjusted test\n      suite accordingly.\n
  \   + Fixed incorrect line wrapping in paragraphs including hard line\n      breaks.
  Resolves Issue #25.\n    + Fixed bug in markdown writer:  If an ordered list item
  began with\n      a marker greater than 3 characters in width, and the item took
  more\n      than one line, it would appear on the line after the list marker,\n
  \     e.g.:\n\n          (12)\n              My list item.\n              Multiline.\n\n
  \     Now it works as follows:\n\n          (12) My list item.\n              Multiline.\n\n
  \ * RST writer\n\n    + Fixed bug in RST writer's handling of ordered lists. Previously,\n
  \     list items with multiple lines would not always line up with\n      single-line
  list items. Now, list items are nested the length of\n      the list marker + 1.
  This looks better and ensures that list items\n      all line up. (Note that list
  markers are padded to the length of\n      the longest list marker in the series.)\n
  \   + Use 3-space indent for unordered lists.\n    + If label for a link reference
  contains a colon, surround it by `\n      signs so it won't be interpreted as the
  end of the link label.\n\n  * LaTeX writer:\n\n    + Cleaner output for footnotes.
  Footnotes now always begin on a new\n      line, and the final } is on a line by
  itself only when it needs to\n      be (i.e. only when the note ends with a Verbatim
  environment).\n    + Added writer options to state, so state doesn't need to be
  passed as\n      a parameter.\n    + Text wrapping now provided, using wrapTeXIfNeeded.\n\n
  \ * ConTeXt writer:  many improvements for more idiomatic ConTeXt output\n    (thanks
  to Idris Samawi Hamid for suggestions).\n\n    + PrettyPrint module now used for
  output.\n    + Writer options are now in state, so they don't have to be passed
  as\n      a parameter.\n    + Text wrapping now provided, using wrapTeXIfNeeded.\n
  \   + Better treatment of footnotes:  footnotes are always on lines by\n      themselves,
  and the final } is on a line by itself only when\n      it needs to be (after \\stoptyping).\n
  \   + Use \\subject, \\subsubject, ... or \\section, \\subsection, ... for headings,\n
  \     depending on whether --number-sections option is selected.\n    + Extra blank
  line inserted after \\stopitemize\n    + Use new, \"official\" definition of blockquote
  environment. Also, use\n      blank line after \\startblockquote to balance blank
  line at the end.\n    + Both itemized and enumerated lists are now generated using\n
  \     \\start-stopitemize, with appropriate options. Removed definitions\n      of
  ltxenum and ltxitem, which are no longer needed. Provided\n      defaults for itemized
  lists in the preamble. State keeps track of\n      ordered list level, so that when
  default numbering is specified,\n      the appropriate scheme can be used.\n    +
  Changed \\useurl to \\useURL.\n    + Changed link color from red to blue.\n    +
  Use \\subsubsubsubsection etc., since these are supported\n      (up to at least
  sub x 5).\n\n  * Text.Pandoc.Shared:\n\n    + Save and restore position in parseFromString,
  so that accurate\n      error messages can be given.\n    + Improved efficiency
  of romanNumeral parser.\n    + Added wrappedTeX and wrapTeXIfNeeded functions.  These
  ensure\n      that footnotes occur on lines by themselves (to make them\n      easier
  to see and move) and do not screw up line wrapping.\n\n  * Text.Pandoc.UTF8:  modified
  fromUTF8 to strip out the BOM\n    if present.  Windows Notepad and other applications
  insert a\n    BOM at the beginning of a UTF8 file.\n\n  * Main.hs (tabFilter): Treat
  '\\r' at end of line as newline (in\n    addition to \"\\r\\n\" and '\\n').\n\n
  \ * Added a writer option for wrapped text and a command-line option\n    '--no-wrap',
  which disables text wrapping and minimizes whitespace\n    in HTML. (Resolves Issue
  #26.)\n\n    + Added support for '--no-wrap' to Main.hs.\n    + Added wrapIfNeeded
  function to Text.Pandoc.Shared.\n    + Use wrapIfNeeded instead of wrapped in the
  RST, Man, Docbook, and\n      Markdown writers.\n    + Added render and renderFragment
  helpers to HTML writer.\n\n  * Modified html2markdown to run tidy only if the HTML
  cannot be\n    parsed. Previously html2markdown piped all input through tidy\n    before
  passing it to pandoc. This caused problems on certain pages\n    (e.g. http://daringfireball.com/markdown)
  which have well-formed\n    XHTML that causes tidy to choke. The solution is to
  pipe through\n    tidy only if pandoc cannot parse the input by itself. This means\n
  \   that a temp file is now always used, even when input comes from a\n    local
  file or standard input.\n\n  * Removed 'version' constant from Main.hs; added 'pandocVersion'
  to\n    Text.Pandoc library.\n\n  * pandoc.cabal:\n\n    + Modified to work with
  GHC 6.8 and Cabal configurations. (For GHC\n      6.8, pretty and containers must
  be added to Build-Depends, and it\n      is desirable to use the -O2 compiler option.)
  \ Cabal configurations\n      allows one to select options depending on the compiler
  version.\n      For GHC 6.6, the splitBase option can be disabled.\n    + pandoc.cabal.ghc66
  is provided for users with older versions of\n      Cabal, which do not support
  configurations.\n    + Use Ghc-Prof-Options to ensure that '-auto-all' is used when\n
  \     '--enable-(executable|library)-profiling' is specified. Updated\n      PROFILING
  instructions accordingly.\n\n  * Makefile:\n\n    + Makefile now checks GHC version.
  If GHC is 6.6, pandoc.cabal.ghc66\n      is copied to pandoc.cabal, and the old
  pandoc.cabal is copied\n      to pandoc.cabal.orig. Otherwise, pandoc.cabal is copied
  to\n      pandoc.cabal.orig but otherwise unmodified. This way, the Makefile\n      will
  work properly with either GHC 6.6 or 6.8.\n    + Changed BUILDCONF to point to dist/setup-config,
  not .setup-config.\n      This is where current versions of Cabal put it.\n    +
  Added $(BUILDCMD) target, so setup doesn't get compiled every time.\n    + Removed
  dependency of templates on ./templates, which is circular\n      now that templates
  is a subdirectory of the top-level.\n\n  * MacPorts Portfile:\n\n    + Modified
  to install the pandoc library in addition to programs.\n    + Installation must
  be done manually rather than using Makefile's\n      install-all.\n    + Note that
  the library must be registered in the activate phase,\n      after the library files
  have been copied out of the destroot.\n      Cabal generates a 'register.sh' script
  that will do this.\n\n  * debian/control: Added libghc6-network-dev, libghc6-xhtml-dev,
  and\n    libghc6-mtl-dev as dependencies for libghc6-pandoc-dev.\n    Closes: #445235\n\n
  \ * debian/rules:  Converted to UTF-8.\n\n  * Changed pandoc home page to http://johnmacfarlane.net/pandoc/.\n\n
  \ * Updated ASCIIMathML.js to latest version.\n\n  * Directory structure:\n\n    +
  Moved everything from src into the top-level directory.\n    + Changed references
  to source directory in Makefile and\n      pandoc.cabal.*.\n    + Moved ASCIIMathML.js,
  headers, and ui into templates directory.\n    + Modified fillTemplates.pl to reflect
  new paths.\n\n  [ Recai Oktaş ]\n\n  * Makefile: Fixed the issue of having two copies
  of the library\n    documentation under some usage scenarios.\n\n  * Replaced 'ghc'
  with '$(GHC)' in Makefile, and made GHC\n    and GHC_PKG configurable through the
  environment, to support\n    unusual ghc installations.  For example:\n    GHC=/opt/ghc/bin/ghc
  GHC_PKG=/opt/ghc/bin/ghc-pkg make\n\n -- Recai Oktaş <roktas@debian.org>  Sun, 07
  Oct 2007 20:51:43 +0300\n\npandoc (0.44) unstable; urgency=low\n\n  [ John MacFarlane
  ]\n\n  * Fixed bug in HTML writer:  when --toc was used, anchors were put around\n
  \   headers, which is invalid XHTML (block content within inline element).\n    Now
  the anchors are put inside the header tags.  Resolves Issue #23.\n\n  * Added xmlns
  attribute to html element in html writer tests.\n    This attribute is added by
  more recent versions of the\n    xhtml library (>= 3000), and is required for valid
  XHTML.\n\n  [ Recai Oktaş ]\n\n  * On configure, compile 'Setup.hs' to 'setup' and
  use 'setup' as the build\n    command instead of 'runhaskell', which, on some platforms
  (such as s390,\n    alpha, m68k), throws the following error:\n\n        runhaskell
  Setup.hs configure --prefix=/usr\n        ghc-6.6.1: not built for interactive use\n\n
  \   This causes a serious FTBFS bug.  Closes: #440668.\n\n -- Recai Oktaş <roktas@debian.org>
  \ Mon, 03 Sep 2007 18:24:02 +0300\n\npandoc (0.43) unstable; urgency=low\n\n  [
  John MacFarlane ]\n\n  * The focus of this release is performance.  The markdown
  parser\n    is about five times faster than in 0.42, based on benchmarks\n    with
  the TextMate manual.\n\n  * Main.hs: Replaced CRFilter and tabFilter with single
  function\n    tabFilter, which operates on the whole string rather than breaking\n
  \   it into lines, and handles dos-style line-endings as well as tabs.\n\n  * Added
  separate LaTeX reader and native reader tests; removed\n    round-trip tests.\n\n
  \ * Text.Pandoc.Shared:\n\n    + Removed tabsToSpaces and tabsInLine (they were
  used only in Main.hs.)\n    + General code cleanup (to elimante warnings when compiling
  with -Wall.)\n    + Added 'wrapped' function, which helps wrap text into paragraphs,\n
  \     using the prettyprinting library.\n    + Rewrote charsInBalanced and charsInBalanced'.\n
  \       - Documented restriction: open and close must be distinct characters.\n
  \       - Rearranged options for greater efficiency.\n        - Bug fix: Changed
  inner call to charsInBalanced inside\n          charsInBalanced' to charsInBalanced'.\n
  \   + anyLine now requires that the line end with a newline (not eof).\n      This
  is a harmless assumption, since we always add newlines to the\n      end of a block
  before parsing with anyLine, and it yields a 10% speed\n      boost.\n    + Removed
  unnecessary 'try' in anyLine.\n    + Removed unneeded 'try' from romanNumeral parser.\n
  \   + Use notFollowedBy instead of notFollowedBy' in charsInBalanced.\n    + Removed
  unneeded 'try' in parseFromString.\n    + Removed unneeded 'try' from stringAnyCase.
  \ (Now it behaves\n      like 'string'.)\n    + Changed definition of 'enclosed'
  in Text.Pandoc.Shared so that\n      'try' is not automatically applied to the 'end'
  parser. Added\n      'try' in calls to 'enclosed' where needed. Slight speed increase.\n\n
  \ * Writers:\n\n    + Replaced individual wrapping routines in RST, Man, and Markdown\n
  \     writers with 'wrapped' from Text.Pandoc.Shared.\n    + Rewrote LaTeX writer
  to use the prettyprinting library,\n      so we get word wrapping, etc.\n    + Modified
  latex writer tests for new latex writer using prettyprinter.\n    + Fixed bug in
  LaTeX writer: autolinks would not cause\n      '\\usepackage{url}' to be put in
  the document header. Also, changes\n      to state in enumerated list items would
  be overwritten.\n    + In Markdown writer, escape paragraphs that begin with ordered
  list\n      markers, so they don't get interpreted as ordered lists.\n\n  * Text.Pandoc.Reades.LaTeX:\n\n
  \   + Fixed bug in LaTeX reader, which wrongly assumed that the roman\n      numeral
  after \"enum\" in \"setcounter\" would consist entirely of\n      \"i\"s. 'enumiv'
  is legitimate.\n    + LaTeX command and environment names can't contain numbers.\n
  \   + Rearranged order of parsers in inline for slight speed improvement.\n    +
  Added '`' to special characters and 'unescapedChar'.\n\n  * Text.Pandoc.Readers.RST:\n\n
  \   + Removed unneeded try's in RST reader; also minor code cleanup.\n    + Removed
  tabchar.\n    + Rearranged parsers in inline (doubled speed).\n\n  * Text.Pandoc.Readers.Markdown:\n\n
  \   + Skip notes parsing if running in strict mode. (This yields a nice\n      speed
  improvement in strict mode.)\n    + Simplify autolink parsing code, using Network.URI
  to test for\n      URIs. Added dependency on network library to debian/control and\n
  \     pandoc.cabal.\n    + More perspicuous definition of nonindentSpaces.\n    +
  Removed unneeded 'try' in 'rawLine'.\n    + Combined linebreak and whitespace into
  a new whitespace parser, to\n      avoid unnecessary reparsing of space characters.\n
  \   + Removed unnecessary 'try' in 'codeBlock', 'ellipses', 'noteMarker',\n      'multilineRow',
  'dashedLine', 'rawHtmlBlocks'.\n    + Use lookAhead in parsers for setext headers
  and definition lists\n      to see if the next line begins appropriately; if not,
  don't waste\n      any more time parsing.\n    + Don't require blank lines after
  code block. (It's sufficient to\n      end code block with a nonindented line.)\n
  \   + Changed definition of 'emph': italics with '_' must not\n      be followed
  by an alphanumeric character. This is to help\n      prevent interpretation of e.g.
  [LC_TYPE]: my_type as\n      '[LC<em>TYPE]:my</em>type'.\n    + Improved Markdown.pl-compatibility
  in referenceLink: the two parts\n      of a reference-style link may be separated
  by one space, but not\n      more... [a] [link], [not]    [a link].\n    + Fixed
  markdown inline code parsing so it better accords with\n      Markdown.pl: the marker
  for the end of the code section is a clump\n      of the same number of `'s with
  which the section began, followed\n      by a non-` character. So, for example,\n
  \        ` h ``` i ` -> <code>h ``` i</code>.\n    + Split 'title' into 'linkTitle'
  and 'referenceTitle', since the\n      rules are slightly different.\n    + Rewrote
  'para' for greater efficiency.\n    + Rewrote link parsers for greater efficiency.\n
  \   + Removed redundant 'referenceLink' in definition of inline (it's\n      already
  in 'link').\n    + Refactored escapeChar so it doesn't need 'try'.\n    + Refactored
  hrule for performance in Markdown reader.\n    + More intelligent rearranging of
  'inline' so that most frequently\n      used parsers are tried first.\n    + Removed
  tabchar parser, as whitespace handles tabs anyway.\n\n  * Text.Pandoc.CharacterReferences:\n\n
  \   + Refactored.\n    + Removed unnecessary 'try's for a speed improvement.\n    +
  Removed unnecessary '&' and ';' from the entity table.\n\n  * Build process:\n\n
  \   + Makefile: Get VERSION from cabal file, not Main.hs.\n    + Modified MacPorts
  Portfile:\n        - Depend on haddock\n        - Build and install libraries and
  library documentation in\n          addition to pandoc executable\n        - Added
  template item for md5 sum in Portfile.in.\n        - Incorporated changes from MacPorts
  repository (r28278).\n    + FreeBSD port:  Don't try to generate distinfo in Makefile.\n
  \     It can be made using 'make makesum' in FreeBSD.\n    + Make both freebsd and
  macports targets depend on tarball.\n\n  * Website and documentation:\n\n    + Updated
  INSTALL instructions.\n    + Added pandocwiki demo to website.\n    + Removed local
  references to Portfile, since pandoc is now in the\n      MacPorts repository.\n\n
  -- Recai Oktaş <roktas@debian.org>  Sun, 02 Sep 2007 15:50:11 +0300\n\npandoc (0.42)
  unstable; urgency=low\n\n  [ John MacFarlane ]\n\n  * Main.hs: Use utf8 conversion
  on the extra files loaded with\n    the -H, -C, -B, and -A options.  This fixes
  problems with unicode\n    characters in these files.\n\n  * Exposed Text.Pandoc.ASCIIMathML,
  since it is imported in\n    Text.Pandoc.Readers.HTML and without it we get a linking
  error when\n    using the library.\n\n  * Markdown reader:\n\n    + Added new rule
  for enhanced markdown ordered lists: if the list\n      marker is a capital letter
  followed by a period (including a\n      single-letter capital roman numeral), then
  it must be followed by\n      at least two spaces. The point of this is to avoid
  accidentally\n      treating people's initials as list markers: a paragraph might
  begin,\n      \"B. Russell was an English philosopher,\" and this shouldn't be\n
  \     treated as a list.  Documented change in README.\n    + Blocks that start
  with \"p. \" and a digit are no longer treated\n      as ordered lists (it's a page
  number).\n    + Added a needed 'try' to listItem.\n    + Removed check for a following
  setext header in endline.\n      A full test is too inefficient (doubles benchmark
  time), and the\n      substitute we had before is not 100% accurate.\n    + Don't
  use Code elements for autolinks if --strict specified.\n\n  * LaTeX writer:  When
  a footnote ends with a Verbatim environment, the\n    close } of the footnote cannot
  occur on the same line or an error occurs.\n    Fixed this by adding a newline before
  the closing } of every footnote.\n\n  * HTML writer:\n    + Removed incorrect \"{}\"
  around style information in HTML tables.\n      Column widths now work properly
  in HTML.\n    + If --strict option is specified (and --toc is not), don't include\n
  \     identifiers in headers, for better Markdown compatibility.\n\n  * Build process:\n\n
  \   + Separated $(web_dest) and website targets.\n    + In website, index.txt is
  now constructed from template index.txt.in.\n    + Added freebsd target to Markefile.
  This creates the freebsd Makefile\n      from Makefile.in, and creates distinfo.
  \ Removed Makefile and distinfo\n      from the repository.\n    + Added macport
  target to Makefile. Portfile is built from template\n      Portfile.in.\n    + Removed
  OSX package targets.  (Too many difficulties involving\n      dependencies on dynamic
  libraries.)\n    + More complete INSTALL instructions for all architectures.\n\n
  \ * Website:\n    + Added a programming demo, pandocwiki.\n\n  [ Recai Oktaş ]\n\n
  \ * Do not forget to close pandoc's ITP.  Closes: #391666\n\n -- Recai Oktaş <roktas@debian.org>
  \ Sun, 26 Aug 2007 22:51:32 +0300\n\npandoc (0.41) unstable; urgency=low\n\n  [
  John MacFarlane ]\n\n  * Fixed bugs in HTML reader:\n    + Skip material at end
  *only if* </html> is present (previously,\n      only part of the document would
  be parsed if an error was\n      found; now a proper error message is given).\n
  \   + Added new constant eitherBlockOrInline with elements that may\n      count
  either as block-level or as inline. Modified isInline and\n      isBlock to take
  this into account.\n    + Modified rawHtmlBlock to accept any tag (even an inline
  tag):\n      this is innocuous, because rawHtmlBlock is tried only if a regular\n
  \     inline element can't be parsed.\n    + Added a necessary 'try' in definition
  of 'para'.\n\n  * Fixed bug in markdown ordered list parsing.  The problem was that\n
  \   anyOrderedListStart did not check for a space following the\n    ordered list
  marker.  So in 'A.B. 2007' the parser would be\n    expecting a list item, but would
  not find one, causing an error.\n    Fixed a similar bug in the RST reader.  Resolves
  Issue #22.\n\n  * Refactored RST and Markdown readers using parseFromString.\n\n
  \ * LaTeX reader will now skip anything after \\end{document}.\n\n  * Fixed blockquote
  output in markdown writer: previously, block\n    quotes in indented contexts would
  be indented only in the first\n    line.\n\n  * Added note to INSTALL about variations
  in versions of the xhtml\n    library that can lead to failed tests (thanks to Leif
  LeBaron).\n\n -- Recai Oktaş <roktas@debian.org>  Sun, 19 Aug 2007 23:26:07 +0300\n\npandoc
  (0.4) unstable; urgency=low\n\n  [ John MacFarlane ]\n\n  * Added two new output
  formats: groff man pages and ConTeXt. By\n    default, output files with extensions
  \".ctx\" and \".context\" are\n    assumed to be ConTeXt, and output files with
  single-digit extensions\n    are assumed to be man pages.\n\n  * Enhanced ordered
  lists (documented in README, under Lists):\n    + The OrderedList block element
  now stores information about\n      list number style, list number delimiter, and
  starting number.\n    + The readers parse this information when possible.\n    +
  The writers use this information to style ordered lists.\n    + The enhancement
  can be disabled using the --strict option.\n\n  * Added support for tables (with
  a new Table block element). Two kinds\n    of tables are supported: a simple table
  with one-line rows, and a\n    more complex variety with multiline rows. All output
  formats are\n    supported, but only markdown tables are parsed at the moment. The\n
  \   syntax is documented in README.\n\n  * Added support for definition lists (with
  a new DefinitionList block\n    element). All output and input formats are supported.
  The syntax is\n    documented in README.\n\n  * Added support for superscripts and
  subscripts (with new Superscript\n    and Subscript inline elements).  All input
  and output\n    formats.  The syntax is documented in README.\n\n  * Added support
  for strikeout (with a new Strikeout inline element).\n    All input and output formats
  are supported. Thanks to Bradley Kuhn,\n    who contributed a patch. The syntax
  is documented in README. Resolves\n    Issue #18.\n\n  * Added a --toc|--table-of-contents
  option.  This causes an automatically\n    generated table of contents (or an instruction
  that creates one) to\n    be inserted at the beginning of the document. Not supported
  in S5,\n    DocBook, or man page writers.\n\n  * Modified the -m|--asciimathml option:\n\n
  \   + If an optional URL argument is provided, a link is inserted\n      instead
  of the contents of the ASCIIMathML.js script.\n    + Nothing is inserted unless
  the document actually contains\n      LaTeX math.\n\n  * Removed Blank block element
  as unnecessary.\n\n  * Removed Key and Note blocks from the Pandoc data structure.
  All\n    links are now stored as explicit links, and note contents are\n    stored
  with the (inline) notes.\n\n    + All link Targets are now explicit (URL, title)
  pairs; there\n      is no longer a 'Ref' target.\n    + Markdown and RST parsers
  now need to extract data from key and\n      note blocks and insert them into the
  relevant inline elements.\n      Other parsers have been simplified, since there
  is no longer any need\n      to construct separate key and note blocks.\n    + Markdown,
  RST, and HTML writers need to construct lists of\n      notes; Markdown and RST
  writers need to construct lists of link\n      references (when the --reference-links
  option is specified); and\n      the RST writer needs to construct a list of image
  substitution\n      references. All writers have been rewritten to use the State
  monad\n      when state is required.\n    + Several functions (generateReference,
  keyTable,\n      replaceReferenceLinks, replaceRefLinksBlockList, and some auxiliaries\n
  \     used by them) have been removed from Text.Pandoc.Shared, since\n      they
  are no longer needed. New functions and data structures\n      (Reference, isNoteBlock,
  isKeyBlock, isLineClump) have been\n      added. The functions inTags, selfClosingTag,
  inTagsSimple, and\n      inTagsIndented have been moved to the DocBook writer, since
  that\n      is now the only module that uses them. NoteTable is now exported\n      in
  Text.Pandoc.Shared.\n    + Added stateKeys and stateNotes to ParserState; removed
  stateKeyBlocks,\n      stateKeysUsed, stateNoteBlocks, stateNoteIdentifiers, stateInlineLinks.\n
  \   + Added writerNotes and writerReferenceLinks to WriterOptions.\n\n  * Added
  Text.Pandoc module that exports basic readers, writers,\n    definitions, and utility
  functions. This should export everything\n    needed for most uses of Pandoc libraries.
  The haddock documentation\n    includes a short example program.\n\n  * Text.Pandoc.ASCIIMathML
  is no longer an exported module.\n\n  * Added Text.Pandoc.Blocks module to help
  in printing markdown\n    and RST tables.  This module provides functions for working
  with\n    fixed-width blocks of text--e.g., placing them side by side, as\n    in
  a table row.\n\n  * Refactored to avoid reliance on Haskell's Text.Regex library,
  which\n    (a) is slow, and (b) does not properly handle unicode.  This fixed\n
  \   some strange bugs, e.g. in parsing S-cedilla, and improved performance.\n\n
  \   + Replaced 'gsub' with a general list function  'substitute'\n      that does
  not rely on Text.Regex.\n    + Rewrote extractTagType in HTML reader so that it
  doesn't use\n      regexs.\n    + In Markdown reader, replaced email regex test
  with a custom email\n      autolink parser (autoLinkEmail). Also replaced selfClosingTag
  regex\n      with a custom function isSelfClosingTag.\n    + Modified Docbook writer
  so that it doesn't rely on Text.Regex for\n      detecting 'mailto' links.\n    +
  Removed escapePreservingRegex and reamped entity-handling\n      functions in Text.Pandoc.Shared
  and Text.Pandoc.CharacterReferences to\n      avoid reliance on Text.Regex (see
  below on character reference\n      handling changes).\n\n  * Renamed Text.Pandoc.Entities
  as Text.Pandoc.CharacterReferences.\n\n  * Changed handling of XML entities.  Entities
  are now parsed (and unicode\n    characters returned) in the Markdown and HTML readers,
  rather than being\n    handled in the writers.  In HTML and Docbook writers, UTF-8
  is now used\n    instead of entities for characters above 128.  This makes the HTML
  and\n    DocBook output much more readable and more easily editable.\n\n    + Removed
  sgmlHexEntity, sgmlDecimalEntity, sgmlNamedEntity, and\n      sgmlCharacterEntity
  regexes from Text.Pandoc.Shared.\n    + Renamed escapeSGMLChar to escapeCharForXML.
  \ Added escapeStringForXML.\n      Moved both functions to Text.Pandoc.Writers.Docbook.\n
  \   + Added characterReference parser to Text.Pandoc.CharacterReferences.\n      This
  parses a string and return a unicode character.\n    + Rewrote decodeCharacterReferences
  to use the new parser instead of\n      Text.Regex.\n    + Added new charRef parser
  for Markdown and HTML, which replaces the\n      old 'entity' parser. Added '&'
  as a special character in Markdown reader.\n    + Modified HTML and Markdown readers
  to call decodeEntities on all raw\n      strings (e.g. authors, dates, link titles),
  to ensure that no\n      unprocessed entities are included in the native representation
  of\n      the document.  (In the HTML reader, most of this work is done by a\n      change
  in extractAttributeName.)\n    + In XML and Markdown output, escape unicode nonbreaking
  space as '&nbsp;',\n      since a unicode non-breaking space is impossible to distinguish
  visually\n      from a regular space.  (Resolves Issue #3.)\n    + Removed encodeEntitiesNumerical.\n
  \   + Use Data.Map for entityTable and (new) reverseEntityTable, for a\n      slight
  performance boost over the old association list.\n    + Removed unneeded decodeEntities
  from 'str' parser in HTML and\n      Markdown readers.\n\n  * Text.Pandoc.UTF8:
  \ Renamed encodeUTF8 to toUTF8, decodeUTF8 to\n    fromUTF8, for clarity.\n\n  *
  Replaced old haskell98 module names replaced by hierarchical module\n    names,
  e.g. List by Data.List.  Removed haskell98 from dependencies\n    in pandoc.cabal,
  and added mtl (needed for state monad). Substituted\n    xhtml for html.\n\n  *
  Refactored and cleaned up character escaping in writers, using\n    backslashEscapes
  and escapeStringUsing functions.\n\n  * Instead of adding \"\\n\\n\" to the end
  of an input string in Main.hs,\n    this is now done in the readers. This makes
  the libraries behave\n    the way you'd expect from the pandoc program. Resolves
  Issue #10.\n\n  * URLs and email addresses in autolinks are now typeset as Code.\n\n
  \ * In Main.hs, changed putStr to putStrLn -- mainly because MacOS X\n    doesn't
  display the whole output unless there's a line ending.\n\n  * Major code cleanup
  in all modules, for greater consistency, concision,\n    and readability.\n\n  *
  HTML reader:\n\n    + Fixed several bugs (extractTagType, attribute parsing).\n
  \   + Remove Null blocks in lists of blocks when possible.\n    + Allow HTML comments
  as raw HTML inline.\n\n  * Markdown reader:\n\n    + Ordered list items may no longer
  begin with uppercase letters, or\n      letters greater than 'n'.  (This prevents
  first initials and page\n      reference, e.g. 'p. 400', from being parsed as beginning
  lists.)\n      Also, numbers beginning list items may no longer end with ')',\n
  \     which is now allowed only after letters.  Note: These changes\n      may cause
  documents to be parsed differently. Users should take\n      care in upgrading.\n
  \   + Changed autoLink parsing to conform better to Markdown.pl's\n      behavior.
  <google.com> is not treated as a link, but\n      <http://google.com>, <ftp://google.com>,
  and <mailto:google@google.com>\n      are.\n    + Cleaned up handling of embedded
  quotes in link titles.  Now these are\n      stored as a '\"' character, not as
  '&quot;'.\n    + Use lookAhead parser for the 'first pass' (looking for reference
  keys),\n      instead of parsing normally, then using setInput to reset input.  This\n
  \     yields a slight performance boost.\n    + Fixed several bugs in smart quote
  recognition.\n    + Fixed bug in indentSpaces (which didn't properly handle\n      cases
  with mixed spaces and tabs).\n    + Consolidated 'text', 'special', and 'inline'
  into 'inline'.\n    + Fixed bug which allowed URL and title to be separated by multiple
  blank\n      lines in links and reference keys.  They can be on separate lines but\n
  \     can't have blank lines between them.\n    + Correctly handle bracketed text
  inside inline footnotes and links,using\n      new function inlinesInBalanced.  Resolves
  Issue #14.\n    + Fixed bug in footnotes: links in footnotes were not being\n      processed.
  Solution: three-stage parse. First, get all the\n      reference keys and add information
  to state. Next, get all the\n      notes and add information to state. (Reference
  keys may be needed\n      at this stage.) Finally, parse everything else.\n    +
  Replaced named constants like 'emphStart' with literals.\n    + Removed an extra
  occurance of escapedChar in definition of inline.\n\n  * RST reader:\n\n    + Allow
  the URI in a RST hyperlink target to start on the line\n      after the reference
  key.\n    + Added 'try' in front of 'string', where needed, or used a different\n
  \     parser.  This fixes a bug where ````` would not be correctly parsed as\n      a
  verbatim `.\n    + Fixed slow performance in parsing inline literals in RST reader.
  \ The\n      problem was that ``#`` was seen by 'inline' as a potential link or
  image.\n      Fix:  inserted 'notFollowedBy (char '`')' in link parsers.\n      Resolves
  Issue #8.\n    + Use lookAhead instead of getInput/setInput in RST reader.  Removed\n
  \     unneeded getState call, since lookAhead automatically saves and\n      restores
  the parser state.\n    + Allow hyperlink target URIs to be split over multiple lines,
  and\n      to start on the line after the reference. Resolves Issue #7.\n    + Fixed
  handling of autolinks.\n\n  * LaTeX reader:\n\n    + Replaced 'choice [(try (string
  ...), ...]' idiom with 'oneOfStrings',\n      for clarity.\n    + Added clauses
  for tilde and caret. Tilde is \\ensuremath{\\sim}, and\n      caret is \\^{}, not
  \\^ as before.\n    + Added parsing for \\url.\n    + Parse \\texttt{} as code,
  provided there's nothing fancy inside.\n\n  * HTML writer:\n\n    + Modified HTML
  writer to use the Text.XHtml library. This results\n      in cleaner, faster code,
  and it makes it easier to use Pandoc in\n      other projects, like wikis, which
  use Text.XHtml. Two functions are\n      now provided, writeHtml and writeHtmlString:
  the former outputs an\n      Html structure, the latter a rendered string. The S5
  writer is also\n      changed, in parallel ways (writeS5, writeS5String).\n    +
  The Html header is now written programmatically, so it has been\n      removed from
  the 'headers' directory. The S5 header is still\n      needed, but the doctype and
  some of the meta declarations have\n      been removed, since they are written programatically.
  This change\n      introduces a new dependency on the xhtml package.\n    + Fixed
  two bugs in email obfuscation involving improper escaping\n      of '&' in the <noscript>
  section and in --strict mode. Resolves\n      Issue #9.\n    + Fixed another bug
  in email obfuscation: If the text to be obfuscated\n      contains an entity, this
  needs to be decoded before obfuscation.\n      Thanks to thsutton for the patch.
  Resolves Issue #15.\n    + Changed the way the backlink is displayed in HTML footnotes.\n
  \     Instead of appearing on a line by itself, it now generally\n      appears
  on the last line of the note.  (Exception:  when the\n      note does not end with
  a Plain or Para block.) This saves space\n      and looks better.\n    + Added automatic
  unique identifiers to headers:\n      - The identifier is derived from the header
  via a scheme\n        documented in README.\n      - WriterState now includes a
  list of header identifiers and a table\n        of contents in addition to notes.\n
  \     - The function uniqueIdentifiers creates a list of unique identifiers\n        from
  a list of inline lists (e.g. headers).\n      - This list is part of WriterState
  and gets consumed by blockToHtml\n        each time a header is encountered.\n    +
  Include CSS for .strikethrough class in header only if strikethrough\n      text
  appears in the document.\n    + If the 'strict' option is specified, elements that
  do not appear in\n      standard markdown (like definition lists) are passed through
  as\n      raw HTML.\n    + Simplified treatment of autolinks, using pattern matching
  instead of\n      conditionals.\n\n  * Markdown writer:\n\n    + Links in markdown
  output are now printed as inline links by default,\n      rather than reference
  links.  A --reference-links option has been added\n      that forces links to be
  printed as reference links.  Resolves Issue #4.\n    + Use autolinks when possible.
  \ Instead of [site.com](site.com),\n      use <site.com>.\n\n  * LaTeX writer:\n\n
  \   + Rewrote to use the State monad. The preamble now includes only those\n      packages
  that are actually required, given the document's content.\n      Thus, for example,
  if strikeout is not used, ulem is not required.\n      Modified LaTeXHeader accordingly.\n
  \   + Modified LaTeX writer to insert '\\,' between consecutive quotes.\n    + Removed
  unused function tableRowColumnWidths.\n    + Simplified code for escaping special
  characters.\n    + Leave extra blank line after \\maketitle.\n    + Include empty
  '\\author{}' when no author specified to avoid LaTeX\n      errors.\n    + Include
  fancyvrb code in header only if needed -- that is, only\n      if there is actually
  code in a footnote.\n    + Use \\url{} for autolinks.\n    + Include [mathletters]
  option in ucs package, so that basic unicode\n      Greek letters will work correctly.\n\n
  \ * RST writer:  Force blank line before lists, so that sublists will\n    be handled
  correctly.\n\n  * Docbook writer:  Fixed a bug:  email links with text, like\n    [foo](me@bar.baz),
  were being incorrectly treated as autolinks.\n\n  * Removed Text.ParserCombinators.Pandoc
  and moved all its functions to\n    Text.Pandoc.Shared.\n\n  * Text.Pandoc.Shared:\n\n
  \   + Added defaultWriterOptions.\n    + Added writerTableOfContents to WriterOptions.\n
  \   + Added writerIgnoreNotes option to WriterOptions.  This is needed\n      for
  processing header blocks for a table of contents, since notes on\n      headers
  should not appear in the TOC.\n    + Added prettyprinting for native Table format.\n
  \   + Removed some unneeded imports.\n    + Moved escape and nullBlock parsers from\n
  \     Text.ParserCombinators.Pandoc, since the latter is for\n      general-purpose
  parsers that don't depend on Text.Pandoc.Definition.\n    + Moved isHeaderBlock
  from Text.Pandoc.Writers.HTML.\n    + Moved Element, headerAtLeast, and hierarchicalize
  from Docbook\n      writer, because HTML writer now uses these in constructing a
  table\n      of contents.\n    + Added clauses for new inline elements (Strikeout,
  Superscript,\n      Subscript) to refsMatch.\n    + Removed backslashEscape; added
  new functions escapeStringUsing and\n      backslashEscapes.\n    + Moved failIfStrict
  from markdown reader, since it is now used also\n      by the HTML reader.\n    +
  Added a 'try' to the definition of indentSpaces.\n    + In definition of 'reference',
  added check to make sure it's not a note\n      reference.\n    + Added functions:
  camelCaseToHyphenated, toRomanNumeral,\n      anyOrderedListMarker, orderedListmarker,
  orderedListMarkers,\n      charsInBalanced', withHorizDisplacement, romanNumeral\n
  \   + Fixed a bug in the anyLine parser. Previously it would parse an empty\n      string
  \"\", but it should fail on an empty string, or we get an error\n      when it is
  used inside \"many\" combinators.\n    + Removed followedBy' parser, replacing it
  with the lookAhead parser from\n      Parsec.\n    + Added some needed 'try's before
  multicharacter parsers, especially in\n      'option' contexts.\n    + Removed the
  'try' from the 'end' parser in 'enclosed', so that\n      'enclosed' behaves like
  'option', 'manyTill', etc.\n    + Added lineClump parser, which parses a raw line
  block up to and\n      including any following blank lines.\n    + Renamed parseFromStr
  to parseFromString.\n    + Added a 'try' to the 'end' parser in 'enclosed'.  This
  makes errors in\n      the use of 'enclosed' less likely. Removed some now-unnecessary
  'try's\n      in calling code.\n    + Removed unneeded 'try' in blanklines.\n    +
  Removed endsWith function and rewrote calling functions to use\n      isSuffixOf
  instead.\n    + Added >>~ combinator.\n    + Fixed bug in normalizeSpaces:  Space:Str
  \"\":Space should compress to\n      Space.\n\n  * Refactored runtests.pl; added
  separate tests for tables.\n\n  * Shell scripts:\n\n    + Added -asxhtml flag to
  tidy in html2markdown. This will\n      perhaps help the parser, which expects closing
  tags.\n    + Modified markdown2pdf to run pdflatex a second time if --toc or\n      --table-of-contents
  was specified; otherwise the table of\n      contents won't appear.\n    + Modified
  markdown2pdf to print a helpful message if the 'ulem'\n      LaTeX package is required
  and not found.\n\n  * Changes to build process:\n\n    + Dropped support for compilation
  with GHC 6.4.  GHC 6.6 or higher\n      is now required.\n    + Removed cabalize
  and Pandoc.cabal.in. The repository now contains\n      pandoc.cabal itself.\n    +
  Pandoc.cabal has been changed to pandoc.cabal, because HackageDB\n      likes the
  cabal file to have the same name as the tarball.\n    + Expanded and revised the
  package description in pandoc.cabal.\n      Revised the package synopsis.\n    +
  The tarball built by 'make tarball' now contains files built from\n      templates
  (including man pages and shell scripts), so pandoc can\n      be built directly
  using Cabal tools, without preprocessing.\n    + Executable binaries are now stripped
  before installing.\n    + Man pages are now generated from markdown sources, using
  pandoc's\n      man page writer.\n    + Use HTML version of README (instead of RTF)
  in Mac OS X installer.\n    + Instead of testing for the existence of a pandoc symlink
  in build-exec,\n      use ln -f.\n\n  * Documentation:\n\n    + Updated README and
  man pages with information on new features.\n    + Updated INSTALL instructions
  with some useful clarifications and\n      links.\n    + Updated web content.\n\n
  \ * Added FreeBSD port.\n\n  [ Recai Oktaş ]\n\n  * debian/control:\n\n    + Changed
  pandoc's Build-Depends to include libghc6-mtl-dev and\n      libghc6-xhtml-dev.
  \ Removed libghc6-html-dev.\n    + Suggest texlive-latex-recommended | tetex-extra
  instead of\n      tetex-bin.  This brings in fancyvrb and unicode support.\n\n --
  Recai Oktaş <roktas@debian.org>  Tue, 16 Jan 2007 00:37:21 +0200\n\npandoc (0.3)
  unstable; urgency=low\n\n  [ John MacFarlane ]\n\n  * Changes in pandoc options:\n\n
  \   + Allow options to follow or precede arguments.\n    + Changed '--smartypants'
  to '--smart' and adjusted symbols accordingly.\n    + Added '--strict' option.\n
  \   + Added '-o/--output' option.\n    + Added '--dump-args' and '--ignore-args'
  options (for use in wrappers).\n    + Modified '-v' and '-h' output to go to STDERR,
  not STDOUT, and return\n      error conditions.  This is helpful for writing wrappers.\n
  \   + Added copyright message to '-v' output, modeled after FSF messages.\n    +
  Reformatted usage message so that it doesn't wrap illegibly.\n    + Removed extra
  blanks after '-h' and '-D' output.\n\n  * Added docbook writer.\n\n  * Added implicit
  setting of default input and output format based\n    on input and output filename
  extensions.  These defaults are\n    overridden if explicit input and output formats
  are specified using\n    '-t', '-f', '-r', or '-w' options.  Documented in pandoc(1)
  man page\n    and README.\n\n  * Allow ordered list items to begin with (single)
  letters, as well\n    as numbers.  The list item marker may now be terminated either
  by\n    '.' or by ')'.  This extension to standard markdown is documented\n    in
  README.\n\n  * Revised footnote syntax.  (See README for full details.)  The\n    '[^1]'
  format now standard in markdown extensions is supported,\n    as are inline footnotes
  with this syntax: '^[My note.]'.\n    The earlier footnote syntax '^(1)' is no longer
  supported.\n\n  * Improved HTML representation of footnotes.  All footnotes\n    are
  now auto-numbered and appear in an ordered list at the\n    end of the HTML document.
  \ Since the default appearance is now\n    acceptable, the old footnote styles have
  been removed from the\n    HTML header.\n\n  * Bug fixes:\n\n    + Fixed a serious
  bug in the markdown, LaTeX, and RST readers.\n      These readers ran 'runParser'
  on processed chunks of text to handle\n      embedded block lists in lists and quotation
  blocks.  But then\n      any changes made to the parser state in these chunks was
  lost,\n      as the state is local to the parser.  So, for example, footnotes\n
  \     didn't work in quotes or list items.  The fix:  instead of calling\n      runParser
  on some raw text, use setInput to make it the input, then\n      parse it, then
  use setInput to restore the input to what it was\n      before.  This is shorter
  and more elegant, and it fixes the problem.\n    + Fixed bug in notFollowedBy' combinator
  (adding 'try' before\n      'parser').  Adjusted code that uses this combinator
  accordingly.\n    + Fixed bug in RTF writer that caused improper indentation on\n
  \     footnotes occurring in indented blocks like lists.\n    + Fixed parsing of
  metadata in LaTeX reader.  Now the title, author,\n      and date are parsed correctly.
  \ Everything else in the preamble\n      is skipped.\n    + Modified escapedChar
  in LaTeX reader to allow a '\\' at the end of a\n      line to count as escaped
  whitespace.\n    + Modified LaTeX reader to produce inline links rather than reference\n
  \     links.  Otherwise, links in footnotes aren't handled properly.\n    + Fixed
  handling of titles in links in Markdown reader, so that\n      embedded quotation
  marks are now handled properly.\n    + Fixed Markdown reader's handling of embedded
  brackets in links.\n    + Fixed Markdown reader so that it only parses bracketed
  material\n      as a reference link if there is actually a corresponding key.\n
  \   + Revised inline code parsing in Markdown reader to conform to\n      markdown
  standard.  Now any number of `s can begin inline code,\n      which will end with
  the same number of `s.  For example, to\n      have two backticks as code, write
  ``` `` ```.  Modified Markdown\n      writer accordingly.\n    + Fixed bug in text-wrapping
  routine in Markdown and RST writers.\n      Now LineBreaks no longer cause wrapping
  problems.\n    + Supported hexadecimal numerical entity references as well as\n
  \     decimal ones.\n    + Fixed bug in Markdown reader's handling of underscores
  and other\n      inline formatting markers inside reference labels:  for example,\n
  \     in '[A_B]: /url/a_b', the material between underscores was being\n      parsed
  as emphasized inlines.\n    + Changed Markdown reader's handling of backslash escapes
  so that\n      only non-alphanumeric characters can be escaped.  Strict mode\n      follows
  Markdown.pl in only allowing a select group of punctuation\n      characters to
  be escaped.\n    + Modified HTML reader to skip a newline following a <br> tag.\n
  \     Otherwise the newline will be treated as a space at the beginning\n      of
  the next line.\n\n  * Made handling of code blocks more consistent.  Previously,
  some\n    readers allowed trailing newlines, while others stripped them.\n    Now,
  all readers strip trailing newlines in code blocks. Writers\n    insert a newline
  at the end of code blocks as needed.\n\n  * Modified readers to make spacing at
  the end of output more consistent.\n\n  * Minor improvements to LaTeX reader:\n\n
  \   + '\\thanks' now treated like a footnote.\n    + Simplified parsing of LaTeX
  command arguments and options.\n      commandArgs now returns a list of arguments
  OR options (in\n      whatever order they appear).  The brackets are included, and\n
  \     a new stripFirstAndLast function is provided to strip them off\n      when
  needed.  This fixes a problem in dealing with \\newcommand\n      and \\newenvironment.\n\n
  \ * Revised RTF writer:\n\n    + Default font is now Helvetica.\n    + An '\\f0'
  is added to each '\\pard', so that font resizing works\n      correctly.\n\n  *
  Moved handling of \"smart typography\" from the writers to the Markdown\n    and
  LaTeX readers.  This allows great simplification of the writers\n    and more accurate
  smart quotes, dashes, and ellipses.  DocBook can\n    now use '<quote>'.  The '--smart'
  option now toggles an option in\n    the parser state rather than a writer option.
  \ Several new kinds\n    of inline elements have been added: Quoted, Ellipses, Apostrophe,\n
  \   EmDash, EnDash.\n\n  * Changes in HTML writer:\n\n    + Include title block
  in header even when title is null.\n    + Made javascript obfuscation of emails
  even more obfuscatory,\n      by combining it with entity obfuscation.\n\n  * Changed
  default ASCIIMathML text color to black.\n\n  * Test suite:\n\n    + Added --strip-trailing-cr
  option to diff in runtests.pl, for\n      compatibility with Windows.\n    + Added
  regression tests with footnotes in quote blocks and lists.\n\n  * Makefile changes:\n\n
  \   + osx-pkg target creates a Mac OS X package (directory). New osx\n      directory
  contains files needed for construction of the package.\n    + osx-dmg target creates
  a compressed disk image containing the package.\n    + win-pkg target creates Windows
  binary package.\n    + tarball target creates distribution source tarball.\n    +
  website target generates pandoc's website automatically, including\n      demos.
  \ New 'web' directory containts files needed for construction\n      of the website
  (which will be created as the 'pandoc' subdirectory\n      of 'web').\n    + Makefile
  checks to see if we're running Windows/Cygwin; if so,\n      a '.exe' extension
  is added to each executable in EXECS.\n\n  * Removed all wrappers except markdown2pdf
  and html2markdown.\n\n  * Added new wrapper hsmarkdown, to be used as a drop-in
  replacement\n    for Markdown.pl.  hsmarkdown calls pandoc with the '--strict'\n
  \   option and disables other options.\n\n  * Added code to html2markdown that tries
  to determine the character\n    encoding of an HTML file, by parsing the \"Content-type\"
  meta tag.\n\n    + If the encoding can't be determined, then if the content is local,\n
  \     the local encoding is used; if it comes from a URL, UTF-8 is used\n      by
  default.\n    + If input is from STDIN, don't try to determine character encoding.\n
  \   + Encoding can be specified explicitly using '-e' option.\n\n  * Improved warning
  messages in wrappers:\n\n    + Print warning if iconv not available\n    + More
  user-friendly error messages in markdown2pdf, when\n      pdflatex fails.\n\n  *
  Code cleanup:\n\n    + Renamed 'Text/Pandoc/HtmlEntities' module to\n      'Text/Pandoc/Entities'.
  Also changed function names so as\n      not to be HTML-specific.\n    + Refactored
  SGML string escaping functions from HTML and Docbook\n      writers into Text/Pandoc/Shared.
  \ (escapeSGML, stringToSGML)\n    + Removed 'BlockQuoteContext' from ParserContext,
  as it isn't\n      used anywhere.\n    + Removed splitBySpace and replaced it with
  a general, polymorphic\n      splitBy function.\n    + Refactored LaTeX reader for
  clarity (added isArg function).\n    + Converted some CR's to LF's in src/ui/default/print.css.\n
  \   + Added license text to top of source files.\n    + Added module data for haddock
  to source files.\n    + Reformatted code for consistency.\n\n  * Rewrote documentation
  and man pages.  Split README into INSTALL\n    and README.\n\n  * Split LICENSE
  into COPYING and COPYRIGHT.\n\n  * Removed TODO, since we now maintain ToDo on the
  wiki.\n\n  * Made COPYRIGHT in top level a symlink to debian/copyright, to avoid\n
  \   duplication.\n\n  [ Recai Oktaş ]\n\n  * Revamped build process to conform to
  debian standards and created\n    a proper debian package.  Closes: #391666.\n\n
  \ * Modified build process to support GHC 6.6.\n\n    + The package can still be
  compiled using GHC 6.4.2, though because\n      of dependencies the \"make deb\"
  target works only with GHC 6.6+.\n    + The script 'cabalize' is used to create
  an appropriate\n      'Pandoc.cabal' from 'Pandoc.cabal.in', depending on the GHC
  and\n      Cabal versions.\n\n  * Refactored template processing (fillTemplates.pl).\n\n
  \ * Modified wrapper scripts to make them more robust and portable.\n    To avoid
  code duplication and ensure consistency, wrappers are\n    generated via a templating
  system from templates in src/wrappers.\n\n    + Wrappers now accept multiple filenames,
  when appropriate.\n    + Spaces and tabs allowed in filenames.\n    + getopts shell
  builtin is used for portable option parsing.\n    + Improved html2markdown's web
  grabber code, making it more robust,\n      configurable and verbose.  Added '-e',
  '-g' options.\n\n -- Recai Oktaş <roktas@debian.org>  Fri, 05 Jan 2007 09:41:19
  +0200\n\npandoc (0.2) unstable; urgency=low\n\n  * Fixed unicode/utf-8 translation\n\n
  -- John MacFarlane <jgm@berkeley.edu>  Mon,  14 Aug 2006 00:00:00 -0400\n\npandoc
  (0.1) unstable; urgency=low\n\n  * Initial creation of debian package\n\n -- John
  MacFarlane <jgm@berkeley.edu>  Mon,  14 Aug 2006 00:00:00 -0400\n"
changelog-type: text
description: "% Pandoc User's Guide\n% John MacFarlane\n% March 20, 2010\n\nPandoc
  is a [Haskell] library for converting from one markup format to\nanother, and a
  command-line tool that uses this library. It can read\n[markdown] and (subsets of)
  [reStructuredText], [HTML], and [LaTeX]; and\nit can write plain text, [markdown],
  [reStructuredText], [HTML], [LaTeX],\n[ConTeXt], [RTF], [DocBook XML], [OpenDocument
  XML], [ODT], [GNU Texinfo],\n[MediaWiki markup], [groff man] pages, and [S5] HTML
  slide shows.\nPandoc's enhanced version of markdown includes syntax for footnotes,\ntables,
  flexible ordered lists, definition lists, delimited code blocks,\nsuperscript, subscript,
  strikeout, title blocks, automatic tables of\ncontents, embedded LaTeX math, and
  markdown inside HTML block elements.\n(These enhancements can be disabled if a drop-in
  replacement for\n`Markdown.pl` is desired.)\n\nIn contrast to most existing tools
  for converting markdown to HTML, which\nuse regex substitutions, Pandoc has a modular
  design: it consists of a\nset of readers, which parse text in a given format and
  produce a native\nrepresentation of the document, and a set of writers, which convert\nthis
  native representation into a target format. Thus, adding an input\nor output format
  requires only adding a reader or writer.\n\n[markdown]: http://daringfireball.net/projects/markdown/\n[reStructuredText]:
  http://docutils.sourceforge.net/docs/ref/rst/introduction.html\n[S5]: http://meyerweb.com/eric/tools/s5/\n[HTML]:
  \ http://www.w3.org/TR/html40/\n[LaTeX]: http://www.latex-project.org/\n[ConTeXt]:
  http://www.pragma-ade.nl/ \n[RTF]:  http://en.wikipedia.org/wiki/Rich_Text_Format\n[DocBook
  XML]:  http://www.docbook.org/\n[OpenDocument XML]: http://opendocument.xml.org/
  \n[ODT]: http://en.wikipedia.org/wiki/OpenDocument\n[MediaWiki markup]: http://www.mediawiki.org/wiki/Help:Formatting\n[groff
  man]: http://developer.apple.com/DOCUMENTATION/Darwin/Reference/ManPages/man7/groff_man.7.html\n[Haskell]:
  \ http://www.haskell.org/\n[GNU Texinfo]: http://www.gnu.org/software/texinfo/\n\n©
  2006-2010 John MacFarlane (jgm at berkeley dot edu). Released under the\n[GPL],
  version 2 or greater.  This software carries no warranty of\nany kind.  (See COPYRIGHT
  for full copyright and warranty notices.)\nOther contributors include Recai Oktaş,
  Paulo Tanimoto, Peter Wang,\nAndrea Rossato, Eric Kow, infinity0x, Luke Plant, shreevatsa.public,\nrodja.trappe,
  Bradley Kuhn, thsutton, Justin Bogner.\n\n[GPL]: http://www.gnu.org/copyleft/gpl.html
  \"GNU General Public License\"\n\nUsing Pandoc\n============\n\nIf you run `pandoc`
  without arguments, it will accept input from\nstdin.  If you run it with file names
  as arguments, it will take input\nfrom those files.  By default, `pandoc` writes
  its output to stdout.[^1]\nIf you want to write to a file, use the `-o` option:\n\n
  \   pandoc -o hello.html hello.txt\n\n[^1]:  The exception is for `odt`.  Since
  this is a binary output format,\n       an output file must be specified explicitly.\n\nNote
  that you can specify multiple input files on the command line.\n`pandoc` will concatenate
  them all (with blank lines between them)\nbefore parsing:\n\n    pandoc -s ch1.txt
  ch2.txt refs.txt > book.html\n\n(The `-s` option here tells `pandoc` to produce
  a standalone HTML file,\nwith a proper header, rather than a fragment.  For more
  details on this\nand many other command-line options, see below.)\n\nInstead of
  a filename, you can specify an absolute URI. In this\ncase pandoc will attempt to
  download the content via HTTP:\n\n    pandoc -f html -t markdown http://www.fsf.org\n\nThe
  format of the input and output can be specified explicitly using\ncommand-line options.
  \ The input format can be specified using the\n`-r/--read` or `-f/--from` options,
  the output format using the\n`-w/--write` or `-t/--to` options.  Thus, to convert
  `hello.txt` from\nmarkdown to LaTeX, you could type:\n\n    pandoc -f markdown -t
  latex hello.txt\n\nTo convert `hello.html` from html to markdown:\n\n    pandoc
  -f html -t markdown hello.html\n\nSupported output formats include `markdown`, `latex`,
  `context`\n(ConTeXt), `html`, `rtf` (rich text format), `rst`\n(reStructuredText),
  `docbook` (DocBook XML), `opendocument`\n(OpenDocument XML), `odt` (OpenOffice text
  document), `texinfo`, (GNU\nTexinfo), `mediawiki` (MediaWiki markup), `man` (groff
  man), and `s5`\n(which produces an HTML file that acts like powerpoint).\n\nSupported
  input formats include `markdown`, `html`, `latex`, and `rst`.\nNote that the `rst`
  reader only parses a subset of reStructuredText\nsyntax. For example, it doesn't
  handle tables, option lists, or\nfootnotes. But for simple documents it should be
  adequate. The `latex`\nand `html` readers are also limited in what they can do.\n\nIf
  you don't specify a reader or writer explicitly, `pandoc` will\ntry to determine
  the input and output format from the extensions of\nthe input and output filenames.
  \ Thus, for example,\n\n    pandoc -o hello.tex hello.txt\n\nwill convert `hello.txt`
  from markdown to LaTeX.  If no output file\nis specified (so that output goes to
  stdout), or if the output file's\nextension is unknown, the output format will default
  to HTML.\nIf no input file is specified (so that input comes from stdin), or\nif
  the input files' extensions are unknown, the input format will\nbe assumed to be
  markdown unless explicitly specified.\n\nCharacter encodings\n-------------------\n\nAll
  input is assumed to be in the UTF-8 encoding, and all output\nis in UTF-8 (unless
  your version of pandoc was compiled using\nGHC 6.12 or higher, in which case the
  local encoding will be used).\nIf your local character encoding is not UTF-8 and
  you use\naccented or foreign characters, you should pipe the input and output\nthrough
  [`iconv`]. For example,\n\n    iconv -t utf-8 source.txt | pandoc | iconv -f utf-8
  > output.html\n\nwill convert `source.txt` from the local encoding to UTF-8, then\nconvert
  it to HTML, then convert back to the local encoding,\nputting the output in `output.html`.\n\nWrappers\n========\n\n`markdown2pdf`\n--------------\n\nThe
  standard Pandoc installation includes `markdown2pdf`, a wrapper\naround `pandoc`
  and `pdflatex` that produces PDFs directly from markdown\nsources. The default behavior
  of `markdown2pdf` is to create a file with\nthe same base name as the first argument
  and the extension `pdf`; thus,\nfor example,\n\n    markdown2pdf sample.txt endnotes.txt\n\nwill
  produce `sample.pdf`.  (If `sample.pdf` exists already,\nit will be backed up before
  being overwritten.)  An output file\nname can be specified explicitly using the
  `-o` option:\n\n    markdown2pdf -o book.pdf chap1 chap2\n\nIf no input file is
  specified, input will be taken from stdin.\nAll of `pandoc`'s options will work
  with `markdown2pdf` as well.\n\n`markdown2pdf` assumes that `pdflatex` is in the
  path.  It also\nassumes that the following LaTeX packages are available:\n`unicode`,
  `fancyhdr` (if you have verbatim text in footnotes),\n`graphicx` (if you use images),
  `array` (if you use tables),\nand `ulem` (if you use strikeout text).  If they are
  not already\nincluded in your LaTeX distribution, you can get them from\n[CTAN].
  A full [TeX Live] or [MacTeX] distribution will have all of\nthese packages.\n\n`hsmarkdown`\n------------\n\nA
  user who wants a drop-in replacement for `Markdown.pl` may create\na symbolic link
  to the `pandoc` executable called `hsmarkdown`. When\ninvoked under the name `hsmarkdown`,
  `pandoc` will behave as if the\n`--strict` flag had been selected, and no command-line
  options will be\nrecognized. However, this approach does not work under Cygwin,
  due to\nproblems with its simulation of symbolic links.\n\n[Cygwin]:  http://www.cygwin.com/
  \n[`iconv`]: http://www.gnu.org/software/libiconv/\n[CTAN]: http://www.ctan.org
  \"Comprehensive TeX Archive Network\"\n[TeX Live]: http://www.tug.org/texlive/\n[MacTeX]:
  \  http://www.tug.org/mactex/\n\nCommand-line options\n====================\n\nVarious
  command-line options can be used to customize the output.\nFor further documentation,
  see the `pandoc(1)` man page.\n\n`-f`, `--from`, `-r`, or `--read` *format*\n:   specifies
  the input format (the format Pandoc will be converting\n    *from*). *format* can
  be `native`, `markdown`, `rst`, `html`, or\n    `latex`.  (`+lhs` can be appended
  to indicate that the input should\n    be treated as literate Haskell source.  See\n
  \   [Literate Haskell support](#literate-haskell-support), below.)\n\n`-t`, `--to`,
  `-w`, or `--write` *format*\n:   specifies the output format -- the format Pandoc
  will\n    be converting *to*. *format* can be `native`, `html`, `s5`,\n    `docbook`,
  `opendocument`, `latex`, `context`, `markdown`, `man`,\n    `plain`, `rst`, and
  `rtf`. (`+lhs` can be appended to indicate that\n    the output should be treated
  as literate Haskell source. See\n    [Literate Haskell support](#literate-haskell-support),
  below.)\n\n`-s` or `--standalone`\n:   indicates that a standalone document is to
  be produced (with\n    appropriate headers and footers), rather than a fragment.\n\n`-o`
  or `--output` *filename*\n:   sends output to *filename*. If this option is not
  specified,\n    or if its argument is `-`, output will be sent to stdout.\n    (Exception:
  if the output format is `odt`, output to stdout\n    is disabled.)\n\n`-p` or `--preserve-tabs`\n:
  \  causes tabs in the source text to be preserved, rather than converted\n    to
  spaces (the default).\n\n`--tab-stop` *tabstop*\n:   sets the number of spaces per
  tab to *tabstop* (defaults to 4).\n\n`--strict`\n:   specifies that strict markdown
  syntax is to be used, without\n    pandoc's usual extensions and variants (described
  below).  When the\n    input format is HTML, this means that constructs that have
  no\n    equivalents in standard markdown (e.g. definition lists or strikeout\n    text)
  will be parsed as raw HTML.\n\n`--reference-links`\n:   causes reference-style links
  to be used in markdown \n    and reStructuredText output.  By default inline links
  are used.\n\n`-R` or `--parse-raw`\n:   causes the HTML and LaTeX readers to parse
  HTML codes and LaTeX\n    environments that it can't translate as raw HTML or LaTeX.
  Raw HTML can\n    be printed in markdown, reStructuredText, HTML, and S5 output;
  raw LaTeX\n    can be printed in markdown, reStructuredText, LaTeX, and ConTeXt
  output.\n    The default is for the readers to omit untranslatable HTML codes and\n
  \   LaTeX environments. (The LaTeX reader does pass through untranslatable\n    LaTeX
  *commands*, even if `-R` is not specified.)\n\n`-C` or `--custom-header` *filename*\n:
  \  can be used to specify a custom document header. Implies `--standalone`.\n    *Note:
  this option is deprecated. Use of `--template` is preferred.*\n\n`--toc` or `--table-of-contents`\n:
  \  includes an automatically generated table of contents (or, in the\n    case of
  `latex`, `context`, and `rst`, an instruction to create\n    one) in the output
  document. This option has no effect with `man`,\n    `docbook`, or `s5` output formats.\n\n`--base-header-level`
  *level*\n:   specifies the base level for headers (defaults to 1).\n\n`--template=`*file*\n:
  \  uses *file* as a custom template for the generated document. Implies\n    `-s`.
  See [Templates](#templates) below for a description\n    of template syntax. If
  this option is not used, a default\n    template appropriate for the output format
  will be used. See also\n    `-D/--print-default-template`.\n\n`-V` *key=val*, `--variable=`*key:val*\n:
  \  sets the template variable *key* to the value *val* when rendering the\n    document
  in standalone mode. This is only useful when the\n    `--template` option is used
  to specify a custom template, since\n    pandoc automatically sets the variables
  used in the default\n    templates.\n\n`-c` or `--css` *filename*\n:   allows the
  user to specify a custom stylesheet that will be linked to\n    in HTML and S5 output.
  \ This option can be used repeatedly to include\n    multiple stylesheets. They
  will be included in the order specified.\n    Implies `--standalone`.\n\n`-H` or
  `--include-in-header` *filename*\n:   includes the contents of *filename* (verbatim)
  at the end of the\n    document header. This can be used, for example, to include
  special\n    CSS or javascript in HTML documents.  This option can be used\n    repeatedly
  to include multiple files in the header.  They will be\n    included in the order
  specified.  Implies `--standalone`.\n\n`-B` or `--include-before-body` *filename*\n:
  \  includes the contents of *filename* (verbatim) at the beginning of\n    the document
  body (e.g. after the `<body>` tag in HTML, or the\n    `\\begin{document}` command
  in LaTeX). This can be used to include\n    navigation bars or banners in HTML documents.
  This option can be\n    used repeatedly to include multiple files. They will be
  included in\n    the order specified.  Implies `--standalone`.\n\n`-A` or `--include-after-body`
  *filename*\n:   includes the contents of *filename* (verbatim) at the end of\n    the
  document body (before the `</body>` tag in HTML, or the\n    `\\end{document}` command
  in LaTeX). This option can be be used\n    repeatedly to include multiple files.
  They will be included in the\n    order specified.  Implies `--standalone`.\n\n`--reference-odt`
  *filename*\n:   uses the specified file as a style reference in producing an ODT.\n
  \   For best results, the reference ODT should be a modified version\n    of an
  ODT produced using pandoc.  The contents of the reference ODT\n    are ignored,
  but its stylesheets are used in the new ODT. If no\n    reference ODT is specified
  on the command line, pandoc will look\n    for a file `reference.odt` in the user
  data directory (see\n    `--data-dir`, below). If it is not found there, sensible
  defaults\n    will be used.\n\n`-D` or `--print-default-template` *format*\n:   prints
  the default template for an output *format*. (See `-t`\n    for a list of possible
  *format*s.)\n\n`-T` or `--title-prefix` *string*\n:   includes *string* as a prefix
  at the beginning of the title that\n    appears in the HTML header (but not in the
  title as it appears at\n    the beginning of the HTML body). (See below on\n    [Title
  Blocks](#title-blocks).)  Implies `--standalone`.\n\n`-S` or `--smart`\n:   causes
  `pandoc` to produce typographically correct output, along the\n    lines of John
  Gruber's [Smartypants]. Straight quotes are converted\n    to curly quotes, `---`
  to dashes, and `...` to ellipses. Nonbreaking\n    spaces are inserted after certain
  abbreviations, such as \"Mr.\"\n    (Note: This option is only significant when
  the input format is\n    `markdown`. It is selected automatically when the output
  format is\n    `latex` or `context`.)\n\n`-m`*[url]* or `--latexmathml`*[=url]*\n:
  \  causes `pandoc` to use the [LaTeXMathML] script to display\n    TeX math in HTML
  or S5. If a local copy of `LaTeXMathML.js` is\n    available on the webserver where
  the page will be viewed, provide a\n    *url* and a link will be inserted in the
  generated HTML or S5. If\n    no *url* is provided, the contents of the script will
  be inserted\n    directly; this provides portability at the price of efficiency.
  If\n    you plan to use math on several pages, it is much better to link to\n    a
  copy of `LaTeXMathML.js`, which can be cached.  (See `--jsmath`,\n    `--gladtex`,
  and `--mimetex` for alternative ways of dealing with\n    math in HTML.)\n\n`--mathml`\n:
  \  causes `pandoc` to convert all TeX math to MathML.\n    In standalone mode, a
  small javascript will be inserted that allows\n    the MathML to be viewed on some
  browsers.\n\n`--jsmath`*=[url]*\n:   causes `pandoc` to use the [jsMath] script
  to display\n    TeX math in HTML or S5. The *url* should point to the jsMath load\n
  \   script (e.g. `jsMath/easy/load.js`). If it is provided, a link to it\n    will
  be included in the header of standalone HTML documents.\n    (See `--latexmathml`,
  `--mimetex`, and `--gladtex` for alternative\n    ways of dealing with math in HTML.)\n\n`--gladtex`*[=url]*\n:
  \  causes TeX formulas to be enclosed in `<eq>` tags in HTML or S5 output.\n    This
  output can then be processed by [gladTeX] to produce links to\n    images with the
  typeset formulas.  (See `--latexmathml`, `--jsmath`, and\n    `--mimetex` for alternative
  ways of dealing with math in HTML.)\n\n`--mimetex`*[=url]*\n:   causes TeX formulas
  to be replaced by `<img>` tags linking to the\n    [mimeTeX] CGI script, which will
  produce images with the typeset\n    formulas.  (See `--latexmathml`, `--jsmath`,
  and `--gladtex` for alternative\n    ways of dealing with math in HTML.)\n\n`-i`
  or `--incremental`\n:   causes all lists in S5 output to be displayed incrementally
  by\n    default (one item at a time). The normal default is for lists to be\n    displayed
  all at once.\n\n`--xetex`\n:   creates LaTeX outut suitable for processing by XeTeX.\n\n`-N`
  or `--number-sections`\n:   causes sections to be numbered in LaTeX, ConTeXt, or
  HTML output.\n    By default, sections are not numbered.\n\n`--no-wrap`\n:   disables
  text-wrapping in output.  By default, text is wrapped\n    appropriately for the
  output format.\n\n`--sanitize-html`\n:   sanitizes HTML (in markdown or HTML input)
  using a whitelist.\n    Unsafe tags are replaced by HTML comments; unsafe attributes\n
  \   are omitted. URIs in links and images are also checked against a\n    whitelist
  of URI schemes.\n\n`--email-obfuscation`*=none|javascript|references*\n:   specifies
  a method for obfuscating `mailto:` links in HTML documents.\n    *none* leaves `mailto:`
  links as they are.  *javascript* obfuscates\n    them using javascript. *references*
  obfuscates them by printing their\n    letters as decimal or hexadecimal character
  references.  If `--strict`\n    is specified, *references* is used regardless of
  the presence\n    of this option.\n\n`--id-prefix`*=string*\n:   specifies a prefix
  to be added to all automatically generated identifiers\n    in HTML output.  This
  is useful for preventing duplicate identifiers\n    when generating fragments to
  be included in other pages.\n\n`--indented-code-classes`*=classes*\n:   specifies
  classes to use for indented code blocks--for example,\n    `perl,numberLines` or
  `haskell`. Multiple classes may be separated\n    by spaces or commas.\n\n`--data-dir`*=directory*\n:
  \  specifies the user data directory to search for pandoc data files.\n    If this
  option is not specified, the default user data directory\n    will be used:\n\n
  \       $HOME/.pandoc\n\n    in unix and\n\n        C:\\Documents And Settings\\USERNAME\\Application
  Data\\pandoc\n\n    in Windows. A reference ODT, `templates` directory, `s5` directory\n
  \   placed in this directory will override pandoc's normal defaults.\n\n`--dump-args`\n:
  \  is intended to make it easier to create wrapper scripts that use\n    Pandoc.
  It causes Pandoc to dump information about the arguments\n    with which it was
  called to stdout, then exit. The first line\n    printed is the name of the output
  file specified using the `-o`\n    or `--output` option, or `-` if output would
  go to stdout. The\n    remaining lines, if any, list command-line arguments. These
  will\n    include the names of input files and any special options passed\n    after
  ` -- ` on the command line. So, for example,\n\n        pandoc --dump-args -o foo.html
  -s foo.txt \\\n          appendix.txt -- -e latin1\n\n    will cause the following
  to be printed to stdout:\n\n        foo.html foo.txt appendix.txt -e latin1\n\n`--ignore-args`\n:
  \  causes Pandoc to ignore all command-line arguments.\n    Regular Pandoc options
  are not ignored.  Thus, for example,\n\n        pandoc --ignore-args -o foo.html
  -s foo.txt -- -e latin1\n\n    is equivalent to\n\n        pandoc -o foo.html -s\n\n`-v`
  or `--version`\n:   prints the version number to STDERR.\n\n`-h` or `--help`\n:
  \  prints a usage message to STDERR.\n\n[Smartypants]: http://daringfireball.net/projects/smartypants/\n[LaTeXMathML]:
  http://math.etsu.edu/LaTeXMathML/\n[jsMath]:  http://www.math.union.edu/~dpvc/jsmath/\n[gladTeX]:
  \ http://www.math.uio.no/~martingu/gladtex/index.html\n[mimeTeX]: http://www.forkosh.com/mimetex.html
  \n\nTemplates\n=========\n\nWhen the `-s/--standalone` option is used, pandoc uses
  a template to\nadd header and footer material that is needed for a self-standing\ndocument.
  \ To see the default template that is used, just type\n\n    pandoc -D FORMAT\n\nwhere
  `FORMAT` is the name of the output format. A custom template\ncan be specified using
  the `--template` option.  You can also override\nthe system default templates for
  a given output format `FORMAT`\nby putting a file `templates/FORMAT.template` in
  the user data\ndirectory (see `--data-dir`, above).\n\nTemplates may contain *variables*.
  \ Variable names are sequences of\nalphanumerics, `-`, and `_`, starting with a
  letter.  A variable name\nsurrounded by `$` signs will be replaced by its value.
  \ For example,\nthe string `$title$` in\n\n    <title>$title$</title>\n\nwill be
  replaced by the document title.\n\nTo write a literal `$` in a template, use `$$`.\n\nSome
  variables are set automatically by pandoc.  These vary somewhat\ndepending on the
  output format, but include:\n\n`legacy-header`\n:   contents specified by `-C/--custom-header`\n`header-includes`\n:
  \  contents specified by `-H/--include-in-header` (may have multiple\n    values)\n`toc`\n:
  \  non-null value if `--toc/--table-of-contents` was specified\n`include-before`\n:
  \  contents specified by `-B/--include-before-body` (may have\n    multiple values)\n`include-after`\n:
  \  contents specified by `-A/--include-after-body` (may have\n    multiple values)\n`body`\n:
  \  body of document\n`title`\n:   title of document, as specified in title block\n`author`\n:
  \  author of document, as specified in title block (may have\n    multiple values)\n`date`\n:
  \  date of document, as specified in title block\n\nVariables may be set at the
  command line using the `-V/--variable`\noption. This allows users to include custom
  variables in their\ntemplates.\n\nTemplates may contain conditionals.  The syntax
  is as follows:\n\n    $if(variable)$\n    X\n    $else$\n    Y\n    $endif$\n\nThis
  will include `X` in the template if `variable` has a non-null\nvalue; otherwise
  it will include `Y`. `X` and `Y` are placeholders for\nany valid template text,
  and may include interpolated variables or other\nconditionals. The `$else$` section
  may be omitted.\n\nWhen variables can have multiple values (for example, `author`
  in\na multi-author document), you can use the `$for$` keyword:\n\n    $for(author)$\n
  \   <meta name=\"author\" content=\"$author$\" />\n    $endfor$\n\nYou can optionally
  specify a separator to be used between\nconsecutive items:\n\n    $for(author)$$author$$sep$,
  $endfor$\n\nPandoc's markdown vs. standard markdown\n=======================================\n\nIn
  parsing markdown, Pandoc departs from and extends [standard markdown]\nin a few
  respects.  Except where noted, these differences can\nbe suppressed by specifying
  the `--strict` command-line option.\n\n[standard markdown]:  http://daringfireball.net/projects/markdown/syntax\n
  \ \"Markdown syntax description\"\n\nBackslash escapes\n-----------------\n\nExcept
  inside a code block or inline code, any punctuation or space\ncharacter preceded
  by a backslash will be treated literally, even if it\nwould normally indicate formatting.
  \ Thus, for example, if one writes\n\n    *\\*hello\\**\n\none will get\n\n    <em>*hello*</em>\n\ninstead
  of\n\n    <strong>hello</strong>\n\nThis rule is easier to remember than standard
  markdown's rule,\nwhich allows only the following characters to be backslash-escaped:\n\n
  \   \\`*_{}[]()>#+-.!\n\nA backslash-escaped space is parsed as a nonbreaking space.
  \ It will\nappear in TeX output as '`~`' and in HTML and XML as '`\\&#160;`' or\n'`\\&nbsp;`'.\n\nA
  backslash-escaped newline (i.e. a backslash occurring at the end of\na line) is
  parsed as a hard line break.  It will appear in TeX output as\n'`\\\\`' and in HTML
  as '`<br />`'.  This is a nice alternative to\nmarkdown's \"invisible\" way of indicating
  hard line breaks using\ntwo trailing spaces on a line.\n\nSubscripts and superscripts\n---------------------------\n\nSuperscripts
  may be written by surrounding the superscripted text by `^`\ncharacters; subscripts
  may be written by surrounding the subscripted\ntext by `~` characters.  Thus, for
  example,\n\n    H~2~O is a liquid.  2^10^ is 1024.\n\nIf the superscripted or subscripted
  text contains spaces, these spaces\nmust be escaped with backslashes.  (This is
  to prevent accidental\nsuperscripting and subscripting through the ordinary use
  of `~` and `^`.)\nThus, if you want the letter P with 'a cat' in subscripts, use\n`P~a\\
  cat~`, not `P~a cat~`.\n\nStrikeout\n---------\n\nTo strikeout a section of text
  with a horizontal line, begin and end it\nwith `~~`. Thus, for example,\n\n    This
  ~~is deleted text.~~\n\nNested Lists\n------------\n\nPandoc behaves differently
  from standard markdown on some \"edge\ncases\" involving lists.  Consider this source:
  \n\n    1.  First\n    2.  Second:\n    \t-   Fee\n    \t-   Fie\n    \t-   Foe\n\n
  \   3.  Third\n\nPandoc transforms this into a \"compact list\" (with no `<p>` tags
  around\n\"First\", \"Second\", or \"Third\"), while markdown puts `<p>` tags around\n\"Second\"
  and \"Third\" (but not \"First\"), because of the blank space\naround \"Third\".
  Pandoc follows a simple rule: if the text is followed by\na blank line, it is treated
  as a paragraph. Since \"Second\" is followed\nby a list, and not a blank line, it
  isn't treated as a paragraph. The\nfact that the list is followed by a blank line
  is irrelevant. (Note:\nPandoc works this way even when the `--strict` option is
  specified. This\nbehavior is consistent with the official markdown syntax description,\neven
  though it is different from that of `Markdown.pl`.)\n\nOrdered Lists\n-------------\n\nUnlike
  standard markdown, Pandoc allows ordered list items to be marked\nwith uppercase
  and lowercase letters and roman numerals, in addition to\narabic numerals. (This
  behavior can be turned off using the `--strict`\noption.) List markers may be enclosed
  in parentheses or followed by a\nsingle right-parentheses or period. They must be
  separated from the\ntext that follows by at least one space, and, if the list marker
  is a\ncapital letter with a period, by at least two spaces.[^2]\n\n[^2]:  The point
  of this rule is to ensure that normal paragraphs\n    starting with people's initials,
  like\n\n        B. Russell was an English philosopher.\n\n    do not get treated
  as list items.\n\n    This rule will not prevent\n\n        (C) 2007 Joe Smith\n\n
  \   from being interpreted as a list item.  In this case, a backslash\n    escape
  can be used:\n\n        (C\\) 2007 Joe Smith\n    \nPandoc also pays attention to
  the type of list marker used, and to the\nstarting number, and both of these are
  preserved where possible in the\noutput format. Thus, the following yields a list
  with numbers followed\nby a single parenthesis, starting with 9, and a sublist with
  lowercase\nroman numerals:\n\n     9)  Ninth\n    10)  Tenth\n    11)  Eleventh\n
  \          i. subone\n          ii. subtwo\n         iii. subthree\n\nNote that
  Pandoc pays attention only to the *starting* marker in a list.\nSo, the following
  yields a list numbered sequentially starting from 2:\n\n    (2) Two\n    (5) Three\n
  \   1.  Four\n    *   Five\n\nIf default list markers are desired, use '`#.`':\n\n
  \   #.  one\n    #.  two\n    #.  three\n\nDefinition lists\n----------------\n\nPandoc
  supports definition lists, using a syntax inspired by\n[PHP Markdown Extra] and
  [reStructuredText]:[^3]\n\n    Term 1\n\n    :   Definition 1\n\n    Term 2 with
  *inline markup*\n\n    :   Definition 2\n\n            { some code, part of Definition
  2 }\n\n        Third paragraph of definition 2.\n\nEach term must fit on one line,
  which may optionally be followed by\na blank line, and must be followed by one or
  more definitions.\nA definition begins with a colon or tilde, which may be indented
  one\nor two spaces. A term may have multiple definitions, and each definition\nmay
  consist of one or more block elements (paragraph, code block, list,\netc.), each
  indented four spaces or one tab stop.\n\nIf you leave space after the definition
  (as in the example above),\nthe blocks of the definitions will be considered paragraphs.
  In some\noutput formats, this will mean greater spacing between term/definition\npairs.
  For a compact definition list, do not leave space between the\ndefinition and the
  next term:\n\n    Term 1\n      ~ Definition 1\n    Term 2\n      ~ Definition 2a\n
  \     ~ Definition 2b\n\n[^3]:  I have also been influenced by the suggestions of
  [David Wheeler](http://www.justatheory.com/computers/markup/modest-markdown-proposal.html).\n\n[PHP
  Markdown Extra]: http://www.michelf.com/projects/php-markdown/extra/\n\nReference
  links\n---------------\n\nPandoc allows implicit reference links with just a single
  set of\nbrackets.  So, the following links are equivalent:\n\n    1. Here's my [link]\n
  \   2. Here's my [link][]\n\n    [link]: linky.com\n\n(Note:  Pandoc works this
  way even if `--strict` is specified, because\n`Markdown.pl` 1.0.2b7 allows single-bracket
  links.)\n\nFootnotes\n---------\n\nPandoc's markdown allows footnotes, using the
  following syntax:\n\n    Here is a footnote reference,[^1] and another.[^longnote]\n\n
  \   [^1]: Here is the footnote.\n\n    [^longnote]: Here's one with multiple blocks.\n\n
  \       Subsequent paragraphs are indented to show that they \n    belong to the
  previous footnote.\n\n            { some.code }\n\n        The whole paragraph can
  be indented, or just the first\n        line.  In this way, multi-paragraph footnotes
  work like\n        multi-paragraph list items.\n\n    This paragraph won't be part
  of the note, because it isn't indented.\n\nThe identifiers in footnote references
  may not contain spaces, tabs,\nor newlines.  These identifiers are used only to
  correlate the\nfootnote reference with the note itself; in the output, footnotes\nwill
  be numbered sequentially.\n\nThe footnotes themselves need not be placed at the
  end of the\ndocument.  They may appear anywhere except inside other block elements\n(lists,
  block quotes, tables, etc.).\n\nInline footnotes are also allowed (though, unlike
  regular notes,\nthey cannot contain multiple paragraphs).  The syntax is as follows:\n\n
  \   Here is an inline note.^[Inlines notes are easier to write, since\n    you don't
  have to pick an identifier and move down to type the\n    note.]\n\nInline and regular
  footnotes may be mixed freely.\n\nTables\n------\n\nTwo kinds of tables may be used.
  \ Both kinds presuppose the use of\na fixed-width font, such as Courier.\n\nSimple
  tables look like this:\n\n      Right     Left     Center     Default\n    -------
  \    ------ ----------   -------\n         12     12        12            12\n        123
  \    123       123          123\n          1     1          1             1\n\n
  \   Table:  Demonstration of simple table syntax.\n\nThe headers and table rows
  must each fit on one line.  Column\nalignments are determined by the position of
  the header text relative\nto the dashed line below it:[^4]\n\n  - If the dashed
  line is flush with the header text on the right side\n    but extends beyond it
  on the left, the column is right-aligned.\n  - If the dashed line is flush with
  the header text on the left side \n    but extends beyond it on the right, the column
  is left-aligned.\n  - If the dashed line extends beyond the header text on both
  sides,\n    the column is centered.\n  - If the dashed line is flush with the header
  text on both sides,\n    the default alignment is used (in most cases, this will
  be left).\n\n[^4]:  This scheme is due to Michel Fortin, who proposed it on the\n
  \      [Markdown discussion list](http://six.pairlist.net/pipermail/markdown-discuss/2005-March/001097.html).\n\nThe
  table must end with a blank line, or a line of dashes followed by\na blank line.
  A caption may optionally be provided (as illustrated in\nthe example above). A caption
  is a paragraph beginning with the string\n`Table:`, which will be stripped off.\n\nThe
  column headers may be omitted, provided a dashed line is used\nto end the table.
  For example:\n\n    -------     ------ ----------   -------\n         12     12
  \       12             12\n        123     123       123           123\n          1
  \    1          1              1\n    -------     ------ ----------   -------\n\nWhen
  headers are omitted, column alignments are determined on the basis\nof the first
  line of the table body. So, in the tables above, the columns\nwould be right, left,
  center, and right aligned, respectively.\n\nMultiline tables allow headers and table
  rows to span multiple lines\nof text.  Here is an example:\n\n    -------------------------------------------------------------\n
  \    Centered   Default           Right Left\n      Header    Aligned         Aligned
  Aligned\n    ----------- ------- --------------- -------------------------\n       First
  \   row                12.0 Example of a row that\n                                        spans
  multiple lines.\n\n      Second    row                 5.0 Here's another one. Note\n
  \                                       the blank line between\n                                        rows.\n
  \   -------------------------------------------------------------\n\n    Table:
  Here's the caption. It, too, may span\n    multiple lines.\n\nThese work like simple
  tables, but with the following differences:\n\n  - They must begin with a row of
  dashes, before the header text\n    (unless the headers are omitted).\n  - They
  must end with a row of dashes, then a blank line.\n  - The rows must be separated
  by blank lines.\n\nIn multiline tables, the table parser pays attention to the widths
  of\nthe columns, and the writers try to reproduce these relative widths in\nthe
  output. So, if you find that one of the columns is too narrow in the\noutput, try
  widening it in the markdown source.\n\nHeaders may be omitted in multiline tables
  as well as simple tables:\n\n    ----------- ------- --------------- -------------------------\n
  \      First    row                12.0 Example of a row that\n                                        spans
  multiple lines.\n\n      Second    row                 5.0 Here's another one. Note\n
  \                                       the blank line between\n                                        rows.\n
  \   -------------------------------------------------------------\n\n    Table:
  Here's a multiline table without headers.\n\nIt is possible for a multiline table
  to have just one row, but the row\nshould be followed by a blank line (and then
  the row of dashes that ends\nthe table), or the table may be interpreted as a simple
  table.\n\nDelimited Code blocks\n---------------------\n\nIn addition to standard
  indented code blocks, Pandoc supports\n*delimited* code blocks.  These begin with
  a row of three or more\ntildes (`~`) and end with a row of tildes that must be at
  least\nas long as the starting row.  Everything between the tilde-lines\nis treated
  as code.  No indentation is necessary:\n\n    ~~~~~~~\n    {code here}\n    ~~~~~~~\n\nLike
  regular code blocks, delimited code blocks must be separated\nfrom surrounding text
  by blank lines.\n\nIf the code itself contains a row of tildes, just use a longer\nrow
  of tildes at the start and end:\n\n    ~~~~~~~~~~~~~~~~\n    ~~~~~~~~~~\n    code
  including tildes\n    ~~~~~~~~~~\n    ~~~~~~~~~~~~~~~~\n\nOptionally, you may specify
  the language of the code block using\nthis syntax:\n\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  {.haskell .numberLines}\n    qsort []     = []\n    qsort (x:xs) = qsort (filter
  (< x) xs) ++ [x] ++\n                   qsort (filter (>= x) xs) \n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nSome
  output formats can use this information to do syntax highlighting.\nCurrently, the
  only output format that uses this information is HTML.\n\nIf pandoc has been compiled
  with syntax highlighting support, then the\ncode block above will appear highlighted,
  with numbered lines.  (To see\nwhich languages are supported, do `pandoc --version`.)\n\nIf
  pandoc has not been compiled with syntax highlighting support, the\ncode block above
  will appear as follows:\n\n    <pre class=\"haskell\">\n      <code>\n      ...\n
  \     </code>\n    </pre>\n\nImages with captions\n--------------------\n\nAn image
  occurring by itself in a paragraph will be rendered as\na figure with a caption.[^5]
  (In LaTeX, a figure environment will be\nused; in HTML, the image will be placed
  in a `div` with class\n`figure`, together with a caption in a `p` with class `caption`.)\nThe
  image's alt text will be used as the caption.\n\n    ![This is the caption](/url/of/image.png)\n\n[^5]:
  This feature is not yet implemented for RTF, OpenDocument, or\n    ODT. In those
  formats, you'll just get an image in a paragraph by\n    itself, with no caption.\n\nIf
  you just want a regular inline image, just make sure it is not\nthe only thing in
  the paragraph. One way to do this is to insert a\nnonbreaking space after the image:\n\n
  \   ![This image won't be a figure](/url/of/image.png)\\ \n\nTitle blocks\n------------\n\nIf
  the file begins with a title block\n\n    % title\n    % author(s) (separated by
  semicolons)\n    % date\n\nit will be parsed as bibliographic information, not regular
  text.  (It\nwill be used, for example, in the title of standalone LaTeX or HTML\noutput.)
  \ The block may contain just a title, a title and an author,\nor all three elements.
  If you want to include an author but no\ntitle, or a title and a date but no author,
  you need a blank line:\n\n    %\n    % Author\n\n    % My title\n    %\n    % June
  15, 2006\n\nThe title may occupy multiple lines, but continuation lines must\nbegin
  with leading space, thus:\n\n    % My title\n      on multiple lines\n\nIf a document
  has multiple authors, the authors may be put on\nseparate lines with leading space,
  or separated by semicolons, or\nboth.  So, all of the following are equivalent:\n\n
  \   % Author One\n      Author Two\n\n    % Author One; Author Two\n\n    % Author
  One;\n      Author Two\n\nThe date must fit on one line.\n\nAll three metadata fields
  may contain standard inline formatting\n(italics, links, footnotes, etc.).\n\nTitle
  blocks will always be parsed, but they will affect the output only\nwhen the `--standalone`
  (`-s`) option is chosen. In HTML output, titles\nwill appear twice: once in the
  document head -- this is the title that\nwill appear at the top of the window in
  a browser -- and once at the\nbeginning of the document body. The title in the document
  head can have\nan optional prefix attached (`--title-prefix` or `-T` option). The
  title\nin the body appears as an H1 element with class \"title\", so it can be\nsuppressed
  or reformatted with CSS. If a title prefix is specified with\n`-T` and no title
  block appears in the document, the title prefix will\nbe used by itself as the HTML
  title.\n\nThe man page writer extracts a title, man page section number, and\nother
  header and footer information from the title line. The title\nis assumed to be the
  first word on the title line, which may optionally\nend with a (single-digit) section
  number in parentheses. (There should\nbe no space between the title and the parentheses.)
  \ Anything after\nthis is assumed to be additional footer and header text. A single
  pipe\ncharacter (`|`) should be used to separate the footer text from the header\ntext.
  \ Thus,\n\n    % PANDOC(1)\n\nwill yield a man page with the title `PANDOC` and
  section 1.\n\n    % PANDOC(1) Pandoc User Manuals\n\nwill also have \"Pandoc User
  Manuals\" in the footer.\n\n    % PANDOC(1) Pandoc User Manuals | Version 4.0\n\nwill
  also have \"Version 4.0\" in the header.\n\nMarkdown in HTML blocks\n-----------------------\n\nWhile
  standard markdown leaves HTML blocks exactly as they are, Pandoc\ntreats text between
  HTML tags as markdown. Thus, for example, Pandoc\nwill turn\n\n    <table>\n    \t<tr>\n
  \   \t\t<td>*one*</td>\n    \t\t<td>[a link](http://google.com)</td>\n    \t</tr>\n
  \   </table>\n\ninto\n\n    <table>\n    \t<tr>\n    \t\t<td><em>one</em></td>\n
  \   \t\t<td><a href=\"http://google.com\">a link</a></td>\n    \t</tr>\n    </table>\n\nwhereas
  `Markdown.pl` will preserve it as is.\n\nThere is one exception to this rule:  text
  between `<script>` and\n`</script>` tags is not interpreted as markdown.\n\nThis
  departure from standard markdown should make it easier to mix\nmarkdown with HTML
  block elements.  For example, one can surround\na block of markdown text with `<div>`
  tags without preventing it\nfrom being interpreted as markdown.\n\nHeader identifiers
  in HTML\n--------------------------\n\nEach header element in pandoc's HTML output
  is given a unique\nidentifier. This identifier is based on the text of the header.
  To\nderive the identifier from the header text,\n\n  - Remove all formatting, links,
  etc.\n  - Remove all punctuation, except underscores, hyphens, and periods.\n  -
  Replace all spaces and newlines with hyphens.\n  - Convert all alphabetic characters
  to lowercase.\n  - Remove everything up to the first letter (identifiers may\n    not
  begin with a number or punctuation mark).\n  - If nothing is left after this, use
  the identifier `section`.\n\nThus, for example,\n\n  Header                                  Identifier\n
  \ -------------------------------------   ---------------------------\n  Header
  identifiers in HTML              `header-identifiers-in-html`\n  *Dogs*?--in *my*
  house?                 `dogs--in-my-house`\n  [HTML], [S5], or [RTF]?                 `html-s5-or-rtf`\n
  \ 3. Applications                         `applications`\n  33                                      `section`\n\nThese
  rules should, in most cases, allow one to determine the identifier\nfrom the header
  text. The exception is when several headers have the\nsame text; in this case, the
  first will get an identifier as described\nabove; the second will get the same identifier
  with `-1` appended; the\nthird with `-2`; and so on.\n\nThese identifiers are used
  to provide link targets in the table of\ncontents generated by the `--toc|--table-of-contents`
  option. They\nalso make it easy to provide links from one section of a document
  to\nanother. A link to this section, for example, might look like this:\n\n    See
  the section on [header identifiers](#header-identifiers-in-html). \n\nNote, however,
  that this method of providing links to sections works\nonly in HTML.\n\nBlank lines
  before headers and blockquotes\n------------------------------------------\n\nStandard
  markdown syntax does not require a blank line before a header\nor blockquote.  Pandoc
  does require this (except, of course, at the\nbeginning of the document). The reason
  for the requirement is that\nit is all too easy for a `>` or `#` to end up at the
  beginning of a\nline by accident (perhaps through line wrapping).  Consider, for\nexample:\n\n
  \   I like several of their flavors of ice cream:  #22, for example, and\n    #5.\n\nMath\n----\n\nAnything
  between two $ characters will be treated as TeX math.  The\nopening $ must have
  a character immediately to its right, while the\nclosing $ must have a character
  immediately to its left.  Thus,\n`$20,000 and $30,000` won't parse as math.  If
  for some reason\nyou need to enclose text in literal $ characters, backslash-escape\nthem
  and they won't be treated as math delimiters.\n\nTeX math will be printed in all
  output formats. In Markdown,\nreStructuredText, LaTeX, and ConTeXt output, it will
  appear verbatim\nbetween $ characters.\n\nIn reStructuredText output, it will be
  rendered using an interpreted\ntext role `:math:`, as described\n[here](http://www.american.edu/econ/itex2mml/mathhack.rst).\n\nIn
  Texinfo output, it will be rendered inside a `@math` command.\n\nIn groff man output,
  it will be rendered verbatim without $'s.\n\nIn MediaWiki output, it will be rendered
  inside `<math>` tags.\n\nIn RTF, Docbook, and OpenDocument output, it will be rendered,
  as far as\npossible, using unicode characters, and will otherwise appear verbatim.\nUnknown
  commands and symbols, and commands that cannot be dealt with\nthis way (like `\\frac`),
  will be rendered verbatim. So the results may\nbe a mix of raw TeX code and properly
  rendered unicode math.\n\nIn HTML and S5 output, the way math is rendered will depend
  on the\ncommand-line options selected:\n\n1.  The default is to render TeX math
  as far as possible using unicode\n    characters, as with RTF, Docbook, and OpenDocument
  output. Formulas\n    are put inside a `span` with `class=\"math\"`, so that they
  may be\n    styled differently from the surrounding text if needed.\n\n2.  If the
  `--latexmathml` option is used, TeX math will be displayed\n    between $ or $$
  characters and put in `<span>` tags with class `LaTeX`.\n    The [LaTeXMathML] script
  will be used to render it as formulas.\n    (This trick does not work in all browsers,
  but it works in Firefox.\n    In browsers that do not support LaTeXMathML, TeX math
  will appear\n    verbatim between $ characters.)\n\n3.  If the `--jsmath` option
  is used, TeX math will be put inside\n    `<span>` tags (for inline math) or `<div>`
  tags (for display math)\n    with class `math`.  The [jsMath] script will be used
  to render\n    it.\n\n4.  If the `--mimetex` option is used, the [mimeTeX] CGI script
  will\n    be called to generate images for each TeX formula. This should\n    work
  in all browsers. The `--mimetex` option takes an optional URL\n    as argument.
  If no URL is specified, it will be assumed that the\n    mimeTeX CGI script is at
  `/cgi-bin/mimetex.cgi`.\n\n5.  If the `--gladtex` option is used, TeX formulas will
  be enclosed\n    in `<eq>` tags in the HTML output.  The resulting `htex` file may
  then\n    be processed by [gladTeX], which will produce image files for each\n    formula
  and an `html` file with links to these images.  So, the\n    procedure is:\n\n        pandoc
  -s --gladtex myfile.txt -o myfile.htex\n        gladtex -d myfile-images myfile.htex\n
  \       # produces myfile.html and images in myfile-images\n\nInline TeX\n----------\n\nInline
  TeX commands will be preserved and passed unchanged to the\nLaTeX and ConTeXt writers.
  Thus, for example, you can use LaTeX to\ninclude BibTeX citations:\n\n    This result
  was proved in \\cite{jones.1967}.\n\nNote that in LaTeX environments, like\n\n    \\begin{tabular}{|l|l|}\\hline\n
  \   Age & Frequency \\\\ \\hline\n    18--25  & 15 \\\\\n    26--35  & 33 \\\\ \n
  \   36--45  & 22 \\\\ \\hline\n    \\end{tabular}\n\nthe material between the begin
  and end tags will be interpreted as raw\nLaTeX, not as markdown.\n\nInline LaTeX
  is ignored in output formats other than Markdown, LaTeX,\nand ConTeXt.\n\nProducing
  S5 with Pandoc\n========================\n\nProducing an [S5] web-based slide show
  with Pandoc is easy.  A title\npage is constructed automatically from the document's
  title block (see\nabove).  Each section (with a level-one header) produces a single
  slide.\n(Note that if the section is too big, the slide will not fit on the page;\nS5
  is not smart enough to produce multiple pages.)\n\nHere's the markdown source for
  a simple slide show, `eating.txt`:\n\n    % Eating Habits\n    % John Doe\n    %
  March 22, 2005\n\n    # In the morning\n\n    - Eat eggs\n    - Drink coffee\n\n
  \   # In the evening\n\n    - Eat spaghetti\n    - Drink wine\n\nTo produce the
  slide show, simply type\n\n    pandoc -w s5 -s eating.txt > eating.html\n\nand open
  up `eating.html` in a browser.\n\nNote that by default, the S5 writer produces lists
  that display\n\"all at once.\"  If you want your lists to display incrementally\n(one
  item at a time), use the `-i` option.  If you want a\nparticular list to depart
  from the default (that is, to display\nincrementally without the `-i` option and
  all at once with the\n`-i` option), put it in a block quote:\n\n    > - Eat spaghetti\n
  \   > - Drink wine\n\nIn this way incremental and nonincremental lists can be mixed
  in\na single document.\n\nNote: the S5 file produced by pandoc with the `-s/--standalone`
  option\nembeds the javascript and CSS required to show the slides. Thus it\ndoes
  not depend on any additional files: you can send the HTML file to\nothers, and they
  will be able to view the slide show just by opening\nit. However, if you intend
  to produce several S5 slide shows, and you\nare displaying them on your own website,
  it is better to keep the S5\njavascript and CSS files separate from the slide shows
  themselves, so\nthat they may be cached. The best approach in this case is to use
  pandoc\nwithout the `-s` option to produce the body of the S5 document, which\ncan
  then be inserted into an HTML template that links to the javascript\nand CSS files
  required by S5. (See the instructions on the S5 website.)\nAlternatively, you may
  use `-s` together with the `--template`\noption to specify a custom template.\n\nYou
  can change the style of the slides by putting customized CSS files\nin `$DATADIR/s5/default`,
  where `$DATADIR` is the user data directory\n(see `--data-dir`, above). The originals
  may be found in pandoc's system\ndata directory (generally `$CABALDIR/pandoc-VERSION/s5/default`).
  Pandoc\nwill look there for any files it does not find in the user data\ndirectory.\n\nLiterate
  Haskell support\n========================\n\nIf you append `+lhs` to an appropriate
  input or output format (`markdown`,\n`rst`, or `latex` for input or output; `html`
  for output only), pandoc\nwill treat the document as literate Haskell source. This
  means that\n\n  - In markdown input, \"bird track\" sections will be parsed as Haskell\n
  \   code rather than block quotations.  Text between `\\begin{code}`\n    and `\\end{code}`
  will also be treated as Haskell code.\n\n  - In markdown output, code blocks with
  class `haskell` will be\n    rendered using bird tracks, and block quotations will
  be\n    indented one space, so they will not be treated as Haskell code.\n    In
  addition, headers will be rendered setext-style (with underlines)\n    rather than
  atx-style (with '#' characters). (This is because ghc\n    treats '#' characters
  in column 1 as introducing line numbers.)\n\n  - In restructured text input, \"bird
  track\" sections will be parsed\n    as Haskell code.\n\n  - In restructured text
  output, code blocks with class `haskell` will\n    be rendered using bird tracks.\n\n
  \ - In LaTeX input, text in `code` environments will be parsed as\n    Haskell code.\n\n
  \ - In LaTeX output, code blocks with class `haskell` will be rendered\n    inside
  `code` environments.\n\n  - In HTML output, code blocks with class `haskell` will
  be rendered\n    with class `literatehaskell` and bird tracks.\n\nExamples:\n\n
  \   pandoc -f markdown+lhs -t html\n\nreads literate Haskell source formatted with
  markdown conventions and writes\nordinary HTML (without bird tracks).\n\n    pandoc
  -f markdown+lhs -t html+lhs\n\nwrites HTML with the Haskell code in bird tracks,
  so it can be copied\nand pasted as literate Haskell source.\n\n"
description-type: text
hash: 7f02f695561a4d3ac586cac616ab2608c07a51e0e7c4aeafec0898a10e8bb421
homepage: http://johnmacfarlane.net/pandoc
latest: 1.5.1.1
license-name: LicenseRef-GPL
maintainer: Peter Simons <simons@cryp.to>
synopsis: Conversion between markup formats
test-bench-deps: {}
