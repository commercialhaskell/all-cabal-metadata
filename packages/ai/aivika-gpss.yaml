homepage: http://www.aivikasoft.com
changelog-type: markdown
hash: 107e1b28d5817397af4f93603f69107ac13580aad924924831c7527edaf66513
test-bench-deps: {}
maintainer: David Sorokin <david.sorokin@gmail.com>
synopsis: GPSS-like DSL for Aivika
changelog: |2

  Version 0.6.1
  -----

  * Fixed the copyright years.

  Version 0.6
  -----

  * Improved the speed of simulation.
basic-deps:
  base: '>=4.2 && <6'
  aivika: '>=5.9.1'
  unordered-containers: '>=0.1.0.0'
  aivika-transformers: '>=5.9.1'
  containers: '>=0.4.0.0'
  mtl: '>=1.1.0.2'
  hashable: '>=1.2.0.0'
all-versions:
- '0.3'
- '0.4'
- '0.5'
- '0.6'
- 0.6.1
- 0.6.2
author: David Sorokin
latest: 0.6.2
description-type: haddock
description: |
  This package allows defining simulation models in terms of a GPSS-like
  domain specific language, which can be useful if you are going to
  translate your models from GPSS into Aivika [1, 2].

  Note that the GPSS-like domain specific language is not equivalent to
  the original GPSS language, but it may return very similar results in
  some cases, while it can also return quite different results in other cases.

  The package implements the most of GPSS simulation blocks, but the main difference
  is as follows.

  Like GPSS, the package tries to treat the transact priorities properly within each block.
  Here it works in a very similar way even for such non-trivial blocks as PREEMPT, GATHER
  and ASSEMBLE. But unlike GPSS, the blocks behave independently from each other, where
  the transact priorities are not used when deciding which of the blocks will be activated next.
  The order of activating the blocks is unpredictable.

  There is a layer of emulation. The package creates a new discontinuous process for each new transact.
  Then that process becomes fully responsible for processing the transact by the blocks. Therefore,
  the speed of simulation is slower than it could be when implementing the same model but based on
  using the standard Aivika facilities.

  The rough estimation is that this particular package is slower in 2-3 times than the existent GPSS
  simulators in case of sequential simulation. But the point is that you can combine GPSS with
  discontinuous processes, events and even agents within the same model. Moreover, you can use GPSS
  in parallel and distributed simulation models.

  Finally, you can use the following prepared example [3].

  \[1] <http://hackage.haskell.org/package/aivika>

  \[2] <http://hackage.haskell.org/package/aivika-transformers>

  \[3] <https://github.com/dsorokin/aivika-gpss-test>
license-name: BSD-3-Clause
