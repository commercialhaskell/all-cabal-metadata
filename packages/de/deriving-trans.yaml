homepage: https://github.com/jumper149/deriving-trans
changelog-type: markdown
hash: 114715218fcbb32551b8afd6c504e4ccecaa2f1423764066e0e4ddb9c36bef4d
test-bench-deps: {}
maintainer: felixspringer149@gmail.com
synopsis: Derive instances for monad transformer stacks
changelog: |
  # Revision history for deriving-trans

  ## 0.2.1.0 *27 Jan 2022*

  * Use StandaloneKindSignatures.
  * Add Haddock documentation.

  ## 0.2.0.0 *25 Jan 2022*

  * Completely change the idea of this project. Pretty much everything has been changed.

  ## 0.1.0.0 *19 Jun 2021*

  * First version. Released on an unsuspecting world.
basic-deps:
  base: '>=4.5 && <5'
  monad-control: '>=1.0.2.0 && <1.1'
  mtl: '>=2.2.2 && <2.3'
  transformers-base: '>=0.4.5.2 && <0.5'
  transformers: '>=0.5.6.2 && <0.5.7'
all-versions:
- 0.1.0.0
- 0.2.0.0
- 0.2.1.0
author: Felix Springer
latest: 0.2.1.0
description-type: haddock
description: |-
  Implementing instances for monad transformer stacks can be tedious.
  <https://hackage.haskell.org/package/mtl mtl> defines each instance for each transfomer.

  'Elevator' let's you access instances of the underlying monad of a transformer.
  Composing transformers with 'ComposeT' brings instances into scope during the
  initialization of a transformer stack.

  'Elevator' can be used with DerivingVia to select a specific transformer to
  derive instances for a transformer stack.
  'ComposeT' composes transformers and accumulates instances in a transformer stack.
license-name: BSD-3-Clause
