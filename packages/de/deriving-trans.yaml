homepage: https://github.com/jumper149/deriving-trans
changelog-type: markdown
hash: 32abf6b31e01ce59175de50a0755ef94028033d4983348a07802204feca5f2e3
test-bench-deps: {}
maintainer: felixspringer149@gmail.com
synopsis: Derive instances for monad transformer stacks
changelog: |
  # Revision history for deriving-trans

  ## 0.5.0.0 *25 Jul 2022*

  * Add module `Control.Monad.Trans.Compose.Infix`.
  * Add module `Control.Monad.Trans.Compose.Stack`.
  * Add module `Control.Monad.Trans.Compose.Transparent`.
  * Improve and update Haddock documentation and examples.

  ## 0.4.0.0 *18 Jul 2022*

  * Add dependency on monad-control-identity.
  * Add instances for `MonadTransControlIdentity` and `MonadBaseControlIdentity`.
  * Add `MonadZip` instance to `Elevator`.
  * Constrain the `MonadFix` instance for `Elevator` with `MonadTransControlIdentity`.

  ## 0.3.2.0 *31 Mar 2022*

  * Remove version boundaries of dependencies.

  ## 0.3.1.0 *08 Feb 2022*

  * Add `MonadFix` instance to `Elevator`.

  ## 0.3.0.0 *04 Feb 2022*

  * Add "base-case" instances for both lazy and strict transformers (from mtl) to `ComposeT`.
  * Add `Alternative` and `MonadPlus` instances to `Elevator`.
  * Add `MonadFail` instance to `Elevator`.
  * Add `MonadCont` instances to `Elevator` and `ComposeT`.
  * Add `MonadCont` "base-case" instance for `ContT` to `ComposeT`.
  * Add `MonadRWS` instances to `Elevator` and `ComposeT`. It's not quite clear, whether this is necessary
  * Add "base-case" instances for `RWST` to `ComposeT`.

  ## 0.2.2.1 *01 Feb 2022*

  * Polish Haddock comments.

  ## 0.2.2.0 *30 Jan 2022*

  * Add "base-case" instances for mtl's type classes to `ComposeT`.
  * Add Haddock examples and improve comments.

  ## 0.2.1.0 *27 Jan 2022*

  * Add `MonadTrans` and `MonadTransControl` instances to `Elevator`.
  * Use StandaloneKindSignatures.
  * Add Haddock documentation.

  ## 0.2.0.0 *25 Jan 2022*

  * Completely change the idea of this project. Pretty much everything has been changed.

  ## 0.1.0.0 *19 Jun 2021*

  * First version. Released on an unsuspecting world.
basic-deps:
  base: <5
  monad-control: -any
  mtl: -any
  monad-control-identity: -any
  transformers-base: -any
  transformers: -any
all-versions:
- 0.2.0.0
- 0.2.1.0
- 0.2.2.0
- 0.2.2.1
- 0.3.0.0
- 0.3.1.0
- 0.3.2.0
- 0.4.0.0
- 0.5.0.0
author: Felix Springer
latest: 0.5.0.0
description-type: haddock
description: |-
  Implementing instances for monad transformer stacks can be tedious.
  <https://hackage.haskell.org/package/mtl mtl> defines each instance for each
  transfomer, but this can be avoided.

  'Elevator' let's you access instances of the underlying monad of a transformer.
  Composing transformers with 'ComposeT' brings instances into scope during the
  initialization of a transformer stack.

  'Elevator' can be used with DerivingVia to select a specific transformer to
  derive instances for a transformer stack.
  'ComposeT' composes transformers and accumulates instances in a transformer
  stack.
license-name: BSD-3-Clause
