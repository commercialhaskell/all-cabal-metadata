all-versions:
- 1.0.0.0
- 1.0.1.0
- 1.1.0.0
author: Neil Davies, Heinrich Apfelmus
basic-deps:
  Chart: '>=1.8 && <2'
  base: '>=4.14.3.0 && <5'
  deepseq: '>=1.4.4.0 && <1.6'
  diagrams-lib: '>=1.4.5 && <1.6'
  diagrams-svg: '>=1.5 && <1.6'
  lattices: '>=2.2 && <2.3'
  probability-polynomial: '>=1.0.1 && <1.1'
changelog: |
  # Revision history for `deltaq`

  ## 1.1.0.0 — 2025-10-14

  ### Added

  * Add `DeltaQ.Expr` with a data type `O` that represents outcome expressions.
  * Add `DeltaQ.Diagram` for rendering outcome expressions as diagrams.

  ### Changed

  * Add a new class `ProbabilisticOutcome` and remove its fields
    `Probability`, `choice` and `choices` from the `DeltaQ` class.

  ## 1.0.1.0 — 2025-09-26

  ### Added

  * Add combinator `timeout` that returns probabilities conditioned
    on completing within a given duration.
  * Add functions `retryOverlap` and `retryOverlapN` for modelin retry policies
    that race time-delayed, independent copies of an outcome against each other.
  * Clarify semantics of `deadline`.
  * Bump dependencies, allow `containers-0.8`, `QuickCheck-2.16`, `optparse-applicative-0.19`.

  ### Fixed

  * Fix `quantile` to return the correct result when the result is precisely at the boundary between two pieces of the piecewise probability distribution.

  ## 1.0.0.0 — 2024-12-23

  * Initial release of the domain-specific language for ∆Q System Development.
  * Implementation based on `probability-polynomial`.
changelog-type: markdown
description: |
  ∆Q System Development is a paradigm for developing distributed systems
  that meet performance requirements.

  The `deltaq` package (pronounced "Delta Q")
  implements a domain specific language (DSL) in Haskell
  for specfying outcomes and evaluating their performance characteristics.
description-type: markdown
hash: 6c22c37be82da7beb27969bca307db4205f83e84dbf6b1bf1f5ca8ae6b1234bd
homepage: https://github.com/DeltaQ-SD/deltaq
latest: 1.1.0.0
license-name: BSD-3-Clause
maintainer: neil.davies@pnsol.ccom
synopsis: Framework for ∆Q System Development
test-bench-deps:
  QuickCheck: '>=2.14 && <2.18'
  base: '>=0'
  bytestring: '>=0.11 && <0.13'
  cassava: '>=0.5.3.2 && <0.6'
  criterion: '>=1.6 && <1.7'
  deepseq: '>=0'
  deltaq: '>=0'
  hspec: '>=2.11.0 && <2.12'
  hvega: '>=0.12 && <0.13'
  optparse-applicative: '>=0.18.1.0 && <0.20'
  probability-polynomial: '>=0'
  statistics: '>=0.16 && <0.17'
  vector: '>=0.12 && <0.14'
