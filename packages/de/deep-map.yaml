homepage: https://github.com/mixphix/deep-map
changelog-type: markdown
hash: 701dadaccb78c4f6699d67bcfc79bc983f271e0e5e771ce300ffaada06baa450
test-bench-deps: {}
maintainer: brown.m@pm.me
synopsis: Deeply-nested, multiple key type maps.
changelog: |
  # Revision history for deep-maps

  ## 0.2.0

  * Heterogenous list `type Deep :: [Type] -> Type` to increase compatibility with `indexed-traversable`. Requires an `Ord` constraint upfront to construct any nontrivial values.
  * related `_Deep` functions

  ## 0.1.1.0 -- 2021-12-07

  * Strict variants of `foldMapWithKey(N)`

  ## 0.1.0.0 -- 2021-11-30

  * Deep monoidal maps
basic-deps:
  base: '>=4.11 && <5'
  indexed-traversable: ^>=0.1.2
  containers: '>=0.5.11 && <0.7'
all-versions:
- 0.1.0.0
- 0.1.1.0
- 0.2.0
author: Melanie Brown
latest: 0.2.0
description-type: markdown
description: |
  # deep-map

  [![ci](https://img.shields.io/github/workflow/status/mixphix/deep-map/Haskell-CI)](https://github.com/mixphix/deep-map/actions/workflows/ci.yml)
  [![Hackage](https://img.shields.io/hackage/v/deep-map?color=purple)](https://hackage.haskell.org/package/deep-map)
  [![license](https://img.shields.io/github/license/mixphix/deep-map?color=purple)]()

  A `DeepMap` is a map that has several layers of keys.

  ```hs
  type DeepMap :: [Type] -> Type -> Type
  data DeepMap ks v where
      Bare :: v -> DeepMap '[] v
      Nest :: Map k (DeepMap ks v) -> DeepMap (k ': ks) v
  ```

  For a given `(k ': ks) :: [Type]`, the type `DeepMap (k ': ks) v` is isomorphic to lists of the form `[(k, k0, .., kn, v)]` where `ks = '[k0, ..., kn]`, but with better performance.
license-name: BSD-3-Clause
