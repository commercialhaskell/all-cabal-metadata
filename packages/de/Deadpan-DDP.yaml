all-versions:
- 0.2.0.0
- 0.2.0.1
- 0.2.1.1
- 0.3.0.1
- 0.3.0.2
- 0.4.1.0
- 0.5.0.0
- 0.6.0.0
- 0.6.0.1
- 0.7.0.0
- 0.8.0.0
- 0.9.0.0
- 0.9.1.0
- 0.9.3.0
- 0.9.4.0
- 0.9.5.0
- 0.9.6.0
author: Lyndon Maydwell
basic-deps:
  aeson: '>=0'
  base: '>=4 && <5'
  base64-bytestring: '>=0'
  bytestring: '>=0'
  containers: '>=0'
  hashable: '>=0'
  haskeline: '>=0.7'
  lens: '>=0'
  mtl: '>=0'
  network: '>=0'
  network-uri: '>=0'
  random: '>=0'
  safe: '>=0'
  scientific: '>=0'
  stm: '>=0'
  text: '>=0'
  time: '>=1.4'
  transformers: '>=0'
  unordered-containers: '>=0'
  vector: '>=0'
  websockets: '>=0'
changelog: |
  # Deadpan-DDP Change Log

  ## 0.9.3.0

  * RPC now only takes a list of params

  ## 0.9.2.0

  * Hex GUID strings

  ## 0.9.1.0

  * Better TODO Example
  * Added subscription methods that return the subscription id

  ## 0.9.0.0

  * Fixed the exit error

  ## 0.8.0.0

  * Made GUID newtype abstract to prevent abuse

  ## 0.7.0.0

  * Added newtype for IDs to prevent library mistakes

  ## 0.6.0.0

  * Subscription capabilities have begun to be added
  * Add Data
  * Remove Data
  * Modify Data (Simplistic)
  * Wait on subscription

  ## 0.4.1.0

  * Fixed some bugs
  * RPC responses now return an Either to indicate success or failure

  ## 0.4.0.0

  * Large refactor including API changes
  * No longer require specifying app-state to run an app
  * Added blocking RPCWait

  ## 0.3.0.1

  * Added further callback implementations
  * Added test-app
  * Added documentation

  ## 0.2.2.0

  * Completed adding RPC method call support

  ## 0.2.1.1

  * Updated license file to include copyright info

  ## 0.2.1.0

  * Custom Show instance to render prettier output in debugging app [09c9876]
  * Improved error reporting in debugging app [6dcf272]

  ## 0.2.0.1

  * Added a Changelog

  ## 0.2.0.0

  Initial version uploaded to Hackage.

  Some values still undefined.
changelog-type: markdown
description: |-
  The Deadpan-DDP project includes a debugging-tool, as well as a general purpose library.

  <https://github.com/meteor/meteor/blob/devel/packages/ddp/DDP.md DDP> is the protocol that
  <http://meteor.com Meteor> speaks between client and server.

  The DDP tech-stack is: Websockets -> JSON -> EJson -> Collections -> Subscriptions + RPC.

  In order to use the debugging tool, install this package and run `deadpan` for a usage
  statement.

  In order to use the library, simply import "Web.DDP.Deadpan".

  The DSL monad is largely based around RPC calls and callbacks.
  In order to write an application you would call
  `Web.DDP.Deadpan.runClient` with

  * An initial application state (this includes initial callbacks)

  * A set of connection parameters

  * A `Web.DDP.Deadpan.DSL.Deadpan` application

  There are several callback-sets provided in "Web.DDP.Deadpan",
  however, if you want to pick in a more granular fashion,
  look inside "Web.DDP.Deadpan.Callbacks".

  The connection parameters are the triple (Domain, Port, Path)...

  For convenience the function getURI is provided to turn a URI
  of the form <websocket://localhost:3000/websocket>
  into the triple (Right ("localhost", 3000, "websocket"))...
  or an error (Left "error message").

  Refer to the <https://github.com/sordina/Deadpan-DDP#deadpan-ddp README.md> on Github for more information.
description-type: haddock
hash: 4878b2bec0bacb0f9341fbfa0de3a480aa811d62f2e39e333097a8856a059a11
homepage: http://github.com/sordina/Deadpan-DDP
latest: 0.9.6.0
license-name: MIT
maintainer: maydwell@gmail.com
synopsis: Write clients for Meteor's DDP Protocol
test-bench-deps:
  QuickCheck: '>=0'
  base: '>=0'
  doctest: '>=0.8'
  filemanip: '>=0'
