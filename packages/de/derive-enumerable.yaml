homepage: https://github.com/theunixman/derive-enumerable
changelog-type: ''
hash: e1f2bbc1336e9d9d83bad89a7b35922906d251e698109f7e35e62daa26433696
test-bench-deps: {}
maintainer: Evan Cofsky <evan@theunixman.com>
synopsis: Generic instances for enumerating complex data types
changelog: ''
basic-deps:
  base: '>=4.7 && <4.8'
  data-default: '>=0.5.0'
all-versions:
- 0.1.0.0
- 0.1.1.0
- 0.2.0
author: Evan Cofsky <evan@theunixman.com>
latest: 0.2.0
description-type: markdown
description: |+
  # Derive-enumerable

  Generalized equivalent to doing `[minBound..maxBound]` but on complex types.


      λ :m +Data.Enumerable.Generic
      λ :set -XDeriveGeneric
      λ data Flag = Flag Bool Word8 deriving (Show, Generic)
      λ instance Enumerable Flag
      λ instance Default Flag where def = Flag False 0
      λ allEnum :: [Flag]
      [Flag False 0,Flag True 0,Flag False 1, (..snip..) Flag False 255,Flag True 255]

license-name: GPL-3.0-only
