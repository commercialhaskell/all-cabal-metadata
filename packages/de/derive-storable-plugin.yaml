all-versions:
- 0.1.0.0
- 0.1.0.1
- 0.1.0.2
- 0.2.0.0
- 0.2.1.0
- 0.2.2.0
- 0.2.3.0
- 0.2.3.1
- 0.2.3.3
- 0.2.3.4
- 0.2.3.5
- 0.2.3.6
- 0.2.3.7
author: Mateusz KÅ‚oczko
basic-deps:
  base: '>=4.10 && <5'
  derive-storable: '>=0.3 && <0.4'
  ghc: '>=8.2 && <9.7'
  ghci: '>=8.2 && <9.7'
changelog: "# Revision history for generic-storable-plugin\n\n## 0.2.3.6  -- 2022-10-30\n\n*
  Adding support for GHC 9.4.2 [thanks to amasgen](https://github.com/mkloczko/derive-storable-plugin/pull/10).\n\n##
  0.2.3.5  -- 2022-04-03\n\n* Adding support for GHC 9.2.1 [thanks to dpwiz](https://github.com/mkloczko/derive-storable-plugin/pull/6).\n\n##
  0.2.3.4  -- 2021-07-12\n\n* Adding support for GHC 9.0.1\n\n## 0.2.3.3  -- 2020-12-05\n\n*
  Put a comma in a wrong place.\n\n## 0.2.3.2  -- 2020-12-04\n\n* Compiler marked
  as pure.\n\n## 0.2.3.1  -- 2020-11-28\n\n* Support for derive-storable 0.3.0.0\n\n##
  0.2.3.0  -- 2020-03-23\n\n* Support for derive-storable 0.2.0.0\n* Bump to 8.8\n*
  Prepared for 8.10\n\n## 0.2.2.0  -- 2018-09-29\n\n* Bump to 8.6\n\n## 0.2.1.0  --
  2018-03-20\n\n* Bump to 8.4\n\n## 0.2.0.0  -- 2017-11-04\n\n* Support for GHC 8.2.*.
  \n* Added benchmarks.\n\n## 0.1.0.3  -- 2017-01-08\n\n* Added tests.\n* Added TravisCI
  builds.\n\n## 0.1.0.2  -- 2016-09-11\n\n* Changed generic-storable to derive-storable
  in README.md\n* Added README.md to the package\n\n\n## 0.1.0.0  -- 2016-09-08\n\n*
  First version. Released on an unsuspecting world.\n"
changelog-type: markdown
description: "# Introduction\n\n[![Hackage](https://img.shields.io/hackage/v/derive-storable-plugin.svg)](https://hackage.haskell.org/package/derive-storable-plugin)
  [![Build Status](https://github.com/mkloczko/derive-storable-plugin/workflows/Haskell-CI/badge.svg)](https://github.com/mkloczko/derive-storable-plugin/actions?query=workflow%3AHaskell-CI)\n\nThe
  goal of `derive-storable-plugin` is to support the [derive-storable](http://hackage.haskell.org/package/derive-storable)
  package. It introduces optimisations to GStorable methods derived using GHC.Generics
  at core-to-core passes. \n\n# Usage\n\nJust add a `-fplugin=Foreign.Storable.Generic.Plugin`
  flag and you're set. You might also want to pass a verbosity flag -vX, where X is
  either 0,1 or 2. By default the verbosity flag is set to `-v1`. \n\n\n```haskell\n{-#
  LANGUAGE DeriveGeneric, DeriveAnyClass #-}\n{-# OPTIONS_GHC -fplugin=Foreign.Storable.Generic.Plugin
  #-}\n{-# OPTIONS_GHC -fplugin-opt=Foreign.Storable.Generic.Plugin:-v1 #-} \nmodule
  Main where\n\nimport GHC.Generics\n\nimport Foreign.Storable.Generic\nimport Foreign.Ptr\nimport
  Foreign.Marshal.Alloc\n\ndata Point = Point {\n    x :: Float,\n    y :: Float\n
  \   } deriving (Show, Read, Generic, GStorable)\n\nmain = do\n    let val = Point
  0.0 10.0\n    ptr <- malloc :: IO (Ptr Point)\n    putStrLn \"Created a ptr with
  value of\"\n    print =<< peek ptr\n    poke ptr val\n    putStrLn \"And now the
  value of ptr is:\"\n    print =<< peek ptr\n```\n\n# Benchmarks\n\nThe plugin was
  benchmarked using [derive-storable-benchmark](https://www.github.com/mkloczko/derive-storable-benchmark/tree/plugin)
  package. The benchark measures handwritten Storable instances, raw GStorable instances
  and optimised-by-plugin GStorable instances. The code was compiled with `-O1` optimisation
  flag.\n![Benchmarks](https://raw.githubusercontent.com/mkloczko/derive-storable-plugin/images/benchmarks/O1.png)\n"
description-type: markdown
hash: f82b5cc67d7affbb41040d3a5812e6a587894e232e7a5d5ccb33103836e51fa6
homepage: https://www.github.com/mkloczko/derive-storable-plugin/
latest: 0.2.3.7
license-name: MIT
maintainer: mateusz.p.kloczko@gmail.com
synopsis: GHC core plugin supporting the derive-storable package.
test-bench-deps:
  QuickCheck: '>=2.10'
  base: '>=4.10 && <5'
  criterion: '>=1.1.0'
  deepseq: '>=0'
  derive-storable: '>=0'
  derive-storable-plugin: '>=0'
  ghc: '>=8.2 && <9.7'
  ghci: '>=8.2 && <9.7'
  hspec: '>=2.4'
  text: <1.2.5.0
