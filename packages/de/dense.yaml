all-versions:
- 0.1.0.0
- 0.1.0.1
author: cchalmers
basic-deps:
  base: '>=4.6 && <5'
  binary: '>=0'
  bytes: '>=0'
  cereal: '>=0'
  comonad: '>=0'
  deepseq: '>=0'
  ghc-prim: '>=0'
  hashable: '>=0'
  lens: '>=0'
  linear: '>=1.20 && <1.22'
  primitive: '>=0'
  semigroupoids: '>=0'
  template-haskell: '>=0'
  transformers: '>=0'
  transformers-compat: '>=0'
  vector: '>=0.12 && <0.13'
changelog: ''
changelog-type: ''
description: "## dense\n\n[![Build Status](https://travis-ci.org/cchalmers/dense.svg?branch=master)](https://travis-ci.org/cchalmers/dense)\n[![Haddock](https://rawgit.com/cchalmers/dense/gh-pages/haddock.svg)](https://cchalmers.github.io/dense/)\n[![Hackage](https://img.shields.io/hackage/v/dense.svg?style=flat)](https://hackage.haskell.org/package/dense)\n\n[`dense`]:
  http://hackage.haskell.org/package/dense\n[`vector`]: http://hackage.haskell.org/package/vector\n[`linear`]:
  http://hackage.haskell.org/package/linear\n[`repa`]: http://hackage.haskell.org/package/repa\n[`array`]:
  http://hackage.haskell.org/package/array\n[`yarr`]: http://hackage.haskell.org/package/yarr\n\n[`dense`]
  is a multidimensional array library build on top of the\n[`vector`] package, using
  indices from the [`linear`] package. Native\nsupport for mutable arrays, stencils
  and parallel computation.\n\n### Array type\n\nArrays are just vectors (from [`vector`])
  with a shape:\n\n\n```.haskell\ndata Array v f a = Array !(f Layout) !(v a)\n```\n\nwhere
  `Layout f = f Int` is the shape of the array, given by a  vector\nfrom [`linear`]
  (`V1`, `V2`, `V3` or `V4`). These vectors are also used\nto indexing:\n\n```.haskell\n>
  a ! V3 1 2 3\n```\n\n### Delayed arrays\n\nA delayed array, defined by\n\n```.haskell\ndata
  Delayed f a = Delayed !(Layout f) (Int -> a)\n```\n\ncan be constructing from a
  normal array via `delay`. It can be useful\nfor mapping a function over an array
  and computing the result in\nparallel via `manifest`:\n\n```.haskell\n> manifest
  . fmap (+100) . delay\n```\n\nor equivalently using the `delayed` isomorphism:\n\n```.haskell\n>
  delayed +~ 100\n```\n\n`Delayed` is an instance of many classes, including `Additive`
  from\n[`linear`](http://hackage.haskell.org/package/linear):\n\n```.haskell\n> manifest
  $ delay a ^+^ 3 *^ delay b\n```\n\n### Mutable\n\n[`dense`] has similar mutable
  capabilities to [`vector`], supporting\nmutable operations over a `PrimMonad` in
  `Data.Dense.Mutable`.\n\n### Stencils\n\n[`dense`] has good stencil support, allowing
  construction of 1D, 2D or 3D\nstencils using template haskell and quasiquoters.\n\n```.haskell\nmyStencil
  = [stencil|\n  2/5 8/5 2/5\n  8/5  2  8/5\n  2/5 8/5 2/5\n|]\n```\n\nStencils made
  with template haskell are unrolled at compile time.\n\n### Comparison to other array
  libraries\n\n[`array`] supports multidimensional and mutable arrays but [`dense`]\nprovides
  many more high level functions as well as stencils and parallel\ncomputation.\n\n[`repa`]
  and [`yarr`]\n[`dense`] has a lot of the same features as [`repa`] and [`yarr`].
  \nPerformance should be similar (more benchmarks needed) but [`dense`] also\nhas
  support for mutable arrays and multidimensional stencils.\n\n### Package structure\n\nLike
  [`vector`], there is a [`Data.Shaped.Generic`] module for working\nover any generic
  vector as well as [`Data.Shaped.Unboxed`] and\n[`Data.Shaped.Storable`] modules.
  Unlike [`vector`], boxed vectors are\nin [`Data.Shaped.Boxed`].\n\nThe [`Data.Shaped`]
  module includes a subset of [`Data.Shaped.Generic`]\nas well as some extra reexports
  and is intended to be imported\n*unqualified*.\n\n\n[`Data.Shaped`]: https://cchalmers.github.io/dense/Data-Shaped.html\n[`Data.Shaped.Boxed`]:
  https://cchalmers.github.io/dense/Data-Shaped-Boxed.html\n[`Data.Shaped.Generic`]:
  https://cchalmers.github.io/dense/Data-Shaped-Generic.html\n[`Data.Shaped.Storable`]:
  https://cchalmers.github.io/dense/Data-Shaped-Storable.html\n[`Data.Shaped.Unboxed`]:
  https://cchalmers.github.io/dense/Data-Shaped-Unboxed.html\n"
description-type: markdown
hash: 9d475b62efea3afac790e15b2ff3273fe83108b58a6deb5ee61d85c0e12495f5
homepage: ''
latest: 0.1.0.1
license-name: BSD-3-Clause
maintainer: c.chalmers@me.com
synopsis: Mutable and immutable dense multidimensional arrays
test-bench-deps:
  base: '>=4.6 && <5'
  binary: '>=0'
  bytes: '>=0'
  cereal: '>=0'
  comonad: '>=0'
  deepseq: '>=0'
  doctest: '>=0'
  ghc-prim: '>=0'
  hashable: '>=0'
  lens: '>=0'
  linear: '>=1.20 && <1.22'
  primitive: '>=0'
  semigroupoids: '>=0'
  simple-reflect: '>=0'
  template-haskell: '>=0'
  transformers: '>=0'
  transformers-compat: '>=0'
  vector: '>=0'
