all-versions:
- 0.1.0.0
author: Zhang Song
basic-deps:
  base: '>=4.7 && <5'
  template-haskell: '>=0'
changelog: |-
  # Changelog for `derive-is-data-con`

  All notable changes to this project will be documented in this file.

  The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),
  and this project adheres to the
  [Haskell Package Versioning Policy](https://pvp.haskell.org/).

  ## 0.1.0.0 - 2025-02-19

  Initial Release
changelog-type: markdown
description: "# derive-is-data-con\n\nThis package will generate data constructor
  predicate functions\n\n```haskell\n    derive_is ''Bool\n  ======>\n    isFalse
  :: Bool -> Bool\n    isTrue :: Bool -> Bool\n    isFalse False = True\n    isFalse
  _ = False\n    isTrue True = True\n    isTrue _ = False\n```\n\nAbove code will
  generate isTrue and isFalse functions. The function is 'is' + data constructor.
  \n\nFor operators, there is a function that translates to string\n\n```haskell\ncharToString
  :: Char -> String\ncharToString '~' = \"Tilde\"\ncharToString '!' = \"Bang\"\ncharToString
  '@' = \"At\"\ncharToString '#' = \"Hash\"\ncharToString '$' = \"Dollar\"\ncharToString
  '%' = \"Percent\"\ncharToString '^' = \"Caret\"\ncharToString '&' = \"And\"\ncharToString
  '*' = \"Star\"\ncharToString '-' = \"Minus\"\ncharToString '+' = \"Plus\"\ncharToString
  '=' = \"Equal\"\ncharToString '|' = \"Pipe\"\ncharToString '\\\\' = \"Backslash\"\ncharToString
  '/' = \"Slash\"\ncharToString '<' = \"Lt\"\ncharToString '>' = \"Gt\"\ncharToString
  ':' = \"Colon\"\ncharToString '?' = \"Question\"\ncharToString '.' = \"Dot\"\n--
  charToString '[' = \"LSquareBracket\" -- I do not want to support derive_is ''[].
  One should use null function instead.\n-- charToString ']' = \"RSquareBracket\"\n```\n\nFor
  example `(:=:)` will be translated into `isColonStarColon` function\n\nFor gadt
  data type\n\n```haskell\ndata Gadt a b where\n    (:*:), (:=:)  :: a -> b -> Gadt
  a b\n```\n\nThe following code will be generated:\n\n```haskell\n    derive_is ''Gadt
  \n  ======>\n    isColonStarColon :: Gadt a_a54E a_a54F -> Bool\n    isColonEqualColon
  :: Gadt a_a54G a_a54H -> Bool\n    isColonStarColon ((:*:) _ _) = True\n    isColonStarColon
  _ = False\n    isColonEqualColon ((:=:) _ _) = True\n    isColonEqualColon _ = False\n```"
description-type: markdown
hash: eba86c4d21da666bfec179350851aaccfe5ec1216f6d5b4435657ed870a180f9
homepage: https://github.com/HaskellZhangSong/derive-is-data-con#readme
latest: 0.1.0.0
license-name: BSD-3-Clause
maintainer: Haskell.Zhang.Song `at` hotmail.com
synopsis: This package generates data constructor predicate functions
test-bench-deps:
  HUnit: '>=0'
  base: '>=4.7 && <5'
  derive-is-data-con: '>=0'
