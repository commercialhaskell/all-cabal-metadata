all-versions:
- 0.5.0.0
- 0.5.0.1
author: Yorick Laupa
basic-deps:
  array: '>=0.5 && <0.6'
  base: '>=4.7 && <5'
  containers: '>=0'
  exceptions: '>=0'
  mtl: '>=2.0 && <3.0'
  parsec: '>=3.1.2'
  text: '>=1.0 && <1.3'
  transformers: '>=0.3 && <0.6'
changelog: |
  0.5.0.1
  -------
  * Support GHC 8.*
changelog-type: markdown
description: "Small configuration library written in Haskell\n\n[![Build Status](https://travis-ci.org/YoEight/deiko-config.png?branch=master)](https://travis-ci.org/YoEight/deiko-config)\n\n##Overview\n\nUses
  [Typesafe-config](https://github.com/typesafehub/config)'s format: HOCON\n\nHOCON
  stands for Human-Optimized Config Object Notation. It's basically a JSONÂ superset\n\nHere's
  an example:\n\n```\n# This is a comment\n\nfoo.bar = ${toto}\n\ntoto = false\n\nrawString
  = \"\"\"\n            This is a multi-\n            lines String\n            \"\"\"\n\nanother.string
  = \"I'm a String\"\n\none.more.string = one more string\n\nnested {\n   list: [
  one\n         , 1\n         , \"both\"]\n   \n   homing = { \n     pass: { b: feez
  } { a: \"Prop\"}\n   }\n\n   another: [1,2,3] [4,5,6]\n}\n```\n\nMore information
  about the format can be found on [Typesafe-config project page](https://github.com/typesafehub/config).\n\nThe
  library provides good error messages and comes with a bottom-up type inferencer
  in order to catch more configuration errors.\n\nHere some use-cases:\n\n1) `foo
  = [\"bar\", { baz : 42 }]`\n\nYou'll have:\n\n```\nfoo:1:8-13: Expecting String
  but having Object\n```\n\nreason: List has only one inner type\n\n2) `foo = [\"bar\"]
  [{ baz : 42 }]`\n\nYou'll have:\n\n```\nfoo:1:7-14: Expecting List[String] but having
  List[Object]\n```\n\nreason: You can't merge Lists of different types\n\n##Example\n\n```haskell\n{-#
  LANGUAGE OverloadedStrings #-}\nimport Data.Config\nimport Data.Text (Text)\n\ndata
  Foo = Foo { fooPort :: Int, fooAddr :: Text }\n\nmain :: IO ()\nmain = do\n  foo
  <- loadFooProps\n  withFoo foo\n\n  where\n    loadFooProps = do\n      config <-
  loadConfig \"conf/baz.conf\"\n      port   <- getInteger \"foo.port\" config\n      addr
  \  <- getString \"foo.addr\" config\n      return (Foo port addr)\n\nwithFoo ::
  Foo -> IO ()\nwithFoo = ...\n\n```\n\n"
description-type: markdown
hash: cb643cd2cf2c4f51c55688db4af919e70f16605c45e827569bd7255a79ae2d85
homepage: https://github.com/YoEight/deiko-config
latest: 0.5.0.1
license-name: BSD-3-Clause
maintainer: yo.eight@gmail.com
synopsis: Small and typesafe configuration library.
test-bench-deps: {}
