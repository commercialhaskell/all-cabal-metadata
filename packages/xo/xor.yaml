homepage: ''
changelog-type: markdown
hash: f9b4e5e520bc6c3f24e1a4144a8498369ec294e881f7f1209cb6a595db556982
test-bench-deps:
  bytestring: '>=0.10.4 && <0.13'
  base: '>=4.5 && <5'
  xor: -any
  criterion: ^>=1.5.6 || ^>=1.6.0.0
  ghc-byteorder: '>=4.11.0.0 && <4.12'
  tasty-quickcheck: ^>=0.10
  tasty-hunit: ^>=0.10
  tasty: '>=1.2.3 && <1.5'
  QuickCheck: ^>=2.14
maintainer: Andreas Abel
synopsis: Efficient XOR masking
changelog: |2

  ## 0.0.1.2

  _Andreas Abel, 2023-07-19_

  - Use `copyBytes` for deprecated `memcpy` as suggested by `bytestring-0.11.5`.
  - Tested with GHC 7.4 - 9.6.

  ## 0.0.1.1

  _Andreas Abel, 2022-02-16_

  - Allow GHC 9.0 and 9.2.
  - Allow `bytestring-0.11` for GHC â‰¥ 8.
  - Tested with GHC 7.4 - 9.2.

  ## 0.0.1

  _Herbert Valerio Riedel, 2020-05-17_

  Initial release.
basic-deps:
  bytestring: '>=0.10.4 && <0.13'
  base: '>=4.5 && <5'
  ghc-byteorder: ^>=4.11.0.0
all-versions:
- 0.0.1.0
- 0.0.1.1
- 0.0.1.2
author: Herbert Valerio Riedel
latest: 0.0.1.2
description-type: haddock
description: |-
  This package provides efficient implementations of routines for applying <https://en.wikipedia.org/wiki/Bitwise_operation#XOR bitwise XOR> masks to binary data.

  The currently supported operations (see "Data.XOR" API documentation for more details) are applying

  * 8-bit  wide XOR masks or
  * 32-bit wide XOR masks

  to binary data represented by

  * Strict @ByteString@s,
  * Lazy @ByteString@s,
  * @ShortByteString@s (i.e. @ByteArray#@s), or
  * @CStringLen@ (i.e. @Ptr@s).

  The performance is comparable to portable ISO C99 implementations but this library is implemented as pure Haskell and is thereby compatible with compile targets such as <https://github.com/ghcjs/ghcjs GHCJS>.
license-name: GPL-2.0-or-later
