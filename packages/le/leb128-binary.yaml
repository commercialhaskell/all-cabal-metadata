homepage: https://gitlab.com/k0001/leb128-binary
changelog-type: markdown
hash: fc6231de5763e2a55e7cfadc6bd33916367b508c23b83a4eb5473ec9d4b2a772
test-bench-deps:
  bytestring: -any
  base: ==4.*
  tasty-hedgehog: -any
  hedgehog: -any
  tasty-bench: -any
  binary: -any
  leb128-binary: -any
  tasty-hunit: -any
  tasty: -any
  deepseq: -any
maintainer: renÎ»ren.zone
synopsis: Signed and unsigned LEB128 codec for binary library
changelog: |
  # Version 0.1.2

  * Faster `ULEB128` and `SLEB128` encoding and decoding.

  * Added `ZLEB128`. That is, ZigZag encoding of signed numbers in combination
    with `ULEB128`.

  * Added benchmarks.


  # Version 0.1.1

  * COMPILER ASSISTED BREAKING CHANGE on `ULEB128`: `getNatural` takes an maximum
    number of bytes to process as input. See issue #1.

  * COMPILER ASSISTED BREAKING CHANGE on `SLEB128`: `getInteger` takes an maximum
    number of bytes to process as input. See issue #1.

  * Added on `ULEB128`: `putByteString`, `getByteString`, `putShortByteString`,
    `getShortByteString`, `putLazyByteString`, `getLazyByteString`, `getIntegral`,
    `getInt`, `getInt8`, `getInt16`, `getInt32`, `getInt64`.

  * Added on `ULEB128`: `putNatural`, `putWord`, `putWord8`, `putWord16`,
    `putWord32`, `putWord64`, `getNatural`, `getWord`, `getWord8`, `getWord16`,
    `getWord32`, `getWord64`.


  # Version 0.1

  * Initial version
basic-deps:
  bytestring: -any
  base: ==4.*
  binary: -any
all-versions:
- '0.1'
- 0.1.1
- 0.1.2
author: Renzo Carbonara
latest: 0.1.2
description-type: markdown
description: "# leb128-binary\n\nSigned and unsigned [LEB128](https://en.wikipedia.org/wiki/LEB128)
  codec \nfor Haskell's [binary](https://hackage.haskell.org/package/binary) library.\n\n\n###
  License\n\nApache-2.0 (see `LICENSE` file).\n"
license-name: Apache-2.0
