homepage: https://github.com/AndreasPK/leb128/issues
changelog-type: markdown
hash: 579ba3853c21f6994308dbea056490bd4d5fd0261d0a41a3653b6fd79c33760b
test-bench-deps:
  bytestring: -any
  test-framework: '>=0.8 && <0.9'
  base: -any
  leb128: -any
  test-framework-quickcheck2: '>=0.3 && <0.4'
  criterion: '>=1.5 && <1.6'
  deepseq: -any
  QuickCheck: '>=2.13 && <2.15'
maintainer: klebinger.andreas@gmx.at
synopsis: LEB128 encoding logic for and in Haskell
changelog: "# Revision history for leb128\r\n\r\n## 0.1.0.0 -- 2020-04-23\r\n\r\n*
  First version. Released on an unsuspecting world.\r\n"
basic-deps:
  bytestring: '>=0.10.6 && <0.12'
  base: '>=4.8 && <4.16'
  ghc-prim: -any
  transformers: -any
all-versions:
- 0.1.0.0
author: Andreas Klebinger
latest: 0.1.0.0
description-type: markdown
description: "# General purpose library for encoding values to LEB128 encoded byte
  sequences.\r\n\r\nThis library provides a generic interface to the core (S)LEB128
  encoding\r\nalgorithm.\r\n\r\n## Provided specific interfaces:\r\n\r\n* A specializations
  based on `bytestring` in \"Codec.LEB128\".\r\n* A specialization over lists in \"Codec.LEB128.List\".\r\n*
  Other implementations should be easy to derive from the interface provided\r\nin
  \"Codec.LEB128.Generic\"\r\n\r\n## Alternative implementations\r\n\r\nThe package
  `leb128-cereal` provides a way to decode using a\r\ncereal parser using the same
  algorithm.\r\n"
license-name: BSD-3-Clause
