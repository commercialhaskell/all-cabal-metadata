all-versions:
- 0.0.0
- 0.0.1
- 0.0.2
- 0.0.3
- 0.0.4
- 0.0.5
- 0.0.6
author: Athan Clark
basic-deps:
  QuickCheck: '>=0'
  base: '>=4.11 && <5'
  unfoldable-restricted: '>=0.0.1'
  unit-constraint: '>=0'
changelog: ''
changelog-type: ''
description: |
  # quickcheck-combinators

  Simply wrap the type you want to generate (assuming it satisfies all the necessary constraints) to refine the terms generated:


  ```haskell
  {-# LANGUAGE DataKinds #-}

  import Data.Set (Set)
  import Test.QuickCheck
  import Test.QuickCheck.Instances
  import GHC.TypeLits

  instance Arbitrary LinearEquation where
    arbitrary = do
      vars <- arbitrary :: Gen (AtLeast 3 Set String)
      -- ...
  ```
description-type: markdown
hash: 49a68fd685edbb7d5828c2fde3ebccfbd7e65af0aaf3e04269840deee631b618
homepage: https://github.com/athanclark/quickcheck-combinators#readme
latest: 0.0.6
license-name: BSD-3-Clause
maintainer: athan.clark@gmail.com
synopsis: Simple type-level combinators for augmenting QuickCheck instances.
test-bench-deps: {}
