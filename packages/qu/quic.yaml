all-versions:
- 0.0.0
- 0.0.1
- 0.1.0
- 0.1.1
- 0.1.2
- 0.1.3
- 0.1.4
- 0.1.5
- 0.1.6
- 0.1.7
- 0.1.8
- 0.1.9
- 0.1.10
- 0.1.11
- 0.1.12
- 0.1.13
- 0.1.14
- 0.1.15
- 0.1.16
- 0.1.17
- 0.1.18
- 0.1.19
- 0.1.20
- 0.1.21
- 0.1.22
- 0.1.24
- 0.1.26
- 0.1.27
- 0.1.28
- 0.2.0
- 0.2.1
- 0.2.2
- 0.2.4
- 0.2.5
author: Kazu Yamamoto
basic-deps:
  array: '>=0.5 && <0.6'
  async: '>=0'
  base: '>=4.9 && <5'
  base16-bytestring: '>=1.0 && <1.1'
  bytestring: '>=0.10'
  containers: '>=0'
  crypto-token: '>=0.1.2 && <0.2'
  crypton: '>=0.34'
  crypton-x509: '>=1.7.6 && <1.8'
  crypton-x509-system: '>=1.6.7 && <1.7'
  data-default: '>=0'
  fast-logger: '>=3.2.2 && <3.3'
  filepath: '>=0'
  http2: '>=0'
  iproute: '>=1.7.12 && <1.8'
  memory: '>=0.18.0 && <0.19'
  network: '>=3.1.4'
  network-byte-order: '>=0.1.7 && <0.2'
  network-control: '>=0.1 && <0.2'
  quic: '>=0'
  random: '>=1.2.1 && <1.3'
  serialise: '>=0'
  stm: '>=2.5 && <2.6'
  tls: '>=2.0 && <2.2'
  tls-session-manager: '>=0.0.5'
  unix-time: '>=0.4.12 && <0.5'
changelog: |
  # ChangeLog

  ## 0.2.5

  * Re-throwing asynchronous exceptions.

  ## 0.2.4

  * Putting `#if` for `threadLabel`.
  * Revert Timeout.hs which is accidentally committed.

  ## 0.2.3

  * Supporting tls v2.1.3.
  * Labeling threads.
  * Using data-default.
  * Removing `unliftio`.

  ## 0.2.2

  # Introducing streamNotCreatedYet for STOP_SENDING.

  ## 0.2.1

  * Using recvMsg and sendBufMsg.

  ## 0.2.0

  * A new server architecture: only wildcard (unconnected) sockets are used.
    [#66](https://github.com/kazu-yamamoto/quic/pull/66)
  * Breaking change: `ccAutoMigration` is removed. Clients always use
    unconnected sockets.

  ## 0.1.28

  * Fixing a bug of quic bit.

  ## 0.1.27

  * New API: `runWithSockets` for servers.

  ## 0.1.26

  * fix syntax error, for GHC 9.2
    [#64](https://github.com/kazu-yamamoto/quic/pull/64)

  ## 0.1.25 (Obsoleted)

  * Accidentally release on a wrong branch.

  ## 0.1.24

  * Introducing `onConnectionEstablished` into `Hooks`.
  * Preparing for tls v2.1.

  ## 0.1.23

  * Accidentally released using a wrong branch. Deprecated on Hackage.

  ## 0.1.22

  * Incresing activeConnectionIdLimit and fix a bug

  ## 0.1.21

  * Workaround for 0s paddings.
  * Another bug fix for packing Fin.

  ## 0.1.20

  * Bug fix for packing Fin.
  * Proper handling for MAX_STREAM_DATA
  * util/{client,server} are now called util/{quic-client, quic-server}.
  * Renaming two command options for util/quic-client.
  * Supporting multiple targets in util/quic-client.

  ## 0.1.19

  * Using network-control v0.1.

  ## 0.1.18

  * Fixing a buf of 0-RTT where unidirectionalStream waits for SH.
  * Introducing ccVersion to start with Version1.

  ## 0.1.17

  * Garding the new_connection_id attack.

  ## 0.1.16

  * Using tls v2.0.

  ## 0.1.15

  * Support customizing ClientHooks and ServerHooks config from tls

  ## 0.1.14

  * Using crypto-token v0.1

  ## 0.1.13

  * Garding the path_request attack.

  ## 0.1.12

  * Fixing build.

  ## 0.1.11

  * Rescuing GHC 8.10, 9.0 and 9.2.

  ## 0.1.11

  * Adding possibleMyStreams.

  ## 0.1.10

  * Setting proper upper boundaries for the dependencies

  ## 0.1.9

  * Using the network-control package.
  * Rate control for some frames.
  * Announcing MaxStreams correctly.

  ## 0.1.8

  * Announcing MaxStreams properly.
  * Terminating a connection if the peer violates flow controls.

  ## 0.1.7

  * Using System.Timeout.timeout.

  ## 0.1.6

  * Fixing the race condition of `timeout`.

  ## 0.1.5

  * Catching up "tls" v1.9.0.
  * Fixing the timing to set resumption tokens.

  ## 0.1.4

  * Fixing the race of socket closure.

  ## 0.1.3

  * Supporting `tls` v1.8.0.

  ## 0.1.2

  * Using "crypton" instead of "cryptonite".

  ## 0.1.1

  * Fix recvStream hanging
    [#54](https://github.com/kazu-yamamoto/quic/pull/54)
  * Don't use the fusion crypto on Intel if the CPU does not
    provides enough features.
  * Add cabal flag for fusion support
    [#53](https://github.com/kazu-yamamoto/quic/pull/53)

  ## 0.1.0

  * Supporting QUICv2 and version negotiation.
  * Supporting CPUs other than Intel.
  * Supporting Windows.
  * Using the network-udp package

  ## 0.0.1

  * Making Haskell servers friendly with Chrome
    [#20](https://github.com/kazu-yamamoto/quic/pull/20)

  ## 0.0.0

  * Initial version.
changelog-type: markdown
description: 'Library for QUIC: A UDP-Based Multiplexed and Secure Transport'
description-type: haddock
hash: 9d98bb355b8b36e3cd7ca547302481052dc380232749669fb42875d7b3b3bc31
homepage: ''
latest: 0.2.5
license-name: BSD-3-Clause
maintainer: kazu@iij.ad.jp
synopsis: QUIC
test-bench-deps:
  QuickCheck: '>=0'
  async: '>=0'
  base: '>=4.9 && <5'
  base16-bytestring: '>=1.0'
  bytestring: '>=0'
  containers: '>=0'
  crypton: '>=0'
  hspec: '>=0'
  network: '>=3.1.2'
  quic: '>=0'
  tls: '>=0'
  unix-time: '>=0'
