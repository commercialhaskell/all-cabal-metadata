all-versions:
- '0.1'
- 0.1.0.1
- 0.1.0.2
- 0.1.0.3
- 0.1.0.4
- 0.1.0.5
- 0.1.0.6
author: Bertram Felgenhauer
basic-deps:
  QuickCheck: '>=2.7.3 && <2.16'
  base: '>=4.6 && <5'
  containers: '>=0.5 && <0.8'
changelog: "QuickCheck-safe 0.1.0.6\n\t* compatibility with QuickCheck 2.13\n\nQuickCheck-safe
  0.1.0.5\n\t* compatibility with QuickCheck 2.12\n\nQuickCheck-safe 0.1.0.4\n\t*
  compatibility with QuickCheck 2.11\n\nQuickCheck-safe 0.1.0.3\n\t* compatibility
  with QuickCheck 2.10\n\nQuickCheck-safe 0.1.0.2\n\t* compatibility with QuickCheck
  2.9\n\nQuickCheck-safe 0.1.0.1\n\t* compatibility with QuickCheck 2.7\n\nQuickCheck-safe
  0.1\n\t* initial release\n"
changelog-type: text
description: |-
  QuickCheck-safe reimplements the quickCheck functionality with a pure
  interface and a very small trusted base (see Test.QuickCheck.Safe.Trusted).

  * uses the existing Arbitrary instances
  * implemented features: testing, result minimization (i.e., shrinking)
  * missing features: expected failures, label frequencies, coverage

  The package is targeted at users who want to leverage SafeHaskell for
  sandboxing.

  >>> putStr $ quickCheck (inventQCGen ()) (\x -> length (x :: [()]) < 10)
  *** Failed! Falsifiable (after 18 tests and 3 shrinks):
  [(),(),(),(),(),(),(),(),(),(),(),(),(),(),()]
description-type: haddock
hash: dcdd47d4a5a059725af675a49336c8286ba8cc51420937ff348249512b1f6c50
homepage: ''
latest: 0.1.0.6
license-name: MIT
maintainer: Bertram Felgenhauer <int-e@gmx.de>
synopsis: Safe reimplementation of QuickCheck's core
test-bench-deps: {}
