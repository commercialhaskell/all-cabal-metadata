all-versions:
- 0.1.0.0
author: Ben Weitzman
basic-deps:
  aeson: '>=0'
  base: '>=4.8 && <4.9'
  hashable: '>=0'
  scientific: '>=0'
  text: '>=0'
  unordered-containers: '>=0'
  vector: '>=0'
changelog: ''
changelog-type: ''
description: "# quick-schema\nSlimmed down json schema language and validator\n\n[![Build
  Status](https://img.shields.io/circleci/project/benweitzman/quick-schema.svg?style=flat-square)](https://circleci.com/gh/benweitzman/quick-schema)\n[![Coverage
  Status](https://img.shields.io/coveralls/benweitzman/quick-schema.svg?style=flat-square)](https://coveralls.io/github/benweitzman/quick-schema?branch=master)\n\nquick-schema
  defines a format for describe a restricted set of JSON document structures. It is
  represented in JSON and has the added benefit that a JSON document can be it's own
  be it's own schema. \n\nquick-schema infers the structure of a JSON document by
  looking at the types of an example document. Consider the document\n\n```json\n{\n
  \ \"age\": 25,\n  \"name\": \"Ben\"\n}\n```\n\nWhen interpreted with quick-schema,
  this document describes a schema that expects a top level object with two keys,
  one named `age` that should have a number value and one named `name` that should
  have a text value. The actual values of the keys are used only to determine the
  type and to give an example of intended use, but do not have a specific meaning
  here. \n\n```json\n[\n  {\n    \"age\": 25,\n    \"name\": \"Ben\"\n  },\n  {\n
  \   \"street\": \"Prospect Street\",\n    \"number\": 54,\n    \"city\": \"Cambridge\"\n
  \ }\n]\n```\n\nMultiple values in lists in quick-schema give the possibility for
  having different subvalues. Every item in the value list must match one of the of
  the schemas in the schema list. \n\nOptional values are specific by adding a `?`
  to the end of a key, and exact values are specified by adding a `=`.\n\nFor example,
  we could encode a tagged union type:\n\n```json\n[\n  {\n    \"type=\": \"Person\",\n
  \   \"data\":\n      {\n        \"age\": 25,\n        \"name\": \"Ben\"\n      }\n
  \ },\n  {\n    \"type=\": \"Address\",\n    \"data\":\n      {\n        \"street\":
  \"Prospect Street\",\n        \"number\": 54,\n        \"city\": \"Cambridge\"\n
  \     }\n  }\n]\n```\n"
description-type: markdown
hash: 6e3cfef85618614871f47c890e68d6826860b6411e7a175ecf0b18bda3f38799
homepage: https://github.com/benweitzman/quick-schema
latest: 0.1.0.0
license-name: MIT
maintainer: benweitzman@gmail.com
synopsis: Slimmed down json schema language and validator
test-bench-deps:
  QuickCheck: '>=0'
  aeson: '>=0'
  base: '>=0'
  hspec: '>=0'
  quick-schema: '>=0'
  scientific: '>=0'
  text: '>=0'
  unordered-containers: '>=0'
  vector: '>=0'
