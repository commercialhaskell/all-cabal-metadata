all-versions:
- 0.1.0.0
author: Shea Levy
basic-deps:
  base: ^>=4.16 || ^>=4.17 || ^>=4.18 || ^>=4.19
  containers: ^>=0.6 || ^>=0.7
  general-allocate: ^>=0.2.3
  parametric-functor: ^>=0.1.1
  primitive: ^>=0.9
  transformers: ^>=0.5 || ^>=0.6
changelog: |
  # Revision history for e11y

  ## 0.1.0.0 -- 2024-01-16

  * Initial release
changelog-type: markdown
description: |-
  Instrument your Haskell codebase with [wide, semantically meaningful events](https://charity.wtf/2022/08/15/live-your-best-life-with-structured-events/).

  This library is designed with separating the following concerns in mind:

  [@Writing instrumentation@] When instrumenting code, I want to think in terms of my
  application domain and report any information I might need in order to infer internal
  application-level state and understand the behavior of my program/library.

  [@Consuming instrumentation@] When consuming instrumentation, I want to think in
  terms of the API of the specific backend I'm supporting (writing to @stderr@,
  serving a @Prometheus@ page, posting to @OpenTelemetry@) and what is needed to
  render to that API.

  [@Initializing instrumentation in an application@] When I'm ready to tie it all
  together, I want to identify the specific backends I want to post to and provide
  the bridge code to render the domain-specific instrumentation as needed for those
  backends. I also want to handle concerns like sampling or client-side aggregation
  of domain-specific instrumentation to keep usage manageable.

  See "Observe.Event" for detailed documentation on instrumenting your code.

  See "Observe.Event.Backend" for creating a new @EventBackend@ to consume instrumentation.

  See "Observe.Event.Backend.Data" for an @EventBackend@ that represents the stream of events as
  ordinary Haskell data.

  See [e11y-otel](https://hackage.haskell.org/package/e11y-otel) for an OpenTelemetry-based
  backend.

  This is a rewrite of [eventuo11y](https://hackage.haskell.org/package/eventuo11y), designed
  to be easier to use, less intrusive, and not nearly as annoying to write/say. The name
  is a shortening of "event-based observability" (event-based -> e, observability -> o11y), and
  can be pronounced "eh-lee" or "ee-eleven-why".
description-type: haddock
hash: 6ba1747bcbb8064ff26b02d9a601570199237c250432e34128b39c8b44fa3bf6
homepage: https://github.com/shlevy/e11y
latest: 0.1.0.0
license-name: Apache-2.0
maintainer: shea@shealevy.com
synopsis: An event-oriented observability library
test-bench-deps:
  base: '>=0'
  containers: '>=0'
  e11y: '>=0'
  exceptions: ^>=0.10
  general-allocate: '>=0'
  strict-identity: ^>=0.1
  sydtest: ^>=0.15
  transformers: '>=0'
