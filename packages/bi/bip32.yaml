all-versions:
- '0.1'
- 0.1.1
- 0.1.2
- '0.2'
author: k0001
basic-deps:
  base: '>=4 && <5'
  base58-bytestring: '>=0'
  binary: '>=0'
  bitcoin-hash: '>=0'
  bitcoin-keys: '>=0'
  bytestring: '>=0'
changelog: |
  # Version 0.2

  * COMPILER ASSISTED BREAKING CHANGE â€” `Prv`, `prv`, `unPrv`, `prvToPub`, `Pub`,
    `pub` and `unPub` are not exported from the `BIP32` module anymore. Instead,
     this library now uses the corresponding types and functions from the
     `Bitcoin.Keys` module of the `bitcoin-keys` library.

  * Add `indexNext`, `subsXPubXPub`, `subsPubPub`, `subsXPrvXPrv`, `subPrvPrv`,
    `subsXPrvXPub`, `subsPubPub`.

  * Add field accessors to `XPub` and `XPrv`.

  * Depend on `bitcoin-keys`.

  * Improved `Show` instances.

  * Improved documentation.


  # Version 0.1.2

  * Depend on `bitcoin-hash`.

  * Export `unIndex`.


  # Version 0.1.1

  * Builds with GHCJS.


  # Version 0.1

  * Initial version.
changelog-type: markdown
description: |
  # bip32

  Haskell implementation of the BIP-0032 standard: Hierarchical Deterministic
  Wallets, for Bitcoin and other cryptocurrencies.

  Based on the specification
  at [BIP-0032](https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki).

  This library builds on GHC and GHCJS.

  ## Developing in GHCJS

  * `cabal --ghcjs build` will build the Haskell `bip32` library with the
    JavaScript dependencies already compiled at `js/index.compiled.js`.

  * If the `js/index.js` file changes, run `npx webpack` to regenerate
    `js/index.compiled.js` and commit both files to the repository.

  * If the `package.json` file changes, run `npm install -D` to get new JS
    dependencies, and then run `npx webpack` as above.
description-type: markdown
hash: e2cd268e6d4b21c072eed21f5c2a3ccf7851b9a4aecdfb8940feb9a50482c900
homepage: https://gitlab.com/k0001/hs-bip32
latest: '0.2'
license-name: Apache-2.0
maintainer: k0001
synopsis: 'BIP-0032: Hierarchical Deterministic Wallets for Bitcoin and other cryptocurrencies'
test-bench-deps:
  base: '>=4 && <5'
  base16-bytestring: '>=0'
  base58-bytestring: '>=0'
  binary: '>=0'
  bip32: '>=0'
  bitcoin-keys: '>=0'
  bytestring: '>=0'
  hedgehog: '>=0'
  tasty: '>=0'
  tasty-hedgehog: '>=0'
  tasty-hunit: '>=0'
