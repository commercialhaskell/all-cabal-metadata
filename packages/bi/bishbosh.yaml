homepage: https://functionalley.com/BishBosh/bishbosh.html
changelog-type: markdown
hash: 7b73f154b38f7ff504e706c44316f83305244e4470f430a69d17aff96abb9ece
test-bench-deps:
  toolshed: '>=0.18'
  extra: -any
  base: '>=4.9 && <5.0'
  filepath: -any
  data-default: -any
  HUnit: -any
  array: '>=0.5.1.1'
  containers: -any
  hxt: -any
  polyparse: -any
  mtl: -any
  random: -any
  deepseq: '>=1.4.1'
  QuickCheck: '>=2.8.2'
  bishbosh: -any
maintainer: mailto:bishbosh@functionalley.com
synopsis: Plays chess.
changelog: "# 2018-01-01 Dr. Alistair Ward <bishbosh@functionalley.com>\n\n## 0.0.0.1\n*
  First version of the package.\n\n## 0.0.0.2\nMinor changes required to build on
  Windows.\n\n## 0.0.0.3\nAdded **Paths_bishbosh** to **Other-modules** section of
  cabal file.\n\n## 0.0.0.4\nChanged references to author's domain-name.\n\n## 0.0.0.5\nAdded
  ability to specify the text-encoding used in a PGN-database file.\nUpdated list
  of test-compilers.\n\n## 0.0.0.6\nFixed failure to persist game-state after requesting
  that the game be restarted.\nFixed parsing of **TextEncoding** in **PGNOptions**.\nReplaced
  module **Distribution.Verbosity** with **BishBosh.Input.Verbosity**.\n\n## 0.0.0.7\nRewrote
  function **BishBosh.Data.RoseTree.countTerminalNodes** in accordance with the suggestions
  of David Feuer.\nAmended function **BishBosh.State.EnPassantAbscissa.mkMaybeEnPassantAbscissa**
  to guard against exposing one's King after En-passant capture.\n\n## 0.0.0.8\nCorrected
  the parsing of FEN when an Enpassant-destination defined on file **b** was erroneously
  interpreted as a bishop in the previous **CastleableRooks** field.\nAdded parent
  class **BishBosh.Property.ExtendedPositionDescription.EPD** for **Property.ForsythEdwards.FEN**,
  for which the latter typically has a default implementation of both methods.\n\n##
  0.1.0.0\n### Bug-fixes:\n\t* Upgraded the transposition-table in module **Search.DynamicMoveData**,
  from merely recording moves (which doesn't include the rank to which a Pawn is promoted),
  to recording qualified-moves.\n\t* In function **Search.AlphaBeta.negaMax.descend.selectMax**,
  amended bound function **isFitter** to prefer shorter move-sequences where fitness
  is equal, & corrected the scenario in which all nodes were skipped because they
  were repetitious, but without ever defining alpha.\n### Features:\n\t* Added the
  configurable runtime ability to asynchronously decompress PGN-databases, & to set
  a maximum number of games to read.\n\t* Added a configuration-option to normalise
  the values of specified piece-square tables into the closed unit-interval.\n\t*
  Modularised the packaged config-files, by defining XML **External Entities** in
  the DTD.\n\t* Added suggestions on failure to parse a user-command, & created a
  module **Text.AutoComplete** to contain common code.\n\t* Added runtime commands:\n\t-----------------------------------------\n\tCommand\t\t\t\t|
  Purpose\n\t--------------------------------| -------\n\t**availableMoves**\t\t|
  to report all available moves from the current position.\n\t**maxPositionInstances**\t|
  to reveal the maximum number of instances any available position has been visited.\n\t**reversiblePlyCount**\t\t|
  to count the number of consecutive reversible plies that have been made.\n\t-----------------------------------------\n\t*
  Added **makefile** to facilitate common tasks.\n\t* Removed the configuration-option
  **preferMovesTowardsCentre** & its implementation in function **Cartesian.Coordinates.radiusSquared**,
  because of it's conceptually wobbly foundations.\n### Command-line Options:\n\t*
  Added a new module **Input.CategorisedCommandLineOptions** to improved the partitioning
  of command-line options into functional categories.\n\t* Added a command-line option
  **--formatPieceSquareTableForGNUPlot** to print the piece-square tables in a format
  suitable for **GNUPlot**.\n### Performance:\n\t* Included a compilation-flag **unboxedarrays**,
  to request the use of unboxed arrays where (infrequently) possible.\n\t* Changed
  data-type **Component.PieceSquareByCoordinatesByRank.EitherPieceSquareValueByNPiecesByCoordinates**,
  bringing type **Cartesian.Coordinates.ByCoordinates** inside **Either**, leading
  to significant space/time gains.\n\t* Constructed each large constant data-structure
  in parallel. Bracketed all data-parallel operations with CPP-conditionals controlled
  by the compilation-flag **threaded**.\n\t* Parallelised function **Attribute.CriterionValue.calculateWeightedMean**.\n###
  Architectural:\n\t* Added new modules:\n\t-----------------------------------------\n\tModule\t\t\t\t|
  Purpose\n\t--------------------------------| -------\n\t**Component.CastlingMove**\t|
  Forked from module **Component.Move**\n\t**Data.Enum**\t\t\t| Currently single-function.\n\t**Data.Foldable**\t\t|
  Currently single-function.\n\t**Property.FixedMembership**\t| Defines a class to
  which sum-types can conform.\n\t**StateProperty.Censor**\t| Relocated from directory
  **State/**\n\t**StateProperty.Mutator**\t| defines a class to express the dual implementations
  within **State.Board**.\n\t**StateProperty.Seeker**\t| defines a class to express
  the dual implementations within **State.Board**.\n\t**Text.Case**\t\t\t| Forked
  from **Text.ShowList** to contain case-related operations.\n\t**Text.Prefix**\t\t\t|
  Forked from **Text.ShowList** to define the constant prefixes of log-messages.\n\t-----------------------------------------\n###
  Testing:\n\t* Split **src-test/Main.hs** into **src-test/HUnit.hs** & **src-test/QuickCheck.hs**,
  each referenced independently from the cabal file.\n\t* Added an executable **duel**
  (to coordinate a battle between two independently configured instances of **bishbosh**)
  & a corresponding section-1 man-page.\n\t* Validated the list of ranks supplied
  to construct either **Attribute.RankValues.RankValues** or **Input.PieceSquareTable.PieceSquareTable**.\n###
  Refactoring:\n\t* Flattened the nested array **Component.Zobrist.getRandomByCoordinatesByRankByLogicalColour**,
  by means of a composite index.\n\t* Reimplemented function **Cartesian.Coordinates.getLogicalColourOfSquare**.\n\t*
  Reimplemented function **Cartesian.Coordinates.interpolationsByDestinationBySource**
  in terms of function **Cartesian.Coordinates.extrapolationsByDirectionByCoordinates**.\n\t*
  Used the **LambdaCase** language-extension.\n"
basic-deps:
  factory: '>=0.3.1'
  toolshed: '>=0.18'
  hxt-relaxng: -any
  extra: -any
  unix: -any
  base: '>=4.9 && <5.0'
  time: -any
  filepath: -any
  process: '>=1.6.4'
  data-default: -any
  array: '>=0.5.1.1'
  containers: -any
  hxt: -any
  polyparse: -any
  mtl: -any
  random: -any
  parallel: '>=3.0'
  deepseq: '>=1.4.1'
  bishbosh: -any
  directory: -any
all-versions:
- 0.0.0.1
- 0.0.0.2
- 0.0.0.3
- 0.0.0.4
- 0.0.0.5
- 0.0.0.6
- 0.0.0.7
- 0.0.0.8
- 0.1.0.0
author: Dr. Alistair Ward
latest: 0.1.0.0
description-type: markdown
description: |
  # **BishBosh**

  [![Build Status](https://travis-ci.com/functionalley/BishBosh.svg?branch=master)](https://travis-ci.com/functionalley/BishBosh)
  [![Hackage](https://img.shields.io/hackage/v/bishbosh.svg)](https://hackage.haskell.org/package/bishbosh)
  [![License: GPL v3](https://img.shields.io/badge/License-GPL%20v3-blue.svg)](https://www.gnu.org/licenses/gpl-3.0)
  [![Haskell](https://b.repl.ca/v1/language-haskell-yellow.png)](https://haskell.org)

  This is "**BishBosh**", a chess-game which can be rendered in a terminal (emulator) using raw ASCII, or used as an engine by [xboard](https://www.gnu.org/software/xboard/).

  ## Installation

  It can be built & installed using:

  * [Cabal](https://www.haskell.org/cabal/),
  * [The Haskell Tool Stack](https://docs.haskellstack.org/en/stable/README/).

  ## Documentation

  The documentation is in the product's "**man/**" directory & all source-code is documented in [haddock](https://www.haskell.org/haddock/).

  ## License

  For information on copying & distributing this package, see the file "**LICENSE**" in the product's installation-directory.

  ## Bug-reporting

  Bug-reports should be emailed to <bishbosh@functionalley.com>.

  ## Testing

  The test-suite can be run using:

  * "**cabal configure --enable-tests && cabal build && cabal test --show-details=always**",
  * "**stack test**",
  * "**make test**" issued from the product's installation-directory.

  It has only been tested on **Linux**.

  ## Author

  This application is written & maintained by Dr. Alistair Ward.
license-name: GPL-3.0-only
