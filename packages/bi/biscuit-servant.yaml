all-versions:
- 0.1.1.0
- 0.2.0.0
- 0.2.0.1
- 0.2.1.0
- 0.3.0.0
- 0.3.0.1
author: ClÃ©ment Delafargue
basic-deps:
  base: '>=4.7 && <5'
  biscuit-haskell: '>=0.3 && <0.4'
  bytestring: '>=0.10 && <0.12'
  mtl: '>=2.2 && <2.4'
  servant-server: '>=0.18 && <0.21'
  text: '>=1.2 && <3'
  wai: ^>=3.2
changelog: |
  # Changelog for biscuit-servant

  ## 0.3.0.1

  - use biscuit-haskell 0.3.0.1
  - GHC 9.6 and 9.8 support
  - Generalize type for `withPriorityAuthorizer`

  ## 0.3.0.0

  - use biscuit-haskell 0.3.0.0
  - GHC 9.2 support
  - custom error handlers and token post-processing

  ## 0.2.1.0

  - use biscuit-haskell 0.2.1.0

  ## 0.2.0.1

  - use biscuit-haskell 0.2.0.1

  ## 0.2.0.0

  - use biscuit-haskell 0.2.0.0
  - allow effectful verification

  ## 0.1.1.0

  Initial release
changelog-type: markdown
description: "<img src=\"https://raw.githubusercontent.com/biscuit-auth/biscuit-haskell/main/assets/biscuit-logo.png\"
  align=right>\n\n# biscuit-servant \U0001F916 [![Hackage][hackage]][hackage-url]\n\n>
  **Servant combinators to enable biscuit validation in your API trees**\n\n## Usage\n\n```Haskell\ntype
  AppM = WithAuthorizer Handler\ntype API = RequireBiscuit :> ProtectedAPI\n\n-- /users\n--
  /users/:userId\ntype ProtectedAPI =\n  \"users\" :> ( Get '[JSON] [User]\n             :<|>
  Capture \"userId\" Int :> Get '[JSON] User\n             )\napp :: PublicKey ->
  Application\napp pk = serveWithContext @API Proxy (genBiscuitCtx pk) server\n\nserver
  :: Server API\nserver biscuit =\n  let handlers = userListHandler :<|> singleUserHandler\n
  \     handleAuth =\n        handleBiscuit biscuit\n        -- `allow if right(\"admin\");`
  will be the first policy\n        -- for every endpoint.\n        -- Policies added
  by endpoints (or sub-apis) will tried after this one.\n        . withPriorityAuthorizer
  [authorizer|allow if right(\"admin\");|]\n        -- `deny if true;` will be the
  last policy for every endpoint.\n        -- Policies added by endpoints (or sub-apis)
  will tried before this one.\n        . withFallbackAuthorizer [authorizer|deny if
  true;|]\n  in hoistServer @ProtectedAPI Proxy handleAuth handlers\n\nallUsers ::
  [User]\nallUsers = [ User 1 \"Danielle\" \"George\"\n           , User 2 \"Albert\"
  \"Einstein\"\n           ]\n\nuserListHandler :: AppM [User]\nuserListHandler =
  withAuthorizer [authorizer|allow if right(\"userList\")|]\n  $ pure allUsers\n\nsingleUserHandler
  :: Int -> AppM User\nsingleUserHandler uid =\n  withAuthorizer [authorizer|allow
  if right(\"getUser\", {uid})|] $\n  let user = find (\\user -> userId user == uid)
  allUsers\n   in maybe (throwError error404) (\\user -> pure user) user\n```\n\n[Hackage]:
  https://img.shields.io/hackage/v/biscuit-haskell?color=purple&style=flat-square\n[hackage-url]:
  https://hackage.haskell.org/package/biscuit-servant\n"
description-type: markdown
hash: 31adc20bfa3ae39351724487a4c20aca47ada21a28bef3954b366af5b7741768
homepage: https://github.com/biscuit-auth/biscuit-haskell#readme
latest: 0.3.0.1
license-name: BSD-3-Clause
maintainer: clement@delafargue.name
synopsis: Servant support for the Biscuit security token
test-bench-deps:
  base: '>=4.7 && <5'
  biscuit-haskell: '>=0'
  biscuit-servant: '>=0'
  bytestring: '>=0'
  hspec: '>=0'
  http-client: '>=0'
  mtl: '>=0'
  servant: '>=0'
  servant-client: '>=0'
  servant-client-core: '>=0'
  servant-server: '>=0'
  text: '>=0'
  time: '>=0'
  warp: '>=0'
