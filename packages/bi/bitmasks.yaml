all-versions:
- '0'
author: Alice Rixte
basic-deps:
  base: '>=4.18 && <5'
changelog: "# Changelog for `bitmasks`\r\n\r\nAll notable changes to this project
  will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand
  this project adheres to the\r\n[Haskell Package Versioning Policy](https://pvp.haskell.org/).\r\n\r\n\r\n##
  0 - 2025-09-17\r\n\r\n* Bitmask data types with API and tests.\r\n"
changelog-type: markdown
description: "# Bitmasks\r\n\r\nBitmasks for boolean flags.\r\n\r\n## Usage\r\n\r\nDefine
  your flags as an enumeration:\r\n\r\n```haskell\r\nimport Data.Word\r\nimport Data.Bitmask\r\n\r\ndata
  PizzaTopping =\r\n    Cheese\r\n  | Mushrooms\r\n  | Pineapple\r\n  | Ham\r\n  deriving
  (Show, Eq, Bounded, Enum)\r\n\r\n-- We only need 8 bits since there are only 4 toppings\r\ntype
  PizzaMask = Bitmask8 PizzaTopping\r\n```\r\n\r\n### Creating bitmasks\r\n\r\n```haskell\r\n--
  A Margherita pizza (cheese only)\r\nmargherita :: PizzaMask\r\nmargherita = fromFlags
  [Cheese]\r\n\r\nveggie :: PizzaMask\r\nveggie = fromExceptFlags [Ham]\r\n\r\n```\r\n\r\n###
  Access and modify flags\r\n\r\nUse `getFlag` to check if a pizza has a specific
  topping:\r\n\r\n```haskell\r\n>>> getFlag Cheese funghi\r\nTrue\r\n>>> getFlag Pineapple
  funghi\r\nFalse\r\n```\r\n\r\nAdd toppings to a pizza:\r\n\r\n```haskell\r\n>>>
  hawaiian = addFlags [Pineapple, Ham] margherita\r\n>>> getFlags [Pineapple, Mushroom]
  hawaiian\r\nTrue\r\n```\r\n\r\nMake any pizza vegetarian (bitwise AND):\r\n\r\n```haskell\r\n>>>
  veggieHawaiian = veggie .&. hawaiian\r\n>>> getFlag Ham veggieHawaiian\r\n```\r\n\r\nToggle
  (I have no idea what I'm talking about) the toppings :\r\n\r\n```haskell\r\n>>>
  funghi = flipFlags [Pineapple, Mushroom] veggieHawaiian\r\n>>> toFlags funghi\r\n[Cheese,Mushrooms]\r\n```\r\n\r\nRemove
  a topping:\r\n\r\n```haskell\r\n>>> margherita == deleteFlag Mushroom funghi\r\nTrue\r\n```\r\n\r\n###
  Convert to lists\r\n\r\n```haskell\r\n-- Get all toppings as a list\r\n>>> toFlags
  funghi\r\n[Cheese,Mushrooms]\r\n>>> toFlags hawaiian\r\n[Cheese,Pineapple,Ham]\r\n\r\n--
  Convert to association lists\r\n>>> toFlagsBool funghi\r\n[(Cheese,True),(Mushrooms,True),(Pineapple,False),(Ham,False)]\r\n```\r\n"
description-type: markdown
hash: 4ed13238918ac18556f6a847efe90dd3460fa68167a0fd7542b5b434de1904f1
homepage: https://github.com/AliceRixte/bitmasks#readme
latest: '0'
license-name: BSD-3-Clause
maintainer: alice.rixte@u-bordeaux.fr
synopsis: Bitmasks for efficient storing of boolean flags
test-bench-deps:
  QuickCheck: '>=2.14'
  base: '>=4.18 && <5'
  bitmasks: '>=0'
  hspec: '>=2.11'
