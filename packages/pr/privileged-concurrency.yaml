all-versions:
- '0.2'
- '0.3'
- '0.5'
- '0.6'
- 0.6.1
- 0.6.2
- 0.7.0
author: Jeff Shaw, Ömer Sinan Ağacan
basic-deps:
  base: '>=4 && <5'
  contravariant: '>=0'
  lifted-base: '>=0'
  stm: '>=0'
  unliftio: '>=0'
  unliftio-core: '>=0'
changelog: |
  0.7.0
  -----

  * Added `Control.Concurrent...Class` modules with typeclasses for overloaded
    operations. Functions like `putMVar` now work on both `WriteOnlyMVar` and
    `MVar`.

  * Export list updated. Importing `Control.Concurrent.Privilege` should now be
    enough for all use cases.

  0.6.2
  -----

  * Added `tryReadTChan`, `peekTChan` and `tryPeekTChan` for read-only `TChan`s.

  0.6.1
  -----

  * Added `tryReadMVar` for read-only `MVar`s.

  0.6
  ---

  * Write-only types are no longer `Eq`, but are now contravariant functors.

  0.5
  ---

  * Read-only types are no longer `Eq`, but are now functors.

  0.4
  ---

  * Functions are low lifted to `MonadBase IO`.

  0.3
  ---

  * Initial version with read-only and write-only versions of `Chan`, `MVar`,
    `TChan`, `TMVar` and `TVar`.
changelog-type: markdown
description: |-
  Any @MVar@ or other concurrency primitive can be read by or written to any
  function which recieves it as a value. This package provides read-only and
  write-only versions of @Chan@, @MVar@, @TChan@, @TMVar@, and @TVar@.
  Functions which use these versions receive permission to read, write, or
  both based on their type signatures.
description-type: haddock
hash: c73bb0000b5e1b7335cb1ca5065054173b0e911701345715eb6112b118b6919e
homepage: ''
latest: 0.7.0
license-name: BSD-3-Clause
maintainer: Ömer Sinan Ağacan <omeragacan@gmail.com>
synopsis: Provides privilege separated versions of the concurrency primitives.
test-bench-deps: {}
