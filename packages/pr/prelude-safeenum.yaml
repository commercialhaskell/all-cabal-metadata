homepage: https://wrengr.org/software/hackage.html
changelog-type: text
hash: ce4d1de8dabf4f4ecb66a8aa4c3bf28b3d1d97ef2a7945f12564cab3f3ef3443
test-bench-deps: {}
maintainer: wren@cpan.org
synopsis: A redefinition of the Prelude's Enum class in order to render it safe.
changelog: |
  0.1.1.3 (2021-10-17):
      - Updated maintainer emails/urls
      - General metadata cleanup
      - Started using GithubActions for CI; no code changes.
  0.1.1.2 (2015-05-30):
      - Moved VERSION to CHANGELOG
  0.1.1 (2013.03.07):
      - Prelude.SafeEnum: corrected the Char instance for GHC 7.8
  0.1.0.1 (2013.06.01):
      - Documentation changes.
  0.1.0 (2013.05.29):
      - forked from the (unpublished) data-fin package.
      - made things Trustworthy, and some other cleanup.
basic-deps:
  base: '>=4 && <5'
all-versions:
- 0.1.0
- 0.1.0.1
- 0.1.1
- 0.1.1.1
- 0.1.1.2
- 0.1.1.3
author: wren gayle romano
latest: 0.1.1.3
description-type: markdown
description: |
  prelude-safeenum
  ================
  [![Hackage version](https://img.shields.io/hackage/v/prelude-safeenum.svg?style=flat)](https://hackage.haskell.org/package/prelude-safeenum)
  [![Build Status](https://github.com/wrengr/prelude-safeenum/workflows/ci/badge.svg)](https://github.com/wrengr/prelude-safeenum/actions?query=workflow%3Aci)
  [![Dependencies](https://img.shields.io/hackage-deps/v/prelude-safeenum.svg?style=flat)](http://packdeps.haskellers.com/specific?package=prelude-safeenum)

  A redefinition of the Prelude's `Enum` class in order to render it
  safe. That is, the Haskell Language Report defines `pred`, `succ`,
  `fromEnum`, and `toEnum` to be partial functions when the type is
  `Bounded`. This is unacceptable. We define a new type-class hierarchy
  for enumeration which is safe and also generalizes to cover types
  which can only be enumerated in one direction.


  ## Install

  This is a very simple package and should be easy to install. You
  should be able to use the standard:

      $> cabal install prelude-safeenum


  ## Portability

  An attempt has been made to keep this library portable; however,
  it does rely on a few language extensions. All the required language
  extensions are:

  * CPP
  * GeneralizedNewtypeDeriving
  * MagicHash - only for GHC
  * Trustworthy - only for GHC >= 7.1

  The GeneralizedNewtypeDeriving extension is used for brevity in
  Data.Number.CalkinWilf. If you'd like to use this package with a
  compiler that does not support that extension, contact the maintainer
  and it can be removed.

  This package is only "Trustworthy" rather than "Safe" for two
  reasons: (1) Data.Number.CalkinWilf uses GeneralizedNewtypeDeriving,
  and (2) Prelude.SafeEnum imports GHC.Exts for build/foldr fusion
  and for the Char instances.


  ## Links

  * [Website](http://wrengr.org)
  * [Blog](http://winterkoninkje.dreamwidth.org/)
  * [Twitter](https://twitter.com/wrengr)
  * [Hackage](http://hackage.haskell.org/package/prelude-safeenum)
  * [GitHub](https://github.com/wrengr/prelude-safeenum)
license-name: BSD-3-Clause
