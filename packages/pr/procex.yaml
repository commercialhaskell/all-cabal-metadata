all-versions:
- 0.1.0.0
- 0.2.0
- 0.2.1
- 0.2.2
- 0.2.3
- 0.3.0
- 0.3.1
- 0.3.2
- 0.3.3
author: Las Safin
basic-deps:
  async: ^>=2.2.3
  base: '>=4.14.1 && <5'
  bytestring: '>=0.10.12 && <0.12'
  containers: ^>=0.6.2
  deepseq: ^>=1.4.4
  unix: '>=2.7 && <2.9'
  utf8-string: ^>=1.0.2
changelog: |
  # Revision history for procex

  ## 0.3.3 -- 2022-08-29

  - Fix associativities of piping operators

  ## 0.3.2 -- 2022-04-24

  - Fix support for newer glibcs that already define `close_range`
  - Fall back to primitive `close_range` if syscall fails

  ## 0.3.1 -- 2021-08-24

  - Added `passNoFd` and some `QuickCmdArg` instances
changelog-type: markdown
description: |
  [![Hackage](https://img.shields.io/hackage/v/procex.svg?style=flat)](https://hackage.haskell.org/package/procex)

  [Hackage documentation](https://hackage.haskell.org/package/procex/docs/)

  [My blog post about using it as a shell](https://las.rs/blog/haskell-as-shell.html) (see `example-shell` directory).

  # About

  `procex` is a library for launching unix processes, that DOES NOT wrap `createProcess`.
  It interfaces directly with `vfork` and `execve`, and closes fds efficiently using the
  new `close_range` Linux syscall (or `close` if not available).
  The syntax for launching processes is clean, concise, and flexible, mimicking `sh`.

  # Differences from shh, turtle, etc.

  `procex` can:

  - `execve` without `fork`, i.e. replace the current process
  - Set fds besides 0, 1, and 2
  - Launch a process without taking >0.5s when max fds is high
  - Launch processes with an invalid UTF-8 name
  - Be extended easily due to the flexible and simple API
  - Be used as a shell
  - not wrap Haskell functions in a `Cmd` like `shh`, because that is generally not a good solution

  # Example

  ```hs
  import Procex.Prelude

  main :: IO ()
  main = captureLazy (mq "cat" <<< "some stdin") >>= \stdout -> putStrLn (show stdout)
  ```


  # TODO

  - Setting the environment (workaround: use `env` from coreutils)
  - Better README
  - Support for non-Linux kernels
description-type: markdown
hash: 453b43d6053e6064683f58835c30785a53f6f48801eb51c43fc4f74282d54db2
homepage: ''
latest: 0.3.3
license-name: MIT
maintainer: me@las.rs
synopsis: Ergonomic process launching with extreme flexibility and speed
test-bench-deps:
  async: '>=0'
  base: '>=0'
  bytestring: '>=0'
  hspec: '>=2.7'
  procex: '>=0'
  unix: '>=0'
