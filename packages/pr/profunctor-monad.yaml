all-versions:
- 0.1.0.0
- 0.2.0.0
author: Li-yao Xia, Samantha Frohlich, Dominic Orchard, Meng Wang
basic-deps:
  base: '>=4.9 && <4.17'
  constraints: '>=0'
  profunctors: '>=0'
changelog: |
  # 0.2.0.0

  - Add `MonadCoAction`

  # 0.1.0.0

  - Create profunctor-monad
changelog-type: markdown
description: |
  Bidirectional Programming with Monadic Profunctors
  ==================================================

  This package provides tools to work with *monadic profunctors*:
  types that are both monads and profunctors.

  Applications
  ------------

  Currently known instances of monadic profunctors are certain types of
  bidirectional programs, i.e., programs that have "invertible" interpretations.

  - `attoparsec` (parsing) wrapper: [`unparse-attoparsec`](https://github.com/Lysxia/unparse-attoparsec)
  - `QuickCheck` (random generation) wrapper: [`gap`](https://github.com/Lysxia/gap)
  - `lens` wrapper: [`lens-monad`](https://github.com/Lysxia/lens-monad)

  See also
  --------

  - [`codec`](https://hackage.haskell.org/package/codec) for a general
    monadic profunctor for bidirectional programming, has implementations for
    `aeson` and `binary`. The idea of monadic profunctors first came from this
    package.

  ### More bidirectional programming in Haskell

  - [`lens`](https://hackage.haskell.org/package/lens)
  - [`boomerang`](https://hackage.haskell.org/package/boomerang)
  - [`roundtrip`](https://hackage.haskell.org/package/roundtrip)

  ### Generic programming with monoidal profunctors

  - [`product-profunctors`](https://hackage.haskell.org/package/product-profunctors)
  - [`one-liner`](https://hackage.haskell.org/package/one-liner)
description-type: markdown
hash: 51cc6f9e32316c220603fee32fd865a65a0283d4ee965ab22409a79b48df6e05
homepage: https://github.com/Lysxia/profunctor-monad
latest: 0.2.0.0
license-name: MIT
maintainer: lysxia@gmail.com
synopsis: Monadic bidirectional programming
test-bench-deps:
  base: '>=0'
  hashable: '>=0'
  mtl: '>=0'
  profunctor-monad: '>=0'
  transformers: '>=0'
  unordered-containers: '>=0'
