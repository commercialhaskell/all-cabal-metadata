all-versions:
- 1.0.0.0
- 1.0.1.0
- 1.0.2.0
- 1.0.3.0
- 1.0.3.1
- 1.1.0.0
author: notquiteamonad
basic-deps:
  base: '>=4.14.3.0 && <5'
  microlens: '>=0.4.0.1 && <0.5'
  terminal: '>=0.2 && <0.3'
  text: '>=1.2.4.1 && <2.2'
changelog: |
  # Changelog

  ## Version 1.0.0.0 (2025-03-28)

  * Initial release

  ## Version 1.0.1.0 (2025-05-16)

  * Add yes/no prompts

  ## Version 1.0.2.0 (2025-07-11)

  * Add multi-select (zero-to-many) prompts

  ## Version 1.0.3.0 (2025-07-14)

  * Add multi-select (zero-to-many) prompts with arbitrary values; the multiple analogue to promptChoiceFromSet

  ## Version 1.0.3.1 (2025-07-14)

  * Add support for GHC 9.10

  ## Version 1.1.0.0 (2025-07-14)

  * Remove initialSelectionChoosableItem class function; it didn't always have a sensible implementation and isn't needed
changelog-type: markdown
description: |
  # prompt-hs

  A user-friendly, dependently-typed library for asking your users questions

  ![Hackage Version](https://img.shields.io/hackage/v/prompt-hs)
  [![Made with nix-bootstrap](https://img.shields.io/badge/Made%20with-nix--bootstrap-rgb(58%2C%2095%2C%20168)?style=flat-square&logo=nixos&logoColor=white&link=https://github.com/gchq/nix-bootstrap)](https://github.com/gchq/nix-bootstrap)

  ### Table of Contents

  - [Demo](#demo)
  - [Usage](#usage)
  - [Development Environment](#development-environment)
  - [Building for Production](#building-for-production)

  ## Demo

  ![demo](./demo.gif)

  <details>
  <summary>Click to expand demo source</summary>

  ```haskell
  module Main (main) where

  import Data.Proxy (Proxy (Proxy))
  import Data.Text (pack, unpack)
  import System.Prompt
    ( Chooseable (showChooseable),
      Confirmation (DontConfirm, RequireConfirmation),
      Requirement (Optional, Required),
      promptChoice,
      promptText,
    )

  data Colour = Red | Green | Blue deriving (Bounded, Enum, Eq, Show)

  instance Chooseable Colour where
    showChooseable = pack . show

  main :: IO ()
  main = do
    name <- promptText Required RequireConfirmation $ pack "What is your name?"
    favouriteColour <- promptChoice Optional DontConfirm (Proxy :: Proxy Colour) $ pack "And what is your favourite colour?"
    putStrLn $
      "Your name is " <> unpack name <> " and " <> case favouriteColour of
        Just c -> "your favourite colour is " <> show c
        Nothing -> "you didn't tell me your favourite colour."
  ```

  </details>

  ## Usage

  1. Produce an instance of `Chooseable` for any sum types you want to be able to choose from. For types with `Bounded` and `Enum` instances, all you need to provide is how to display the options.
  2. Choose a type of prompt: use `promptText` for freeform text or `promptChoice` (or `promptChoiceFromSet` for more flexible options) to get the user to choose one of many options.
  3. `Requirement`: is an answer needed, or can the user skip the question? Can be `Required` or `Optional`.
  4: `Confirmation`: If `RequireConfirmation`, get the user to confirm their answers after selecting/typing. Otherwise, accept it immediately and move on.
  5. Give your prompt text.

  **Note:** For `Optional` questions, the returned value is wrapped in `Maybe`. For freeform answers, a `Just` value returned from an `Optional` question will never be empty.

  ## Development Environment

  A development environment is provided:

  1. [Install Nix](https://nixos.org)
  2. Run `nix develop`

  ## Building for Production

  To produce a production build as defined in `nix/build.nix`, run `nix build`.

  This will produce a `result` directory with built artefacts.
description-type: markdown
hash: 4ca0384b0bcd05b4a532fe83c4cfe28ab376e0194d83c4b10443848c64475b3a
homepage: https://github.com/notquiteamonad/prompt-hs
latest: 1.1.0.0
license-name: BSD-3-Clause
maintainer: notquiteamonad
synopsis: A user-friendly, dependently-typed library for asking your users questions
test-bench-deps: {}
