all-versions:
- 0.1.0.0
- 0.1.0.1
author: William Hallahan, Anton Xue
basic-deps:
  Cabal: '>=2.0.1.0 && <=2.0.1.1'
  HTTP: '>=4000.3.0 && <4001.0'
  MissingH: '>=1.4.0.0 && <1.5'
  array: '>=0.5.1.1 && <=0.5.3.0'
  base: '>=4.8 && <5'
  bytestring: '>=0.10.8.0 && <=0.10.8.2'
  concurrent-extra: '>=0.7'
  containers: '>=0.5 && <0.6'
  directory: '>=1.3.0.2 && <=1.3.3.2'
  extra: '>=1.6.14 && <=1.6.17'
  filepath: ==1.4.1.2
  g2: '>=0'
  ghc: ==8.2.2
  ghc-paths: '>=0.1 && <0.2'
  hashable: '>=1.2.6.0 && <=1.3.0.0'
  hpc: '>=0.6.0.0 && <0.6.1'
  liquid-fixpoint: '>=0.7.0.7'
  liquidhaskell: ==0.8.2.2
  mtl: '>=2.2 && <2.3'
  parsec: '>=3.1 && <3.2'
  process: '>=1 && <1.7'
  reducers: '>=3.12 && <3.13'
  regex-base: '>=0.93 && <0.94'
  regex-compat: '>=0.95 && <0.96'
  split: '>=0.2.3 && <0.2.4'
  template-haskell: ==2.12.0.0
  temporary-rc: '>=1.2 && <1.3'
  text: ==1.2.3.1
  time: '>=1.6 && <=1.9.3'
  unordered-containers: '>=0.2 && <0.3'
changelog: ''
changelog-type: ''
description: "## G2 Haskell Symbolic Execution Engine\n---\n#### About\nG2 performs
  lazy symbolic execution of Haskell programs to detect state reachability.\nIt is
  capable of generating assertion failure counterexamples and solving for higher-order
  functions.\n\n---\n\n#### Dependencies\n* GHC 8.2.2: https://www.haskell.org/ghc/\n*
  Custom Haskell Standard Library: https://github.com/AntonXue/base-4.9.1.0\n* Z3
  SMT Solver: https://github.com/Z3Prover/z3\n\n---\n#### Setup:\n1) Install GHC 8.2.2
  (other GHC 8 versions might also work)\n2) Install Z3\n3) Either:\n\n  a) Pull the
  Custom Haskell Standard Library into ~/.g2 by running `bash base_setup.sh` \n\n
  \ b) Manually pull the base library.  Add a file to the G2 folder, called g2.cfg
  that contains:\n\t\t`base = /path/to/custom/library`\n\n\n---\n#### Command line:\n\n######
  Reachability:\n\n`cabal run G2 ./tests/Samples/Peano.hs add`\n\n###### LiquidHaskell:\n\n`cabal
  run G2 -- --liquid ./tests/Liquid/Peano.hs --liquid-func add`\n\n###### Arguments:\n\n*
  `--n` number of reduction steps to run\n* `--max-outputs` number of inputs/results
  to display\n* `--smt` Pass \"z3\" or \"cvc4\" to select a solver [Default: Z3]\n*
  `--time` Set a timeout in seconds\n\n---\n\n#### Authors\n* Bill Hallahan (Yale)\n*
  Anton Xue (Yale)\n* Maxwell Troy Bland (UCSD)\n* Ranjit Jhala (UCSD)\n* Ruzica Piskac
  (Yale)\n"
description-type: markdown
hash: af885c7b0f36bde2b1712fee7c809cf579f7081c6dce77a918ade85bd5effaf4
homepage: ''
latest: 0.1.0.1
license-name: BSD-3-Clause
maintainer: william.hallahan@yale.edu
synopsis: Haskell symbolic execution engine.
test-bench-deps:
  base: '>=4.8 && <5'
  containers: '>=0.5 && <0.6'
  filepath: '>=0'
  g2: '>=0'
  ghc: '>=0'
  ghc-paths: '>=0.1 && <0.2'
  hashable: '>=0'
  hpc: '>=0'
  tagged: '>=0'
  tasty: '>=1.0'
  tasty-hunit: '>=0.10'
  text: '>=0'
  time: '>=1.6'
  unordered-containers: '>=0'
