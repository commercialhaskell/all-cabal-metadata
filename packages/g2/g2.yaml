all-versions:
- 0.1.0.0
- 0.1.0.1
- 0.2.0.0
author: William Hallahan, Anton Xue
basic-deps:
  Cabal: '>=2.0.1.0 && <3.11'
  Diff: ==0.3.4
  HTTP: '>=4000.3.0 && <4001.0'
  MissingH: '>=1.4.0.0 && <1.7'
  array: '>=0.5.1.1 && <=0.5.5.0'
  base: '>=4.8 && <4.19'
  bimap: ==0.3.3
  bytestring: '>=0.10.8.0 && <0.11.6'
  clock: '>=0.8 && <0.9'
  concurrent-extra: '>=0.7 && <0.8'
  containers: '>=0.5 && <0.7'
  deepseq: '>=1.4 && <2'
  deferred-folds: <=0.9.18.3
  directory: '>=1.3.0.2 && <=1.3.8.1'
  extra: '>=1.6.14 && <1.7.13'
  filepath: '>=1.4 && <=1.5'
  g2: '>=0'
  ghc: '>=8.2.2 && <8.4 || >=8.6 && <8.7 || >=8.10 && <9.7'
  ghc-paths: '>=0.1 && <0.2'
  hashable: '>=1.2.6.0 && <=1.4.2.0'
  language-sygus: '>=0.1.1.3 && <0.2'
  liquid-fixpoint: ==0.8.10.2
  liquidhaskell: ==0.8.10.2
  mtl: '>=2.2 && <2.4'
  optparse-applicative: '>=0.15.0.0 && <0.18.0.0'
  parsec: '>=3.1 && <3.2'
  pretty: '>=1.1 && <1.4'
  process: '>=1.6 && <1.7'
  random: '>=1.1 && <1.3'
  reducers: '>=3.12 && <3.13'
  regex-base: '>=0.93 && <0.94.0.3'
  regex-compat: '>=0.95 && <0.96'
  split: '>=0.2.3 && <0.2.4'
  tasty-quickcheck: '>=0.10.1.1 && <0.11'
  template-haskell: '>=2.12.0.0 && <=2.20.0.0'
  temporary-rc: '>=1.2 && <1.3'
  text: '>=1.2.3.1 && <=2.1'
  text-builder: '>=0.6.6.1 && <0.7'
  time: '>=1.6 && <=1.13'
  unordered-containers: '>=0.2.10.0 && <0.3'
changelog: ''
changelog-type: ''
description: |-
  ## G2 Haskell Symbolic Execution Engine
  ---
  #### About
  G2 performs lazy symbolic execution of Haskell programs to detect state reachability.
  It is capable of generating assertion failure counterexamples and solving for higher-order functions.

  ---

  #### Dependencies
  * GHC: https://www.haskell.org/ghc/
  * Custom Haskell Standard Library: https://github.com/BillHallahan/base-4.9.1.0
  * Z3 SMT Solver: https://github.com/Z3Prover/z3

  ---
  #### Setup:
  1) Install GHC.
  2) Install Z3.  Ensure Z3 is in your system's path.
  3) Pull the Custom Haskell Standard Library into ~/.g2 by running `bash base_setup.sh`.

  ---
  #### Command line:

  ###### Reachability:

  `cabal run G2 ./tests/Samples/Peano.hs add`

  ###### LiquidHaskell:

  `cabal run G2LH ./tests/Liquid/Peano.hs add`

  ###### Arguments:

  * `--n` number of reduction steps to run
  * `--max-outputs` number of inputs/results to display
  * `--smt` Pass "z3" or "cvc4" to select a solver [Default: Z3]
  * `--time` Set a timeout in seconds
description-type: markdown
hash: aef4ea789d3e29500ed4e35a38751d155b5afe509d63db52af6632291baf6902
homepage: ''
latest: 0.2.0.0
license-name: BSD-3-Clause
maintainer: whallahan@binghamton.edu
synopsis: Haskell symbolic execution engine.
test-bench-deps:
  base: '>=4.8 && <5'
  containers: '>=0'
  directory: '>=0'
  filepath: '>=0'
  g2: '>=0'
  ghc: '>=0'
  ghc-paths: '>=0'
  hashable: '>=0'
  liquidhaskell: '>=0'
  process: '>=0'
  tagged: '>=0'
  tasty: '>=1.0 && <2.0'
  tasty-hunit: '>=0.10 && <0.10.0.3'
  tasty-quickcheck: '>=0'
  text: '>=0'
  time: '>=0'
  unordered-containers: '>=0'
