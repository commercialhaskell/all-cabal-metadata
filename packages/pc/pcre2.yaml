all-versions:
- 1.0.0
- 1.0.1
- 1.0.1.1
- 1.0.2
- 1.1.0
- 1.1.1
- 1.1.2
- 1.1.3
- 1.1.3.1
- 1.1.4
- 1.1.5
- 2.0.0
- 2.0.1
- 2.0.2
- 2.0.3
- 2.0.4
- 2.0.5
- 2.1.0
- 2.1.0.1
- 2.1.1
- 2.1.1.1
- 2.2.0
- 2.2.1
- 2.2.2
author: Steven Shuck and contributors
basic-deps:
  base: '>=4.9 && <5'
  containers: '>=0'
  microlens: '>=0'
  mtl: '>=0'
  template-haskell: '>=0'
  text: '>=2'
changelog: |
  # Changelog and Acknowledgements

  ## 2.2.1
  * Fixed [#26](https://github.com/sjshuck/hs-pcre2/issues/26) where wide UTF-8
    characters were not handled correctly.
  * Docs fully updated for UTF-8 instead of UTF-16.  (Docs were deleted from
    the 2.2.0 release.)

  ## 2.2.0
  * Switched to UTF-8 to support `text` 2.0, implementing
    [#22](https://github.com/sjshuck/hs-pcre2/issues/22).  `text` < 2 is no longer
    supported.
    * Changed type synonym `PCRE2_UCHAR` from `CUShort` to `CUChar` in the
      low-level bindings.
    * No API changes in the high-level bindings.
    * There is a minor regression in the ability to match `\R` against line
      separators (U+2028) and paragraph separators (U+2029).  See
      [#26](https://github.com/sjshuck/hs-pcre2/issues/26).

  ## 2.1.1.1
  * Updated library, tests, and docs for `mtl` 2.3 and `microlens-platform`
    0.4.3.0.  The `mtl` part of this is pursuant to
    [#30](https://github.com/sjshuck/hs-pcre2/issues/30).

  ## 2.1.1
  * Added pattern serialization API, which fixes
    [#23](https://github.com/sjshuck/hs-pcre2/issues/23).
  * Updated PCRE2 to 10.40 (no API changes).

  ## 2.1.0.1
  * Explicitly required `text` < 2.
  * Minor docs adjustments.

  ## 2.1.0
  * Replaced `Proxy :: Proxy info` with type applications in splices from
    `regex`/`_regex`.  This significantly shortens the splices, producing nicer
    error messages.  As a very minor consequence, we now require the user to turn
    on `{-# LANGUAGE TypeApplications #-}` when using `regex`/`_regex` with
    patterns with parenthesized captures, even when not using
    `capture`/`_capture`.

  ## 2.0.5
  * Enabled PCRE2's built-in Unicode support, which fixes
    [#21](https://github.com/sjshuck/hs-pcre2/issues/21).

  ## 2.0.4
  * Added `Show` instance for `Captures` to ease debugging user code.

  ## 2.0.3
  * Updated PCRE2 to 10.39 (no API changes).  The C sources are now drawn from
    https://github.com/PhilipHazel/pcre2, which fixes
    [#10](https://github.com/sjshuck/hs-pcre2/issues/10).

  ## 2.0.2
  * Fixed a minor issue where the caret indicating pattern location of a
    `Pcre2CompileException` was misplaced if the pattern contained a newline.

  ## 2.0.1
  * Added `microlens` as a dependency to improve Haddock docs (`Traversal'` _et
    al._ are clickable) and relieve maintenance burden somewhat.
  * Moderate refactoring of internals.

  ## 2.0.0
  This release introduces significant breaking changes in order to make the API
  smaller, more consistent, and safer.
  * Implemented [#18](https://github.com/sjshuck/hs-pcre2/issues/18):
      * Removed `matchAll`, `matchAllOpt`, `capturesAll`, and `capturesAllOpt`.
      * Upgraded `match`, `matchOpt`, `captures`, and `capturesOpt` to offer their
        functionality, respectively.
      * Renamed `capturesA` and `capturesAOpt` to `captures` and `capturesOpt`,
        replacing the latter two functions altogether.  `captures`/-`Opt` were
        intended to be extreme
        [convenience functions](https://hackage.haskell.org/package/pcre2-1.1.5/docs/Text-Regex-Pcre2.html#v:captures)
        that required no special datatypes beyond the `Prelude`.  However, this
        was of doubtful benefit, since that's false anyway&mdash;they required
        `Text`, not to mention `{-# LANGUAGE OverloadedStrings #-}`.  Their names
        are simple and valuable, and no other `Alternative`-producing function has
        the naming convention "-`A`", so repurposing their names was in order.
  * Moved the callout interface to a new module, `Text.Regex.Pcre2.Unsafe`.  This
    includes the options `UnsafeCompileRecGuard`, `UnsafeCallout`,
    `UnsafeSubCallout`, and `AutoCallout`, and the types `CalloutInfo`,
    `CalloutIndex`, `CalloutResult`, `SubCalloutInfo`, and `SubCalloutResult`.
  * Also moved option `BadEscapeIsLiteral` there.
  * Removed the ineffectual options `DupNames` and `Utf`.

  Other improvements with no API impact:
  * Updated PCRE2 to 10.37.
  * Replaced copied C files with symlinks, diminishing codebase by 1.5K lines and
    simplifying future PCRE2 updates.
  * Reduced size of Template Haskell splices to make error messages less
    obnoxious.
  * Moderate refactoring of internals and documentation.

  ## 1.1.5
  * Fixed [#17](https://github.com/sjshuck/hs-pcre2/issues/17), where functions
    returning `Alternative` containers were not restricted to single results
    despite their documentation.
  * Minor improvements to docs and examples.

  ## 1.1.4
  * Fixed some incorrect foreign imports' safety.

  ## 1.1.3.1
  * Fixed a very minor issue where `pcreVersion` still reported "10.35" even
    though it in fact was using 10.36.

  ## 1.1.3
  * Made in-house streaming abstraction based on `streaming` and removed the
    latter as a dependency.
  * Updated PCRE2 to 10.36 (no API changes).
  * Docs fixes.

  ## 1.1.2
  * Refactored using the `streaming` library.  Fixed
    [#11](https://github.com/sjshuck/hs-pcre2/issues/11), where large global
    matches were very slow.

  ## 1.1.1
  * Fixed [#12](https://github.com/sjshuck/hs-pcre2/issues/12), where some
    functions returned too many match results.

  ## 1.1.0
  * Added global matching.
      * New functions `matchAll`, `matchAllOpt`, `capturesAll`, `capturesAllOpt`.
      * Changed all traversals from affine to non-affine.
  * Changed `capturesOptA` to `capturesAOpt` for naming consistency.

  ## 1.0.2
  * Fixed [#4](https://github.com/sjshuck/hs-pcre2/4), where multiple named
    captures were not type-indexed correctly.
  * Established automated builds using Github Workflows.  Thanks amesgen!

  ## 1.0.1.1
  * Temporarily eliminate all dependency version bounds to get it building on
    Hackage.

  ## 1.0.1
  * Fixed [#1](https://github.com/sjshuck/hs-pcre2/issues/1), where building on
    Windows would succeed but not run.  Thanks Andrew!
  * Try to adjust dependency version bounds to get it building on Hackage.  Thanks
    snoyberg!

  ## 1.0.0
  * Initial release.
changelog-type: markdown
description: |
  # pcre2

  ![CI](https://github.com/sjshuck/hs-pcre2/workflows/CI/badge.svg)
  [![Hackage](https://img.shields.io/hackage/v/pcre2)](https://hackage.haskell.org/package/pcre2)

  Regular expressions for Haskell.

  ## Teasers
  ```haskell
  licensePlate :: Text -> Maybe Text
  licensePlate = match "[A-Z]{3}[0-9]{3,4}"

  licensePlates :: Text -> [Text]
  licensePlates = match "[A-Z]{3}[0-9]{3,4}"
  ```
  ```haskell
  case "The quick brown fox" of
      [regex|\bbrown\s+(?<animal>[A-z]+)\b|] -> Text.putStrLn animal
      _                                      -> die "nothing brown"
  ```
  ```haskell
  let kv'd = lined . packed . [_regex|(?x)  # Extended PCRE2 syntax
          ^\s*          # Ignore leading whitespace
          ([^=:\s].*?)  # Capture the non-empty key
          \s*           # Ignore trailing whitespace
          [=:]          # Separator
          \s*           # Ignore leading whitespace
          (.*?)         # Capture the possibly-empty value
          \s*$          # Ignore trailing whitespace
      |]

  forMOf kv'd file $ execStateT $ do
      k <- gets $ capture @1
      v <- gets $ capture @2
      liftIO $ Text.putStrLn $ "found " <> k <> " set to " <> v

      case myMap ^. at k of
          Just v' | v /= v' -> do
              liftIO $ Text.putStrLn $ "setting " <> k <> " to " <> v'
              _capture @2 .= v'
          _ -> liftIO $ Text.putStrLn $ "no change for " <> k
  ```

  ## Features
  * No opaque "`Regex`" object.  Instead, quiet functions with simple
    types&mdash;for the most part it's `Text` _(pattern)_ `-> Text` _(subject)_
    `-> result`.
  * No [custom typeclasses](https://hackage.haskell.org/package/regex-base/docs/Text-Regex-Base-RegexLike.html#t:RegexContext).
  * A single datatype for both compile and match options, the `Option` monoid.
  * UTF-8 `Text` everywhere.
  * Match success expressed via `Alternative`.
  * Opt-in Template Haskell facilities for compile-time verification of patterns,
    indexing captures, and memoizing inline regexes.
  * Opt-in `lens` support.
  * No failure monads to express compile errors, preferring pure functions and
    throwing imprecise exceptions with pretty `Show` instances.  Write simple code
    and debug it.  Or, don't, and use the Template Haskell features instead.  Both
    are first-class.
  * Vast presentation of PCRE2 functionality.  We can even register Haskell
    callbacks to run during matching!
  * Zero-copying of substrings where beneficial.
  * Few dependencies.
  * Bundled, statically-linked build of up-to-date PCRE2 (version 10.44), with a
    complete, exposed Haskell binding.

  ## Performance
  Currently we are slower than other libraries.  For example:

  | Operation                 | `pcre2`   | `pcre-light` | `regex-pcre-builtin` |
  | :--                       |       --: |          --: |                  --: |
  | Compile and match a regex | 3.9 &mu;s |    1.2 &mu;s |            2.9 &mu;s |

  If it's really regex processing that's causing a bottleneck,
  [pcre-light](https://hackage.haskell.org/package/pcre-light)/[-heavy](https://hackage.haskell.org/package/pcre-heavy)/[lens-regex-pcre](https://hackage.haskell.org/package/lens-regex-pcre)
  are recommended instead of this library for the very best performance.

  ## Wishlist
  * Many performance optimizations.
  * Make use of DFA matching for lazy (infinite) inputs.  This likely requires
    some upstream changes as well but in theory it's possible
  * Improve compile time. Support external `libpcre2` maybe

  ## License
  [Apache 2.0](https://www.apache.org/licenses/LICENSE-2.0.html).
  PCRE2 is distributed under the [3-clause BSD](https://www.pcre.org/licence.txt) license.

  ## Main Author
  &copy;2020&ndash;2025 Steven Shuck
description-type: markdown
hash: e123f3f36e343bbab851d69b6de7608f8fbeeba781cf69f14d5f6d671b451142
homepage: https://github.com/sjshuck/hs-pcre2#readme
latest: 2.2.2
license-name: Apache-2.0
maintainer: stevenjshuck@gmail.com
synopsis: Regular expressions via the PCRE2 C library (included)
test-bench-deps:
  base: '>=4.9 && <5'
  containers: '>=0'
  criterion: '>=0'
  hspec: '>=0'
  microlens: '>=0'
  microlens-platform: '>=0'
  mtl: '>=0'
  pcre-light: '>=0'
  pcre2: '>=0'
  regex-pcre-builtin: '>=0'
  template-haskell: '>=0'
  text: '>=2'
