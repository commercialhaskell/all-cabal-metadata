all-versions:
- 0.1.0
- 0.2.0
- 0.3.0
- 0.4.0
- 0.5.0
- 0.5.1
author: Stephen Paul Weber <singpolyma@singpolyma.net>
basic-deps:
  base: '>=4 && <5'
changelog: ''
changelog-type: ''
description: |-
  When you've caught all the exceptions that can be handled safely,
  this is what you're left with.

  It is intended that you use qualified imports with this library.

  > import UnexceptionalIO (UIO)
  > import qualified UnexceptionalIO as UIO

  You may also wish to investigate unexceptionalio-trans if you like
  monad transformers.

  Blog post: http://sngpl.ma/p4uT0
description-type: haddock
hash: dfa3da738047ea55825be916559083fe3f0460ec699b3b10b7337edece7f43b3
homepage: https://github.com/singpolyma/unexceptionalio
latest: 0.5.1
license-name: LicenseRef-OtherLicense
maintainer: Stephen Paul Weber <singpolyma@singpolyma.net>
synopsis: IO without any non-error, synchronous exceptions
test-bench-deps:
  HUnit: '>=0'
  base: '>=4 && <5'
  test-framework: '>=0'
  test-framework-hunit: '>=0'
