homepage: https://wrengr.org/software/hackage.html
changelog-type: text
hash: 2a48ef67a63daeb8cd2833fd58d05cc9e69fca3713c8a9b2468db834a0e8545f
test-bench-deps: {}
maintainer: wren@cpan.org
synopsis: Unix/Posix-specific functions for ByteStrings.
changelog: |
  0.4.0 (2023-03-19):
      - Renaming modules to avoid conflicts with unix-2.8.0.0
      - Updating version bounds for GHC 9.6

  0.3.7.8 (2022-08-28):
      - Updated version bounds for GHC 9.4
  0.3.7.7 (2022-05-25):
      - Updated the `alignment` macro to avoid warnings on hsc2hs-0.68 (ghc-8.0); also fixing cross-compilation for Arm AArch64:
      * <https://gitlab.haskell.org/ghc/ghc/-/wikis/migration/8.0#hsc2hs-defines-an-alignment-macro>
  0.3.7.6 (2021-11-02):
      - Updated version bounds for GHC 8.2.1
  0.3.7.5 (2021-10-24):
      - Updating maintainer emails/urls
      - Removed the __HADDOCK__ hack
      - Generally cleaning up old cruft
  0.3.7.4 (2021-10-16):
      - Started using GithubActions for CI.
      - Corrected parsing errors with newer GHC.
  0.3.7.3 (2015-05-30):
      - Moved VERSION to CHANGELOG
  0.3.7 (2013-08-08):
      - System.Posix.IO.ByteString: Corrected a bug in fdSeek/tryFdSeek where the return value was always 0 on largefile i686 systems due to the underlying C function being (undocumentedly) implemented as a macrocall. This had been fixed in unix-2.6.0.1, and I've just backported their fix (replacing the previous unix-2.4.2.0 implementation). Cf:
      * <https://github.com/ghc/packages-base/blob/master/System/Posix/Internals.hs#L414>
      * <https://github.com/ghc/packages-unix/blob/master/System/Posix/IO/Common.hsc#L306>
  0.3.6 (2013-05-29):
      - System.Posix.Types.Iovec: adjusted unsafeForeignPtrToPtr for GHC 7.8
  0.3.5.4 (2012-08-23):
      - System.Posix.IO.ByteString: adjusted some imports for GHC 7.6
      - Removed the custom Setup.hs, for compatibility with GHC 7.6
  0.3.5.3 (2012-02-21):
      - Foreign.C.Error.Safe: changed (Num a) to (Eq a, Num a) for GHC 7.4
  0.3.5 (2011-06-29):
      - System.Posix.IO.ByteString: added fdSeek, tryFdSeek.
      - Foreign.C.Error.Safe: added.
  0.3.4.1 (2011-04-03):
      - LICENSE: corrected license for the fdReadBuf and fdWriteBuf functions
  0.3.4 (2011-03-26):
      - System.Posix.IO.ByteString.Lazy: Fixed functions to check (<=0) instead of (==0)
  0.3.3 (2011-03-26):
      - System.Posix.IO.ByteString: added tryFdReadBuf, tryFdReadvBuf, tryFdPreadBuf, tryFdWriteBuf, tryFdWritevBuf, tryFdPwriteBuf
  0.3.2.1 (2011-03-20):
      - Changed the cabal category label to System
      - Uploaded to Hackage
  0.3.2 (2011-03-17):
      - Removed the dependency on @unix@.
  0.3.1 (2011-03-07):
      - System.Posix.IO.ByteString: added fdPreads
      - System.Posix.IO.ByteString.Lazy: added fdPread
  0.3.0 (2011-03-07):
      - System.Posix.IO.ByteString: added fdReadvBuf, exposed fdWritevBuf
      - System.Posix.IO.ByteString: added fdReadBuf and fdWriteBuf for compatibility with older versions of the @unix@ package
      - System.Posix.IO.ByteString: added fdPread, fdPreadBuf
      - System.Posix.IO.ByteString: added fdPwrite, fdPwriteBuf

  0.2.1 (2011-03-06):
      - Added a custom build in order to define __HADDOCK__ when appropriate.
      - System.Posix.IO.ByteString: added fdReads
  0.2.0 (2011-03-05):
      - Corrected the specifications (writev etc is XPG4.2, not POSIX)
      - Added some extra #includes for legacy reasons
      - Changed stability to experimental.
      - Added new module System.Posix.Types.Iovec
      - System.Posix.IO.ByteString.Lazy: added fdWritev
      - System.Posix.IO.ByteString.Lazy: changed fdWrite to fdWrites
      - System.Posix.IO.ByteString: added fdWrites and fdWritev
      - Renamed package to unix-bytestring

  0.1.0 (2011-02-27):
      - Moved Data.ByteString.Posix to System.Posix.IO.ByteString
      - Moved Data.ByteString.Lazy.Posix to System.Posix.IO.ByteString.Lazy

  0.0.2 (2011-02-20):
      - Fixed stack overflow possibility in Lazy.fdWrite
  0.0.1 (2010-11-10):
      - Added lazy variants
  0.0.0 (2010-11-10):
      - Initial version forked from Posta-IPC
basic-deps:
  bytestring: '>=0.9.1.5 && <0.12'
  base: '>=4.1 && <4.19'
all-versions:
- 0.3.2
- 0.3.2.1
- 0.3.3
- 0.3.4
- 0.3.4.1
- 0.3.5
- 0.3.5.3
- 0.3.5.4
- 0.3.6
- 0.3.7
- 0.3.7.2
- 0.3.7.3
- 0.3.7.4
- 0.3.7.5
- 0.3.7.6
- 0.3.7.7
- 0.3.7.8
- 0.4.0
author: wren gayle romano
latest: 0.4.0
description-type: markdown
description: "unix-bytestring\n===============\n[![Hackage version](https://img.shields.io/hackage/v/unix-bytestring.svg?style=flat)](https://hackage.haskell.org/package/unix-bytestring)
  \n[![Build Status](https://github.com/wrengr/unix-bytestring/workflows/ci/badge.svg)](https://github.com/wrengr/unix-bytestring/actions?query=workflow%3Aci)\n[![Dependencies](https://img.shields.io/hackage-deps/v/unix-bytestring.svg?style=flat)](http://packdeps.haskellers.com/specific?package=unix-bytestring)\n\nUnix/Posix-specific
  functions for `ByteString`s.\n\nThis package provides `ByteString` file-descriptor
  based I/O API,\ndesigned loosely after the `String` file-descriptor based I/O API\nin
  `System.Posix.IO`. The functions here wrap standard C implementations\nof the functions
  specified by the ISO/IEC 9945-1:1990 (“POSIX.1”)\nand X/Open Portability Guide Issue
  4, Version 2 (“XPG4.2”)\nspecifications.\n\nNote that this package doesn't require
  the unix package as a\ndependency. But you'll need it in order to get your hands
  on an\n`Fd`, so we're not offering a complete replacement.\n\n\n## Install\n\nIn
  general, this is a simple package and should be easy to install.\nYou must have
  hsc2hs installed in order to compile the package (but\nthen you probably already
  do). With the cabal-install program you\ncan just do the standard:\n\n    $> cabal
  install unix-bytestring\n\n\n### FFI Problems\n\nThe unix-bytestring package uses
  standard POSIX header files\n`<sys/types.h>`, `<sys/uio.h>`, and `<unistd.h>`. If
  Cabal has\ndifficulty finding these files or reports another error, be sure\nyour
  include path variables are correct. If the problem persists,\ncontact the maintainer.\n\n\n###
  Building for GHC (6.8 and above)\n\nNothing special to mention. \n\n\n### Building
  for Hugs (September 2006)\n\nI haven't actually compiled this for Hugs because I
  don't have a\nnew enough version of Cabal for it, but I don't forsee any difficulties.\nIf
  you do compile this for Hugs, let the maintainer know how it\nwent.\n\nWhen compiling
  for Hugs, see the following bugs for Cabal's interaction\nwith ffihugs. These bugs
  do not currently affect this package, but\nthis notice is here in case they affect
  future versions. For more\ndetails and a minimal regression suite, see:\n\n    <http://community.haskell.org/~wren/cabal-ffihugstest/>\n\n\n(1)
  <http://hackage.haskell.org/trac/hackage/ticket/526>\nOptions in hugs-options aren't
  passed through to ffihugs, most\nimportantly -98 and +o are the ones we'd like to
  pass. For enabling\nthe +o flag Hugs-Sept06 does not honor:\n    pragma    {-# LANGUAGE
  OverlappingInstances #-}\n    pragma    {-# OPTIONS_HUGS +o #-}\n    cabal     extensions:
  OverlappingInstances\nAnd the -98 flag has similar issues. Therefore this is a real\nproblem.\n\nImmediate
  solution: The options set in hugs-options should be passed\nto ffihugs as well.
  As of Cabal 1.6 they are not passed (verified\nby Duncan Coutts). The two programs
  accept all the same options,\nso this is valid.\n\nIdeal solution: Based on the
  extensions field, Cabal should\nautomatically determine whether -98 and +o need
  to be enabled (for\nboth hugs and ffihugs).\n\n\n(2) <http://hackage.haskell.org/trac/hackage/ticket/527>\nIf
  CPP is being used in conjunction with FFI, then cpp/cpphs is not\ncalled before
  ffihugs is called. Thus, users must pass an -F flag\nto ffihugs in order to declare
  a code filter (and must pass all\ncpp-options to -F manually). For example:\n\n
  \   --ffihugs-option=-F'cpp -P -traditional -D__HUGS__ -D__BLAH__'\n\nThis requires
  duplicating the build specifications, which defeats\nthe point of Cabal. Also it
  leads to tricky issues about ensuring\nthe proper level of quoting/escaping. (e.g.
  using the plural,\n--ffihugs-options=..., breaks it. Wrapping the -F'cpp...' in
  double\nquotes breaks it.)\n\n\n## Links\n\n* [Website](http://wrengr.org/)\n* [Blog](http://winterkoninkje.dreamwidth.org/)\n*
  [Twitter](https://twitter.com/wrengr)\n* [Hackage](http://hackage.haskell.org/package/unix-bytestring)\n*
  [GitHub](https://github.com/wrengr/unix-bytestring)\n"
license-name: BSD-3-Clause
