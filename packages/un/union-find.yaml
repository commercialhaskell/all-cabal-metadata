homepage: http://github.com/nominolo/union-find
changelog-type: ''
hash: 1fb8f475073188ad8f9020740300bdc66ede077bbd952f9bd98035e43e9efc47
test-bench-deps: {}
maintainer: Thomas Schilling <nominolo@googlemail.com>
synopsis: Efficient union and equivalence testing of sets.
changelog: ''
basic-deps:
  base: '>=4.4 && <4.17'
  containers: '>=0.3'
  transformers: '>=0.2'
all-versions:
- '0.1'
- '0.2'
author: Thomas Schilling <nominolo@googlemail.com>
latest: '0.2'
description-type: markdown
description: |
  # union-find

  A simple Haskell library that implements Tarjan's Union/Find
  algorithm.  Useful, for example, to implement unification in a type
  inference system.

  The Union/Find algorithm implements these operations in
  (effectively) constant-time:

   1. Check whether two elements are in the same equivalence class.

   2. Create a union of two equivalence classes.

   3. Look up the descriptor of the equivalence class.


  ## Installation

  Using `cabal` (which comes with the Haskell Platform):

      $ cabal install union-find

  or in the checked-out repository:

      $ cabal install
license-name: BSD-3-Clause
