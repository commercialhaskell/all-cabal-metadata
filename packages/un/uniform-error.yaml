homepage: ''
changelog-type: markdown
hash: d7d1090c6900ec16229568b1ea167c4082bb65ab7bd3b0a52e2b873cb9fcaa3e
test-bench-deps:
  uniform-strings: '>=0.1.3'
  HTF: -any
  base: '>=4.7 && <5'
  uniform-error: -any
  transformers: -any
  safe: -any
maintainer: Andrew U. Frank <uniform@gerastree.at>
synopsis: Handling errors in the uniform framework
changelog: "0.0.10\n    move from the 0.0.9 versions in Workspace8 2019\n    change
  to uniform approach:\n        test/Testing.hs\n        .ghci \n        cleaned \n0.0.10.1
  added (moved) startApp from \n0.1.0   cleaned and removed unnecessary comments and
  functions\n\n0.1.2 moved to Control.Monad.Exception\n"
basic-deps:
  uniform-strings: '>=0.1.3'
  base: '>=4.7 && <5'
  transformers: -any
  safe: -any
all-versions:
- 0.1.0
- 0.1.3
author: Andrew Frank
latest: 0.1.3
description-type: markdown
description: "`Error.hs` defines an uniform approach to error:\n    any function which
  can fail returns a value of \n    - `ErrIO`, which is a wrapper around `IO`, returning
  a `Text` messages if the computation fails \n    - `ErrOrVal` (which is `Either
  Text`) for functions not in the IO monad\n\nAll cases where functions use other
  error signaling methods must be converted as part of their integration into the
  uniform framework. \n\nEspecially important are the functions to convert to regular
  IO: \n\n- `callIO` which calls an IO function and catches a possible error return.
  \ \n\n- converts back functions running in `ErrIO a` into (normal) `IO (ErrOrVal
  a)` which is used when functions from the uniform style are used where functions
  in the normal IO monad are expected. \n\nSome other functions are helpful to identify
  hard to track problems in Haskell: \n\n`undef` to find where an undefined value
  is used, producing an error message. \n\nThe StartApp is a bridge between the ErrIO
  used here and the standard IO monad in `main:: IO ()`\n\nThe package depends on
  uniform-string.\n"
license-name: GPL-2.0-only
