homepage: https://github.com/github.com:andrewufrank/uniform-error.git#readme
changelog-type: markdown
hash: 1c41499c1b89d6bc34e986df2001065dd4db430106469eb1e94da4f872aad819
test-bench-deps:
  uniform-strings: '>=0.1.5'
  HTF: -any
  base: '>=4.7 && <5'
  data-default: -any
  uniform-error: -any
  transformers: -any
  safe: -any
maintainer: Andrew U. Frank <uniform@gerastree.at>
synopsis: Handling errors in the uniform framework
changelog: "0.0.10  \n    move from the 0.0.9 versions in Workspace8 2019  \n    change
  to uniform approach:  \n        test/Testing.hs  \n        .ghci   \n        cleaned
  \  \n\n0.0.10.1 added (moved) startApp from \n\n0.1.0   cleaned and removed unnecessary
  comments and functions\n\n0.1.2 moved to Control.Monad.Exception\n\n0.1.3 some improvements,
  pushed on hackage  \n        added stack build for 19.16 (9.0.2)\n\n0.1.3.1 maintenance
  to fix #1 -- checked with ghc 8.10.7  \n        import HTF (Test.Framework.HUnitWrapper)
  unqualified to get the asserts (export in HTF 0.15.0.0 changed see the change log)\n\n0.1.3.2
  moved the NoticeLevel to a module in uniform-error\n\n0.1.5.1 for ghc 9.2.5"
basic-deps:
  uniform-strings: '>=0.1.5'
  base: '>=4.7 && <5'
  data-default: -any
  transformers: -any
  safe: -any
all-versions:
- 0.1.0
- 0.1.3
- 0.1.3.1
- 0.1.5.1
author: Andrew Frank
latest: 0.1.5.1
description-type: markdown
description: "`Error.hs` defines an uniform approach to error:\n    any function which
  can fail returns a value of \n    - `ErrIO`, which is a wrapper around `IO`, returning
  a `Text` messages if the computation fails \n    - `ErrOrVal` (which is `Either
  Text`) for functions not in the IO monad\n\nAll cases where functions use other
  error signaling methods must be converted as part of their integration into the
  uniform framework. \n\nEspecially important are the functions to convert to regular
  IO: \n\n- `callIO` which calls an IO function and catches a possible error return.
  \ \n\n- converts back functions running in `ErrIO a` into (normal) `IO (ErrOrVal
  a)` which is used when functions from the uniform style are used where functions
  in the normal IO monad are expected. \n\nSome other functions are helpful to identify
  hard to track problems in Haskell: \n\n`undef` to find where an undefined value
  is used, producing an error message. \n\nThe StartApp is a bridge between the ErrIO
  used here and the standard IO monad in `main:: IO ()`\n\nThe package depends on
  uniform-string.\n"
license-name: GPL-2.0-only
