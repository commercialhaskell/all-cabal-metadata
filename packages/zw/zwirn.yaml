all-versions:
- 0.1.0.0
author: Martin Gius
basic-deps:
  array: '>=0.5.6 && <0.6'
  base: '>=4.17 && <4.20'
  bytestring: '>=0.12.1 && <0.13'
  containers: '>=0.6.8 && <0.7'
  exceptions: '>=0.10.9 && <0.11'
  filepath: '>=1.5.4 && <1.6'
  hosc: '>=0.21.1 && <0.22'
  mtl: '>=2.3.1 && <2.4'
  network: '>=3.2.7 && <3.3'
  pretty: '>=1.1.3 && <1.2'
  text: '>=2.1.1 && <2.2'
  tidal-link: '>=1.1 && <1.2'
  zwirn-core: '>=0.1.1 && <0.2'
changelog: ''
changelog-type: ''
description: "# \U0001F9F6\U0001F9F5\U0001F9F6 zwirn \U0001F9F6\U0001F9F5\U0001F9F6
  \n\nzwirn is a live coding language for playing with nested functions of time.\n\n##
  Inspiration\n\nzwirn is an experiment in making the pattern language [TidalCycles](https://tidalcycles.org/)
  into a small functional language of it's own. while zwirn's internals are quite
  different from Tidal's, zwirns design owes almost everything to tidals design by
  [Alex McLean](https://slab.org/).\n\nthe internal representation of signals of time
  was implemented together (and parallel) with [Julian Rohrhuber](https://wertlos.org/~rohrhuber/),
  in an effort to port tidal to SuperCollider. This can be found in the seperate haskell
  library [zwirn-core](https://lab.al0.de/martin/zwirn-core).\n\nthe implementation
  of the compiler is inspired by the excellent [Write You a Haskell](https://github.com/sdiehl/write-you-a-haskell)
  by Stephen Diehl.\n\n## Installing zwirn\n\nThere are currently two ways to play
  with zwirn:\n  * [zwirnzi](https://github.com/polymorphicengine/zwirnzi) - the zwirn
  zompiler-interpreter\n  * [zwirn-loom](https://github.com/polymorphicengine/zwirn-loom)
  - a compiler-interpreter for zwirn with an experimental editor interface\n\nZwirnzi
  is meant to serve as a way to play with zwirn in an editor of your choice, currently
  there are no official editor extensions - but it shouldn't be too hard to implement
  one. This means that zwirn-loom is the best way to play with zwirn at the moment.\n\n##
  Limitations\n\ndue to the representation of signals and the way they are queried,
  there can only be a limited amount of triggers per cycle, if this number is exceeded
  zwirn fails to find any triggers. Currently the threshold seems to be at 500 triggers
  per cycle:\n\nwhile ``` fast 499 $ s \"bd\" ``` works as expected, ``` fast 500
  $ s \"bd\" ``` is silent. if you would like to increase the amount of trigger per
  *second* (not cycle!), increase the cycles per second, for example by running ```
  :cps 1 ```.\n\n## Documentation\n\ndocumentation for zwirn is still in progress
  and available [here](https://github.com/polymorphicengine/zwirn/wiki), feel free
  to drop me a message if you have any questions.\n"
description-type: markdown
hash: c650642881d84d56a370a7bb06c014d39445f3d88579ac431a79ec04f1f7dce1
homepage: ''
latest: 0.1.0.0
license-name: GPL-3.0-only
maintainer: Martin Gius
synopsis: a live coding language for playing with nested functions of time
test-bench-deps: {}
