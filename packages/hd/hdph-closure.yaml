all-versions:
- 0.0.1
author: Patrick Maier <C.Patrick.Maier@gmail.com>
basic-deps:
  array: '>=0.1 && <0.5'
  base: '>=4 && <5'
  bytestring: '>=0.10 && <0.11'
  cereal: '>=0.3.3 && <0.4'
  containers: '>=0.1 && <0.6'
  deepseq: '>=1.1 && <2'
  template-haskell: '>=0'
changelog: ''
changelog-type: ''
description: |
  The Explicit Closures of Haskell Distributed Parallel Haskell
  =============================================================

  **Haskell distributed parallel Haskell (HdpH)** is a Haskell DSL for
  parallel computation on distributed-memory architectures. HdpH is
  implemented entirely in Haskell but does make use of a few GHC extensions,
  most notably TemplateHaskell.

  HpdH uses _explicit closures_ to communicate serialised thunks across
  the network.
  This package exports the fully polymorphic explicit closure representation
  of HdpH, for use by HdpH or other packages.

  HdpH, including the explicit closure representation, is described in some detail in the paper [Implementing a High-level Distributed-Memory Parallel Haskell in Haskell](http://www.macs.hw.ac.uk/~pm175/papers/Maier_Trinder_IFL2011_XT.pdf).

  This release is considered alpha stage.


  Building HdpH explicit closure support
  --------------------------------------

  Should be straightforward from the cabalised package `hdph-closure`.


  References
  ----------

  1.  Patrick Maier, Phil Trinder.
      [Implementing a High-level Distributed-Memory Parallel Haskell in Haskell](http://www.macs.hw.ac.uk/~pm175/papers/Maier_Trinder_IFL2011_XT.pdf).
      Proc. 2011 Symposium on Implementation and Application of Functional Languages (IFL 2011), Springer LNCS 7257, pp. 35-50.

  2.  [HdpH development repository](https://github.com/PatrickMaier/HdpH) on github.
description-type: markdown
hash: 4edda71a6a27cebafdcfdcb3a64b1591019c99c3026244b61fdfb9245d1abc76
homepage: https://github.com/PatrickMaier/HdpH
latest: 0.0.1
license-name: BSD-3-Clause
maintainer: Patrick Maier <C.Patrick.Maier@gmail.com>
synopsis: Explicit closures in Haskell distributed parallel Haskell
test-bench-deps: {}
