homepage: http://github.com/unprolix/hdaemonize
changelog-type: ''
hash: b75b877f0704bcea84bf641c23d5f16e1e220a6147ed4ecabe0b916c128b9cfd
test-bench-deps: {}
maintainer: Jeremy Bornstein <jeremy@jeremy.org>
synopsis: Library to handle the details of writing daemons for UNIX
changelog: ''
basic-deps:
  bytestring: -any
  extensible-exceptions: -any
  unix: -any
  base: '>=4 && <5'
  hsyslog: ==5.*
  filepath: -any
  mtl: -any
all-versions:
- '0.1'
- '0.2'
- '0.3'
- '0.4'
- 0.4.1
- 0.4.2
- 0.4.3
- 0.4.4
- 0.4.4.1
- 0.4.5.0
- 0.5.0.0
- 0.5.0.1
- 0.5.0.2
- 0.5.1
- 0.5.2
- 0.5.3
- 0.5.4
- 0.5.5
- 0.5.6
- 0.5.7
author: Anton Tayanovskyy, Fred Ross, Lana Black
latest: 0.5.7
description-type: markdown
description: "`hdaemonize`\n=================\n[![Build Status](https://travis-ci.org/unprolix/hdaemonize.svg?branch=master)](https://travis-ci.org/unprolix/hdaemonize)\n\n`hdaemonize`
  is a simple library that hides some of the complexities\nof writing UNIX daemons
  in Haskell.\n\nObtaining\n-----------\n\nThe latest version is available (BSD license)
  at\n[GitHub](https://github.com/unprolix/hdaemonize).\n\nUsing\n-------\n\nThe synopsis
  is:\n\n    import System.Posix.Daemonize\n    main = daemonize $ program\n\nThis
  code will make `program` do what good daemons should do, that is,\ndetach from the
  terminal, close file descriptors, create a new process\ngroup, and so on.\n\nIf
  you want more functionality than that, it is available as a\n`serviced` function.\n\nHere
  is an example:\n\n    import Control.Concurrent\n    import System.Posix.Daemonize\n\n
  \   loop i log = do threadDelay $ 10^6\n                    log (show i)\n            \t
  \   writeFile \"/tmp/counter\" $ show i\n                    if i == 5 then undefined
  else loop (i + 1) log\n\n    main = serviced (loop 0)\n\nLet us say this program
  is compiled as `mydaemon`. Then:\n\n    # mydaemon start\n\nstarts the service.
  A second call to start will complain that the\nprogram is already running.\n\nDuring
  its execution, mydaemon will simply write a new number to\n`/tmp/counter` every
  second, until it reaches 5. Then, an exception\nwill be thrown. This exception will
  be caught by `hdaemonize`, and\nlogged to `/var/log/daemon.log` or similar (this
  is depends on how\n`syslog` works on your platorm).  `log (show i)` will leave messages\nin
  the same file.\n\nWhen the exception is thrown, the program will be restared in
  5\nseconds, and will start counting from 0 again.\n\nThe following commands are
  also made available:\n\n    # mydaemon stop\n    # mydaemon restart\n\nFinally,
  if configured to do so, `mydaemon` drops privileges by\nchanging its effective user/group
  ID. (If no user/group ID are\nspecified, it will continue execution as the original
  user and group.)\n\nNote that if you wish to parse your own commandline arguments,
  you can\nreplace invocation of the `serviced` function with `serviced'`. This\nrequires
  specification of an `Operation` which indicates whether the\ndaemon should be started,
  stopped, restarted, or whether its status\nshould be queried.\n\nChangelog\n---------\n\n*
  0.5.6\n    * Add `serviced'` function and `Operation` (`Start`, `Stop`, etc.) to
  allow invocation separated from commandline\n    * Only attempt to change effective
  user/group ID when explicitly specified.\n    * Do not attempt to set user or group
  to the daemon's name in the absence of a specified user or group.\n\n* 0.5.5\n    *
  Fix a bug where hdaemonize fails when user or group \"daemon\" is absent\n\n* 0.5.4\n
  \   * Update to use hsyslog == 5.\n\n* 0.5.2\n    * Fix pre-AMP builds.\n\n* 0.5.1\n
  \   * Updated to use hsyslog >=4\n\n* 0.4\n    * added support for a privileged
  action before dropping privileges\n\n* 0.3\n    * merged with updates by madhadron\n\n*
  0.2\n    * provided documentation\n    * backported to older GHC versions, tested
  on 6.8.1\n\n* 0.1\n    * initial public release\n\n\nAuthors\n-------\nJeremy Bornstein
  <jeremy@jeremy.org>\n\nLana Black <lanablack@amok.cc>\n\nAnton Tayanovskyy <name.surname@gmail.com>.\n\nThe
  code is originally based on a public posting by\n[Andre Nathan](http://sneakymustard.com/),
  used by permission.\n"
license-name: BSD-3-Clause
