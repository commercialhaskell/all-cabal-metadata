all-versions:
- 0.0.1
- 0.0.2
- 0.1.0
author: Aleksey Uimanov
basic-deps:
  aeson: '>=0'
  base: '>=4.6 && <=5.0'
  bytestring: '>=0'
  monad-control: '>=0'
  mtl: '>=0'
  postgresql-simple: '>=0'
  resource-pool: '>=0'
  time: '>=0'
changelog: |
  # CHANGELOG

  ## 0.1.0
  ### Added
  * `createPGPoolWithCallback` accepting callback which must be executed
    on each connection just after it opened by pool.

  ## 0.0.2

  * `base` constraints relaxed
  * changelog added
  * cabal file beautified

  ## 0.0.1

  First version
changelog-type: markdown
description: |
  # What?

  Simple types and set of functions to quickly add configuration of
  postgresql to your Yesod site or whatever.

  # How?

  Add separate file or section inside your existing config like that

  ```yml
  database:    "dbname"
  host:        "127.0.0.1"       # optional
  port:         5432             # optional
  user:        "dbuser"
  password:    "pass"
  poolsize:    10               # optional maximum connections in pool
  pooltimeout: 60               # optional minimum connection lifetime
  poolstripes: 1                # optional count of stripes in pool
  ```

  and then in your program something like that

  ```haskell
  conf <- decodeFile "pgconfig.yml"
           >>= maybe (fail "Could not parse pgconfig.yml") return
  pool <- createPGPool conf
  pingPGPool pool
  ```

  So now you have a pool and can perform queries any way you like.
description-type: markdown
hash: 5ce9d48cd0f422910a3786d17f5c75331da222bbf8ccba03ba116eded6185db1
homepage: https://bitbucket.org/s9gf4ult/postgresql-config
latest: 0.1.0
license-name: BSD-3-Clause
maintainer: s9gf4ult@gmail.com
synopsis: Types for easy adding postgresql configuration to your program
test-bench-deps: {}
