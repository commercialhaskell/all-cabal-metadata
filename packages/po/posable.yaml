homepage: https://github.com/Riscky/posable
changelog-type: markdown
hash: 2d4a8076491fcc7693350672561d5d7528c847bcd7e4d888e9aea91b847101d8
test-bench-deps:
  base: -any
  ghc-typelits-knownnat: -any
  tasty-quickcheck: '>=0.10.2 && <0.11'
  tasty-hunit: '>=0.10 && <0.11'
  tasty: '>=1.4 && <1.5'
  posable: -any
  template-haskell: -any
maintainer: Rick van Hoef <hackage@rickvanhoef.nl>
synopsis: A product-of-sums generics library
changelog: |
  # Change Log

  Notable changes to the project will be documented in this file.

  The format is based on [Keep a Changelog](http://keepachangelog.com/) and the
  project adheres to the [Haskell Package Versioning
  Policy (PVP)](https://pvp.haskell.org)

  ## [unreleased]

  ## [1.0.0.0] - 2022-06-08

  This is the initial release of the library.

  ### Added

  - The POSable class, which captures non-recursive Haskell 98 data types as a product-of-sums
  - A generic implementation of the POSable class, based on the generics-sop library
  - A usage example (in examples/Examples.hs)
  - Instances of POSable for data types in the Prelude (Bool, Maybe, Either, Ord, tuples up to length 16)

  [unreleased]:   https://github.com/Riscky/posable/compare/v1.0.0.0...HEAD
  [1.0.0.0]:      https://github.com/Riscky/posable/compare/c81f50a2b...v1.0.0.0
basic-deps:
  base: '>=4.15.0 && <4.16'
  ghc-typelits-knownnat: '>=0.7.6 && <0.8'
  generics-sop: '>=0.5.1 && <0.6'
  finite-typelits: '>=0.1.4 && <0.2'
  template-haskell: '>=2.17.0 && <2.18'
all-versions:
- 1.0.0.0
author: Rick van Hoef
latest: 1.0.0.0
description-type: markdown
description: |
  # POSable

  A library to convert non-recursive Haskell-98 datatypes to a Product-of-Sums
  representation - and back. This makes it possible to compactly store arrays of
  (nested) sum types in a struct-of-arrays representation, which is used in
  array-based languages like [Accelerate].

  [Accelerate]: https://www.acceleratehs.org/

  ## Dependencies

  - The [Stack] package manager (Tested with stack 2.7.3)
  - `stylish-haskell` and `hlint` (for linting only)

  [Stack]: https://docs.haskellstack.org/en/stable/README/

  ## Tests and lints

  ``` bash
  stylish-haskell -r src examples test
  hlint src examples test
  stack test
  ```

  ## Building

  ``` bash
  stack build
  # To build the docs
  stack haddock posable
  ```

  ## Examples

  In the [examples](examples) folder you will find examples that describe how to use this
  library.
license-name: BSD-3-Clause
