all-versions:
- 0.1.0.0
- 0.2.0.0
- 0.2.0.1
- 0.2.0.2
- 0.3.0.0
- 0.3.1.0
- 0.3.2.0
- 0.4.0.0
- 0.5.0.0
- 0.6.0.2
author: Alex Biehl
basic-deps:
  attoparsec: '>=0.13.2 && <0.14'
  base: '>=4.13.0 && <4.14'
  bytestring: '>=0.10.10 && <0.11'
  data-default-class: '>=0.1.2 && <0.2'
  mtl: '>=2.2.2 && <2.3'
  network: '>=3.1.1 && <3.2'
  pipes: '>=4.3.14 && <4.4'
  pipes-bytestring: '>=2.1.6 && <2.2'
  pipes-parse: '>=3.0.8 && <3.1'
  postie: '>=0'
  tls: '>=1.5.4 && <1.6'
  uuid: '>=1.3.13 && <1.4'
changelog: ''
changelog-type: ''
description: |-
  `postie` is a little smtp server library for receiving emails. It is currently
  in a very early stage and not yet fully standard compatible although the standard
  protocol is already supported.

  * At the time of writing parameters on smtp commands can not be parsed.

  * Handler functions need to return more detailed information to cancel a transaction.

  `postie` supportes hooks on key commands in an smtp session like

  * on connection open and close

  * on /MAIL FROM/ command e.g. to intercept transaction if sender is blacklisted

  * on /RCPT TO/ command e.g. to check if recipient is existent on your server

  * and many more

  To run `postie` you only need to supply a function which takes a `Mail` and
  return `Accepted` or `Rejected`. `mailBody` is a `pipes` `Producer` which
  streams the encoded body directly to your application code. The body is not
  parsed by `postie` since it depends on what the application wants to do with
  the mail data. Eventually I will create a seperate package for parsing mime
  messages with `pipes-parse` when postie becomes more stable and standard compliant.
description-type: haddock
hash: 0a55abbf92483650221d5800006bb3df801f4b3ec74c514fc19d45e7398b3eea
homepage: ''
latest: 0.6.0.2
license-name: BSD-3-Clause
maintainer: alex.biehl@gmail.com
synopsis: SMTP server library to receive emails from within Haskell programs.
test-bench-deps: {}
