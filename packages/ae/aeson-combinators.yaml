homepage: https://github.com/turboMaCk/aeson-combinators
changelog-type: markdown
hash: 98c06603c805f4c29b1d61e89b2170623923010e3988f911361f72a64e0e2a7a
test-bench-deps:
  bytestring: -any
  base: -any
  hspec: -any
  text: -any
  criterion: -any
  aeson-combinators: -any
  utf8-string: -any
  deepseq: -any
  aeson: -any
maintainer: Marek Fajkus <marek.faj@gmail.com>
synopsis: Aeson combinators for dead simple JSON decoding
changelog: |
  # Revision history for aeson-combinators

  ## 0.0.5.0 -- 2021-03-13
  * make test suite compatible with hashable 1.3.1.0

  ## 0.0.4.1 -- 2021-02-14
  * Cleanup README
  * CI maintanance & GHC compatibility update

  ## 0.0.4.0 -- 2020-10-24
  * `Encode` module for encoding

  ## 0.0.3.0 -- 2020-10-11
  * Combinators for dealing with failure
  * `oneOf` function
  * `parseMaybe` and `parseEither`
  * Documentation improvements

  ## 0.0.2.1 -- 2020-03-08
  * Add README to extra source files

  ## 0.0.2.0 -- 2020-03-08
  * GHCJS compatibility

  ## 0.0.1.1 -- 2020-03-01
  * Fixes and improvements in documentation
  * Add source-repository to cabal file

  ## 0.0.1.0 -- 2020-02-29
  * First version. Released on an unsuspecting world.
basic-deps:
  void: -any
  bytestring: -any
  fail: -any
  base: '>=4 && <5'
  time: -any
  unordered-containers: -any
  text: -any
  time-compat: -any
  containers: -any
  uuid-types: -any
  scientific: -any
  aeson: -any
  vector: -any
all-versions:
- 0.0.1.0
- 0.0.1.1
- 0.0.2.0
- 0.0.2.1
- 0.0.3.0
- 0.0.4.0
- 0.0.4.1
- 0.0.5.0
author: Marek Fajkus <marek.faj@gmail.com>
latest: 0.0.5.0
description-type: markdown
description: |
  # Aeson Combinators

  [![Build Status](https://travis-ci.org/turboMaCk/aeson-combinators.svg?branch=master)](https://travis-ci.org/turboMaCk/aeson-combinators)
  [![Build Status](https://img.shields.io/endpoint.svg?url=https%3A%2F%2Factions-badge.atrox.dev%2FturboMaCk%2Faeson-combinators%2Fbadge%3Fref%3Dmaster&style=flat)](https://actions-badge.atrox.dev/turboMaCk/aeson-combinators/goto?ref=master)
  [![built with nix](https://builtwithnix.org/badge.svg)](https://builtwithnix.org)

  [**Low overhead**](#performance) value space `Decoder`
  on top of Aeson's Parser for combinator style decoding.

  This library is compatible with GHC as well as recent versions of **GHCJS**.

  ## Performance

  `Decoder a` type is a function `Value -> Parser a` the same as `parseJSON`
  member function of `FromJSON` class. This means there should be near zero overhead.
  Aeson types and functions are reused where possible. Similarly `Encoder a` type
  follow `toJSON` from `ToJSON` type class.

  Simple benchmark shows that implementation using aeson-combinators performs better
  than equivalent derived instance and on par (actually even slightly better though with difference in noise range)
  with manually implemented instance.

  ## License

  (c) 2020 Marek Fajkus
  BSD-3-Clause
license-name: BSD-3-Clause
