homepage: https://github.com/chshersh/dr-cabal
changelog-type: markdown
hash: 07077a6749444311132c75e7be05300b18dab788dda8f9b4907167fd432da882
test-bench-deps: {}
maintainer: Dmitrii Kovanikov <kovanikov@gmail.com>
synopsis: See README for more info
changelog: "# Changelog\n\nAll notable changes to this project will be documented
  in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\nand
  this project adheres to [PVP Versioning][1]. The changelog is also\navailable [on
  GitHub][2].\n\n[1]: https://pvp.haskell.org\n[2]: https://github.com/chshersh/dr-cabal/releases\n\n##
  [Unreleased]\n\n## [0.2.0.0] — 2022-11-20 ✨\n\n### Added\n\n* [#28](https://github.com/chshersh/dr-cabal/issues/28):\n
  \ Implement interactive mode\n  (by [@Bodigrim][Bodigrim])\n* [#24](https://github.com/chshersh/dr-cabal/issues/24):\n
  \ Compute the critical path\n  (by [@Bodigrim][Bodigrim])\n* [#26](https://github.com/chshersh/dr-cabal/issues/26),\n
  \ [#30](https://github.com/chshersh/dr-cabal/issues/30):\n  Multiple documentation
  improvements: suggest `--store-dir`,\n  `--dependencies-only`, `mktemp`, interactive
  mode by default\n  (by [@Bodigrim][Bodigrim], [@chshersh][chshersh])\n\n### Removed\n\n*
  Remove `watch` command. Now `dr-cabal profile` can watch and build\n  the profiling
  output at the same time.\n\n### Changed\n\n* [#31](https://github.com/chshersh/dr-cabal/issues/31):\n
  \ Refactor CLI significantly:\n\n    + Remove `watch` command\n    + Use interactive
  mode by default (via alternate terminal screen)\n\n  (by [@chshersh][chshersh])\n\n##
  [0.1.0.0] — 2022-08-06 \U0001F4DA\n\n### Added\n\n* [#10](https://github.com/chshersh/dr-cabal/issues/10):\n
  \ Support `Haddock` phase in `cabal build` output\n  (by [@diasbruno][diasbruno])\n*
  [#14](https://github.com/chshersh/dr-cabal/issues/14):\n  Enrich _Summary_ with
  more info: parallelism level, total dependencies summary\n  (by [@bradrn][bradrn])\n*
  Module structure refactoring to add new profiling modes easier\n  (by [@diasbruno][diasbruno])\n\n###
  Fixed\n\n* Fixed type in the profile example\n  (by [@tonyday567][tonyday567])\n\n##
  [0.0.0.0] — 2022-07-31 \U0001F307\n\nInitial release prepared by [@chshersh][chshersh].\n\n<!--
  Contributors -->\n\n[Bodigrim]: https://github.com/Bodigrim\n[bradrn]: https://github.com/bradrn\n[chshersh]:
  https://github.com/chshersh\n[diasbruno]: https://github.com/diasbruno\n[tonyday567]:
  https://github.com/tonyday567\n\n<!-- Versions -->\n\n[Unreleased]: https://github.com/chshersh/dr-cabal/compare/v0.2.0.0...HEAD\n[0.2.0.0]:
  https://github.com/chshersh/dr-cabal/compare/v0.1.0.0...v0.2.0.0\n[0.1.0.0]: https://github.com/chshersh/dr-cabal/compare/v0.0.0.0...v0.1.0.0\n[0.0.0.0]:
  https://github.com/chshersh/dr-cabal/releases/tag/v0.0.0.0\n"
basic-deps:
  bytestring: ^>=0.11
  base: '>=4.15 && <4.17'
  aeson-pretty: ^>=0.8.9
  dr-cabal: -any
  async: ^>=2.2
  terminal-size: ^>=0.3.3
  ansi-terminal: ^>=0.11
  relude: ==1.1.*
  colourista: ^>=0.1
  optparse-applicative: ^>=0.17
  aeson: ^>=2.1
all-versions:
- 0.0.0.0
- 0.1.0.0
- 0.2.0.0
author: Dmitrii Kovanikov
latest: 0.2.0.0
description-type: markdown
description: "# dr-cabal\n\n[![GitHub CI](https://github.com/chshersh/dr-cabal/workflows/CI/badge.svg)](https://github.com/chshersh/dr-cabal/actions)\n[![Hackage](https://img.shields.io/hackage/v/dr-cabal.svg?logo=haskell)](https://hackage.haskell.org/package/dr-cabal)\n[![MPL-2.0
  license](https://img.shields.io/badge/license-MPL--2.0-blue.svg)](LICENSE)\n\n`dr-cabal`
  is a CLI tool for profiling Haskell dependencies build times.\n\n![dr-cabal demo](https://raw.githubusercontent.com/chshersh/dr-cabal/main/images/dr-cabal-demo.gif)\n\n>
  ℹ️ **DISCLAIMER:** This project is developed and maintained in\n> free time by volunteers.
  The development may continue for decades or\n> may stop tomorrow. You can use\n>
  [GitHub Sponsorship](https://github.com/sponsors/chshersh) to support\n> the development
  of this project.\n\n## Install\n\n`dr-cabal` is a CLI tool written in Haskell and
  can be installed\neither from Hackage or from this repository.\n\n### Prerequisites\n\nTo
  start using `dr-cabal`, make sure you have the required version of\n`cabal-install`
  (a Haskell build tool) and GHC (a Haskell compiler)\ninstalled:\n\n* [Cabal ⩾ 3.6.2.0](https://www.haskell.org/cabal/)\n*
  [GHC ⩾ 9.0.2](https://www.haskell.org/downloads/)\n\n### Hackage\n\nTo install the
  latest version of `dr-cabal` from\n[Hackage](https://hackage.haskell.org/package/dr-cabal),\nfollow
  these steps:\n\n1. Update Hackage index:\n\n    ```shell\n\tcabal update\n\t```\n\n2.
  Build `dr-cabal` from Hackage and copy the resulting executable\n   into the desired
  location (e.g. `$HOME/.local/bin`):\n\n    ```shell\n    cabal install dr-cabal
  \\\n        --install-method=copy \\\n        --overwrite-policy=always \\\n        --installdir=$HOME/.local/bin\n\t```\n\n>
  ℹ️ **NOTE:** Make sure the `$HOME/.local/bin` directory or the\n> directory of your
  choice is listed in `$PATH`.\n\n### Sources\n\nTo build the latest version of `dr-cabal`
  from sources,\nfollow these steps:\n\n1. Clone this repository:\n\n    ```shell\n
  \   git clone https://github.com/chshersh/dr-cabal.git\n\tcd dr-cabal\n\t```\n\n2.
  Build the package:\n\n    ```shell\n\tcabal build\n\t```\n\n3. Copy executable to
  the desired location:\n\n    ```shell\n    cp $(cabal list-bin exe:dr-cabal) ~/.local/bin/dr-cabal\n\t```\n\n>
  ℹ️ **NOTE:** Make sure the `~/.local/bin` directory or the\n> directory of your
  choice is listed in `$PATH`.\n\n## Quick start guide\n\nRun the following command
  to view interactive profiling report:\n\n```shell\ncabal --store-dir=$(mktemp -d)
  build --dependencies-only all | dr-cabal profile\n```\n\n### Explanation\n\nThis
  section explains the above command:\n\n1. `dr-cabal` watches the output of the `cabal
  build` command to\n   produce the profiling report. Step into the directory of the\n
  \  Haskell project you want to profile and pipe the output of\n   `cabal build`
  to `dr-cabal profile`.\n2. Currently, `dr-cabal` can profile only dependencies.
  So you can\n   pass the `--dependencies-only` to avoid extra wait.\n3. `cabal` caches
  built dependencies. You can specify a custom\n   directory for storing build artifacts
  using the `--store-dir` flag\n   to build the dependencies anew.\n4. The `$(mktemp
  -d)` command generates a temporary directory so you\n   can run the build time profiler
  in an isolated location.\n\n> ⚠️ **WARNING:** To get meaningful results, including
  downloading\n> of packages, the `dr-cabal watch` command needs to be run when\n>
  none of the dependencies are build (i.e. with cold cabal\n> cache). If you've already
  build you project, including\n> dependencies, you can purge global Cabal cache using
  the\n> following command:\n>\n> ```shell\n> rm -rf ~/.cabal\n> ```\n\n## Usage\n\n>
  ℹ️ In this section, a more verbose `cabal-install` command from\n> \"Quick start
  guide\" is replaced with shorter `cabal build`.\n\n`dr-cabal` supports profiling
  of documentation as well, you only need\nto pass relevant flags to `cabal build`:\n\n```shell\ncabal
  build --enable-documentation --haddock-all | dr-cabal profile\n```\n\nTo cache the
  profiling results in JSON (and avoid building the project\nagain), use the `--output`
  flag:\n\n```shell\ncabal build | dr-cabal profile --output=my_file.json\n```\n\nOnce
  you successfully produced a JSON file with all the recorded\nsteps, run the following
  command to pretty-print the profiling output:\n\n> ⚠️ **WARNING:** For better results,
  make your terminal full-screen.\n\n```shell\ndr-cabal profile --input=my_file.json\n```\n\nYou'll
  see the output like on the image below:\n\n![dr-cabal bigger example](https://raw.githubusercontent.com/chshersh/dr-cabal/main/images/dr-cabal-itself.png)\n"
license-name: MPL-2.0
