homepage: https://github.com/chshersh/dr-cabal
changelog-type: markdown
hash: 8c37d30d0ad1f2df0c4c980aa3164d06091acd4da14fc574d4d39b4bbd359ad1
test-bench-deps: {}
maintainer: Dmitrii Kovanikov <kovanikov@gmail.com>
synopsis: See README for more info
changelog: "# Changelog\n\n`dr-cabal` uses [PVP Versioning][1].\nThe changelog is
  available [on GitHub][2].\n\n## 0.1.0.0 — August 6, 2022 \U0001F4DA\n\n* [#10](https://github.com/chshersh/dr-cabal/issues/10):\n
  \ Support `Haddock` phase in `cabal build` output\n  (by [@diasbruno](https://github.com/diasbruno))\n*
  [#14](https://github.com/chshersh/dr-cabal/issues/14):\n  Enrich _Summary_ with
  more info: parallelism level, total dependencies summary\n  (by [@bradrn](https://github.com/bradrn))\n*
  Module structure refactoring to add new profiling modes easier\n  (by [@diasbruno](https://github.com/diasbruno))\n\n##
  0.0.0.0 — July 31, 2022 \U0001F307\n\n* Initially created.\n\n[1]: https://pvp.haskell.org\n[2]:
  https://github.com/chshersh/dr-cabal/releases\n"
basic-deps:
  bytestring: ^>=0.11
  base: '>=4.15 && <4.17'
  aeson-pretty: ^>=0.8.9
  dr-cabal: -any
  async: ^>=2.2
  ansi-terminal: ^>=0.11
  relude: ==1.1.*
  colourista: ^>=0.1
  optparse-applicative: ^>=0.17
  aeson: ^>=2.1
all-versions:
- 0.0.0.0
- 0.1.0.0
author: Dmitrii Kovanikov
latest: 0.1.0.0
description-type: markdown
description: "# dr-cabal\n\n[![GitHub CI](https://github.com/chshersh/dr-cabal/workflows/CI/badge.svg)](https://github.com/chshersh/dr-cabal/actions)\n[![Hackage](https://img.shields.io/hackage/v/dr-cabal.svg?logo=haskell)](https://hackage.haskell.org/package/dr-cabal)\n[![MPL-2.0
  license](https://img.shields.io/badge/license-MPL--2.0-blue.svg)](LICENSE)\n\n`dr-cabal`
  is a CLI tool for profiling Haskell dependencies build times.\n\n![dr-cabal example](https://raw.githubusercontent.com/chshersh/dr-cabal/main/images/dr-cabal-example.png)\n\n>
  ℹ️ **DISCLAIMER:** This project is developed and maintained in\n> free time by volunteers.
  The development may continue for decades or\n> may stop tomorrow. You can use\n>
  [GitHub Sponsorship](https://github.com/sponsors/chshersh) to support\n> the development
  of this project.\n\n## Install\n\n`dr-cabal` is a Haskell CLI tool and can be installed
  either from\nHackage or from this repository.\n\n### Prerequisites\n\nTo start using
  `dr-cabal`, make sure you have the required version of\n`cabal-install` (a Haskell
  build tool) and GHC (a Haskell compiler)\ninstalled:\n\n* [Cabal ⩾ 3.6.2.0](https://www.haskell.org/cabal/)\n*
  [GHC ⩾ 9.0.2](https://www.haskell.org/downloads/)\n\n### Hackage\n\nTo install the
  latest version of `dr-cabal` from\n[Hackage](https://hackage.haskell.org/package/dr-cabal),\nfollow
  these steps:\n\n1. Update Hackage index:\n\n    ```shell\n\tcabal update\n\t```\n\n2.
  Build `dr-cabal` from Hackage and copy the resulting executable\n   into the desired
  location:\n\n    ```shell\n    cabal install dr-cabal \\\n        --install-method=copy
  \\\n        --overwrite-policy=always \\\n        --with-compiler=ghc-9.0.2 \\\n
  \       --installdir=$HOME/.local/bin\n\t```\n\n> ℹ️ **NOTE:** Make sure the `$HOME/.local/bin`
  directory or the\n> directory of your choice is listed in `$PATH`.\n\n### Sources\n\nTo
  build the latest version of `dr-cabal` from sources,\nfollow these steps:\n\n1.
  Clone this repository:\n\n    ```shell\n    git clone https://github.com/chshersh/dr-cabal.git\n\tcd
  dr-cabal\n\t```\n\n2. Build the package:\n\n    ```shell\n\tcabal build\n\t```\n\n3.
  Copy executable to the desired location:\n\n    ```shell\n    cp $(cabal list-bin
  exe:dr-cabal) ~/.local/bin/dr-cabal\n\t```\n\n> ℹ️ **NOTE:** Make sure the `~/.local/bin`
  directory or the\n> directory of your choice is listed in `$PATH`.\n\n## How to
  use?\n\n`dr-cabal` usages comprises two steps:\n\n1. \U0001F440 Watching `cabal
  build` output and recording data into a JSON file.\n2. \U0001F308 Producing pretty
  profiling results.\n\n### Watch\n\n> ⚠️ **WARNING:** To get meaningful results,
  the `dr-cabal watch`\n> command needs to be run when none of the dependencies are
  build. If\n> you've already build you project, including dependencies, you can\n>
  purge global Cabal cache using the following command:\n>\n> ```shell\n> rm -rf ~/.cabal\n>
  ```\n>\n> You may prefer a less invasive approach if you have custom global\n> Cabal
  configurations:\n>\n> ```shell\n> rm -rf ~/.cabal/store\n> ```\n>\n> However, with
  the latter solution you won't see the `Downloading`\n> phase in the profiling output.\n\nRun
  the following command inside the project directory, for which you\nwant to build
  the profile chart:\n\n```shell\ncabal build all | dr-cabal watch --output=dr-cabal-debug.json\n```\n\nThis
  command watches the `cabal build` output and records all the\nrelevant steps in
  the `dr-cabal-debug.json` file.\n\nIf everything is good, you should see output
  similar to the below one:\n\n![dr-cabal watch example](https://raw.githubusercontent.com/chshersh/dr-cabal/main/images/dr-cabal-watch.gif)\n\n>
  It's also possible to see the time spent on Haddock. You can run with:\n>\n> ```shell\n>
  cabal build all --enable-documentation --haddock-all | dr-cabal watch --output=dr-cabal-debug.json\n>
  ```\n\n### Profile\n\nOnce you successfully produced a JSON file with all the recorded\nsteps,
  run the following command to pretty-print the profiling output:\n\n> ⚠️ **WARNING:**
  For better results, make your terminal full-screen.\n\n```shell\ndr-cabal profile
  --input=dr-cabal-debug.json\n```\n\nYou'll see the output like on the image below:\n\n![dr-cabal
  bigger example](https://raw.githubusercontent.com/chshersh/dr-cabal/main/images/dr-cabal-itself.png)\n"
license-name: MPL-2.0
