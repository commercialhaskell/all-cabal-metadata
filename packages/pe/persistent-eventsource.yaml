all-versions:
- 0.2.0
author: Jappie Klooster
basic-deps:
  base: '>=4.7 && <5'
  esqueleto: '>=0'
  monad-logger: '>=0'
  persistent: '>=0'
  persistent-mtl: '>=0'
  text: '>=0'
  time: '>=0'
  unliftio-core: '>=0'
changelog: "# Change log for persistent-eventsource project\n\n## Version 0.2.0 \n\n+
  rename persistent-event-source to persistent-eventsource\n\n## Version 0.1.0 \n\n+
  Add initial interface\n\n## Version 0.0.0 \n\nimport [template](https://github.com/jappeace/template).\n\n"
changelog-type: markdown
description: "[![Githbu actions build status](https://img.shields.io/github/workflow/status/jappeace/persistent-eventsource/Test)](https://github.com/jappeace/persistent-eventsource/actions)\n[![Hackage
  version](https://img.shields.io/hackage/v/template.svg?label=Hackage)](https://hackage.haskell.org/package/persistent-eventsource)
  \n\nPersistent based event sourcing.\n\nTODO:\n\n+ [x] Add event ordering code.\n+
  [ ] Prove correctness of event ordering.\n+ [ ] I'd like to also add the reapply
  in a transaction\n      code, we'd need to refactor so the tables are known\n      by
  the system so we can automatically generate a truncate query.\n+ [ ] Upstream Database.Esqueleto.*
  to the right package\n\n## Usage\n\n### Tools\nEnter the nix shell.\n```\nnix-shell\n```\nYou
  can checkout the makefile to see what's available:\n```\ncat makefile\n```\n\n###
  Running\n```\nmake run\n```\n\n### Fast filewatch which runs tests\n```\nmake ghcid\n```\n"
description-type: markdown
hash: 0a5190cf018843899e11e9706069e5f920348163d9172a8354a826b5c7eb8fb9
homepage: https://github.com/jappeace/persistent-eventsource#readme
latest: 0.2.0
license-name: MIT
maintainer: jappieklooster@hotmail.com
synopsis: Persistent based event sourcing.
test-bench-deps:
  base: '>=4.7 && <5'
  esqueleto: '>=0'
  monad-logger: '>=0'
  persistent: '>=0'
  persistent-eventsource: '>=0'
  persistent-mtl: '>=0'
  tasty: '>=0'
  tasty-hunit: '>=0'
  tasty-quickcheck: '>=0'
  text: '>=0'
  time: '>=0'
  unliftio-core: '>=0'
