homepage: http://www.yesodweb.com/book/persistent
changelog-type: markdown
hash: a2c77867bf2050a37f03578df3f1aeeae619f6c595894c102b7aba82ab5ecc13
test-bench-deps:
  shakespeare: -any
  bytestring: -any
  unliftio: -any
  base: '>=4.9 && <5'
  time: -any
  base64-bytestring: -any
  persistent: -any
  unordered-containers: -any
  hspec: '>=2.4'
  text: -any
  http-api-data: -any
  resource-pool: -any
  criterion: -any
  conduit: -any
  path-pieces: -any
  fast-logger: -any
  th-lift-instances: -any
  containers: -any
  silently: -any
  quickcheck-instances: '>=0.3'
  unliftio-core: -any
  mtl: -any
  blaze-html: -any
  monad-logger: -any
  file-embed: -any
  attoparsec: -any
  transformers: -any
  deepseq: '>=1.4'
  scientific: -any
  QuickCheck: -any
  resourcet: -any
  aeson: -any
  template-haskell: '>=2.4'
  vector: -any
maintainer: Michael Snoyman <michael@snoyman.com>, Greg Weber <greg@gregweber.info>
synopsis: Type-safe, multi-backend data serialization.
changelog: "# Changelog for persistent\n\n## 2.13.1.0\n\n* [#1264](https://github.com/yesodweb/persistent/pull/1264)\n
  \   * Support declaring Maybe before the type in model definitions\n\n## 2.13.0.4\n\n*
  [#1277](https://github.com/yesodweb/persistent/pull/1277)\n    * Corrected the documentation
  of `addMigration` to match the actual\n      behaviour - this will not change the
  behaviour of your code.\n\n## 2.13.0.3\n\n* [#1287](https://github.com/yesodweb/persistent/pull/1287)\n
  \   * Fix the duplicate entity check for transitive dependencies.\n    * Fixes an
  issue where generating code would refer to the `ModelName` when\n      making a
  reference to another table when the explicit code only refers to\n      `ModelNameId`.\n\n##
  2.13.0.2\n\n* [#1265](https://github.com/yesodweb/persistent/pull/1265)\n    * Support
  GHC 9\n\n## 2.13.0.1\n\n* [#1268](https://github.com/yesodweb/persistent/pull/1268)\n
  \   * Show `keyFromValues` error\n\n## 2.13.0.0\n\n* [#1244](https://github.com/yesodweb/persistent/pull/1244)\n
  \   * Implement config for customising the FK name\n* [#1252](https://github.com/yesodweb/persistent/pull/1252)\n
  \   * `mkMigrate` now defers to `mkEntityDefList` and `migrateModels` instead of\n
  \     fixing the foreign key references itself.\n    * `mkSave` was deprecated -
  the function did not fix foreign key references.\n      Please use `mkEntityDefList`
  instead.\n    * `EntityDef` will now include fields marked `MigrationOnly` and\n
  \     `SafeToRemove`. Beforehand, those were filtered out, and `mkMigrate`\n      applied.
  The function `getEntityFields` will only return fields defined on\n      the Haskell
  type - for all columns, see `getEntityFieldsDatabase`.\n* [#1225](https://github.com/yesodweb/persistent/pull/1225)\n
  \   * The fields and constructor for `SqlBackend` are no longer exported by\n      default.
  They are available from an internal module,\n      `Database.Persist.Sql.Types.Internal`.
  Breaking changes from `Internal`\n      modules are not reflected in the major version.
  This will allow us to\n      release new functionality without breaking your code.
  It's recommended to\n      switch to using the smart constructor functions and setter
  functions that\n      are now exported from `Database.Persist.Sql` instead.\n    *
  A new API is available for constructing and using a `SqlBackend`, provided\n      in
  `Database.Persist.SqlBackend`. Instead of using the `SqlBackend`\n      directly,
  use `mkSqlBackend` and the datatype `MkSqlBackendArgs`. The\n      `MkSqlBackendArgs`
  record has the same field names as the `SqlBackend`, so\n      the translation is
  easy:\n\n        ```diff\n        - SqlBackend\n        + mkSqlBackend MkSqlBackendArgs\n
  \           { connInsertSql = ...\n            , connCommit = ...\n            ,
  connEscapeFieldName = ...\n            , connEscapeTableName = ...\n            ,
  etc\n            }\n        ```\n\n      Some fields were omitted in `MkSqlBackendArgs`.
  These fields are\n      *optional* - they provide enhanced or backend-specific functionality.
  For\n      these, use the setter functions like `setConnUpsertSql`.\n    * Previously
  hidden modules are now exposed under the `Internal` namespace.\n    * The `connLimitOffset`
  function used to have a `Bool` parameter. This\n      parameter is unused and has
  been removed.\n* [#1234](https://github.com/yesodweb/persistent/pull/1234)\n    *
  You can now customize the default implied ID column. See the documentation\n      in
  `Database.Persist.ImplicitIdDef` for more details.\n    * Moved the various `Name`
  types into `Database.Persist.Names`\n    * Removed the `hasCompositeKey` function.
  See `hasCompositePrimaryKey` and\n      `hasNaturalKey` as replacements.\n    *
  The `EntityDef` constructor and field labels are not exported by default.\n      Get
  those from `Database.Persist.EntityDef.Internal`, but you should\n      migrate
  to the getters/setters in `Database.Persist.EntityDef` as you can.\n    * Added
  the `Database.Persist.FieldDef` and\n      `Database.Persist.FieldDef.Internal`
  modules.\n    * The `PersistSettings` type was made abstract. Please migrate to
  the\n      getters/setters defined in that `Database.Persist.Quasi`, or use\n      `Database.Persist.Quasi.Internal`
  if you don't mind the possibility of\n      breaking changes.\n    * Add the `runSqlCommand`
  function for running arbitrary SQL during\n      migrations.\n    * Add `migrateModels`
  function for a TH-free migration facility.\n* [#1253](https://github.com/yesodweb/persistent/pull/1253)\n
  \   * Add `discoverEntities` to discover instances of the class and return their\n
  \     entity definitions.\n* [#1250](https://github.com/yesodweb/persistent/pull/1250)\n
  \   * The `mpsGeneric` function has been deprecated. If you need this\n      functionality,
  please comment with your needs on the GitHub issue tracker.\n      We may un-deprecate
  it, or we may provide a new and better means of\n      facilitating a solution to
  your problem.\n* [#1255](https://github.com/yesodweb/persistent/pull/1255)\n    *
  `mkPersist` now checks to see if an instance already exists for\n      `PersistEntity`
  for the inputs.\n* [#1256](https://github.com/yesodweb/persistent/pull/1256)\n    *
  The QuasiQuoter has been refactored and improved.\n    * You can now use `mkPersistWith`
  to pass in a list of pre-existing\n      `EntityDef` to improve foreign key detection
  and splitting up models\n      across multiple modules.\n    * The `entityId` field
  now returns an `EntityIdDef`, which specifies what\n      the ID field actually
  is. This is a move to better support natural keys.\n    * Several types that had
  lists have been refactored to use nonempty lists to\n      better capture the semantics.\n
  \   * `mkDeleteCascade` is deprecated. Please use the Cascade behavior directly\n
  \     on fields.\n    * You can use `Key Foo` and `FooId` interchangeably in fields.\n
  \   * Support for GHC < 8.4 dropped.\n\n## 2.12.1.2\n\n* [#1258](https://github.com/yesodweb/persistent/pull/1258)\n
  \   * Support promoted types in Quasi Quoter\n* [#1243](https://github.com/yesodweb/persistent/pull/1243)\n
  \   * Assorted cleanup of TH module\n* [#1242](https://github.com/yesodweb/persistent/pull/1242)\n
  \   * Refactor setEmbedField to use do notation\n* [#1237](https://github.com/yesodweb/persistent/pull/1237)\n
  \   * Remove nonEmptyOrFail function from recent tests\n\n## 2.12.1.1\n\n* [#1231](https://github.com/yesodweb/persistent/pull/1231)\n
  \   * Simplify Line type in Quasi module, always use NonEmpty\n* [#1229](https://github.com/yesodweb/persistent/pull/1229)\n
  \   * The `#id` labels are now generated for entities.\n\n## 2.12.1.0\n\n* [#1218](https://github.com/yesodweb/persistent/pull/1218)\n
  \   * Refactoring name generating functions in TH\n* [#1226](https://github.com/yesodweb/persistent/pull/1226)\n
  \   * Expose the `filterClause` and `filterClauseWithValues` functions to support\n
  \     the `upsertWhere` functionality in `persistent-postgresql`.\n\n## 2.12.0.2\n\n*
  [#1123](https://github.com/yesodweb/persistent/pull/1223)\n    * Fix JSON encoding
  for `PersistValue`\n\n## 2.12.0.1\n\n* Refactoring token parsing in quasi module
  [#1206](https://github.com/yesodweb/persistent/pull/1206)\n* Removing duplication
  from TH output [#1202](https://github.com/yesodweb/persistent/pull/1202)\n* Refactor
  [] to NonEmpty in Quasi module [#1193](https://github.com/yesodweb/persistent/pull/1193)\n*
  [#1162](https://github.com/yesodweb/persistent/pull/1162)\n  * Replace `askLogFunc`
  with `askLoggerIO`\n* Decomposed `HaskellName` into `ConstraintNameHS`, `EntityNameHS`,
  `FieldNameHS`. Decomposed `DBName` into `ConstraintNameDB`, `EntityNameDB`, `FieldNameDB`
  respectively. [#1174](https://github.com/yesodweb/persistent/pull/1174)\n* Use `resourcet-pool`
  to break out some `Data.Pool` logic [#1163](https://github.com/yesodweb/persistent/pull/1163)\n*
  [#1178](https://github.com/yesodweb/persistent/pull/1178)\n  * Added 'withBaseBackend',
  'withCompatible' to ease use of base/compatible backend queries in external code.\n*
  Added GHC 8.2.2 and GHC 8.4.4 back into the CI and `persistent` builds on 8.2.2
  again [#1181](https://github.com/yesodweb/persistent/issues/1181)\n* [#1179](https://github.com/yesodweb/persistent/pull/1179)\n
  \ * Added `Compatible`, a newtype for marking a backend as compatible with another.
  Use it with `DerivingVia` to derive simple instances based on backend compatibility.\n
  \ * Added `makeCompatibleInstances` and `makeCompatibleKeyInstances`, TemplateHaskell
  invocations for auto-generating standalone derivations using `Compatible` and `DerivingVia`.\n*
  [#1207](https://github.com/yesodweb/persistent/pull/1207)\n    * @codygman discovered
  a bug in [issue #1199](https://github.com/yesodweb/persistent/issues/1199) where
  postgres connections were being returned to the `Pool SqlBackend` in an inconsistent
  state.\n      @parsonsmatt debugged the issue and determined that it had something
  to do with asynchronous exceptions.\n      Declaring it to be \"out of his pay grade,\"
  he ripped the `poolToAcquire` function out and replaced it with `Data.Pool.withResource`,
  which doesn't exhibit the bug.\n      Fortunately, this doesn't affect the public
  API, and can be a mere bug release.\n    * Removed the functions `unsafeAcquireSqlConnFromPool`,
  `acquireASqlConnFromPool`, and `acquireSqlConnFromPoolWithIsolation`.\n      For
  a replacement, see `runSqlPoolNoTransaction` and `runSqlPoolWithHooks`.\n* Renaming
  values in persistent-template [#1203](https://github.com/yesodweb/persistent/pull/1203)\n*
  [#1214](https://github.com/yesodweb/persistent/pull/1214):\n    * Absorbed the `persistent-template`
  package. `persistent-template` will receive a 2.12 release with a warning and a
  deprecation notice.\n    * Remove the `nooverlap` flag. It wasn't being used anymore.\n*
  [#1205](https://github.com/yesodweb/persistent/pull/1205)\n    * Introduce the `PersistLiteral_`
  constructor, replacing the `PersistLiteral`, `PersistLiteralEscaped`, and `PersistDbSpecific`.\n
  \   * The old constructors are now pattern synonyms. They don't actually differentiate
  between the various escaping strategies when consuming them! If you pattern match
  on multiple of `PersistDbSpecific`, `PersistLiteral`, or `PersistLiteralEscaped`
  , then you should use the `PersistLiteral_` constructor to differentiate between
  them.\n\n## 2.11.0.2\n* Fix a bug where an empty entity definition would break parsing
  of `EntityDef`s. [#1176](https://github.com/yesodweb/persistent/issues/1176)\n\n##
  2.11.0.1\n\n* Docs/Bugs fixes [#1153](https://github.com/yesodweb/persistent/pull/1153)\n
  \ * Fix documentation on `FieldDef.fieldAttrs`.\n  * Postgresql backend: Add a space
  in cascade clause of generated SQL.\n\n## 2.11.0.0\n\n* Foreign Key improvements
  [#1121](https://github.com/yesodweb/persistent/pull/1121)\n  * It is now supported
  to refer to a table with an auto generated Primary Kay\n  * It is now supported
  to refer to non-primary fields, using the keyword `References`\n  * It is now supported
  to have cascade options for simple/single-field Foreign Keys\n* Introduces a breaking
  change to the internal function `mkColumns`, which can now be passed a record of
  functions to override its default behavior. [#996](https://github.com/yesodweb/persistent/pull/996)\n*
  Added explicit `forall` notation to make most API functions play nice when using
  `TypeApplications`. (e.g. instead of `selectList @_ @_ @User [] []`, you can now
  write `selectList @User [] []`) [#1006](https://github.com/yesodweb/persistent/pull/1006)\n*
  [#1060](https://github.com/yesodweb/persistent/pull/1060)\n  * The QuasiQuoter now
  supports `OnDelete` and `OnUpdate` cascade options.\n* [#1044](https://github.com/yesodweb/persistent/pull/1044)\n
  \ * Field and constraint labels generated by TH can now be customized.\n  * mpsPrefixFields
  is deprecated in favor of using these customisation functions.\n* [#1032](https://github.com/yesodweb/persistent/pull/1032)\n
  \ * Instance for `Natural` is removed. See `OverflowNatural` for a\n    replacement
  and rationale on why.\n* [#1063](https://github.com/yesodweb/persistent/pull/1063)\n
  \ * A new class member `keyFromRecordM` allows you to construct a `Key\n    record`
  from a `record` if it was defined with `Primary`.\n* [#1036](https://github.com/yesodweb/persistent/pull/1036)\n
  \ * The method `entityIdFromJSON` that is used to parse entities now correctly works
  for entities that define a custom `Primary` key.\n* [#856](https://github.com/yesodweb/persistent/pull/856)\n
  \ * Modify `upsertBy` to use backend-specific implementation (if any).\n* [#1066](https://github.com/yesodweb/persistent/pull/1066)\n
  \ * You can set a column's `sql=id` for a non `Id` column.\n* Fix a bug where unsafe
  migration error messages were being shown using `Show` prior to printing, resulting
  in less helpful output. [#1080](https://github.com/yesodweb/persistent/pull/1080)\n*
  [#1087](https://github.com/yesodweb/persistent/pull/1087)\n  * `RawSql` now has
  tuple instances up to GHC's max tuple size (62)\n* [#1076](https://github.com/yesodweb/persistent/pull/1076)\n
  \ * `Loc` is now imported from `monad-logger` as opposed to `template-haskell`.
  Removes `template-haskell` as an explicit dependency.\n* [#1114](https://github.com/yesodweb/persistent/pull/1114)\n
  \ * Remove unnecessary deriving of `Typeable`.\n* [#1128](https://github.com/yesodweb/persistent/pull/1128)\n
  \ * Remove `Monad` constraint on `entityDef`\n* [#1127](https://github.com/yesodweb/persistent/pull/1127)\n
  \ * Remove deriving of `Show` for uniques. Users that need a `Show` instance can
  put a standalone deriving instance:\n\n    ```haskell\n    deriving stock instance
  Show (Unique User)\n    ```\n\n* [#1131](https://github.com/yesodweb/persistent/pull/1131)\n
  \ * Add an `exists` function to the `PersistQueryRead` type class.\n* [#1117](https://github.com/yesodweb/persistent/issues/1117)\n
  \ * Allow parsing UTCTimes from sqlite with the format \"%F %T%Q\" as well, instead
  of only \"%FT%T%Q\".\n* [#1140](https://github.com/yesodweb/persistent/pull/1140)\n
  \ * A new function `checkUniqueUpdateable` allows you to check uniqueness\n    constraints
  on an entity update without having to update it.\n* [#1142](https://github.com/yesodweb/persistent/pull/1142)\n
  \   * Deprecate `hasCompositeKey` in favor of `hasCustomPrimaryKey` and `hasCompositePrimaryKey`
  functions.\n* [#1098](https://github.com/yesodweb/persistent/pull/1098)\n  * Add
  support for configuring the number of stripes and idle timeout for connection pools\n
  \   * For functions that do not specify an idle timeout, the default has been bumped
  to 600 seconds.\n      * This change is based off the experience of two production
  codebases. See [#775](https://github.com/yesodweb/persistent/issues/775)\n    *
  Add a new type `ConnectionPoolConfig` to configure the number of connections in
  a pool, their idle timeout, and stripe size.\n    * Add `defaultConnectionPoolConfig`
  to create a `ConnectionPoolConfig`\n    * Add `createSqlPoolWithConfig` and `withSqlPoolWithConfig`,
  which take this new data type\n* [#1122](https://github.com/yesodweb/persistent/pull/1122),
  [#1152](https://github.com/yesodweb/persistent/pull/1152)\n  * Adds a new constructor,
  `PersistLiteral ByteString` to `PersistValue` to support unescaped SQL literals.\n
  \   * Obviously, this is highly unsafe, and you should never use it with user input.\n
  \ * Adds a new field, `cGenerated :: Maybe Text` to `Column` for backend-specific
  support of generated columns.\n    * Express generated fields in the Persistent
  DSL\n\n    ```haskell\n    GeneratedColumnExample\n        fieldOne Text Maybe\n
  \       fieldTwo Text Maybe\n        fieldThree Text Maybe generated=COALESCE(field_one,field_two)\n
  \   ```\n\n    * Support for MySQL >= 5.7. (No version checking is performed! Using
  this feature with older versions of MySQL will cause runtime SQL exceptions!)\n
  \   * Support for Postgresql >= 12. (No version checking is performed! Using this
  feature with older versions of Postgresql will cause runtime SQL exceptions!)\n
  \   * Support for SQLite >= 3.31 (same caveat applies; support added in #1152 )\n*
  [#1151](https://github.com/yesodweb/persistent/pull/1151)\n  * Allow `OverloadedLabels`
  to be used with the `EntityField` type.\n\n## 2.10.5.2\n\n* [#1041](https://github.com/yesodweb/persistent/pull/1041)\n
  \ * Explicit foreign keys can now reference tables with custom sql name\n  * Add
  qualified names to the stock classes list.\n\n## 2.10.5.1\n\n* [#1024](https://github.com/yesodweb/persistent/pull/1024)\n
  \   * Add the ability to do documentation comments in entity definition syntax.
  Unfortunately, TemplateHaskell cannot add documentation comments, so this can't
  be used to add Haddocks to entities.\n    * Add Haddock explainers for some of the
  supported entity syntax in `Database.Persist.Quasi`\n\n## 2.10.5\n\n* Add the `EntityWithPrefix`
  type to allow users to specify a custom prefix for raw SQL queries. [#1018](https://github.com/yesodweb/persistent/pull/1018)\n*
  Added Acquire based API to `Database.Persist.Sql` for working with\n  connections/pools
  in monads which aren't MonadUnliftIO. [#984](https://github.com/yesodweb/persistent/pull/984)\n\n##
  2.10.4\n\n* Log exceptions when closing a connection fails. See point 1 in [yesod
  #1635](https://github.com/yesodweb/yesod/issues/1635#issuecomment-547300856). [#978](https://github.com/yesodweb/persistent/pull/978)\n\n##
  2.10.3\n\n* Added support for GHC 8.8 about MonadFail changes [#976](https://github.com/yesodweb/persistent/pull/976)\n\n##
  2.10.2\n\n* Added `runMigrationQuiet` and `runMigrationUnsafeQuiet` to `Database.Persist.Sql.Migration`
  as safer alternatives to `runMigrationSilent`. [#971](https://github.com/yesodweb/persistent/pull/971)\n
  \ This functions as workaround/fix for: [#966](https://github.com/yesodweb/persistent/issues/966),
  [#948](https://github.com/yesodweb/persistent/issues/948), [#640](https://github.com/yesodweb/persistent/issues/640),
  and [#474](https://github.com/yesodweb/persistent/issues/474)\n* Added RawSql instances
  for 9, 10, 11 and 12-column results. [#961](https://github.com/yesodweb/persistent/pull/961)\n\n##
  2.10.1\n\n* Added `constraint=` attribute to allow users to specify foreign reference
  constraint names.\n\n## 2.10.0\n\n* Added two type classes `OnlyOneUniqueKey` and
  `AtLeastOneUniqueKey`. These classes are used as constraints on functions that expect
  a certain amount of unique keys. They are defined automatically as part of the `persistent-template`'s
  generation. [#885](https://github.com/yesodweb/persistent/pull/885)\n* Add the `entityComments`
  field to the `EntityDef` datatype, and `fieldComments` fields to the `FieldDef`
  datatype. The QuasiQuoter does not currently know how to add documentation comments
  to these types, but it can be expanded later. [#865](https://github.com/yesodweb/persistent/pull/865)\n*
  Expose the `SqlReadT` and `SqlWriteT` constructors. [#887](https://github.com/yesodweb/persistent/pull/887)\n*
  Remove deprecated `Connection` type synonym. Please use `SqlBackend` instead. [#894](https://github.com/yesodweb/persistent/pull/894)\n*
  Remove deprecated `SqlPersist` type synonym. Please use `SqlPersistT` instead. [#894](https://github.com/yesodweb/persistent/pull/894)\n*
  Alter the type of `connUpsertSql` to take a list of unique definitions. This paves
  the way for more efficient upsert implementations. [#895](https://github.com/yesodweb/persistent/pull/895)\n\n##
  2.9.2\n\n* Add documentation for the `Migration` type and some helpers. [#860](https://github.com/yesodweb/persistent/pull/860)\n\n##
  2.9.1\n\n* Fix [#847](https://github.com/yesodweb/persistent/issues/847): SQL error
  with `putMany` on Sqlite when Entity has no unique index.\n\n## 2.9.0\n\n* Added
  support for SQL isolation levels to via SqlBackend. [#812]\n* Move `Database.Persist.Sql.Raw.QQ`
  to a separate `persistent-qq` package [#827](https://github.com/yesodweb/persistent/issues/827)\n*
  Fix [832](https://github.com/yesodweb/persistent/issues/832): `repsertMany` now
  matches `mapM_ (uncurry repsert)` and is atomic for supported sql back-ends.\n\n##
  2.8.2\n\n* Added support for `sql=` to the unique constraints quasi-quoter so that
  users can specify the database names of the constraints.\n\n## 2.8.1\n\n* DRY-ed
  up and exposed several util functions in `Database.Persist.Sql.Util`.\n\t* Upstream-ed
  `updatePersistValue`, `mkUpdateText`, and `commaSeparated` from `Database.Persist.MySQL`.\n\t*
  De-duplicated `updatePersistValue` from various `Database.Persist.Sql.Orphan.*`
  modules.\n* Batching enhancements to reduce db round-trips.\n\t* Added `getMany`
  and `repsertMany` for batched `get` and `repsert`.\n\t* Added `putMany` with a default/slow
  implementation. SqlBackend's that support native UPSERT should override this for
  batching enhancements.\n\t* Updated `insertEntityMany` to replace slow looped usage
  with batched execution.\n* See [#770](https://github.com/yesodweb/persistent/pull/770)\n\n##
  2.8.0\n\n* Switch from `MonadBaseControl` to `MonadUnliftIO`\n* Reapplies [#723](https://github.com/yesodweb/persistent/pull/723),
  which was reverted in version 2.7.3.\n\n## 2.7.3.1\n\n * Improve error messages
  when failing to parse database results into Persistent records. [#741](https://github.com/yesodweb/persistent/pull/741)\n
  * A handful of `fromPersistField` implementations called `error` instead of returning
  a `Left Text`. All of the implementations were changed to return `Left`. [#741](https://github.com/yesodweb/persistent/pull/741)\n
  * Improve error message when a SQL insert fails with a custom primary key [#757](https://github.com/yesodweb/persistent/pull/757)\n\n##
  2.7.3\n\n* Reverts [#723](https://github.com/yesodweb/persistent/pull/723), which
  generalized functions using the `BackendCompatible` class. These changes were an
  accidental breaking change.\n* Recommend the `PersistDbSpecific` docs if someone
  gets an error about converting from `PersistDbSpecific`\n\n## 2.7.2 [DEPRECATED
  ON HACKAGE]\n\n* Many of the functions have been generalized using the `BackendCompatible`
  class. [#723](https://github.com/yesodweb/persistent/pull/723)\n\t* This change
  was an accidental breaking change and was reverted in 2.7.3.\n\t* These change will
  be released in a future version of Persistent with a major version bump.\n* Add
  raw sql quasi quoters [#717](https://github.com/yesodweb/persistent/pull/717)\n\n##
  2.7.1\n\n* Added an `insertUniqueEntity` function [#718](https://github.com/yesodweb/persistent/pull/718)\n*
  Added `BackendCompatible` class [#701](https://github.com/yesodweb/persistent/pull/701)\n\n##
  2.7.0\n\n* Fix upsert behavior [#613](https://github.com/yesodweb/persistent/issues/613)\n*
  Atomic upsert query fixed for arithmatic operations [#662](https://github.com/yesodweb/persistent/issues/662)\n*
  Haddock and test coverage improved for upsert\n\n## 2.6.1\n\n* Fix edge case for
  `\\<-. [Nothing]`\n* Introduce `connMaxParams`\n* Add 'getJustEntity' and 'insertRecord'
  convenience function\n* Minor Haddock improvment\n\n## 2.6\n\n* Add `connUpsertSql`
  type for providing backend-specific upsert sql support.\n\n## 2.5\n\n* read/write
  typeclass split\n* add insertOrGet convenience function to PersistUnique\n\n## 2.2.4.1\n\n*
  Documentation updates [#515](https://github.com/yesodweb/persistent/pull/515)\n\n##
  2.2.4\n\n* Workaround for side-exiting transformers in `runSqlConn` [#516](https://github.com/yesodweb/persistent/issues/516)\n\n##
  2.2.3\n\n* PersistField instance for Natural\n* better oracle support in odbc\n\n##
  2.2.2\n\n* Add liftSqlPersistMPool function\n* support http-api-data for url serialization\n\n##
  2.2.1\n\n* Migration failure message with context\n* Fix insertKey for composite
  keys\n\n## 2.2\n\n* Add a `RawSql` instance for `Key`. This allows selecting primary
  keys using functions like `rawSql`. [#407](https://github.com/yesodweb/persistent/pull/407)\n*
  SqlBackend support for an optimized `insertMany`\n\n## 2.1.6\n\nImportant! If persistent-template
  is not upgraded to 2.1.3.3\nyou might need to make sure `Int64` is in scope for
  your model declarations.\n\n* add showMigration function\n* explicitly use Int64
  for foreign key references\n\n## 2.1.5\n\nAdd `dbIdColumnsEsc` to Sql.Utils.\nUsed
  in persistent-postgresql 2.1.5.2\n\n## 2.1.4\n\n* Fix getBy with a primary key.
  #342\n\n## 2.1.3\n\n* Break self-referencing cycles in the entity declarations\n\n##
  2.1.2\n\n* Error with `Double`s without a decimal part [#378](https://github.com/yesodweb/persistent/issues/378)\n*
  `runSqlPool` does not perform timeout checks.\n\n## 2.1.1.6\n\n* One extra feature
  for #939: use `logDebugN` instead\n\n## 2.1.1.5\n\n* Better SQL logging [Yesod issue
  #939](https://github.com/yesodweb/yesod/issues/939)\n\n## 2.1.1.3\n\nParse UTCTime
  in 8601 format [#339](https://github.com/yesodweb/persistent/issues/339)\n\n## 2.1.1.1\n\nSupport
  for monad-control 1.0\n"
basic-deps:
  bytestring: '>=0.10'
  unliftio: -any
  lift-type: '>=0.1.0.0 && <0.2.0.0'
  base: '>=4.11.1.0 && <5'
  time: '>=1.6'
  base64-bytestring: -any
  unordered-containers: -any
  text: '>=1.2'
  http-api-data: '>=0.3'
  resource-pool: '>=0.2.3'
  conduit: '>=1.2.12'
  path-pieces: '>=0.2'
  fast-logger: '>=2.4'
  th-lift-instances: '>=0.1.14 && <0.2'
  containers: '>=0.5'
  silently: -any
  unliftio-core: -any
  mtl: -any
  blaze-html: '>=0.9'
  monad-logger: '>=0.3.28'
  attoparsec: -any
  transformers: '>=0.5'
  scientific: -any
  resourcet: '>=1.1.10'
  aeson: '>=1.0'
  template-haskell: '>=2.13 && <2.18'
  vector: -any
all-versions:
- 0.0.0
- 0.0.0.1
- 0.1.0
- 0.2.0
- 0.2.0.1
- 0.2.0.2
- 0.2.1
- 0.2.2
- 0.2.2.1
- 0.2.2.2
- 0.2.3
- 0.2.4
- 0.2.4.1
- 0.3.0
- 0.3.0.1
- 0.3.1
- 0.3.1.1
- 0.3.1.2
- 0.3.1.3
- 0.4.0
- 0.4.0.1
- 0.4.1
- 0.4.2
- 0.5.0
- 0.5.1
- 0.6.1
- 0.6.2
- 0.6.3
- 0.6.4
- 0.6.4.1
- 0.6.4.2
- 0.6.4.3
- 0.6.4.4
- 0.7.0
- 0.7.0.1
- 0.8.0
- 0.8.0.1
- 0.8.0.2
- 0.9.0
- 0.9.0.1
- 0.9.0.2
- 0.9.0.3
- 0.9.0.4
- 1.0.0
- 1.0.1
- 1.0.1.1
- 1.0.1.2
- 1.0.1.3
- 1.0.2
- 1.0.2.1
- 1.0.2.2
- 1.1.0
- 1.1.0.1
- 1.1.2
- 1.1.3
- 1.1.3.1
- 1.1.3.2
- 1.1.4
- 1.1.5
- 1.1.5.1
- 1.2.0
- 1.2.0.1
- 1.2.0.2
- 1.2.1
- 1.2.1.1
- 1.2.1.2
- 1.2.2.0
- 1.2.3.0
- 1.2.3.2
- 1.2.3.3
- 1.3.0
- 1.3.0.2
- 1.3.0.3
- 1.3.0.4
- 1.3.0.5
- 1.3.0.6
- 1.3.1
- 1.3.1.1
- 1.3.2
- 1.3.3
- '2.1'
- 2.1.0.1
- 2.1.0.2
- 2.1.1
- 2.1.1.1
- 2.1.1.2
- 2.1.1.3
- 2.1.1.4
- 2.1.1.5
- 2.1.1.6
- 2.1.1.7
- 2.1.2
- 2.1.3
- 2.1.4
- 2.1.5
- 2.1.6
- '2.2'
- 2.2.1
- 2.2.2
- 2.2.2.1
- 2.2.3
- 2.2.4
- 2.2.4.1
- '2.5'
- '2.6'
- 2.6.1
- 2.7.0
- 2.7.1
- 2.7.3
- 2.7.3.1
- 2.8.0
- 2.8.1
- 2.8.2
- 2.9.0
- 2.9.1
- 2.9.2
- 2.10.0
- 2.10.1
- 2.10.2
- 2.10.3
- 2.10.4
- 2.10.5
- 2.10.5.1
- 2.10.5.2
- 2.10.5.3
- 2.10.5.4
- 2.11.0.0
- 2.11.0.1
- 2.11.0.2
- 2.11.0.4
- 2.12.0.2
- 2.12.1.0
- 2.12.1.1
- 2.12.1.2
- 2.13.0.0
- 2.13.0.1
- 2.13.0.2
- 2.13.0.3
- 2.13.0.4
- 2.13.1.0
author: Michael Snoyman <michael@snoyman.com>
latest: 2.13.1.0
description-type: markdown
description: |
  ## persistent

  Type-safe, data serialization. You must use a specific backend in order to make
  this useful. For more information, see [the chapter in the Yesod
  book](http://www.yesodweb.com/book/persistent).
license-name: MIT
