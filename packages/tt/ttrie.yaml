homepage: http://github.com/mcschroeder/ttrie
changelog-type: markdown
hash: b195f494c72f42fab19ae6ba42842078557959b37fc998ec6cb420906cfa6199
test-bench-deps:
  criterion-plus: -any
  mwc-random: -any
  test-framework: '>=0.8'
  stm: -any
  base: -any
  unordered-containers: -any
  text: -any
  test-framework-quickcheck2: '>=0.3'
  stm-stats: -any
  async: -any
  containers: '>=0.5'
  bifunctors: -any
  hashable: '>=1.2'
  transformers: -any
  deepseq: -any
  QuickCheck: '>=2.5'
  stm-containers: -any
  ttrie: -any
  primitive: -any
  vector: -any
maintainer: mc.schroeder@gmail.com
synopsis: Contention-free STM hash map
changelog: "# 0.1.2.2 (October 2021)\n\n* Fix clashing import from `primitive-0.7.3.0`\n\n#
  0.1.2.1 (November 2015)\n  \n* Eliminate a redundant import warning on GHC 7.10\n*
  Loosen test-suite dependency bounds\n\n# 0.1.2  (May 2015)\n  \n* Add a `member`
  convenience function\n\n# 0.1.1  (April 2015)\n\n* Add `fromList` and `unsafeToList`
  functions\n* Add basic tests\n"
basic-deps:
  stm: '>=2'
  base: '>=4.7 && <5'
  atomic-primops: '>=0.6'
  hashable: '>=1.2'
  primitive: '>=0.5'
all-versions:
- '0.1'
- 0.1.1
- 0.1.2
- 0.1.2.1
- 0.1.2.2
author: Michael Schr√∂der
latest: 0.1.2.2
description-type: markdown
description: |
  A contention-free STM hash map for Haskell.

  "Contention-free" means that the map will never cause spurious conflicts.
  A transaction operating on the map will only ever have to retry if
  another transaction is operating on the same key at the same time.

  This is an implementation of the *transactional trie*,
  which is basically a *lock-free concurrent hash trie* lifted into STM.
  For a detailed discussion, including an evaluation of its performance,
  see Chapter 3 of [my master's thesis](https://github.com/mcschroeder/thesis).
license-name: MIT
