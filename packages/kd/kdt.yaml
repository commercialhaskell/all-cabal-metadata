all-versions:
- 0.1.0
- 0.2.0
- 0.2.1
- 0.2.2
- 0.2.3
- 0.2.4
- 0.2.5
author: Luis G. Torres
basic-deps:
  base: '>=4.6 && <5'
  deepseq: '>=1.3'
  deepseq-generics: '>=0.2.0.0'
  heap: '>=1.0.0'
changelog: |
  # 0.2.5
  * Fixed a minor compile error under GHC 9 caused by ambiguous use of "singleton".

  # 0.2.4
  * Now exporting KdMap.Static.TreeNode to facilitate advanced usage of the library.

  # 0.2.3
  * For internal priority queue implementation, use the heap library instead of pqueue library in order to build on ghc 7.10.

  # 0.2.2
  * Relax lower version bound on QuickCheck to 2.5.

  # 0.2.1
  * Relax upper version constraint for MonadRandom (benchmarking code)
  * Add Data.Point2d as dependency of executables so tests and benchmarks can be built from the archive downloaded on Hackage.

  # 0.2.0
  * Lots and lots of renaming all throughout to more closely match terminology used in `containers`.
  * Removed kdt library dependency on QuickCheck (if not building testing code).
  * Removed testing module Point2d from public API
  * All structures now have Show instance
  * Static variants now have functions for dynamically inserting new points into existing structure, with caveat that these functions do not maintain balanced tree structure.
changelog-type: markdown
description: |-
  This package includes static and dynamic versions of k-d trees,
  as well as \"Map\" variants that store data at each point in the
  k-d tree structure. Supports nearest neighbor,
  k nearest neighbors, points within a given radius, and points
  within a given range.
  To learn to use this package, start with the documentation for
  the "Data.KdTree.Static" module.
description-type: haddock
hash: c51a839bcc85d479ac6adf24ef7862269e99eaa529d7effef3c14f003ae8c156
homepage: https://github.com/giogadi/kdt
latest: 0.2.5
license-name: MIT
maintainer: lgtorres42@gmail.com
synopsis: Fast and flexible k-d trees for various types of point queries.
test-bench-deps:
  MonadRandom: '>=0.1.12'
  QuickCheck: '>=2.5'
  base: '>=4.6 && <5'
  criterion: '>=1.0.0.0'
  deepseq: '>=1.3'
  deepseq-generics: '>=0.2.0.0'
  heap: '>=1.0.0'
  kdt: '>=0'
  mersenne-random-pure64: '>=0.2.0.4'
