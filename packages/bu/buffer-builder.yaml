homepage: https://github.com/chadaustin/buffer-builder
changelog-type: markdown
hash: 37d8a5c384aa54d01d78dc18277a936ffcfd4194bad15d20b42fb2dc98fb89b7
test-bench-deps:
  buffer-builder: -any
  bytestring: -any
  HTF: -any
  base: ==4.*
  text: -any
  criterion: -any
  json-builder: -any
  quickcheck-instances: -any
  attoparsec: -any
  deepseq: -any
  http-types: -any
  aeson: -any
  vector: -any
maintainer: chad@chadaustin.me
synopsis: Library for efficiently building up buffers, one piece at a time
changelog: |
  0.2.4.8

  * Support text-2.0

  0.2.4.7

  * Remove any dependencies on C++

  0.2.4.6

  * Fix package compilation on GHC 7.8 and 7.10.  (Thanks Xia Li-yao!)

  0.2.4.5

  * Add Semigroup instance for ObjectBuilder.  (Thanks Dan Fithian!)

  0.2.4.4

  * Add 'stdc++' as an explicit library dependency.  (Thanks Rob Dockins!)

  0.2.4.3

  * Fix a bug where control characters (codepoints 1 through 31) were not being escaped.

  0.2.4.2

  * Include test.json in sdist so benchmarks can be run from Hackage.  (Thanks Ryan Scott!)

  0.2.4.1

  * Fix a bug with appendEscapedJsonText and Text buffers with nonzero offsets. (Thanks Joe Lee!)

  0.2.4.0

  * Add the ability to calculate the output length of a BufferBuilder without allocating or writing bytes

  0.2.3.0

  * Add the ability to query the current buffer size
  * Add the ability to return a value from a BufferBuilder

  0.2.2.2

  * Add the ability to percent-encode directly into a Utf8Builder
  * Add Utf8Builder.unsafeAppendBufferBuilder

  0.2.2.0

  * Add the ability to encode custom types as JSON keys

  0.2.1.0

  * Fix a buffer overrun in the double serializer
  * Add support for URL percent-encoding
  * Tweak the BufferWriter struct to improve code generation
basic-deps:
  bytestring: -any
  base: ==4.*
  unordered-containers: -any
  text: -any
  mtl: -any
  vector: -any
all-versions:
- 0.1.0.0
- 0.2.0.2
- 0.2.0.3
- 0.2.1.0
- 0.2.2.0
- 0.2.2.1
- 0.2.2.2
- 0.2.3.0
- 0.2.4.0
- 0.2.4.1
- 0.2.4.2
- 0.2.4.3
- 0.2.4.4
- 0.2.4.5
- 0.2.4.6
- 0.2.4.7
- 0.2.4.8
author: Chad Austin, Andy Friesen
latest: 0.2.4.8
description-type: haddock
description: |-
  "Data.BufferBuilder" is an efficient library for incrementally building
  up 'ByteString's, one chunk at a time.  Early benchmarks show it
  is over twice as fast as ByteString Builder, primarily because
  'BufferBuilder' is built upon an ST-style restricted monad and
  mutable state instead of ByteString Builder's monoidal AST.

  Internally, BufferBuilder is backed by a few C functions.
  Examination of GHC's output shows nearly optimal code generation
  with no intermediate thunks -- and thus, continuation passing and
  its associated indirect jumps and stack traffic only occur when
  BufferBuilder is asked to append a non-strict ByteString.

  I benchmarked four approaches with a URL encoding benchmark:

  * State monad, concatenating ByteStrings: 6.98 us

  * State monad, ByteString Builder: 2.48 us

  * Crazy explicit RealWorld baton passing with unboxed state: 28.94 us (GHC generated really awful code for this, but see the revision history for the technique)

  * C + FFI + ReaderT: 1.11 us

  Using BufferBuilder is very simple:

  > import qualified Data.BufferBuilder as BB
  >
  > let byteString = BB.runBufferBuilder $ do
  >       BB.appendBS "http"
  >       BB.appendChar8 '/'
  >       BB.appendBS "//"

  This package also provides "Data.BufferBuilder.Utf8" for generating UTF-8 buffers
  and "Data.BufferBuilder.Json" for encoding data structures into JSON.
license-name: BSD-3-Clause
