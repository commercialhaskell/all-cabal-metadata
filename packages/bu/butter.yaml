all-versions:
- 0.1.0.0
- 0.1.0.1
- 0.1.0.2
- 0.1.0.3
- 0.1.0.4
- 0.1.0.6
author: Matthew Ahrens
basic-deps:
  HUnit: '>=0'
  aeson: '>=0'
  base: <5
  bytestring: '>=0'
  containers: '>=0'
  forkable-monad: '>=0.2.0.0'
  free: '>=0'
  network-simple: '>=0'
  stm: '>=0'
  template-haskell: '>=0'
  text: '>=0'
  transformers: '>=0'
changelog: |
  # Changelog for Butter

  ## Unreleased changes
changelog-type: markdown
description: |
  [![Build Status](https://travis-ci.org/System-Indystress/Butter.svg?branch=master)](https://travis-ci.org/System-Indystress/Butter)
  # Butter
  For easily spreading around monadic computation
  ## Examples
  - Example Language usage in `test/first/Main.hs`
  - Example Protocol usage in `test/protocol/Main.hs`
  ## Current Language Features
  Actor Monad Transformer that supports
  - self
  - send
  - receive
    - selective based on type
    - yields on empty receive or type mismatch
  - spawn
    - built on Forkable-Monad and forkIO
  - lift
  - named pids
  - connect to remote
    - send via named

  # Current Library Features
  - Protocol (OTP Genserver like typeclass)
    - explicit State type family
    - explicit Monadic Context type family
    - Results API

  ## Future Core Language Features
  - monitor
  - serializable computation typeclass
    - spawn remote
    - monitor remote
  - query remote
  - encrypted message passing by default
    - config to change encode and decode

  ## Future Library Features
  - quasiquoter / convenience Syntax
  - OTP
    - supervisor trees
  - haddock documentation
  - versioned tutorial series
description-type: markdown
hash: 4f10a06c97fb8b2124c01d2c9ab0b7737d83fe8824467bfa8f3f20bb61cec3c7
homepage: https://github.com/System-Indystress/Butter#readme
latest: 0.1.0.6
license-name: BSD-3-Clause
maintainer: matt.p.ahrens@gmail.com
synopsis: Monad Transformer for Asyncronous Message Passing
test-bench-deps:
  HUnit: '>=0'
  aeson: '>=0'
  base: <5
  butter: '>=0'
  bytestring: '>=0'
  containers: '>=0'
  forkable-monad: '>=0.2.0.0'
  free: '>=0'
  network-simple: '>=0'
  stm: '>=0'
  template-haskell: '>=0'
  text: '>=0'
  transformers: '>=0'
