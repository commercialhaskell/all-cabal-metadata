all-versions:
- 0.1.0.0
- 0.1.0.1
- 0.1.0.2
- 0.1.0.3
- 0.1.0.4
- 0.2.0.0
- 0.2.0.1
author: Ben Hamlin
basic-deps:
  base: '>=4.7 && <5'
  bits-bytestring: '>=0.1 && <0.2'
  bytestring: '>=0.10 && <0.11'
  cereal: '>=0.5 && <0.6'
  exceptions: '>=0.8 && <0.11'
  pretty-hex: '>=1.0 && <1.1'
  random: '>=1.1 && <1.2'
  socket: '>=0.8 && <0.9'
  transformers: '>=0.4 && <0.6'
  unix: '>=2.7 && <2.8'
changelog: |
  # Revision history for rtnetlink

  ## 0.2.0.0  -- 2019-07-04

  * According to rtnetlink(7), `ifi_change` in `struct ifinfomsg` "is reserved
    for future use and should be always set to `0xFFFFFFFF`", so did that.
  * Added a new typeclass, `Dump`, that encodes request-reply pairs that can be
    used with `dump`.
  * Added `Integral` and `IsString` instances for appropriate `newtype`s.
  * Added general `LinkType` for creating links, instead of creating a new type
    for each kind of link.
  * Added several new types to `Address.hs`, including ones for interface scope,
    precedence, labels, lifetimes, and IPv6 features.
  * Added several new types to `Link.hs`, including ones for bridge slaves, link
    groups, and link stats.
  * Added support for creating and managing vlan interfaces.
  * Removed redundancies in `Create`, `Destroy`, `Change`, and `Dump`
    typeclasses, as well as header classes. This should drastically improve the
    DRYness of adding features.
  * Fixed a bug that prevented nested `struct nlattr`s from being parsed.
  * Made many minor interface improvements.

  ## 0.1.0.4  -- 2017-03-28

  * Removed some obscure rtnetlink groups that aren't in `linux/rtnetlink.h` on
    Trusty.
  * Added `stack.yaml`.

  ## 0.1.0.3  -- 2017-03-27

  * Provided support for `base-4.8.*` by fixing `IsString` ambiguity in
    `LinkEther`.

  ## 0.1.0.2  -- 2017-03-26

  * Provided support for `transformers-0.4.*`.

  ## 0.1.0.1  -- 2017-03-25

  * Provided support for `base-4.7.*`.

  ## 0.1.0.0  -- 2017-03-24

  * First version. Released on an unsuspecting world.
changelog-type: markdown
description: |-
  A high-level, extensible, pure-Haskell interface to the
  ROUTE_NETLINK subsystem of netlink for manipulating
  network devices on Linux.
  RTNetlink provides the RTNL monad to simplify sending
  and receiving messages, pre-built types for manipulating
  devices and addresses, and typeclasses for creating your
  own messages, based on linux\/netlink.h,
  linux\/rtnetlink.h, et al.
description-type: haddock
hash: 8c8d56424867eef249242154c0bb35c205867c9f2cd37a2e37d1608c6a4ed300
homepage: https://github.com/protoben/rtnetlink.hs
latest: 0.2.0.1
license-name: BSD-3-Clause
maintainer: Ben Hamlin <protob3n@gmail.com>
synopsis: Manipulate network devices, addresses, and routes on Linux
test-bench-deps:
  base: '>=4.7 && <5'
  bytestring: '>=0.10 && <0.11'
  exceptions: '>=0.8 && <0.11'
  hspec: '>=2.4 && <3'
  linux-namespaces: '>=0.1 && <0.2'
  rtnetlink: '>=0'
  socket: '>=0.8 && <0.9'
  unix: '>=2.7 && <2.8'
