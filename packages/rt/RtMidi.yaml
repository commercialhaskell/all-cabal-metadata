homepage: https://github.com/riottracker/RtMidi
changelog-type: ''
hash: 12b158bc11101b7f0a6fed4b4991cc9d15388301292337b6a369177812c759ad
test-bench-deps:
  RtMidi: -any
  base: -any
  tasty-hunit: '>=0.10.0.2 && <1'
  tasty: '>=1.2.3 && <2'
  vector: -any
maintainer: ejconlon@gmail.com
synopsis: Haskell wrapper for RtMidi, the lightweight, cross-platform MIDI I/O library.
changelog: ''
basic-deps:
  RtMidi: -any
  base: '>=4.14 && <5'
  unliftio-core: '>=0.1.2.0 && <1'
  pretty-simple: '>=4.0.0.0 && <5'
  deepseq: '>=1.4.4.0 && <2'
  vector: '>=0.12.1.2 && <1'
all-versions:
- 0.1.0.0
- 0.1.1.0
- 0.2.0.0
- 0.3.0.0
- 0.4.0.0
- 0.5.0.0
- 0.5.0.1
- 0.5.0.2
- 0.5.0.3
author: kohlrabi, Eric Conlon
latest: 0.5.0.3
description-type: markdown
description: |
  # RtMidi

  [![CircleCI](https://circleci.com/gh/riottracker/RtMidi/tree/master.svg?style=svg)](https://circleci.com/gh/riottracker/RtMidi/tree/master)

  Haskell wrapper for [RtMidi](http://www.music.mcgill.ca/~gary/rtmidi/), the lightweight, cross-platform MIDI I/O library.

  ## How to use

  See [Hackage](https://hackage.haskell.org/package/RtMidi) for the latest released version and add `RtMidi` and `vector` to your library `build-depends`.

  Follow the [callback](https://github.com/riottracker/RtMidi/blob/master/examples/callback.hs) example to receive messages.

  Follow the [playback](https://github.com/riottracker/RtMidi/blob/master/examples/playback.hs) example to send messages.

  ## Development

  This project is tested with Cabal (latest versions of last two compiler lines) and Stack (latest LTS).

  You can get started with development like so:

      # Build and test on OSX CoreMIDI support or Linux with ALSA support.
      # (You can also manually invoke stack and pass `--flag RtMidi:jack` for Jack support.)
      make test

      # Print information about all accessible MIDI devices and all compiled APIs.
      make example-report

  ## TODO

  * See if there is a way to autodetect Jack in the Cabal file.
license-name: MIT
