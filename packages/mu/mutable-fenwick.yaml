all-versions:
- 0.1.0.0
author: Parsa Alizadeh
basic-deps:
  array: '>=0.5.4 && <0.6'
  base: '>=4.17.2 && <4.18'
  commutative-semigroups: '>=0.2.0 && <0.3'
  monoid-subclasses: '>=1.2.6 && <1.3'
  vector: '>=0.13.1 && <0.14'
changelog: |
  # Revision history for mutable-fenwick

  ## 0.1.0.0 -- 2025-04-07

  * First version. Released on an unsuspecting world.
changelog-type: markdown
description: "# mutable-fenwick\n\nThis package provides an implementation of mutable\n[Fenwick
  trees](https://en.wikipedia.org/wiki/Fenwick_tree) in Haskell.\n\n## Features\n\nIt
  is maximally generic. Each operation of Fenwick tree is implemented using a subset
  of constraints\nfrom `Semigroup`, `Monoid`, or `Commutative`, chosen carefully based
  on the nature of each\noperation. This is mostly possible due to how Haskell typeclasses
  work, and provides different\nfunctionality based on the constraints provided by
  the underlying element type.\n\nIt is fast and efficient. Every operation is marked
  as inline, meaning that they will be optimized\nfor the given element type. With
  `ArrayC` and `VectorC` from this package, it is possible to use\nunboxed arrays
  and vectors for newtypes that implement a custom algebra (e.g. `Sum`, `Product`
  or\n`Xor`). An implementation using this library can be as fast as a C/C++ implementation.\n\nIt
  is the only Haskell library (I believe, as of this date) that provides Fenwick trees.
  \n- The [FenwickTree](https://hackage.haskell.org/package/FenwickTree) package is
  more similar to a\n  Segment tree, and it does not have a generic interface for
  the data structure.\n- The [binary-indexed-tree](https://hackage.haskell.org/package/binary-indexed-tree)
  package\n  has an interface for ST monad, but the implementation is only limited
  to `Sum` monoid.\n"
description-type: markdown
hash: 0ebb9d2b7f9a7345fc4578969109d28230f6088f12ccce852fa2afde22520bad
homepage: https://github.com/ParsaAlizadeh/fenwick-tree
latest: 0.1.0.0
license-name: MIT
maintainer: parsa.alizadeh1@gmail.com
synopsis: Mutable Fenwick trees
test-bench-deps:
  array: '>=0'
  base: '>=0'
  hspec: '>=0'
  mutable-fenwick: '>=0'
  vector: '>=0'
