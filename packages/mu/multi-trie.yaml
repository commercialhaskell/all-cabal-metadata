all-versions:
- '0.1'
author: Vadim Vinnik <vadim.vinnik@gmail.com>
basic-deps:
  base: '>=4 && <5'
  composition: '>=1.0.2.1'
  containers: '>=0'
changelog: ''
changelog-type: ''
description: |-
  A multi-trie is a trie (i.e. a tree whose child nodes have distinct labels)
  with each node containing a list of values.
  This data structure represents a structured many-valued naming: names are
  compound and form a monoid under concatenation; each name can have multiple
  values.
  Some operations could be defined for multi-tries in a rather natural way,
  including 'map', 'union', 'intersection', 'cartesian' product.
  Moreover, a multi-trie can contain not only ordinary values but also
  functions that makes it possible to apply a multi-trie of functions to a
  multi-trie of argument values. This makes 'MultiTrie' an instance of
  'Functor', 'Applicative' and 'Monad'.
description-type: haddock
hash: 8a54515258bc2f897b767f9520bdf576270fda65373f6f1b6d3dfd5a5f6a0a29
homepage: https://github.com/vadimvinnik/multi-trie
latest: '0.1'
license-name: MIT
maintainer: Vadim Vinnik <vadim.vinnik@gmail.com>
synopsis: Trie of sets, as a model for compound names having multiple values
test-bench-deps:
  HTF: '>0.9'
  base: '>=4'
  containers: '>=0'
  multi-trie: '>=0'
