all-versions:
- 0.2.0
- 0.2.1
- 0.2.2.1
- 0.2.3.0
- 0.3.0.0
- 0.3.1.0
- 0.3.2.0
- 0.4.0.0
- 0.5.0.0
author: Artur M. Brodzki
basic-deps:
  base: '>=4.7 && <5'
  containers: '>=0'
  deepseq: '>=0'
  parallel: '>=0'
  vector: '>=0'
changelog: "# 0.5.0.0, 2018-11-25\r\n- reformulation of Multilinear class - added
  Generic and NFData superclasses. This allows any Multilinear tensor to be derived
  generically in e.g. serialization instances and also fully evaluated for performace
  reasons\r\n- added simple Sequential <=> MultiCore converters in Multilinear.Generic
  module\r\n\r\n# 0.4.0.0, 2018-11-24\r\n- added multi-core parallelism, sample benchmark
  is available in ./benchmark/results.zip\r\n- more robust QuickCheck tests\r\n- some
  API changes; simplified Multilinear class\r\n\r\n# 0.3.2.0, 2018-11-18\r\n- added
  filter and zipWith functions\r\n\r\n# 0.3.1.0, 2018-11-17\r\n- added more complex
  QuickCheck tests\r\n- and therefore, some error fixes\r\n\r\n# 0.3.0.0, 2018-11-14\r\n-
  moved to Vector.Unboxed, to improve performance\r\n- simplified error handling -
  removed separate Err Tensor value\r\n- temporarily removed Infinite tensors constructors
  and Generic\r\n- added memory benchmark\r\n- added simple unit tests\r\n\r\n# 0.2.3,
  2018-11-02\r\n- fixed conflicting dependencies\r\n- added criterion benchmarks\r\n\r\n#
  0.2.2, 2018-11-01\r\n## Dependencies update\r\n- ported to LTS-12.16 resolver\r\n\r\n#
  0.2.1, 2018-10-31\r\nInitial release\r\n"
changelog-type: markdown
description: "# Multilinear [![Hackage](https://img.shields.io/hackage/v/multilinear.svg)](https://hackage.haskell.org/package/multilinear)
  [![Build Status](https://travis-ci.org/ArturB/multilinear.svg?branch=master)](https://travis-ci.org/ArturB/multilinear)
  ![BuildStatus](https://ci.appveyor.com/api/projects/status/github/ArturB/multilinear)\r\n\r\n\r\n##
  Summary\r\nMultilinear is general - purpose linear algebra and multi-dimensional
  array library for Haskell. It provides generic and efficient implementation of linear
  algebra operations on vectors, linear functionals, matrices and its higher - rank
  analoges: tensors. It can also be used as simply a miltidimensional arrays for everyone.
  \r\n\r\n### AS FOR NOW, THE LIBRARY IS IN BETA PHASE  - DO NOT USE IT FOR PRODUCTION!!\r\n\r\n##
  Scripting\r\n\r\nMultilinear is optimized to being used from GHCi. It uses easy
  and concise notation of Einstein summation convention to calculate complex tasks.
  Using this, you are able to write for example a deep learnin neural network from
  scratch in just a few lines of interpreter code. If you want to know more about
  Einstein convention, see the Wikipedia: https://en.wikipedia.org/wiki/Einstein_notation\r\n\r\n##
  Machine learning\r\n\r\nMulti-dimensional algebra is especially useful to quickly
  write machine learning algorithms (eg. neural networks) from scratch. When library
  will be stable, some examples will be available. \r\n\r\n## Contribution\r\n\r\nIf
  you want to contribute to this library, contact with me. \r\n\r\n## Who do I talk
  to?\r\n\r\nAll copyrights to Artur M. Brodzki.\r\nContact mail: artur@brodzki.org\r\n"
description-type: markdown
hash: 2b2f5637fb2a1bc57d469cb4179d94bf63cf074c20c6d94f9a686a43bf740136
homepage: https://github.com/ArturB/multilinear#readme
latest: 0.5.0.0
license-name: BSD-3-Clause
maintainer: artur@brodzki.org
synopsis: Comprehensive and efficient (multi)linear algebra implementation.
test-bench-deps:
  QuickCheck: '>=0'
  base: '>=4.7 && <5'
  containers: '>=0'
  criterion: '>=0'
  deepseq: '>=0'
  generic-random: '>=0'
  multilinear: '>=0'
  quickcheck-instances: '>=0'
  weigh: '>=0'
