all-versions:
- 0.0.0.2
- 0.0.1.1
- 0.0.2.0
- 0.0.2.1
- 0.0.3
- 0.0.3.2
- 0.1.0.0
- 0.1.3
- 0.1.4
- '0.2'
- 0.2.1.0
- 0.2.1.1
- 0.2.2.0
- 0.2.3.0
- 0.2.3.1
- 0.2.4.0
- 0.2.5.0
- 0.2.6.0
- 0.2.6.1
- 0.2.6.2
- 0.2.7.0
- 0.2.7.3
- 0.2.7.4
- 0.2.7.7
- 0.3.0.0
- 0.3.0.1
author: James Cook <mokus@deepbondi.net>
basic-deps:
  base: '>=4.9 && <5'
  erf: '>=0'
  math-functions: '>=0'
  monad-loops: '>=0.3.0.1'
  mtl: '>=2 && <3'
  random: '>=1.2 && <1.3'
  random-shuffle: '>=0'
  rvar: '>=0.3'
  syb: '>=0'
  template-haskell: '>=0'
  transformers: '>=0'
  vector: '>=0.7'
changelog: |
  * Chnages in 0.3.0.0:

    * Drop usage of `random-source` in favor of `random`

  * Changes in 0.2.7.7: Update to random-1.2. Revert 0.2.7.6 changes (which added an extra constraint to `Data.Random.Sample.sampleState` and `Data.Random.Sample.sampleStateT`).

  * Changes in 0.2.7.4: Compatibility with ghc 8.8.

  * Changes in 0.2.7.3: Remove dependence on log-domain. Raise lower bound for base to 4.9.

  * Changes in 0.2.7.1: Add PDF instance for Poisson.

  * Changes in 0.2.7.0: Add Simplex, fix logBetaPdf, fix binomialPdf and
    binomialCdf to actually use the numerically stable method!

  * Changes in 2.6.1: now supports probability density functions and log
    probability density functions via the PDF class, similar to R and
    initially just for the Beta, Binomial, Normal and Uniform
    distributions. The log Binomial probability density function uses
    *Fast and Accurate Computation of Binomial Probabilities* by
    Catherine Loader (this is what is implemented in R and Octave) to
    minimize the occurrence of underflow.

  * Changes in 0.2.4.0: Added a Lift instance that resolves a common
    overlapping-instance issue in user code.

  * Changes in 0.2.3.1: Should now build on GHC 7.6

  * Changes in 0.2.3.0: Added stretched exponential distribution,
    contributed by Ben Gamari.

  * Changes in 0.2.2.0: Bug fixes in
    Data.Random.Distribution.Categorical.

  * Changes in 0.2.1.1: Changed some one-field data types to newtypes,
    updated types for GHC 7.4's removal of Eq and Show from the context
    of Num, and added RVarT versions of random variables in
    Data.Random.List
changelog-type: markdown
description: |-
  Random number generation based on modeling random
  variables in two complementary ways: first, by the
  parameters of standard mathematical distributions and,
  second, by an abstract type ('RVar') which can be
  composed and manipulated monadically and sampled in
  either monadic or \"pure\" styles.

  The primary purpose of this library is to support
  defining and sampling a wide variety of high quality
  random variables.  Quality is prioritized over speed,
  but performance is an important goal too.

  In my testing, I have found it capable of speed
  comparable to other Haskell libraries, but still
  a fair bit slower than straight C implementations of
  the same algorithms.
description-type: haddock
hash: 4fc8f22150fd700afdc016122c5acb8dc004633dc00c1d3826ed07d0913c5182
homepage: https://github.com/mokus0/random-fu
latest: 0.3.0.1
license-name: LicenseRef-PublicDomain
maintainer: Dominic Steinitz <dominic@steinitz.org>
synopsis: Random number generation
test-bench-deps: {}
