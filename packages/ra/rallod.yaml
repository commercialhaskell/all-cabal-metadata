all-versions:
- 0.0.1
author: Parker, Matt
basic-deps:
  base: '>=4.0 && <5'
  haskell98: '>=0'
changelog: ''
changelog-type: ''
description: "# Bird\n\nA sinatra-ish web framework written in haskell, riding on
  top of Hack. \n\n## Why?\n\nSinatra has a beautiful, simple, elegant syntax, but
  it's essentially an attempt to bring pattern matching to a language never intended
  for \npattern matching. Why not attempt something similar in a language with not
  just beautiful pattern matching, but with all the declarative \nbells and whistles:
  lazy evaluation, first-class functions, currying, polymorphism?\n\n## Install\n\n
  \   λ cabal update && cabal install bird\n\nNote: make sure $HOME/.cabal/bin is
  in your PATH.\n\n## Create an app\n\n    λ bird MyApp \n\n## Compile your app\n\n
  \   λ cd MyApp\n    λ bird nest \n\n## Start your app (runs on port 3000)\n\n    λ
  bird fly\n\n## Try it out\n    \n    λ curl http://localhost:3000\n      404 Not
  Found\n\n## Improvise!\n    \n    -- MyApp.hs\n    module MyApp where\n    import
  Bird\n    import Data.String.Utils\n\n    get, post, put, delete :: Request -> IO
  Reply\n    get Request { path = (\"howdy\":xs) } \n      = ok $ \"Howdy \" ++ (join
  \", \" xs) ++ \"!\"\n\n    get _ = return notFound_\n    post _ = return notFound_\n
  \   put _ = return notFound_\n    delete _ = return notFound_\n\nnow:\n\n    λ curl
  http://localhost:3000/howdy/there/pardna\n        Howdy there, pardna!\n\n## Notes\n\nThis
  project is *still* in its infancy. Coming features:\n\n* logging\n* support for
  sending files\n"
description-type: markdown
hash: bd9c8b3e8662f68c9eb19ed1600a0f2fe4438c63aed0445324967a76c46ca80b
homepage: http://github.com/moonmaster9000/rallod
latest: 0.0.1
license-name: BSD-3-Clause
maintainer: Parker, Matt <moonmaster9000@gmail.com>
synopsis: '''$'' in reverse. '
test-bench-deps: {}
