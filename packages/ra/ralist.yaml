homepage: http://github.com/cartazio/ralist
changelog-type: markdown
hash: b62050f8bdba251b31be72721130cf993cac333313bc812928f593dbd1052482
test-bench-deps:
  base: -any
  hspec: '>=2.2 && <2.8'
  criterion: -any
  deepseq: -any
  ralist: -any
maintainer: Carter Schonwald
synopsis: Random access list with a list compatible interface.
changelog: |
  # 0.4.0.0

  * flipped the argument order for `Co.lookup` to be consistent between
  both flavors of RAList apis

  # 0.3.0.0
  * changed type from
    `lookupM :: forall (m :: * -> *) a. Monad m => Word64 -> Top a -> m a` to `lookupM :: forall a. Word64 -> Top a -> Either String a`
  * added `Data.RAList.Flip`, which flips the counting by having the zeroth index be the last element of the skew binary list,
  rather than the head element.

  # 0.2.1.1
  Fix bug in log n time drop

  # 0.2.1.0
  Added missing traversable instance

  # 0.2.0.0
  updated version of ralist
  includes bug fixes, api cleanup,
  test suite and logarithmic drop contributed by Nell White
basic-deps:
  base: '>=4.12 && <6'
  indexed-traversable: ^>=0.1
  transformers: '>=0.5 && <0.7'
  deepseq: ^>=1.4.4.0
all-versions:
- 0.1.0.0
- 0.2.1.1
- 0.3.0.0
- 0.4.0.0
author: Lennart Augustsson, Carter Schonwald
latest: 0.4.0.0
description-type: haddock
description: |-
  Random access list with a list compatible interface.
  Random access list have same complexity as lists with some exceptions,
  the notable one being that (!!) is O(log n) instead of O(n).
  RALists have to be finite.
license-name: BSD-3-Clause
