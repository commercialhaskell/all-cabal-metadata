all-versions:
- 0.1.0.0
author: Li-yao Xia
basic-deps:
  MonadRandom: '>=0'
  base: '>=4.8 && <5'
  deepseq: '>=0'
changelog: ''
changelog-type: ''
description: |
  Random Access Zippers
  =====================

  *This is untested WIP open to issues and PRs.*

  A data structure to represent sequences with fast random access.

  `Data.Raz.Sequence` is intended to provide the same interface as
  `Data.Sequence` from [`containers`](http://hackage.haskell.org/package/containers).

  `Data.Raz.Core` is the actual zipper module.
  It is a simple translation of the [OCaml implementation](https://github.com/cuplv/raz.ocaml)
  the original paper appeared with.

  - [The Random Access Zipper: Simple, Purely-Functional Sequences](https://arxiv.org/abs/1608.06009)
description-type: markdown
hash: 39dcf870f7ea2c68dc0a960b3c480690d4ba50a44d62cdfac5e76f0654cfabcb
homepage: https://github.com/Lysxia/raz.haskell
latest: 0.1.0.0
license-name: MIT
maintainer: lysxia@gmail.com
synopsis: Random Access Zippers
test-bench-deps:
  MonadRandom: '>=0'
  base: '>=0'
  containers: '>=0'
  criterion: '>=0'
  deepseq: '>=0'
  random: '>=0'
  raz: '>=0'
  transformers: '>=0'
