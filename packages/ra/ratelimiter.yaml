all-versions:
- 0.1.0
author: Alexander Thiemann <mail@thiemann.at>
basic-deps:
  base: '>=4.7 && <5'
  containers: '>=0'
  extra: '>=0'
  mtl: '>=0'
  time: '>=0'
  timespan: '>=0'
  vector: '>=0'
changelog: ''
changelog-type: ''
description: "# Haskell: ratelimiter\n\nA simple in-memory rate-limiter library.\n\n##
  Usage\n\n``` haskell\nimport Control.RateLimiter\nimport qualified Data.Vector as
  V\n\nmain :: IO\nmain =\n  -- one rate limiter can have multiple rules\n  do limiter
  <- \n        newRateLimiter $ V.fromList\n        [ RateLimitConfig (RollingWindow
  60) 200 -- 200 per minute\n        , RateLimitConfig (RollingWindow 3600) 400 --
  400 per hour\n        ]\n     let myRateLimitedFunction =\n           do isLimited
  <- isRateLimited () limiter\n              if isLimitd then pure Nothing else Just
  <$> someExpensiveWork\n     -- ... use myRateLimitedFunction\n```\n\n"
description-type: markdown
hash: 4a17a5946347e0ebae826ce7de47c3047edc69377049884542986b6d84105cb8
homepage: https://github.com/agrafix/ratelimiter#readme
latest: 0.1.0
license-name: BSD-3-Clause
maintainer: Alexander Thiemann <mail@thiemann.at>
synopsis: In-memory rate limiter
test-bench-deps:
  base: '>=4.7 && <5'
  containers: '>=0'
  extra: '>=0'
  mtl: '>=0'
  ratelimiter: '>=0'
  time: '>=0'
  timespan: '>=0'
  vector: '>=0'
