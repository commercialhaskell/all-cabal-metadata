all-versions:
- 1.1.3
- 1.2.0
author: Imants Cekusins
basic-deps:
  aeson: '>=0'
  async: '>=0'
  base: '>=4.8 && <5.0'
  binary: '>=0'
  bytestring: '>=0'
  conf-json: '>=0'
  containers: '>=0'
  distributed-process: '>=0'
  distributed-process-simplelocalnet: '>=0'
  network: '>=0'
  network-transport: '>=0'
  network-transport-tcp: '>=0'
  random: '>=0'
  stm: '>=0'
  template-haskell: '>=0'
changelog: "#####  1.2.0\n    remove dependency on tagged package\n\n    error message
  in case of incorrect args\n\n    add legacy_libc flag\n\n    + .gitignore\n\n#####
  \ 1.1.3\n    fix broken build. Reason: missing -main-is ghc-option\n\n#####  1.1.2\n
  \   fix broken build. Reason: API change in dependency network-transport-tcp\n    split
  Main to 2 funs  \n\n#####  1.1.1\n    change common state from TVar s to s\n    \n
  \   pass init common state  \n\n#####  1.1\n    add custom state to Server\n    \n
  \   peer state type is a configurable param\n    \n    note : package build may
  fail \n\n    due to version clash between aeson, vector, primitive packages\n    \n
  \   https://github.com/ciez/vector is a patched version of vector-0.11.0.0\n    \n
  \   I do not claim to have any knowledge about vector package workings. \n\n    Did
  basic refactoring: moved some code to a different module and followed some GHC suggestions.
  It builds and it works with raketka.  \n    \n\n#####  1.0\n    start multiple nodes\n
  \   \n    on start nodes ping suggested (in config) nodes - which pong back - and
  establish monitored connections\n"
changelog-type: markdown
description: "### raketka\n    * basic distributed-process node\n    * configurable
  peers\n\n    Begin reading at Control.Distributed.Raketka.Type.Arg\n\n    see also:
  \n    \n        *   [parconc-examples](https://hackage.haskell.org/package/parconc-examples)\n
  \       *   [haskell-distributed tutorials](http://haskell-distributed.github.io/tutorials/1ch.html)
  \ \n    \n    This library: \n    \n        functionality: \n            * start
  nodes \n            * connect them with each other\n            * exchanges pings
  with other nodes which are expected to pong back\n            * received pings &
  pongs are output to stdout\n            * when 1 node is disconnected or stops,
  the other nodes stdout notifications about this\n    \n        may be extended \n
  \       however you are most likely to write your own code that does much more.
  \n    \n        is simple on purpose, does only a few things which seem to be common
  in distributed arch \n    \n    To start the program that comes with this library:\n
  \   \n        start the same program in multiple consoles: 1 per node\n     \n        2
  args are expected:\n    \n            1. path to config.json (see test-conf.json)\n
  \           2. idx of this node in the cluster: 0 .. (length Cluster -1)    \n"
description-type: markdown
hash: 97cc4c5049fd973c3418be063e75fba5f4889116a9616d9b48ad301c858bab00
homepage: https://github.com/ciez/raketka
latest: 1.2.0
license-name: LicenseRef-PublicDomain
maintainer: Imants Cekusins
synopsis: distributed-process node
test-bench-deps:
  QuickCheck: '>=2.8.1'
  base: '>=4.8 && <5.0'
  hspec: '>=2.1.7'
