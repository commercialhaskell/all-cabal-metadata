all-versions:
- 0.1.0.0
- 0.1.1.0
author: IOG Engineering Team
basic-deps:
  base: '>=4.14 && <4.21'
  io-classes: ^>=1.5
  nothunks: ^>=0.2
  strict-mvar: ^>=1.5
  strict-stm: ^>=1.5
changelog: |
  # rawlock Changelog

  # Changelog entries

  ## 0.1.1.0 -- 2024-11-22

  * Added `Generic` and `NoThunks` instance for `RAWState`.

  ## 0.1.0.0 -- 2024-10-22

  * First version. Released on an unsuspecting world.
changelog-type: markdown
description: |
  # RAWLock

  A writer-biased RAW lock.

  It allows for multiple readers to run concurrently with at most one appender, or
  a single writer running on isolation.

  The code is safe in the presence of async exceptions, meaning that each actor
  will cleanup after itself if an exception is received.

  ## Contributing

  Contributions are welcome! Feel free to open issues or submit pull requests.

  Before contributing, please ensure that:

  - Code is well-documented
  - Tests are written for new features or bug fixes

  ## License

  This project is licensed under the terms of the [Apache 2.0](./LICENSE) license.
description-type: markdown
hash: 30fea5a44ed6226c646638ff5a44c1877a282742d39023ea03c5f00fb97387bf
homepage: ''
latest: 0.1.1.0
license-name: Apache-2.0
maintainer: operations@iohk.io
synopsis: A writer-biased RAW lock.
test-bench-deps:
  QuickCheck: '>=0'
  base: '>=0'
  io-classes: '>=0'
  io-sim: '>=0'
  mtl: '>=0'
  rawlock: '>=0'
  strict-stm: '>=0'
  tasty: '>=0'
  tasty-quickcheck: '>=0'
