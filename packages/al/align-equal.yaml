all-versions:
- 0.1.0.0
- 0.1.0.1
- 0.1.1.0
- 0.1.1.1
author: Joonkyu Park (based on original work by Gabriella Gonzalez)
basic-deps:
  align-equal: '>=0'
  base: '>=4.17 && <4.19'
  safe: '>=0.3.21 && <0.4'
  text: '>=2.0.2 && <2.1'
changelog: "# Changelog\nAll notable changes to the `align-equal` project will be
  documented in this file.\n\n## [0.1.1.1] - 2025-03-31\n### Added  \n- Expanded `README.md`
  with a detailed description of the tool.  \n- Included Vim usage instructions with
  examples.  \n\n### Miscellaneous  \n- Bumped version to `0.1.1.1` in `align-equal.cabal`.
  \ \n\n## [0.1.1.0] - 2025-03-27\n- **Added**: Extracted core functions into a separate
  library module (`Data.Text.AlignEqual`).\n  - Refactored original `Main.hs` into
  executable and library components.\n  - Added `src/Data/Text/AlignEqual.hs` with
  core text alignment logic.\n  - Updated `app/Main.hs` to import and use `Data.Text.AlignEqual`.\n
  \ - Adjusted `.cabal` file to include a new library section and dependencies.\n-
  **Added**: Haddock documentation for `Data.Text.AlignEqual`.\n  - Documented module
  purpose, `prefixLength`, `adjustLine`, and `adjustText` with descriptions, examples,
  and parameter annotations.\n- **Added**: Included `CHANGELOG.md` in the package
  documentation via `extra-doc-files` in `.cabal`.\n- **Maintained**: Compatibility
  with the existing executable.\n\n## [0.1.0.1] - 2025-03-10\n- **Fixed**: Relaxed
  `base` dependency constraint to `>=4.17 && <4.19`.\n- **Fixed**: Removed duplicate
  `extra-doc-files` entry in `.cabal` file.\n- **Added**: `README.md` with credit
  to Gabriella Gonzalez.\n- **Added**: Source repository link to `hub.darcs.net` in
  `.cabal` file.\n\n## [0.1.0.0] - 2025-03-10\n- **Initial Release**: Basic functionality
  for aligning text with equal signs.\n  - Implemented as a standalone executable
  in `Main.hs`.\n  - Initial project setup with `.cabal` and `LICENSE` files.\n"
changelog-type: markdown
description: "# align-equal\n\nThis project is based on an idea from Gabriella Gonzalez.
  \ \nFor more details, visit: [Gabriella's blog](https://www.haskellforall.com/2018/10/detailed-walkthrough-for-beginner.html)\n\n`align-equal`
  is a command-line tool that aligns text based on the `=` symbol.  \nIt ensures that
  all `=` signs are vertically aligned, improving readability.\n\nThis program reads
  text from **standard input**, processes it, and outputs the aligned result to **standard
  output**.\n\n## Installation\n\nTo install `align-equal` using `cabal`, run:\n\n```sh\ncabal
  install align-equal\n```\n\n## Usage\n\n### **Using in Vim**\n\n`align-equal` is
  primarily designed for use within Vim. You can align selected text in **visual mode**
  as follows:\n\n1. Select the lines you want to align in **visual mode** (`V` for
  line-wise selection).\n2. Run:  \n   ```vim\n   :!align-equal\n   ```\n3. The selected
  text will be replaced with an aligned version.\n\n#### **Example**\n\n**Before (Selected
  Text in Visual Mode)**:\n```vim\nx = 1\nlongVariable = 2\nshort = 3\n```\n\n**Command**:\n```vim\n:!align-equal\n```\n\n**After**:\n```vim\nx
  \           = 1\nlongVariable = 2\nshort        = 3\n```\n\n## How it Works\n\n`align-equal`
  scans the input, detects `=` symbols, and aligns them by adding the appropriate
  amount of whitespace.\n"
description-type: markdown
hash: f96baf9ce6a7830f6a08713608c39ecac55fc37b7ec80aa3f0d154f45b5228b7
homepage: ''
latest: 0.1.1.1
license-name: MIT
maintainer: vpark45@gmail.com
synopsis: Aligns text prefixes before '=' for consistent formatting
test-bench-deps: {}
