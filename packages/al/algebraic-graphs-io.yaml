homepage: https://github.com/ocramz/algebraic-graphs-io
changelog-type: markdown
hash: 71561ab0a6f5e3ed6a1f4cbdbdf6bd208b49c97d2ab1ace4de6b68bc466c4d6b
test-bench-deps:
  serialise: -any
  base: -any
  hspec: -any
  algebraic-graphs-io: -any
  algebraic-graphs: -any
  aeson: -any
maintainer: ocramz
synopsis: I/O utilities and datasets for algebraic-graphs
changelog: "* 0.5\n\n  - no 'Dot' and 'matrix-market' support for now: \n    Dot/graphviz
  export is already supported within algebraic-graphs and matrix-market can be made
  available on a need basis\n    \n  - add JSON codec\n  \n  - add 'serialise'-based
  binary codec\n\n* 0.4\n\n  LINQS datasets : \n  \n  - Add integer identifier to
  node metadata\n\n* 0.3\n\n  Add Cora dataset\n\n* 0.2\n\n  Citeseer dataset : \n
  \ \n  - add Ord instances\n  - user can now specify data storage directory\n  -
  add streaming interface\n\n* 0.1.5\n\n  Add Citeseer dataset\n\n* 0.1.4\n\n  Add
  .tsv format and networking/decompression utilities\n  \n  Add blockmodel50 small
  dataset\n\n  Provide example datasets as `IO (Graph .. )`\n  \n\n* 0.1.2\n\n  Add
  \"Les Miserables\" and \"Karate Club\" datasets\n\n\n* 0.1.0.0 (20/12/2012)\n\n
  \ Release candidate\n\n"
basic-deps:
  exceptions: -any
  serialise: -any
  bytestring: -any
  base: '>=4.7 && <5'
  parser-combinators: -any
  text: -any
  megaparsec: -any
  filepath: -any
  conduit: -any
  conduit-extra: -any
  containers: -any
  tar-conduit: -any
  binary-conduit: -any
  binary: -any
  mtl: -any
  csv-conduit: -any
  attoparsec: -any
  transformers: -any
  http-conduit: -any
  algebraic-graphs: -any
  aeson: -any
  primitive: -any
  vector: -any
  directory: -any
all-versions:
- '0.5'
- 0.5.0.1
author: Marco Zocca
latest: 0.5.0.1
description-type: markdown
description: |
  # algebraic-graphs-io

  This package collects I/O utilities for `algebraic-graphs` : parsers and serializers for common graph data interchange formats, as well as functionality for downloading and caching larger datasets.

  ## Formats

  Currently the following formats are supported :

  * GML : used by a few common graph software packages (NetworkX, Gephi, graphviz, and others)

  * .tsv : tab-separated list of edge data, used e.g. for the Graph Challenge dataset [1]

  * JSON : via 'aeson'

  * CBOR : via 'serialise'


  ## Datasets

  The package contains some small example datasets (e.g. "lesmiserables" and "karateclub"); these are provided ready for consumption in `Algebra.Graph.IO.Datasets`.

  There are also bindings to larger datasets, such as the ones provided by the LINQS group [2] (e.g. "citeseer" and "cora").


  ## Contributing

  PRs and contributions welcome!


  ## References

  [1] GraphChallenge https://graphchallenge.mit.edu/data-sets

  [2] LINQS https://linqs.soe.ucsc.edu/data
license-name: BSD-3-Clause
