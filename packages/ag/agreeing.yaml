all-versions:
- 0.1.0.0
- 0.2.0.0
- 0.2.1.0
- 0.2.2.0
author: James Cranch
basic-deps:
  base: '>=4.7 && <5'
changelog: |
  # Changelog for `agreeing`

  All notable changes to this project will be documented in this file.

  The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),
  and this project adheres to the
  [Haskell Package Versioning Policy](https://pvp.haskell.org/).

  ## 0.2.1.0 - 2023-10-30

  * ADDED: `Eq`, `Ord`, `Show`, `Applicative` and `Monad` instances

  ## 0.1.0.0 - 2023-03-15

  Initial version
changelog-type: markdown
description: |
  # agreeing

  A simple data structure helping us ask questions of the following
  sort: "does all this data have the same /BLANK/ and if so what is it?"

  For example:

          doTheseHaveTheSameLength :: [String] -> String
          doTheseHaveTheSameLength l = case foldMap (Somebody . length) of
            Somebody n -> "They all have length " <> show n
            Nobody     -> "The lengths differ"
            Anybody    -> "You didn't give me any strings"

  This can of course be done with `Maybe (Maybe x)` instead, but doing
  so runs the risk of getting confused: which is `Nothing` and which is
  `Just Nothing`?
description-type: markdown
hash: 8fe403e736aea00a4e54bc158b960506be5a6308a20e65130754e428d220aeea
homepage: https://github.com/jcranch/agreement#readme
latest: 0.2.2.0
license-name: BSD-3-Clause
maintainer: j.d.cranch@sheffield.ac.uk
synopsis: Idiomatic data structure for agreement
test-bench-deps:
  agreeing: '>=0'
  base: '>=4.7 && <5'
  hspec: '>=2.7 && <2.12'
