all-versions:
- 1.0.0
- 1.0.1
- 1.1.0
- 1.1.1
- 1.1.2
- 1.2.0
- 1.2.1
- 1.3.0
- 1.3.1
- 1.4.0
- 1.4.1
- 1.4.2
- 1.5.0
- 1.5.1
- 1.6.0
- 1.6.1
- 1.6.2
- 1.6.3
- 1.6.4
- 1.6.5
- 1.6.6
- 1.6.7
- 1.6.8
- 1.6.9
- 1.6.10
- 1.6.11
- 1.6.12
- 1.6.13
- 1.6.14
- 1.6.15
- 1.6.16
- 1.6.17
- 1.6.18
- 1.6.19
- 1.6.20
- 1.7.0
- 1.7.1
- 1.7.2
author: Gabriella Gonzalez
basic-deps:
  Earley: '>=0.10.1.0 && <0.14'
  array: '>=0.4.0.0 && <0.6'
  base: '>=4 && <5'
  binary: '>=0.7.0.0 && <0.9'
  code-page: '>=0.1.1 && <0.3'
  containers: '>=0.5.0.0 && <0.7'
  deepseq: '>=1.3.0 && <1.5'
  formatting: '>=6.3 && <6.4'
  http-client: '>=0.5.0 && <0.7'
  http-client-tls: '>=0.2.0 && <0.4'
  microlens: '>=0.2.0.0 && <0.5'
  microlens-mtl: '>=0.1.3.1 && <0.2'
  morte: '>=0'
  optparse-applicative: <0.15
  pipes: '>=4.0.0 && <4.4'
  system-fileio: '>=0.2.1 && <0.4'
  system-filepath: '>=0.3.1 && <0.5'
  text: '>=0.11.1.0 && <1.3'
  transformers: '>=0.2.0.0 && <0.6'
changelog: ''
changelog-type: ''
description: |-
  Morte is a typed, purely functional, and strongly normalizing
  intermediate language designed for whole-program super-optimization.  Use
  this library to type-check, optimize, parse, pretty-print, serialize and
  deserialize expressions in this intermediate language.

  This library also installs an executable that you can use to type-check and
  optimize a @morte@ program.

  "Morte.Core" contains the core calculus of constructions for this language

  "Morte.Lexer" contains the @alex@-generated lexer for Morte

  "Morte.Parser" contains the parser for Morte

  Read "Morte.Tutorial" to learn how to use this library
description-type: haddock
hash: 2db5da61ee8a2422f40de339eeb4bfe59aa6868a9ede177507790c20f46562d6
homepage: ''
latest: 1.7.2
license-name: BSD-3-Clause
maintainer: GenuineGabriella@gmail.com
synopsis: A bare-bones calculus of constructions
test-bench-deps:
  QuickCheck: '>=2.8.1 && <2.14'
  base: '>=4 && <5'
  criterion: '>=1.0.0.1 && <1.6'
  morte: '>=0'
  mtl: '>=2.2 && <2.3'
  system-filepath: '>=0.3.1 && <0.5'
  tasty: '>=0.11 && <1.3'
  tasty-hunit: '>=0.9 && <0.11'
  tasty-quickcheck: '>=0.8.4 && <0.11'
  text: '>=0.11.1.0 && <1.3'
  transformers: '>=0.2.0.0 && <0.6'
