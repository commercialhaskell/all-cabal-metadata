homepage: https://gitlab.com/morley-framework/morley
changelog-type: markdown
hash: fd4b6023a40d1e0e5747f60925d24dca12761fabe70a3083ef4e0a310afd092c
test-bench-deps:
  exceptions: -any
  fmt: -any
  bytestring: -any
  morley-prelude: -any
  time: -any
  co-log: -any
  morley: -any
  safe-exceptions: -any
  co-log-core: -any
  servant-client-core: -any
  base-noprelude: '>=4.7 && <5'
  HUnit: -any
  memory: -any
  containers: -any
  singletons: -any
  morley-client: -any
  lorentz: -any
  lens: -any
  hex-text: -any
  tasty: -any
  http-types: -any
  aeson: -any
  tasty-hunit-compat: -any
  hspec-expectations: -any
  tasty-ant-xml: -any
maintainer: Serokell <hi@serokell.io>
synopsis: Client to interact with the Tezos blockchain
changelog: |
  <!-- Unreleased: append new entries here -->


  0.1.1
  =====
  * [!1094](https://gitlab.com/morley-framework/morley/-/merge_requests/1094)
    Deprecate morley language extensions
    + Morley language extensions now require `--deprecated-morley-extensions` flag to parse.
  * [!1077](https://gitlab.com/morley-framework/morley/-/merge_requests/1077)
    Ithaca changes: Use `head~2` block in the `branch` field of RPC operations.
  * [!1034](https://gitlab.com/morley-framework/morley/-/merge_requests/1034)
    Add key revealing that uses only RPC.
  * [!965](https://gitlab.com/morley-framework/morley/-/merge_requests/965)
    Use Morley's fixed-size lists
    + Use `SizedList` for `feeOutputParser`
  * [!1072](https://gitlab.com/morley-framework/morley/-/merge_requests/1072)
    Add `runCode` to Cleveland
    + `runContract` now supports parameter/storage values in their RPC
      representation (i.e. with bigmap IDs).
  * [!1070](https://gitlab.com/morley-framework/morley/-/merge_requests/1070)
    Simplify cleveland's internals & public api
    + Removed `runContractSimple`, added `runContractParameters` and lenses.
  * [!1060](https://gitlab.com/morley-framework/morley/-/merge_requests/1060)
    Move `AsRPC` type family to `morley`
  * [!978](https://gitlab.com/morley-framework/morley/-/merge_requests/978)
    Make it difficult to misuse 'Show'
    + Use `Buildable` and `pretty` preferrentially.
    + Add `Buildable` instances to that effect for `FeeParserException`, `SecretKeyEncryptionParserException`.
    + Use `displayException` instead of `show` where appropriate.

  0.1.0
  =====
  Initial release.
  A client to interact with the Tezos blockchain, by use of the `tezos-node` RPC
  and/or of the `tezos-client` binary.
basic-deps:
  http-client: -any
  fmt: -any
  bytestring: -any
  aeson-casing: -any
  unliftio: -any
  morley-prelude: -any
  time: -any
  servant-client: -any
  co-log: -any
  text: -any
  morley: -any
  universum: -any
  safe-exceptions: -any
  megaparsec: -any
  syb: -any
  co-log-core: -any
  servant-client-core: -any
  process: -any
  constraints: -any
  base-noprelude: '>=4.7 && <5'
  data-default: -any
  servant: -any
  memory: -any
  containers: -any
  singletons: -any
  morley-client: -any
  lorentz: -any
  lens: -any
  binary: -any
  colourista: -any
  http-client-tls: -any
  mtl: -any
  hex-text: -any
  optparse-applicative: -any
  random: -any
  named: -any
  scientific: -any
  http-types: -any
  aeson: -any
all-versions:
- 0.1.0
- 0.1.1
author: Serokell, Tocqueville Group
latest: 0.1.1
description-type: markdown
description: |
  # Morley-client

  This package implements a client to interact with the Tezos blockchain.
  It is intended to be used both as a library and as a tool.

  `morley-client` uses the [Tezos RPC API](https://tezos.gitlab.io/developer/rpc.html)
  to interact with a remote (or local) `tezos-node` and uses the `tezos-client`
  binary for some operations, such as signing and local contract manipulations.

  IMPORTANT: `morley-client` is still actively developed and unstable.
  Its interface(s) may change abruptly and it shouldn't be used for anything but testing.

  ## Command line interface

  At the moment, the `morley-client` CLI can be used to perform a handful of operations.

  You can use:
  ```sh
  morley-client --help
  ```
  to get a list of available commands and info about common options.

  You can also use:
  ```sh
  morley-client COMMAND --help
  ```
  to get more information about each of the available `COMMAND` and its options.
license-name: MIT
