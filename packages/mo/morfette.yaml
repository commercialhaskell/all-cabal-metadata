all-versions:
- '0.2'
- '0.3'
- 0.3.1
- 0.3.2
- 0.3.4
- 0.3.5
- 0.3.6
- 0.4.2
- 0.4.3
- 0.4.4
- 0.4.5
- 0.4.6
- 0.4.7
author: Grzegorz Chrupała
basic-deps:
  QuickCheck: '>=2.3'
  array: '>=0'
  base: '>=3 && <=5'
  binary: '>=0'
  bytestring: '>=0'
  containers: '>=0'
  directory: '>=0'
  filepath: '>=0'
  mtl: '>=0'
  pretty: '>=0'
  text: '>=0.11'
  utf8-string: ==0.3
  vector: '>=0.10'
changelog: ''
changelog-type: ''
description: "INTRODUCTION\n============\n\nMorfette website: https://code.google.com/p/morfette/\n\nMorfette
  is a tool for supervised learning of inflectional\nmorphology. Given a corpus of
  sentences annotated with lemmas \nand morphological labels, and optionally a lexicon,
  morfette \nlearns how to morphologically analyze new sentences. \n\nIn the learning
  stage Morfette fits two separate logistic regression\nmodels: one for morphological
  tagging and one for lemmatization. The\npredictions of the models are combined dynamically
  and produce a \nglobally plausible sequence of morphological-tag - lemma pairs for
  \na sentence.\n\nIn Morfette lemmatization is cast as a classification task where
  a \na lemmatization class corresponds to the specification of the edit \noperations
  which are needed to transform the inflected word form into\nthe corresponding lemma.\n\nThe
  basic approach is described in (Chrupała et al 2008 and Chrupała 2008). \nThe current
  version of Morfette uses an averaged perceptron to \nfit the models, rather than
  Maximum Entropy training. The lemmatization \nclasses are Edit-Tree-based as described
  in (Chrupała 2008).\n\nLICENSE\n=======\n\nThe source code in the src directory
  is licensed under\nthe BSD license.\n\nINSTALLATION\n============\n\nThe easiest
  way to install Morfette is to first install the Haskell\nPlatform <http://www.haskell.org/platform/>
  then execute the following\ncommands from within the morfette directory:\n\n> cabal
  update\n> cabal install --bindir=$HOME/bin\n\nThis will compile Morfette and install
  the executable in $HOME/bin. \n\nCabal can also download Morfette from the source
  code repository\nHackage:\n\n> cabal install morfette --bindir=$HOME/bin --datadir=$HOME/share\n\nThis
  will download Morfette, compile it, install the executable in\n$HOME/bin, and install
  the data files in a $HOME/share.\n\nThere are also pre-built binaries available
  from the project website. \n\nUSAGE\n=====\n\nUsage: morfette command [OPTION...]
  [ARG...]\ntrain:    train models\ntrain [OPTION...] TRAIN-FILE MODEL-DIR \n    --dict-file=PATH
  \                     path to optional dictionary\n    --language-configuration=es|pl|tr|..
  \ language configuration\n    --iter-pos=NUM                        iterations for
  POS model\n    --iter-lemma=NUM                      iterations for Lemma model\n\nextract-features:\n
  \         extract features\nextract-features [OPTION...] MODEL-DIR \n    --dict-file=PATH
  \     path to optional dictionary\n    --model-id=pos|lemma  model id (`pos' or
  `lemma')\n\npredict:  predict postags and lemmas using saved model data\npredict
  [OPTION...] MODEL-DIR \n    --beam=+INT   beam size to use\n    --tokenize    tokenize
  input\n    --multi=+INT  n-best output\n\neval:     evaluate morpho-tagging and
  lemmatization results\neval [OPTION...] TRAIN-FILE GOLD-FILE TEST-FILE \n    --ignore-case
  \           ignore case for evaluation\n    --baseline-file=PATH     path to baseline
  results\n    --dict-file=PATH         path to optional dictionary\n    --ignore-punctuation
  \    ignore punctuation for evaluation\n    --ignore-pos=POS-prefix  ignore POS
  starting with POS-prefix for evaluation\n\nversion:  show version\nversion [OPTION...]
  \n\nEXAMPLE USAGE\n=============\n\nTo train a new model:\n\n> morfette train --dict-file=DICT
  TRAINING-FILE MODEL-DIR \n\nTo use the model in MODEL-DIR to analyze new data:\n\n>
  morfette predict MODEL-DIR < TEST-DATA > ANALYZED-TEST-DATA\n\nPRETRAINED MODELS\n=================\n\nPretrained
  models for Spanish, French and English are available in the data\ndirectory: data/es/model,
  data/fr/model, and data/en/model. For example you can use\nthe Spanish model like
  this:\n\n> morfette predict data/es/model < TEST-DATA > ANALYZER-TEST-DATA\n\nThanks
  to Djamé Seddah for the English model.\n\nDATA FORMAT\n===========\n\nMorfette expects
  both training and testing data to be tokenized and\nsplit into sentences. The format
  of training data look like this:\n\nGómez Gómez np0000p\nsostiene sostener vmip3s0\nque
  que cs\nla el da0fs0\npropuesta propuesta ncfs000\nno no rn\ncambiará cambiar vmif3s0\n.
  . Fp\n\nLa el da0fs0\npropuesta propuesta ncfs000\nserá ser vsif3s0\nla el da0fs0\nmisma
  mismo pi0fs000\n\n\nThere is one token per line, with three columns separated by
  spaces or\ntabs. The columns contain word form, lemma and morphological tag\nrespectively.
  Sentences are separated by an empty line. Text should be\nencoded in UTF-8.\n\nTest
  data format is similar, except only the first column is needed:\n\nGómez\nsostiene\nque\nla\npropuesta\nno\ncambiará\n.\n\nLa\npropuesta\nserá\nla\nmisma\n\nOptionally,
  Morfette can also use vector representations of words for\ntraining and prediction,
  in addition to character strings, as\ndescribed in [3]. In this case, the second
  column of is used for the\nvectors. Inside this field vector components are separated
  by commas:\n\nGómez 0.1,0.0,0.9 Gómez np0000p\nsostiene 0.0,0.0,0.2 sostener vmip3s0\n\nFor
  prediction the format is similar, but only the first two columns\nare used:\n\nGómez
  0.1,0.0,0.9\nsostiene 0.0,0.0,0.2\n\nEach vector should have the same number of
  components.\n\n\nAdditionally, Morfette can use a dictionary with mappings between\nword-forms,
  lemmas and morphological tags. The tags do NOT need to be\nof the same kind and
  the tags used in the training data.  The format\nof the dictionary file is one record
  per line with the following\nfields:\n\nFORM LEMMA1 POS1 LEMMA2 POS2 ...\n\nExample
  from the Spanish dictionary:\n\nsientes sentar VMSP2S0 sentir VMIP2S0\nsiento sentar
  VMIP1S0 sentir VMIP1S0\n\n\nReferences\n==========\n\n[1] Grzegorz Chrupała, Georgiana
  Dinu and Josef van Genabith. 2008.\n    Learning Morphology with Morfette. In Proceedings
  of LREC 2008.\n    http://www.lrec-conf.org/proceedings/lrec2008/pdf/594_paper.pdf\n\n[2]
  Grzegorz Chrupała. 2008. Towards a Machine-Learning Architecture\n    for Lexical
  Functional Grammar Parsing. Chapter 6. PhD\n    dissertation, Dublin City\n    University.
  \n    http://grzegorz.chrupala.me/papers/phd.pdf\n\n[3] Grzegorz Chrupała. 2010.
  Efficient induction of probabilistic word\n    classes with LDA. IJCNLP. \n    http://grzegorz.chrupala.me/papers/ijcnlp-2011.pdf\n"
description-type: text
hash: 436c45207b8b9747bca37361e0f903ce8013d5d9f345e92b22ff3e6f9ccf29f3
homepage: https://github.com/gchrupala/morfette
latest: 0.4.7
license-name: BSD-3-Clause
maintainer: Grzegorz Chrupała <grzegorz.chrupala@gmail.com>
synopsis: A tool for supervised learning of morphology
test-bench-deps: {}
