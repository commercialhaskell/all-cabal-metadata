all-versions:
- '0.1'
- '0.2'
- '0.3'
- 0.3.1
- 1.0.0
- 1.0.1.0
- 1.1.0
- 1.1.1
- 1.1.2
- 1.1.3
- 1.1.4
- 1.1.5
author: Alexey Khudyakov <alexey.skladnoy@gmail.com>
basic-deps:
  base: '>=4.12 && <5'
  exceptions: '>=0.10'
  math-functions: '>=0.3'
  vector: '>=0.13 && <1'
  vector-th-unbox: '>=0.2.1.6'
changelog: |
  # Changes in 1.1.5

  - Bifunctor instance is added to `Weighted`


  # Changes in 1.1.4

  - Actually export `CountW`


  # Changes in 1.1.3

  - `Data` and `Storable` instances for `CountG`.

  - `CalcNEvt` type class added and `CountW` accumulator for counting weighted
    events.


  # Changes in 1.1.2

  - `Unbox` instances for `MeanNaive`, `WMeanNaive`, `WMeanKBN`.

  # Changes in 1.1.1

  - `Unbox` instance for `BinomAcc` is added.


  # Changes in 1.1.0

  - Type classes `CalcMean` and `CalcVar` are generalized to use `MonadThrow` to
    signal failure instead of using `Maybe` only

  - Functions for computing standard deviation are placed into type
    classes. Sometimes we have standard deviation at hand, if distribution is
    parameterized by it for example.

  - `Mean` now type synonym for `MeanKBN`.

  - `WelfordMean` and `KahanMean` are moved to `D.M.S.Extra` module.

  - Support for calculating weighted mean.

  - `StatMonoid` instances for up to 4-tuples.

  - `Max` now works correctly (#2).

  - `PPair` for use in parallel computation is added.


  # Changes in 1.0.0.0

  - Type class definition changed: now it has both `addValue :: m → a → m` and
    `singletonMonoid :: a → m`

  - `Mean` renamed as `WelfordMean`

  - `Unbox` instances added for all data types.

  - `BinomAcc` added.
changelog-type: markdown
description: |
  # monoid-statistics parallelizable constant space estimators

  [![Build Status](https://travis-ci.org/Shimuuar/monoid-statistics.png?branch=master)](https://travis-ci.org/Shimuuar/monoid-statistics)

  Monoids for calculation of statistics of sample. This approach allows to
  calculate many statistics in one pass over data and possibility to parallelize
  calculations. However not all statistics could be calculated this way.
description-type: markdown
hash: 1f084124d2624b8f1b7572d7cf4de0e4eebd9e9c3e8e6823511b93d0f8f7c83d
homepage: https://github.com/Shimuuar/monoid-statistics
latest: 1.1.5
license-name: BSD-3-Clause
maintainer: Alexey Khudyakov <alexey.skladnoy@gmail.com>
synopsis: Monoids for calculation of statistics of sample
test-bench-deps:
  QuickCheck: '>=0'
  base: '>=4.9 && <5'
  criterion: '>=0'
  doctest: '>=0.15 && <0.23'
  math-functions: '>=0.3'
  monoid-statistics: '>=0'
  mwc-random: '>=0.13'
  tasty: '>=0.11'
  tasty-expected-failure: '>=0'
  tasty-hunit: '>=0'
  tasty-quickcheck: '>=0.9'
  vector: '>=0.11 && <1'
