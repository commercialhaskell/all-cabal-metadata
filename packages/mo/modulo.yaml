all-versions:
- '1.1'
- '1.2'
- '1.3'
- '1.5'
- 1.7.2
- 1.7.3
- 1.7.4
- 1.8.0
- 1.9.0
- 1.9.1
author: Hans Hoglund
basic-deps:
  atto-lisp: '>=0'
  base: '>=4 && <5'
  data-default: '>=0'
  directory: '>=0'
  haskell-src: ==1.0.1.5
  language-c: '>=0'
  mtl: '>=0'
  nats: '>=0'
  pandoc-types: ==1.10
  parsec: '>=3.1.2 && <4'
  prettify: '>=1.0 && <2'
  process: '>=0'
  semigroups: '>=0'
  text: '>=0'
changelog: ''
changelog-type: ''
description: |-
  Modulo is a tool that generates modular, standard C interfaces based on a high-level
  description language. The idea is to specify functionality in the module language
  and implement it in any language that supports C-style calling conventions.
  This package include generators for C, Haskell, Common Lisp and NodeJS-style JavaScript.
description-type: haddock
hash: 7302162610f26d83bf74b360fdd081399b61a8dd6be32c6e26c8b61961687458
homepage: ''
latest: 1.9.1
license-name: GPL-3.0-only
maintainer: Hans Hoglund <hans@hanshoglund.se>
synopsis: Modular C code generator
test-bench-deps: {}
