homepage: https://github.com/simonmar/monad-par
changelog-type: ''
hash: 5f69fb694f3e5185088f9121613a164e87871f1d8ee563cfec57eabcc1bd96e0
test-bench-deps:
  test-framework-hunit: -any
  mwc-random: '>=0.11'
  test-framework: -any
  base: '>=4 && <5'
  time: -any
  abstract-deque: '>=0.1.4'
  monad-par-extras: -any
  test-framework-quickcheck2: '>=0.3'
  HUnit: -any
  test-framework-th: -any
  array: '>=0.3'
  containers: -any
  mtl: '>=2.0.1.0'
  deepseq: '>=1.2'
  QuickCheck: -any
  abstract-par: -any
maintainer: Simon Marlow <marlowsd@gmail.com>, Ryan Newton <rrnewton@gmail.com>
synopsis: A library for parallel programming based on a monad
changelog: ''
basic-deps:
  mwc-random: '>=0.11'
  base: '>=4.9 && <5'
  abstract-deque: '>=0.1.4'
  monad-par-extras: '>=0.3'
  array: '>=0.3'
  containers: -any
  mtl: '>=2.0.1.0 && <2.3'
  parallel: '>=3.1'
  deepseq: '>=1.1'
  abstract-par: -any
all-versions:
- '0.1'
- 0.1.0.1
- 0.1.0.2
- 0.1.0.3
- '0.3'
- 0.3.4
- 0.3.4.1
- 0.3.4.2
- 0.3.4.3
- 0.3.4.4
- 0.3.4.5
- 0.3.4.6
- 0.3.4.7
- 0.3.4.8
- 0.3.5
author: Simon Marlow, Ryan Newton
latest: 0.3.5
description-type: haddock
description: |-
  The 'Par' monad offers a simple API for parallel programming.  The
  library works for parallelising both pure and @IO@ computations,
  although only the pure version is deterministic.  The default
  implementation provides a work-stealing scheduler and supports
  forking tasks that are much lighter weight than IO-threads.

  For complete documentation see "Control.Monad.Par".

  Some examples of use can be found in the @examples/@ directory of
  the source package.

  Other related packages:

  * @abstract-par@ provides the type classes that abstract over different
  implementations of the @Par@ monad.

  * @monad-par-extras@ provides extra combinators and monad transformers layered on top of
  the @Par@ monad.

  Changes in 0.3.4 relative to 0.3:

  * Fix bugs that cause "thread blocked indefinitely on MVar" crashes.

  * Added "Control.Monad.Par.IO"
license-name: BSD-3-Clause
