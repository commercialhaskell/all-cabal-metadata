all-versions:
- 0.1.0.0
- 0.1.0.1
- 0.1.0.2
- 0.1.0.3
- 0.1.0.4
- 0.1.0.5
- 0.1.0.6
- 0.1.0.7
- 0.1.0.8
- 0.1.0.9
- 0.1.0.10
- 0.1.0.11
- 0.1.0.12
- 0.1.0.13
- 0.1.0.14
- 0.1.0.15
- 0.1.0.16
- 0.1.0.17
- 0.1.0.18
- 0.1.0.19
- 0.1.0.20
- 0.1.0.21
- 0.1.0.22
- 0.1.0.23
- 0.1.0.24
- 0.1.0.25
- 0.1.0.26
- 0.1.0.27
- 0.1.1.0
- 0.1.1.10
- 0.1.1.20
- 0.1.1.30
- 0.1.1.31
- 0.1.1.32
- 0.1.2.0
- 0.1.2.10
- 0.1.2.20
- 0.1.2.30
- 1.0.0.0
- 1.0.0.1
- 1.0.0.10
- 1.0.0.20
- 1.0.0.30
- 1.0.0.40
- 1.0.0.41
- 1.0.0.42
- 1.0.0.43
- 1.0.0.44
- 1.0.1.0
author: Jinjing Wang
basic-deps:
  HsOpenSSL: '>=0'
  aeson: '>=0'
  async: '>=0'
  attoparsec: '>=0'
  base: '>4 && <=5'
  binary: '>=0'
  bytestring: '>=0'
  containers: '>=0'
  cryptohash: '>=0'
  hslogger: '>=0'
  iproute: '>=0'
  lens: '>=0'
  lens-aeson: '>=0'
  mtl: '>=0'
  network: '>=0'
  optparse-applicative: '>=0'
  random: '>=0'
  stm: '>=0'
  strict: '>=0'
  text: '>=0'
  time: '>=0'
  transformers: '>=0'
  unordered-containers: '>=0'
changelog: "1.0.0.41\n--------\n* Update README for GHC 7.10.3\n* Add instructions
  to configure system wide proxy for NixOS\n\n1.0.0.40\n---------\n* Fix UDP packet
  size\n* Clean up repository\n\n1.0.0.30\n--------\n* Add a `deny-list` option to
  specify an access control list file for blocking a\n    large list of IPs.\n\n1.0.0.20\n--------\n*
  Fix: respect `disable-socks5`\n\n1.0.0.10\n--------\n* Add `forbidden_IPs` field
  in `config.json`\n* Use \n  [Reserved IP addresses](https://en.wikipedia.org/wiki/Reserved_IP_addresses)\n
  \ as the default value for `forbidden_IPs`\n* Add `show-default-config` to options\n\n1.0.0.1\n-------\n*
  Default to no buffer, rely on buffer in the kernel. Add force Explicit\n  Congestion
  Notification in Readme.\n\n1.0.0.0\n-------\n* Tag a stable release, clean up types\n\n0.1.2.30\n--------\n*
  Refactor internal to make a runtime independent of Config and Options\n\n0.1.2.20\n--------\n*
  Fix IPv6, finally tested on a real IPv6 network..\n\n0.1.2.10\n-------\n* Fix not
  parsing snake case in config, a bug introduced in 0.1.2.0\n\n0.1.2.0\n-------\n\n*
  Add OSX compatibility, still some unfixed bugs on OSX. \n* Fix a bug that breaks
  UDP forwarding in local\n\n0.1.1.32\n--------\n* Add a runtime type\n\n0.1.1.31\n--------\n*
  Fix hardcoded encryption method\n\n0.1.1.30\n--------\n* Add more encryption methods
  from OpenSSL\n* Add a `--list-methods` flag to show all supported encryption methods\n\n0.1.1.20\n--------\n*
  Implement TFO in remote. \n\n0.1.1.10\n--------\n* Add TCP Fast Open (TFO) capability.
  \n\n0.1.1.0\n-------\n* Use TCP_NOTSENT_LOWAT option to reduce latency\n\n0.1.0.27\n--------\n*
  Make local respect `forbidden-ip` as well, this reduce unnecessary connections\n
  \ to the remote.\n* Clean up logging.\n\n0.1.0.26\n--------\n* Enable CIDR format
  in `forbidden-ip`.\n\n0.1.0.25\n--------\n* Add `forbidden-ip` option, which defaults
  to `127.0.0.1`, to prevent misuse\n  of remote. This is again a feature ported from
  ss.\n\n0.1.0.24\n--------\n* Make obfuscation flush upper bound configurable in
  `config.json`.\n* Fix an IPv6 name resolution bug in remote.\n\n0.1.0.23\n---------\n*
  Fix a bug to prevent a half closed connection to hold a file handle.\n\n0.1.0.22\n--------\n*
  Add the `-o` flag to turn on simple obfuscation (randomly flush socket to vary\n
  \ packet length). There is about a 10-20% performance cost.\n\n0.1.0.21\n--------\n*
  Add in README that `GHC 7.10.2` is a must!\n\n0.1.0.20\n--------\n* Rewrite Encrypt
  module, cache password hash.\n\n0.1.0.19\n--------\n* Fix a memory leak.\n\n0.1.0.18\n--------\n*
  Add complete command line arguments.\n\n0.1.0.17\n--------\n* Add `--disable-socks5`
  flag to switch off the SOCKS5 service on local.\n\n0.1.0.16\n--------\n* Add compatibility
  with ss for UDP port forwarding.\n\n0.1.0.15\n--------\n* Add UDP port forwarding.\n\n0.1.0.14\n--------\n*
  Add IPv6 support.\n"
changelog-type: markdown
description: "MoeSocks\n========\n\nA SOCKS5 proxy using the client / server architecture.\n\nMoeSocks
  is mostly compatible with [shadowsocks].\n\nInstallation\n============\n\nFrom binary\n-----------\n\n###
  Install [Nix]\n\n    curl https://nixos.org/nix/install | sh \n\n### Install moesocks\n\n
  \   nix-env -i -A nixpkgs.haskellPackages.moesocks\n\n### Run\n\n    moesocks \n\nFrom
  source\n-----------\n\n### Install GHC and cabal-install\n    \n### Download moesocks\n\n
  \   git clone https://github.com/nfjinjing/moesocks\n\n### Sandbox!\n\n    cd moesocks\n
  \   cabal sandbox init\n\n### Install\n\n    cabal install\n\n### Run\n\n    .cabal-sandbox/bin/moesocks\n\n\nUsage\n=====\n\n*
  Start a remote node outside a firewall:\n\n        moesocks -r remote -k birthday!\n\n*
  Start a local node inside a firewall:\n\n        moesocks -s $REMOTE_IP -k birthday!\n\n*
  Now you have a SOCKS5 proxy running inside a firewall on port `1080`.\n\n* See more
  options:\n\n        moesocks --help\n\nFeatures\n========\n\n* SOCKS5 proxy service,
  tested with GFW.\n* TCP port forwarding.\n* UDP port forwarding, for example to
  tunnel DNS request: `-U 5300:8.8.8.8:53`.\n* SOCKS5 service on local can be turned
  off.\n* Understand `shadowsocks`' json configuration file.\n\nKnown issues\n============\n\n*
  UDP over SOCKS5 is not implemented.\n* TCP bind over SOCKS5 is not implemented.\n*
  A bit slower then the Python implementation.\n* Only works on Unix.\n\n\nTips\n====\n\nTCP
  Fast Open (TFO)\n-------------------\n\n### Benefit of using [TFO]\n\nTFO can bypass
  the TCP three-way handshake in successive connections, thus reducing latency.\n\n###
  Enable TFO in your OS runtime.\n\nOn Linux 3.7+, to check the availability of TFO:\n\n
  \   cat /proc/sys/net/ipv4/tcp_fastopen\n\nOn Linux 3.7+, to enable TFO (as root):\n\n
  \   echo 3 > /proc/sys/net/ipv4/tcp_fastopen\n\n### Enable TFO in MoeSocks\n\nTFO
  can be turned on by adding a `\"fastOpen\":true` field in `config.json` or\nadding
  a `--fast-open` argument in the command line.\n\n### Verify\n\nUse `tcpdump` on
  the `remotePort`, check for that `SYN` should start to carry\npayload. An example
  command is:\n\n    tcpdump port 8388 -i any -X -v\n    \nTCP BBR\n-------\n\nUsing
  tcp-bbr as the congestion control algorithm should dramatically increase your bandwith
  in most cases.\n\n\nCredits\n=======\n\n* [shadowsocks] greatly inspired MoeSocks.\n*
  [shadowsocks-haskell] another implementation of shadowsocks in Haskell, also greatly
  inspired\n  MoeSocks. Much of the understanding of the internal of shadowsocks was
  gained by\n  reading shadowsocks-haskell.\n\nLicense\n=======\n\nCopyright 2015
  Jinjing Wang\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou
  may not use this file except in compliance with the License.\nYou may obtain a copy
  of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required
  by applicable law or agreed to in writing, software\ndistributed under the License
  is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
  either express or implied.\nSee the License for the specific language governing
  permissions and\nlimitations under the License.\n\n[shadowsocks]:https://github.com/shadowsocks/shadowsocks\n[shadowsocks-haskell]:https://github.com/rnons/shadowsocks-haskell\n[Nix]:https://nixos.org/nix/\n[config.json]:https://raw.githubusercontent.com/nfjinjing/moesocks/master/config.json\n[TFO]:https://en.wikipedia.org/wiki/TCP_Fast_Open\n[ECN]:https://en.wikipedia.org/wiki/Explicit_Congestion_Notification\n\n"
description-type: markdown
hash: e1fa4510e4773239ac9fcdf1f392931cef1d945adfceb36ce20ba2eed154cfc8
homepage: https://github.com/nfjinjing/moesocks
latest: 1.0.1.0
license-name: Apache-2.0
maintainer: Jinjing Wang <nfjinjing@gmail.com>
synopsis: A functional firewall killer
test-bench-deps: {}
