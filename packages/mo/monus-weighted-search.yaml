all-versions:
- 0.1.0.0
author: Donnacha Oisín Kidney
basic-deps:
  QuickCheck: '>=2.10'
  array: '>=0.5'
  base: '>=4.13 && <5'
  containers: '>=0.1.0.0'
  deepseq: '>=1.1'
  mtl: '>=2.2'
  random: '>=1.0'
  transformers: '>=0.4.2'
changelog: ''
changelog-type: markdown
description: "# monus-weighted-search\n\nThis is a Haskell package containing the
  heap monad and some of the examples in the paper \n\n* \"Algebras for weighted search\",
  Donnacha Oisín Kidney and Nicolas Wu. 2021.\n  Proc. ACM Program. Lang. 5, ICFP,
  Article 72 (August 2021), 30 pages.\n  DOI:[https://doi.org/10.1145/3473577](https://doi.org/10.1145/3473577)\n\nIt
  contains three main components:\n\n* The `Monus` class (and some instances).\n*
  The `HeapT` monad, as described in the last section of the paper.\n* Examples using
  the `HeapT` monad.\n\nThe `Monus` class can be found in `Data.Monus`, `HeapT` is
  in `Control.Monad.Heap`, and the examples are\nin the `MonusWeightedSearch.Examples`
  directory.\n\nThe examples include:\n\n* Dijkstra's algorithm (`MonusWeightedSearch.Examples.Dijkstra`)\n*
  Probabilistic parsing (`MonusWeightedSearch.Examples.Parsing`)\n* Probabilistic
  sampling (`MonusWeightedSearch.Examples.Sampling`)\n* The Viterbi algorithm (`MonusWeightedSearch.Examples.Viterbi`)\n\nThought
  he primary purpose of this package is to demonstrate the ideas in the\npaper, the
  heap monad has been packaged so it can be used as-is in \"real\" code.\n\nThe documentation
  is compiled on every commit, it can be seen \n[here](https://oisdk.github.io/monus-weighted-search/docs/).\n\nBenchmarks
  are run occasionally, their output can be seen \n[here](https://oisdk.github.io/monus-weighted-search/benchmark/results.html).\n"
description-type: markdown
hash: 7a0a5b36544067d774fce8d267eb0b23eb76ce46b6ca3e4446a78617765450c6
homepage: https://github.com/oisdk/monus-weighted-search
latest: 0.1.0.0
license-name: MIT
maintainer: mail@doisinkidney.com
synopsis: Efficient search weighted by an ordered monoid with monus.
test-bench-deps:
  QuickCheck: '>=2.14'
  array: '>=0.5'
  base: '>=4.13 && <5'
  criterion: '>=1.2.0.0'
  monus-weighted-search: '>=0'
  mtl: '>=2.2'
  random: '>=1.0'
  tasty: '>=1.4'
  tasty-quickcheck: '>=0.10'
