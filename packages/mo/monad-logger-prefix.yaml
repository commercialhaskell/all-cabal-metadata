all-versions:
- 0.1.0
- 0.1.1
- 0.1.2
- 0.1.3
- 0.1.4
- 0.1.5
- 0.1.6
- 0.1.7
- 0.1.8
- 0.1.9
- 0.1.10
- 0.1.11
- 0.1.12
author: Matthew Parsons
basic-deps:
  base: '>=4.7 && <5.0'
  exceptions: '>=0.8.0 && <0.11.0'
  monad-control: '>=1.0 && <1.1'
  monad-logger: '>=0.3.12 && <0.4.0'
  mtl: '>=2.1 && <2.3'
  resourcet: '>=1.1 && <1.4'
  text: '>=1.1 && <1.3'
  transformers: '>=0.4.0 && <0.5.7'
  transformers-base: '>=0.4 && <0.5'
  unliftio-core: '>=0.1.1.0 && <0.3'
changelog: |
  # Change log

  # 0.1.12

  - Add support for `unliftio-core >= 0.2.0`

  # 0.1.11

  - Relaxed upper bound on `transformers`

  ## 0.1.10

  - Relaxed upper bound on `exceptions` from 0.10 to 0.11

  ## 0.1.8

  - Relaxed upper bound on `exceptions` from 0.9 to 0.10

  ## 0.1.7

  - Relaxed upper bound on `conduit`
changelog-type: markdown
description: |
  # [monad-logger-prefix][]

  [![Build Status](https://travis-ci.org/parsonsmatt/monad-logger-prefix.svg?branch=master)](https://travis-ci.org/parsonsmatt/monad-logger-prefix)

  This package provides an easy way to add prefixes to any
  [`MonadLogger`][monad-logger]. Here's a brief example:

  ```haskell
  {-# LANGUAGE TemplateHaskell #-}

  import Control.Monad.Logger
  import Control.Monad.Logger.Prefix

  main :: IO ()
  main = runStdoutLoggingT $ do
      $(logDebug) "This one has no prefix."

      "foo" `prefixLogs` do
          $(logDebug) "This one has a [foo] prefix."

          "bar" `prefixLogs` do
              $(logDebug) "This one has both [foo] and [bar] prefixes."
  ```

  The package includes a benchmark demonstrating that there is no performance difference with ordinary logging.

  [monad-logger-prefix]: https://github.com/githubuser/monad-logger-prefix
  [monad-logger]: https://hackage.haskell.org/package/monad-logger
description-type: markdown
hash: 91842d336f7eba236e6dc9a1913c546c86876e8b76ae093eb2b21d4aa2d3336f
homepage: https://github.com/parsonsmatt/monad-logger-prefix#readme
latest: 0.1.12
license-name: LicenseRef-Apache
maintainer: Matthew Parsons
synopsis: Add prefixes to your monad-logger output
test-bench-deps:
  base: '>=0'
  criterion: '>=0'
  monad-logger: '>=0'
  monad-logger-prefix: '>=0'
