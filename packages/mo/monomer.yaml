homepage: https://github.com/fjvallarino/monomer#readme
changelog-type: markdown
hash: 21787fcdc33e4977056eeb4c502ce7ee0ad4851848d0c755429592c8e61844de
test-bench-deps:
  http-client: '>=0.6 && <0.9'
  exceptions: ==0.10.*
  JuicyPixels: '>=3.2.9 && <3.5'
  bytestring: '>=0.10 && <0.12'
  OpenGL: ==3.0.*
  extra: '>=1.6 && <1.9'
  stm: ==2.5.*
  base: '>=4.11 && <5'
  time: '>=1.8 && <1.16'
  unordered-containers: '>=0.2.8 && <0.3'
  hspec: '>=2.4 && <3.0'
  text: '>=1.2 && <2.1'
  text-show: '>=3.7 && <3.10'
  process: ==1.6.*
  async: '>=2.1 && <2.3'
  data-default: '>=0.5 && <0.8'
  HUnit: ==1.6.*
  wreq: '>=0.5.2 && <0.6'
  monomer: -any
  sdl2: '>=2.5.0 && <2.6'
  containers: '>=0.5.11 && <0.7'
  silently: ==1.2.*
  lens: '>=4.16 && <6'
  nanovg: '>=0.8 && <1.0'
  formatting: '>=6.0 && <8.0'
  bytestring-to-vector: ==0.3.*
  mtl: '>=2.1 && <2.3'
  attoparsec: '>=0.12 && <0.15'
  transformers: '>=0.5 && <0.7'
  safe: ==0.3.*
  vector: '>=0.12 && <0.14'
  directory: ==1.3.*
maintainer: fjvallarino@gmail.com
synopsis: A GUI library for writing native Haskell applications.
changelog: |
  ## 1.3.0.0

  ### Added

  - Export `drawArrowUp` from `Drawing` module.
  - The `image` widget now supports a `fitEither` option ([PR #56](https://github.com/fjvallarino/monomer/pull/56)). Thanks @Kyarigwo!
  - The `scroll` widget now raises `onChange` events, providing the current `ScrollStatus` ([PR #51](https://github.com/fjvallarino/monomer/pull/51)).
  - The `grid`, `stack`, `labeledCheckbox` and `labeledRadio` widgets now support a `childSpacing`/`childSpacing_` option
    ([PR #67](https://github.com/fjvallarino/monomer/pull/67)). Thanks @Dretch!

  ### Fixed

  - Widgets that receive polymorphic types now append the handled type to their `WidgetType`. This
    is done to avoid issues if the handled type is later changed ([#46](https://github.com/fjvallarino/monomer/issues/46)).
  - If the `WidgetType` of the root item in a `Composite` changes during `merge`, initialize the new widget instead
    of merging with the old one ([#50](https://github.com/fjvallarino/monomer/issues/50)).
  - The arrow position in `dropdown` is now correct when a dropdown is taller than one line ([PR #55](https://github.com/fjvallarino/monomer/pull/55)). Thanks @Dretch!
  - The middle button click is now handled by `convertEvents`, and in turn reported to widgets ([#63](https://github.com/fjvallarino/monomer/issues/63)).
  - Add tolerance to width comparison in text clipping functions ([#54](https://github.com/fjvallarino/monomer/issues/54)).
  - Call `pumpEvents` before `pollEvents`. The `pumpEvents` call is implied by `pollEvent`, but starting on
    SDL2 `2.0.20` it seems to be required to call it explicitly ([#66](https://github.com/fjvallarino/monomer/issues/66)). Thanks @JD95!

  ### Changed

  - Relaxed upper bounds of dependencies for Stackage inclusion.

  ## 1.2.0.1

  ### Fixed

  - The `scroll` and `split` widgets now avoid unexpected behaviour when visibility is toggled.

  ## 1.2.0.0

  ### Added

  - Add `customModelBuilder` in Composite, for custom models support. These can consume information
    from the parent model.
  - Add `containerCreateContainerFromModel` to workaround issue when updating offset during merge.
  - Add `appDisableCompositing` to allow requesting compositing to be disabled on startup.
  - Add `optionButton` and `toggleButton` widgets.
  - Add `SetFocusOnKey` and `MoveFocusFromKey` actions in `Composite`. Deprecate `setFocusOnKey` function.
    This function depended on information in `WidgetEnv`, which can become stale if several actions are
    returned at once. This change reduces confusion regarding order of operations and widget tree state.

  ### Fixed

  - Keep old Composite root if model has not changed. This does not affect previous code,
    it is only relevant with new features.
  - Generate `IgnoreParentEvents` request from widgets that handle Wheel event (avoids issues with scroll widget moving the content).
  - Do not run tests which depend on SDL's video subsystem to be available unless an environment variable is defined.
    This allows for (hopefully) running tests on Hackage and, later on, deploying to Stackage.

  ### Changed

  - Composite requests `RenderOnce` when model changes.
  - Composite now renders decorations if a style is set.
  - ZStack's `onlyTopActive` now follows the same pattern as other boolean combinators.
  - Shortened labels for `ColorPicker`.
  - Changed `_weFindByPath` to `_weFindBranchByPath`, now returning the complete branch up to the given path.
  - Change SDL's default of requesting compositing to be disabled on startup (compositing is now left unchanged).
  - Filter following `TextInput` event if a single letter binding matched previously on `keystroke`.

  ## 1.1.1.0

  ### Added

  - `appInvertWheelX` and `appInvertWheelY` configuration options.

  ### Fixed

  - Horizontal wheel/trackpad scrolling on Linux.
  - Scroll: do not use direction argument to modify wheel/trackpad direction (event provides correct value).
  - Only replace composite model with user model on init and merge.

  ## 1.1.0.0

  ### Added

  - `sizeUpdater` helpers. Support multiple handlers in box, grid and stack.
  - `dpr` field to `WidgetEnv`.
  - `RunInRenderThread` to support initialization of low level OpenGL resources.
  - OpenGL example.
  - `containerDrawDecorations`. Simplify button/externalLink internals.
  - `ThemeState` entries for future `optionButton` and `toggleButton` widgets.
  - `singleDrawDecorations`. Make it consistent with Container.

  ### Fixed

  - Reduce memory usage by sharing wreq session among image widget instances.
  - Set correct `WidgetEnv` viewport from scroll (it looked good because of scissoring).
  - Fix issue with scrollbars using child coordinates for detecting clicks.

  ## 1.0.0.3

  ### Added

  - Add Nix and GitHub Actions support (thanks @smunix!).

  ### Fixed

  - Consume and forward all available messages from Producers on each cycle.
  - Fix space leak when rebuilding the UI or handling events.

  ## 1.0.0.2

  ### Added

  - Add `appRenderOnMainThread` option.

  ### Changed

  - Use the recently published nanovg-0.8.0.0 from Hackage, instead of the version from the PR's commit.

  ## 1.0.0.1

  ### Fixed

  - Fix Haddocks for widget configuration types.

  ## 1.0.0.0

  ### Initial public release

  - Supports Windows, Linux and macOS
basic-deps:
  http-client: '>=0.6 && <0.9'
  exceptions: ==0.10.*
  JuicyPixels: '>=3.2.9 && <3.5'
  bytestring: '>=0.10 && <0.12'
  OpenGL: ==3.0.*
  extra: '>=1.6 && <1.9'
  stm: ==2.5.*
  base: '>=4.11 && <5'
  time: '>=1.8 && <1.13'
  unordered-containers: '>=0.2.8 && <0.3'
  text: '>=1.2 && <2.1'
  text-show: '>=3.7 && <3.10'
  process: ==1.6.*
  async: '>=2.1 && <2.3'
  websockets: ==0.12.*
  data-default: '>=0.5 && <0.8'
  wreq: '>=0.5.2 && <0.6'
  monomer: -any
  sdl2: '>=2.5.0 && <2.6'
  containers: '>=0.5.11 && <0.7'
  lens: '>=4.16 && <6'
  nanovg: '>=0.8 && <1.0'
  formatting: '>=6.0 && <8.0'
  wuss: '>=1.1 && <2.3'
  bytestring-to-vector: ==0.3.*
  mtl: '>=2.1 && <2.3'
  attoparsec: '>=0.12 && <0.15'
  transformers: '>=0.5 && <0.7'
  random: '>=1.1 && <1.3'
  OpenGLRaw: ==3.3.*
  scientific: ==0.3.*
  aeson: '>=1.4 && <2.3'
  safe: ==0.3.*
  vector: '>=0.12 && <0.14'
all-versions:
- 1.0.0.0
- 1.0.0.1
- 1.0.0.2
- 1.0.0.3
- 1.1.0.0
- 1.1.1.0
- 1.2.0.0
- 1.3.0.0
author: Francisco Vallarino
latest: 1.3.0.0
description-type: markdown
description: |
  # Monomer

  An easy to use, cross platform, GUI library for writing native Haskell
  applications.

  It provides a framework similar to the Elm Architecture, allowing the creation
  of GUIs using an extensible set of widgets with pure Haskell.

  ## Screenshot

  ![Project's screenshot](assets/images/monomer-readme.png)

  ## Objectives

  - Be easy to learn and use.
  - Be extensible with custom widgets.
  - Run on Windows, Linux and macOS.
  - Have good documentation.
  - Have good examples.

  ### These are not objectives for this project

  - Have a native look and feel.

  ### Why would you want to use this library?

  - You want to write your application in Haskell.
  - You want to write a native, not web based, application.

  ## Documentation

  ### Setup

  You can read how to setup your environment [here](docs/tutorials/00-setup.md).

  ### Tutorials

  Introductory tutorials are available:

  - [01 - Basics](docs/tutorials/01-basics.md)
  - [02 - Styling](docs/tutorials/02-styling.md)
  - [03 - Life cycle](docs/tutorials/03-life-cycle.md)
  - [04 - Tasks](docs/tutorials/04-tasks.md)
  - [05 - Producers](docs/tutorials/05-producers.md)
  - [06 - Composite](docs/tutorials/06-composite.md)
  - [07 - Custom widgets](docs/tutorials/07-custom-widgets.md)
  - [08 - Themes](docs/tutorials/08-themes.md)

  ### Examples

  Beyond the tutorials, a few _real world like_ examples are available:

  - [Todo](docs/examples/01-todo.md)
  - [Books](docs/examples/02-books.md)
  - [Ticker](docs/examples/03-ticker.md)
  - [Generative](docs/examples/04-generative.md)
  - [Custom OpenGL](docs/examples/05-opengl.md)

  ### Haddock

  You can read the source code's documentation [here](https://hackage.haskell.org/package/monomer).

  ### Design decisions

  In case you wonder why some choices were made, you can read
  [here](docs/design-decisions.md).

  ## Roadmap

  - Stability and performance.
  - Mobile support.

  ## Contributing

  PRs are welcome!

  If possible, keep them small and focused. If you are planning on making a large
  change, please submit an issue first so we can agree on a solution.

  ## Questions?

  If you are not sure how something works or you have a usage question, feel free
  to open an issue!

  ## License

  This library is licensed under the [BSD-3 license](LICENSE).

  Fonts used in the examples:

  - [Roboto](https://fonts.google.com/specimen/Roboto), licensed under the [Apache license](http://www.apache.org/licenses/LICENSE-2.0).
  - [Remix Icon](https://remixicon.com), licensed under the [Apache license](http://www.apache.org/licenses/LICENSE-2.0).

  ## Acknowledgments

  - Thanks to [Ghislaine Guerin](https://github.com/ghislaineguerin) for UX advice.
  - Thanks to [Mikko Mononen](https://github.com/memononen) for the amazing [nanovg](https://github.com/memononen/nanovg) library.
license-name: BSD-3-Clause
