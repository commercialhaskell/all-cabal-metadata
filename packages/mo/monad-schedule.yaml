all-versions:
- 0.1.0.0
- 0.1.1.0
- 0.1.2.0
- 0.1.2.1
- 0.1.2.2
- '0.2'
- 0.2.0.1
- 0.2.0.2
author: Manuel Bärenz
basic-deps:
  base: '>=4.16.0 && <4.21.0'
  base-compat: '>=0.13 && <0.15'
  free: '>=5.1 && <5.3'
  operational: ^>=0.2.4
  stm: ^>=2.5
  time-domain: ^>=0.1
  transformers: '>=0.5 && <0.7'
changelog: |
  # Revision history for monad-schedule

  ## 0.2.0.2

  * Relax some type signatures
  * Relax some version bounds (thanks Andreas Ländle)

  ## 0.2.0.1

  * Compatibility with GHC 9.10

  ## 0.2

  * Added FreeAsync
  * Dropped support below GHC 9.2
  * Documentation fixes

  ## 0.1.2.2

  * Compatibility with GHC 9.8

  ## 0.1.2.0 -- 2022-06-26

  * Added test suite
  * Added further Writer instances
  * Fixed bug in ScheduleT and YieldT

  ## 0.1.1.0 -- 2022-06-25

  * Added Yield scheduling monad
  * Added Identity instance

  ## 0.1.0.0 -- 2022-03-27

  * Added MonadSchedule clas
  * Added free scheduling transformer ScheduleT
  * Added instances for common transformers
changelog-type: markdown
description: |-
  A monad @m@ is said to allow scheduling if you can pass a number of actions @m a@ to it,
  and those can be executed at the same time concurrently.
  You can observe the result of the actions after some time:
  Some actions will complete first, and the results of these are returned then as a list @'NonEmpty' a@.
  Other actions are still running, and for these you will receive continuations of type @m a@,
  which you can further run or schedule to completion as you like.
description-type: haddock
hash: ce7d685884572d9fdd73cff242b70894293db9f9eb4e1b4cd7e03b45b801447d
homepage: ''
latest: 0.2.0.2
license-name: MIT
maintainer: programming@manuelbaerenz.de
synopsis: A new, simple, composable concurrency abstraction.
test-bench-deps:
  HUnit: ^>=1.6
  QuickCheck: '>=2.14 && <2.16'
  base: '>=4.16.0 && <4.21.0'
  base-compat: '>=0.13 && <0.15'
  free: '>=5.1 && <5.3'
  generic-arbitrary: ^>=1.0
  monad-schedule: '>=0'
  operational: ^>=0.2.4
  stm: ^>=2.5
  test-framework: ^>=0.8
  test-framework-hunit: ^>=0.3
  test-framework-quickcheck2: ^>=0.3
  time: '>=1.9'
  time-domain: ^>=0.1
  transformers: '>=0.5 && <0.7'
