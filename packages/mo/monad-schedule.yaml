all-versions:
- 0.1.0.0
- 0.1.1.0
- 0.1.2.0
- 0.1.2.1
author: Manuel BÃ¤renz
basic-deps:
  base: '>=4.13.0 && <=4.19'
  free: '>=5.1'
  stm: '>=2.5'
  time-domain: '>=0.1'
  transformers: '>=0.5'
changelog: |
  # Revision history for monad-schedule

  ## 0.1.2.0 -- 2022-06-26

  * Added test suite
  * Added further Writer instances
  * Fixed bug in ScheduleT and YieldT

  ## 0.1.1.0 -- 2022-06-25

  * Added Yield scheduling monad
  * Added Identity instance

  ## 0.1.0.0 -- 2022-03-27

  * Added MonadSchedule clas
  * Added free scheduling transformer ScheduleT
  * Added instances for common transformers
changelog-type: markdown
description: |-
  A monad @m@ is said to allow scheduling if you can pass a number of actions @m a@ to it,
  and those can be executed at the same time concurrently.
  You can observe the result of the actions after some time:
  Some actions will complete first, and the results of these are returned then as a list @'NonEmpty' a@.
  Other actions are still running, and for these you will receive continuations of type @m a@,
  which you can further run or schedule to completion as you like.
description-type: haddock
hash: 95d6b9c6fd36f585e4a52938ebd1762c2e2caa8bb3c11ce86985dd11a2caae1a
homepage: ''
latest: 0.1.2.1
license-name: MIT
maintainer: programming@manuelbaerenz.de
synopsis: A new, simple, composable concurrency abstraction.
test-bench-deps:
  HUnit: '>=1.3'
  QuickCheck: '>=2.12'
  base: '>=4.13.0 && <=4.19'
  free: '>=5.1'
  monad-schedule: '>=0'
  stm: '>=2.5'
  test-framework: '>=0.8'
  test-framework-hunit: '>=0.3'
  test-framework-quickcheck2: '>=0.3'
  time-domain: '>=0.1'
  transformers: '>=0.5'
