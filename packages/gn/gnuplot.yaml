homepage: http://www.haskell.org/haskellwiki/Gnuplot
changelog-type: markdown
hash: 9601e76bd46e430c562019cae419d052255d1a91c79119ee39b1e76a039a11f4
test-bench-deps: {}
maintainer: Henning Thielemann <haskell@henning-thielemann.de>
synopsis: 2D and 3D plots using gnuplot
changelog: |
  # Change log for the `gnuplot` Haskell binding

  ## 0.5.7:

   * `Gnuplot.Terminal.QT`

   * `Gnuplot.Execute`:
     Do longer call `pgnuplot` on Windows.
     It is gone in gnuplot-5.0 in January 2015.

  ## 0.5.5:

   * `Gnuplot.Utility.quote` bugfix:
     Do not escape printable non-ASCII characters
     because gnuplot has no universal escaping support for Unicode codepoints.
basic-deps:
  base: '>=2 && <5'
  time: '>=1.5 && <1.14'
  filepath: '>=1.1 && <1.5'
  process: '>=1.0 && <1.7'
  semigroups: '>=0.1 && <1.0'
  array: '>=0.1 && <0.6'
  data-accessor-transformers: '>=0.2.1 && <0.3'
  utility-ht: '>=0.0.12 && <0.1'
  containers: '>=0.1 && <0.8'
  data-accessor: '>=0.2.2 && <0.3'
  transformers: '>=0.3 && <0.7'
  temporary: '>=1.1 && <1.4'
  deepseq: '>=1.0 && <1.6'
all-versions:
- '0.1'
- '0.2'
- '0.3'
- 0.3.2
- 0.3.3
- 0.3.3.1
- 0.3.4
- '0.4'
- 0.4.0.1
- 0.4.0.2
- 0.4.1
- 0.4.1.1
- 0.4.2
- '0.5'
- 0.5.0.1
- 0.5.0.2
- 0.5.1
- 0.5.2
- 0.5.2.1
- 0.5.2.2
- 0.5.3
- 0.5.3.1
- 0.5.4
- 0.5.4.1
- 0.5.4.2
- 0.5.5
- 0.5.5.1
- 0.5.5.2
- 0.5.5.3
- 0.5.6
- 0.5.6.1
- 0.5.7
author: Henning Thielemann <haskell@henning-thielemann.de>
latest: 0.5.7
description-type: haddock
description: |-
  This is a wrapper to gnuplot
  which lets you create 2D and 3D plots.

  Start a simple session with @cabal repl@.
  If not already loaded, call @:module Graphics.Gnuplot.Simple@
  in order to load "Graphics.Gnuplot.Simple"
  which is ready for use in GHCi.
  It does not address all fancy gnuplot features
  in order to stay simple.
  For more sophisticated plots,
  especially batch generated graphics,
  I recommend "Graphics.Gnuplot.Advanced".
  This module contains also an overview
  of the hierarchy of objects.

  Examples for using this interface can be found in the "Demo" module.
  In order to compile this and install an example data file,
  use the Cabal flag @buildExamples@:

  > $ cabal install -fbuildExamples gnuplot

  With the Cabal flags executePipe and executeShell
  you can switch to more convenient
  but probably less portable ways
  of feeding gnuplot with a script.

  Alternative packages: @plot@, @HPlot@, @Chart@, @textPlot@, @easyplot@
license-name: BSD-3-Clause
