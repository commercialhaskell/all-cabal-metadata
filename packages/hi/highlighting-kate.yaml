all-versions:
- '0.2'
- 0.2.1
- 0.2.3
- 0.2.4
- 0.2.5
- 0.2.5.1
- 0.2.6
- 0.2.6.1
- 0.2.6.2
- 0.2.7
- 0.2.7.1
- 0.2.8.1
- 0.2.8.2
- 0.2.9
- 0.2.10
- '0.3'
- 0.3.1
- '0.4'
- '0.5'
- 0.5.0.1
- 0.5.0.2
- 0.5.0.3
- 0.5.0.4
- 0.5.0.5
- 0.5.0.6
- 0.5.1
- 0.5.2
- 0.5.3
- 0.5.3.1
- 0.5.3.2
- 0.5.3.3
- 0.5.3.4
- 0.5.3.5
- 0.5.3.6
- 0.5.3.7
- 0.5.3.8
- 0.5.3.9
- 0.5.4
- 0.5.5
- 0.5.5.1
- 0.5.6
- 0.5.6.1
- 0.5.7
- 0.5.7.1
- 0.5.8
- 0.5.8.1
- 0.5.8.2
- 0.5.8.3
- 0.5.8.4
- 0.5.8.5
- 0.5.9
- 0.5.10
- 0.5.11
- 0.5.11.1
- 0.5.12
- 0.5.13
- 0.5.14
- 0.5.15
- '0.6'
- 0.6.1
- 0.6.2
- 0.6.2.1
- 0.6.3
- 0.6.4
author: John MacFarlane
basic-deps:
  base: '>=4.4 && <5'
  blaze-html: '>=0.4.2 && <0.10'
  containers: '>=0'
  filepath: '>=0'
  highlighting-kate: '>=0'
  mtl: '>=0'
  parsec: '>=0'
  regex-pcre-builtin: '>=0.94.4.8.8.35'
  utf8-string: '>=0'
changelog: "highlighting-kate 0.6.4 (31 Jan 2017)\n\n  * Add deprecation notice.\n
  \ * Extend bounds for blaze-html (Simon Jacobi).\n  * Added syntax ats (Kiwamu Okabe).\n
  \ * Added xml/language.dtd to cabal file.\n  * Update link to kate syntax highlighting
  documentation (Hadley Wickham).\n\nhighlighting-kate 0.6.3 (18 Sep 2016)\n\n  *
  Updated kate syntax definitions and rebuilt parsers.\n\nhighlighting-kate 0.6.2.1
  (01 Jul 2016)\n\n  * Use `#pop` instead of `#stay` if `fallthrough` is true but\n
  \   no `fallthroughContext` is given (#89, fixing a hang on certain\n    scheme
  inputs).\n * Use stack for default build (Makefile), document stack build\n   procedure
  (#87).\n\nhighlighting-kate 0.6.2 (17 Mar 2016)\n\n  * Added support for WordDetect
  (#86).\n  * Added hamlet.\n  * Added elixir (supernullset).\n  * Fix typo in changelog
  (Matthias C. M. Troffaes).\n\nhighlighting-kate 0.6.1 (12 Dec 2015)\n\n  * Fixed
  build on GHC 7.0 (Adam Bergmark).\n  * Don't use auto-all in ghc-prof-options.\n
  \ * Removed splitBase flag and ability to compile on base < 4.4.\n  * Add agda tests
  with unicode input (Matthias C. M. Troffaes).\n  * Fix 'Text.Regex.PCRE.Light: Error
  in regex: invalid UTF-8 string'\n    error message (Matthias C. M. Troffaes).\n
  \ * Reapplied isocpp.xml.patch (#57).\n  * Added `languageByFullName` (API change).
  \ Changed behavior of\n    `highlightAs` so that languages can match on \"full official
  name\"\n    as well as the canonical name (derived from the xml filename.\n    Previously,
  only `cs` worked for C#.  Now you may use `C#` as\n    well.\n  * Allow `csharp`
  as a special-case alias for `cs` (jgm/pandoc#2117).\n  * Added support for llvm
  (#79).\n\nhighlighting-kate 0.6 (26 May 2015)\n\n  * Support new KF5 token attributes
  (#69).\n    + Added to `TokenType`: `ConstantTok`, `SpecialCharTok`,\n      `VerbatimStringTok`,
  `SpecialStringTok`, `ImportTok`,\n      `DocumentationTok`, `AnnotationTok`, `CommentVarTok`,\n
  \     `VariableTok`, `ControlFlowTok`, `OperatorTok`, `BuiltInTok`,\n      `ExtensionTok`,
  `PreprocessorTok`, `AttributeTok`,\n      `InformationTok`, `WarningTok`.\n    +
  Revised styles to add clauses for the new `TokenType`s.\n    + Revised HTML formatter
  to produce CSS for all the new\n      `TokenType`s, and to include comments naming
  each type.\n    + Modified `ParseSyntaxFiles` to handle new types.\n    + Updated
  tests.\n  * Updated xml syntax definitions.  However, we retain an older\n    version
  of haskell.xml, since the new one didn't work properly.\n  * Added `ToColor` instance
  for `Int`.\n  * Renamed `Highlight[.hs]` to `highlighting-kate[.hs]` (Geoff Nixon).\n
  \ * Allow `#` as an operator in Haskell (Ryan Yates).\n  * Added support for Kotlin
  (kotlinlang.org) (Sebastien Soudan).\n\nhighlighting-kate 0.5.15 (25 Apr 2015)\n\n
  \ * Rename `Highlight` utility and `Highlight.hs` to `highlighting-kate` and\n    `highlighting-kate.hs`
  to avoid naming conflicts with other syntax\n    highlighting utilities.\n\nhighlighting-kate
  0.5.14 (28 Mar 2015)\n\n  * Put code blocks in a div. This reverts the change in
  0.5.13,\n    wrapping all blocks in a pre element.  (Pre elements are only\n    supposed
  to contain flow content, not block-level elements like\n    tables.)  Instead we
  now wrap each code block in a div with class\n    `sourceCode`.\n  * The default
  CSS now includes `div.sourceCode { x-overflow: auto; }`,\n    so that a scroll bar
  will appear on small screens. See jgm/pandoc#1903\n    and jgm/highlighting-kate#65
  for background.\n\nhighlighting-kate 0.5.13 (27 Mar 2015)\n\n  * Wrap HTML table
  with line numbers in a pre element (Adam Sapek).\n    HTML tables are impossible
  to format via styles for different\n    screen widths. This means that pandoc generated
  pages with code\n    blocks must have a fixed minimal width, making them hard to
  read on\n    narrower screens.\n\n    Wrapping the table in a pre block allows formatting
  of code\n    blocks to have a horizontal scroll bar if the content doesn't fit\n
  \   the screen width, by adding the following style:\n\n         pre.sourceCode
  {\n             overflow-x: auto;\n         }\n\n    This enables pandoc to generate
  responsive HTML pages.\n\nhighlighting-kate 0.5.12 (19 Mar 2015)\n\n  * Added Data
  and Typeable instances for types used in pandoc's\n    ReaderOptions and WriterOptions
  (Shahbaz Youssefi).\n  * Bumped blaze-html upper bounds (RyanGlScott).\n  * Added
  idris syntax definition (Alexander Shabalin).\n  * Added regex-posix install to
  'make prep' step (@johguenther).\n  * Modified isocpp.xml to fix float parsing.
  The float regex in\n    isocpp.xml seems to work fine with Kate's regex engine,
  but gives\n    different results with pcre. Added isocpp.xml.patch to keep track
  of\n    the divergence from upstream.\n\nhighlighting-kate 0.5.11.1 (19 Dec 2014)\n\n
  \ * Fixed rest.xml regex (#54).\n\nhighlighting-kate 0.5.11 (11 Nov 2014)\n\n  *
  Fixed line continuations (#51).\n    API change:  Added synStContinuation field
  to SyntaxState.\n\n  * Added Dockerfile syntax (James Turnbull, #49).\n\n  * Fixed
  'prep' target in Makefile.\n\nhighlighting-kate 0.5.10 (09 Nov 2014)\n\n  * Added
  support for Agda (Matthias C. M. Troffaes).\n  * Made doctype case-insensitive in
  HTML 5 (Ondřej Žára).\n\nhighlighting-kate 0.5.9 (24 Aug 2014)\n\n  * Added cabal
  test suite.\n  * Update .cabal file and README.md to reflect new upstream repo\n
  \   (Geoff Nixon).\n  * Added new syntaxes: ABC, Lilypond (musical typesetting),\n
  \   FASM/[NASM/MASM/YASM] (Intel Style Assembly Language), GraphViz Dot (graph\n
  \   notation), GLSL (graphics language), M4 (macro language, used by GNU\n    autotools),
  Mathematica, MediaWiki (wiki markup), OpenCL (GPGPU language),\n    RELAX NG (XML
  schema) [as the alternate RELAX NG compact syntax is already\n    included], tcsh
  [C shell] (scripting/shell language [with small patch for\n    parsing error]).
  \ (Geoff Nixon)\n  * Add language.xsd and validatehl.sh script from upstream: useful
  (Geoff\n    Nixon).\n  * Replace restructuredtext.xml with updated (renamed) rest.xml
  (Geoff\n    Nixon).\n  * Update from upstream: alert_indent, awk, css, diff, doxygen,
  email,\n    fsharp, haskell, javadoc, literate-haskell, markdown, maxima, perl,\n
  \   prolog, python, vhdl, yacc. (Geoff Nixon)\n  * Added .patch files in xml directory
  where local changes have been\n    made (Geoff Nixon).\n  * Common:  Convert `\\o{...}`
  to `\\x{..}` in regexes.\n    `\\x{..}` has been supported for a long time in pcre.\n\nhighlighting-kate
  0.5.8.5 (15 Jul 2014)\n\n  * Use utf8 option with pcre-light.\n  * Text.Highlighting.Kate.Common:
  \ Fixed convertOctal.\n    It now converts `\\o{0377}` to `\\377`, for compatibility\n
  \   with earlier versions of pcre (including the one currently\n    in debian).
  \ It also now generally leaves octal escapes in place,\n    converting to unicode
  characters only when a compatible octal\n    escape isn't available.  Addresses
  debian #753299.\n  * Updated syntax definitions for prolog, modelines, makefile,
  isocpp,\n    html, css, go, doxygen, cpp, cmake, ada.\n\nhighlighting-kate 0.5.8.4
  (15 Jul 2014)\n\n  * Fixed DetectIdentifier so it allows underscores.  (This reflects
  a\n    change in kate some time since this library was first written.)\n\nhighlighting-kate
  0.5.8.3 (19 Jun 2014)\n\n  * Added pure language.\n  * Added fallthrough to php.xml,
  so the `<?php` prefix is no longer\n    needed (pandoc #1271).\n\nhighlighting-kate
  0.5.8.2 (27 May 2014)\n\n  * Updated perl xml file for regex syntax compatibility
  (pandoc #1317).\n\nhighlighting-kate 0.5.8.1 (14 May 2014)\n\n  * Update fsharp
  and ocaml xml files for regex syntax compatibility (#44).\n    We need `\\o{0355}`,
  not `\\0355`.  See the pcre man page.\n  * Give better information when there is
  a regex compile failure.\n\nhighlighting-kate 0.5.8 (12 May 2014)\n\n  * Enable
  UTF-8 support with the regex-pcre-builtin backend.\n    (This requires regex-pcre-builtin
  >= 0.94.4.8.8.35, and it\n    adds a dependency on utf8-string.) (Matthias Troffaes,
  #42)\n  * Fixed performance regression: added a caseSensitive parameter\n    to
  compileRegex and made it non-monadic.  (Checking state was\n    a serious performance
  hit, and was not necessary in this case.)\n  * Improved README and added .md extension.\n
  \ * Added defaultSyntaxState in Types.\n\nhighlighting-kate 0.5.7.1 (09 May 2014)\n\n
  \ * Fix typo in list append operator in pcre-light-using code\n    (Clint Adams).\n\nhighlighting-kate
  0.5.7 (07 May 2014)\n\n  * Added Gcc and Isocpp (needed by Cpp).\n  * Updated syntax
  definitions.\n  * Made regex matches respect the `casesensitive` setting of the
  style.\n\nhighlighting-kate 0.5.6.1 (27 Jan 2014)\n\n  * Allow blaze-html 0.7.\n\nhighlighting-kate
  0.5.6 (07 Jan 2014)\n\n  * Added restructuredtext.\n  * Updated rust syntax definition.\n
  \ * Changed lua highlighting so variables/constants not highlighted\n    as keywords.\n
  \ * Updated kate syntax definitions for python, cmake.\n\nhighlighting-kate 0.5.4
  (26 June 2013)\n\n\n  * LaTeX formatter:  Render inline code as `\\VERB|code|`\n
  \   rather than `|code|`.  Define `\\VERB` macro in preamble\n    rather than defining
  `|` as a shortverb character.  This\n    prevents troublesome clashes with `|` characters
  in array\n    environments and such.  See pandoc#891.\n\nhighlighting-kate 0.5.3.9
  (06 May 2013)\n\n  * LaTeX formatter:  Avoid using \\textbar, which gives a bar
  that\n    is narrow and in a proportional font.  Instead, use literal | in\n    block
  code and a new macro \\VerbBar in inline code.\n\n  * Updated Curry highlighting
  (Björn Peemöller).\n\nhighlighting-kate 0.5.3.8 (05 Mar 2013)\n\n  * Support mozilla
  rust.\n\nhighlighting-kate 0.5.3.7 (20 Feb 2013)\n\n  * Bumped version bound on
  blaze-html to 0.7.\n\nhighlighting-kate 0.5.3.6 (16 Feb 2013)\n\n  * Added support
  for Curry and literate Curry (Björn Peemöller).\n\n  * Added support for Julia (dcjones).\n\n
  \ * Fixed language extensions value for asn1 (Stanley).\n\n  * Updated xml descriptions
  from kate repository.\n\nhighlighting-kate 0.5.3.5 (19 Jan 2013)\n\n  * Reverted
  use of \\char13 and \\char18 for ' and `.\n    This is not robust enough across
  encodings.  Recommend using\n    upquote package instead.\n\nhighlighting-kate 0.5.3.4
  (04 Jan 2013)\n\n  * Don't pop context on line end if we're already at root context.\n
  \   This helps with the erlang.xml file, which has some odd\n    `#pop`s in it.
  Closes #26.\n\n  * Avoid superfluous table lookup.  We find the default attribute\n
  \   in ParseSyntaxFiles and embed it directly in the parser, rather\n    than looking
  it up at runtime.  This simplifies the parsers\n    and should boost performance.\n\n
  \ * Don't pop last context in context stack.  This helps with the\n    erlang.xml
  file, which has some odd `#pop`s.\n\n  * Changed cabal file so library need not
  be recompiled for executable.\n    Moved Highlight.hs to extra/ directory.\n\n  *
  Fixed alignment of line numbers with lines.\n\n  * Make sure we parse the whole
  line when an error occurs.\n    This fixes a problem wherein ends of lines were
  dropped\n    after errors.\n\nhighlighting-kate 0.5.3.3 (12 Oct 2012)\n\n  * LaTeX
  output:  Use \\char13 and \\char18 for ' and `.\n    Reason:  Otherwise these appear
  as curly quotes.\n    The upquote package can alternatively be used, but it seems
  better to\n    make it unnecessary to use it.\n\n  * Make line number anchors into
  clickable links.\n    This makes it easier to obtain the URL for a specific line\n
  \   of code.  (Alp Mestanogullari)\n\nhighlighting-kate 0.5.3.2 (07 Sep 2012)\n\n
  \ * Fixed handling of backslash in bash highlighting.\n    Sometimes \"\\\\\" is
  used for backslash in the\n    syntax definitions (as in bash), other times \"\\\".\n
  \   We now handle both cases.\n\nhighlighting-kate 0.5.3.1 (07 Sep 2012)\n\n  *
  More changes to properly handle includes.  This\n    closes issue #22 with doxygen
  comments.  pDefault\n    has been incorporated into the ends of the context\n    parsers,
  instead of being put in parseExpression.\n\n  * Re-added doxygenlua, which now works.\n\nhighlighting-kate
  0.5.3 (07 Sep 2012)\n\n  * Improved handling of include directives.  This fixes\n
  \   bugs in comments caused by doxygen and javadoc includes.\n\n  * Changes to internal
  Types and Common:\n\n    - Context is now a (String, String) rather than a String.\n
  \     The first is the syntax name, the second the context name.\n    - ContextStack
  is now a list of Contexts.\n    - synStLanguage has been removed.\n    - pEndLine
  parameter has been removed from mkParseSourceLine.\n    - parseExpression now handles
  the endline.\n    - parseExpressionInternal has been removed in the\n      individual
  parsers; we now use parseExpression.\n\nhighlighting-kate 0.5.2 (10 Aug 2012)\n\n
  \ * Updated xml syntax definitions from kate repository:\n    bash, c, clojure,
  coffee (formerly coffeescript),\n    cpp, doxygen, fortran, go, latex, prolog, r,
  ruby, tcl.\n\nhighlighting-kate 0.5.1 (29 May 2012)\n\n  * Fixed inline LaTeX formatting:
  \ it should be `|...|`\n    rather than `\\Verb{...}`.\n\nhighlighting-kate 0.5.0.6
  (27 Apr 2012)\n\n  * Added zenburn style.\n\n  * Updated for compatibility with
  blaze-html 0.5.*.\n\nhighlighting-kate 0.5.0.5 (14 Feb 2012)\n\n  * Update 'synStPrevNonspace'
  at end of line.\n    This fixes a bug affecting every lexer that uses the 'first\n
  \   nonspace' property.  (e.g. bash)\n\nhighlighting-kate 0.5.0.4 (12 Feb 2012)\n\n
  \ * Fixed typo in version bounds for pcre-light.\n\nhighlighting-kate 0.5.0.3 (12
  Feb 2012)\n\n  * Fixed compilation with the 'pcre-light' flag.\n\nhighlighting-kate
  0.5.0.2 (08 Feb 2012)\n\n  * Fixed bug with lookahead parsers.\n    Previously they
  didn't consume input, which caused an error\n    starting with parsec 3.1.2 -- even
  though in fact there was\n    no threat of infinite looping.\n\nhighlighting-kate
  0.5.0.1 (31 Jan 2012)\n\n  * Give table.sourceCode width of 100%, for consistency\n
  \   between numbered and unnumbered code blocks.\n\nhighlighting-kate 0.5 (25 Jan
  2012)\n\n  * Text.Highlighting.Kate.Format.HTML now exports styleToCss\n    instead
  of styleToHtml.\n\nhighlighting-kate 0.4 (21 Jan 2012)\n\n  * Text.Highlighting.Kate.Definitions
  has been renamed as\n    Text.Highlighting.Kate.Types.\n\n  * Text.Highlighting.Kate.Format
  was replaced by two modules,\n    Text.Highlighting.Format.HTML and Text.Highlighting.Format.LaTeX.\n\n
  \ * Text.Highlighting.Kate no longer exports functions from Style or\n    Format.\n\n
  \ * highlightAs now lazily consumes lines and returns a list\n    of SourceLine.
  \ Previously, the entire input had to be\n    parsed before any output was produced.
  The output type\n    is no longer an Either; if a parsing error occurs, the\n    offending
  line is highlighted as ErrorTok, and we continue\n    with the next line without
  change of state.\n    If you call highlightAs with a language that isn't supported,\n
  \   all lines will be highlighted as NormalTok.\n\n  * Monadic 'fail' now used instead
  of 'error'.  Closes Issue #10.\n    Thanks to mcmaniac for suggesting these changes.\n\n
  \ * TokenType is used instead of String for token types.\n\n  * Completely changed
  Formatting API.\n\n    + Instead of formatAsHtml, we now have four functions:\n
  \     formatHtmlInline, formatHtmlBlock, formatLaTeXInline,\n      formatLaTeXBlock.\n\n
  \   + The options parameter is now a record, FormatOptions,\n      rather than a
  list, [FormatOption].\n\n    + \"Inline\" is no longer a format option, since there
  are separate\n      formatting functions for block and inline.\n\n    + formatHtml
  no longer has a string parameter for language\n      name, and the language name
  is no longer added as a class.\n\n    + highlightingCss has been removed; we now
  have styleToHtml\n      and styleToLaTeX, which take a Style and produce code for\n
  \     the HTML header or LaTeX preamble.\n\n    + Only the short form of the attribute
  is now used.\n      Removed OptDetailed.\n\n  * blaze-html is now used instead of
  xhtml for HTML formatting.\n\n  * Modules for individual languages are no longer
  exposed.\n\n  * Removed BUGS; added link to github issue tracker in README.\n\n
  \ * Removed ilerp, mediawiki, xharbour syntaxes.\n\n  * Updated haskell xml.  Changed
  order of parsers in haskell.xml.\n    This is needed so that floats can be parsed
  as floats.\n    Otherwise '33.3' gets parsed as an integer, a function (.),\n    and
  an integer. (These changes should be submitted upstream.)\n\n  * Fixed lua highlighting
  problems.\n    Improved lua highlighter.  Removed doxygen-lua, which was messing\n
  \   things up.\n\n  * Made pMatchRegex slightly faster.\n\n  * Improved efficiency
  of pKeyword by checking to see if a\n    potential keyword lies ahead.\n\n  * Fixed
  normalizeTokens so that comments etc. don't get split up.\n\n  * Made KateParser
  a synonym for GenParser Char SyntaxState.\n\n  * Simplified pDefault. The check
  for non-newline is no longer\n    needed.\n\n  * Add sourceCode class to tr in tables.\n\n
  \ * Improved ParseSyntaxFiles.hs.  It now generates no -Wall\n    warnings. In addition,
  it produces cleaner syntax parsers.\n\n  * Changed the SyntaxState type:\n    Removed
  synStCurrentLine, synStCharsParsedInLine.\n    Added synStLineNumber, synStPrevNonspace.\n\n
  \ * Common: Removed pHandleEndline.  Added fromState.\n    Added mkParseSourceLine.\n\n
  \ * Highlight executable: removed --css flag, added --style, --format.\n\n  * Cleaned
  up Makefile, added clean, distclean targets.\n\nhighlighting-kate 0.3.1 (27 Nov
  2011)\n\n  * Fixed a release bug in 0.3.  The Clojure module was not included\n
  \   in the cabal file.\n\nhighlighting-kate 0.3 (26 Nov 2011)\n\n  * Use -O0 by
  default to speed compiling.  This vastly improves compilation\n    speed and reduces
  memory requirements.  In some rough tests, it does not\n    seem to hurt performance
  much, but those who need maximum performance\n    should compile with -O2 (or use
  a different library, like illuminate).\n\n  * Updated syntax descriptions from kate
  repository.\n\n  * Removed some syntaxes to trim the bloated package.\n    Removed:
  ansys, cisco, cue, desktop, fstab, gap, gdb,\n    gettext, idl, m3u, pango, winehq,
  wml.\n\n  * Added syntax definition for Clojure (thanks to Caspar Hasenclever).\n\nhighlighting-kate
  0.2.10 (16 Jul 2011)\n\n  * Fixed class on line numbers td.  (Thanks to tantignac)\n
  \ * Allow empty context stack.\n    `currentContext` returns \"\" if stack is empty,
  and this is\n    treated as the first context in the list by `parseRules`.\n    This
  fixes a problem with syntax definitions like erlang.xml,\n    which has `#pop` as
  `lineEndContext` in the first context,\n    leading to an infinite loop with the
  old code.\n  * Syntax highlighting for CoffeeScript (thanks to igstan).\n  * Fixed
  links in README (thanks to John Gabriele).\n\nhighlighting-kate 0.2.9 (29 Jan 2011)\n\n
  \ * Added OptInline to FormatOptions.  Inline code is formatted\n    with a \"code\"
  tag but no \"pre\" tag.\n  * Put language class on \"code\" instead of \"pre\".\n
  \   Put \"sourceCode\" class on \"pre\" in addition to \"code\".\n  * Fixed a bug
  in tango style with numbering.\n\nhighlighting-kate 0.2.8.2 (28 Jan 2011)\n\n  *
  formatAsXHtml: Don't put `<br/>` after last line.\n  * Added F# highlighting based
  on the present ocaml definitions\n    (Bas Bossink).\n\nhighlighting-kate 0.2.8.1
  (02 Jan 2011)\n\n  * Updated parseSyntaxFiles.hs to use HXT 9.0.0.\n\n  * Added
  Makefile to help developers.\n    When you check out the source from the repository,
  you can now\n    do 'make prep' to generate the syntax parsers from the xml\n    definitions.\n\n
  \ * Improved installation instructions.\n\n  * Updated grammar files from Kate (Tianyi
  Cui).\n\n  * Fixed bug in endline parsing (pointed out by Samuel Hym).\n    + The
  bug occurs when you're nested two contexts in, and you hit\n      the end of a line.
  Even if both contexts were set up to\n      popContext at the end of line, previously
  only the first\n      context was popped.  Example: in bash,\n      export A=a\n
  \     export B=b\n      The second 'export' was being highlighted as VarName.\n
  \   + Common: Added pHandleEndline.\n    + ParseSyntaxFiles:  don't consume newline
  if you pop context at end\n      of line; instead, fall back to next context and
  try the newline\n      again.\n\n  * Changed type of pPopContext. Now returns ()
  instead of String.\n\n  * Use doxygen instead of doxygenlua in lua parser.\n    Using
  doxygenlua causes many lines to be erroneously\n    interpreted as comments.  Reverting
  to doxygen as before\n    fixes things.  Not sure if this is a bug in the lua.xml\n
  \   file or in highlighting-kate.\n\n  * Added css based on Pygment’s tango style
  theme (Samuel Hym).\n\nhighlighting-kate 0.2.7.1 (15 July 2010)\n\n  * Don't use
  the withAttribute combinator with null attribute.\n\n  * Fixed literate-haskell.xml
  to include attributes.\n\nhighlighting-kate 0.2.7 (15 July 2010)\n\n  * New, compressed
  format for classes. Two-letter class names are now\n    used for default styles,
  and detailed lexical information is omitted\n    unless the new OptDetailed option
  is specified. Also, the \"Normal\"\n    style is no longer used, and spans are not
  used for \"normal\" markup.\n    The result is significant compression of the highlighted
  source (in\n    one test, 191K -> 72K).\n\n  * Updated the css files in css/ to
  use the new two-letter class names.\n    Users should update their css files, or
  highlighting will no longer\n    work.\n\n  * New OptDetailed option (see above).\n\n
  \ * Added languagesByFilename function.  Unlike the old\n    languagesByExtension,
  this properly handles things like\n    \"Makefile\" and \"CMake.txt.\"\n\n  * A
  new -d/--detailed option has been provided in the Highlight\n    executable. This
  selects OptDetailed.\n\n  * Improvements to haskell.xml and literate-haskell.xml,\n
  \   due to Nicolas Wu.\n\n  * Added octave syntax definition.\n\n  * Changed ParseSyntaxFiles
  to work with GHC 6.12.\n\n  * ParseSyntaxFiles now uses Text/Highlighting/Kate/Syntax.hs.in\n
  \   as a template for construction of Text.Highlighting.Kate.Syntax\n    module.\n\n
  \ * Removed parsec < 3 restriction.\n\n  * Minor code cleanup and improvement.\n\nhighlighting-kate
  0.2.6.2 (06 March 2010)\n\n  * Use separate definitions for compiled regexes.\n
  \   This speeds up compilation significantly.\n\n  * Replaced list_(hash) with list_(list_name)
  for readability.\n\nhighlighting-kate 0.2.6.1 (06 March 2010)\n\n  * Performance
  improvements suggested by Joachim Breitner.\n    These reduce compile time and executable
  size significantly\n    (by almost half), and yield a slight speedup in run time.\n
  \   + Use Set instead of list for keywords.\n    + Put keyword sets in separate
  definitions.\n    + Use words and unwords to trick GHC into not inlining the\n      lists
  of keywords, which slows compilation considerably.\n\n  * Changed ghc-prof-options
  to include -caf-all and -O0.\n\nhighlighting-kate 0.2.6 (22 Jan 2010)\n\n  * Added
  OptLineAnchors FormatOption.  When used with\n    OptNumberLines, this includes
  a link anchor on each line,\n    so users can link to a particular line in a highlighted
  source\n    file.  Thanks to Daniel Patterson for the idea.\n\n  * Default to using
  regex-pcre-builtin, unless pcre-light flag is\n    turned on.  regex-pcre-builtin
  contains c sources for pcre, so it\n    should now be possible to install highlighting-kate
  without manually\n    installing the pcre library first -- a hurdle for some users.\n\nhighlighting-kate
  0.2.5.1 (29 Nov 2009)\n\n  * Modified ParseSyntaxFiles to use UTF8, since otherwise
  hscolour\n    compiled with GHC 6.12 will choke on the latin1 characters\n    in
  some of the comments giving the authors of the original\n    kate syntax files.
  \ Thanks to Sergei Trofimovich for pointing\n    out the problem.\n\n  * Fixed regexp
  in single line comment detector so infix ops like -->\n    are not treated as comments.
  \ (Thanks to Dmitri Golubovsky for\n\tthe patch, also contributed to kate upstream.)\n\n
  \ * Use Cabal to get version instead of hardcoding it.\n\nhighlighting-kate 0.2.5
  (04 Jul 2009)\n\n  * Changed highlightAs to go by file extension if unambiguous.\n\n
  \ * New Relaxngcompact syntax definition.\n\n  * Removed unused mkIdentifier in
  ParseSyntaxFiles.\n\n  * Moved 'capitalize' to ParseSyntaxFiles and fixed its defn.\n\n
  \ * Removed list of supported languages from description.\n    Spell 50 as \"fifty\"
  in description.\n\nhighlighting-kate 0.2.4 (15 Mar 2009)\n\n  * Fixed bug in literate-haskell-xml.
  Also fixed now upstream.\n    (Bjorn Buckwalter)\n\n  * Modified ParseSyntaxFiles.hs
  to allow regeneration of individual\n    syntax files. With the change ParseSyntaxFiles
  accepts any number of\n    arguments. Those ending with .xml are assumed to be files
  while the\n    rest are assumed to be directories containing .xml files.\n    The
  syntaxes included in Syntax.hs are based on the contents of\n    destDir rather
  than the arguments, this allows regenerating a subset\n    of syntaxes but still
  having all syntaxes in Syntax.hs. (Bjorn Buckwalter)\n\n  * ParseSyntaxFiles.hs:
  Change deprecated pragma, remove obsolete import.\n    (Bjorn Buckwalter)\n\nhighlighting-kate
  0.2.3 (9 Jul 2008)\n\n  * Removed -O2 in Ghc-Options, as it provides very little
  speedup\n\nhighlighting-kate 0.2.2 (9 Jul 2008)\n\n  * Added Cc-options -O0 to cabal
  file. This is needed to prevent\n    gcc from using enormous amounts of memory on
  platforms\n    that lack a native code generator and compile via C. See\n    http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=469893.\n\n
  \ * Depend on parsec < 3, because parsec 3 is much slower.\n\n  * normalizeHighlighting
  now strips out empty strings\n\nhighlighting-kate 0.2.1 (10 Feb 2008)\n\n  *  Implemented
  lookAhead in parsers, which fixed bugs in perl, bash,\n     and other parsers.\n\nhighlighting-kate
  0.2 (10 Feb 2008)\n\n  *  Initial release\n"
changelog-type: text
description: |+
  highlighting-kate
  =================

  **This library has been deprecated. Please use skylighting
  instead
  ([Hackage](https://hackage.haskell.org/package/skylighting)
  |
  [GitHub](https://github.com/jgm/skylighting)).**

  A Haskell source code highlighting library, based
  on Kate's syntax description files (http://kate-editor.org/),
  now [part of the KDE Framework's "KTextEditor" component](http://kate-editor.org/2013/11/11/kate-on-5-the-future-of-ktexteditor-and-kate-part/).
  It can produce both HTML and LaTeX output.

  Building
  --------

  To install, use the [stack] tool:

      stack install

  [stack]:  http://docs.haskellstack.org/en/stable/README/

  Note:  If you have checked out the source from the git repository,
  you will first need to do:

      make prep

  which generates some of the needed source files from xml syntax
  definitions.

  To generate the documentation:

      stack haddock

  To run the test suite:

      stack test

  For an example of the use of the library, see highlighting-kate.hs.

  By default, this installation method will install an executable,
  `highlighting-kate`, along with the library.  Normally this is
  put into `$HOME/.local/bin`.  To avoid creation of the
  executable, use `--flag highlighting-kate:-executable` with the
  `stack` commands above.

  Using
  -----

  If you want to use highlighting-kate as a library in a Haskell
  program, see the API documentation at
  <https://hackage.haskell.org/package/highlighting-kate>.

  To run the `highlighting-kate` program, specify the language
  name using `-s`:

      highlighting-kate -s haskell highlighting-kate.hs > example.html

  If you don't specify a language name, `highlighting-kate` will try to guess it
  from the file extension.`highlighting-kate` can also be used as a pipe,
  reading input from STDIN.  For other options,

      highlighting-kate --help

  Styling is done using span tags.  The Highlight program will include
  default styles in the generated HTML, unless a link to a CSS file is
  provided using the '--css' option. Some sample CSS files can be found
  in the css directory. These use generic class names (Normal, Keyword,
  DataType, DecVal, BaseN, Float, Char, String, Comment, Function, Others,
  Alert, Error). For more fine-grained highlighting, users may wish to
  create their own CSS files that use language-specific classes.

  Adding syntax definitions
  -------------------------

  The parsers in Text/Highlighting/Kate/Syntax were automatically generated
  from the Kate syntax definitions in the xml directory. You may modify
  the xml files in this directory, or add new ones, and then regenerate
  the parsers by doing:

      make prep

  Note that ParseSyntaxFiles.hs requires the HXT package (>= 9.0.0).
  `make prep` should install this automatically.

  To get the current Kate syntax highlighting files, clone the ktexteditor
  repository:

      git clone git://anongit.kde.org/ktexteditor

  The syntax definitions can then be found in

      src/syntax/data

  There is information on the syntax highlighting definitions at
  <https://docs.kde.org/stable5/en/applications/katepart/highlight.html>.  See also
  <http://kate-editor.org/2005/03/24/writing-a-syntax-highlighting-file/>.

  Thanks are due to all the authors of these syntax definitions.

  Changes have been made to the following xml files (diffs have
  been left in the directory, with .patch extensions):

  - haskell.xml: Small changes to mapping of styles to token types.
  - lua.xml:  Variables and constants highlighted as "normal", not keywords.
  - perl.xml:  Small regex change due to differences in regex engines.
  - php.xml:  Added fallthrough so `<?php` prefix not needed.
  - tcsh.xml: Replace invalid character assignment(?) of regex '\s' with ' '.

description-type: markdown
hash: c9d0d7156877d25237b7aba4e332086f2cff1ee9965be89b035afabe25a13072
homepage: http://github.com/jgm/highlighting-kate
latest: 0.6.4
license-name: LicenseRef-GPL
maintainer: jgm@berkeley.edu
synopsis: Syntax highlighting
test-bench-deps:
  Diff: '>=0'
  base: '>=4'
  blaze-html: '>=0.4.2 && <0.10'
  containers: '>=0'
  directory: '>=0'
  filepath: '>=0'
  highlighting-kate: '>=0'
  process: '>=0'
