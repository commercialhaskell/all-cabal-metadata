homepage: ''
changelog-type: markdown
hash: 81d70efa44a035a7dc4305a5effb5f1331a7c4be344dbc82a56d39be643fdeab
test-bench-deps:
  ghc: '>=8.6'
  hiedb: -any
  base: '>=4.12 && <4.17'
  hspec: -any
  filepath: -any
  process: -any
  ghc-paths: -any
  temporary: -any
  directory: -any
maintainer: zubin.duggal@gmail.com
synopsis: Generates a references DB from .hie files
changelog: |
  # Revision history for hiedb

  ## 0.4.1.0 -- 2021-06-29

  * Support GHC 9.2 (@fendor)
  * Remove `ghc-api-compat` dependency (@fendor)

  ## 0.4.0.0 -- 2021-06-29

  * Index module exports
  * New queries `getAllIndexedExports`, `getExportsForModule`, and `findExporters`
  * Support for ghc-9.0
  * An new `addRefsFromLoaded_unsafe` to index a module with cleanup or transactional behaviour
  * Include test data in source tarball
  * Use terminal-size for printing in some cases, making verbose indexing faster in some cases

  ## 0.3.0.1 -- 2021-01-27

  * Add additional sqlite indexes to prevent accidently quadratic behaviour while indexing

  ## 0.3.0.0 -- 2021-01-20

  * Introduce `SourceFile` type
  * Add `deleteMissingRealFiles` to garbage collect missing/deleted files
  * Enforce `is_real => hs_src IS NOT NULL` constraint in database.
  * Add option to show context for source spans
  * Coloured output and other output improvements
  * Garbage collection of typenames
  * Added flag to reindex all files
  * 'addRefsFrom' now returns a boolean indicating if the file was indexed or skipped

  ## 0.2.0.0 -- 2021-01-06

  * Use fingerprints/hashes instead of modtimes to maintin database consistency
  * Type references are only reported for bind sites
  * Type references are computed for all files
  * Total time taken to index is reported
  * `search` is now called `findReferences`
  * `findTypeRefs` has a similar type signature to `findReferences`

  ## 0.1.0.0 -- 2020-11-08

  * First version.
basic-deps:
  ghc: '>=8.6'
  lucid: -any
  bytestring: -any
  extra: -any
  hiedb: -any
  base: '>=4.12 && <4.17'
  sqlite-simple: -any
  text: -any
  hie-compat: -any
  filepath: -any
  array: -any
  containers: -any
  terminal-size: -any
  ansi-terminal: -any
  ghc-paths: -any
  mtl: -any
  optparse-applicative: -any
  algebraic-graphs: -any
  directory: -any
all-versions:
- 0.1.0.0
- 0.2.0.0
- 0.3.0.0
- 0.3.0.1
- 0.4.0.0
- 0.4.1.0
author: Zubin Duggal
latest: 0.4.1.0
description-type: markdown
description: "# HIE DB - A tool to index and query .hie files\n\n## Compiling\n\n###
  Prerequisites\n\n- Recent version of GHC 8.8/HEAD which includes support for .hie
  files\n- cabal >= 2.4.1.0\n\n### Procedure\n\n```\n$ cabal install hiedb\n```\n\n##
  Usage\n\n### Generating .hie files\n\nCompile any package with ghc options `-fwrite-ide-info`
  and optionally,\n`-hiedir <dir>`. This will generate `.hie` files and save them
  in `<dir>`\n\n### Indexing\n\n```\n$ hiedb -D <db-loc> index <hiedir>\n```\n\nYou
  can omit `<db-loc>`, in which case it will default to the environment variable\n`HIEDB`,
  or if that is not defined, `$XDG_DATA_DIR/default_$DBVERSION.hiedb`\n\n### Querying\n\n-
  Looking up references for a name(value/data constructor):\n  ```\n  $ hiedb -D <db-loc>
  name-refs <NAME> [MODULE]\n  ```\n- Looking up references for a type:\n  ```\n  $
  hiedb -D <db-loc> type-refs <NAME> [MODULE]\n  ```\n\n`MODULE` is the module the
  name was originaly defined in.\n\n- Looking up references for a symbol at a particular
  location:\n  ```\n  $ hiedb -D -<db-loc> point-refs (-f|--hiefile HIEFILE) SLINE
  SCOL [ELINE] [ECOL]  \n  $ hiedb -D -<db-loc> point-refs MODULE [-u|--unit-id UNITID]
  SLINE SCOL [ELINE] [ECOL]\n  ```\n\nYou can either lookup references for a Module
  that is already indexed,\nor lookup references for a point in a .hie file directly,
  which will be\n(re)indexed.\n"
license-name: BSD-3-Clause
