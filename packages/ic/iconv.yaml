homepage: ''
changelog-type: markdown
hash: 4ed36bee4af30bc2948aa3dde8da5025f1c4a3bb878dea4c03553eab643b3700
test-bench-deps: {}
maintainer: Duncan Coutts <duncan@community.haskell.org>
synopsis: String encoding conversion
changelog: |+
  0.4.1.3 Duncan Coutts <duncan@community.haskell.org> June 2015

   * Fixed building with GHC 7.10

  0.4.1.2 Duncan Coutts <duncan@community.haskell.org> December 2013

   * Fixed building with GHC 7.8

  0.4.1.1 Duncan Coutts <duncan@community.haskell.org> October 2012

   * Fixed building with bytestring 0.10

basic-deps:
  bytestring: '>=0.9 && <0.13'
  base: '>=3 && <5'
all-versions:
- '0.2'
- '0.4'
- 0.4.0.2
- 0.4.1.0
- 0.4.1.1
- 0.4.1.2
- 0.4.1.3
author: Duncan Coutts <duncan@community.haskell.org>
latest: 0.4.1.3
description-type: markdown
description: "\nCodec.Text.IConv\n================\n\nThis is a Haskell binding to
  the `iconv()` C library function.\n\nThe only module exported is `Codec.Text.IConv`,
  which provides a single\nfunction:\n\n    -- | Convert fromCharset toCharset input
  output\n    convert :: EncodingName -> EncodingName -> Lazy.ByteString -> Lazy.ByteString\n\nwhere
  `fromCharset` and `toCharset` are the names of the input and output\ncharacter set
  encodings, and input and output are the input and output text\nas lazy ByteStrings.
  For example:\n\n     import qualified Codec.Text.IConv as IConv\n     import qualified
  Data.ByteString.Lazy as BS\n     \n     main = do\n       -- read UTF8, but convert
  to UTF32 internally\n       content <- fmap (IConv.convert \"UTF-8\" \"UTF-32\")
  (BS.readFile file)\n       ...\n\nAn [example program], similar to the iconv program,
  is included.\n\n[example program]: examples/hiconv.hs\n\nCharacter set encodings\n-----------------------\n\nTo
  see a list of encoding names which are known by your operating system,\nrun `iconv
  --list` in a shell. Likely encodings are listed on the [libiconv]\nweb site.\n\n[libiconv]:
  http://www.gnu.org/software/libiconv/\n\nAvailability of `iconv()`\n-------------------------\n\nThe
  `iconv(3)` function conforms to POSIX.1-2001. It is provided by the [GNU C\nlibrary].\n\n[GNU
  C library]: http://www.gnu.org/software/libc/manual/html_node/Character-Set-Handling.html\n\nOn
  systems which do not have a native iconv() implementation you may need to\ninstall
  [libiconv].\n\n"
license-name: BSD-3-Clause
