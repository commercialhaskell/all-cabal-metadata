homepage: https://github.com/fizruk/rzk#readme
changelog-type: markdown
hash: feb619799f038fb45ac9a128ea62aa589e7f2a2f436ffdf67e0dad49319f577d
test-bench-deps:
  base: '>=4.7 && <5'
  array: -any
  bifunctors: -any
  mtl: -any
  rzk: -any
  template-haskell: -any
maintainer: nickolay.kudasov@gmail.com
synopsis: An experimental proof assistant for synthetic ∞-categories
changelog: "# Changelog for `rzk`\n\nAll notable changes to this project will be documented
  in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\nand
  this project adheres to the\n[Haskell Package Versioning Policy](https://pvp.haskell.org/).\n\n##
  Unreleased\n\nThis version was a complete rewrite of the proof assistant, using
  a new parser, a new internal representation, and a rewrite of the typechecking logic.
  This is still a prototype, but, arguably, more stable and manageable than version
  0.1.0.\n\n### Changes in syntax\n\nSyntax is almost entirely backwards compatible
  with version 0.1.0.\n\nThe only known breaking changes are:\n\n1. Terms like `second
  x y` which previous have been parsed as `second (x y)`\n  now are properly parsed
  as `(second x) y`.\n2. It is now necessary to have at least a minimal indentation
  in the definition of a term after a newline.\n3. Unicode syntax is temporarily disabled,
  except for dependent sums and arrows in function types.\n\nOtherwise, syntax is
  now made more flexible:\n\n1. Function parameters can be unnamed: `A -> B` is the
  same as `(_ : A) -> B`.\n2. Angle brackets are now optional: `{t : I | psi t} ->
  A t [ phi t |-> a t ]`\n3. Nullary extension types are possible: `A t [ phi t |->
  a t ]`\n4. Lambda abstractions can introduce multiple arguments:\n\n```rzk\n#def
  hom : (A : U) -> A -> A -> U\n  := \\A x y ->\n    (t : Δ¹) -> A [ ∂Δ¹ t |-> recOR(t
  === 0_2, t === 1_2, x, y) ]\n```\n\n5. There are now 3 syntactic versions of `refl`
  with different amount of explicit annotations:\n  `refl`, `refl_{x}` and `refl_{x
  : A}`\n\n6. There are now 2 syntactic versions of identity types (`=`): `x = y`
  and `x =_{A} y`.\n\n7. `recOR` now supports alternative syntax with an arbitrary
  number of subshapes:\n  `recOR( tope1 |-> term1, tope2 |-> term2, ..., topeN |->
  termN )`\n\n8. Now it is possible to have type ascriptions: `t as T`. This can help
  with ensuring types of subexpressions in parts of formalisations.\n\n9. \n\n###
  Simple shape coercions\n\nIn some places, shapes (cube indexed tope families) can
  be used directly:\n\n1. In function parameters: `(Λ -> A) -> (Δ² -> A)` is the same
  as `({(t, s) : 2 * 2 | Λ (t, s)} -> A) -> ({(t, s) : 2 * 2 | Δ²} -> A)`\n\n2. In
  parameter types of lambda abstractions: `\\((t, s) : Δ²) -> ...` is the same as
  `\\{(t, s) : 2 * 2 | Δ² (t, s)} -> ...`\n\n### Better type inference\n\n1. It is
  now not required to annotate point variables with tope restrictions, the typechecker
  is finally smart enough to figure them out from the context.\n\n2. It is now possible
  to simply write `refl` in most situations.\n\n3. It is now possible to omit the
  index type in an identity type: `x = y`\n\n### Better output and error message\n\nThe
  output and error messages have been slightly improved, but not in a major way.\n\n###
  Better internal representation\n\nA new internal representation (a version of second-order
  abstract syntax)\nallows to stop worrying about name captures in substitutions,\nso
  the implementation is much more trustworthy.\nThe new representation will also allow
  to bring in higher-order unification in the future, for better type inference, matching,
  etc.\n\nNew representation also allowed annotating each (sub)term with its type
  to avoid recomputations and some other minor speedups. There are still some performance
  issues, which need to be debugged, but overall it is much faster than version 0.1.0
  already.\n\n## 0.1.0 - YYYY-MM-DD\n"
basic-deps:
  base: '>=4.7 && <5'
  array: -any
  bifunctors: -any
  mtl: -any
  rzk: -any
  template-haskell: -any
all-versions:
- 0.1.0
author: Nikolai Kudasov
latest: 0.1.0
description-type: markdown
description: |
  # rzk
license-name: BSD-3-Clause
