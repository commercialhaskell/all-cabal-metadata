homepage: https://github.com/ZHaskell/Z-IO
changelog-type: markdown
hash: 85868d0f6e8663cc4b76feb0b1d39df5cb81675895bf4639397a0692e0392bb5
test-bench-deps:
  bytestring: -any
  Z-Data: -any
  base: -any
  time: ^>=1.9
  hspec: '>=2.5.4'
  criterion: ^>=1.5
  HUnit: -any
  quickcheck-instances: -any
  zlib: -any
  hashable: -any
  scientific: -any
  QuickCheck: '>=2.10'
  primitive: -any
  Z-IO: -any
maintainer: winterland1989@gmail.com
synopsis: Simple and high performance IO toolkit for Haskell
changelog: "# Revision history for Z-IO\n\n## 0.6.3.0  -- 2020-02-20\n\n* Split `Z.IO.UV.FFI`
  to `Z.IO.UV.FFI` and `Z.IO.UV.FFI_Env`, to make the module buildable when memory
  is constrained. \n* Make functions works on TTY in `Z.IO.StdStream` correctly ignore
  redirected streams.\n* Move `pathSeparator` to `pathSeparators`, now `pathSeparator`
  return the default path separator.\n\n## 0.6.2.0  -- 2020-02-18\n\n* Hide `Logger`
  constructor from `Z.IO.Logger`, remove implementation details such as `defaultTSCache`,
  `pushLogIORef`, `flushLogIORef`, add `loggerFormatter` to `LoggerConfig`.\n* Add
  `newStdLogger/newFileLogger` to make new logger easily.\n* Rework `Z.IO.FileSystem.Watch`'s
  API, change `watchDirs` to accept a recursive param and a callback.\n* Hide `Z.IO.UV.Win`
  module, which should not be directly used by user.\n* Fix a bug when stdio is redirected
  to pipes: https://github.com/ZHaskell/z-io/pull/16\n\n## 0.6.1.0  -- 2020-02-09\n\n*
  Fix a bug in `newMagicSplitter/newLineSplitter` code.\n* Remove `sourceFromInput`
  and related functions to reduce API surface, use `newBufferedInput` with `sourceFromBuffered`
  instead.\n* Refactor server loop to allow more code sharing between `Z.IO.Network.TCP`
  and `Z.IO.Network.IPC`.\n\n## 0.6.0.0  -- 2020-02-04\n\n* FileSystem: replace `DEFAULT_MODE`
  with `DEFAULT_FILE_MODE` & `DEFAULT_DIR_MODE`.\n* Ignore exception while `mkdirp`
  on an exist directory.\n* Make `rmrf` more like `rm -rf`, which can be used on files.\n*
  Add `doesPathExist/doesFileExist/doesDirExist` to file system module.\n* Add `Z.IO.FileSystem`
  re-export `Z.IO.FileSystem.Watch` and `Z.IO.FileSystem.FilePath`.\n* Add `mkstemp`,
  `initTempFile/initTempDir` to file system module.\n\n## 0.5.0.0  -- 2020-01-28\n\n*
  Add `unwrap/unwrap'` to `Z.IO.Exception`.\n* Add `readParseChunks` to `Z.IO.Buffered`,
  Change `readParser`'s type to match `readParseChunks`.\n* Add `sourceParseChunksBufferedInput`,
  `sourceParseChunksInput` to `Z.IO.BIO`.\n* Add `newJSONLogger/defaultJSONFmt` to
  `Z.IO.Logger`, provide simple JSON structured logging.\n\n## 0.3.0.0  -- 2020-12-29\n\n*
  Add `getSystemTime'` to `Z.IO.Time`.\n* Add `shutdownUVStream` to `Z.IO.UV.UVStream`.\n*
  Change `sourceFrom/sinkToFile` to `initSourceFrom/initSinkToFile`.\n* Bump `Z-Data`
  version.\n\n## 0.2.0.0  -- 2020-12-16\n\n* Add `sourceParsedBufferInput` and JSON
  sources to `Z.IO.BIO`.\n* Fix `readLine` and `newLineSplitter`.\n* Improve low resolution
  timer precision.\n* Fix a bug in `Z.IO.FileSystem.FilePath.relative`, see [#17](https://github.com/likle/cwalk/issues/17).\n\n##
  0.1.9.0  -- 2020-11-23\n\n* Clean up API in `Z.IO.Buffered`, remove `readToMagic'`,
  `readLine'`, `readExactly'`.\n* `readExactly` now throw exception when not reading
  enough bytes before EOF.\n* Add `Show/ShowT` instance to `UVStream`, `StdStream`,
  `UDP`, `UVManager`.\n* Add JSON instance to various types: `SocketAddr` and all
  configure types.\n* Rename `InetAddr` to `IPv4`, `Inet6Addr` to `IPv6`, change `SocketAddr`
  's constructor name, and payload order.\n* Add `seek` to `Z.IO.FileSystem`.\n\n##
  0.1.8.1  -- 2020-11-21\n\n* Export `ZStream` type from `Z.IO.BIO.Zlib`\n\n## 0.1.8.0
  \ -- 2020-11-20\n\n* Remove type index from `BufferedInput`, `BufferedOutput`.\n*
  Add `Z.IO.BIO` module to facilitate streaming process, and `Z.IO.BIO.Concurrent`
  to facilitate producer-consumer model.\n* Remove streamming related functions from
  `Z.IO.Buffered`, use `Z.IO.BIO` instead.\n* Move `Z.IO.Compression.Zlib` to `Z.IO.BIO.Zlib`,
  change API to `BIO` style.\n* Add `Z.IO.FileSystem.Watch` module, provides cross-platform
  filesystem watching.\n\n## 0.1.7.0  -- 2020-10-24\n\n* Add `iso8016DateFormat`,
  change logger's default time format to include time zone.\n* Rename `warn` to `warning`,
  change `Level` to `Int` type alias in `Z.IO.Logger`, add `critical`.\n* Export `TimeVal`
  from `Z.IO.Environment`.\n* Add `getCPUInfo`, `getLoadAvg`, `getXXXMem` to `Z.IO.Environment`.\n\n##
  0.1.6.1  -- 2020-10-17\n\n* Export `ResUsage` from `Z.IO.Environment`.\n* Export
  `Level` from `Z.IO.Logger`.\n* Add linefeed with default logger formattor.\n\n##
  0.1.6.0  -- 2020-10-17\n\n* Fix a bug affects udp exception raising(simliar to the
  one fixed in 0.1.5.2).\n* Add `Z.IO.StdStream.Ansi` module, add a default colored
  logger.\n* Add `Z.IO.Time` module, for fast time parsing and formatting.\n* Add
  `Z.IO.FileSystem.FilePath` module for file path manipulations.\n* Add `getCWD`,
  `chDir`, `getHomeDir`, `getTempDir`, `getPassWD` to `Z.IO.Environment`.\n* Add `chown`,
  `fchown`, `lchown` to `Z.IO.FileSystem` and `Z.IO.FileSystem.Threaded`.\n* Rename
  `UVFD` to `FD` accross module.\n\n## 0.1.5.2  -- 2020-10-13\n\n* Fix windows dist(add
  `fs-fd-hash-inl.h` to other-source-files).\n\n## 0.1.5.1  -- 2020-10-13\n\n* Export
  `ProcessFlag` from `Z.IO.Process`.\n* Add quick read & write functions to fileSystem
  modules.\n* Fix a bug: when exception raise from server loop an uninitialized uv_check_t
  is closed.\n* Update libuv's version to 1.40.1.\n* Change `IOEInfo` type to use
  `Text` instead of `CBytes`.\n\n## 0.1.5.0  -- 2020-10-10\n\n* Add `Z.IO.Process`
  module.\n* Move many flag type to type alias from newtype, adjust patterns haddock.\n*
  Sync IPC's server API to TCP's.\n\n## 0.1.4.0  -- 2020-10-02\n\n* Add `Z.IO.Environment`
  module.\n* Add various instances to data types in `Z.IO.UV.FFI`.\n* Fix a UDP batch
  receiving bug.\n* Remove `UV` prefix in config data types(`Z.IO.FileSystem`, `Z.IO.UDP`).\n*
  Change `TCP`, `IPC` server config, move server worker to start params instead of
  config.\n* `Logger` type rework, colorful logger are possible.\n\n## 0.1.3.0  --
  2020-09-28\n* Rename `newBufferedInput/Output` to `newBufferedInput'/Output'`, add
  default chunk `newBufferedInput/Output`.\n* Remove `ghc-pirm` depends.\n* Make library
  works with GHC 8.6 and 8.8 again.\n\n## 0.1.2.0  -- 2020-09-28\n\n* Add file offset
  interface back, see `FilePtr` and `FilePtrT`.\n* Remove `checkFileTClosed` from
  `Z.IO.FileSystem.Threaded`.\n* Take c source file list from libuv Makefile, remove
  lib requirements on linux and osx.\n* Fix `uv_check_t` initiate order in accept
  loop, which cause a segfault.\n\n## 0.1.1.2  -- 2020-09-25\n\n* Fix macOS build
  problem caused by missing zconf.h.\n* Add more tests(TCP, IPC).\n\n## 0.1.1.0  --
  2020-09-19\n\n* Add stream utilities to `Z.IO.Buffered`.\n* Add `Z.Compression.Zlib`.\n"
basic-deps:
  exceptions: ^>=0.10
  Z-Data: ==0.6.*
  unix-time: '>=0.4.7 && <=0.5'
  stm: ^>=2.5
  base: '>=4.12 && <5.0'
  time: '>=1.9 && <=2.0'
  unordered-containers: ^>=0.2
  containers: ^>=0.6
  primitive: '>=0.7.1 && <0.7.2'
  Z-IO: -any
all-versions:
- 0.1.0.0
- 0.1.1.1
- 0.1.1.2
- 0.1.2.0
- 0.1.3.0
- 0.1.4.0
- 0.1.5.0
- 0.1.5.1
- 0.1.5.2
- 0.1.6.0
- 0.1.6.1
- 0.1.7.0
- 0.1.8.0
- 0.1.8.1
- 0.1.9.0
- 0.2.0.0
- 0.3.0.0
- 0.4.0.0
- 0.5.0.0
- 0.6.0.0
- 0.6.1.0
- 0.6.2.0
- 0.6.3.0
author: Z.Haskell Contributors
latest: 0.6.3.0
description-type: markdown
description: |
  ## Z-IO

  [![Hackage](https://img.shields.io/hackage/v/Z-IO.svg?style=flat)](https://hackage.haskell.org/package/Z-IO)
  [![Linux Build Status](https://github.com/ZHaskell/z-io/workflows/ubuntu-ci/badge.svg)](https://github.com/ZHaskell/z-io/actions)
  [![MacOS Build Status](https://github.com/ZHaskell/z-io/workflows/osx-ci/badge.svg)](https://github.com/ZHaskell/z-io/actions)
  [![Windows Build Status](https://github.com/ZHaskell/z-io/workflows/win-ci/badge.svg)](https://github.com/ZHaskell/z-io/actions)
  [![Docker Build Status](https://github.com/ZHaskell/z-io/workflows/docker-ci/badge.svg)](https://github.com/ZHaskell/z-io/actions)

  This package is part of [Z.Haskell](https://z.haskell.world) project, provides basic IO operations:

  * IO resource management, resource pool
  * File system operations
  * Network: DNS, TCP, UDP and IPC
  * Buffered input and output
  * Process management
  * Environment settings
  * High performance logger
  * High performance low resolution timer

  ## Requirements

  * A working haskell compiler system, GHC(>=8.6), cabal-install(>=2.4), hsc2hs.
  * Tests need  [hspec-discover](https://hackage.haskell.org/package/hspec-discover).

  ## Example usage

  ```haskell
  > :set -XOverloadedStrings
  > import Z.IO.Network
  > import Z.IO.Resource
  > import Z.IO.Buffered
  >
  > -- call getAddrInfo to perform DNS
  > head <$> getAddrInfo Nothing "www.bing.com" "http"
  AddrInfo {addrFlags = [AI_ADDRCONFIG,AI_V4MAPPED], addrFamily = SocketFamily 2, addrSocketType = SocketType 1, addrProtocol = ProtocolNumber 6, addrAddress = 204.79.197.200:80, addrCanonName = ""}
  >
  > import qualified Z.Data.Text as T
  > -- send a simple HTTP request
  > :{
  let addr = ipv4 "13.107.21.200" 80
  in withResource (initTCPClient defaultTCPClientConfig{ tcpRemoteAddr = addr}) $ \ tcp -> do
      i <- newBufferedInput tcp
      o <- newBufferedOutput tcp
      writeBuffer o "GET http://www.bing.com HTTP/1.1\r\nHost: www.bing.com\r\n\r\n"
      flushBuffer o
      readBuffer i >>= pure . T.validate
  :}
  "HTTP/1.1 200 OK\r\nDate: Sat, 19 Sep 2020 06:11:08 GMT\r\nContent-Length: 0\r\n\r\n"
  >
  > -- Start a TCP echo server, use @nc -v localhost 8080@ to test
  > :{
  startTCPServer defaultTCPServerConfig{
      tcpListenAddr = SocketAddrIPv4 ipv4Loopback 8080} $ \ tcp -> do
          i <- newBufferedInput tcp
          o <- newBufferedOutput tcp
          forever $ readBuffer i >>= writeBuffer o >> flushBuffer o
  }
  :}
  ```

  ## Dev guide

  ```bash
  # get code
  git clone --recursive git@github.com:ZHaskell/z-io.git
  cd z-io
  # build
  cabal build
  # test
  cabal run Z-IO-Test
  # install
  cabal install
  # generate document
  cabal haddock
  ```
license-name: BSD-3-Clause
