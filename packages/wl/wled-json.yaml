all-versions:
- 0.0.1.0
author: Andreas Ländle
basic-deps:
  aeson: '>=2.2.3 && <2.3'
  barbies: '>=2.0.5 && <2.2'
  base: '>=4.7 && <5'
  bytestring: '>=0.11.5.3 && <0.13'
  deriving-aeson: '>=0.2.9 && <0.3'
  http-conduit: '>=2.3.9.1 && <2.4'
  rhine: '>=1.4.0.1 && <1.6'
  wled-json: '>=0'
changelog: |-
  # Changelog for `wled-json`

  Hopefully all notable changes to this project will be documented in this file.

  The project adheres to the [Haskell Package Versioning Policy](https://pvp.haskell.org/).

  ## Unreleased

  ## 0.0.1.0 - Initial release - 2024-12-02

  - Core Functionality:
    - Basic connection to WLED devices
    - Setting color, brightness, etc.
  - Octolamp Support:
    - Initial support for Octolamp-specific features (provide the French flag)
changelog-type: markdown
description: "# wled-json ✨\n\nHaskell bindings for controlling WLED devices, with
  a focus on Octolamps\n\n<p align=\"center\">\n  <img src=\"./images/octolamp.jpg\"
  alt=\"Octolamp showing french flag\" width=\"50%\"/>\n</p>\n\n## Introduction \U0001F4A1\n\nThis
  Haskell library provides a convenient interface for interacting with WLED devices,
  particularly those based on the popular Octolamp design. It leverages the WLED API
  (https://kno.wled.ge/) to allow you to control various aspects of your LED lights,
  including:\n\n- **Color:** Set the color of your lights using various color spaces
  (RGB, HSV, etc.)\n- **Brightness:** Adjust the overall brightness of your lights\n\n##
  Installation ⚙️\n\n```bash\n# Using cabal\ncabal add wled-json\n\n# Using stack\nstack
  add wled-json\n```\n\n## Usage \U0001F4F2\n\n```haskell\nimport           Control.Concurrent\nimport
  \          WLED.Device\nimport           WLED.Octocat.Flags (france)\nimport           WLED.Types\n\nmain
  :: IO ()\nmain = do\n    -- Connect to a WLED device\n    lampState <- getLampState
  wledUrl\n    case lampState of\n        Left errMsg -> putStrLn errMsg\n        Right
  initialState -> do\n            -- Display the French flag on an Octolamp\n            _
  <- setLampState wledUrl france\n\n            -- Just sleep one second\n            threadDelay
  1000000\n            \n            -- Restore the initial state\n            Right
  currentState <- getLampState wledUrl\n            _ <- setLampState wledUrl (diff
  currentState initialState)\n            pure ()\n  where\n    wledUrl = \"http://192.168.178.34\"\n\n```\n\n##
  Features \U0001F44D\n\n- Comprehensive WLED API coverage\n- Type-safe interactions\n-
  Easy-to-use API\n- Specific support for Octolamps\n\n## Contributing \U0001F91D\n\nContributions
  are welcome! Please feel free to open an issue or submit a pull request.\n\n## License
  ✌️\n\n[BSD-3-Clause](./LICENSE)\n"
description-type: markdown
hash: 2906e23c7d1adff790312bdda16310e07715d6c94a8f563922104b9caf3c72a4
homepage: https://github.com/alaendle/wled-json#readme
latest: 0.0.1.0
license-name: BSD-3-Clause
maintainer: Andreas Ländle
synopsis: Convenient interface for interacting with WLED devices
test-bench-deps:
  QuickCheck: '>=0'
  aeson: '>=0'
  base: '>=4.7 && <5'
  hspec: '>=0'
  wled-json: '>=0'
