all-versions:
- '0.4'
- '0.5'
- '0.6'
- '0.7'
- '0.8'
- '0.9'
- '0.10'
- '0.12'
- '0.13'
- '0.14'
author: Stefan Saasen
basic-deps:
  base: <5 && >=3
  cmdargs: '>=0.10'
  directory: '>=1.1'
  filemanip: '>=0.3.6.2'
  filepath: '>=1.3'
  fsnotify: '>=0.2.1'
  json: '>=0.7'
  process: '>=1.1'
  system-filepath: '>=0.4.7'
  time: '>=1.4'
  unix: '>=0'
changelog: ''
changelog-type: ''
description: "Spy\n===\n\nSpy is a compact file system watcher for Mac OS X and Linux
  (Note: Should work\non Windows but is currently untested).\n\n\nUsage\n=====\n\nSpy
  expects a single argument, the directory or a single file to watch. Spy\ncurrently
  supports two different modes: watch and run mode.\nPress `CTRL-D` to stop watching
  for file system changes.\n\nWatch mode\n-----------\n\nIn output mode Spy will print
  the path to a modified file to STDOUT (followed\nby a newline) whenever a file modification
  (new file added, file modified, file\ndeleted) occurs.\n\n    $> spy watch .\n    path/to/modified/file\n\nBecause
  watch is the default mode you can omit the `watch` command if you want:\n\n    $>
  spy .\n\nIt's possible to watch a single file (this obviously only shows changes
  to that\nparticular file):\n\n    $> spy /path/to/file\n\nThe default format is
  the full path to the modified file followed by a newline.\nTo make it easier to
  parse the output, the `--format=json` changes the output\nto be printed formatted
  as a JSON object (again followed by a newline).\n\n    $> spy watch --format=json
  .\n    {\"path\":\"/path/to/modified.file\",\"flag\":\"Added\",\"time\":\"2012-12-20
  11:26:56.859456 UTC\"}\n\nFlag is one of \"Added\", \"Modified\", \"Removed\".\n\n\nFor
  directories the following options apply:\n\nAn optional second argument can be used
  to filter the files in the given\ndirectory using a glob pattern:\n\n    $> spy
  watch /path/to/directory \"*.md\"\n\n\nRun mode\n--------\n\nIn run mode Spy will
  execute a given command whenever a file modification\noccurs without printing modifications
  to stdout. The command will be executed\nwith the path to the modified file as the
  last argument.\n\n    $> spy run \"./run-build.sh\"\n\nIn the example above the
  shell script `run-build.sh` would be executed with the\npath to the modified file
  as the first argument.\n\nIf the command to be executed does not expect any (additional)
  arguments the\n`--notify-only` flag can be used. This will cause spy to execute
  the command\nwithout passing the path as an argument:\n\n    $> spy run --notify-only
  \"rake test\" .\n    \nTo compile Spy for example use:\n\n    $> spy run -n \"cabal
  build\" src\n\n\nInstallation\n============\n\nBinary distribution\n-------------------\n\nThe
  binary distribution contains a 64bit binary compiled for Mac OS X or Linux.\n\nDownload
  the tarball from https://bitbucket.org/ssaasen/spy/downloads and run \"make install\"
  to copy the binary and the man page into the correct target directories:\n\n    $>
  curl -OL https://bitbucket.org/ssaasen/spy/downloads/spy-PLATFORM-ARCH-VERSION.tar.gz\n
  \   $> tar xfz spy-PLATFORM-ARCH-VERSION.tar.gz\n    $> cd spy\n    $> make install\n\nThe
  user manual should now be available via `man spy` and the `spy` executable should
  be on your `$PATH`.\n\nHomebrew on Mac OS X?\n---------------------\n\nYou can use:\n\n
  \   brew tap juretta/spy\n    brew install spy\n    \nTo install the latest spy
  release.\n\n\nSource distribution\n-------------------\n\nYou need the Haskell platform
  installed and cabal-install available on your $PATH.\n\nTo install spy from hackage
  simply run:\n\n    $> cabal install spy\n\nDone!\n\nTo install spy from git you
  need [the Haskell Tool Stack](https://docs.haskellstack.org) installed and `stack`
  available on your $PATH:\n\n    $> git@bitbucket.org:ssaasen/spy.git\n    $> cd
  spy\n    $> stack install\n\n\n\n"
description-type: markdown
hash: c4ec4021c301e0ae2c4d9b1c09640d656c59b110439d0302c65c785221d31dd1
homepage: https://bitbucket.org/ssaasen/spy
latest: '0.14'
license-name: BSD-3-Clause
maintainer: stefan@saasen.me
synopsis: A compact file system watcher for Mac OS X, Linux and Windows
test-bench-deps:
  HUnit: '>=0'
  QuickCheck: '>=2.4.0.1'
  base: <5 && >=3
  cmdargs: '>=0.10'
  directory: '>=1.1'
  filemanip: '>=0.3.6.2'
  filepath: '>=1.3'
  fsnotify: '>=0.0.4'
  json: '>=0.7'
  process: '>=1.1'
  system-filepath: '>=0.4.7'
  test-framework: '>=0.3.3'
  test-framework-hunit: '>=0'
  test-framework-quickcheck2: '>=0.2.9'
  time: '>=1.4'
  unix: '>=0'
