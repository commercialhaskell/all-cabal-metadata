all-versions:
- 0.1.0
- 0.2.0
- 0.3.0
- 0.4.0
- 0.4.1
- 0.4.2
- 0.4.3
author: Jonathan M. Lange <jml@mumak.net>
basic-deps:
  base: '>=4.9 && <5'
  bytestring: '>=0'
  cryptonite: '>=0'
  memory: '>=0'
  optparse-applicative: '>=0'
  protolude: '>=0.3 && <0.4'
  spake2: '>=0'
changelog: |
  # Changelog

  ## 0.4.3 (2020-11-19)

  * general maintenance and removal of bitrot.
  * Pin protolude to 0.3.x to prevent further breakage due to changes in
    protolude.

  ## 0.4.2 (2018-01-22)

  * Minor release to allow docs to be generated on Hackage.

  ## 0.4.1 (2018-01-17)

  * Fixed potential security issue in Ed25519 (see
    https://github.com/jml/haskell-spake2/pull/16), present since
    initial release. Please update as soon as possible.

  ## 0.4.0 (2017-11-22)

  * Change `createSessionKey` inputs to be `inbound`, `outbound` rather than
    `side A`, `side B`. If you were passing as `side A`, `side B` before, it
    should continue to work, unless you were deliberately triggering an error
    condition.
  * Add `spake2Exchange`, for much more convenient exchanges.

  ## 0.3.0 (2017-11-11)

  * Depend on protolude 0.2 minimum

  ## 0.2.0 (2017-06-08)

  * `Group` typeclass split into `Group` and `AbelianGroup` typeclasses

  ## 0.1.0 (2017-05-28)

  Initial release
changelog-type: markdown
description: |-
  This library implements the SPAKE2 password-authenticated key exchange
  ("PAKE") algorithm. This allows two parties, who share a weak password, to
  safely derive a strong shared secret (and therefore build an
  encrypted+authenticated channel).
description-type: haddock
hash: 037ca234601edaea619b8fda27d0035a9be85d60c8ac55051d9cae7cbbeae2c3
homepage: https://github.com/LeastAuthority/haskell-spake2#readme
latest: 0.4.3
license-name: LicenseRef-Apache
maintainer: Least Authority TFA GmbH
synopsis: Implementation of the SPAKE2 Password-Authenticated Key Exchange algorithm
test-bench-deps:
  QuickCheck: '>=0'
  aeson: '>=0'
  base: '>=4.9 && <5'
  bytestring: '>=0'
  cryptonite: '>=0'
  memory: '>=0'
  process: '>=0'
  protolude: '>=0.3 && <0.4'
  spake2: '>=0'
  tasty: '>=0'
  tasty-hspec: '>=0'
