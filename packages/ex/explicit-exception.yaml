homepage: http://wiki.haskell.org/Exception
changelog-type: ''
hash: 206c0346082616457f577e0e3145d9c5afda2ef7b6b7688d805e19b8594a224c
test-bench-deps: {}
maintainer: Henning Thielemann <haskell@henning-thielemann.de>
synopsis: Exceptions which are explicit in the type signature.
changelog: ''
basic-deps:
  base: '>=2 && <5'
  semigroups: '>=0.1 && <1.0'
  transformers: '>=0.2 && <0.7'
  deepseq: '>=1.1 && <1.5'
all-versions:
- 0.0.1
- 0.0.2
- '0.1'
- 0.1.0.1
- 0.1.1
- 0.1.2
- 0.1.3
- 0.1.4
- 0.1.5
- 0.1.6
- 0.1.7
- 0.1.7.1
- 0.1.7.2
- 0.1.7.3
- 0.1.8
- 0.1.9
- 0.1.9.1
- 0.1.9.2
- 0.1.10
- 0.1.10.1
- '0.2'
author: Henning Thielemann <haskell@henning-thielemann.de>
latest: '0.2'
description-type: haddock
description: |-
  Synchronous and Asynchronous exceptions which are explicit in the type signature.
  The first ones are very similar to 'Either' and 'Control.Monad.Error.ErrorT'.
  The second ones are used for 'System.IO.readFile' and 'System.IO.hGetContents'.
  This package is a proposal for improved exception handling in Haskell.
  It strictly separates between handling of
  exceptional situations (file not found, invalid user input,
  see <http://wiki.haskell.org/Exception>) and
  (programming) errors (division by zero, index out of range,
  see <http://wiki.haskell.org/Error>).
  Handling of the first one is called \"exception handling\",
  whereas handling of errors is better known as \"debugging\".

  For applications see the packages @midi@, @spreadsheet@, @http-monad@.

  Although I'm not happy with the identifier style of the Monad Transformer Library
  (partially intended for unqualified use)
  I have tried to adopt it for this library,
  in order to let Haskell programmers get accustomed easily to it.

  See also: @unexceptionalio@
license-name: BSD-3-Clause
