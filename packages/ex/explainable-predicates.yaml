homepage: https://github.com/cdsmith/explainable-predicates
changelog-type: markdown
hash: 1b8d9c98a0eea7782bf129313dbf174b46733aa13a09f2c010423e9a7a9ee57f
test-bench-deps:
  base: -any
  hspec: -any
  doctest-exitcode-stdio: -any
  doctest-lib: -any
  explainable-predicates: -any
maintainer: Chris Smith <cdsmith@gmail.com>
synopsis: Predicates that can explain themselves.
changelog: |
  # Revision history for explainable-predicates

  ## 0.1.2.1 -- 2021-12-20

  * Builds with GHC 9.2.1

  ## 0.1.2.0 -- 2021-09-25

  * HUnit and Hspec integration is now available in `Test.Predicates.HUnit`.

  ## 0.1.1.0 -- 2021-09-25

  * `Predicate` now has a `Contravariant` instance.
  * `==~` is an infix synonym for `accept`.
  * Cabal `regex` and `containers` flags (default true) enable regex and
    container predicates, respectively.
  * Cabal `dev` flag (default false) turns GHC warnings into errors.
  * The `inBranch` and `qADT` combinators are now available for more convenient
    matching of algebraic data types and fields.
  * QuickCheck integration is now available in `Test.Predicates.QuickCheck`.

  ## 0.1.0.0 -- 2021-09-18

  * First version. Released on an unsuspecting world.
basic-deps:
  base: '>=4.12.0 && <4.17'
  syb: '>=0.7.2 && <0.8'
  HUnit: '>=1.3.0 && <1.7'
  array: '>=0.5.2 && <0.6'
  regex-tdfa: '>=1.3.1 && <1.4'
  QuickCheck: '>=2.8 && <2.15'
  template-haskell: '>=2.13.0 && <2.19'
  mono-traversable: '>=1.0.15 && <1.1'
all-versions:
- 0.1.0.0
- 0.1.1.0
- 0.1.2.0
- 0.1.2.1
author: Chris Smith <cdsmith@gmail.com>
latest: 0.1.2.1
description-type: haddock
description: |-
  Explainable predicates are essentially functions from types
  to 'Bool' which can additionally describe themselves and
  explain why an argument does or doesn't match.  They are
  intended to be used during unit tests to provide better
  error messages when tests fail.  For example, if a
  collection is missing an element, an explainable predicate
  can tell you which element is missing.
license-name: BSD-3-Clause
