homepage: https://github.com/marhop/exiftool-haskell
changelog-type: markdown
hash: 5311acb0331ec7cc57aa6878209124a19ee032877a835a2a7163697f0af751f1
test-bench-deps: {}
maintainer: martin@hoppenheit.info
synopsis: Haskell bindings to ExifTool
changelog: |
  # Revision history for exiftool

  ## 0.1.1.0 -- 2021-04-24

  * The getMeta* functions now extract unknown tags as well (exiftool -U option).
  * Improved documentation in [README](README.md).
  * Dependency version bumps.

  ## 0.1.0.0 -- 2020-09-14

  * Initial release.
basic-deps:
  bytestring: '>=0.10.8 && <0.12'
  base: '>=4.12 && <5'
  unordered-containers: '>=0.2.12 && <0.3'
  text: '>=1.2.3 && <1.3'
  process: '>=1.6.5 && <1.7'
  base64: '>=0.4.2 && <0.5'
  hashable: '>=1.3.0 && <1.4'
  temporary: '>=1.3 && <1.4'
  scientific: '>=0.3.6 && <0.4'
  string-conversions: '>=0.4.0 && <0.5'
  aeson: '>=1.5.4 && <1.6'
  vector: '>=0.12.1 && <0.13'
all-versions:
- 0.1.0.0
- 0.1.1.0
author: Martin Hoppenheit
latest: 0.1.1.0
description-type: markdown
description: |
  # exiftool-haskell

  [![Hackage](https://img.shields.io/hackage/v/exiftool)](https://hackage.haskell.org/package/exiftool)
  [![CI](https://github.com/marhop/exiftool-haskell/actions/workflows/ci.yml/badge.svg)](https://github.com/marhop/exiftool-haskell/actions/workflows/ci.yml)

  Haskell bindings to the [ExifTool](https://exiftool.org) command-line
  application that enable reading, writing and deleting metadata in various file
  formats.

  Full documentation is on [Hackage](https://hackage.haskell.org/package/exiftool/docs/ExifTool.html).
  A short code example:

  ```haskell
  {-# LANGUAGE OverloadedLists #-}
  {-# LANGUAGE OverloadedStrings #-}

  import Data.HashMap.Strict ((!?))
  import ExifTool

  example :: IO ()
  example =
    withExifTool $ \et -> do
      -- Read metadata, with exact (!?) and fuzzy (~~) tag lookup.
      m <- getMeta et "a.jpg"
      print $ m !? Tag "EXIF" "ExifIFD" "DateTimeOriginal"
      print $ m ~~ Tag "EXIF" "" "XResolution"
      print $ m ~~ Tag "XMP" "" ""
      -- Write and delete metadata.
      setMeta et [(Tag "XMP" "XMP-dc" "Description", String "...")] "a.jpg"
      deleteMeta et [Tag "XMP" "XMP-dc" "Description"] "a.jpg"
  ```
license-name: MIT
