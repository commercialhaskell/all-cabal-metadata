homepage: https://git.tryp.io/tek/exon
changelog-type: markdown
hash: 4afd0a2a1190c785bd9e5f5b1b33b592dd0696e6c00f21bb533c4771e8427d5d
test-bench-deps:
  exon: -any
  base: '>=4.12 && <5'
  tasty-hedgehog: -any
  incipit-base: '>=0.2'
  criterion: -any
  hedgehog: -any
  tasty: -any
  template-haskell: -any
maintainer: hackage@tryp.io
synopsis: Customizable Quasiquote Interpolation
changelog: |
  # 1.1.0.0

  * Add `exonConcat` to `ExonAppend`. The function is pulled out of `exonBuild` to allow using a different way of folding
    the segment list.

  # 1.0.0.0

  * Rewrite the main logic, splitting it across multiple classes.
  * Automatically unwrap `Generic` newtype segments.
  * Use builders like `Text.Builder`, unwrapping `Generic` newtypes of the result type.
  * Don't treat whitespace as special in the default quoter.

  # 0.2.0.0

  * Add `exonws`, a variant that preserves whitespace.
  * Add `exonWith`, a constructor for custom quasiquoters.

  # 0.1.1.0

  * Add `Exon` instance for `String -> String`, used by `showsPrec`.
basic-deps:
  flatparse: '>=0.3.5.1'
  base: '>=4.12 && <5'
  type-errors-pretty: '>=0.0.1.1'
  incipit-base: '>=0.2'
  ghc-hs-meta: '>=0.1'
  generics-sop: '>=0.5.1.1'
  template-haskell: -any
all-versions:
- 0.5.0.0
- 1.0.1.0
- 1.1.0.0
author: Torsten Schmits
latest: 1.1.0.0
description-type: markdown
description: |
  This Haskell library provides string interpolation in quasiquotes, allowing you to build strings like this:

  ```haskell
  animal = "snake"
  location = "a tree"
  [exon|#{animal} in #{location}|]
  -- "snake in a tree"
  ```

  Each step of the process is customizable based on the result type of the quote, making it possible to construct strings
  for arbitrary types.
  For example, `String -> String` is the type used by `showsPrec`, which can be a bit of a hassle to write:

  ```haskell
  data Record =
    Record {
      number :: Int,
      maybeNumber :: Maybe Int,
      value :: Value
    }

  instance Show Record where
    showsPrec d Record {..} =
      showParen (d > 10) [exon|Record #{showsPrec 11 number} #{showsPrec 11 maybeNumber} #{showsPrec 11 value}|]
  ```

  [hackage]: https://hackage.haskell.org/package/exon/docs/Exon.html
license-name: BSD-2-Clause-Patent
