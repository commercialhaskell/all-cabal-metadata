all-versions:
- '0.1'
- 0.1.0.1
- 0.1.1
- '0.2'
- '0.3'
- 0.3.1
- 0.3.2
- 0.3.3
- 0.3.3.1
- '0.4'
- '0.5'
- '0.6'
- 0.6.1
- '0.7'
- '0.8'
- 0.8.0.1
- 0.8.0.2
- 0.8.1
- 0.8.2.1
- 0.8.3
- 0.10.0
- 0.10.1
- 0.10.2
- 0.10.3
- 0.10.4
- 0.10.5
- 0.10.7
author: Edward A. Kmett
basic-deps:
  base: '>=4.5 && <5'
  mtl: '>=2.0 && <2.4'
  stm: '>=2.2 && <3'
  template-haskell: '>=2.7 && <2.21'
  transformers: '>=0.4 && <0.7'
changelog: "0.10.7 [2022.12.04]\r\n-------------------\r\n* On pre-8.0 GHCs, drop
  the `call-stack` dependency. This dependency was\r\n  introduced in `exceptions-0.10.6`,
  but it induced breakage in libraries\r\n  that derived instances of `MonadThrow`,
  `MonadCatch`, or `MonadMask` for\r\n  newtypes without first enabling `ConstraintKinds`
  and `FlexibleContexts`.\r\n  (Later versions of GHC do not require these language
  extensions for derived\r\n  instances, so only old GHCs were affected.) To avoid
  breakage, `exceptions`\r\n  no longer uses `HasCallStack` constraints on pre-8.0
  versions of GHC.\r\n\r\n  Note that `exceptions` still uses `HasCallStack` constraints
  on GHC 8.0 and\r\n  later, and as a result, these versions of GHC are unaffected
  by this change.\r\n\r\n0.10.6 [2022.11.30]\r\n-------------------\r\n* The class
  methods and functions in `Control.Monad.Catch` now have\r\n  `HasCallStack` constraints.\r\n*
  Drop support for GHC 7.0 and 7.2.\r\n\r\n0.10.5 [2022.05.07]\r\n-------------------\r\n*
  Allow building with `transformers-0.6.*` and `mtl-2.3.*`.\r\n\r\n0.10.4 [2019.12.26]\r\n-------------------\r\n*
  Allow building with `template-haskell-2.16.*`.\r\n* Only depend on `transformers-compat`
  on old versions of GHC.\r\n\r\n0.10.3 [2019.08.27]\r\n-------------------\r\n* `MonadThrow`
  instance for the strict `ST` monad.\r\n\r\n0.10.2 [2019.05.02]\r\n-------------------\r\n*
  Allow building with `base-4.13`/`template-haskell-2.15`.\r\n\r\n0.10.1 [2019.03.26]\r\n-------------------\r\n*
  Define a `MonadFail` instance for `CatchT`.\r\n* Allow `QuickCheck-2.13` in the
  test suite.\r\n\r\n0.10.0\r\n------\r\n* Fix a regression in 0.9.0 whereby the non-IO
  effects in `bracket`'s `use`\r\n  action were not visible to the `release` action,
  and the non-IO effects in the\r\n  `release` action were not visible after the `bracket`
  call.\r\n* The type of `generalBracket` was changed in order to restore those non-IO\r\n
  \ effects, so if you are a library author that provides a `MonadMask` instance,\r\n
  \ you will need to update your implementation of this method.\r\n* Add `MonadMask`
  instance for `MaybeT`\r\n* Add `onError` function whose action also runs on errors
  which are not\r\n  exceptions, such as a `Nothing` or a `Left`.\r\n\r\n0.9.0\r\n-----\r\n*
  Add `generalBracket` to the `MonadMask` typeclass, allowing more\r\n  valid instances.\r\n\r\n
  \ Note that functions such as `bracket` and `finally` are now based off of\r\n  `generalBracket`,
  so if you are a library author that provides a `MonadMask`\r\n  instance, you will
  need to provide an implementation of this method.\r\n* Add `MonadMask` instances
  for `ExceptT` and `ErrorT`\r\n\r\n0.8.3\r\n-----\r\n* `MonadCatch` and `MonadMask`
  instances for `Either SomeException`\r\n\r\n0.8.1\r\n-----\r\n* Support for throwing
  in the `template-haskell` `Q` monad\r\n* Support for `transformers` 0.5\r\n\r\n0.8.0.1\r\n-------\r\n*
  Resolved warnings on GHC 7.10 and with transformers 0.4.\r\n\r\n0.8\r\n---\r\n*
  Use `transformers-compat` to allow support for `ExceptT` even on older `transformers`
  versions.\r\n\r\n0.7\r\n---\r\n* `stm` support\r\n\r\n0.6\r\n---\r\n* Split out
  `MonadMask`\r\n* Added `transformers` 0.4 support\r\n\r\n0.5\r\n---\r\n* Added instances
  of `MonadThrow` for `ListT`, `MaybeT`, `ErrorT` and `ContT`.\r\n\r\n0.4\r\n---\r\n*
  Factored out a separate `MonadThrow`.\r\n\r\n0.3.3.1\r\n-------\r\n* QuickCheck
  dependency bump\r\n\r\n0.3.3\r\n-----\r\n* Relicensed under the 3-clause BSD license.\r\n\r\n0.3.2\r\n-----\r\n*
  Better documentation for `CatchT`.\r\n* Added `handle`-like analogues for parity
  with `Control.Exception`.\r\n\r\n0.3.1\r\n-----\r\n* Fixed test suite.\r\n\r\n0.3\r\n---\r\n*
  Moved `CatchT` to `Control.Monad.Catch.Pure` to make it clear it isn't required
  for working with `IO`.\r\n\r\n0.2.1\r\n---\r\n* Added `mask_` and `uninterruptibleMask_`
  to `Control.Monad.Catch`.\r\n\r\n0.2\r\n---\r\n* Added `uninterruptibleMask` to
  `MonadCatch`.\r\n\r\n0.1.1\r\n-----\r\n* Flagged `Control.Monad.Catch` as `Trustworthy`\r\n\r\n0.1.0.1\r\n-----\r\n*
  License fix. We were accidentally listing both an APL and BSD3 license in the same
  module\r\n\r\n0.1\r\n---\r\n* Repository initialized\r\n"
changelog-type: markdown
description: "exceptions\r\n==========\r\n\r\n[![Hackage](https://img.shields.io/hackage/v/exceptions.svg)](https://hackage.haskell.org/package/exceptions)
  [![Build Status](https://github.com/ekmett/exceptions/workflows/Haskell-CI/badge.svg)](https://github.com/ekmett/exceptions/actions?query=workflow%3AHaskell-CI)\r\n\r\nThis
  package provides (optionally pure) extensible exceptions that are compatible with
  the monad transformer library.\r\n\r\nContact Information\r\n-------------------\r\n\r\nContributions
  and bug reports are welcome!\r\n\r\nPlease feel free to contact me through github
  or on the #haskell IRC channel on irc.freenode.net.\r\n\r\n-Edward Kmett\r\n"
description-type: markdown
hash: 60ccc2277f8fa98a1a03c42afd9c589ba33ce208eaaef7d69bfbb42ce09d1816
homepage: http://github.com/ekmett/exceptions/
latest: 0.10.7
license-name: BSD-3-Clause
maintainer: Edward A. Kmett <ekmett@gmail.com>
synopsis: Extensible optionally-pure exceptions
test-bench-deps:
  QuickCheck: '>=2.5 && <2.15'
  base: '>=0'
  exceptions: '>=0'
  mtl: '>=2.0'
  stm: '>=0'
  template-haskell: '>=0'
  test-framework: '>=0.8 && <0.9'
  test-framework-hunit: '>=0.3 && <0.4'
  test-framework-quickcheck2: '>=0.3 && <0.4'
  transformers: '>=0.4 && <0.7'
