all-versions:
- 0.0.1
- 0.0.2
- 0.0.3
- 0.0.4
author: Gianluca Guarini
basic-deps:
  async: '>=2.1 && <2.2'
  base: '>=4.9 && <4.10'
  process: '>=1.4 && <1.5'
changelog: |
  # Revision history for executor

  ## 0.0.4  -- 2017-08-27

  * Add better unit test
  * Deprecate `execSync` and `execListSync` in favor of `exec` and `execSequenceSync`
  * Return IO (String) to display the result of the commands triggered

  ## 0.0.3  -- 2017-08-20

  * Reducing unecessary code

  ## 0.0.2  -- 2017-08-20

  * Make the code a bit cleaner and consistent

  ## 0.0.1  -- 2017-08-19

  * First version. Released on an unsuspecting world.
changelog-type: markdown
description: |
  # executor
  Haskell module to execute single or multiple shell commands

  [![Build Status][travis-image]][travis-url]
  [![MIT License][license-image]][license-url]

  # API

  ## exec

  Execute a single shell command returning its output

  ```hs
  import Executor (exec)

  main = do
    -- execute a simple `ls` in the current folder
    res <- exec "echo hi"
    -- hi\n
  ```

  ## execSequenceSync

  Execute a list of shell commands in sequence synchronously returning their results in a list

  ```hs
  import Executor (execSequenceSync)

  main = do
    -- execute synchronously the following commands
    res <- execSequenceSync [
        "echo hi",
        "sleep 1",
        "echo goodbye"
      ]
    -- ["hi\n", "", "goodbye\n"]
  ```

  [travis-image]:https://img.shields.io/travis/GianlucaGuarini/executor.svg?style=flat-square
  [travis-url]:https://travis-ci.org/GianlucaGuarini/executor

  [license-image]:http://img.shields.io/badge/license-MIT-000000.svg?style=flat-square
  [license-url]:LICENSE
description-type: markdown
hash: d83a3d61ba4735ac6954c5da6bdb1c55ca289786aec9283db2bd802edc69031b
homepage: https://github.com/GianlucaGuarini/executor
latest: 0.0.4
license-name: MIT
maintainer: gianluca.guarini@gmail.com
synopsis: Shell helpers
test-bench-deps:
  async: '>=2.1 && <2.2'
  base: '>=4.9 && <4.10'
  doctest: '>=0.8.0'
  executor: '>=0'
  hspec: '>=2.2'
  process: '>=1.4 && <1.5'
