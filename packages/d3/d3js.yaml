all-versions:
- 0.1.0.0
author: Nebuta
basic-deps:
  base: '>=4.6 && <4.7'
  mtl: '>=0'
  random: '>=0'
  text: '>=0'
changelog: ''
changelog-type: ''
description: |-
  A library for visualization on a web browser. This works as a DSL that generates JavaScript source code working with D3.js (http://d3js.org/) library.

  You can compose operations with a typed DSL with Haskell's abstraction power.

  This is still an alpha version, and the structure may be changed in the near future.

  * A simplest example: drawing a bar chart

  > import Control.Monad
  > import qualified Data.Text as T
  > import D3JS
  >
  > test :: Int -> IO ()
  > test n = T.writeFile "generated.js" $ reify (box "#div1" (300,300) >>= bars n 300 (Data1D [100,20,80,60,120]))

  You can just put the JavaScript file in an HTML file like the following to show a chart.

  > <html>
  > <head>
  >   <title>Chart</title>
  > </head>
  > <body>
  >   <div id='div1'></div>
  >   <script charset='utf-8' src='http://d3js.org/d3.v3.min.js'></script>
  >   <script charset='utf-8' src='generated.js'></script>
  > </body>
  > </html>

  See "D3JS.Example" for more examples.
description-type: haddock
hash: 5a16cdf43e812a8095ab194643b1fd8fa6ff58f25d47b683dc14aa77370951b4
homepage: https://github.com/nebuta/d3js-haskell
latest: 0.1.0.0
license-name: BSD-3-Clause
maintainer: nebuta.office@gmail.com
synopsis: Declarative visualization on a web browser with DSL approach.
test-bench-deps: {}
