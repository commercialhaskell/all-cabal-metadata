all-versions:
- '1.0'
- 1.0.2
- 1.0.3
- '1.1'
author: Jan Rochel
basic-deps:
  HaLeX: '>=0'
  base: <4.9
  base-unicode-symbols: '>=0'
  boxes: '>=0'
  containers: '>=0'
  containers-unicode-symbols: '>=0'
  fgl: '>=0'
  indentparser: '>=0'
  mtl: '>=0'
  parsec: '>=3.0'
  process: '>=0'
  uuagc: '>=0'
  uuagc-cabal: '>=0'
changelog: ''
changelog-type: ''
description: |-
  Parses a lambda-letrec term; transforms it into a first-order
  term graph representation; minimises the graph by bisimulation
  collapse; reads back a lambda-letrec term which has the same
  unfolding as the original term but is more (maximally) compact.
  If executable "dot" from graphviz is available, the graphs are
  displayed (tested for Linux). The approach is described in an
  ICFP-paper <http://dx.doi.org/10.1145/2628136.2628148> and an
  extended version thereof <http://arxiv.org/abs/1401.1460>.
description-type: haddock
hash: d1bbae17f5811ce5b6e65d5ff83fc45befb51703f5107652d71f7a17f2950038
homepage: http://arxiv.org/abs/1401.1460
latest: '1.1'
license-name: BSD-3-Clause
maintainer: jan@rochel.info
synopsis: Maximal sharing of terms in the lambda calculus with letrec
test-bench-deps: {}
