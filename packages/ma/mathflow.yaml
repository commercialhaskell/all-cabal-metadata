all-versions:
- 0.1.0.0
author: Junji Hashimoto
basic-deps:
  base: '>=4.7 && <5'
  process: '>=0'
  singletons: '>=0'
  template-haskell: '>=0'
changelog: ''
changelog-type: ''
description: "# mathflow(Dependently typed tensorflow modeler)\n\n[![Hackage version](https://img.shields.io/hackage/v/mathflow.svg?style=flat)](https://hackage.haskell.org/package/mathflow)
  \ [![Build Status](https://travis-ci.org/junjihashimoto/mathflow.png?branch=master)](https://travis-ci.org/junjihashimoto/mathflow)\n\nThis
  package provides a model of tensor-operations.\nThe model is independent from tensorflow-binding
  of python and haskell, though this package generates python-code.\ntensor's dimensions
  and constraints are described by dependent types.\nThe tensor-operations are based
  on tensorflow-api.\nCurrently the model can be translated into python-code.\nTo
  write this package, I refer to [this neural network document](https://blog.jle.im/entry/practical-dependent-types-in-haskell-1.html)
  and singletons.\n\n\n# Install\n\nInstall tensorflow of python and this package.\n\n```\n>
  sudo apt install python3 python3-pip\n> pip3 install -U pip\n> pip3 install tensorflow\n>
  git clone git@github.com:junjihashimoto/mathflow.git\n> cd mathflow\n> stack install\n```\n\n#
  Usage\n\n## About model\n\nModel has a type of ```Tensor (dimensions:[Nat]) value-type
  output-type```.\n\n* ```dimensions``` are tensor-dimensions.\n* ```value-type```
  is a value type like Integer or Float of [tensorflow-data-types](https://www.tensorflow.org/programmers_guide/dims_types).
  \n* ```output-type``` is a type of code which this package generates. PyString-type
  is used for generating python-code.\n\nThis package makes tensorflow-graph from
  the mode. The model's endpoint is always a tensor-type.\n\nAt first write graph
  by using arithmetic operators like (+,-,*,/), %* (which is matrix multiply) and
  tensorflow-functions.\nMathflow.{TF,TF.NN,TF.Train} packages define Tensorflow-functions.\n\nA
  example is below.\n\n```\ntestMatMul :: Tensor '[2,1] Int PyString\ntestMatMul =
  \n  let n1 = (Tensor \"tf.constant([[2],[3]])\") :: Tensor '[2,1] Int PyString\n
  \     n2 = (Tensor \"tf.constant([[2,0],[0,1]])\") :: Tensor '[2,2] Int PyString\n
  \     y = (n2 %* n1) :: Tensor '[2,1] Int PyString\n  in y\n```\n\n\n## Create model
  and run it\n\nWrite tensorflow-model.\n\n```\ntestMatMul :: Tensor '[2,1] Int PyString\ntestMatMul
  = \n  let n1 = (Tensor \"tf.constant([[2],[3]])\") :: Tensor '[2,1] Int PyString\n
  \     n2 = (Tensor \"tf.constant([[2,0],[0,1]])\") :: Tensor '[2,2] Int PyString\n
  \     y = n2 %* n1 :: Tensor '[2,1] Int PyString\n  in y\n```\n\nRun the model.
  This ```run``` function generates python-code and excecute the code by python.\n\n```\nmain
  = do\n  (retcode,stdout,stderr) <- run testMatMul\n  print stdout\n\n```\n"
description-type: markdown
hash: c6b92815f14ca889af888f60540a4a24d218ea051848dacad7c8141f317291be
homepage: https://github.com/junjihashimoto/mathflow#readme
latest: 0.1.0.0
license-name: BSD-3-Clause
maintainer: junji.hashimoto@gmail.com
synopsis: Dependently typed tensorflow modeler
test-bench-deps:
  QuickCheck: '>=0'
  base: '>=0'
  doctest: '>=0'
  hspec: '>=0'
  hspec-server: '>=0'
  mathflow: '>=0'
  shakespeare: '>=0'
  singletons: '>=0'
  template-haskell: '>=0'
  text: '>=0'
