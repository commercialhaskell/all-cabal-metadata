all-versions:
- '0.1'
- 0.1.1
- 0.1.2
- 0.1.3
- 0.1.4
- 0.1.5
- 0.1.6
author: Mark Wotton, Sean Seefried
basic-deps:
  base: '>=2 && <=4.5.0.0'
  bytestring: '>=0'
  cmdargs: '>=0'
  majordomo: ==0.1.6
  monad-loops: '>=0'
  old-locale: '>=0'
  threads: '>=0'
  time: '>=0'
  unix: '>=0'
  zeromq-haskell: '>=0.8.4'
changelog: ''
changelog-type: ''
description: |2


  from http://rfc.zeromq.org/spec:7
  "The Majordomo Protocol (MDP) defines a reliable service-oriented
  request-reply dialog between a set of client applications, a broker
  and a set of worker applications. MDP covers presence, heartbeating,
  and service-oriented request-reply processing. It originated from the
  Majordomo pattern defined in Chapter 4 of the Guide."

  This is an implementation for Haskell.
  Examples of use can be found in echo_worker.hs and mdp_client.hs
  (which doubles as a helpful command line tool for issuing MDP commands)
description-type: markdown
hash: f310dd9042f8f68376b7629dc491f3050644cbbd513a4c38fdc6ed04b9d64ba0
homepage: ''
latest: 0.1.6
license-name: BSD-3-Clause
maintainer: mark@ninjablocks.com, sean@ninjablocks.com
synopsis: Majordomo protocol for ZeroMQ
test-bench-deps: {}
