homepage: https://github.com/lehins/massiv-io
changelog-type: markdown
hash: 36772f6a178514458cc68a7d5079d0c6d34321ad394ec9046e2676a2c665e831
test-bench-deps:
  JuicyPixels: -any
  bytestring: -any
  base: -any
  hspec: -any
  Color: -any
  massiv-io: -any
  massiv-test: -any
  massiv: -any
  criterion: -any
  doctest: '>=0.15'
  random: -any
  QuickCheck: -any
maintainer: alexey@kuleshevi.ch
synopsis: Import/export of Image files into massiv Arrays
changelog: |
  # 1.0.0

  * Update to support `massiv-1.0`

  # 0.4.1

  * Reexport `Default` class.
  * Add support for massiv-0.6
  * Expose `Encode` and `Decode` cosntructors
  * Add `encodeAdhocM` and `decodeAdhocM`
  * Add `writableAdhoc` and `readableAdhoc`
  * Add `displayImageUsingAdhoc`
  * Add `coerceBinaryImage`
  * Add instance for writing binary images: `Image S X Bit` without conversions.
  * Add `selectFileFormat`

  # 0.4.0

  * Adjust insatnces to account for changes in `Color-0.3.0`, namely improvements to Luma
    (`Y'`) and `Y'CBCr` color spaces.

  # 0.3.0

  * Support for `Color-0.2.0`, in particular addition of `Linearity` kind to `RGB` color
    spaces. Pixels are re-exported from `massiv-io`, hence it is a breaking change.

  # 0.2.1

  * Move the package into it's own repository: [lehins/massiv-io](https://github.com/lehins/massiv-io)
  * Addition of instances for `GIF` sequences in `RGB` with `Alpha` and instanced with
    `GifDisposalMethod`
  * Addition of conversion functions: `demoteLumaImage`, `promoteLumaImage`,
    `demoteLumaAlphaImage`, `promoteLumaAlphaImage`
  * Instances for reading and writing images in Luma: `Y'` and `Y'A`

  # 0.2.0

  * Switch to `MonadIO`
  * Write files with durability and atomicity guarantees
  * Switch to `encodeM` and `decodeM`, as well as corresponding `encodeImageM` and `decodeImageM`
  * Addition of `decodeWithMetadataM`
  * Addition of `ConvertError`, `DecodeError` and `EncodeError`.
  * Got rid of `ReadOptions`
  * Switch to `Color` package for pixels and color space coversion

  # 0.1.9

  * Fix `HDR` decoding, i.e. `.hdr` and `.pic` file reading.

  # 0.1.8

  * Fix reading images that have more than 8bit per channel:
    [#85](https://github.com/lehins/massiv/issues/85)

  # 0.1.7

  * Fix compatibility with `JuicyPixels >= 3.3.0`
  * Add `Traversable` instances for all `Pixel` types.
  * Derive a few more instances for `X` and `Y` pixels.
  * Drop dependency on `data-default` in favor of `data-default-class`

  # 0.1.6

  * Made it compatible with new `massiv >= 0.3` as well as the old ones.

  # 0.1.5

  * All decoded images will be read in sequentially, but will have default computation set to `Par`.

  # 0.1.4

  * Fixed wrongful export of `Bit` constructor.
  * Added export of `fromDynamicImage` and `fromAnyDynamicImage`

  # 0.1.3

  * Fixed #22 - Invalid guard against image size
  * Made sure format is inferred from all supported file extensions for auto decoding.

  # 0.1.2

  * Exposed `Elevator` internal functions.
  * Deprecate ColorSpace specific functions (`liftPx`, `foldlPx`, etc.) in favor of Functor,
    Applicative and Foldable.

  # 0.1.1

  * Addition of `Ord` instances to Pixels.

  # 0.1.0

  * Initial Release
basic-deps:
  exceptions: -any
  JuicyPixels: '>=3.3.5'
  bytestring: -any
  unliftio: '>=0.2.12'
  base: '>=4.8 && <5'
  data-default-class: -any
  Color: '>=0.2'
  netpbm: -any
  massiv: '>=1.0.0'
  filepath: -any
  deepseq: -any
  vector: '>=0.10'
all-versions:
- 0.1.0.0
- 0.1.1.0
- 0.1.2.0
- 0.1.3.0
- 0.1.4.0
- 0.1.5.0
- 0.1.6.0
- 0.1.7.0
- 0.1.8.0
- 0.1.9.0
- 0.2.0.0
- 0.2.1.0
- 0.3.0.0
- 0.3.0.1
- 0.4.0.0
- 0.4.1.0
- 1.0.0.0
- 1.0.0.1
author: Alexey Kuleshevich
latest: 1.0.0.1
description-type: markdown
description: |
  # massiv-io

  `massiv-io` is a package that brings together `JuicyPixels`, `Netpbm`, `Color` and `massiv`
  in order to easily read, write and convert images in various formats and color spaces.

  ## Status

  | Language | Github Actions | Coveralls |Gitter.im |
  |:--------:|:--------------:|:---------:|:--------:|
  | ![GitHub top language](https://img.shields.io/github/languages/top/lehins/massiv-io.svg) | [![Build Status](https://github.com/lehins/massiv/workflows/massiv-io-CI/badge.svg)](https://github.com/lehins/massiv-io/actions) | [![Coverage Status](https://coveralls.io/repos/github/lehins/massiv-io/badge.svg?branch=master)](https://coveralls.io/github/lehins/massiv-io?branch=master) | [![Join the chat at https://gitter.im/haskell-massiv/Lobby](https://badges.gitter.im/haskell-massiv/Lobby.svg)](https://gitter.im/haskell-massiv/Lobby?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)

  |      Package       | Hackage | Nightly | LTS |
  |:-------------------|:-------:|:-------:|:---:|
  |  [`massiv-io`](https://github.com/lehins/massiv-io)|                                [![Hackage](https://img.shields.io/hackage/v/massiv-io.svg)](https://hackage.haskell.org/package/massiv-io)|                                                                                                  [![Nightly](https://www.stackage.org/package/massiv-io/badge/nightly)](https://www.stackage.org/nightly/package/massiv-io)|                                                                                   [![Nightly](https://www.stackage.org/package/massiv-io/badge/lts)](https://www.stackage.org/lts/package/massiv-io)|
  |  [`massiv`](https://github.com/lehins/massiv/tree/master/massiv)|                                       [![Hackage](https://img.shields.io/hackage/v/massiv.svg)](https://hackage.haskell.org/package/massiv)|                                                                                                        [![Nightly](https://www.stackage.org/package/massiv/badge/nightly)](https://www.stackage.org/nightly/package/massiv)|                                                                                         [![Nightly](https://www.stackage.org/package/massiv/badge/lts)](https://www.stackage.org/lts/package/massiv)|
  |  [`Color`](https://github.com/lehins/Color/tree/master/Color)|                                       [![Hackage](https://img.shields.io/hackage/v/Color.svg)](https://hackage.haskell.org/package/Color)|                                                                                                        [![Nightly](https://www.stackage.org/package/Color/badge/nightly)](https://www.stackage.org/nightly/package/Color)|                                                                                         [![Nightly](https://www.stackage.org/package/Color/badge/lts)](https://www.stackage.org/lts/package/Color)|
license-name: BSD-3-Clause
