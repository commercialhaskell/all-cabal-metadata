all-versions:
- '1.0'
- '1.1'
author: Nis N. Wegmann
basic-deps:
  haskell2010: '>=0'
changelog: ''
changelog-type: ''
description: |
  Majority
  ========

  The Boyer-Moore Majority Vote Algorithm determines if there in a list of votes
  is a candidate that holds more than half of the majority, and if so, finds
  this candidate. It does so in time linear in the length of the input list and
  constant memory. For a detailed description of the algorithm, see these papers:

    * Wim H. Hesselink,
      \"/The Boyer-Moore Majority Vote Algorithm/\",
      2005;

    * Robert S. Boyer and J. Strother Moore,
      \"/MJRTY - A Fast Majority Vote Algorithm/\",
      1982.

  Install
  -------

  [Haskell Platform]: http://hackage.haskell.org/platform/

  Assuming you have installed the [Haskell Platform][] use cabal:

      $ cabal install majority

  Bugs
  ----

  Comments, bug reports, and patches will be much appreciated:

    * <niswegmann@gmail.com>

  License
  -------

  This library is distributed under a CC0 1.0 Universal Public Domain Dedication:

    * <http://creativecommons.org/publicdomain/zero/1.0/>
description-type: markdown
hash: 182be3e12d433be6275e2537c6b009b4ebd2314979338c1ee73cbd97a36b5a66
homepage: https://github.com/niswegmann/majority
latest: '1.1'
license-name: LicenseRef-PublicDomain
maintainer: niswegmann@gmail.com
synopsis: Boyer-Moore Majority Vote Algorithm
test-bench-deps: {}
