all-versions:
- 0.1.0.0
author: Clinton Mead
basic-deps:
  array: '>=0'
  base: <99
  bytestring: '>=0'
  containers: '>=0'
  kan-extensions: '>=0'
  transformers: '>=0'
  utility-ht: '>=0'
changelog: ''
changelog-type: ''
description: |-
  Basically a broad extension to the 'IArray' interface for all sorts of key/value maps.

  Arrays, maps etc can all use these classes so datatypes can be swapped in and out of algorithms.

  The classes have plenty of functions, but also many default implementations, so making instances for your datatypes should be relatively easy.

  Of course, if you give specialised defintions you might get better performance for some operations.

  Currently only deals with pure structures but mutable structures are next on the todo list.
description-type: haddock
hash: 71ff0a9be640e37f33dbd87c611a11bb2ece90c9d75e7b59d413347f1bc9adca
homepage: https://github.com/clintonmead/map-classes
latest: 0.1.0.0
license-name: BSD-3-Clause
maintainer: clintonmead@gmail.com
synopsis: A set of classes and instances for working with key/value mappings.
test-bench-deps: {}
