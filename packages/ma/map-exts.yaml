all-versions:
- 0.1.0.0
- 0.1.0.1
- 0.1.1.0
- 0.2.0.0
author: Charles Cooper
basic-deps:
  base: '>=4.7 && <5'
  bytestring: '>=0'
  cassava: '>=0'
  containers: '>=0.5.8.1 && <0.6'
changelog: |
  0.2.0.0
  Remove functions which are superseded by upstream

  `containers` has added take, drop, restrictKeys and withoutKeys which are
  equivalent to take, drop, keepKeys and dropKeys from the map-exts API,
  respectively. takeLeft/Right and dropLeft/Right have been exposed.

  containers:drop/take correspond to dropLeft and takeLeft respectively.

  map-exts is now compatible with lts-10.3

  0.1.1.0
  Add version bound for upstream containers

  0.1.0.1
  Improve documentation, examples
changelog-type: markdown
description: |
  # map-extensions

  This module contains some extensions to Data.Map. Some of them are convenience functions.

  It also contains functions to support a split-apply-combine workflow, by representing labeled, multi-dimensional data as multiply nested `Map`s. For instance, a two dimensional matrix with one axis indexed by 'Name's and the other axis labeled by 'Job's, we would represent such a structure with a Lookup2 Name Job Double. Such a structure is not terribly efficient (it takes O(n log(n)) space and O(log(n)) time for insert/update/delete operations with high constant factor owing to all the pointer manipulation), but it is expressive.

  Here is the rough correspondence between split-apply-combine and the verbs used in this package:

  `split`   : `groupBy`

  `apply`   : `fmap`

  `combine` : `foldr/foldMap`

  `reshape` : `transpose`

  For more information, see [the examples](https://github.com/elsen-trading/map-extensions/tree/master/examples).
description-type: markdown
hash: 344e1cffdac3ac08825685a4e5038ff0836ada68e4d404048a3079fb0238657c
homepage: http://github.com/charles-cooper/map-exts#readme
latest: 0.2.0.0
license-name: BSD-3-Clause
maintainer: cooper.charles.m@gmail.com
synopsis: Extensions to Data.Map
test-bench-deps: {}
