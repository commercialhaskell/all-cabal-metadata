all-versions:
- 0.0.1
- 0.0.2
- 0.0.3
- 0.0.4
- 0.1.0
- 0.1.1
author: Kai Zhang
basic-deps:
  base: '>=4.10 && <5'
  bytestring: '>=0'
  bytestring-lexing: '>=0'
  conduit: '>=0'
  double-conversion: '>=0'
  primitive: '>=0.6.4.0'
  singletons: '>=0'
  store: '>=0'
  vector: '>=0.11'
changelog: |-
  v0.0.1 -- 03-17-2020
  ====================

  First release.
changelog-type: markdown
description: |-
  Type-safe linear algebra library
  ================================

  - General matrix types are implemented in native Haskell.

  - The dimensions of matrices are statically typed.

  - Provides bindings to high performance C++ linear algebra libraries such Eigen and Spectra.

  Following GHC extensions may be needed:

  - ScopedTypeVariables
  - RankNTypes
  - TypeFamilies
  - DataKinds

  Example
  -------

  ```haskell
  {-# LANGUAGE DataKinds #-}
  {-# LANGUAGE ScopedTypeVariables #-}
  {-# LANGUAGE Rank2Types #-}
  {-# LANGUAGE GADTs #-}
  {-# LANGUAGE TypeOperators #-}

  import Data.Matrix.Static.LinearAlgebra
  import qualified Data.Matrix.Static.Generic as G
  import qualified Data.Matrix.Static.Dense as D
  import qualified Data.Matrix.Static.Sparse as S
  import Data.Singletons.Prelude hiding ((@@))
  import Data.Singletons.TypeLits
  import Data.Complex
  import System.Random
  import Control.Monad
  import Data.Type.Equality

  f :: (SingI n, (2 <= n - 2) ~ 'True)
    => Matrix n n Double -> Matrix n n (Complex Double)
  f m = let (d, v) = eigS (sing :: Sing 2) m
        in v @@ S.diag d @@ G.transpose v

  main :: IO ()
  main = do
      n <- randomRIO (2, 6)
      vals <- replicateM (n*n) $ randomRIO (-100,100) :: IO [Double]

      withSomeSing (fromIntegral n) $ \sn@(SNat :: Sing n) ->
          let s0 = SNat :: Sing 2
              sn2 = sn %- s0
          in case testEquality (s0 %<= sn2) STrue of
              Just Refl -> do
                  let mat = G.fromList vals :: Matrix n n Double
                  print $ f mat
              Nothing -> error $ "Requiring Matrix size >= 4, but got: " <> show n
  ```
description-type: markdown
hash: fefae4c7215e8fc00ed9ea4b34592958efc93113dbf7a600a0c91a01188a05d2
homepage: https://github.com/kaizhang/matrix-sized#readme
latest: 0.1.1
license-name: BSD-3-Clause
maintainer: kai@kzhang.org
synopsis: Haskell matrix library with interface to C++ linear algebra libraries.
test-bench-deps:
  base: '>=0'
  conduit: '>=0'
  data-ordlist: '>=0'
  ieee754: '>=0'
  matrix-sized: '>=0'
  singletons: '>=0'
  store: '>=0'
  tasty: '>=0'
  tasty-quickcheck: '>=0'
  vector: '>=0'
