all-versions:
- 0.1.0.0
- 0.1.1.0
- 0.1.1.1
- 0.1.2.0
- 0.1.2.1
- '0.2'
author: Koji Miyazato
basic-deps:
  base: '>=4.10 && <5'
  bifunctors: '>=5.1'
  matchable: '>=0.1.2'
  template-haskell: '>=2.4 && <2.24'
  th-abstraction: '>=0.4.0.0'
changelog: |
  # 0.1.2.1

  - Require cabal-version: 2.0
  - The library itself is unchanged. Update of the test code only.

  # 0.1.2.0

  - Fail correctly, with appropriate error message, when deriving Matchable
    and Bimatchable fails due to the datatype having zero (Matchable) or
    less than two (Bimatchable) parameters.

  # 0.1.1.1

  - Use "th-abstraction" >= 0.4 to cover changes in forthcoming
    template-haskell-2.17 bundled in GHC 9.0

  # 0.1.1.0

  - Depends on "th-abstraction" >= 0.3, rather than < 0.3 at
    previous version.

  # 0.1.0.0

  - Initial release.
changelog-type: markdown
description: |
  ## matchable-th

  This package provides TemplateHaskell functions to
  generate instances of `Matchable` and `Bimatchable` type classes,
  which are from `matchable` package.

  ### Examples

  ``` haskell
  {-# LANGUAGE DeriveFunctor #-}
  {-# LANGUAGE StandaloneDeriving #-}
  {-# LANGUAGE TemplateHaskell #-}

  import Data.Functor.Classes (Eq1(..))
  import Data.Matchable
  import Data.Matchable.TH ( deriveInstances )

  newtype G a = G [(a, Int, a)]
    deriving (Show, Eq, Functor)

  deriveInstances [d|
    deriving instance Eq1 G
    deriving instance Matchable G
    |]

  ```

  ``` haskell
  {-# LANGUAGE DeriveFunctor #-}
  {-# LANGUAGE StandaloneDeriving #-}
  {-# LANGUAGE TemplateHaskell #-}

  import Data.Functor.Classes ( Eq1, Eq2 )
  import Data.Bifunctor ( Bifunctor(..) )
  import Data.Bimatchable ( Bimatchable )
  import Data.Matchable ( Matchable )
  import Data.Matchable.TH ( deriveInstances )

  -- Test case for using [], tuple, and another Bimatchable instance
  data BiG a b = BiG0 | BiG1 [a] [b] | BiG2 (Int, BiF a b)
    deriving (Show, Eq)

  deriveInstances [d|
    deriving instance Bifunctor BiG
    deriving instance Eq a => Eq1 (BiG a)
    deriving instance Eq a => Matchable (BiG a)
    deriving instance Eq2 BiG
    deriving instance Bimatchable BiG
    |]
  ```
description-type: markdown
hash: dcf479d8152300a3f91636ade21c83c867368e1cdd21c1aba2935f13e71a3c75
homepage: ''
latest: '0.2'
license-name: BSD-3-Clause
maintainer: viercc@gmail.com
synopsis: Generates Matchable instances using TemplateHaskell
test-bench-deps:
  base: '>=0'
  containers: '>=0'
  matchable: '>=0'
  matchable-th: '>=0'
