all-versions:
- 0.1.0
- 0.1.1
- 0.2.0
- 0.2.1
- 0.3.0
- 0.4.0
- 0.4.1
- 0.4.2
- 0.4.3
- 0.4.4
- 0.5.0
- 0.5.1
- 0.5.2
- 0.5.3
- 0.6.0
- 0.7.0
- 0.7.1
- 0.7.2
- 0.8.0
- 0.9.0
- 0.10.0
- 0.10.1
- 0.11.0
author: Brian McKenna
basic-deps:
  aeson: '>=0.7'
  base: '>=4.8 && <5'
  bytestring: '>=0.10'
  containers: '>=0.5'
  cryptonite: '>=0.6'
  cryptostore: '>=0.2'
  http-types: '>=0.8'
  memory: '>=0.8'
  network-uri: '>=0'
  scientific: '>=0.2'
  semigroups: '>=0.15.4'
  text: '>=0.11'
  time: '>=1.1'
  unordered-containers: '>=0.2'
  vector: '>=0.7.1'
  x509: '>=0'
  x509-store: '>=0'
changelog: "# 2021-12-11 0.11.0\n\n* Added support for RSA256 Public Key verification.
  This in turn means that some \nmethods are available to verify that are not available
  to encode; causing a \nbreaking API change. The `toVerify` method and the new `EncodeSigner`
  and `VerifySigner` \nare the major changes.\n\n# 2021-12-02 0.10.1\n\n* Add support
  for Aeson 2.x\n\n# 2019-03-25 0.10.0\n\n* Add \"kid\" and allow specifying JOSEHeader\n*
  Clean up docs and remove confusing JSON type alias\n\n# 2018-01-04 0.9.0\n\n* Switch
  from RSA and HsOpenSSL to x509-store\n* Add Semigroup instances for GHC 8.6 compatibility\n\n#
  2018-03-21 0.8.0\n\n* Support RS256 algorithm\n* Add Monoid for ClaimsMap\n\nThanks
  to Patrick Brisbin and Brian McKenna for adding support for RS256.\n\n# 2016-06-02
  0.7.2\n\n* Add missing Data.ByteString.ExtendedTests (Thanks to nomeata for reporting\n
  \ this).\n* Support GHC 8 by raising the upper bound of base (GHC8 ships with base-4.9)\n
  \ (Thanks to Utku Demir).\n\n# 2016-04-11 0.7.1\n\n* Add `binarySecret` function
  to enable providing a secret based on a `ByteString`\n  (fixes #21 - Thanks to Joe
  Nelson for reporting this).\n\n# 2016-02-20 0.7.0\n\n* Update JWT to match RFC 7519.
  This is a backward compatible change with\ndeprecation warnings added for types
  and functions to be removed in the\nfuture.\n\t* Add NumericDate as a replacement
  for IntDate (and numericDate as a \n\t  replacement for intDate)\n\t* Add JOSEHeader
  as a replacement for JWTHeader.\n* Use Stack and LTS 4.0\n* Use cryptonite instead
  of cryptohash (Thanks to Greg V)\n* Remove Web.Base64 in favour of using `memory`
  (Thanks to Greg V)\n\n# 2015-04-22 0.6.0\n\n* Execute doctests in addition to the
  testsuite when using 'make test'.\n* Export `ClaimsMap` type alias (fixes #12)\n*
  Allow base 4.8\n* Lowered required cabal library version (to 1.16) to workaround
  build\n  issues in a consumer project.\n* Add 7.10.1 to the travis config\n\n# 2015-01-19
  0.5.3\n\n* Add the missing `other-modules` field to the .cabal file so that \n  all
  the tests are present in the source distribution. Thanks to \n  Richard Wallace
  for reporting this.\n\n# 2015-01-17 0.5.2\n\n* Tim McLean pointed out that comparing
  signatures may be susceptible to\n  a timing attack in the way the signatures were
  compared (using the default\n  Eq instance). Both `Signature` and `Secret` now have
  an `Eq` instance that\n  uses a constant time comparison function. Thanks Tim for
  reporting this.\n\n# 2015-01-03 0.5.1\n\n* Fix the encoding of the `aud` part of
  the claim.\n  Thanks to Aaron Levin for reporting and implementing the change.\n
  \ In addition to the fix we now also verify the shape fo the generated\n  payload.\n\n#
  2014-12-01 0.5.0\n\n* Rev. 17 of the JWT Draft changed the audience claim from being
  an\n  optional String to being either an optional `StringOrURI`s or an optional
  list of\n  `StringOrURI`s. Thanks to Aaron Levin for reporting and implementing
  the\n  change. This change breaks backwards compatibility (in regard to 0.4.x).\n\n#
  2014-10-15 0.4.2\n\n* Fix the build problems introduced in 0.4.1 to work with the
  \n  split network package. Thanks to Richard Wallace for\n  fixing this and to Jeremy
  Shaw for reporting this at the same time.\n\n# 2014-09-17 0.4.1\n\n* Update jwt.cabal
  to work with the new split network package.\n  Thanks to Jeremy Shaw for reporting
  this.\n\n# 2014-08-02 0.4.0\n\n* Change the upper boundary of base from 4.7 to 4.8
  (#5)\n\n# 2014-06-02 0.3.0\n\n* Add verify function (thanks to Robert Massaioli)
  to allow verifying an\n  already decoded JWT token\n\n# 2014-03-10 0.2.1\n\n* Add
  Decoding/Encoding sections\n* Make the examples runnable by doctest\n* Fix hlint
  warnings\n* Add 'secondsSinceEpoch' to extract the seconds from epoch from an IntDate\n\n#
  2014-03-10 0.2.0\n\n* Export the IntDate and StringOrURI types #5a1137b\n\n# 2014-03-03
  \ 0.1.1\n\n* Verify that invalid input to the decode\\* functions fails as expected\n\n#
  2014-03-03  0.1.0\n\n* Initial release\n"
changelog-type: markdown
description: "# Haskell JSON Web Token (JWT)\n\nJSON Web Token (JWT) is a compact
  URL-safe means of representing claims to be transferred between two parties.\n\nFrom
  http://self-issued.info/docs/draft-ietf-oauth-json-web-token.html\n\n> JSON Web
  Token (JWT) is a compact URL-safe means of representing claims to be transferred
  \n> between two parties. The claims in a JWT are encoded as a JavaScript Object
  Notation (JSON) \n> object that is used as the payload of a JSON Web Signature (JWS)
  structure or as the plaintext \n> of a JSON Web Encryption (JWE) structure, enabling
  the claims to be digitally signed or MACed \n> and/or encrypted.\n\nSee the [Web.JWT
  module](http://hackage.haskell.org/package/jwt/docs/Web-JWT.html) documentation
  to get started.\n\n[![Build\nStatus](https://img.shields.io/bitbucket/pipelines/puffnfresh/haskell-jwt/master)](https://bitbucket.org/puffnfresh/haskell-jwt/addon/pipelines/home)"
description-type: markdown
hash: 0602735ee4093c6c5bc918461855bcd55499099363bad34eb7a227aeef3cde29
homepage: https://github.com/puffnfresh/haskell-jwt
latest: 0.11.0
license-name: MIT
maintainer: brian@brianmckenna.org
synopsis: JSON Web Token (JWT) decoding and encoding
test-bench-deps:
  HUnit: '>=0'
  QuickCheck: '>=2.4.0.1'
  aeson: '>=0'
  base: '>=4.8 && <5'
  bytestring: '>=0.10'
  containers: '>=0'
  cryptonite: '>=0'
  cryptostore: '>=0'
  doctest: '>=0.20'
  http-types: '>=0'
  jwt: '>=0'
  lens: '>=0'
  lens-aeson: '>=0'
  memory: '>=0'
  network-uri: '>=0'
  scientific: '>=0.2'
  semigroups: '>=0.15.4'
  tasty: '>=0.7'
  tasty-hunit: '>=0.4'
  tasty-quickcheck: '>=0.3'
  tasty-th: '>=0.1'
  text: '>=0.11'
  time: '>=1.1'
  unordered-containers: '>=0'
  vector: '>=0.7.1'
  x509: '>=0'
  x509-store: '>=0'
