homepage: ''
changelog-type: markdown
hash: 526ce54bb1e4567986803f212892bd1d5d2f6ea2264141723b6d86ac2f970025
test-bench-deps:
  base: -any
  sized: -any
  containers: -any
  type-natural: -any
  subcategories: -any
  inspection-testing: '>=0.4 && <0.6'
  tasty: -any
  tasty-inspection-testing: -any
  th-lift: -any
  template-haskell: -any
  mono-traversable: -any
  primitive: -any
  vector: -any
maintainer: konn.jinro_at_gmail.com
synopsis: Sized sequence data-types
changelog: |
  # Changelog

  ## 1.1.0.0

  * Supports GHC 9.6
  * Migrates to recent toolchains

  ## 1.0.0.1

  * Minor refactoring of test-suite to support inspection-testiong 0.5

  ## 1.0.0.0

  * Drops Peano-numerals
  * Obsolete kind-generic classes
  * Now all types are kinded with GHC's builtin type-level naturals, and no type parameters for naturals.
  * Drops dependency for `singletons` package and their relatives.

  ## 0.9.0.0

  * This is transitional change: preparation for future rework of `type-natural`
    - Types and constraints in `Data.Sized.Builtin` is now incompatible with `Data.Sized` and `Data.Sized.Peano`
    - The latter two modules will be removed in future release.
  * Removes `NilL` and `NilR`
  * Compolete overhaul on `Data.Sized.Builtin`
    - Stop using orders from `Data.Singletons`
    - Types of nested pattern synonyms can now be inferred correctly

  ## 0.8.0.0

  * Makes `sLength` using `KnownNat` instance to get O(1) always.
  * Introduces `Nil` pattern and deprecates `NilL` and `NilR`.
  * Previously, in sepcialised modules for `Builtin` and `Peano`,
    `elemIndex`, `elemIndices` and their Ordinal version were misimplemented;
    they are now correctly uses their counterparts in `Data.Sized`.
  * Adds documentation for specialised modules.

  ## 0.7.0.0

  * Stop using `ListLike` package and switched to [`subcategories`] package for the abstraction of sequential types.
  * Complete overhaul on type signatures.
  * Both `Data.Sized.Builtin` and `Data.Sized.Peano` exports specialised functions instead of reexporting functions from `Data.Sized`.
basic-deps:
  these: -any
  base: '>=4 && <5'
  equational-reasoning: '>=0.5'
  constraints: -any
  ghc-typelits-knownnat: -any
  containers: '>=0.5'
  type-natural: '>=1.3'
  lens: '>=0.14'
  ghc-typelits-presburger: '>=0.7.2'
  subcategories: '>=0.2'
  hashable: '>=1.2'
  deepseq: '>=1.4'
  mono-traversable: '>=0.10'
  vector: '>=0.12'
all-versions:
- 0.1.0.0
- 0.2.0.0
- 0.2.1.0
- 0.2.1.1
- 0.3.0.0
- 0.3.0.1
- 0.4.0.0
- 0.5.0.0
- 0.6.0.0
- 0.8.0.0
- 0.9.0.0
- 1.0.0.0
- 1.0.0.1
- 1.0.0.2
- 1.1.0.0
author: Hiromi ISHII
latest: 1.1.0.0
description-type: haddock
description: A wrapper to make length-parametrized data-type from functorial data-types.
license-name: BSD-3-Clause
