all-versions:
- 0.0.1
- 0.0.2
- 0.1.0
- 0.2.0
- 0.3.0
- 0.4.0
- 0.5.0
- 0.5.1
- 0.6.0
author: John Wiegley
basic-deps:
  base: '>=4.3 && <5'
  bifunctors: '>=0'
  bytestring: '>=0'
  chunked-data: '>=0'
  containers: '>=0'
  either: '>=0'
  exceptions: '>=0'
  filepath: '>=0'
  free: '>=0'
  lifted-async: '>=0'
  lifted-base: '>=0.1'
  mmorph: '>=0'
  monad-control: '>=1.0.0'
  mono-traversable: '>=1.0 && <1.1'
  mtl: '>=0'
  mwc-random: '>=0'
  primitive: '>=0'
  semigroups: '>=0'
  stm: '>=0'
  streaming-commons: '>=0'
  text: '>=0'
  transformers: '>=0.2.2 && <0.6'
  transformers-base: '>=0.4.1 && <0.6'
  vector: '>=0'
changelog: ''
changelog-type: ''
description: |-
  @simple-conduit@ follows a similar UI to the more capable @conduit@ library,
  but reduces the scope of what it can solve down to what can be expressed by
  chaining monadic folds that allow for early termination.  This allows for
  more predictable resource management behavior, at the cost of not allowing
  scenarios that @conduit@ is better designed.
description-type: haddock
hash: d3d611a7931b9bb68e66b29f84ab4e1a827b2d3f84200111852d6c46b84b51a2
homepage: http://github.com/jwiegley/simple-conduit
latest: 0.6.0
license-name: BSD-3-Clause
maintainer: johnw@newartisans.com
synopsis: A simple streaming I/O library based on monadic folds
test-bench-deps:
  CC-delcont: '>=0'
  QuickCheck: '>=0'
  base: '>=0'
  bifunctors: '>=0'
  bytestring: '>=0'
  chunked-data: '>=0'
  conduit: '>=0'
  conduit-combinators: '>=0'
  conduit-extra: '>=0'
  containers: '>=0'
  criterion: '>=0'
  either: '>=0'
  exceptions: '>=0'
  filepath: '>=0'
  foldl: '>=0'
  free: '>=0'
  hspec: '>=1.3'
  lifted-async: '>=0'
  lifted-base: '>=0'
  mmorph: '>=0'
  monad-control: '>=0'
  mono-traversable: '>=0'
  mtl: '>=0'
  mwc-random: '>=0'
  primitive: '>=0'
  semigroups: '>=0'
  simple-conduit: '>=0'
  stm: '>=0'
  streaming-commons: '>=0'
  text: '>=0'
  transformers: '>=0'
  transformers-base: '>=0'
  vector: '>=0'
  void: '>=0'
