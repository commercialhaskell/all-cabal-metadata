all-versions:
- 0.1.0.0
- 0.1.0.1
author: qwbarch
basic-deps:
  WAVE: '>=0.1 && <0.2'
  base: '>=4.14.3.0 && <5'
  derive-storable: '>=0.3.0.0 && <1'
  unix: '>=2 && <3'
  unliftio: '>=0.2.20.0 && <1'
  vector: '>=0.13.0.0 && <1'
changelog: |
  ## Changelog

  ### 0.1.0.0

  - Initial release.
changelog-type: markdown
description: "# silero-vad-hs\n\n[![License: MIT](https://img.shields.io/badge/License-MIT-green.svg)](https://opensource.org/licenses/MIT)
  [![Hackage](http://img.shields.io/hackage/v/silero-vad.svg)](https://hackage.haskell.org/package/silero-vad)\n\nVoice
  activity detection powered by [SileroVAD](https://github.com/snakers4/silero-vad).\n\n##
  Supported architectures\n\nTested on ``GHC 9.8``, ``GHC 9.2.8``, and ``GHC 8.10.7``.\n\n-
  [![build-linux-x64](https://github.com/qwbarch/silero-vad-hs/actions/workflows/linux-x64.yml/badge.svg)](https://github.com/qwbarch/silero-vad-hs/actions/workflows/linux-x64.yml)\n-
  [![build-mac-arm64](https://github.com/qwbarch/silero-vad-hs/actions/workflows/mac-arm64.yml/badge.svg)](https://github.com/qwbarch/silero-vad-hs/actions/workflows/mac-arm64.yml)\n-
  [![build-mac-x64](https://github.com/qwbarch/silero-vad-hs/actions/workflows/mac-x64.yml/badge.svg)](https://github.com/qwbarch/silero-vad-hs/actions/workflows/mac-x64.yml)\n-
  [![build-windows-x64](https://github.com/qwbarch/silero-vad-hs/actions/workflows/windows-x64.yml/badge.svg)](https://github.com/qwbarch/silero-vad-hs/actions/workflows/windows-x64.yml)\n\n##
  Quick start\n\nThis is a literate haskell file. You can run this example via the
  following:\n```bash\nnix develop --command bash -c '\n  export LD_LIBRARY_PATH=lib:$(nix
  path-info .#stdenv.cc.cc.lib)/lib\n  cabal run --flags=\"build-readme\"\n'\n```\n\nNecessary
  language extensions and imports for the example:\n```haskell\nimport qualified Data.Vector.Storable
  as Vector\nimport Data.Function ((&))\nimport Data.WAVE (sampleToDouble, WAVE (waveSamples),
  getWAVEFile)\nimport Silero (withVad, withModel, detectSegments, detectSpeech, windowLength)\n```\n\nFor
  this example, the [WAVE](https://hackage.haskell.org/package/WAVE) library is used
  for simplicity.  \nUnfortunately, its design is flawed and represents audio in a
  lazy linked list.  \nPrefer using [wave](https://hackage.haskell.org/package/wave)
  for better performance.\n\n```haskell\nmain :: IO ()\nmain = do\n  wav <- getWAVEFile
  \"lib/jfk.wav\"\n```\nThe functions below expects a ``Vector Float``. This converts
  it to the expected format.\n```haskell\n  let samples =\n        concat (waveSamples
  wav)\n          & Vector.fromList\n          & Vector.map (realToFrac . sampleToDouble)\n```\nUse
  ``detectSegments`` to detect the start/end times of voice activity segments.\n```haskell\n
  \ withVad $ \\vad -> do\n    segments <- detectSegments vad samples\n    print segments\n```\nAlternatively,
  use ``detectSpeech`` if you want to detect if speech is found in a single window.
  \ \n```haskell\n  withModel $ \\model -> do\n    probability <- detectSpeech model
  $ Vector.take windowLength samples\n    putStrLn $ \"Probability: \" <> show probability\n```\n\n>
  [!NOTE]\n> Audio passed to ``detectSegments`` and ``detectSpeech`` functions have
  the following requirements:\n> - Must be 16khz sample rate.\n> - Must be mono channel.\n>
  - Must be 16-bit audio.\n>\n> When using ``detectSpeech``, audio samples must be
  of size ``windowLength`` (defined as 512).\n> If ``length samples /= windowLength``,
  the probability will always be 0.\n"
description-type: markdown
hash: 3ccfd759dbfa224c1a88d9867b615ca5b6336d4aa32a1b625dccb638cd00579c
homepage: https://github.com/qwbarch/silero-vad-hs
latest: 0.1.0.1
license-name: MIT
maintainer: qwbarch <qwbarch@gmail.com>
synopsis: Voice activity detection powered by SileroVAD.
test-bench-deps:
  WAVE: '>=0.1 && <0.2'
  base: '>=4.14.3.0 && <5'
  derive-storable: '>=0.3.0.0 && <1'
  tasty: '>1 && <2'
  tasty-hunit: '>0.10 && <1'
  unix: '>=2 && <3'
  unliftio: '>=0.2.20.0 && <1'
  vector: '>=0.13.0.0 && <1'
