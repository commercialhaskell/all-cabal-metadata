all-versions:
- '0.0'
author: Ketil Malde
basic-deps:
  base: '>=0'
  bio: '>=0.2'
  bytestring: '>=0'
  random: '>=0'
changelog: ''
changelog-type: ''
description: "\nSimseq - SIMulate SEQuences.  Yep, that's real creative.\n\n  Synopsis\n
  \ --------\n\nGenerates a bunch of sequences from a set of reference sequences.\nFor
  ESTs, NCBI's refseq transcripts are probably good choices.\n\nThe generated sequences
  are generated using a model that specifies\npriming conditions and error generation.\n\nCurrently,
  this is not very refined, you can try\n\n\tsimseq --model=sanger:n,d reference.fasta\n\nWhere
  n indicates the number of sequences to generate, starting points\ndrawn from a uniform
  distribution, and d probability of being in the \nforward direction.  Or, even more
  experimentally:\n\n\tsimseq --model=454:n,d\n\nWhich implemets a completely unfounded
  and baseless model of 454/Roche\npyrosequencing.  (Okay, actually based on a paper
  by Marguiles et al, but\nmore data is definitely a requirement).\n\nSolexa will
  be installed as soon as anybody says something definitive\nabout the error modes.\n\nIn
  any case, running out of sequence results in X's, indicating vector,\nwhich I hope
  makes sense for Sanger, at least.\n\n Install\n -------\n\nThe usual Cabal routine.
  \ Get a working GHC compiler, install\nmy 'bio' library, and do:\n\n\tchmod +x Setup.hs\n\t./Setup.hs
  configure\n\t./Setup.hs build\n\tsudo ./Setup.hs install\n\nMail me if it didn't
  work - <ketil at malde.org>.\n"
description-type: text
hash: 2510164a520a8ee2673a3a6786dff17aa6120989d0a1db91b1dfb0b79ef71144
homepage: http://malde.org/~ketil/
latest: '0.0'
license-name: LicenseRef-GPL
maintainer: Ketil Malde <ketil@malde.org>
synopsis: Simulate sequencing with different models for priming and errors
test-bench-deps: {}
