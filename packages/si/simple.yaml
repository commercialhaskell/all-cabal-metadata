homepage: http://simple.cx
changelog-type: markdown
hash: 1f170329859a9da824a207a4ba969154b0207fb2fb1efba2ece6425374541f91
test-bench-deps:
  hspec-contrib: -any
  bytestring: -any
  wai: '>=3.0'
  base: <6
  base64-bytestring: -any
  unordered-containers: -any
  hspec: -any
  text: -any
  simple-templates: '>=0.7.0'
  monad-control: '>=1.0.0.0'
  filepath: -any
  blaze-builder: -any
  mime-types: -any
  mtl: -any
  transformers-base: -any
  wai-extra: -any
  transformers: -any
  http-types: -any
  aeson: -any
  vector: -any
  directory: -any
maintainer: amit@amitlevy.com
synopsis: A minimalist web framework for the WAI server interface
changelog: |
  # Version 0.11.1 (2016-01-11)

  * Fixes test dependencies that precluded tests from compiling

  # Version 0.11.0.0 (2015-11-23)

  * Minimize methods in `HasTemplates` and extract everything else into functions

  * Add `layoutObject` method that allows customizing the value passed to the
    layout
basic-deps:
  bytestring: -any
  setenv: -any
  wai: '>=3.0'
  base: <6
  base64-bytestring: -any
  unordered-containers: -any
  text: -any
  simple-templates: '>=2.0.0'
  monad-control: '>=1.0.0.0'
  filepath: -any
  process: -any
  blaze-builder: -any
  mime-types: -any
  mtl: -any
  cmdargs: -any
  transformers-base: -any
  attoparsec: -any
  wai-extra: -any
  transformers: -any
  http-types: -any
  aeson: -any
  vector: -any
  directory: -any
all-versions:
- 0.2.0
- 0.3.0
- 0.4.0
- 0.4.1
- 0.5.0
- 0.6.0
- 0.7.0
- 0.7.0.1
- 0.8.0.0
- 0.8.0.1
- 0.8.1.0
- 0.9.0.0
- 0.10.0.0
- 0.10.0.1
- 0.10.0.2
- 0.10.0.3
- 0.10.1
- 0.11.0
- 0.11.1
- 0.11.2
- 0.11.3
- 1.0.0
- 2.0.0
author: Amit Levy, Daniel B. Giffin
latest: 2.0.0
description-type: haddock
description: |-
  \Simple\ is \"framework-less\" web framework for Haskell web applications
  based on the WAI server interface (e.g. for use with the warp server).
  \Simple\ does not enforce a particular structure or paradigm for web
  applications. Rather, \Simple\ contains tools to help you create your own
  patterns (or re-create existing ones). \Simple\ is minimalist, providing a
  lightweight base - the most basic \Simple\ app is little more than a WAI
  `Application` with some routing logic. Everything else (e.g. authentication,
  controllers, persistence, caching etc\') is provided in composable units, so
  you can include only the ones you need in your app, and easily replace
  with your own components.

  To get started, create an app skeleton with the `smpl` utility:

  @
  $ cabal install simple
  $ smpl create my_app_name
  $ cd my_app_name
  $ smpl
  @

  See "Web.Simple" for a more detailed introduction.
license-name: LGPL-3.0-only
