all-versions:
- '0.2'
- 0.2.0.1
- 0.2.0.2
author: Balazs Komuves
basic-deps:
  array: '>=0.5'
  base: '>=4 && <5'
  combinat: '>=0.2.8'
  containers: '>=0.5'
  optparse-applicative: '>=0'
  parsec2: '>=0'
  random: '>=0'
  sigma-ij: '>=0.2.0.1'
  time: '>=0'
changelog: ''
changelog-type: ''
description: "\nThis is a program to compute Thom polynomials of second-order \nThom-Boardman
  singularities $Sigma^{i,j}(n)$.\n\nThe computation is based on the localization
  method described in \nthe author's PhD thesis: <http://renyi.hu/~komuves/phdthesis.pdf>.\n\n\nUSAGE:\n======\n\nsigma-ij
  -h                        help\nsigma-ij -i3 -j1 -n7               compute $Tp(Sigma^{3,1}(7))$\nsigma-oj
  -i3 -j1 -n7 -r<RING>      compute with coefficients in the given ring\nsigma-oj
  -i3 -j1 -n7 -B<N> -b<n>   compute the n-th (out of N) part\nsigma-oj -i3 -j1 -n7
  -rZp          compute in the (baked-in) prime field Zp\nsigma-oj -i3 -j1 -n7 -o<FILE>
  \     change the output file\n\nSupported rings:\n * rationals \n * integers (remark:
  the division-free determinant algorithm often fails)\n * Zp, a baked-in prime field
  \n\nThe -B and -b options are useful to parallelize the computation over \nmany
  computers.\n \n\nTODO:\n=====\n\n - better (and faster) prime field implementation(s)\n
  - allow arbitrary prime fields instead of just a baked-in one\n - pivoting for the
  Bareiss (division-free) determinant algorithm\n - implement explicit formula for
  j=1\n"
description-type: text
hash: 4a77b716d80e511d233c835213d4e1770f0b38e51b660e16133519164688193e
homepage: http://code.haskell.org/~bkomuves/
latest: 0.2.0.2
license-name: BSD-3-Clause
maintainer: bkomuves (plus) hackage (at) gmail (dot) com
synopsis: Thom polynomials of second order Thom-Boardman singularities
test-bench-deps: {}
