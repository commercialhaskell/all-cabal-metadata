homepage: https://github.com/mokus0/random-fu
changelog-type: markdown
hash: b5a61877883f223d21e5646c9f8a40ba5e6f64a5f5d85d36612921a7697ce4f6
test-bench-deps: {}
maintainer: Dominic Steinitz <dominic@steinitz.org>
synopsis: Random Variables
changelog: |
  * Changes in 0.3.0.0:

    * Drop usage of `random-source` in favor of `random`
    * Add `Prim` type that resembles one from `random-source`
    * Add `RGen` type that serves the same purpose as `StdRandom` in `random-source`

  * Changes in 0.2.0.6: None. (Pacify Hackage.)

  * Changes in 0.2.0.4: Update for GHC 8.8.

  * Changes in 0.2.0.3: Version bump for transformers dependency.

  * Changes in 0.2.0.2: Version bump for transformers dependency.

  * Changes in 0.2.0.1: Version bump for transformers dependency.
basic-deps:
  bytestring: -any
  base: '>=3 && <5'
  mtl: '>=2 && <2.3'
  MonadPrompt: ==1.0.*
  transformers: '>=0.2 && <0.6'
  random: '>=1.2.0'
all-versions:
- '0.2'
- 0.2.0.1
- 0.2.0.2
- 0.2.0.3
- 0.2.0.4
- 0.2.0.6
- 0.3.0.0
author: James Cook <mokus@deepbondi.net>
latest: 0.3.0.0
description-type: haddock
description: |-
  Random number generation based on modeling random
  variables by an abstract type ('RVar') which can be
  composed and manipulated monadically and sampled in
  either monadic or \"pure\" styles.

  The primary purpose of this library is to support
  defining and sampling a wide variety of high quality
  random variables.  Quality is prioritized over speed,
  but performance is an important goal too.

  In my testing, I have found it capable of speed
  comparable to other Haskell libraries, but still
  a fair bit slower than straight C implementations of
  the same algorithms.
license-name: LicenseRef-PublicDomain
