homepage: https://github.com/msakai/numeric-optimization-backprop#readme
changelog-type: markdown
hash: 7f8818e74f417d9edb8d9eb5457274e5da8066daea483abe24f0cf69e6c6ad13
test-bench-deps:
  numeric-optimization-backprop: -any
  base: '>=4.12 && <5'
  data-default-class: '>=0.1.2.0 && <0.2'
  hspec: '>=2.7.1 && <3.0'
  HUnit: '>=1.6.0.0 && <1.7'
  containers: '>=0.6.0.1 && <0.7'
  numeric-optimization: '>=0.1.0.0 && <0.2.0.0'
  microlens: '>=0.4.10 && <0.5'
maintainer: masahiro.sakai@gmail.com
synopsis: Wrapper of numeric-optimization package for using with backprop package
changelog: |
  # Changelog for `numeric-optimization-backprop`

  All notable changes to this project will be documented in this file.

  The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),
  and this project adheres to the
  [Haskell Package Versioning Policy](https://pvp.haskell.org/).

  ## Unreleased

  ## 0.1.0.0 - YYYY-MM-DD
basic-deps:
  numeric-optimization-backprop: -any
  reflection: '>=2.1.5'
  base: '>=4.12 && <5'
  data-default-class: '>=0.1.2.0 && <0.2'
  containers: '>=0.6.0.1 && <0.7'
  numeric-optimization: '>=0.1.0.0 && <0.2.0.0'
  mtl: '>=2.2.2 && <2.4'
  backprop: '>=0.2.6.3 && <0.3'
  microlens: '>=0.4.10 && <0.5'
  mono-traversable: '>=1.0.15.1 && <1.1'
  primitive: '>=0.6.4.0'
  vector: '>=0.12.0.2 && <0.14'
all-versions:
- 0.1.0.0
author: Masahiro Sakai
latest: 0.1.0.0
description-type: markdown
description: |
  # numeric-optimization-backprop

  Wrapper of [numeric-optimization](https://hackage.haskell.org/package/numeric-optimization) package for using with [backprop](https://hackage.haskell.org/package/backprop) package.

  ## Example Usage

  ```haskell
  {-# LANGUAGE FlexibleContexts #-}
  import Numeric.Optimization.Backprop
  import Lens.Micro

  main :: IO ()
  main = do
    result <- minimize LBFGS def rosenbrock Nothing [] (-3,-4)
    print (resultSuccess result)  -- True
    print (resultSolution result)  -- [0.999999999009131,0.9999999981094296]
    print (resultValue result)  -- 1.8129771632403013e-18

  -- https://en.wikipedia.org/wiki/Rosenbrock_function
  rosenbrock :: Reifies s W => BVar s (Double, Double) -> BVar s Double
  rosenbrock t = sq (1 - x) + 100 * sq (y - sq x)
    where
      x = t ^^. _1
      y = t ^^. _2

  sq :: Floating a => a -> a
  sq x = x ** 2
  ```
license-name: BSD-3-Clause
