all-versions:
- 0.0.1
- 0.0.2
- 0.0.3
- 0.0.4
- 0.0.5
- 0.0.6
- 0.0.7
- 0.0.8
- 0.0.9
- 0.1.0
- 0.1.1
- 0.1.2
- 0.1.3
- 0.1.4.0
- 0.2.0.0
- 0.2.1.0
- 0.2.2.0
- 0.2.3.0
- 0.2.3.1
- 0.3.0.0
- 0.3.1
- 0.4.0
- 0.5.0
- 0.6.0
- 0.6.0.1
- 0.6.0.2
- 0.7.0.0
- 0.7.1.0
- 0.8.0.0
- 0.8.1.0
- 0.9.0.0
- 0.10.0.0
- 0.10.1.0
- 0.10.1.1
- 0.11.0.1
- 0.11.0.2
- 0.11.1.0
- 0.12.0.0
author: Tony Day
basic-deps:
  base: '>=4.7 && <5'
changelog: "0.12\n===\n\n- added SemiField, and bumped QuotientField to default for
  Subtraction.\n\n- moved infinity & nqn to SemiField, from Field.\n\n- introduced
  NumHask.Data.Positive\n\n- introduced NumHask.Data.Wrapped\n\n- Monus & Addus\n\n-
  hiding Prelude.Rational\n\n0.11.1.0\n===\n* Added Sum (..)\n* Added Product (..)\n\n0.11.0.0\n===\n\n*
  TypeFamilies introduced replacing FunDep usage for QuotientField, AdditiveAction,
  MultiplicativeAction, Basis. Classes go from Multi-parameter to single.\n* EuclideanPair
  introduced as an intended DerivingVia support for 2 dimensional Basis & Direction
  instances. \n* Complex modified to use EuclideanPair. Underlying representation
  changed to tuple and (+:) constructor as a top-level function.\n* Action class operators
  changed from (.\\*) to (|\\*), and (\\*.) to (\\*|) etc.\n* Ring, Field, Distributive
  & Module become type synonyms (were classes).\n* Added Basis class replacing Norm
  & Signed\n* extra type synonyms added for Basis specialisations: Absolute, Sign,
  EndoBased.\n* abs becomes top-level function (previously method of Norm).\n* sign
  removed and replaced with signum, mirroring Num.\n* aboutEqual & nearZero moved
  outside Epsilon class definition.\n* rationalised Language pragmas around GHC2021\n*
  introduced QuotientField instance for Complex & EuclideanPair without Ord constraint.\n\n0.10.0\n===\n*
  Moved operators back in.\n* added doctests and properties\n* added accsum & accproduct\n*
  fixed Ratio Eq instance\n\n0.9.0\n===\n* Removed bounded classes.\n* Moved operators
  outside of class definitions where possible. \n\n0.8.0\n=====\n\n* GHC 9.0.1 support\n*
  Removed protolude and replaced it with prelude\n* Removed NumHask.Data.Positive,
  NumHask.Data.LogFloat, NumHask.Data.Wrapper\n* modified project build to cabal\n*
  removed NegativeLiterals recommendation.\n\n0.7.0\n=====\n\n* GHC 8.10.2 support\n*
  Modules `NumHask.Algebra.Abstract.*` renamed to `NumHask.Algebra.*`\n* Renamed `Normed`
  to `Norm` and added `basis`\n* Removed `Metric` and added `distance`\n* Added `Direction`,
  `Polar`, `polar`, `coord`; streamlined `Complex`\n* Removed `NumHask.Data.Pair`\n*
  Fixed `FromIntegral` and `FromRational` to work in well with rebindable syntax.\n*
  Added fundeps to `Norm`, `Direction`\n* Integrated `NumHask.Algebra.Action` into
  `NumHask.Algebra.Module`\n* Added `atan2`\n* Added doctests and laws\n* Improved
  haddocks\n* Made (^) a monomorphic `a -> Int -> a` and accept negative Ints\n\n\n0.6.0\n=====\n\n*
  GHC 8.10.1 support\n"
changelog-type: markdown
description: |-
  This package provides alternative numeric classes over Prelude.

  The numeric class constellation looks somewhat like:

  ![nh](docs/other/nh.svg)

  == Usage

  >>> {-# LANGUAGE GHC2021 #-}
  >>> {-# LANGUAGE RebindableSyntax #-}
  >>> import NumHask.Prelude

  See "NumHask" for a detailed overview.
description-type: haddock
hash: a66a9fbd2cf1f518d8cdb42472343638bd5117ab66aa27b2aa2d3d55b24d86c7
homepage: https://github.com/tonyday567/numhask#readme
latest: 0.12.0.0
license-name: BSD-3-Clause
maintainer: tonyday567@gmail.com
synopsis: A numeric class hierarchy.
test-bench-deps: {}
