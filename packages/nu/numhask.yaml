homepage: https://github.com/tonyday567/numhask#readme
changelog-type: markdown
hash: 4d96d6871d47b0dad1737c6c008714f4d0b1e30000173dc053279588a034eb84
test-bench-deps:
  base: -any
  QuickCheck: -any
maintainer: tonyday567@gmail.com
synopsis: A numeric class hierarchy.
changelog: "0.10.0\n===\n* Moved operators back in.\n* added doctests and properties\n*
  added accsum & accproduct\n* fixed Ratio Eq instance\n\n0.9.0\n===\n* Removed bounded
  classes.\n* Moved operators outside of class definitions where possible. \n\n0.8.0\n=====\n\n*
  GHC 9.0.1 support\n* Removed protolude and replaced it with prelude\n* Removed NumHask.Data.Positive,
  NumHask.Data.LogFloat, NumHask.Data.Wrapper\n* modified project build to cabal\n*
  removed NegativeLiterals recommendation.\n\n0.7.0\n=====\n\n* GHC 8.10.2 support\n*
  Modules `NumHask.Algebra.Abstract.*` renamed to `NumHask.Algebra.*`\n* Renamed `Normed`
  to `Norm` and added `basis`\n* Removed `Metric` and added `distance`\n* Added `Direction`,
  `Polar`, `polar`, `coord`; streamlined `Complex`\n* Removed `NumHask.Data.Pair`\n*
  Fixed `FromIntegral` and `FromRational` to work in well with rebindable syntax.\n*
  Added fundeps to `Norm`, `Direction`\n* Integrated `NumHask.Algebra.Action` into
  `NumHask.Algebra.Module`\n* Added `atan2`\n* Added doctests and laws\n* Improved
  haddocks\n* Made (^) a monomorphic `a -> Int -> a` and accept negative Ints\n\n\n0.6.0\n=====\n\n*
  GHC 8.10.1 support\n"
basic-deps:
  base: '>=4.7 && <5'
all-versions:
- 0.0.1
- 0.0.2
- 0.0.3
- 0.0.4
- 0.0.5
- 0.0.6
- 0.0.7
- 0.0.8
- 0.0.9
- 0.1.0
- 0.1.1
- 0.1.2
- 0.1.3
- 0.1.4.0
- 0.2.0.0
- 0.2.1.0
- 0.2.2.0
- 0.2.3.0
- 0.2.3.1
- 0.3.0.0
- 0.3.1
- 0.4.0
- 0.5.0
- 0.6.0
- 0.6.0.1
- 0.6.0.2
- 0.7.0.0
- 0.7.1.0
- 0.8.0.0
- 0.8.1.0
- 0.9.0.0
- 0.10.0.0
author: Tony Day
latest: 0.10.0.0
description-type: haddock
description: |-
  This package provides alternative numeric classes over Prelude.

  The numeric class constellation looks somewhat like:

  ![nh](docs/other/nh.svg)

  == Usage

  >>> {-# LANGUAGE RebindableSyntax #-}
  >>> import NumHask.Prelude

  See "NumHask" for a detailed overview.
license-name: BSD-3-Clause
