homepage: https://github.com/tonyday567/numhask#readme
changelog-type: markdown
hash: a7f22982e4346adf7b1796411202e2e161dbba21ddc43102a26d13f04d727a02
test-bench-deps:
  base: '>=4.7 && <5'
  doctest: '>=0.18 && <0.19'
  QuickCheck: '>=2.13 && <2.15'
maintainer: tonyday567@gmail.com
synopsis: A numeric class hierarchy.
changelog: |
  0.8.0
  =====

  * GHC 9.0.1 support
  * Removed protolude and replaced it with prelude
  * Removed NumHask.Data.Positive, NumHask.Data.LogFloat, NumHask.Data.Wrapper
  * modified project build to cabal
  * removed NegativeLiterals recommendation.

  0.7.0
  =====

  * GHC 8.10.2 support
  * Modules `NumHask.Algebra.Abstract.*` renamed to `NumHask.Algebra.*`
  * Renamed `Normed` to `Norm` and added `basis`
  * Removed `Metric` and added `distance`
  * Added `Direction`, `Polar`, `polar`, `coord`; streamlined `Complex`
  * Removed `NumHask.Data.Pair`
  * Fixed `FromIntegral` and `FromRational` to work in well with rebindable syntax.
  * Added fundeps to `Norm`, `Direction`
  * Integrated `NumHask.Algebra.Action` into `NumHask.Algebra.Module`
  * Added `atan2`
  * Added doctests and laws
  * Improved haddocks
  * Made (^) a monomorphic `a -> Int -> a` and accept negative Ints


  0.6.0
  =====

  * GHC 8.10.1 support
basic-deps:
  base: '>=4.7 && <5'
all-versions:
- 0.0.1
- 0.0.2
- 0.0.3
- 0.0.4
- 0.0.5
- 0.0.6
- 0.0.7
- 0.0.8
- 0.0.9
- 0.1.0
- 0.1.1
- 0.1.2
- 0.1.3
- 0.1.4.0
- 0.2.0.0
- 0.2.1.0
- 0.2.2.0
- 0.2.3.0
- 0.2.3.1
- 0.3.0.0
- 0.3.1
- 0.4.0
- 0.5.0
- 0.6.0
- 0.6.0.1
- 0.6.0.2
- 0.7.0.0
- 0.7.1.0
- 0.8.0.0
author: Tony Day
latest: 0.8.0.0
description-type: markdown
description: |
  numhask
  ===

  [![Build Status](https://travis-ci.org/tonyday567/numhask.svg)](https://travis-ci.org/tonyday567/numhask) [![Hackage](https://img.shields.io/hackage/v/numhask.svg)](https://hackage.haskell.org/package/numhask)

  This package provides numeric classes alternate to the prelude specified in haskell98.

  The numeric class constellation looks somewhat like:

  ![nh](other/nh.svg)

  Usage
  ===

  ``` haskell
  {-# LANGUAGE NegativeLiterals #-}
  {-# LANGUAGE RebindableSyntax #-}
  import NumHask.Prelude
  ```
  See the documentation in the Numhask module for a detailed overview.

  Develop
  ===

  ```
  stack build --test --haddock --file-watch
  ```
license-name: BSD-3-Clause
