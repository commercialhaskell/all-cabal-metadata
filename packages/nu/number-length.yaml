all-versions:
- 0.1.0.0
- 0.1.0.1
- 0.2.0.0
- 0.2.1.0
author: Peter Trško
basic-deps:
  base: '>=4.5 && <5'
changelog: |
  # ChangeLog / ReleaseNotes


  ## Version 0.2.1.0

  * Depend on `quickcheck-instances` to provide `instance Arbitrary Natural` for
    unit tests. (**minor change**)


  ## Version 0.2.0.0

  * Instances for `Integer` and `Natural`.
  * Build on GHC 8.2.2 and Stackage LTS 10.\*.


  ## Version 0.1.0.1

  * Removed dead code. (**minor change**)
  * Better and expanded test suite, which now includes tests for methods of
    `SignedNumberLength`. (**minor change**)
  * Depending on tagged package only for GHC <7.8. This is due to the fact, that
    `Data.Proxy` module was introduce in base ==4.7, which was bundled with GHC
    7.8. (**minor change**)
  * Small examples included in description. (**minor change**)
  * Uploaded to [Hackage][]:
    <http://hackage.haskell.org/package/number-length-0.1.0.1>


  ## Version 0.1.0.0

  * First public release.
  * Uploaded to [Hackage][]:
    <http://hackage.haskell.org/package/number-length-0.1.0.0>



  [Hackage]:
    http://hackage.haskell.org/
    "HackageDB (or just Hackage) is a collection of releases of Haskell packages."
changelog-type: markdown
description: |
  # Number Length

  [![Hackage](http://img.shields.io/hackage/v/number-length.svg)][Hackage: number-length]
  [![Hackage Dependencies](https://img.shields.io/hackage-deps/v/number-length.svg)](http://packdeps.haskellers.com/reverse/number-length)
  [![Haskell Programming Language](https://img.shields.io/badge/language-Haskell-blue.svg)][Haskell.org]
  [![BSD3 License](http://img.shields.io/badge/license-BSD3-brightgreen.svg)][tl;dr Legal: BSD3]

  [![Build](https://travis-ci.org/trskop/number-length.svg)](https://travis-ci.org/trskop/number-length)
  [![Coverage Status](https://coveralls.io/repos/github/trskop/number-length/badge.svg?branch=master)](https://coveralls.io/github/trskop/number-length?branch=master)


  ## Description

  Number length in decimal and hexadecimal representation.

  There are situations when it is necessary to know the length of a number in
  decimal or hexadecimal form. In example when allocating buffer while
  serializing a number in to binary or human readable format.

      λ> numberLength (123 :: Int)
      3

      λ> numberLengthHex (123 :: Int)  -- 123 = 7b in hex
      2


  ## Building Options

  * `-fpedantic` (disabled by default)

    Pass additional warning flags to GHC.


  ## License

  The BSD 3-Clause License, see [LICENSE][] file for details.


  ## Contributions

  Contributions, pull requests and bug reports are welcome! Please don't be
  afraid to contact author using GitHub or by e-mail.


  [Hackage: number-length]:
    http://hackage.haskell.org/package/number-length
    "Package number-length on Hackage"
  [Haskell.org]:
    http://www.haskell.org
    "The Haskell Programming Language"
  [LICENSE]:
    https://github.com/trskop/number-length/blob/master/LICENSE
    "License of number-length package."
  [tl;dr Legal: BSD3]:
    https://tldrlegal.com/license/bsd-3-clause-license-%28revised%29
    "BSD 3-Clause License (Revised)"
description-type: markdown
hash: cf2c851ab375e2b151973d1525833bb4318b959369301fc79764d3c7c755d3a6
homepage: https://github.com/trskop/number-length
latest: 0.2.1.0
license-name: BSD-3-Clause
maintainer: peter.trsko@gmail.com
synopsis: Number of digits in a number in decimal and hexadecimal representation.
test-bench-deps:
  HUnit: '>=1.2 && <2'
  QuickCheck: '>=2.6 && <3'
  base: '>=4.5 && <5'
  criterion: '>=1.0.0.0 && <2'
  number-length: '>=0'
  quickcheck-instances: '>=0.3.15 && <1'
  test-framework: '>=0.8 && <1'
  test-framework-hunit: '>=0.2.6 && <1'
  test-framework-quickcheck2: '>=0.3 && <1'
