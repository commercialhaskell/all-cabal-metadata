homepage: https://github.com/tonyday567/numhask-array#readme
changelog-type: markdown
hash: 8bf624b7bf9b40cbf2aea78566aaa5e26571b4a9a622ea2512cc52f92ce54594
test-bench-deps: {}
maintainer: tonyday567@gmail.com
synopsis: Multi-dimensional arrays.
changelog: |
  0.9.1
  ===
  * GHC 9.0.1 support
  * API fixes

  0.8.0
  =====

  * GHC 8.10.2 support
  * Removed hmatrix support. See [numhask-hmatrix](https://github.com/tonyday567/numhask-hmatrix)

  0.7.0
  =====

  * GHC 8.10.1 support
basic-deps:
  numhask: '>=0.8 && <0.9'
  base: '>=4.11 && <5'
  adjunctions: '>=4.0 && <5'
  distributive: '>=0.4 && <0.7'
  vector: '>=0.10 && <0.13'
all-versions:
- 0.0.1
- 0.0.2
- 0.1.0.0
- 0.1.1.0
- 0.2.0.0
- 0.2.0.1
- 0.2.1.0
- '0.3'
- 0.3.0.1
- 0.4.0.0
- 0.5.0.0
- 0.5.1
- 0.6.0
- 0.7.0
- 0.8.0
- 0.9.0
- 0.9.1
author: Tony Day
latest: 0.9.1
description-type: haddock
description: |-
  This package provides an interface into the [numhask](https://hackage.haskell.org/package/numhask) API, and both type- and value-level shape manipulation routines.

  == Usage

  >>> {-# LANGUAGE RebindableSyntax #-}
  >>> import NumHask.Prelude
  >>> import NumHask.Array

  In situations where shape is only known at runtime, a clear module configuration is:

  >>> import NumHask.Array.Shape
  >>> import qualified NumHask.Array.Fixed as F
  >>> import qualified NumHask.Array.Dynamic as D
license-name: BSD-3-Clause
