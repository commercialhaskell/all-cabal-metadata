homepage: https://github.com/tonyday567/numhask-array#readme
changelog-type: ''
hash: 1e066d41c70029a39df2cae49284a5c85e0eed2705835d09d84f00223f97d8eb
test-bench-deps:
  base: '>=4.11 && <5'
  doctest: '>=0.13 && <0.19'
  numhask-array: -any
maintainer: tonyday567@gmail.com
synopsis: Multi-dimensional array interface for numhask.
changelog: ''
basic-deps:
  numhask: '>=0.8 && <0.9'
  base: '>=4.11 && <5'
  adjunctions: '>=4.0 && <5'
  distributive: '>=0.4 && <0.7'
  vector: '>=0.10 && <0.13'
all-versions:
- 0.0.1
- 0.0.2
- 0.1.0.0
- 0.1.1.0
- 0.2.0.0
- 0.2.0.1
- 0.2.1.0
- '0.3'
- 0.3.0.1
- 0.4.0.0
- 0.5.0.0
- 0.5.1
- 0.6.0
- 0.7.0
- 0.8.0
- 0.9.0
author: Tony Day
latest: 0.9.0
description-type: markdown
description: "numhask-array\n===\n\n[![Build Status](https://travis-ci.org/tonyday567/numhask.svg)](https://travis-ci.org/tonyday567/numhask)
  \n[![Hackage](https://img.shields.io/hackage/v/numhask-array.svg)](https://hackage.haskell.org/package/numhask-array)
  \n\nThis package provides an interface into the numhask API, and both type and value
  level shape manipulation routines.\n\nUsage\n===\n\n``` haskell\n{-# LANGUAGE NegativeLiterals
  #-}\n{-# LANGUAGE RebindableSyntax #-}\nimport NumHask.Prelude\nimport NumHask.Array\n```\n\nIn
  situations where shape is only known at runtime, a clear module configuration is:\n\n```
  haskell\nimport NumHask.Array.Shape\nimport qualified NumHask.Array.Fixed as F\nimport
  qualified NumHask.Array.Dynamic as D\n```\n\nPerformance\n===\n\nPerformance experiments
  are located in [numhask-bench](https://github.com/tonyday567/numhask-bench). [numhask-hmatrix](https://github.com/tonyday567/numhask-hmatrix)
  provides a more performant and similar interface.\n\n\n"
license-name: BSD-3-Clause
