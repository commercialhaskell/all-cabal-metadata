homepage: https://github.com/btq-ag/keelung#readme
changelog-type: markdown
hash: 5f034ccdd02e1eb54998a5dea0fdc0a45986e4f01f4e19ef87d1190db0e38650
test-bench-deps: {}
maintainer: BTQ AG
synopsis: DSL for creating zero-knowledge proofs
changelog: "# Changelog\n\nAll notable changes to this project will be documented
  in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\nand
  this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\n##
  [v0.9.2]\n\n### Fixed \n\n* [Issue #11](https://github.com/btq-ag/keelung/issues/11):
  Cannot build with Cabal\n\n## [v0.9.1]\n\n### Added\n\n* Docker support for the
  compiler.\n\n## [v0.9.0]\n\n### Changed\n\n* Search for `aurora_prove` and `aurora_verify`
  in the environment instead.\n\n### Removed\n\n* Temporarily removed Docker support.\n\n##
  [v0.8.4]\n\n### Added \n\n* `Keelung.Syntax.Monad`\n    * Functions for requesting
  fresh varibles: `freshVar`, `freshVarField`, `freshVarBool`, and `freshVarUInt`.\n\n###
  Removed\n\n* `Keelung.Syntax`\n    * Function `uintToBool`\n    * Function `fieldToBool`\n\n"
basic-deps:
  cereal: -any
  groups: -any
  bytestring: -any
  base: '>=4.7 && <5'
  galois-field: -any
  process: -any
  array: -any
  containers: -any
  wl-pprint-text: -any
  mtl: -any
  random: -any
  deepseq: -any
  semirings: -any
  QuickCheck: -any
  vector: -any
  directory: -any
all-versions:
- 0.9.0.0
- 0.9.1.0
- 0.9.2
author: BTQ AG
latest: 0.9.2
description-type: markdown
description: |
  # Keelung

  Keelung is a domain-specific language (DSL) embedded in Haskell that is designed for creating zero-knowledge proofs (ZKPs). With Keelung, developers can create high-quality and reliable ZKPs with ease, even without expertise in cryptography.

  <img width="1268" alt="keelung5" src="https://user-images.githubusercontent.com/97019448/219329651-d30c0134-f153-4755-979f-c5b77d6d2724.png">

  ## Documentation

  Check out our [GitBook](https://btq.gitbook.io/keelung/) for more information.

  ## Language Reference

  The language reference is now available on [Hackage](https://hackage.haskell.org/package/keelung).

  ## Standard Library

  The standard library is available [here](https://github.com/btq-ag/keelung-stdlib).
license-name: Apache-2.0
