homepage: ''
changelog-type: markdown
hash: 5d2de0ad3b258bfffbd6d5728dcbc3608a4636671d87a0bc5e1a0a932f70c8c3
test-bench-deps:
  bytestring: -any
  composition-prelude: -any
  kempe-modules: -any
  base: -any
  tasty-golden: -any
  text: -any
  filepath: -any
  criterion: -any
  process: -any
  tasty-hunit: -any
  prettyprinter: '>=1.7.0'
  temporary: -any
  tasty: -any
  deepseq: -any
maintainer: vamchale@gmail.com
synopsis: Kempe compiler
changelog: |
  # kempe

  ## 0.1.1.3

    * Tweak some RTS flags for faster performance
    * `lib/gaussian.kmp` has `mult` function
    * A couple inefficiencies under the hood

  ## 0.1.1.2

    * Case statements with a single branch are plain and efficient.
    * Add `safeDiv` and `safeMod` to `prelude/arith.kmp`

  ## 0.1.1.1

    * Performance improvements under the hood (use `IntSet`s for liveness
      analysis)

  ## 0.1.1.0

    * Fix internal pretty-printer (exposed as hidden `fmt` subcommand)
    * Optimize IR cases
    * Fix padding
    * Fix bug in lexer (for C foreign calls)
    * Support down to GHC 8.0.2
    * Unification no longer takes pathologically long time
    * Add test files so source distribution passes
    * Some sort of imports now supported.

  ## 0.1.0.2

    * Add optimizations (simplify code so that liveness analysis is quicker)
    * Fix major bug in kind-checker
    * Fix bug in type assignment

  ## 0.1.0.1

    * Better debug pretty-printer
    * Pattern match exhaustiveness checker so that pattern matches don't do
      something heinous at runtime

  ## 0.1.0.0

  Initial release
basic-deps:
  bytestring: -any
  kempe-modules: -any
  base: -any
  prettyprinter: '>=1.7.0'
  optparse-applicative: -any
all-versions:
- 0.1.0.0
- 0.1.0.1
- 0.1.0.2
- 0.1.1.0
- 0.1.1.1
- 0.1.1.2
- 0.1.1.3
author: Vanessa McHale
latest: 0.1.1.3
description-type: markdown
description: |
  # Kempe

  Kempe is a stack-based language and toy compiler for x86_64. It requires the
  [nasm](https://nasm.us/) assembler.

  Inspiration is primarily from [Mirth](https://github.com/mirth-lang/mirth).

  See manual
  [here](http://hackage.haskell.org/package/kempe/src/docs/manual.pdf).

  ## Installation

  Installation is via [cabal-install](https://www.haskell.org/cabal/):

  ```
  cabal install kempe --constraint='kempe -no-par'
  ```

  For shell completions put the following in your `~/.bashrc` or
  `~/.bash_profile`:

  ```
  eval "$(kc --bash-completion-script kc)"
  ```

  ## Defects

    * Errors don't have position information
    * Monomorphization fails on recursive polymorphic functions

      Hopefully this isn't too sinful; I can't think of any examples of recursive
      polymorphic functions
    * Can't export or call C functions with more than 6 arguments; can't call or
      export large arguments (i.e. structs) passed by value.

      This is less of an impediment than it sounds like.
    * Cyclic module imports are not detected
    * Modules (imports) are kind of defective

  ### Comparison

  You may wish to use [Mirth](https://github.com/mirth-lang/mirth/) or
  [Factor](https://factorcode.org/) instead. Mirth is statically typed (similar to
  Kempe) but less mature.
license-name: BSD-3-Clause
