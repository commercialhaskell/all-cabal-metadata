all-versions:
- 0.1.1.1
author: Manuel Spagnolo
basic-deps:
  array: '>=0.5 && <0.6'
  base: '>=4.14 && <4.15'
  containers: '>=0.6 && <0.7'
  kewar: '>=0'
  split: '>=0.2 && <0.3'
changelog: |
  # Changelog

  `kewar` uses [PVP Versioning][1].

  ## 0.0.0.0

  * Initially created.

  [1]: https://pvp.haskell.org
changelog-type: markdown
description: "# kewar\n(pronounced qr)\n\nGenerate QR code from given input string\n\n[![MIT
  license](https://img.shields.io/badge/license-MIT-blue.svg)](LICENSE)\n\n## Installation\n\n```\ncabal
  install exe:kewar\n\n# or\n\ncabal install lib:kewar\n```\n\n## CLI\n\n### Example\n\n```bash\n$
  kewar --error-correction=H \"Hello World\"\n```\n\n### Usage \n\n```bash\n$ kewar
  [options] [INPUT]\n```\n\nkewar is a tool to generate QR codes from any supported
  string,\nutilizing an error correction level to allow data recovery.\n\nFor more
  information on QR codes: https://www.qrcode.com/en/\n\n### Options\n\n```\n  -v
  \        --version                   print qr version\n  -h         --help                      print
  this help\n  -e[LEVEL]  --error-correction[=LEVEL]  use error correction LEVEL for
  encoding. Defaults to Q\n```\n\n## Library\n\n```haskell\nmodule Main where\n\nimport
  Kewar (generate, CorrectionLevel(Q))\nimport MyModule (doStuff)\n\nmain = do\n  let
  input = \"my string\"\n  case generate input Q of\n    Left e -> print e\n    Right
  grid -> doStuff grid\n```"
description-type: markdown
hash: 91d9927e892291b8e51340a3a7b70ecb6f484e9f634abf4b7a7d1ef7fa96b45f
homepage: ''
latest: 0.1.1.1
license-name: MIT
maintainer: Manuel Spagnolo <spagnolo.manu@gmail.com>
synopsis: CLI and library to generate QR codes.
test-bench-deps:
  HUnit: '>=0'
  array: '>=0.5 && <0.6'
  base: '>=4.14 && <4.15'
  containers: '>=0.6 && <0.7'
  kewar: '>=0'
  split: '>=0.2 && <0.3'
