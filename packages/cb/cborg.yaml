all-versions:
- 0.1.1.0
- 0.2.0.0
- 0.2.1.0
- 0.2.2.0
- 0.2.2.1
- 0.2.3.0
- 0.2.4.0
- 0.2.5.0
- 0.2.6.0
- 0.2.7.0
- 0.2.8.0
- 0.2.9.0
- 0.2.10.0
author: Duncan Coutts
basic-deps:
  array: '>=0.4 && <0.6'
  base: '>=4.11 && <4.21'
  bytestring: '>=0.10.4 && <0.13'
  containers: '>=0.5 && <0.8'
  deepseq: '>=1.0 && <1.6'
  ghc-prim: '>=0.3.1.0 && <0.12'
  half: '>=0.2.2.3 && <0.4'
  integer-gmp: '>=1.0 && <2.0'
  primitive: '>=0.5 && <0.10'
  text: '>=1.1 && <1.3 || >=2.0 && <2.2'
changelog: |+
  # Revision history for cborg

  ## 0.2.10.0

  * Return `TypeUInt64` and `TypeNInt64` from `tokenType` when appropriate, fixing [#324](https://github.com/well-typed/cborg/issues/324)
  * Don't rely on `MonadFail Gen`
  * Support for GHC 9.8

  ## 0.2.9.0

  * Fix build with `base >= 4.17` on platforms without unaligned memory operations.
  * Fix `Eq`, `Ord`, `Show` and `IsList` instances for `SlicedByteArray` when offset is present
  * Fix `toBuilder` and `encodeByteArray` for `SlicedByteArray` when offset is present

  ## 0.2.8.0  -- 2022-09-24

  * Support GHC 9.4

  * Fix compatibility with primitive 0.7.4.0

  * Drop GHC 8.0 and 8.2 support

  * Support aeson 2.1


  ## 0.2.3.1  -- 2020-05-10

  * Bounds updates for GHC 8.10

  * `Decoder` is now a `newtype`.

  ## 0.2.2.1  -- 2019-12-29

  * Testsuite updates for GHC 8.8

  ## 0.2.2.0  -- 2019-07-31

  * Add peekByteOffset for the current ByteOffset in the input byte sequence.
    By keeping track of the byte offsets before and after decoding asubterm
    (a pattern captured by decodeWithByteSpan) and if the overall input data
    is retained then this is enables later retrieving the span of bytes for
    the subterm.

  * Add encodePreEncoded function. This allows pre-encoded CBOR data to be
    included into an Encoding. This is useful in cases where one has known-valid
    encoded CBOR data, e.g. on disk, that you want to include into a larger CBOR
    data stream. This makes it possible in such cases to avoid decoding and
    re-encoding.

  * Improved test suite property coverage. We now have property coverering most
    parts of a commuting diagram, which gives more confidence about what are
    the right properties to test and what is enough.

  * Improved test coverage for decoding non-canonical terms

  * Fix a bug in the checks in the canonical decoding of float16 NaNs. There
    are multiple bit representations of NaNs and while we were checking this
    correctly for float32 and float64 we were not checking this correctly for
    the float16 encoding.

  * Improved test coverage for special float values. We now have pretty
    comprehensive coverage of round-tripping properties for special float
    values, +/- infinity and non-canonical NaNs.

  * Improved the structure of the test suite

  * Use new GHC primitives castWord{32ToFloat,64ToDouble} rather than home grown

  * Support GHC built with integer-simple

  * Support GHC 8.8

  ## 0.2.1.0  -- 2018-10-11

  * Bounds bumps and GHC 8.6 compatibility

  ## 0.2.0.0  -- 2017-11-30

  * Improved robustness of non-UTF-8 strings

  * Add encoders and decoders for `ByteArray`

  * Add decoding variants that check for canonical encodings

  * Expose `Codec.CBOR.Read.deserialiseFromBytesWithSize`

  ## 0.1.0.0  -- 2017-06-28

  * First version. Released on an unsuspecting world.

changelog-type: markdown
description: |-
  This package provides an efficient implementation of the Concise
  Binary Object Representation (CBOR), as specified by
  [RFC 7049](https://tools.ietf.org/html/rfc7049).

  If you are looking for a library for serialisation of Haskell values,
  have a look at the [serialise](/package/serialise) package, which is
  built upon this library.

  An implementation of the standard bijection between CBOR and JSON is
  provided by the [cborg-json](/package/cborg-json) package. Also see
  [cbor-tool](/package/cbor-tool) for a convenient command-line utility
  for working with CBOR data.

  This package was formerly known as @binary-serialise-cbor@.
description-type: haddock
hash: f7b2cbd8a73f511d5ddc249f27b1ee3c48c5b4522b763a0cb4e830fb05498874
homepage: ''
latest: 0.2.10.0
license-name: BSD-3-Clause
maintainer: duncan@community.haskell.org, ben@smart-cactus.org
synopsis: Concise Binary Object Representation (CBOR)
test-bench-deps:
  QuickCheck: '>=2.9 && <2.16'
  aeson: '>=0.7 && <2.3'
  array: '>=0.4 && <0.6'
  base: '>=4.11 && <4.21'
  base-orphans: '>=0'
  base16-bytestring: '>=1.0 && <1.1'
  base64-bytestring: '>=1.0 && <1.3'
  bytestring: '>=0.10.4 && <0.13'
  cborg: '>=0'
  deepseq: '>=1.0 && <1.6'
  half: '>=0.2.2.3 && <0.4'
  primitive: '>=0.5 && <0.10'
  random: '>=0'
  scientific: '>=0.3 && <0.4'
  tasty: '>=0.11 && <1.6'
  tasty-hunit: '>=0.9 && <0.11'
  tasty-quickcheck: '>=0.8 && <0.11'
  text: '>=1.1 && <2.2'
  vector: '>=0.10 && <0.14'
