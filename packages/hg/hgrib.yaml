all-versions:
- 0.1.0.0
- 0.2.0.0
- 0.3.0.0
- 0.3.1.0
author: Mattias Jakobsson
basic-deps:
  base: '>=4.5 && <4.9'
  hgrib: '>=0'
  transformers: '>=0.3 && <0.5'
changelog: |
  # HGrib Change Log

  ## 0.3.1.0

  * Added `skipMessage`, `skipMessageIf`, and `skipMessageIf_` to
    `Data.Grib`, three functions to easily skip unwanted GRIB messages
    in a file.


  ## 0.3.0.0

  * Added a `GribIO` monad in `Data.Grib`, which is a higher-level
    abstraction for reading GRIB files over the raw bindings in
    `Data.Grib.Raw`.

  * Moved `Data.Grib.Raw.Exception` up to `Data.Grib`.

  * `Data.Grib.Raw` no longer re-exports the `Exception` module
    mentioned above.

  * Made `gribHandleNewFromFile` return a `Maybe GribHandle` instead of
    a plain `GribHandle`.  `Nothing` is returned if no more messages
    could be read from the given stream.

  * Re-organized the test utility modules.

  * Moved `Data.Grib.Raw.Marshal` from other to exposed modules, but it
    should still be considered an internal module and it is not included
    in the documentation.


  ## 0.2.0.0

  * Extended the compatible version range of GRIB API and the Haskell
    base library.

  * Added a `gribGetApiVersion` function to `Data.Grib.Raw`.

  * Included the `Data.Grib.Raw.Exception` module in `Data.Grib.Raw` and
    removed the marshal function `withGribMultiHandle`.

  * Removed

    * `gribContextSetMemoryProc`
    * `gribContextSetPersistentMemoryProc`
    * `gribContextSetBufferMemoryProc`
    * `gribContextSetPrintingProc`
    * `gribContextSetLoggingProc`

    and corresponding foreign function type definitions from
    `Data.Grib.Raw` to be able to mark all remaining functions _unsafe_
    from a FFI perspective.

  * Marked all foreign imports _unsafe_.

  * Integrated the source code repository with [Travis CI][].

  * Abandoned the plans to include the full GRIB API in `grib_api.h`
    (but requests to include specific parts are welcome).


  ## 0.1.0.0

  * Initial release.


  [Travis CI]: https://travis-ci.org/mjakob/hgrib
changelog-type: markdown
description: |
  # HGrib

  [![Build Status](https://travis-ci.org/mjakob/hgrib.svg?branch=master)](https://travis-ci.org/mjakob/hgrib)

  Unofficial bindings for [ECMWF][]'s [GRIB API][] library for reading
  and writing [WMO FM-92 GRIB][] edition 1 and edition 2 messages.

  In this version of HGrib, a read-only monadic Haskell interface to
  GRIB API is provided.  Raw bindings for the [documented][GRIB Docs]
  parts of GRIB API are also available.  Future versions are intended to
  expand the higher-level Haskell interface to include, among other
  things, write support.


  ## Installation

  The following prerequisites are needed to build HGrib:

    * [GRIB API][] >= 1.12 installed and discoverable by ghc (use
      cabal's `--extra-include-dirs` and `--extra-lib-dirs` if it's
      installed at a custom location); and

    * Haskell [base][] >= 4.5; and

    * [c2hs][] == 0.26.*.

  With these requirements available, HGrib can be installed from
  [Hackage][] with [Cabal][]:

  ```
  cabal install hgrib
  ```


  ## Usage

  HGrib provides a high-level monadic Haskell interface to GRIB API in
  `Data.Grib`. An example of its usage is GRIB API's [get.c][GRIB Get]
  example re-written with HGrib:

  ```haskell
  import Control.Exception ( assert )
  import Data.Grib
  import Text.Printf       ( printf )

  main :: IO ()
  main = let filename = "test/stage/regular_latlon_surface.grib1" in
    runGribIO_ filename $ do
      setString "file" filename

      getLong "Ni" >>= liftIO . printf "numberOfPointsAlongAParallel=%d\n"
      getLong "Nj" >>= liftIO . printf "numberOfPointsAlongAMeridian=%d\n"

      getDouble "yFirst" >>=
        liftIO . printf "latitudeOfFirstGridPointInDegrees=%g\n"
      getDouble "xFirst" >>=
        liftIO . printf "longitudeOfFirstGridPointInDegrees=%g\n"
      getDouble "yLast"  >>=
        liftIO . printf "latitudeOfLastGridPointInDegrees=%g\n"
      getDouble "xLast"  >>=
        liftIO . printf "longitudeOfLastGridPointInDegrees=%g\n"
      getDouble "DyInDegrees" >>=
        liftIO . printf "jDirectionIncrementInDegrees=%g\n"
      getDouble "DxInDegrees" >>=
        liftIO . printf "iDirectionIncrementInDegrees=%g\n"

      getString "packingType" >>= liftIO . printf "packingType=%s\n"

      values <- getValues
      let numValues = length values
          average   = sum values / fromIntegral numValues
      liftIO $ printf "There are %d values, average is %g\n" numValues average

      filename' <- getString "file"
      liftIO $ assert (filename' == filename) (return ())
  ```

  Raw bindings for the [documented][GRIB Docs] part of GRIB API is also
  available in `Data.Grib.Raw`.  To be able to work with these bindings,
  bindings for C's `fopen` is provided in `Data.Grib.Raw.CFile` (which
  is re-exported by `Data.Grib.Raw`).

  For more information, see HGrib's
  [reference documentation][HGrib Docs] generated by [Haddock][].


  ## Contributing

  Issues, feature and pull requests are most welcome!  In particular,
  please give suggestions on what you would like to see in the
  higher-level interface and let me know if there is any undocumented
  part of GRIB API that you would like to have included.


  ## Licenses

  HGrib was created and is currently maintained by
  [Mattias Jakobsson][].  It is released under the
  [GNU General Public License v3.0][GPL3].  ECMWF's GRIB API is released
  under the [Apache license][].  **HGrib is in no way associated with
  ECMWF or the original library.**


  [Apache license]:    https://software.ecmwf.int/wiki/display/GRIB/License
  [base]:              http://hackage.haskell.org/package/base
  [c2hs]:              https://github.com/haskell/c2hs
  [Cabal]:             https://www.haskell.org/cabal/
  [ECMWF]:             http://www.ecmwf.int/
  [GPL3]:              http://www.gnu.org/licenses/gpl-3.0.html
  [GRIB API]:          https://software.ecmwf.int/wiki/display/GRIB/Home
  [GRIB Docs]:         https://software.ecmwf.int/wiki/display/GRIB/Module+Index
  [GRIB Get]:          https://software.ecmwf.int/wiki/display/GRIB/get.c
  [Hackage]:           http://hackage.haskell.org/
  [Haddock]:           https://www.haskell.org/haddock/
  [HGRIB Docs]:        https://hackage.haskell.org/package/hgrib
  [Mattias Jakobsson]: https://github.com/mjakob
  [WMO FM-92 GRIB]:    http://www.wmo.int/pages/prog/www/WMOCodes/Guides/GRIB/Introduction_GRIB1-GRIB2.pdf
description-type: markdown
hash: f7ed0e9520193c84e96bcf7e9b56ff412d34b3d1452ae311f2998a3611468161
homepage: https://github.com/mjakob/hgrib
latest: 0.3.1.0
license-name: GPL-3.0-only
maintainer: mjakob422@gmail.com
synopsis: Unofficial bindings for GRIB API
test-bench-deps:
  base: '>=4.5 && <4.9'
  directory: '>=1.1 && <1.3'
  hgrib: '>=0'
  hspec: '>=2.1 && <2.2'
