homepage: https://code.mathr.co.uk/hgmp
changelog-type: markdown
hash: e41a4e5b8464e948403539e641007022203c8d76c65332fc8bef8d54c373bec6
test-bench-deps:
  hgmp: -any
  base: -any
  QuickCheck: '>=2.8 && <2.15'
maintainer: claude@mathr.co.uk
synopsis: Haskell interface to GMP
changelog: |
  # 0.1.2.1
  - fix incorrect wrappers for Win64
  - relax dependencies for ghc-9.4

  # 0.1.2
  - ghc-9 compatibility

  # 0.1.1
  - raw function foreign import bindings
  - define hsc2hs #alignment macro for older GHC versions

  # 0.1.0.1
  - use hsc2hs's #alignment macro in Storable instances

  # 0.1.0.0
  - initial release
basic-deps:
  base: '>=4.8 && <4.18'
  integer-gmp: '>=1.0 && <1.1'
  ghc-prim: '>=0.4 && <0.10'
all-versions:
- 0.1.0.0
- 0.1.0.1
- 0.1.1
- 0.1.2
- 0.1.2.1
author: Claude Heiland-Allen
latest: 0.1.2.1
description-type: markdown
description: |
  hgmp
  ====

  Haskell interface to GMP.  Types and instances, and marshalling between Integer
  and Rational and the corresponding GMP types, along with raw foreign imports of
  GMP functions.  Allows FFI to GMP code (whether in GMP itself or in third-party
  code that uses GMP).

  A simple example illustrating binding to GMP's next probable-prime function:

      {-# LANGUAGE ForeignFunctionInterface #-}

      import Foreign.Ptr (Ptr(..))
      import Numeric.GMP.Types (MPZ)
      import Numeric.GMP.Utils (withInInteger, withOutInteger_)
      import Numeric.GMP.Raw.Safe (mpz_nextprime)
      import System.IO.Unsafe (unsafePerformIO)

      nextPrime :: Integer -> Integer
      nextPrime n =
        unsafePerformIO $
          withOutInteger_ $ \rop ->
            withInInteger n $ \op ->
              mpz_nextprime rop op
license-name: BSD-3-Clause
