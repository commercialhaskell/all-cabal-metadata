all-versions:
- 0.1.0.0
- 0.1.0.1
- 0.1.0.2
author: Andrew Pritchard <awpritchard@gmail.com>, Reiner Pope <reinerp@google.com>
basic-deps:
  adjunctions: '>=4.0 && <4.5'
  base: '>=4.12 && <4.17'
  data-default-class: '>=0.0 && <0.2'
  deepseq: '>=1.1 && <1.5'
  distributive: '>=0.1 && <0.7'
  hashable: '>=1.0 && <1.4'
  portray: '>=0.1.1 && <0.4'
  portray-diff: '>=0.1 && <0.2'
  some: '>=1.0 && <1.1'
  text: '>=0.1 && <1.3'
  transformers: '>=0.0.1 && <0.6'
  wrapped: '>=0.1 && <0.2'
changelog: |
  # 0.1.0.0

  Initial version.

  # 0.1.0.1

  * Extend support back to GHC 8.6.

  # 0.1.0.2

  * Support portray-0.2.
changelog-type: markdown
description: |-
  This provides a mirror of the traditional typeclass hierarchy for types of
  kind @(k -> Type) -> Type@, or functors from the category __Hask{k}__ to
  __Hask__, where __Hask{k}__ denotes the category whose objects are mappings
  from @k@ to @Type@, and whose morphisms are the parametric functions between
  them.  In general, these functors look like variations on the theme of
  "polymorphic records", also frequently described as "higher-kinded data".

  We currently provide the following classes, which correspond directly to
  their equivalents in "base" or "adjunctions": 'Functor10', 'Foldable10',
  'Traversable10', 'Applicative10', and 'Representable10'.  Additionally, a
  class 'Constrained10' provides instances for the argument of each occurrence
  of the type parameter in a value.
description-type: haddock
hash: e010d68ab99150d8dde5497e9c247c42e57adc7d2435381481762443fa10f981
homepage: https://github.com/google/hs-ten#readme
latest: 0.1.0.2
license-name: Apache-2.0
maintainer: Andrew Pritchard <awpritchard@gmail.com>
synopsis: Functors et al. over arity-1 type constructors
test-bench-deps:
  HUnit: '>=0'
  adjunctions: '>=4.0 && <4.5'
  base: '>=4.12 && <4.17'
  data-default-class: '>=0.0 && <0.2'
  deepseq: '>=1.1 && <1.5'
  distributive: '>=0.1 && <0.7'
  hashable: '>=1.0 && <1.4'
  portray: '>=0.1.1 && <0.4'
  portray-diff: '>=0.1 && <0.2'
  some: '>=1.0 && <1.1'
  ten: '>=0'
  test-framework: '>=0'
  test-framework-hunit: '>=0'
  text: '>=0.1 && <1.3'
  transformers: '>=0.0.1 && <0.6'
  wrapped: '>=0.1 && <0.2'
