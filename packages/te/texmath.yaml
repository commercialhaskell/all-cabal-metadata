homepage: http://github.com/jgm/texmath
changelog-type: text
hash: 104c13d6cb238b54d3aa8ff6aa20dc4f7a22bc9c24e98186cc73699f39b988ad
test-bench-deps:
  bytestring: -any
  base: '>=4.11 && <5'
  tasty-golden: -any
  text: -any
  filepath: -any
  xml: -any
  tagged: -any
  pretty-show: -any
  tasty: -any
  directory: '>1.2.5'
  texmath: -any
maintainer: jgm@berkeley.edu
synopsis: Conversion between math formats.
changelog: "texmath (0.12.5.2)\n\n  * Fix bug in implementation of `\\mspace` (#195).\n\ntexmath
  (0.12.5.1)\n\n  * Compile texmath-server with `-threaded`.\n    This should fix
  the crashes we have experienced.\n\n  * Add apache style logging to web server.\n\n
  \ * Add more strictness in Unicode.ToTeX.\n\ntexmath (0.12.5)\n\n  * TeX reader:
  Improve treatment of `\\operatorname` (#147).\n    We can now handle spaces, as
  in `\\operatorname{arg\\,max}`.\n    We also now have a better fallback when the
  operator name\n    contains content that can't be turned into plain text.\n    (In
  this case, we just pass through the contents, since EMathOperator\n    takes a text
  argument.)\n\n  * TeX: Support more `\\var...` commands for greek letters (Albert\n
  \   Krewinkel). AMSmath defines `\\varGamma`, `\\varDelta`, `\\varTheta`,\n    `\\varLambda`,
  `\\varXi`, `\\varPi`, `\\varSigma`, `\\varUpsilon`, `\\varPhi`,\n    `\\varPsi`,
  and `\\varOmega`, all of which are now parsed as unicode\n    characters *MATHEMATICAL
  ITALIC CAPITAL ...*.  Also, `\\varsigma` is\n    now parsed as *MATHEMATICAL SMALL
  FINAL SIGMA*.\n\n  * OMML writer: better handling for scaled delimeter symbols (#140).\n
  \   We now try to represent these using m:d when possible.\n    This allows the
  parentheses to expand with the content;\n    previously we'd often get small parentheses
  with large\n    contents.\n\n  * OMML reader:\n\n    + Allow m:pos to be missing
  or lack an attribute in m:bar (#187).\n    + Set the default value of pos to \"bot\"
  (Maximilian Meier).\n    + Implement support for noBar fractions (#191, Meimax).\n\n
  \ * Add servant-based server with a JSON API.\n\n  * Remove old cgi directory.\n\n
  \ * Improve test suite (#189).  The existing test suite was a complicated\n    mess,
  so that it was hard to add new tests.  (One of the problems\n    was that the same
  files were used as golden files for reader\n    tests and as sources for writer
  tests.) This commit shifts\n    the same tests to a new, easier to understand format,
  so that\n    it will be simple to add new tests in the future.  We now use\n    the
  tasty test framework, and we use pretty-show to make the\n    native golden tests
  easier to comprehend.\n\n  * Add regression tests.\n\ntexmath (0.12.4)\n\n  * TeX
  reader: handle hyperref better (#186).  We don't parse it as a link,\n    but we
  pass its contents through rather than failing.\n\n  * Update scripts and data in
  `lib/` directory. These are not build\n    dependencies, but they were used to produce
  some of the large\n    tables in the source code.  Fixed the scripts and Makefile
  to work\n    with recent texmath and cabal.  Removed two very large unicode data\n
  \   files that can be downloaded when needed.  (This reduces the size of\n    the
  source tarball considerably.) Remove `lib/toascii` (no longer used).\n\n  * Update
  MMLDict using latest unicode.xml.\n\n  * TeX reader: support siunitx `\\qty`, `\\qtyrange`,
  `\\unit` (#185).\n\n  * Remove Text.TeXMath.Compat.  We can now safely require mtl
  >= 2.2.1.\n\n  * Use symbolMap from ToTeX to shorten the long hardcoded symbols
  list.\n    Now we only hard-code items that differ what what is in symbolMap.\n
  \   This reduces the code size by thousands of lines.\n\n  * Unicode.ToTeX: export
  `symbolMap` [API change].  This uses the data in\n  `records` to create a backwards
  mapping from TeX commands to Exps (ESymbol\n      elements).  This can replace most
  of the hardcoded list in the current\n  TeX reader.\n\n  * Split out TeXMath.Readers.TeX.Commands
  internal module.\n    This makes the TeX reader shorter and should help compile
  times.\n\n  * OMML reader: better handling of m:t nodes (#151).\n    Previously
  we parsed an m:t element as an EIdentifier if it contains a\n    single letter,
  but an EText TextNormal if it contains more than one.  This\n    gave bad results
  in some cases.  It is better to reserve EText for the\n    case where the m:nor
  property is specified for \"normal text.\"\n\n  * Require base >= 4.11.\n\n  * Remove
  `network-uri` flag from stack.yaml.\n\n\ntexmath (0.12.3.3)\n\n  * OMML writer:
  use nary only for operators supported by LibreOffice\n    (Albert Krewinkel).  LibreOffice
  (and possibly Word, too) can handle\n    only a small set of operators in an `nary`
  element.\n\n  * TeX writer: use `\\xleftarrow`, `\\xrightarrow` where sensible\n
  \   (Albert Krewinkel).  The commands are generated for expressions over `←`\n    or
  `→`. Besides being more idiomatic, this change also prevents the\n    generation
  of invalid LaTeX, as `\\leftarrow` and `\\rightarrow` are not\n    math operators
  and hence may not be followed by `\\limit`.\n    Both commands are part of amsmath.sty.\n\n
  \ * TeX reader:\n\n    + Improve angled-bracket support (Albert Krewinkel).\n      The
  amsmath package allows `\\left<` and `\\right>` as alternatives to\n      `\\left\\langle`
  and `\\right\\rangle`, respectively.\n    + Ignore stared version of `\\tag` (Albert
  Krewinkel).\n    + Support \\dots{c,b,m,i,o} from amsmath (#179).\n    + Change
  symbol returned for \\dots{b,i,m} from `…` to `⋯`\n      (Albert Krewinkel).\n\ntexmath
  (0.12.3.2)\n\n  * OMML writer: remove m:nor element in math operators (#178).\n
  \   This caused the document's main font, rather than the math\n    font, to be
  used in formatting operators, which is undesirable.\n\ntexmath (0.12.3.1)\n\n  *
  MathML reader: don't allow mfenced attributes to inherit (#177).\n    When open
  and close attributes aren't given on an mfenced,\n    we should use defaults rather
  than inheriting these from a\n    parent mfenced.\n\ntexmath (0.12.3)\n\n  * TeX
  reader: implement logic to convert a Bin symbol to\n    an Op to Op when it occurs
  at the beginning of a group,\n    or after an Open, Pun, or Op symbol. This will
  give much\n    better results for unary `-` (#176).\n\n  * OMML writer: fixed rendering
  of EDelimited (#173).\n    We now properly render \"middles\" (separators).\n\ntexmath
  (0.12.2)\n\n  * MathML input: support mmultiscripts element (#158, #100).\n\n  *
  Make MathML tag/attr recognition case-insensitive (#158).\n\n  * Pandoc writer:
  better handling of styling such as `\\mathrm` (#145).\n    Previously identifiers
  were always italic, no matter what\n    styling was applied.\n\n  * Ignore `\\tag`
  in TeX input (#162).\n\n  * TeX writer: avoid unneeded `\\left` and `\\right` for
  delimited.\n    We don't need `\\left` and `\\right` when the contents are\n    \"standard
  height.\"\n\n  * TeX reader: parse implicit EDelimited sections (#172).\n    We
  now parse `(x)` as EDelimited, even though `\\right` and `\\left`\n    are not used.\n\ntexmath
  (0.12.1.1)\n\n  * Fix compilation with GHC-9.0.1 (#169, Simon Jakobi).\n    Background:\n
  \   https://gitlab.haskell.org/ghc/ghc/-/wikis/migration/9.0#simplified-subsumption\n
  \ * Add eqn to online demo.\n  * Improve error messages for unknown control sequences,
  and restructure\n    tex parser to be more efficient (#167).\n\ntexmath (0.12.1)\n\n
  \ * OMML writer: explicitly mark symbols as non-italic (#109).\n    Otherwise, for
  some reason, they appear as italic by default.\n  * Improve error messages in reading
  tex arrays.\n  * Improve support for `\\bmod`, `\\mod`, etc. (#165).\n    Allow
  them to take complex arguments like `\\left( 1 \\right)`.\n  * Improve support for
  `\\genfrac` (#164).\n  * Ignore `\\textstyle`, `\\scriptstyle`, `\\scriptscriptstyle`,\n
  \   as we currently ignore `\\displaystyle`.\n  * Parse siunitx commands in reading
  tex (#157).\n  * Improve handling of `\\not` in reading tex (#161).\n    Previously
  we only handled `\\not` in front of certain symbols.\n  * Support `\\pod` and `\\pmod`
  and clean up spacing and font for\n    `\\mod` and `\\bmod` (#160).\n\ntexmath (0.12.0.3)\n\n
  \ * Allow pandoc-types 1.22.\n\ntexmath (0.12.0.2)\n\n  * Allow pandoc-types 1.21.\n
  \ * Pandoc output: omit empty Emph for sub/superscript without base (#155).\n  *
  tex writer: Use `\\overline{\\overline{B}}` instead of unicode\n    double line
  accent (#153).\n\ntexmath (0.12.0.1)\n\n  * OMML writer: Fix overline and accent
  rendering (#152).\n  * OMML reader: Fix dropped arrows (#153). Add tests.\n\ntexmath
  (0.12)\n\n  * Use Text instead of String in data types and functions\n    (Christian
  Despres) [API change].  Note that there are still a few\n    places where we unpack
  Text to String with a view pattern:\n    performance could likely be increased with
  further rewriting.\n  * Avoid use of !! with negative index (jgm/pandoc#5853).\n\ntexmath
  (0.11.3)\n\n  * Use error instead of fail to allow building with ghc 8.8.\n  * Test
  output: remove superfluous spaces after control sequences,\n    superfluous groups,
  and unicode VARIATION SELECTOR 1.\n  * renderTeX: add space between control sequence
  and any non-ASCII\n    character.  There are differences in behavior of isAlphaNum
  between\n    different ghc versions that would affect test output otherwise.\n  *
  charToLaTeXString: Ignore 65024 VARIATION SELECTOR 1 to avoid putting\n    it literally
  in the output ; it is used in mathml output and occurs\n    in many of the test
  cases.\n  * Add cabal.project.\n  * Use actions rather than travis for CI.\n\ntexmath
  (0.11.2.3)\n\n  * OMML reader: properly distinguish normal text from math (#136).\n
  \   If `m:nor` or `m:lit` is set in `m:rPr`, we interpret the\n    contents as literal
  text and not as math.\n  * TeX reader: use different symbol (`_`) for `\\underline`
  (#142).\n    This gets the right accent properties on MathML output, so\n    that
  the underline is not lower than it should be.\n  * TeX reader: Treat `\\bmod` as
  a relational symbol rather than\n    an operator (#143).  This fixes spacing problems
  in several\n    output formats.\n\ntexmath (0.11.2.2)\n\n  * OMML writer: use m:nor
  for normal text (#135).\n\ntexmath (0.11.2.1)\n\n  * OMML reader: Don't collapse
  `fName` to a string (#133).\n    This fixes cases where fName has some complexity,
  e.g.\n    a subscript or limit.\n\ntexmath (0.11.2)\n\n  * Improved handling of
  \\mathop etc (#126).  We now allow operators like\n    `arg\\,min`, converting the
  space into unicode.\n  * Support \\hspace (#126).\n  * Support \\hdots as synonym
  of \\ldots (#126).\n  * Support \\mathds (#126).\n  * In parsing array, ignore `|`
  in column specs (#127).\n    We have no way to represent this in EArray, currently.\n
  \   Ignoring them seems better than failing altogether.\n\ntexmath (0.11.1.2)\n\n
  \ * Eqn writer: properly escape `{` and `}`.\n  * Set more accurate bounds (Herbert
  Valerio Riedel).\n\ntexmath (0.11.1.1)\n\n  * Fix building with ghc-8.6.1 by removing
  need for now missing\n    MonadFail instances (Jonas Scholl).\n  * TeX reader: Allow
  operators like `/` to be scaled (#120).\n  * TeX reader: Improved efficiency of
  basicEnclosure.\n  * TeX reader: Handle `\\bmod` (#115).\n\ntexmath (0.11.1)\n\n
  \ * OMML writer: Use m:acc for accents in OMML (#119).  This fixes\n    some spacing
  issues for e.g. the translation of `\\dot{m}`.\n\ntexmath (0.11.0.1)\n\n  * OMML
  writer: use zero-width space to avoid dashed box (#118).\n    In Word, a dashed
  box shows up for empty text runs in\n    exponents and bases, or empty exponents
  and bases.  So\n    we use a zero-width space in these contexts.\n\ntexmath (0.11)\n\n
  \ * Changed treatment of non-ASCII characters.\n    Previously we ensured that the
  output of conversion to tex\n    was pure ASCII.  This meant rendering \"ä\" as
  \"a\", for\n    example, and it meant that many characters (e.g. Chinese)\n    simply
  got replaced with an empty string, while others\n    got replaced with \"[?]\".\n\n
  \   This was not a particularly helpful behavior.  Including\n    the unicode characters
  verbatim doesn't interfere with\n    latex compilation.  They often won't show up
  in the generated\n    math, but that is no worse than what happened before.\n\n
  \   This change passes through unicode characters unchanged\n    when they can't
  be converted to standard LaTeX commands.\n\n    An important reason for including
  the unicode characters\n    is that pandoc uses TeX to represent math in its AST.\n
  \   So, for example, if you convert HTML with mathml to docx,\n    you'll currently
  lose all Chinese characters, since they'll\n    disappear in the TeX intermediary,
  even though a direct\n    mathml to ooml conversion would have passed them through.\n
  \   With this change, these conversions will work better\n    (see jgm/pandoc#4642).\n\n
  \   + Removed Text.TeXMath.Unicode.ToASCII (API change).\n    + Removed cbits that
  were needed for that module.\n    + Modified Tex.TeXMath.Unicode.ToTeX to pass through\n
  \     unicode characters that can't be converted, rather\n      than trying to asciify
  them or remove them.\n\n  * Render degree symbol in tex as `{^\\circ}`.\n\ntexmath
  (0.10.1.2)\n\n  * eqn writer:  use uppercase letters in unicode escapes (jgm/pandoc#4597).\n\ntexmath
  (0.10.1.1)\n\n  * Handle multicharacter operators better in Eqn, TeX, OMML (#109).\n\n
  \ * OMML reader: unwrap `<w:...>` tags immediately under `<m:oMath>`\n    (#111,
  Jesse Rosenthal).\n\ntexmath (0.10.1)\n\n  * Expose Text.TeXMath.TeX (TeX rendering
  functions) (#108).\n    This is needed in order to use getTeXMath from Text.TeXMath.Unicode.ToTeX.\n
  \ * Pandoc writer: don't insert punctuation space before explicit space\n    (#107).
  \ E.g. in `2,\\!4`.\n  * Fix end-line command ('\\\\') in AMSmath environments (ARATA
  Mizuki).\n    The end-line command in AMSmath environments does not allow spaces\n
  \   before its optional argument.\n  * Use `\\in` for SMALL ELEMENT OF in \"base\"
  (Vaclav Haisman).\n\ntexmath (0.10)\n\n  * Use `\\ni` in base for U+220D (#103).\n
  \ * Improved unicode -> tex symbol lookup.  Previously we had many\n    cases where
  the lookup table would map a unicode character to\n    the empty string for the
  base package, and this would print finding\n    a good match in another package
  in the environment.\n  * Added support for `\\symbf` (#101).\n  * Revert \"migrating
  the lookup structures for Unicode/ToTex.hs to\n    use C source files to accelerate
  builds.\"  This change gave us somewhat\n    faster builds (using less memory),
  but at a huge cost of\n    maintainability.\n  * Removed AlignDefault from Alignment
  (API change, #102).\n    AlignDefault doesn't make sense for a converter between\n
  \   formats that may have different defaults.  We now properly treat\n    centering
  as the default in MathML and OMML input.\n\ntexmath (0.9.4.4)\n\n  * Update tests
  that should have been updated for 0.9.4.3.\n\ntexmath (0.9.4.3)\n\n  * MathML writer:
  put linethickness attribute directly on mfrac\n    element. This fixes binomial
  rendering.\n\ntexmath (0.9.4.2)\n\n  * Pandoc writer: better handle accented characters
  (jgm/pandoc#3922).\n\ntexmath (0.9.4.1)\n\n  * Improved handling of accents and
  upper/lower delimiters (#98).\n  * cgi: use cloudflare cdn for mathjax.\n\ntexmath
  (0.9.4)\n\n  * Added writer for GNU eqn format (used with *roff).\n\n    + New module
  Text.TeXMath.Writers.Eqn, exporting writeEqn.\n    + Moved handleDownup to Shared.\n
  \   + Add eqn output option in texmath executable.\n    + Add eqn writer tests.\n\ntexmath
  (0.9.3)\n\n  * Expose pMacroDefinition in Text.TeXMath.Readers.TeX.Macros,\n    with
  generalized type.\n\ntexmath (0.9.2)\n\n  * Support `\\newenvironment` and `\\renewenvironment`.\n\ntexmath
  (0.9.1.1)\n\n  * Added program to generate cbits/{key,val}ToASCII.c from a data
  file.\n  * Migrate lookup structures for Unicode/ToTex.hs to use C\n    source files
  to accelerate builds (Carter Tazio Schonwald).\n  * Allow \\boldsymbol + a token
  without braces.\n    And same for other styling commands. Closes #94.\n  * Better
  ghc-prof-options.\n\ntexmath (0.9.1)\n\n  * Pandoc writer:  add thin space after
  math operators.\n  * TeX reader: improve parsing of `\\mathop` to allow\n    multi-character
  operator names.\n  * Minor optimizations.\n  * Added Ord instances to Exp and associated
  types.\n\ntexmath (0.9)\n\n  * OMML writer: Properly handle nary inside delimiters
  (#92).\n    Previously under-overs inside delimiters didn't get\n    converted to
  nary the way they did outside of delimiters.\n  * TeX reader: Support bm, mathbold,
  pmd.\n  * OMML reader: Handle w:sym (#65).\n  * New module, Text.TeXMath.Unicode.Fonts,
  for MS font code point\n    lookup.  Copied from pandoc Text.Pandoc.Readers.Docx.Fonts,\n
  \   which will be changed to import this.  [API change]\n  * Fixed typo in test
  program for round-trip tests.\n  * Parse math inside text constructions (#62).  E.g.\n
  \   `\\text{if $y$ is greater than $0$}` Text and math can nest indefinitely.\n
  \ * Modify test suite so tests can be marked as \"ought to raise error.\"\n    So
  far this is only used in mml.  If the test is called foo\n    and `readers/mml/foo.error`
  exists, then the test is expected\n    to raise a parse error.\n  * MathML reader
  err: Don't print colon after line number.\n  * Restore proper error handling to
  MathML reader.  Note that the tests\n    need to be redone, since they assumed the
  old behavior of just\n    returning empty elements on parse errors.\n\ntexmath (0.8.6.7)\n\n
  \ * TeX reader: treat backslash + newline as like backslash + space.\n    Previously
  this case gave an error.  See jgm/pandoc#3189.\n\ntexmath (0.8.6.6)\n\n  * Allow
  pandoc-types 1.17.*.\n\ntexmath (0.8.6.5)\n\n  * Fixed transposition of sub/super
  on operators (jgm/pandoc#3040).\n\ntexmath (0.8.6.4)\n\n  * Support 'equation' environment,
  without the numbering of course.\n\ntexmath (0.8.6.3)\n\n  * Use POST instead of
  GET for texmath-cgi.\n\ntexmath (0.8.6.2)\n\n  * Fixed array alignment issues (jgm/pandoc#2864,
  jgm/pandoc#2310).\n  * Use 1 and 0 for _Hide attributes, rather than on and off.\n
  \   Officially it seems that either 1/0 or true/false are wanted.\n  * Fixed EUnderOver
  for omml output.  Previously both the under and\n    the over part were being placed
  under (jgm/pandoc#2775).\n\ntexmath (0.8.6.1)\n\n  * OMML writer:  Fixed rendering
  of roots, so that the degree appears\n    in the right place.\n  * OMML writer:
  \ Don't include empty rPr elements.\n\ntexmath (0.8.6)\n\n  * TeX reader: Support
  hundreds more math symbols (all of those defined in\n    Text.TeXMath.Unicode.ToTeX),
  including `\\nwarrow`, `\\swarrow`,\n    `\\nearrow`, `\\searrow` (#90).\n\ntexmath
  (0.8.5.1)\n\n  * OMML writer: Fixed order of elements in nary formulas to conform\n
  \   to OMML spec (#88, Niko Weh).  `<e>` must follow the `<sup>` and `<sub>`\n    parts
  of `<nary>`. This fixes rendering issues in LibreOffice\n    (though Word copes
  with the incorrect order).\n  * Added Paths_texmath to Other-Modules for texmath
  executable.\n\ntexmath (0.8.5)\n\n  * TeX parser: Support limited styling inside
  \\DeclareMathOperator (#85).\n  * TeX reader: Correctly parse \\mbox.  Its argument
  is text mode.\n  * Updated mathml tests to use mo for operators.\n  * TeX reader:
  support mathopen, mathclose, mathpunct.\n  * MathML writer: render EMathOperator
  as mo, not mi (#86).\n  * MathML: handle leading space in EText (#87).\n  * Take
  --version in executable from cabal metadata.\n  * Added Paths_texmath to other-modules.\n\ntexmath
  (0.8.4.2)\n\n  * Fixed overbrace, underbrace (#82).  Previously we were using the
  wrong\n    character: U+FE37 instead of U+23DE.  This didn't work in Word.\n  *
  Support \\mathop, \\mathrel, \\mathbin, \\mathord\n  * MathML - render Symbol Ord
  as mi, not mo (#83).\n  * Handle align environments with > 2 cells per row (#84).\n\ntexmath
  (0.8.4.1)\n\n  * Added stack install instructions.\n  * Fixed bold-italic in OMML
  (#76).  Previously `\\mathbfit` didn't work\n    properly in OMML output.\n  * Ignore
  `\\nonumber` (#79).\n  * Allow styling in `\\operatorname` e.g. `\\operatorname{\\mathcal{L}}`
  (#80).\n  * Fixed bug in `supHide` and `subHide` for OMML.  This  led to little\n
  \   empty boxes being displayed in integrals with subscripts but no\n    superscripts.
  \ See jgm/pandoc#2571.\n  * Implemented `\\mod` as a math operator (#81).  This
  doesn't capture all the\n    spacing subtleties of the amsmath version, but should
  be good enough\n    for most purposes.\n  * Allow pandoc-types < 1.17.\n\ntexmath
  (0.8.4)\n\n  * Improved symbol spacing in Pandoc output (jgm/pandoc#2261).\n    This
  change avoids putting space around binary symbols that\n    come at the beginning
  or end of a group, or appear on their\n    own.  It also avoids spacing on a binary
  symbol that follows\n    a Bin, Op, Rel, Open, or Punct atom, in accord with\n    TeXBook
  Appendix G.  We could go farther towards exactly\n    matching the TeXBook rules,
  but this simple change goes some of\n    the way.\n  * Added stack.yaml.\n\ntexmath
  (0.8.3)\n\n  * Parse uppercase Greek letters as EIdentifier, not ESymbol Op.\n    This
  fixes handling of things like `$Lambda^1$`, particularly in omml.\n\ntexmath (0.8.2.2)\n\n
  \ * Handle `.` after number with no following digits.\n\ntexmath (0.8.2.1)\n\n  *
  Handle bare hyphen in `\\text{...}`.  Closes jgm/pandoc#2274.\n  * Support `\\ltimes`
  and `\\rtimes` in the TeX reader (Arata Mizuki).\n  * Slightly more efficient number
  parser.\n\ntexmath (0.8.2)\n\n  * Better handling of decimal points. Decimal points
  are now parsed\n    as parts of numbers, not as separate symbols.  E.g. in MathML
  they\n    now appear in `<mn>` elements.  Closes #74.\n\ntexmath (0.8.1)\n\n  *
  OMML: Don't force everything into Roman font by default.\n    This change ensures
  that variables will be italic by\n    default in Word.  See jgm/pandoc#2075.\n\ntexmath
  (0.8.0.2)\n\n  * Fixed typo in `defaultEnv` to include `amssymb` (#68).\n  * Moved
  some lookup tables to C, and disabled aggressive\n    profiling defaults, to avoid
  excessive memory usage in\n    compiling with clang (#70).\n  * Support `\\newcommand*`
  in `parseMacroDefinition` (jgm/pandoc#2005).\n  * Fixed order bug for over/under
  in OMML reader (#66).\n  * Support `\\boldsymbol` (#67).\n\ntexmath (0.8.0.1)\n\n
  \ * Added network-uri flag. This addresses the split of network\n    and network-uri
  packages.\n  * OMML reader: change default accent (Jesse Rosenthal).\n    The default
  had previously been set as accute (possibly as a\n    placeholder). It appears to
  be circumflex/hat instead.\n\ntexmath (0.8)\n\n  * Added OMML reader (Jesse Rosenthal).\n
  \ * Support latex \\substack (#57).\n  * Added EBoxed and implemented in readers
  and writers (#58).\n  * Handle latex \\genfrac.  Use \\genfrac for \\brace, \\brack,\n
  \   etc. when amsmath is available.\n  * Improvements in handling of space characters.\n
  \ * Use ESpace rather than EText when a mathml mtext just contains\n    a space.\n
  \ * Use \\mspace when needed to get latex spaces with odd sizes, rather\n    than
  finding the closest simple command.\n  * Use Rational instead of Double in ESpaced,
  EScaled.\n  * Shared: Export getSpaceWidth, getSpaceChars.\n  * Shared: Export fixTree,
  isEmpty, empty (formerly in MathML reader).\n\ntexmath (0.7.0.2)\n\n  * TeX reader:
  \ further improvements in error reporting.\n    Instead of reporting line and column,
  a snippet is printed\n    with a caret indicating the position of the error.  Also\n
  \   fixed bad position information when control sequences are\n    followed by a
  letter.\n\ntexmath (0.7.0.1)\n\n  * TeX reader:\n\n    + Improved error reporting.\n
  \   + Optimized parser.\n    + Treat `\\ ` as ESpaced rather than ESymbol.\n    +
  Internal improvements, including using the parsec3 interface\n      instead of the
  older parsec2 compatibility interface.\n\n  * Added tests for phantom.\n\ntexmath
  (0.7)\n\n  * Changes in Exp type:\n\n    + Removed EUp, EDown, EDownup, EUnary,
  EBinary.\n    + Added EFraction (and FractionType), ESqrt, Eroot, EPhantom.\n    +
  Added boolean \"convertible\" parameter to EUnder, EOver, EUnderover.\n    + Changed
  parameter of EScaled from String to Double.\n    + Changed parameter of ESpace from
  String to Double.\n    + Removed EStretchy.\n    + Added EStyled, corresponding
  to mstyle in mathml, and \\mathrm,\n      \\mathcal, etc. in TeX (which can contain
  arbitrary math content,\n      not just text).\n    + Changed the type of EDelimited.
  \ The contents of an EDelimited are\n      now either Right Exp or Left String (the
  latter case represents a\n      fence in middle position, e.g. \\mid| in LaTeX).\n\n
  \ * Module reorganisation:  the exposed interface has been completely\n    changed,
  and modules for reading MathML and writing TeX math\n    have been added:\n\n    +
  All writers now reside in Text.TeXMath.Writers.\n        - Text.TeXMath.MathML ->
  Text.TeXMath.Writers.MathML.\n          toMathML and showExp are removed, writeMathML
  added.\n        - Text.TeXMath.OMML -> Text.TeXMath.Writers.OMML.\n          toOMML
  and showExp removed, writeOMML added.\n        - Text.TeXMath.Pandoc -> Text.TeXMath.Writers.Pandoc.\n
  \         toPandoc removed, writePandoc added.\n        - New module Text.TeXMath.Writers.TeX,
  exporting writeTeX,\n          writeTeXWith, addLaTeXEnvironment (the latter giving
  control\n          over which packages are assumed to be available).\n\n    + All
  readers now reside in Text.TeXMath.Readers.\n        - Text.TeXMath.MathMLParser
  -> Text.TeXMath.Readers.MathML,\n\t  exporting readMathML.\n        - Text.TeXMath.Readers.TeX
  nows exports readTeX rather than\n          parseFormula.\n\n    + New modules for
  unicode conversion: Text.TeXMath.Unicode.ToASCII,\n      Text.TeXMath.Unicode.ToTeX,
  Text.TeXMath.Unicode.ToUnicode.\n\n    + Two MathML specific modules: Text.TeXMath.Readers.MathML.EntityMap,\n
  \     Text.TeXMath.Readers.MathML.MMLDict.\n\n    + In Text.TeXMath, all the XtoY
  functions have been removed\n      in favour of rexporting raw reader and writer
  functions. The\n      data type Exp is now also exported.\n\n  * Bug fixes and improvements.\n\n
  \   + TeX writer: Properly handle accents inside \\text{}.\n      Use real text
  environments for EText (\\textrm, not \\mathrm).\n      Improved handling of scalers
  (\\Big etc.).  Use amsmath matrix\n      environments when appropriate.  Fixed \\varepsilon.\n
  \   + MathML writer:  Omit superfluous outer mrows.  Add position\n      information
  to fences.\n    + OMML writer:  Handle \\phantom.\n    + Pandoc writer:  Use unicode
  characters to support Fraktur and\n      other text styles.\n    + TeX reader:  Use
  EUnder/Over for \\stackrel, \\overset, \\underset.\n      Improved handling of primes.
  \ Fixed \\notin.  Avoid superfluous\n      grouping of single elements.  Improved
  handling of scalers (\\Big etc.).\n      Handle \\choose, \\brace, \\brack, \\bangle
  (#21).\n    + Macros:  Don't raise an error if applying a macro fails to\n      resolve
  to a fixed point; instead, just return the original string.\n\n  * Rewrote test
  suite as a proper cabal test suite.  Added\n    --regenerate-tests and --round-trip
  options.\n\n  * Updated texmath online demo for bidirectional conversion.\n\n  *
  Removed cgi and test flags.  Added executable flag to build texmath.\n\n  * Modified
  texmath so it works like a cgi script when run as\n    texmath-cgi (through symlink
  or renaming).  Removed dependency on\n    the cgi package.\n\ntexmath (0.6.7)\n\n
  \ * New Module: Text.TeXMath.Unidecode, a module for approximating\n    unicode
  characters in ASCII.\n  * New Module: Text.TeXMath.Shared, a module for shared lookup\n
  \   tables between the various readers and writers\n  * New Module: Text.TeXMath.MathMLParser,
  exporting readMathML.\n  * New Module: Text.TeXMath.EntityMap, exporting getUnicode,\n
  \   a conversion table from MathML entities to unicode characters.\n  * New Module:
  Text.TeXMath.UnicodeToLaTeX, exporting getLaTeX,\n    converting a string of unicode
  characters to a string of equivalent LaTeX\n    commands.\n  * New Module: Text.TeXMath.LaTeX,
  replacing Text.TeXMath.Parser,\n    exporting toTeXMath.\n  * New Module: Text.TeXMath.MMLDict,
  implements a lookup table from\n    operators to their default values as defined
  by the MML dictionary,\n    exporting getOperator.\n  * New Module: Text.TeXMath.Compat,
  maintaining compatibility with\n    mtl < 2.2.1.\n  * Modified Text.TeXMath to export
  the primitive readers, as well as\n    mathMLTo{Writer} for all writers\n  * Modified:
  Text.TeXMath.Types: added additional record types for\n    Text.TeXMath.MMLDict
  and Text.TeXMath.UnicodeToLaTeX.\n    New Exports: Operator(..), Record(..).\n  *
  Modified test suite:  use cabal test, added significant number of tests.\n  * Added
  recognition of the LaTeX command \\phantom\n\ntexmath (0.6.6.3)\n\n  * Use combining
  tilde accent for \\tilde.  Closes pandoc #1324.\n\ntexmath (0.6.6.2)\n\n  * Allow
  \\left to be used with ), ], etc.  Ditto with \\right.\n    Previously only (, [,
  etc. were allowed with \\left.  Closes pandoc #1319.\n\ntexmath (0.6.6.1)\n\n  *
  Support \\multline (previously it was mispelled \"multiline\")\n  * Changed data-files
  to extra-source-files.\n\ntexmath (0.6.6)\n\n  * Insert braces around macro expansions
  to prevent breakage (#7).\n  * Support \\operatorname and \\DeclareMathOperator
  (rekka) (#17).\n  * Support \\providecommand (#15).\n  * Fixed spacing bugs in pandoc
  rendering (#24).\n  * Ignore \\hline at end of array row instead of failing (#19).\n\n"
basic-deps:
  split: -any
  base: '>=4.11 && <5'
  text: -any
  syb: '>=0.4.2 && <0.8'
  parsec: '>=3'
  pandoc-types: '>=1.20 && <1.23'
  xml: -any
  containers: -any
  mtl: '>=2.2.1'
all-versions:
- '0.1'
- 0.1.0.1
- 0.1.0.2
- 0.1.0.3
- 0.1.0.4
- 0.1.1
- '0.2'
- 0.2.0.1
- 0.2.0.2
- 0.2.0.3
- 0.2.0.4
- '0.3'
- 0.3.0.1
- 0.3.0.2
- 0.3.0.3
- 0.3.1.3
- 0.3.1.4
- 0.3.1.5
- '0.4'
- '0.5'
- 0.5.0.1
- 0.5.0.2
- 0.5.0.3
- 0.5.0.4
- '0.6'
- 0.6.0.1
- 0.6.0.2
- 0.6.0.3
- 0.6.0.4
- 0.6.0.5
- 0.6.0.6
- 0.6.1
- 0.6.1.1
- 0.6.1.2
- 0.6.1.3
- 0.6.1.4
- 0.6.1.5
- 0.6.3
- 0.6.4
- 0.6.5
- 0.6.5.2
- 0.6.6
- 0.6.6.1
- 0.6.6.2
- 0.6.6.3
- '0.7'
- 0.7.0.1
- 0.7.0.2
- '0.8'
- 0.8.0.1
- 0.8.0.2
- 0.8.1
- 0.8.2
- 0.8.2.1
- 0.8.2.2
- 0.8.3
- 0.8.4
- 0.8.4.1
- 0.8.4.2
- 0.8.5
- 0.8.5.1
- 0.8.6
- 0.8.6.1
- 0.8.6.2
- 0.8.6.3
- 0.8.6.4
- 0.8.6.5
- 0.8.6.6
- 0.8.6.7
- '0.9'
- 0.9.1
- 0.9.1.1
- 0.9.3
- 0.9.4
- 0.9.4.1
- 0.9.4.2
- 0.9.4.3
- 0.9.4.4
- '0.10'
- 0.10.1
- 0.10.1.1
- 0.10.1.2
- '0.11'
- 0.11.0.1
- 0.11.1
- 0.11.1.1
- 0.11.1.2
- 0.11.2
- 0.11.2.1
- 0.11.2.2
- 0.11.2.3
- 0.11.3
- '0.12'
- 0.12.0.1
- 0.12.0.2
- 0.12.0.3
- 0.12.1
- 0.12.1.1
- 0.12.2
- 0.12.3
- 0.12.3.1
- 0.12.3.2
- 0.12.3.3
- 0.12.4
- 0.12.5
- 0.12.5.1
- 0.12.5.2
author: John MacFarlane, Matthew Pickering
latest: 0.12.5.2
description-type: markdown
description: |
  # texmath

  [![CI
  tests](https://github.com/jgm/texmath/workflows/CI%20tests/badge.svg)](https://github.com/jgm/texmath/actions)

  texmath is a Haskell library for converting between formats used to
  represent mathematics.  Currently it provides functions to read and
  write TeX math, presentation MathML, and OMML (Office Math Markup
  Language, used in Microsoft Office), and to write Gnu eqn and
  [pandoc]'s native format (allowing conversion, using pandoc, to
  a variety of different markup formats).  The TeX reader and
  writer supports basic LaTeX and AMS extensions, and it can parse
  and apply LaTeX macros.  The package also includes several
  utility modules which may be useful for anyone looking to
  manipulate either TeX math or MathML.  For example, a copy of
  the MathML operator dictionary is included.

  [pandoc]: http://github.com/jgm/pandoc

  You can [try it out online here](http://johnmacfarlane.net/texmath.html).

  By default, only the Haskell library is installed.  To install a
  test program, `texmath`, use the `executable` Cabal flag:

      cabal install -fexecutable

  By default, the executable will be installed in `~/.cabal/bin`.

  Alternatively, texmath can be installed using
  [stack](https://github.com/commercialhaskell/stack).  Install
  the stack binary somewhere in your path.  Then, in the texmath
  repository,

      stack setup
      stack install --flag texmath:executable

  The `texmath` binary will be put in `~/.local/bin`.

  Macro definitions may be included before a LaTeX formula.

  # Running texmath as a server

  `texmath` will behave as a CGI script when called under the name
  `texmath-cgi` (e.g. through a symbolic link).
  The file `cgi/texmath.html` contains an example of how it can
  be used.

  But it is also possible to compile a full webserver with a JSON
  API.  To do this, set the `server` cabal flag, e.g.

      stack install --flag texmath:server

  To run the server on port 3000:

      texmath-server -p 3000

  Sample of use, with `httpie`:

  ```
  % http --verbose localhost:3000/convert text='2^2' from=tex to=mathml display:=false Accept:'text/plain'
  POST /convert HTTP/1.1
  Accept: text/plain
  Accept-Encoding: gzip, deflate
  Connection: keep-alive
  Content-Length: 64
  Content-Type: application/json
  Host: localhost:3000
  User-Agent: HTTPie/3.1.0

  {
      "display": false,
      "from": "tex",
      "text": "2^2",
      "to": "mathml"
  }


  HTTP/1.1 200 OK
  Content-Type: text/plain;charset=utf-8
  Date: Mon, 21 Mar 2022 18:29:26 GMT
  Server: Warp/3.3.17
  Transfer-Encoding: chunked

  <math display="inline" xmlns="http://www.w3.org/1998/Math/MathML">
    <msup>
      <mn>2</mn>
      <mn>2</mn>
    </msup>
  </math>
  ```

  Possible values for `from` are `tex`, `mathml`, and `omml`.
  Possible values for `to` are `tex`, `mathml`, `omml`, `eqn`, and
  `pandoc` (JSON-encoded Pandoc).

  Alternatively, you can use the `convert-batch` endpoint to pass
  in a JSON-encoded list of conversions and get back a JSON-encoded
  list of results.

  # Generating lookup tables

  There are three main lookup tables which are built form externally compiled lists.
  This section contains information about how to modify and regenerate these tables.

  In the `lib` direction there are two sub-directories which contain the
  necessary files.

  ## MMLDict.hs

  The utility program `xsltproc` is required.
  You can find these files in `lib/mmldict/`

    1. If desired replace `unicode.xml` with and updated version (you can download a copy from [here](http://www.w3.org/TR/xml-entity-names/#source)
    2. `xsltproc -o dictionary.xml operatorDictionary.xsl unicode.xml`
    3. `runghc generateMMLDict.hs`
    4. Replace the operator table at the bottom of `src/Text/TeXMath/Readers/MathML/MMLDict.hs` with the contents of `mmldict.hs`

  ## ToTeXMath.hs

  You can find these files in `lib/totexmath/`

    1. If desired, replace `unimathsymbols.txt` with an updated version from [here](http://milde.users.sourceforge.net/LUCR/Math/)
    2. `runghc unicodetotex.hs`
    3. Replace the record table at the bottom of `src/Text/TeXMath/Unicode/ToTeXMath.hs` with the contents of `UnicodeToLaTeX.hs`

  ## ToUnicode.hs

  You can find these files in `lib/tounicode/`.

    1. If desired, replace `UnicodeData.txt` with an updated verson from
       [here](ftp://ftp.unicode.org/Public/UNIDATA/UnicodeData.txt).
    2. `runghc mkUnicodeTable.hs`
    3. Replace the table at the bottom of
       `src/Text/TeXMath/Unicode/ToUnicode.hs` with the output.

  ## Editing the tables

  It is not necessary to edit the source files to add records to
  the tables.  To add to or modify a table it is easier to add
  modify either `unicodetotex.hs` or `generateMMLDict.hs`. This is
  easily achieved by adding an item to the corresponding `updates`
  lists. After making the changes, follow the above steps to
  regenerate the table.

  # The test suite

  To run the test suite, do `cabal test` or `stack test`.

  In its standard mode, the test suite will run golden tests of
  the individual readers and writers.  Reader tests can be found
  in `test/reader/{mml,omml,tex}`, and writer tests in
  `test/writer/{eqn,mml,omml,tex}`.  Regression tests linked
  to specific issues are in `test/regression`.

  Each test file consists of an input and an expected output.
  The input begins after a line `<<< FORMAT` and the output
  begins after a line `>>> FORMAT`.

  If many tests fail as a result of changes, but the test
  failures are all because of improvements in the output,
  you can pass `--accept` to the test suite (e.g., with
  `--test-arguments=--accept` on `stack test`), and the existing
  golden files will be overwritten.  If you do this, inspect
  the outputs very carefully to make sure they are correct.

  If you pass the `--roundtrip` option into the test suite
  (e.g., using `--test-arguments=--roundtrip` with `stack test`),
  round-trip tests will be run instead.  Many of these will
  fail. In these tests, the native inputs in `test/roundtrip/*.native`
  will be converted to (respectively) `mml`, `omml`, or `tex`,
  then converted back, and the result will be compared with the
  starting point.  Although we don't guarantee that this kind
  of round-trip transformation will be the identity, looking
  at cases where it fails can be a guide to improvements.

  # Authors

  John MacFarlane wrote the original TeX reader, MathML writer, Eq
  writer, and OMML writer.  Matthew Pickering contributed the
  MathML reader, the TeX writer, and many of the auxiliary
  modules.  Jesse Rosenthal contributed the OMML reader.  Thanks
  also to John Lenz for many contributions.
license-name: GPL-2.0-only
