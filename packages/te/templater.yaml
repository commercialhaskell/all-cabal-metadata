all-versions:
- 0.0.2.0
- 0.0.3.0
author: Geraud Boyer
basic-deps:
  attoparsec: '>=0.12'
  base: '>=4.5 && <5.9'
  text: '>=1.1'
changelog: ''
changelog-type: ''
description: |
  # Templater
  [![Build Status](https://travis-ci.org/geraud/templater.svg?branch=master)](https://travis-ci.org/geraud/templater)

  Simple string templater

  ## Installation

  ```bash
  cabal update
  cabal install templater
  ```

  ## Example

  ```haskell
  {-# LANGUAGE OverloadedStrings #-}
  import           Data.Text
  import qualified Data.Text.IO   as TIO
  import           Text.Templater

  main :: IO ()
  main = do
    let textTemplate = "Hello, %{what is it ?}!"
        res = template textTemplate context
    case res of
      Left error -> do
          putStrLn $ "Got Error:" ++ error
      Right result -> TIO.putStrLn result

  context :: Context -- Context is a type alias for Text -> Maybe Text
  context "what is it ?" = Just "world"
  context _ = Nothing
  ```
  renders to `Hello, world!`

  Well that's all there is to it!...
description-type: markdown
hash: 0074c5a61a30832b8dcab71b4ab8a66b5d6044d558c46a6b1f2dc661648239b6
homepage: https://github.com/geraud/templater
latest: 0.0.3.0
license-name: MIT
maintainer: Geraud Boyer <geraud@gmail.com>
synopsis: Simple string templater
test-bench-deps:
  HUnit: '>=0'
  QuickCheck: '>=0'
  base: '>=0'
  hspec: '>=2 && <3'
  hspec-attoparsec: '>=0.1.0'
  templater: '>=0'
  text: '>=0'
