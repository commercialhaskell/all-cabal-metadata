homepage: https://github.com/chris-martin/text-replace
changelog-type: markdown
hash: 1ac3a6a18f0e7d5274e14b6e03e3b36b953d8f0a24ee6b43f8a8befb4160b6b6
test-bench-deps:
  base: ^>=4.14 || ^>=4.15 || ^>=4.16 || ^>=4.17
  text: ^>=1.2.4 || ^>=2.0
  hedgehog: ^>=1.0.5 || ^>=1.0 || ^>=1.1 || ^>=1.2
  text-replace: -any
  neat-interpolation: ^>=0.5.1
maintainer: Chris Martin
synopsis: Simple text replacements from a list of search/replace pairs
changelog: |
  ### 0.1.0.3 (2023-01-01)

  Support GHC 9.4

  ### 0.1.0.2 (2022-03-15)

  Support hedgehog 1.1, optparse-applicative 0.17

  ### 0.1.0.1 (2022-01-14)

  Support GHC 9.2

  ### 0.1 (2021-06-02)

  Start of changelog
basic-deps:
  base: '>=4.14 && <4.18'
  text: '>=1.2.4 && <1.3 || ==2.0.*'
  parsec: ^>=3.1.14
  containers: ^>=0.6.4
  text-replace: -any
  optparse-applicative: ^>=0.16.1 || ^>=0.17
all-versions:
- 0.0.0.1
- 0.0.0.2
- 0.0.0.3
- 0.0.0.4
- 0.0.0.6
- 0.0.0.8
- '0.1'
- 0.1.0.1
- 0.1.0.2
- 0.1.0.3
author: Chris Martin
latest: 0.1.0.3
description-type: markdown
description: |
  # text-replace

  Perform simple replacements in a text file, using a list of search/replace
  pairs. The search for strings to replace is performed left-to-right, preferring
  longer matches to shorter ones. All streams are assumed to be UTF-8 encoded.

  ## Command-line options

  * `-h`, `--help`                - Show help text
  * `-i`, `--in-file FILEPATH`    - Input file to read (optional, defaults to stdin)
  * `-o`, `--out-file FILEPATH`   - Output file to write (optional, defaults to stdout)
  * `-m`, `--mapping MAPPING`     - A list of search/replace pairs, separated by any of
                                    the delimiters
  * `-f`, `--map-file FILEPATH`   - A file containing a list of search/replace pairs,
                                    separated by any of the delimiters
  * `-d`, `--delimiter DELIMITER` - Add a delimiter that separates search/replace
                                    strings in `--mapping` and in the contents of
                                    `--map-file`
  * `-n`, `--newline-delimiter`   - Add newline as a delimiter

  ## Examples

  `text-replace` is useful for replacing characters with escape sequences:

  ```
  $ echo "The (<&&>) operator"        \
      | text-replace --delimiter " "  \
                     --mapping "& &amp; > &gt; < &lt;"
  The (&lt;&amp;&amp;&gt;) operator
  ```

  You can use it to swap strings. In the following example we replace `*` with
  `**` and vice versa:

  ```
  $ echo "What *is* going on **here**?"  \
      | text-replace --delimiter " "     \
                     --mapping "* ** ** *"
  What **is** going on *here*?
  ```

  You also have the option to read the input string and replacement list from
  files, and to write the output to a file:

  ```
  $ cat input
  I am extremely apt to like Haskell once I develop sufficient
  aptitude with it.

  $ cat replacements
  apt -> likely
  aptitude -> ability
  like -> appreciate

  $ text-replace --map-file replacements  \
                 --in-file input          \
                 --out-file output        \
                 --delimiter " -> "       \
                 --newline-delimiter

  $ cat output
  I am extremely likely to appreciate Haskell once I develop
  sufficient ability with it.
  ```
license-name: Apache-2.0
