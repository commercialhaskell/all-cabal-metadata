homepage: https://github.com/chris-martin/text-replace
changelog-type: ''
hash: 03c2ab03338bba4f00d4aaa2c86134fd2095aa7f648e4d6308b7140dbde8227b
test-bench-deps:
  base: ^>=4.10 || ^>=4.11 || ^>=4.12 || ^>=4.13 || ^>=4.14 || ^>=4.15 || ^>=4.16
  text: ^>=1.2.2.2
  hedgehog: ^>=0.5.3 || ^>=0.6 || ^>=1.0
  text-replace: -any
  neat-interpolation: ^>=0.5
maintainer: Chris Martin <ch.martin@gmail.com>
synopsis: Simple text replacements from a list of search/replace pairs
changelog: ''
basic-deps:
  base: '>=4.10 && <4.17'
  text: '>=1.2.2.2 && <1.3'
  parsec: ^>=3.1.13
  containers: ^>=0.5.10.2 || ^>=0.6
  text-replace: -any
  optparse-applicative: ^>=0.14.2 || ^>=0.15 || ^>=0.16
all-versions:
- 0.0.0.1
- 0.0.0.2
- 0.0.0.3
- 0.0.0.4
- 0.0.0.6
- 0.0.0.8
- '0.1'
- 0.1.0.1
author: Chris Martin <ch.martin@gmail.com>
latest: 0.1.0.1
description-type: markdown
description: |
  # text-replace

  Perform simple replacements in a text file, using a list of search/replace pairs.

  The search for strings to replace is performed left-to-right, preferring longer matches to shorter ones.

  All streams are assumed to be UTF-8 encoded.

  ## Command-line options

  | Option | Description |
  | --- | --- |
  | `-h,--help` | Show help text |
  | `-i,--in-file FILEPATH` | Input file to read (optional, defaults to stdin) |
  | `-o,--out-file FILEPATH` | Output file to write (optional, defaults to stdout)
  | `-m,--mapping MAPPING` | A list of search/replace pairs, separated by any of the delimiters |
  | `-f,--map-file FILEPATH` | A file containing a list of search/replace pairs, separated by any of the delimiters |
  | `-d,--delimiter DELIMITER` | Add a delimiter that separates search/replace strings in `--mapping` and in the contents of `--map-file` |
  | `-n,--newline-delimiter` | Add newline as a delimiter |

  ## Examples

  `text-replace` is useful for replacing characters with escape sequences:

  ```
  $ echo "The (<&&>) operator"        \
      | text-replace --delimiter " "  \
                     --mapping "& &amp; > &gt; < &lt;"
  The (&lt;&amp;&amp;&gt;) operator
  ```

  You can use it to swap strings. In the following example we replace `*` with `**` and vice versa:

  ```
  $ echo "What *is* going on **here**?"  \
      | text-replace --delimiter " "     \
                     --mapping "* ** ** *"
  What **is** going on *here*?
  ```

  You also have the option to read the input string and replacement list from files, and to write the output to a file:

  ```
  $ cat input
  I am extremely apt to like Haskell once I develop sufficient
  aptitude with it.

  $ cat replacements
  apt -> likely
  aptitude -> ability
  like -> appreciate

  $ text-replace --map-file replacements  \
                 --in-file input          \
                 --out-file output        \
                 --delimiter " -> "       \
                 --newline-delimiter

  $ cat output
  I am extremely likely to appreciate Haskell once I develop
  sufficient ability with it.
license-name: Apache-2.0
