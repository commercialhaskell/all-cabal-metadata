all-versions:
- '0.1'
- 0.1.0.1
- '0.2'
- '0.3'
- 0.3.0.1
- '0.4'
- '1'
- '2'
- 2.0.1
- '2.1'
- '3'
- 3.0.1
- '3.2'
- 3.2.1
- '3.3'
- '3.4'
- '3.5'
- '3.6'
- 3.6.1
- 3.6.2
- 3.6.3
- 3.6.4
- 3.6.5
- '3.7'
- '3.8'
- 3.8.1
- 3.8.2
- 3.8.3
- 3.8.4
- 3.8.5
- 3.8.6
- '3.9'
- 3.9.1
- 3.9.2
- 3.9.3
- 3.9.4
- 3.9.5
- 3.9.6
- 3.9.7
- 3.9.8
author: Ryan Scott
basic-deps:
  aeson: '>=2.0.3 && <2.3'
  base: '>=4.9 && <4.21'
  base-compat: '>=0.10 && <1'
  bifunctors: '>=5.2 && <6'
  binary: '>=0.8.3 && <0.9'
  containers: '>=0.5.7.1 && <0.8'
  directory: '>=1.3 && <1.4'
  ghc-boot-th: '>=8.0 && <9.11'
  haskeline: '>=0.7.3 && <0.9'
  hpc: '>=0.6 && <0.8'
  nonempty-vector: '>=0.2 && <0.3'
  old-locale: '>=1 && <1.1'
  old-time: '>=1.1 && <1.2'
  pretty: '>=1.1.3.3 && <1.2'
  random: '>=1.0.1 && <1.3'
  scientific: '>=0.3.7 && <0.4'
  semigroups: '>=0.16.2 && <1'
  tagged: '>=0.4.4 && <1'
  template-haskell: '>=2.11 && <2.23'
  terminfo: '>=0.4 && <0.5'
  text: '>=0.11.1 && <2.2'
  text-short: '>=0.1 && <0.2'
  text-show: '>=3.4 && <4'
  time: '>=1.6.0.1 && <1.13'
  transformers: '>=0.5 && <0.7'
  unix: '>=2.7 && <2.9'
  unordered-containers: '>=0.2 && <0.3'
  uuid-types: '>=1 && <1.1'
  vector: '>=0.12 && <0.14'
  xhtml: '>=3000.2 && <3000.3'
changelog: |
  ### 3.9.8 [2024.04.20]
  * Support building with GHC 9.10.
  * Add a `TextShow` instance for `NamespaceSpecifier` in
    `TextShow.Language.Haskell.TH` when building with `template-haskell-2.22.0.0`
    (GHC 9.10.1) or later.

  ### 3.9.7 [2023.10.11]
  * Add `TextShow(1)` instances for `aeson`'s `KeyMap` type.
  * Add `TextShow(1)` instances for `NonEmptyVector` from the `nonempty-vector`
    library.

  ### 3.9.6 [2023.08.06]
  * Support building with GHC 9.8.
  * Add `TextShow` instance for `BndrVis` in `TextShow.Language.Haskell.TH`.

  ### 3.9.5 [2023.03.05]
  * Allow building with `unix-2.8.*`.

  ### 3.9.4 [2022.12.30]
  * Allow building with `aeson-2.1.*`.

  ### 3.9.3 [2022.12.28]
  * Add `TextShow` instances for `Value` and `Key` from `aeson`.
  * Drop support for GHC 7.8 and 7.10.

  ### 3.9.2 [2022.10.05]
  * Require `text-show-3.10` or later in the test suite.

  ### 3.9.1 [2022.07.28]
  * Add a `TextShow` instance for `UUID` from `uuid-types`.

  ## 3.9 [2022.05.28]
  * Remove instances for `ErrorT` and `ListT`, which had long been deprecated and
    were finally removed from the `transformers` library in version 0.6.0.0.

  ### 3.8.6 [2021.11.21]
  * Add a `TextShow` instance for `Scientific` from the `scientific` package.
  * Require `quickcheck-instances-0.3.27` or later in the test suite.

  ### 3.8.5 [2021.10.31]
  * Allow building with GHC 9.2.
  * Require `quickcheck-instances-0.3.26` or later in the test suite.

  ### 3.8.4 [2020.10.03]
  * Allow building with `template-haskell-2.17.0.0` (GHC 9.0).

  ### 3.8.3 [2019.11.08]
  * Make the `TextShow1` and `TextShow2` instances for `Fix` and `Join` in
    `TextShow.Data.Bifunctor` match the behavior the corresponding `Show1` and
    `Show2` instances in `bifunctors`.

  ### 3.8.2 [2019.09.03]
  * Make the test suite compile on GHC 8.8.1.

  ### 3.8.1 [2019.06.03]
  * Require `quickcheck-instances-0.3.21` or later.

  ## 3.8 [2019.05.02]
  * Support GHC 8.8.
  * Add a `TextShow` instance for `ShortText` (from the `text-short` package) in
    `TextShow.Data.ShortText`.
  * Drop support for `base-4.5` and `base-4.6` (GHC 7.4 and 7.6, respectively).
  * `liftShowbTaggedPrec` is no longer exported from `TextShow.Data.Tagged`. Use
    `Tagged`'s `TextShow1` instance instead.
  * `showbVectorGenericPrec` and `liftShowbVectorGenericPrec` are no longer
    exported from `TextShow.Data.Vector`. Use the various `TextShow(1)` instances
    defined in `TextShow.Data.Vector` instead.
  * Require `vector-0.12` or later.

  ## 3.7 [2018.10.07]
  * Remove `hoopl` dependency. Instances are no longer provided for data types
    in the `hoopl` library.
  * Depend on `QuickCheck-2.12` or later.
  * Depend on `quickcheck-instances-0.3.19` or later.

  ### 3.6.5 [2018.07.03]
  * Fix the tests on GHC 8.6.

  ### 3.6.4 [2018.04.07]
  * Use `base-compat-batteries`.

  ### 3.6.3 [2018.03.15]
  * GHC 8.4 fixes

  ### 3.6.2 [2017.06.18]
  * Require `QuickCheck-2.10`/`quickcheck-instances-0.3.16` or later

  ### 3.6.1 [2017.06.04]
  * Drop support for GHC 7.0 and 7.2
  * Allow building with `quickcheck-instances-0.3.14`

  ## 3.6 [2017.04.22]
  * New `TextShow` instances:
    * `directory`: `XdgDirectory` (from `System.Directory`)
    * `ghc-boot-th`: `ForeignSrcLang` (from `GHC.ForeignSrcLang.Type`)
    * `time`: `UniversalTime` (from `Data.Time.Clock`) and `SystemTime` (from `Data.Time.Clock.System` with `time-1.8` or later)
    * `Win32`: Lots of datatypes added in `Win32-2.5.0.0`
  * Remove most monomorphic `TextShow` functions, as their utility is questionable, and their maintenance burden is undeniable
  * Made the instances in `TextShow.Data.Bifunctor` poly-kinded when possible
  * Fix testsuite compilation on older GHCs

  ## 3.5 [2017.01.07]
  * Add `TextShow(1)` instances for `Data.Graph.SCC`
  * `TextShow.Instances` no longer reexports the entirety of `TextShow`. Doing so meant that `text-show-instances` would be burdened with bumping its major version number every time that `text-show` made an API change in `TextShow` in order to follow the PVP.
  * Remove `TextShow.GHC.PackageDb` module
  * Refactor test suite

  ## 3.4
  * Require `text-show-3.4` or later
  * Update testsuite to be buildable with `text-show-3.4`

  ## 3.3
  * Add the `TextShow.GHC.LanguageExtensions.Type` and `TextShow.GHC.PackageDb` modules, which define instances if using `ghc-boot`
  * Add `TextShow` instances for `NameFlavour`, `NameSpace`, `PatSynArgs`, and `PatSynDir` in `TextShow.Language.Haskell.TH`
  * Require `text-show-3.3` or later, which has slightly different TH derivation behavior. As a result, the context for the `TextShow1` instance for `Clown` in `TextShow.Data.Bifunctor` had to be changed slightly.
  * Allow building with `QuickCheck-2.9`
  * Fix GHC HEAD build

  ### 3.2.1
  * Fix build with GHC 8.0
  * Add `TextShow` instance for `Overlap` in `TextShow.Language.Haskell.TH`

  ## 3.2
  * Allow build with `text-show-3.2`

  ### 3.0.1
  * Require quickcheck-instances >= 0.3.12 in test suite due to presence of new orphan Arbitrary instances for `vector` datatypes

  # 3
  * GHC 8.0 support
  * Rename functions that previously ended with the suffix `-With` to instead have the prefix `lift-`, consistent with `text-show-3`
  * Removed the `TextShow.Data.Semigroup` and `TextShow.Data.List.NonEmpty` modules, as they have been moved to `text-show-3` (as part of moving `Semigroup` into `base`)
  * Removed the functions for `Compose`, `Product`, and `Sum` in `TextShow.Data.Functor.Trans`, as they have been moved to `text-show-3` (as part of moving them to `base`)
  * Add `TextShow`/`TextShow1` instances for `Fix` and `Sum` in `TextShow.Data.Bifunctor`
  * Add `TextShow`/`TextShow1` instances for the datatypes in `Text.PrettyPrint.Annotated` (introduced in @pretty-1.1.1.3@)
  * Add `TextShow` instances for the new datatypes in @template-haskell-2.11.0.0@

  ## 2.1
  * Reexport the `TextShow` classes and module from `TextShow.Instances`. This helps Haddock readers discover what new instances are added with `text-show-instances`.
  * Make `Tagged` instances poly-kinded

  ## 2.0.1
  * Allow building with `vector-0.11` and above. Be aware that the `Show` instances for `Vector` types in `vector-0.11.0` are different from other versions of `vector`.

  # 2
  * Changed the top-level module name from `Text.Show.Text` to `TextShow`, since the former was extremely verbose without much benefit. As a result, this will break all existing code that depends on `text-show-instances`.

  # 1
  * Allow building with `text-show-1`. Also changed the monomorphic functions to match the naming conventions introduced in `text-show-1`.
  * Added instances for the `bifunctors` library
  * Removed `utf8-string` instance, since it wasn't as useful as I had imagined
  * Revamped test suite

  # 0.4
  * Allow building with `text-show-0.8`
  * Modules which were previously exported only if using a recent-enough version of GHC/`base` (e.g., `Text.Show.Text.System.Win32`) are now always exposed. If the functionality that the module provides is not available on a given version of GHC/`base`, the module will not expose anything.
  * Change test-suite to use `hspec`, allowing for it to be built on GHC 7.0 and 7.2

  ### 0.3.0.1
  * Fixed tests on Windows

  # 0.3
  * Added `showbArgPrec` (and corresponding `Show` and `Show1` instances) to `Text.Show.Text.Data.Semigroup`
  * Added `Show1` instances for data types in `Text.Show.Text.Data.List.NonEmpty` and `Text.Show.Text.Data.Semigroup`
  * Added `showbDoc` (and corresponding `Show` instance) to `Text.Show.Text.Language.Haskell.TH`
  * Renamed `showbDoc` in `Text.Show.Text.Text.PrettyPrint` to `renderB`

  # 0.2
  * Exposed `showbKindPrec` and `showbPredPrec` with later versions of Template Haskell
  * Added `renderStyleB` to `Text.Show.Text.Text.PrettyPrint` (for `time-1.5` and later)
  * Added `showbTimeLocalePrec` to `Text.Show.Text.Data.Time`
  * Added instances for the `binary`, `haskeline`, `hoopl`, `terminfo`, and `utf8-string` libraries
  * Removed `transformers-four` flag

  # 0.1
  * Initial commit
changelog-type: markdown
description: |
  # `text-show-instances`
  [![Hackage](https://img.shields.io/hackage/v/text-show-instances.svg)][Hackage: text-show-instances]
  [![Hackage Dependencies](https://img.shields.io/hackage-deps/v/text-show-instances.svg)](http://packdeps.haskellers.com/reverse/text-show-instances)
  [![Haskell Programming Language](https://img.shields.io/badge/language-Haskell-blue.svg)][Haskell.org]
  [![BSD3 License](http://img.shields.io/badge/license-BSD3-brightgreen.svg)][tl;dr Legal: BSD3]
  [![Linux build](https://github.com/RyanGlScott/text-show-instances/workflows/Haskell-CI/badge.svg)](https://github.com/RyanGlScott/text-show-instances/actions?query=workflow%3AHaskell-CI)
  [![Windows build](https://ci.appveyor.com/api/projects/status/ykkc085q8mvpij9d?svg=true)](https://ci.appveyor.com/project/RyanGlScott/text-show-instances)

  [Hackage: text-show-instances]:
    http://hackage.haskell.org/package/text-show-instances
    "text-show-instances package on Hackage"
  [Haskell.org]:
    http://www.haskell.org
    "The Haskell Programming Language"
  [tl;dr Legal: BSD3]:
    https://tldrlegal.com/license/bsd-3-clause-license-%28revised%29
    "BSD 3-Clause License (Revised)"

  `text-show-instances` is a supplemental library to [`text-show`](https://github.com/RyanGlScott/text-show) that provides additional `Show` instances for data types in common Haskell libraries and GHC dependencies that are not encompassed by `text-show`. Currently, `text-show-instances` covers these libraries:

  * [`aeson`](https://hackage.haskell.org/package/aeson)
  * [`bifunctors`](http://hackage.haskell.org/package/bifunctors)
  * [`binary`](http://hackage.haskell.org/package/binary)
  * [`containers`](http://hackage.haskell.org/package/containers)
  * [`directory`](http://hackage.haskell.org/package/directory)
  * [`ghc-boot`](http://hackage.haskell.org/package/ghc-boot)
  * [`haskeline`](http://hackage.haskell.org/package/haskeline)
  * [`hpc`](http://hackage.haskell.org/package/hpc)
  * [`old-locale`](http://hackage.haskell.org/package/old-locale)
  * [`old-time`](http://hackage.haskell.org/package/old-time)
  * [`pretty`](http://hackage.haskell.org/package/pretty)
  * [`random`](http://hackage.haskell.org/package/random)
  * [`scientific`](http://hackage.haskell.org/package/scientific)
  * [`tagged`](http://hackage.haskell.org/package/tagged)
  * [`template-haskell`](http://hackage.haskell.org/package/template-haskell)
  * [`terminfo`](http://hackage.haskell.org/package/terminfo)
  * [`time`](http://hackage.haskell.org/package/time)
  * [`transformers`](http://hackage.haskell.org/package/transformers)
  * [`unix`](http://hackage.haskell.org/package/unix)
  * [`unordered-containers`](http://hackage.haskell.org/package/unordered-containers)
  * [`uuid-types`](https://hackage.haskell.org/package/uuid-types)
  * [`vector`](http://hackage.haskell.org/package/vector)
  * [`Win32`](http://hackage.haskell.org/package/Win32)
  * [`xhtml`](http://hackage.haskell.org/package/xhtml)

  One can use these instances by importing `TextShow.Instances`. Alternatively, there are monomorphic versions of the `showb` function available in the other submodules of `TextShow`.
description-type: markdown
hash: 978b5bebafeab1f8e6c8ce6811190fa217b7a5c9d3ce7b94673502257d4ac6b2
homepage: https://github.com/RyanGlScott/text-show-instances
latest: 3.9.8
license-name: BSD-3-Clause
maintainer: Ryan Scott <ryan.gl.scott@gmail.com>
synopsis: Additional instances for text-show
test-bench-deps:
  QuickCheck: '>=2.12 && <2.15'
  aeson: '>=2.0.3 && <2.3'
  base: '>=4.9 && <4.21'
  base-compat: '>=0.10 && <1'
  bifunctors: '>=5.5.5 && <6'
  binary: '>=0.8.3 && <0.9'
  containers: '>=0.5.7.1 && <0.8'
  directory: '>=1.3 && <1.4'
  generic-deriving: '>=1.9 && <2'
  ghc-boot-th: '>=8.0 && <9.11'
  ghc-prim: '>=0'
  haskeline: '>=0.7.3 && <0.9'
  hpc: '>=0.6 && <0.8'
  hspec: '>=2 && <3'
  nonempty-vector: '>=0.2 && <0.3'
  old-locale: '>=1 && <1.1'
  old-time: '>=1.1 && <1.2'
  pretty: '>=1.1.3.3 && <1.2'
  quickcheck-instances: '>=0.3.27 && <0.4'
  random: '>=1.0.1 && <1.3'
  scientific: '>=0.3.7 && <0.4'
  tagged: '>=0.4.4 && <1'
  template-haskell: '>=2.11 && <2.23'
  terminfo: '>=0.4 && <0.5'
  text-short: '>=0.1 && <0.2'
  text-show: '>=3.10 && <4'
  text-show-instances: '>=0'
  th-orphans: '>=0.13.8 && <1'
  time: '>=1.6.0.1 && <1.13'
  transformers: '>=0.5 && <0.7'
  transformers-compat: '>=0.5 && <1'
  unix: '>=2.7 && <2.9'
  unordered-containers: '>=0.2 && <0.3'
  uuid-types: '>=1 && <1.1'
  vector: '>=0.9 && <0.14'
  xhtml: '>=3000.2 && <3000.3'
