all-versions:
- 0.1.2
- 0.1.3
- 0.2.0
- 0.2.1
- 0.2.2
- 0.2.3
- 0.2.4
author: Oscar Finnsson & Emil Nordling
basic-deps:
  base: '>=4 && <5'
  haskell-src-exts: '>=0'
  language-haskell-extract: '>=0.2'
  regex-posix: '>=0'
  template-haskell: '>=0'
  test-framework: '>=0'
changelog: ''
changelog-type: ''
description: |-
  @test-framework-th@ contains two interesting functions: @defaultMainGenerator@ and @testGroupGenerator@.

  @defaultMainGenerator@ will extract all functions beginning with case_, prop_ or test_in the module and put them in a testGroup.

  > -- file SomeModule.hs
  > ( -# LANGUAGE TemplateHaskell #- )
  > module SomeModule where
  > import Test.Framework.TH
  > import Test.Framework
  > import Test.HUnit
  > import Test.Framework.Providers.HUnit
  > import Test.Framework.Providers.QuickCheck2
  >
  > -- observe this line!
  > main = $(defaultMainGenerator)
  > case_1 = do 1 @=? 1
  > case_2 = do 2 @=? 2
  > prop_reverse xs = reverse (reverse xs) == xs
  >    where types = xs::[Int]

  is the same as

  > -- file SomeModule.hs
  > ( -# LANGUAGE TemplateHaskell #- )
  > module SomeModule where
  > import Test.Framework.TH
  > import Test.Framework
  > import Test.HUnit
  > import Test.Framework.Providers.HUnit
  > import Test.Framework.Providers.QuickCheck2
  >
  > -- observe this line!
  > main =
  >   defaultMain [
  >     testGroup "SomeModule" [ testCase "1" case_1, testCase "2" case_2, testProperty "reverse" prop_reverse]
  >     ]
  >
  > case_1 = do 1 @=? 1
  > case_2 = do 2 @=? 2
  > prop_reverse xs = reverse (reverse xs) == xs
  >    where types = xs::[Int]

  @testGroupGenerator@ is like @defaultMainGenerator@ but without @defaultMain@. It is useful if you need a function for the testgroup
  (e.g. if you want to be able to call the testgroup from another module).
description-type: haddock
hash: 80800634e6c7379f808815946580650a9d5a2b4d70abbd6e379c26325e068f7b
homepage: http://github.com/finnsson/test-generator
latest: 0.2.4
license-name: BSD-3-Clause
maintainer: Oscar Finnsson
synopsis: Automagically generate the HUnit- and Quickcheck-bulk-code using Template
  Haskell.
test-bench-deps: {}
