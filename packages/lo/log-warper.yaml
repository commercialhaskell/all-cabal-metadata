all-versions:
- 1.8.9
- 1.8.10
- 1.8.10.1
- 1.8.11
- 1.9.0
author: '@serokell'
basic-deps:
  aeson: ^>=1.4
  ansi-terminal: '>=0.7 && <1.0'
  base: '>=4.9 && <5'
  containers: ^>=0.6
  deepseq: ^>=1.4
  directory: ^>=1.3
  filepath: ^>=1.4.1
  fmt: ^>=0.6
  lifted-async: '>=0.9 && <0.11'
  log-warper: '>=0'
  markdown-unlit: '>=0.4'
  microlens: '>=0.4'
  microlens-platform: '>=0.3.9 && <0.5'
  mmorph: ^>=1.1
  monad-control: '>=1.0.1.0 && <1.1'
  monad-loops: ^>=0.4.3
  mtl: '>=2.2.1 && <2.3'
  o-clock: ^>=1.1
  text: '>=1.2.2.1 && <1.3'
  time: '>=1.8 && <2.0'
  transformers: ^>=0.5.2
  transformers-base: ^>=0.4.4
  universum: '>=1.6.0 && <1.7'
  unix: '>=0'
  unordered-containers: '>=0.2.7.1'
  vector: ^>=0.12
  yaml: '>=0.11 && <0.12'
changelog: |
  1.8.11
  ======

  * Resolve LW-34 bug, which was causing improper message handling in
    nonexisting loggers

  1.8.10.1
  ======

  * Make `o-clock` non-optional dependency.

  1.8.10
  ======

  * Remove exception handler from simple logger, which would catch all exceptions,
    even asynchronous ones.

  1.8.9
  =====

  * Bump up lower bounds for `universum` and `o-clock` packages.

  1.8.8
  =====

  * Increase upper bound for `ansi-terminal` to `< 0.9`.

  1.8.7
  =====

  * [#52](https://github.com/serokell/log-warper/issues/52):
    Add `System.Wlog.Concurrent` module for `ghc-8.2.2` which
    allows to run action in parallel with logging.

  1.8.6
  =====

  * Bump up `universum` to `v1.0.4`.

  1.8.5
  =====

  * [#89](https://github.com/serokell/log-warper/issues/86):
    Add upper-bounds for dependencies. Also use `build-tool-depends` field for `markdown-unlit`.

  1.8.4
  =====

  * [#86](https://github.com/serokell/log-warper/issues/86):
    Add lens for changing properties of the particular logger.
  * Ungrade `universum` to the `1.0.2`.

  1.8.3
  =====

  * [#79](https://github.com/serokell/log-warper/issues/79):
    Add `launchWithConfig` to `Launcher` module.

  1.8.2
  =====

  * Migrate to `universum-1.0.0`.
  * [#71](https://github.com/serokell/log-warper/issues/71):
    Use `microlens-platform` instead of `lens`.
    `LoggerMap` is now has field `LoggerName` instead of `Text`.
    `zoomLogger` is now work with `LoggerName` instead of `Text`.
    Remove `LogHandler.Syslog` module and `network` library.
    Remove `extra`, `errors`, `exceptions`, `hashable`, `text-format`, `formatting` dependencies.
    Remove `loggerNameF` function.
    Change `lens` to `microlens-mtl` in tests.

  1.8.1
  =====

  * [#75](https://github.com/serokell/log-warper/issues/75):
    Bump up `universum` lower bound.

  1.8.0
  =====

  * [#55](https://github.com/serokell/log-warper/issues/55):
    Return back `lcFilePrefix` field in `LoggerConfig`, rename to `lcLogsDirectory`.

  1.7.6
  =====

  * Upgrade `universum` to version `0.9.1`. Add `Semigroup` instances.

  1.7.5
  =====

  * Relax `containers` package dependency from `>= 0.5.10.2` to `>= 0.5.7.1`.
    Also use stable LTS for building package.

  1.7.4
  =====

  * [#55](https://github.com/serokell/log-warper/issues/55):
    Remove `lcFilePrefix` field from `LoggerConfig`.

  1.7.3
  =====

  * [#61](https://github.com/serokell/log-warper/issues/61):
    Add `launchFromFile`, `defaultConfig` and `launchSimpleLogging` functions.

  1.7.2
  =====

  * [#57](https://github.com/serokell/log-warper/issues/57):
    Add `Exception` module with `logException` and `catchLog` functions.
  * [#60](https://github.com/serokell/log-warper/issues/60):
    Fix documentation for `termSeveritiesOut` and `termSeveritiesErr`.
  * [#63](https://github.com/serokell/log-warper/issues/63):
    Timestamp rounding by powers of 10.

  1.7.1
  =====

  * Bump `containers` to version `0.5.10`.

  1.7.0
  =====

  * [#48](https://github.com/serokell/log-warper/issues/48):
    Output for severities is now configured in config file with `termSeveritiesOut`
    and `termSeveritiesErr` for writing into `stdout` and `stderr` accordingly.
    Default behavior: `Errors` into `stderr`, all other into `stdout`.
  * In yaml config file added new keywords for dealing with `Severities`:
    'All' -- all severities, 'X+' -- severities greater or equal to X.
  * Changed .yaml format: logger severity receives set of severities (`Severities`).
  * [#32](https://github.com/serokell/log-warper/issues/32):
    Changed .yaml format: `LoggerTree` should be written under 'loggerTree:'.
  * [#49](https://github.com/serokell/log-warper/issues/49):
    Add `WithLoggerIO` constraint.
  * [#50](https://github.com/serokell/log-warper/issues/50):
    Add `liftLogIO` function into `CanLog` module.

  1.6.0
  =====

  * `Error` is now printed only to `stderr`, all other messages to `stdout`.
  * `Logger` severity is now `Set Severity`.
  * Interface changes: functions which worked with `Severity` now work with `Set Severity`.
  * Remove `releaseAllHandlers`, `streamHandlerWithLock`,
    `trapLogging`, `debugM`, `errorM`, `infoM`, `noticeM`, `warningM`.
  * Rename `Wrapper` module to `Terminal`.
  * Rename `Handler` module to `LogHandler`.
  * Rename `Logger` module to `IOLogger`.
  * Move `setSeverity` and `setSeverityMaybe` to `IOLogger`.
  * Lift all functions inside `IOLogger` module to `MonadIO`.
  * `handle` from `LogHandler` module is renamed to `logHandlerMessage`
    and moved out of type class `LogHandler`.

  1.5.3
  =====

  * Add `launchNamedPureLogWith` to `PureLogging`
  * Improve documentation for `launchNamedPureLog`

  1.5.2
  =====

  * Add `logPureAction` to `PureLogging`.
  * Add `withSublogger` to `HasLoggerName`.

  1.5.1
  =====

  * Add `usingNamedPureLogger` to `PureLogging`.

  1.5.0
  =====

  * Replace `String` to `Text` in `LoggerName`.
  * Rename `LoggerName` field name to `getLoggerName`.
  * Rename `getLoggerName` of `HasLoggerName` class to `askLoggerName`.
  * Use `LoggerName` instead of `Text` where possible.
  * Make separate `HasLoggerName` module.
  * Make separate `PureLogging` module.
  * Remove `safecopy` dependency and refactor code.

  1.4.1
  =====

  * Add `logEvents` function to log `[LogEvent]` with proper logName.

  1.4.0
  =====

  * Add ability to specify custom logging action.

  1.3.4
  ====

  * Correct logger config parsing

  1.3.3
  =====

  * Fixed a bug related to ugly output to stdout even when it was turned off.

  1.3.2
  =====

  * Minor dependencies update.

  1.3.1
  =====

  * Fix minor bug with stdout severity.

  1.3.0
  =====

  * Allow to use arbitrary text formatter function.

  1.2.4
  =====

  * Add ability to specify time format for logs.
  * Some space leaks elimination:
    + The `MemoryQueue` has been partially reworked to get rid of the "inline" State manipulation;
    + Strings have been dropped almost everywhere in favour of `Text`;
    + A `LogFormatter` has been reworked to yield a `IO Builder`;
    + `replaceVarM` has been reworked to be pure _and_ to work with builders rather than plain Text/Strings;
    + The pure logger has been reworked to use strict's `StateT` instead of WriterT;
    + The pure logger have been polished to drop instances which required the `UndecidableInstances` pragma;
    + The `Sized` instance for `Text` has been reworked and multiplied by a constant factor of 16 (see below).

  1.2.3
  =====

  * Now we create a directory for log files if it's missing.

  1.2.2
  =====

  * Fixed memory leak (PR #17).

  1.2.1
  =====

  * Supports Unix paths in log configs even on Windows.

  1.2.0
  =====

  * Uses universum-0.6.1.

  1.1.4
  =====

  * Add `CanLog` and `HasLoggerName` instances for both strict and lazy `State`.

  1.1.3
  =====

  * Add config parameter to print `ThreadId` optionally.
  * Boolean monoidal builders for `LoggerConfig` now set boolean
    parameter to default â‰  `mempty` parameter.
changelog-type: markdown
description: |
  log-warper
  ==========

  [![Build Status](https://travis-ci.org/serokell/log-warper.svg)](https://travis-ci.org/serokell/log-warper)
  [![Hackage](https://img.shields.io/hackage/v/log-warper.svg)](https://hackage.haskell.org/package/log-warper)
  [![Stackage LTS](http://stackage.org/package/log-warper/badge/lts)](http://stackage.org/lts/package/log-warper)
  [![Stackage Nightly](http://stackage.org/package/log-warper/badge/nightly)](http://stackage.org/nightly/package/log-warper)
  [![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)

  `log-warper` is a high level and featureful logging library with monadic interface.

  You can jump right into [introduction tutorial](https://github.com/serokell/log-warper/blob/master/examples/HowTo.md)
  to see how to write logging with `log-warper`.

  ## Features

  Here is the list of features `log-warper` provides.

  1. Hierarchical logger names.

     Logger names (tags for loggers) form hierarchy. It means, that `""`
     (also known as `mempty` or `rootLoggerName`) is a parent of logger with name `"node"` which is
     a parent of logger with name `"node.communication"`. So, logger name comprises dot-separated components.
     This means that if some logger name doesn't have some settings (like severity or output file) it takes
     its settings from the closest parent, containing this settings.

  2. Logging initialization from `.yaml` configuration file.

     Whole logging configuration can be specifed in a single `.yaml` file.
     See [example here](https://github.com/serokell/log-warper/blob/c1df47e70c48bae62ff81a11fea0b45d50c172e7/logger-config-example.yaml).

  3. Monadic logging interface.

     `log-warper` uses `mtl`-style type classes to provide monadic interfaces for logging.

  4. Strict `StateT` based pure logging.

     See [this tutorial](https://github.com/serokell/log-warper/blob/master/examples/PureLogging.md)
     on pure logging with `log-warper`.

  5. Different severity levels of messages with the ability to configure `Set` of severities.

  6. Output is colored :star:

     When you log messages, you see time of this logging message, logger name, severity and `ThreadId`.
     Message formatting is configurable. Color or logged message tag depends on `Severity` for this message.

  7. Flexible and easy creation of `LoggerConfig` using monoidal builders and lenses.

     In case `.yaml` configuration is not enough for you, you can use `lens`-based EDSL to create configurations.
     `LoggerConfig` also implements instances for `Semigroup` and `Monoid` so you can combine your configurations
     from different sources (CLI and `.yaml` for example).

  8. Logger rotation.

     `log-warper` supports logger rotation. Yes, there exist `logrotate` and similar tools.
     But it's not easy to configure cross-platform (Windows, Linux, OSX) logging rotation with external tools.

  9. Ability to acquire last `N` megabytes of logs from in-memory cache.

     In case you want to analyze logging messages you can take them from in-memory cache.

  ## Reference guide (FAQ)

  Here you can find hints and tips how to achieve desired behavior with `log-warper`.

  1. How can I redirect all output to stderr?

     * Write `termSeveritiesErr: All` on top-level of your `.yaml` file.

  2. How can I disable only Error messages for my logger?

     * Use [`excludeError`](https://hackage.haskell.org/package/log-warper-1.8.5/docs/System-Wlog-Severity.html#v:excludeError) function.

  3. How can I show `ThreadId` inside log message?

     * Add `showTid: true` to your `.yaml` file.

  4. How to easily disable terminal output?

     * Put these lines into `.yaml` file:

     ```
     termSeveritiesOut : []
     termSeveritiesErr : []
     ```

  5. How can I enable messages with severity `Info` and higher?

     * Write `severity: Info+` inside tree node of your logger settings.

  6. How can I log inside functions like `forkIO`?

     * Use [`liftLogIO`](https://hackage.haskell.org/package/log-warper-1.8.5/docs/System-Wlog-CanLog.html#v:liftLogIO) function.
     Its Haddock contains nice usage example.

  7. How can I easily log exceptions without throwing them?

     * Use functions from [`System.Wlog.Exceptions`](https://hackage.haskell.org/package/log-warper-1.8.5/docs/System-Wlog-Exception.html) module.

  ## Contributing

  > **This project uses [`universum`](https://github.com/serokell/universum)
  > as default prelude**
description-type: markdown
hash: 2dfad10f2a2894b2d6b429e918be0666951b565694aca110052616371780fa95
homepage: https://github.com/serokell/log-warper
latest: 1.9.0
license-name: MIT
maintainer: Serokell <hi@serokell.io>
synopsis: Flexible, configurable, monadic and pretty logging
test-bench-deps:
  HUnit: '>=0'
  QuickCheck: '>=0'
  async: '>=0'
  base: '>=0'
  data-default: '>=0'
  directory: '>=0'
  filepath: '>=0'
  hspec: '>=0'
  log-warper: '>=0'
  microlens-mtl: '>=0'
  universum: '>=0'
  unordered-containers: '>=0'
