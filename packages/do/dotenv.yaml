all-versions:
- 0.1.0.0
- 0.1.0.1
- 0.1.0.2
- 0.1.0.3
- 0.1.0.4
- 0.1.0.5
- 0.1.0.6
- 0.1.0.7
- 0.1.0.8
- 0.1.0.9
- 0.3.0.0
- 0.3.0.1
- 0.3.0.2
- 0.3.0.3
- 0.3.1.0
- 0.3.2.0
- 0.3.3.0
- 0.3.4.0
- 0.4.0.0
- 0.5.0.0
- 0.5.0.1
- 0.5.0.2
- 0.5.1.0
- 0.5.1.1
- 0.5.2.0
- 0.5.2.1
- 0.5.2.2
- 0.5.2.3
- 0.5.2.4
- 0.5.2.5
- 0.6.0.1
- 0.6.0.2
- 0.6.0.3
- 0.7.0.0
- 0.8.0.0
- 0.8.0.1
- 0.8.0.2
- 0.8.0.3
- 0.8.0.4
- 0.8.0.6
- 0.8.0.7
- 0.9.0.0
- 0.9.0.1
- 0.9.0.2
- 0.9.0.3
- 0.10.0.0
- 0.10.0.1
- 0.10.1.0
- 0.11.0.0
- 0.11.0.1
- 0.11.0.2
- 0.12.0.0
author: Justin Leitgeb
basic-deps:
  base: '>=4.14 && <5.0'
  base-compat: '>=0.4'
  containers: '>=0'
  data-default-class: '>=0.1.2 && <0.2'
  directory: '>=0'
  dotenv: '>=0'
  exceptions: '>=0.8 && <0.11'
  megaparsec: '>=7.0.1 && <10.0'
  mtl: '>=2.2.2 && <2.4'
  optparse-applicative: '>=0.11 && <0.19'
  process: '>=1.6.3.0 && <1.7'
  shellwords: '>=0.1.3.0'
  text: '>=0'
changelog: |
  ## MASTER
  ## Dotenv 0.12.0.0
  ### Modified
  * Ensure support from GHC 8.10 up to GHC 9.6

  ### Possible breaking change
  * New attribute for `Config` data type to print env vars without actually
  running the command (kudos to @flandrade).

  ## Dotenv 0.11.0.2
  ### Modified
  * Allow optparse-applicative 0.18

  ## Dotenv 0.11.0.1
  ### Modified
  * Export internal module `Configuration.Dotenv.Internal` which exports all
  the internal modules.
  * Export `configParser` from `Configuration.Dotenv`.

  ## Dotenv 0.11.0.0
  ### Modified (Breaking change - new behavior)
  * Take last rather than first env var in dotenv file (reported by @rudymatela and
  solved by @anddriex). This will be the default behavior for the CLI, too.

  ## Dotenv 0.10.1.0
  ### Added
  * Short `-x` for `--example` flag

  ### Modified
  * Fix `union`/`unionBy` bug, refactor .env.example check, and improve error
  message (Kudos to @pbrisbin)

  ## Dotenv 0.10.0.1
  ### Modified
  * Modify docs.

  ## Dotenv 0.10.0.0
  ### Modified
  * `loadFile` change return type (back to `m ()`)

  ## Dotenv 0.9.0.3
  ### Added
  * Parse multi-word command interpolations (Kudos to @pbrisbin)

  ## Dotenv 0.9.0.2
  ### Added
  * Support for GHC = 9.0

  ### Removed
  * Support for GHC < 8.6

  ## Dotenv 0.9.0.1
  ### Added
  * Allow optparse-applicative-0.17.0.0

  ## Dotenv 0.9.0.0
  * Remove `loadSafeFile`. Users must create their own parsers to convert the
  read values from `System.Environment` to another data type. Therefore,
  `loadSafeFile` won't be needed. We'll remove this functionality to reduce
  dependencies.

  ## Dotenv 0.8.1.0
  * Correct bounds for base. GHC support for versions older than 8.0 was dropped.

  ## Dotenv 0.8.0.7
  * Allow megaparsec-0.9.0.0

  ## Dotenv 0.8.0.6
  * Allow optparse-applicative-0.16.0.0

  ## Dotenv 0.8.0.5
  * Extend ghc support to 8.8 and 8.10

  ## Dotenv 0.8.0.4
  *  Fix test fixtures

  ## Dotenv 0.8.0.3
  * Add suppport for `megaparsec-8.0.0`

  ## Dotenv 0.8.0.2
  * Add support for GHC 8.6

  ## Dotenv 0.8.0.1
  * Support for `optparse-applicative-0.15`

  ## Dotenv 0.8.0.0
  * Add `Configuration.Dotenv.Environment` module exporting functions from `System.Environment`,
    `System.Environment.Compat`, or `System.Environment.Blank`, depending on `base` version.
  * Add support for blank environment variables for `base` >= 4.11.0.0.

  ## Dotenv 0.7.0.0
  * Hide helper modules in other-modules

  ## Dotenv 0.6.0.3
  * Reexport `defaultConfig` in `Configuration.Dotenv` (thanks to: matsubara0507)

  ## Dotenv 0.6.0.2
  * Support for `process-1.6.3.0`

  ## Dotenv 0.6.0.1
  * Add support for `megaparsec-7.0.1`
  * Drop support for `GHC 7.8.4`

  ## Dotenv 0.6.0.0
  * Move `loadSafeFile` to `Configuration.Dotenv`
  * Export `Configuration.Dotenv.Types` from `Configuration.Dotenv`
  * Change `loadSafeFile` signature to accept different types of validators.
  * Add `type ValidatorMap = Map Text (Text -> Bool)` for custom validations.

  ## Dotenv 0.5.2.5
  * Update `exceptions` bounds `>= 0.8 && < 0.11`

  ## Dotenv 0.5.2.4
  * Add error message when there is more than one definition in the Scheme for the
  same env

  ## Dotenv 0.5.2.3
  * Update bounds `exceptions` == 0.9.*
  * Support `megaparsec` >= 6.4.0

  ## Dotenv 0.5.2.1

  * Update documentation for Configuration.Dotenv.Types

  ## Dotenv 0.5.2.0

  * Add `loadSafeFile` to typecheck the envs.
  * Add `(--schema|-s) FILE` flag to the `dotenv` CLI tool to enable safe mode.
  * Add `(--no-schema)` flag to the `dotenv` CLI tool to disable safe mode.
  * Turn safe mode on automatically when the `.schema.yml` file is present.
  * Make `required` optional in the `.schema.yml`.

  ## Dotenv 0.5.1.1

  * Allow `.env` empty files

  ## Dotenv 0.5.1.0

  * Add support for command substitution on env vars.

  ## Dotenv 0.5.0.2

  * Set `.env` file as default file for environment variables.
  * Add `--version` flag to check the version of dotenv that is in use.

  ## Dotenv 0.5.0.0

  * Add [dotenv-safe functionality](https://www.npmjs.com/package/dotenv-safe)
  * Add the `Config` type with options to override env variables, and setting the
  path for .env and .env.example files.
  * Changed `loadFile` function to get `Config` with the paths for the .env file
  and the .env.example file.

  ## Dotenv 0.4.0.0

  * Use Megaparsec 6.0
  * Dropped support for GHC 7.6

  ## Dotenv 0.3.4.0

  * Allow optparse-applicative 0.14

  ## Dotenv 0.3.3.0

  * Add support for variable expansion. Thanks to حبيب الامين (GitHub: habibalamin) for making this contribution.

  ## Dotenv 0.3.2.0

  * Add the option to pass arguments to the program passed to Dotenv. Thanks to
    Oleg Grenrus (GitHub: phadej) for making this contribution.

  ## Dotenv 0.3.1.0

  * Made interface more polymorphic so the functions works in any instance of
    `MonadIO`, not only `IO`. This should reduce amount of lifting in some
    cases.

  * Added `onMissingFile` helper to deal with possibly missing files.

  * Parser was rewritten to take full advantage of Megaparsec.
    `hspec-megaparsec` is now used for testing of the parser.

  * Dropped support for GHC 7.4.

  ## Dotenv 0.3.0.3

  * Allow optparse-applicative 0.13

  ## Dotenv 0.3.0.1

  * Remove unnecessary package dependencies.

  ## Dotenv 0.3.0.0

  * Reverted change to Data.Text in favor of String, for maintaining compatibility
    with common Haskell system libraries. Added separate interface for parsing a
    file into tuples containing Data.Text values. Thanks to Daisuke Fujimura
    (GitHub: fujimura).
  * Fixed parsing of CRLF characters for Windows users.

  ## Dotenv 0.2.0.0 (deprecated)

  * Changed public interfaces to use Data.Text.
  * Added function `parseFile` to read dotenv file without modifying the
    environment. Thanks to Daisuke Fujimura (GitHub: fujimura) for making this
    contribution.

  ## Dotenv 0.1.0.0

  * First public release.
changelog-type: markdown
description: "[![Build Status](https://github.com/stackbuilders/dotenv-hs/actions/workflows/build.yml/badge.svg)](https://github.com/stackbuilders/dotenv-hs/actions/workflows/build.yml)[![Hackage](https://img.shields.io/hackage/v/dotenv.svg)](http://hackage.haskell.org/package/dotenv)\n<!--
  ALL-CONTRIBUTORS-BADGE:START - Do not remove or modify this section -->\n[![All
  Contributors](https://img.shields.io/badge/all_contributors-23-orange.svg?style=flat-square)](#contributors-)\n<!--
  ALL-CONTRIBUTORS-BADGE:END -->\n\n# Dotenv files for Haskell\n\nIn most applications,\n[configuration
  should be separated from code](http://12factor.net/config). While\nit usually works
  well to keep configuration in the environment, there\nare cases where you may want
  to store configuration in a file outside\nof version control.\n\n\"Dotenv\" files
  have become popular for storing configuration,\nespecially in development and test
  environments. In\n[Ruby](https://github.com/bkeepers/dotenv),\n[Python](https://github.com/theskumar/python-dotenv)
  and\n[Javascript](https://www.npmjs.com/package/dotenv) there are libraries\nto
  facilitate loading of configuration options from configuration\nfiles. This library
  loads configuration to environment variables for\nprograms written in Haskell.\n\n##
  Install\n\nIn most cases you will just add `dotenv` to your cabal file. You can\nalso
  install the library and executable by invoking `stack install dotenv` or\nyou can
  download the dotenv binaries from our\n[releases](https://github.com/stackbuilders/dotenv-hs/releases)
  page.\n\n## Usage\n\nSet configuration variables in a file following the format
  below:\n\n```\nS3_BUCKET=YOURS3BUCKET\nSECRET_KEY=YOURSECRETKEYGOESHERE\n```\n\nThen,
  calling `Dotenv.load` from your Haskell program reads the above\nsettings into the
  environment:\n\n```haskell\nimport Configuration.Dotenv (loadFile, defaultConfig)\nloadFile
  defaultConfig\n```\n\nAfter calling `Dotenv.load`, you are able to read the values
  set in your\nenvironment using standard functions from `System.Environment` or\n`System.Environment.Blank`
  (`base` >= 4.11.0.0), such as `getEnv`.\n\nIf your version of `base` is < 4.11.0.0,
  then setting an environment variable value to\na blank string will remove the variable
  from the environment entirely.\n\n### Variable substitution\n\nIn order to use compound
  env vars use the following syntax within your env vars\n${your_env_var}. For instance:\n\n```\nDATABASE=postgres://${USER}@localhost/database\n```\n\nRunning
  it on the CLI:\n\n```\n$ dotenv \"echo $DATABASE\"\npostgres://myusername@localhost/database\n```\n\n###
  Command substitution\n\nIn order to use the standard output of a command in your
  env vars use the following syntax $(your_command). For instance:\n\n```\nDATABASE=postgres://$(whoami)@localhost/database\n```\n\nRunning
  it on the CLI:\n\n```\n$ dotenv \"echo $DATABASE\"\npostgres://myusername@localhost/database\n```\n\n###
  Surrond with quotes\n\nIf your value starts with a character that produces a parse
  error (e.g. `{`) . Surround your value\nwith quotes. You can also escape the quotes
  if they're inside your value. For example:\n\n```\nJSON_SQ='{\"a\":[1,2,3], \"b\":
  \"\\'asdf\\'\"}'\nJSON_DQ=\"{\\\"a\\\":[1,2,3], \\\"b\\\": \\\"'asdf'\\\"}\"\n```\n\nRun
  it:\n\n```\n$ dotenv \"echo $JSON_SQ\" | jq .a\n[\n  1,\n  2,\n  3\n]\n```\n\n###
  Configuration\n\nThe first argument to `loadFile` specifies the configuration. You
  can use\n`defaultConfig` which parses the `.env` file in your current directory
  and\ndoesn't override your envs. You can also define your own configuration with\nthe
  `Config` type.\n\n`False` in `configOverride` means Dotenv will respect\nalready-defined
  variables, and `True` means Dotenv will overwrite\nalready-defined variables.\n\nIn
  the `configPath` you can write a list of all the dotenv files where are\nenvs defined
  (e.g `[\".env\", \".tokens\", \".public_keys\"]`).\n\nIn the `configExamplePath`
  you can write a list of all the dotenv example files\nwhere you can specify which
  envs **must be defined** until running a program\n(e.g `[\".env.example\", \".tokens.example\",
  \".public_keys.example\"]`). If you don't\nneed this functionality you can set `configExamplePath`
  to an empty list.\n\nA `False` in the `configVerbose` means that Dotenv will not
  print any message\nwhen loading the envs. A `True` means that Dotenv will print
  a message when a variable is loaded.\n\nWhen `configDryRyn` is `True`, Dotenv will
  print out the loaded environment variables without executing the program.\n\nA `False`
  on `allowDuplicates` means that Dotenv will not allow duplicate keys, and instead
  it will throw\nan error. A `True` means that Dotenv will allow duplicate keys, and
  it will use the last one defined in the file (default behavior).\n\n### Advanced
  Dotenv File Syntax\n\nYou can add comments to your Dotenv file, on separate lines
  or after\nvalues. Values can be wrapped in single or double quotes. Multi-line\nvalues
  can be specified by wrapping the value in double-quotes, and\nusing the \"\\n\"
  character to represent newlines.\n\nThe [spec file](spec/Configuration/Dotenv/ParseSpec.hs)
  is the best\nplace to understand the nuances of Dotenv file parsing.\n\n### Command-Line
  Usage\n\nYou can call dotenv from the command line in order to load settings\nfrom
  one or more dotenv file before invoking an executable:\n\n```shell\n$ dotenv -f
  mydotenvfile myprogram\n```\n\nThe `-f` flag is optional, by default it looks for
  the `.env` file in the current working directory.\n\n```shell\n$ dotenv myprogram\n```\n\nAdditionally,
  you can pass arguments and flags to the program passed to\nDotenv:\n\n```shell\n$
  dotenv -f mydotenvfile myprogram -- --myflag myargument\n```\n\nor:\n\n```shell\n$
  dotenv -f mydotenvfile \"myprogram --myflag myargument\"\n```\n\nAlso, you can use
  a `--example` flag to use [dotenv-safe functionality](https://www.npmjs.com/package/dotenv-safe)\nso
  that you can have a list of strict envs that should be defined in the environment\nor
  in your dotenv files before the execution of your program. For instance:\n\n```shell\n$
  cat .env.example\nDOTENV=\nFOO=\nBAR=\n\n$ cat .env\nDOTENV=123\n\n$ echo $FOO\n123\n```\n\nThis
  will fail:\n\n```shell\n$ dotenv -f .env --example .env.example \"myprogram --myflag
  myargument\"\n> dotenv: The following variables are present in .env.example, but
  not set in the current environment, or .env: BAR\n```\n\nThis will succeed:\n\n```shell\n$
  export BAR=123 # Or you can do something like: \"echo 'BAR=123' >> .env\"\n$ dotenv
  -f .env --example .env.example \"myprogram --myflag myargument\"\n```\n\nHint: The
  `env` program in most Unix-like environments prints out the\ncurrent environment
  settings. By invoking the program `env` in place\nof `myprogram` above you can see
  what the environment will look like\nafter evaluating multiple Dotenv files.\n\n##
  Contributors ✨\n\nThanks goes to these wonderful people ([emoji key](https://allcontributors.org/docs/en/emoji-key)):\n\n<!--
  ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section -->\n<!-- prettier-ignore-start
  -->\n<!-- markdownlint-disable -->\n<table>\n  <tbody>\n    <tr>\n      <td align=\"center\"
  valign=\"top\" width=\"14.28%\"><a href=\"https://cristhianmotoche.github.io/\"><img
  src=\"https://avatars.githubusercontent.com/u/8370088?v=4?s=100\" width=\"100px;\"
  alt=\"Cristhian Motoche\"/><br /><sub><b>Cristhian Motoche</b></sub></a><br /><a
  href=\"https://github.com/stackbuilders/dotenv-hs/commits?author=CristhianMotoche\"
  title=\"Code\">\U0001F4BB</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a
  href=\"https://www.stackbuilders.com/news/author/justin-leitgeb\"><img src=\"https://avatars.githubusercontent.com/u/9977?v=4?s=100\"
  width=\"100px;\" alt=\"Justin S. Leitgeb\"/><br /><sub><b>Justin S. Leitgeb</b></sub></a><br
  /><a href=\"https://github.com/stackbuilders/dotenv-hs/commits?author=jsl\" title=\"Code\">\U0001F4BB</a></td>\n
  \     <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://markkarpov.com/\"><img
  src=\"https://avatars.githubusercontent.com/u/8165792?v=4?s=100\" width=\"100px;\"
  alt=\"Mark Karpov\"/><br /><sub><b>Mark Karpov</b></sub></a><br /><a href=\"https://github.com/stackbuilders/dotenv-hs/commits?author=mrkkrp\"
  title=\"Code\">\U0001F4BB</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a
  href=\"https://juancarlos.io/\"><img src=\"https://avatars.githubusercontent.com/u/2164411?v=4?s=100\"
  width=\"100px;\" alt=\"Juan Paucar\"/><br /><sub><b>Juan Paucar</b></sub></a><br
  /><a href=\"https://github.com/stackbuilders/dotenv-hs/commits?author=juanpaucar\"
  title=\"Code\">\U0001F4BB</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a
  href=\"https://github.com/jpvillaisaza\"><img src=\"https://avatars.githubusercontent.com/u/584947?v=4?s=100\"
  width=\"100px;\" alt=\"Juan Pedro Villa Isaza\"/><br /><sub><b>Juan Pedro Villa
  Isaza</b></sub></a><br /><a href=\"https://github.com/stackbuilders/dotenv-hs/commits?author=jpvillaisaza\"
  title=\"Code\">\U0001F4BB</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a
  href=\"http://fujimuradaisuke.com/\"><img src=\"https://avatars.githubusercontent.com/u/134072?v=4?s=100\"
  width=\"100px;\" alt=\"Daisuke Fujimura\"/><br /><sub><b>Daisuke Fujimura</b></sub></a><br
  /><a href=\"https://github.com/stackbuilders/dotenv-hs/commits?author=fujimura\"
  title=\"Code\">\U0001F4BB</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a
  href=\"https://github.com/cptrodolfox\"><img src=\"https://avatars.githubusercontent.com/u/20303685?v=4?s=100\"
  width=\"100px;\" alt=\"William R. Arellano\"/><br /><sub><b>William R. Arellano</b></sub></a><br
  /><a href=\"https://github.com/stackbuilders/dotenv-hs/commits?author=cptrodolfox\"
  title=\"Code\">\U0001F4BB</a></td>\n    </tr>\n    <tr>\n      <td align=\"center\"
  valign=\"top\" width=\"14.28%\"><a href=\"https://dbalseiro.github.io/\"><img src=\"https://avatars.githubusercontent.com/u/2053849?v=4?s=100\"
  width=\"100px;\" alt=\"Diego Balseiro\"/><br /><sub><b>Diego Balseiro</b></sub></a><br
  /><a href=\"https://github.com/stackbuilders/dotenv-hs/commits?author=dbalseiro\"
  title=\"Code\">\U0001F4BB</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a
  href=\"https://github.com/fefi95\"><img src=\"https://avatars.githubusercontent.com/u/12057338?v=4?s=100\"
  width=\"100px;\" alt=\"Stefani Castellanos\"/><br /><sub><b>Stefani Castellanos</b></sub></a><br
  /><a href=\"https://github.com/stackbuilders/dotenv-hs/commits?author=fefi95\" title=\"Code\">\U0001F4BB</a></td>\n
  \     <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://wikipedia.org/\"><img
  src=\"https://avatars.githubusercontent.com/u/2220440?v=4?s=100\" width=\"100px;\"
  alt=\"Götz\"/><br /><sub><b>Götz</b></sub></a><br /><a href=\"https://github.com/stackbuilders/dotenv-hs/commits?author=goetzc\"
  title=\"Code\">\U0001F4BB</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a
  href=\"https://oleg.fi/\"><img src=\"https://avatars.githubusercontent.com/u/51087?v=4?s=100\"
  width=\"100px;\" alt=\"Oleg Grenrus\"/><br /><sub><b>Oleg Grenrus</b></sub></a><br
  /><a href=\"https://github.com/stackbuilders/dotenv-hs/commits?author=phadej\" title=\"Code\">\U0001F4BB</a></td>\n
  \     <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/sestrella\"><img
  src=\"https://avatars.githubusercontent.com/u/2049686?v=4?s=100\" width=\"100px;\"
  alt=\"Sebastián Estrella\"/><br /><sub><b>Sebastián Estrella</b></sub></a><br /><a
  href=\"https://github.com/stackbuilders/dotenv-hs/commits?author=sestrella\" title=\"Code\">\U0001F4BB</a></td>\n
  \     <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://git.sr.ht/~habibalamin\"><img
  src=\"https://avatars.githubusercontent.com/u/1415293?v=4?s=100\" width=\"100px;\"
  alt=\"Habib Alamin\"/><br /><sub><b>Habib Alamin</b></sub></a><br /><a href=\"https://github.com/stackbuilders/dotenv-hs/commits?author=habibalamin\"
  title=\"Code\">\U0001F4BB</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a
  href=\"https://github.com/FranzGB\"><img src=\"https://avatars.githubusercontent.com/u/46214532?v=4?s=100\"
  width=\"100px;\" alt=\"Franz Guzmán\"/><br /><sub><b>Franz Guzmán</b></sub></a><br
  /><a href=\"https://github.com/stackbuilders/dotenv-hs/commits?author=FranzGB\"
  title=\"Code\">\U0001F4BB</a></td>\n    </tr>\n    <tr>\n      <td align=\"center\"
  valign=\"top\" width=\"14.28%\"><a href=\"https://brisb.in/\"><img src=\"https://avatars.githubusercontent.com/u/50812?v=4?s=100\"
  width=\"100px;\" alt=\"Pat Brisbin\"/><br /><sub><b>Pat Brisbin</b></sub></a><br
  /><a href=\"https://github.com/stackbuilders/dotenv-hs/commits?author=pbrisbin\"
  title=\"Code\">\U0001F4BB</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a
  href=\"https://github.com/aloussase\"><img src=\"https://avatars.githubusercontent.com/u/84427521?v=4?s=100\"
  width=\"100px;\" alt=\"Alexander Goussas\"/><br /><sub><b>Alexander Goussas</b></sub></a><br
  /><a href=\"https://github.com/stackbuilders/dotenv-hs/commits?author=aloussase\"
  title=\"Code\">\U0001F4BB</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a
  href=\"https://github.com/alexisbcc\"><img src=\"https://avatars.githubusercontent.com/u/38666191?v=4?s=100\"
  width=\"100px;\" alt=\"Alexis Crespo\"/><br /><sub><b>Alexis Crespo</b></sub></a><br
  /><a href=\"https://github.com/stackbuilders/dotenv-hs/commits?author=alexisbcc\"
  title=\"Code\">\U0001F4BB</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a
  href=\"https://github.com/anddriex\"><img src=\"https://avatars.githubusercontent.com/u/42983405?v=4?s=100\"
  width=\"100px;\" alt=\"Andres Perez\"/><br /><sub><b>Andres Perez</b></sub></a><br
  /><a href=\"https://github.com/stackbuilders/dotenv-hs/commits?author=anddriex\"
  title=\"Code\">\U0001F4BB</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a
  href=\"https://github.com/ibarrae\"><img src=\"https://avatars.githubusercontent.com/u/22796877?v=4?s=100\"
  width=\"100px;\" alt=\"Esteban Ibarra\"/><br /><sub><b>Esteban Ibarra</b></sub></a><br
  /><a href=\"https://github.com/stackbuilders/dotenv-hs/commits?author=ibarrae\"
  title=\"Code\">\U0001F4BB</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a
  href=\"http://ferandrade.com/\"><img src=\"https://avatars.githubusercontent.com/u/6790161?v=4?s=100\"
  width=\"100px;\" alt=\"Fernanda Andrade\"/><br /><sub><b>Fernanda Andrade</b></sub></a><br
  /><a href=\"https://github.com/stackbuilders/dotenv-hs/commits?author=flandrade\"
  title=\"Code\">\U0001F4BB</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a
  href=\"https://github.com/Jagl257\"><img src=\"https://avatars.githubusercontent.com/u/27145248?v=4?s=100\"
  width=\"100px;\" alt=\"Jorge Guerra Landázuri\"/><br /><sub><b>Jorge Guerra Landázuri</b></sub></a><br
  /><a href=\"https://github.com/stackbuilders/dotenv-hs/commits?author=Jagl257\"
  title=\"Code\">\U0001F4BB</a></td>\n    </tr>\n    <tr>\n      <td align=\"center\"
  valign=\"top\" width=\"14.28%\"><a href=\"https://matsubara0507.github.io/whoami\"><img
  src=\"https://avatars.githubusercontent.com/u/10684493?v=4?s=100\" width=\"100px;\"
  alt=\"MATSUBARA Nobutada\"/><br /><sub><b>MATSUBARA Nobutada</b></sub></a><br /><a
  href=\"https://github.com/stackbuilders/dotenv-hs/commits?author=matsubara0507\"
  title=\"Code\">\U0001F4BB</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a
  href=\"https://github.com/wojtekmach\"><img src=\"https://avatars.githubusercontent.com/u/76071?v=4?s=100\"
  width=\"100px;\" alt=\"Wojtek Mach\"/><br /><sub><b>Wojtek Mach</b></sub></a><br
  /><a href=\"https://github.com/stackbuilders/dotenv-hs/commits?author=wojtekmach\"
  title=\"Code\">\U0001F4BB</a></td>\n    </tr>\n  </tbody>\n</table>\n\n<!-- markdownlint-restore
  -->\n<!-- prettier-ignore-end -->\n\n<!-- ALL-CONTRIBUTORS-LIST:END -->\n\nThis
  project follows the [all-contributors](https://github.com/all-contributors/all-contributors)
  specification. Contributions of any kind welcome!\n\n## License\n\nMIT, see [the
  LICENSE file](LICENSE).\n\n## Contributing\n\nDo you want to contribute to this
  project? Please take a look at our [contributing guideline](/docs/CONTRIBUTING.md)
  to know how you can help us build it.\n\n---\n\n<img src=\"https://cdn.stackbuilders.com/media/images/Sb-supports.original.png\"
  alt=\"Stack Builders\" width=\"50%\"></img>\n[Check out our libraries](https://github.com/stackbuilders/)
  | [Join our team](https://www.stackbuilders.com/join-us/)\n"
description-type: markdown
hash: 2f25615cec37ff9a66a48ef0ebf2ac96ae989911d0c26c6796fc2f5247bdd665
homepage: https://github.com/stackbuilders/dotenv-hs
latest: 0.12.0.0
license-name: MIT
maintainer: hackage@stackbuilders.com
synopsis: Loads environment variables from dotenv files
test-bench-deps:
  base: '>=4.9 && <5.0'
  dotenv: '>=0'
  hspec: '>=0'
  hspec-megaparsec: '>=2.0 && <3.0'
  megaparsec: '>=0'
  process: '>=0'
  text: '>=0'
