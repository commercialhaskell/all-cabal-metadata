all-versions:
- 0.1.0.0
- 0.1.1.0
author: José Loreno Rodríguez
basic-deps:
  base: '>=4.7 && <5'
  bytestring: '>=0.10'
  data-default-class: '>=0'
  free: '>=0'
  language-docker: '>=10.0.0'
  megaparsec: '>=8.0'
  mtl: '>=0'
  template-haskell: '>=0'
  text: '>=0'
  th-lift: '>=0'
  th-lift-instances: '>=0'
  time: '>=0'
changelog: ''
changelog-type: ''
description: "# dockerfile-creator\n\nBuild Dockerfiles using Haskell with an embedded
  DSL.\n\n- [Writing Dockerfiles in Haskell](#writing-dockerfiles-in-haskell)\n- [Using
  the QuasiQuoter](#using-the-quasiquoter)\n- [Templating Dockerfiles in Haskell](#templating-dockerfiles-in-haskell)\n-
  [Using IO in the DSL](#using-io-in-the-dsl)\n\n## Pretty-printing files\n\n```haskell\nimport
  Language.Docker\nmain = do\n    Right d <- parseFile \"./Dockerfile\"\n    putStr
  (prettyPrint d)\n```\n\n## Writing Dockerfiles in Haskell\n\n```haskell\n{-# LANGUAGE
  OverloadedStrings #-}\n{-# LANGUAGE OverloadedLists #-}\nimport Language.Docker\n\nmain
  = putDockerfileStr $ do\n    from \"node\"\n    run \"apt-get update\"\n    run
  [\"apt-get\", \"install\", \"something\"]\n    -- ...\n```\n\n## Using the QuasiQuoter\n\n```haskell\n{-#
  LANGUAGE OverloadedStrings #-}\n{-# LANGUAGE QuasiQuotes       #-}\nimport Language.Docker\nmain
  = putDockerfileStr $ do\n    from \"node\"\n    run \"apt-get update\"\n    [edockerfile|\n
  \   RUN apt-get update\n    CMD node something.js\n    |]\n    -- ...\n```\n\n##
  Templating Dockerfiles in Haskell\n\n```haskell\n{-# LANGUAGE FlexibleContexts  #-}\n{-#
  LANGUAGE OverloadedStrings #-}\n{-# LANGUAGE OverloadedLists #-}\nimport Control.Monad\nimport
  Language.Docker\nimport Data.String (fromString)\nimport qualified Data.Text.Lazy.IO
  as L\n\ntags = [\"7.8\", \"7.10\", \"8\"]\ncabalSandboxBuild packageName = do\n
  \   let cabalFile = packageName ++ \".cabal\"\n    run \"cabal sandbox init\"\n
  \   run \"cabal update\"\n    add [fromString cabalFile] (fromString $ \"/app/\"
  ++ cabalFile)\n    run \"cabal install --only-dep -j\"\n    add \".\" \"/app/\"\n
  \   run \"cabal build\"\nmain =\n    forM_ tags $ \\tag -> do\n        let df =
  toDockerfileText $ do\n            from (\"haskell\" `tagged` tag)\n            cabalSandboxBuild
  \"mypackage\"\n        L.writeFile (\"./examples/templating-\" ++ tag ++ \".dockerfile\")
  df\n```\n\n## Using IO in the DSL\nBy default the DSL runs in the `Identity` monad.
  By running in IO we can\nsupport more features like file globbing:\n\n```haskell\n{-#
  LANGUAGE OverloadedStrings #-}\n{-# LANGUAGE OverloadedLists #-}\nimport           Language.Docker\nimport
  qualified System.Directory     as Directory\nimport qualified System.FilePath      as
  FilePath\nimport qualified System.FilePath.Glob as Glob\nimport Data.List.NonEmpty
  (fromList)\nimport qualified Data.Text.Lazy.IO    as L\n\nmain = do\n    str <-
  toDockerfileTextIO $ do\n        fs <- liftIO $ do\n            cwd <- Directory.getCurrentDirectory\n
  \           fs <- Glob.glob \"./test/*.hs\"\n\t    let relativeFiles = map (FilePath.makeRelative
  cwd) fs\n            return (fromList relativeFiles)\n        from \"ubuntu\"\n\tcopy
  $ (toSources fs) `to` \"/app/\"\n    L.putStr str\n```\n"
description-type: markdown
hash: a80a7d2af5acb473faee5dc4d73e9e57fdde26daab2be2b3a0b1fa7f7723d8e7
homepage: https://github.com/hadolint/dockerfile-creator#readme
latest: 0.1.1.0
license-name: BSD-3-Clause
maintainer: jose.zap@gmail.com
synopsis: ''
test-bench-deps:
  Glob: '>=0'
  base: '>=4.7 && <5'
  bytestring: '>=0.10'
  data-default-class: '>=0'
  directory: '>=0'
  dockerfile-creator: '>=0'
  filepath: '>=0'
  free: '>=0'
  hspec: '>=0'
  language-docker: '>=10.0.0'
  megaparsec: '>=8.0'
  mtl: '>=0'
  process: '>=0'
  template-haskell: '>=0'
  text: '>=0'
  th-lift: '>=0'
  th-lift-instances: '>=0'
  time: '>=0'
