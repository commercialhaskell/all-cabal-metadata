all-versions:
- 0.1.0.0
- 0.1.1.0
- 0.1.1.1
- 0.1.2.0
- 0.1.3.0
- 0.1.4.0
author: Yiğit Özkavcı
basic-deps:
  aeson: '>=0'
  aeson-casing: '>=0'
  base: '>=4.9 && <=5.0'
  bytestring: '>=0'
  containers: '>=0'
  filepath: '>=0'
  http-client: '>=0'
  http-client-tls: '>=0'
  http-types: '>=0'
  lens: '>=0'
  mtl: '>=0'
  network-uri: '>=0'
  text: '>=0'
  time: '>=0'
  unordered-containers: '>=0'
changelog: ''
changelog-type: ''
description: "# DOH\nComplete API bindings for DigitalOcean API V2\n\n# Getting Started\nHere
  is an example usage of the API:\n```haskell\n{-# LANGUAGE OverloadedStrings #-}\n\nmodule
  Main where\n\n-----------------------------------------------------------------\nimport
  Network.DigitalOcean\nimport Network.DigitalOcean.Types\nimport Network.DigitalOcean.Services\n-----------------------------------------------------------------\nimport
  Control.Monad.Except\nimport Control.Monad.Reader\n-----------------------------------------------------------------\n\nclient
  :: Client\nclient = Client \"your api key\"\n\nmain :: IO ()\nmain = do\n  result
  <- runExceptT $ (runReaderT $ runDO createViaSshKeys) client\n  case result of\n
  \   Left err -> print err\n    Right _ -> return ()\n\ncreateViaSshKeys :: DO ()\ncreateViaSshKeys
  = do\n  -- Read a public key from a key pair and create ssh keys on DigitalOcean
  with it\n  pubKey <- liftIO $ readFile \"/Users/yigitozkavci/.ssh/do_api_rsa.pub\"\n
  \ sshKey <- createSSHKey (SSHKeyPayload \"my api key\" pubKey) \n  \n  -- Create
  2 droplets with our newly uploaded ssh keys\n  let dropletPayload = IDropletPayload
  \"nyc3\" \"512mb\" Ubuntu1404x64 (Just [sshkeyFingerprint sshKey]) Nothing Nothing
  Nothing Nothing Nothing Nothing Nothing\n  droplets <- map dropletId <$> createDroplets
  [\"droplet-1\", \"droplet-2\"] dropletPayload\n\n  -- Take snapshot of our newly
  created droplets\n  forM_ droplets $ \\dropletId -> performDropletAction dropletId
  (TakeSnapshot (Just \"bulk snapshot\"))\n```\n\nFor full documentation and reference,
  see: http://hackage.haskell.org/package/DOH-0.1.2.0\n\n# Contributing\nWhat can
  you do?\n- You can [open an issue](https://github.com/inzva/DigitalOcean.hs/issues/new)
  for unexpected / needed behaviors\n- Better, you can send a Pull Request\n\nAny
  kind of contributions are welcome, even if it's updating docs / improving commenting
  / improving tests.\n"
description-type: markdown
hash: adcdb4f29084f337de2facc435c2fda1c879f0f3126f0392ff7509518ff39279
homepage: ''
latest: 0.1.4.0
license-name: MIT
maintainer: yigitozkavci8@gmail.com
synopsis: Complete API bindings for DigitalOcean API V2
test-bench-deps:
  QuickCheck: '>=0'
  aeson: '>=0'
  aeson-casing: '>=0'
  base: '>=4.9 && <=5.0'
  bytestring: '>=0'
  containers: '>=0'
  filepath: '>=0'
  http-client: '>=0'
  http-client-tls: '>=0'
  http-types: '>=0'
  interpolatedstring-perl6: '>=0'
  lens: '>=0'
  mtl: '>=0'
  network-uri: '>=0'
  quickcheck-instances: '>=0'
  text: '>=0'
  time: '>=0'
  unordered-containers: '>=0'
