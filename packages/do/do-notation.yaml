all-versions:
- 0.1.0.0
- 0.1.0.1
- 0.1.0.2
author: Sandy Maguire
basic-deps:
  base: '>=4.7 && <5'
  indexed: '>=0'
changelog: |
  # Changelog for do-notation

  ## 2018-09-09 -- 0.1.0.2

  Loosen constraint on PureSyntax down to Applicative.

  ## 2018-09-07 -- 0.1.0.1

  First release!

  ## Unreleased changes
changelog-type: markdown
description: |+
  # do-notation

  [![Build Status](https://travis-ci.org/isovector/do-notation.svg?branch=master)](https://travis-ci.org/isovector/do-notation) | [Hackage][hackage]

  [hackage]: https://hackage.haskell.org/package/do-notation


  ## Dedication

  > I've just locked an open door. Strange, yet symbolically compelling.
  >
  > Manny Calavera, Grim Fandango


  ## Overview

  Have you ever wanted to manage siiiick invariants with indexed monads without
  giving up your regular monads in the process? `do-notation` lets you do this
  with a bunch of type jiggery-pokery behind the scenes.

  It also provides the `Ix m` indexed monad which is a free construction over a
  regular monad `m`. Cool.


  ## Usage

  ```haskell
  {-# LANGUAGE RebindableSyntax #-}

  import Language.Haskell.DoNotation
  import Prelude hiding (Monad (..), pure)
  ```


  ## Limitations

  The implementation doesn't play very nicely with `do`-blocks bound via `let`.


  ## Thanks

  Huge shout-outs to [Csongor Kiss][kcsongor] for very patiently walking me
  through the incoherent instance machinery necessary to make this all work.

  [kcsongor]: http://kcsongor.github.io/

description-type: markdown
hash: 04cd62b59fcb30bfc2fce72002cba54655c38348ef167a7c99f029225f85838f
homepage: https://github.com/isovector/do-notation#readme
latest: 0.1.0.2
license-name: BSD-3-Clause
maintainer: sandy@sandymaguire.me
synopsis: Generalize do-notation to work on monads and indexed monads simultaneously.
test-bench-deps:
  base: '>=4.7 && <5'
  do-notation: '>=0'
  indexed: '>=0'
