all-versions:
- 1.0.0
- 1.1.0
- 1.2.0
- 1.3.0.0
- 1.3.0.1
author: Ollie Charles, Herbert Valerio Riedel
basic-deps:
  base: '>=4.8 && <4.18'
  bytestring: '>=0.10.0.0 && <0.12.0.0'
  deepseq: '>=1.4 && <1.5'
  text-short: '>=0.1.2 && <0.2'
changelog: "### 1.3.0.1\n\n- Fix `pkgconfig-depends` decleration for @use-system-library@\n
  \ configuration; also add new `pkg-config` flag for falling back\n  to non-`pkg-config`-based
  FFI library linkage.\n\n# 1.3.0.0\n\n- This represents a major rewrite/refactoring
  of this package.\n\n- Add support for generating version 1.0 hashes.\n\n- Add support
  for controlling length of generated hash.\n\n- Add support for hybrid `Argon2id`
  variant.\n\n- Add `NFData` instances.\n\n- Defaults in `defaultHashOptions` changed
  to the current ones from the upstream `argon2` executable.\n\n- Replace `Argon2Exception`
  by more direct `Argon2Status` enumeration; report failures purely via `Either` rather
  than by throwing as exceptions.\n\n- Rename `verify` to `verifyEncoded` and return
  more informative `Argon2Status` result instead of `Bool`.\n\n- Embedded `phc-winner-argon2`
  version updated to release `20171227`.\n\n- Mangle names of global symbols from
  `phc-winner-argon2` to reduce risk of symbol clashes at the C ABI level.\n\n- Add
  support for `libargon2`'s optimised C routines on x86_64 (can be disabled via new
  `non-optimised-c` cabal flag).\n\n- Fix potential memory leak.\n\n# 1.2.0\n\n- Updated
  embedded phc-winner-argon2, so that hashes are generated\n  using version 1.3 of
  the argon2 specification.\n  \n  Note that that hashes generated using this version
  are different than\n  hashes generated using previous versions, so anything that
  compares them\n  or relies on them being stable may be broken by this update. \n
  \ However, Crypto.Argon2.verify will continue to be able to verify\n  hashes produced
  by previous versions.\n\n- Use CSize for portability instead of Word64, fixing build
  on 32 bit\n  systems. This changed the constructors of Argon2Exception, an API change.\n\n-
  Bug fix: Crypto.Argon2.hash returned a ByteString truncated at the first\n  NULL.\n\n-
  Added use-system-library build flag.\n\n- Build against `base-4.9`\n\n# 1.1.0\n\n-
  First stable release. Same API as 1.0.0, but now features documentation and\n  expected
  type class instances for data types.\n\n- QuickCheck properties added:\n\n  1. verify
  (hashEncoded options password salt) password == True\n  2. hash options password
  salt /= password\n\n- `hash` now uses the underlying \"raw\" hash routines, rather
  than the encoded\n  routines. This was a bug in 1.0.0. Thanks to @jorgen for this
  fix.\n\n- `verify` added, in order to correctly verify that a password matches an
  \n  encoded password.\n\n- `defaultHashOptions` are now more expensive.\n\n# 1.0.0\n\n-
  Initial release\n"
changelog-type: markdown
description: |-
  Argon2 is the key derivation function (KDF) selected as the winner of the [Password Hashing Competition](https://en.wikipedia.org/wiki/Password_Hashing_Competition). The API exposed by this bindings provide access to the 3 specified variants

  * @Argon2d@ (maximize resistance to GPU cracking attacks),
  * @Argon2i@ (optimized to resist side-channel attacks), and
  * @Argon2id@ (hybrid version combining @Argon2d@ and @Argon2i@)

  and allows to control various parameters (time cost, memory cost, parallelism) of the Argon2 function. Moreover, it is also supported to generate and verify the deprecated version 1.0 hashes, as well as the current version 1.3 hashes.

  The Haskell API supports both raw binary hashes as well as the ASCII-based [PHC string format](https://github.com/P-H-C/phc-string-format/blob/master/phc-sf-spec.md).

  This version provides bindings to the \"@20171227@\" release of the [Argon2 reference implementation (libargon2)](https://github.com/P-H-C/phc-winner-argon2) of the Argon2 password-hashing function.

  Please refer to the [Argon2 specification](https://github.com/P-H-C/phc-winner-argon2/blob/master/argon2-specs.pdf) for more information.
description-type: haddock
hash: 8c71c8f28da42e6c85f1a4c4f196a03688b00a1bf18f18c9cf41015416c35649
homepage: ''
latest: 1.3.0.1
license-name: BSD-3-Clause
maintainer: Herbert Valerio Riedel <hvr@gnu.org>
synopsis: Memory-hard password hash and proof-of-work function
test-bench-deps:
  QuickCheck: '>=2.11 && <2.12'
  argon2: '>=0'
  base: '>=0'
  bytestring: '>=0'
  tasty: '>=1.0 && <1.1'
  tasty-hunit: '>=0.10 && <0.11'
  tasty-quickcheck: '>=0.10 && <0.11'
