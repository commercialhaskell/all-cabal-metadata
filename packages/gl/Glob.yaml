homepage: http://iki.fi/matti.niemenmaa/glob/
changelog-type: text
hash: ec55959bc8780397b4b670686f7f6ca1f6bbd81c929c2039e11a9a7d46873882
test-bench-deps:
  test-framework-hunit: '>=0.2 && <1'
  test-framework: '>=0.2 && <1'
  base: '>=4 && <5'
  filepath: '>=1.1 && <1.5'
  test-framework-quickcheck2: '>=0.3 && <1'
  dlist: '>=0.4 && <1.1'
  HUnit: '>=1.2 && <1.7'
  containers: <0.7
  transformers: '>=0.2 && <0.6'
  QuickCheck: '>=2 && <3'
  transformers-compat: '>=0.3 && <0.8'
  directory: <1.4
maintainer: Matti Niemenmaa <matti.niemenmaa+glob@iki.fi>
synopsis: Globbing library
changelog: "0.10.2, 2021-11-10:\r\n\tRelaxed transformers-compat version bound.\r\n\r\n\tSupported
  Win32 2.12.0.0 or higher.\r\n\r\n0.10.1, 2020-07-19:\r\n\tUpdated code and dependencies
  to support dlist-1.0.\r\n\r\n\tCabal-Version minimum bumped to 1.10 as Hackage now
  rejects older minima.\r\n\r\n0.10.0, 2018-12-19:\r\n\tBug fix: \"**/\" matched hidden
  directories in some scenarios even when\r\n\t         matchDotsImplicitly was set
  to False.\r\n\t         Thanks to Travis Sunderland for the report as well as the
  fix.\r\n\r\n0.9.3, 2018-09-22:\r\n\tUpdated dependencies to allow containers-0.7
  (GHC 8.6). Thanks to\r\n\tchessai for the merge request.\r\n\r\n\tUpdated tests
  to compile with GHC 8.6.\r\n\r\n0.9.2, 2018-02-26:\r\n\tUpdated dependencies to
  allow transformers-compat-0.6.\r\n\r\n0.9.1, 2017-11-04:\r\n\tMade Tests.Utils use
  Ints instead of Floats to avoid spurious failures\r\n\tthat aren't of any concern.\r\n\r\n\tUpdated
  test dependencies to allow HUnit-1.6.\r\n\r\n0.9.0, 2017-10-01:\r\n\tThanks to Harry
  Garrood for many contributions to this release.\r\n\r\n\tNew functions, data types,
  and constants:\r\n\t\tSystem.FilePath.Glob.isLiteral :: Pattern -> Bool\r\n\t\t\tTells
  whether a Pattern is a literal file path.\r\n\r\n\t\t\tThanks to Simon Hengel and
  Harry Garrood for the\r\n\t\t\tfeature request.\r\n\r\n\t\tSystem.FilePath.Glob.GlobOptions\r\n\t\t\tOptions
  for the glob* family of IO functions.\r\n\r\n\t\tSystem.FilePath.Glob.globDefault
  :: GlobOptions\r\n\t\t\tUse matchDefault and don't return unmatched files.\r\n\r\n\r\n\tChanged
  function types:\r\n\t\tSystem.FilePath.Glob.globDir :: [Pattern] -> FilePath ->
  IO [[FilePath]]\r\n\t\t\tNo longer returns unmatched paths, like globDir1.\r\n\r\n\t\tSystem.FilePath.Glob.globDirWith
  :: GlobOptions -> [Pattern] -> FilePath -> IO ([[FilePath]], Maybe [FilePath])\r\n\t\t\tTakes
  GlobOptions instead of MatchOptions, and returns\r\n\t\t\tunmatched paths in a Maybe
  corresponding to whether they\r\n\t\t\twere requested in the options or not.\r\n\r\n\t\t\tThis
  is a significant performance boost for all glob*\r\n\t\t\tfunctions when unmatched
  file paths are not desired.\r\n\r\n\tOptimization: when unmatched file paths are
  not requested, glob and\r\n\t              globDir1 use commonDirectory to avoid
  extra\r\n\t              getDirectoryContents calls at the start.\r\n\tOptimization:
  character ranges containing . or / are simplified more\r\n\t              than before,
  especially when they make the entire pattern\r\n\t              incapable of matching
  anything.\r\n\tOptimization: extension separator matching where the extension is\r\n\t
  \             surrounded by other literals (e.g. \"*.txt\" or \"foo.*\" or\r\n\t
  \             simply \"foo.txt\") should be quicker in general, and the\r\n\t              Patterns
  should be smaller. (This adds to the number of\r\n\t              places where the
  code assumes that the extension separator\r\n\t              is the '.' character.)\r\n\r\n\tBug
  fix: commonDirectory should no longer add extra directory separators\r\n\t         to
  the Pattern.\r\n\tBug fix: the glob* functions should now place slashes correctly
  when\r\n\t         using recursively matching patterns with extra slashes, such
  as\r\n\t         \"**//foo\".\r\n\tBug fix: number ranges are no longer optimized
  to single characters, so\r\n\t         that leading zeroes are handled correctly:
  e.g. \"<0-9>\" didn't\r\n\t         match \"007\".\r\n\tBug fix: \"//\" did not
  match itself.\r\n\tBug fix: \".//\" did not match itself.\r\n\tBug fix: \"x\" did
  not match \".//x\" (with ignoreDotSlash enabled).\r\n\tBug fix: \"<-><->\" matched
  single digit numbers.\r\n\tBug fix: \"<0-0><1-1>\" didn't match \"01\".\r\n\r\n0.8.0,
  2017-05-27:\r\n        Added instance IsString Pattern, thanks to Mitsutoshi Aoe.\r\n\r\n0.7.14,
  2016-12-29:\r\n\tUpdate dependencies to allow directory-1.3.\r\n\r\n0.7.13, 2016-11-25:\r\n\tUpdate
  test dependencies to allow HUnit-1.5.\r\n\r\n0.7.12, 2016-10-07:\r\n\tUpdate test
  dependencies to allow HUnit-1.4.\r\n\r\n0.7.11, 2016-08-08:\r\n\tGot rid of tests/Utils.hs
  to fix test compilation on case-insensitive\r\n\tfilesystems (tests/Utils.hs vs
  tests/Tests/Utils.hs).\r\n\r\n0.7.10, 2016-07-18:\r\n\tUpdate dependencies to allow
  dlist-0.8.\r\n\r\n0.7.9, 2016-07-02:\r\n\tAdd missing Utils module to test suite,
  so that the tests provided with\r\n\tthe sdist tarball actually run.\r\n\r\n0.7.8,
  2016-07-01:\r\n\tAdd dependency on transformers-compat to allow using\r\n\tControl.Monad.Trans.Except
  also with older library versions.\r\n\r\n0.7.7, 2016-06-28:\r\n\tUpdate test dependencies
  to allow HUnit-1.3.\r\n\r\n0.7.6, 2016-06-28:\r\n\tUpdate dependencies to allow
  filepath-1.4.\r\n\r\n\tAdded Cabal Source-Repository metadata, pointing to GitHub.\r\n\r\n\tIntegrated
  tests with Cabal so that they can be run with \"cabal test\".\r\n\r\n\tGot rid of
  deprecation warnings by using Control.Monad.Trans.Except\r\n\tinstead of Control.Monad.Trans.Error.\r\n\r\n\tAdded
  Semigroup instance, bringing in a new dependency on semigroups on\r\n\tpre-8.0 GHC
  versions.\r\n\r\n0.7.5, 2014-05-08:\r\n\tUpdate dependencies to allow transformers-0.4.\r\n\r\n0.7.4,
  2014-03-18:\r\n\tUpdate dependencies to allow dlist-0.7.\r\n\r\n0.7.3, 2013-12-01:\r\n\tUpdate
  dependencies to allow dlist-0.6.\r\n\r\n0.7.2, 2012-10-18:\r\n\tUpdate dependencies
  to allow directory-1.2.\r\n\r\n0.7.1, 2012-07-03:\r\n\tUpdate dependencies to allow
  transformers-0.3, and generally tighten\r\n\tthem according to the policy.\r\n\r\n0.7,
  2012-01-03:\r\n\tChanged function types:\r\n\t\tSystem.FilePath.Glob.glob :: String
  -> IO [FilePath]\r\n\t\t\tNow takes a String to be compiled instead of an already-compiled\r\n\t\t\tPattern.\r\n\r\n\tAdded
  a README and more basic usage documentation.\r\n\r\n0.6.1, 2011-09-14:\r\n\tBug
  fix: globDir should now ignore the given directory when given an\r\n\t         absolute
  path on Windows.\r\n\r\n\tDoc fix: noted that globDir doesn't actually fully ignore
  the given\r\n\t         directory if the Pattern starts with a path separator.\r\n\r\n0.6,
  2011-09-12:\r\n\tNew functions:\r\n\t\tSystem.FilePath.Glob.glob :: Pattern -> IO
  [FilePath]\r\n\r\n\tChange: globDir, given a Pattern starting with a path separator,
  now ignores\r\n\t\t\t  the given directory. Thus e.g. globDir (compile \"/*\") d
  gives the\r\n\t\t\t  contents of \"/\" regardless of the value of d.\r\n\r\n\t\t\t
  \ Thanks to Max Bolingbroke for the feature request.\r\n\r\n\tChanged dependency
  on mtl to transformers.\r\n\r\n0.5.1, 2010-11-23:\r\n\tUpdate dependencies to allow
  for mtl 2.0.\r\n\r\n0.5, 2009-12-01:\r\n\tNew functions:\r\n\t\tSystem.FilePath.Glob.globDir
  :: Pattern -> FilePath -> IO [FilePath]\r\n\r\n0.4, 2009-01-31:\r\n\tNew functions:\r\n\t\tSystem.FilePath.Glob.commonDirectory
  :: Pattern -> (FilePath, Pattern)\r\n\r\n\t\tSystem.FilePath.Glob.simplify  :: Pattern
  -> Pattern\r\n\t\tSystem.FilePath.Glob.decompile :: Pattern -> String\r\n\r\n\t\tSystem.FilePath.Glob.tryCompileWith
  :: CompOptions -> String -> Either String Pattern\r\n\t\tSystem.FilePath.Glob.compileWith
  \   :: CompOptions -> String -> Pattern\r\n\t\tSystem.FilePath.Glob.compDefault
  \   :: CompOptions\r\n\t\tSystem.FilePath.Glob.compPosix      :: CompOptions\r\n\r\n\t\tSystem.FilePath.Glob.matchWith
  \    :: MatchOptions -> Pattern -> FilePath -> Bool\r\n\t\tSystem.FilePath.Glob.globDirWith
  \  :: MatchOptions -> [Pattern] -> FilePath -> IO ([[FilePath]], [FilePath])\r\n\t\tSystem.FilePath.Glob.matchDefault
  \ :: MatchOptions\r\n\t\tSystem.FilePath.Glob.matchPosix    :: MatchOptions\r\n\r\n\t\tSystem.FilePath.Glob.Primitives.literal
  \          :: String -> Pattern\r\n\t\tSystem.FilePath.Glob.Primitives.singleWildcard
  \   :: Pattern\r\n\t\tSystem.FilePath.Glob.Primitives.wildcard          :: Pattern\r\n\t\tSystem.FilePath.Glob.Primitives.recursiveWildcard
  :: Pattern\r\n\t\tSystem.FilePath.Glob.Primitives.charRange         :: Bool -> [Either
  Char (Char,Char)] -> Pattern\r\n\t\tSystem.FilePath.Glob.Primitives.numberRange
  \      :: Maybe Integer -> Maybe Integer -> Pattern\r\n\r\n\tRemoved functions:\r\n\t\tSystem.FilePath.Glob.tryCompile
  (no longer needed / superceded by tryCompileWith)\r\n\r\n\tNew instances:\r\n\t\tMonoid
  Pattern\r\n\t\tRead Pattern\r\n\r\n\tChange: \"..\" can now be matched, by patterns
  such as \".*\".\r\n\tChange: globDir, given \"\" as the directory, uses getCurrentDirectory.\r\n\tChange:
  globDir now keeps track of the number of path separators, thus\r\n\t        \"a//*\"
  will return \"a//b\" instead of \"a/b\" as a match result.\r\n\tChange: if character
  ranges begin with ! or ^, these characters are now\r\n\t        considered the start
  of the range: [^-~] is the range ^ through ~,\r\n\t        not the inverse of [-~].\r\n\r\n\tRegression
  fix: handle directories without read permissions even more\r\n\t                properly.\r\n\r\n\tBug
  fix: globDir doesn't convert patterns like \"a./b\" to \"ab\".\r\n\tBug fix: the
  Show instance used to show \"[?]\" as the very different \"?\" (and\r\n\t         a
  few similar cases).\r\n\tBug fix: \"//./\" wasn't getting optimized properly.\r\n\tBug
  fix: \".//a\" matched \"/a\" and not \"a\" or \"./a\".\r\n\tBug fix: \"f**/a\" didn't
  match \"foo/a\".\r\n\tBug fix: \".**/a\" didn't match \".foo/a\".\r\n\tBug fix:
  \".**/a\" matched \"../a\".\r\n\tBug fixes: globDir and match, in general, handled
  patterns starting with\r\n\t           \".*\" or \".**/\" quite differently.\r\n\tBug
  fix: globDir never matched \"foo/\" to the directory \"foo\".\r\n\tBug fix: globDir
  never matched \"foo**/\" to the directory \"foo\".\r\n\tBug fix: show (compile \"[a!b]\")
  resulted in \"[!ab]\".\r\n\r\n0.3.2, 2008-12-20:\r\n\tRegression fix: handle directories
  without read permissions properly.\r\n\r\n\tConvenience for developers: -XTemplateHaskell
  no longer barfs on\r\n\tCompile.hs.\r\n\r\n0.3.1, 2008-10-31:\r\n\tCorrected the
  Cabal-Version field.\r\n\r\n0.3, 2008-10-19:\r\n\tFurther performance improvements
  to globDir.\r\n\tBug fix: handle empty pattern lists correctly in globDir.\r\n\tAdded
  dependency: Win32, for Windows OSs.\r\n\r\n0.2, 2008-10-18:\r\n\tPerformance improvements
  to globDir, no functionality changes.\r\n\tAdded dependency: dlist.\r\n\r\n0.1,
  2008-10-17:\r\n\tInitial release.\r\n\r\n\tFunctions:\r\n\t\tSystem.FilePath.Glob.tryCompile
  :: String -> Either String Pattern\r\n\t\tSystem.FilePath.Glob.compile    :: String
  -> Pattern\r\n\t\tSystem.FilePath.Glob.match      :: Pattern -> FilePath -> Bool\r\n\t\tSystem.FilePath.Glob.globDir
  \   :: [Pattern] -> FilePath -> IO ([[FilePath]], [FilePath])\r\n\r\n\tDependencies:
  base, containers, directory, filepath, mtl.\r\n"
basic-deps:
  base: '>=4 && <5'
  filepath: '>=1.1 && <1.5'
  dlist: '>=0.4 && <1.1'
  containers: <0.7
  transformers: '>=0.2 && <0.6'
  transformers-compat: '>=0.3 && <0.8'
  directory: <1.4
all-versions:
- '0.1'
- '0.2'
- '0.3'
- 0.3.1
- 0.3.2
- '0.4'
- '0.5'
- 0.5.1
- '0.6'
- 0.6.1
- '0.7'
- 0.7.1
- 0.7.2
- 0.7.3
- 0.7.4
- 0.7.5
- 0.7.6
- 0.7.7
- 0.7.8
- 0.7.9
- 0.7.10
- 0.7.11
- 0.7.12
- 0.7.13
- 0.7.14
- 0.8.0
- 0.9.0
- 0.9.1
- 0.9.2
- 0.9.3
- 0.10.0
- 0.10.1
- 0.10.2
author: Matti Niemenmaa
latest: 0.10.2
description-type: text
description: "This is Glob, a Haskell library for globbing, i.e. pattern matching
  file paths\r\nakin to the POSIX glob() function. Haddock documentation is included,
  and can\r\nbe built with the 'cabal haddock' command. Basic usage info is repeated
  below:\r\n\r\nMatching pattern (a String) against filepath (a FilePath):\r\n\r\n\tmatch
  (compile pattern) filepath\r\n\r\nMatching a pattern against all paths in the current
  working directory:\r\n\r\n\tglob pattern\r\n\r\nMatching a pattern against all paths
  in a given directory (a FilePath):\r\n\r\n\tglobDir1 (compile pattern) directorypath\r\n\r\nMatching
  a list of patterns against all paths in a given directory, returning\r\nthe matches
  for each pattern as well as the paths not matched by any of the\r\npatterns:\r\n\r\n\tglobDir
  (map compile patterns) directorypath\r\n"
license-name: BSD-3-Clause
