all-versions:
- 0.2014.1.9
- 0.2014.5.5
- 0.2014.9.12
- 0.2016.12.19
- 0.2017.2.18
- 0.2018.11.4
- 0.2018.11.6
- 0.2019.3.29
- 0.2019.12.13
- 0.2020.4.14
- 0.2022.3.11
- 0.2025.7.23
author: Andreas Abel and Karl Mehltretter
basic-deps:
  MiniAgda: '>=0'
  array: '>=0.3 && <0.6'
  base: '>=4.9 && <5'
  containers: '>=0.3 && <1'
  haskell-src-exts: '>=1.21 && <1.22'
  mtl: '>=2.2.1 && <2.4'
  optparse-applicative: '>=0.16.0.0 && <1'
  pretty: '>=1.0 && <1.2'
  string-qq: '>=0'
  transformers: '>=0'
changelog: |
  CHANGELOG for MiniAgda

  0.2025.7.23   Drop support for GHC 7, tested with GHC 8.0 - 9.12.2.

  0.2022.3.11   Fixed compilation with mtl-2.3-rc3, tested with ghc 9.2.2, added cabal test.

  0.2020.4.14   Tested compilation with ghc 8.10.1.

  0.2019.12.13  Tested compilation with ghc 8.8.1.

  0.2019.3.29   Bumped haskell-src-exts to 1.21.

  0.2018.11.6   Tested compilation with ghc 8.6.2.

  0.2018.11.4   Fixed compilation with ghc 8.4 and 8.6.

  0.2017.02.18  Updated install instructions.

  0.2016.12.19  Travis instance ensures compilation with ghc 7.6 -- 8.0.

  0.2014.9.12

  Internal changes:
  * Removed dependency on IfElse.
  * Use ExceptT instead of ErrorT, depend on mtl > 2.2.
    This also required to switch from fail to throwError
    for catchable errors.
changelog-type: text
description: |
  # MiniAgda

  [![Cabal build][ci-badge]][ci-action]
  [![Hackage][hackage-badge]][hackage]

   [ci-action]:     <https://github.com/andreasabel/MiniAgda/actions>
   [ci-badge]:      <https://github.com/andreasabel/MiniAgda/workflows/Haskell-CI/badge.svg>
   [hackage]:       <https://hackage.haskell.org/package/MiniAgda>
   [hackage-badge]: <https://img.shields.io/hackage/v/MiniAgda.svg?color=informational>

  A prototypical dependently typed languages with sized types and variances.

  ## Installation from Hackage

  Requires `ghc` and `cabal`, for instance via the Haskell Platform or via `ghcup`.
  In a shell, type
  ```
    cabal update
    cabal install MiniAgda
  ```

  ## Installation from Stackage

  MiniAgda is not on Stackage because it depends on a specific version of `haskell-src-exts` rather than the latest version.
  You can install with `stack` from source though, see next section.

  ## Installation from source

  1. Obtain the sources.
     ```
     git clone https://github.com/andreasabel/miniagda
     cd miniagda
     ```

  2. Checkout the desired version (optional):
     If you want to build a released version or a branch rather than the latest `master`, switch to this version/branch.
     ```
     git checkout $REF
     ```
     E.g. `REF = v0.2022.3.11` for version `0.2022.3.11` or `REF = unfold` for branch `unfold`.

  3. Building and running the tests (optional).

     - With `cabal` (requires `ghc` in your PATH):
       ```
       cabal build --enable-tests
       cabal test
       ```
       After building, you can run MiniAgda locally, e.g.:
       ```
       cabal run miniagda -- examples/Gcd/gcd.ma
       ```

     - With `stack`:
       ```
       stack build --stack-yaml=stack-$GHCVER.yaml
       stack test  --stack-yaml=stack-$GHCVER.yaml
       ```
       At the time of writing (2025-07-23), `GHCVER` can be any of `9.12`, `9.10`, `9.8`, `9.6`, and some older ones.

       After building, you can run MiniAgda locally, e.g.:
       ```
       stack run --stack-yaml=stack-9.12.yaml -- examples/Gcd/gcd.ma
       ```
       You can copy `stack-$GHCVER.yaml` for your choice of `GHCVER` into `stack.yaml` and drop the `--stack-yaml` argument from `stack` invocation.


  4. Install.
     - With `cabal` (requires `ghc` in your PATH):
       ```
       cabal install
       ```
     - With `stack`:
       ```
       stack install --stack-yaml=stack-$GHCVER.yaml
       ```

     Note that the respective installation directory should be on your PATH.

  ## Examples

  See directories ``test/succeed/`` and ``examples/``.

  Some examples are commented on the (dormant) [MiniAgda blog](http://www.cse.chalmers.se/~abela/miniagda/index.html).
description-type: markdown
hash: 911c2f7867eccc5348c1f011aaa294e311e400d9707c0b28c6fc769c9e268483
homepage: http://www.cse.chalmers.se/~abela/miniagda/
latest: 0.2025.7.23
license-name: MIT
maintainer: Andreas Abel <andreas.abel@cse.gu.se>
synopsis: A toy dependently typed programming language with type-based termination.
test-bench-deps:
  base: '>=4.11 && <5'
  process: '>=0'
