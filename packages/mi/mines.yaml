all-versions:
- '0.1'
author: Antti Salonen
basic-deps:
  base: '>=0'
  directory: '>=1.0.0.0'
  mtl: '>=1.1.0.0'
  random: '>=1.0.0.0'
changelog: ''
changelog-type: ''
description: "Mines 0.1\n---------\n\nBuilding with Cabal:\n\n$ runhaskell Setup.hs
  configure --user --prefix=$HOME\n$ runhaskell Setup.hs build\n$ runhaskell Setup.hs
  install\n\nUse:\n\nThis part isn't too difficult. Run the program (called mines)
  from wherever\nyou installed it and wait until you get some results. The output
  may give\nsome hints on how well the sweepers are doing. Every 10 generations an
  SVG\nfile is generated in ~/.mines (or Documents and Settings/user/Application \nData/mines
  on Windows) that shows you how a minesweeper moved in the\nprevious generation.\n\nIt
  may take a few hundred generations before they actually get smart. When\nthey're
  smart enough for you, ctrl+c will exit.\n\nConfiguration:\n\nTo configure the program,
  you need to tweak the values in the beginning\nof Mines.hs and recompile. Changing
  settings like the size of the map or\nnumber of minesweepers makes the simulation
  run faster or slower and also\naffects the speed the minesweepers learn. The current
  values work pretty well,\nbut feel free to experiment.\n\nNeural networks:\n\nThe
  minesweepers have a 4-3-3-2 neural network, where the inputs are the \ndirection
  of the minesweeper (x and y) and the vector to the nearest mine\n(x and y). The
  outputs are the angle where to turn (relative to current\nminesweeper direction)
  and the velocity for moving (which is not used\nin the code in this release).\n\nTo
  use the neural networks in NN.hs, you only need the functions newNeuralNet\nand
  updateNeuralNet. newNeuralNet takes a list of layers (such as [4,3,3,2])\nas well
  as minimum and maximum values for weights (floats) as parameters,\nupdateNeuralNet
  takes a weighting function (such as sigmoid or (*1)), list\nof weights as input
  and a neural net as a parameter and returns the list\nof outputs.\n\nGenetic algorithms:\n\nTo
  train the neural networks you need genetic algorithms that can be found\nat GA.hs.
  You can use getWeights in NN.hs to get a list of weights that\nare the genes for
  the genetic algorithms, functions crossOver, mutate, \nmixGenes and pickRoulette
  for choosing the parents and creating the children\nand putWeights to apply the
  new weights to the new networks.\n\nTodo:\n\nThe types for weights in neural networks
  as well as for genes in genetic\nalgorithms are hard coded at the moment (Float).
  Making that application\ndependent would be good.\n\nMore info:\n\nFor questions,
  you can reach me at ajsalonen@gmail.com. I've written about\nthe program in my blog,
  you can find the text at \nhttp://codeflow.wordpress.com/2008/08/03/about-ai-and-neural-networks/\nFeel
  free to improve the code.\n\nThe minesweepers were inspired by an article by Mat
  Buckland on neural\nnetworks, available at http://www.ai-junkie.com/ann/evolved/nnt1.html\n\nLicensed
  with MIT, see LICENSE for details. Copyright 2008 Antti Salonen.\n\n"
description-type: text
hash: 6c9be9d76e5b189ff783a3bef889a00d463731bc303f137ccaf5b16aeb796b5c
homepage: http://finder.homelinux.org/haskell/Mines
latest: '0.1'
license-name: LicenseRef-OtherLicense
maintainer: ajsalonen@gmail.com
synopsis: Minesweeper simulation using neural networks
test-bench-deps: {}
