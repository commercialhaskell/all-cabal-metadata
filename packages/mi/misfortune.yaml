all-versions:
- '0.1'
- 0.1.1.1
- 0.1.1.2
- 0.1.2
- 0.1.2.1
author: James Cook <mokus@deepbondi.net>
basic-deps:
  base: '>=3 && <5'
  bytestring: '>=0'
  cereal: '>=0'
  directory: '>=0'
  filepath: '>=0'
  knob: '>=0'
  monad-loops: '>=0'
  random: '>=0'
  random-fu: '>=0.3'
  regex-base: '>=0'
  regex-pcre: '>=0'
  text: '>=0'
  utf8-string: '>=0'
  vector: '>=0'
changelog: ''
changelog-type: ''
description: "misfortune\n===========\n\nThis is a fortune-mod clone.  In addition
  to the features generally expected of a `fortune` program, this can be used as a
  Haskell library (`import Data.Fortune`) and also supports UTF-8 fortune files, configurable
  search paths, automatic merging of fortune databases with the same name (so you
  can have a local fortunes folder that just adds to existing fortune databases),
  filtering fortunes by line lengths, and a \"print fortune matching regex\" mode
  (instead of just \"print all fortunes matching regex\" mode).\n\nUsage\n------\n\nMost
  of the command-line flags from `fortune` work with `misfortune` as well.  To just
  print a fortune, run:\n\n    misfortune\n\nTo index a new fortune file (or update
  the index on an existing one), run:\n\n    misfortune-strfile path/to/file\n\nTo
  use the fortune API in your Haskell programs:\n\n    import Data.Fortune\n    import
  qualified Data.Text as T\n    \n    main = do\n        f <- openFortuneFile \"pangrams\"
  '%' True\n        \n        appendFortune f (T.pack \"The quick brown fox jumps
  over the lazy dog.\")\n        appendFortune f (T.pack \"Quick blowing zephyrs vex
  daft Jim.\")\n        \n        closeFortuneFile f\n        \n        putStrLn =<<
  randomFortune [\"pangrams\"]\n\nThis example will create or append to a file \"pangrams\"
  in the working directory, and create or update the corresponding index file \"pangrams.dat\".
  \ It then closes that file and requests a random fortune from all databases named
  \"pangrams\" in the search path - so it will either print one of the two just written
  or one found in another \"pangrams\" file.  Every eligible fortune is equally likely.\n\nInstallation\n-------------\n\nGet
  the current release from Hackage:\n\n    cabal install misfortune\n\nOr build the
  latest version from git:\n\n    git clone https://github.com/ncfavier/misfortune\n
  \   cd misfortune\n    cabal install\n\n"
description-type: markdown
hash: e9235f160eb1c7fa9e0d0a71cfa9b2fb2e81e26724fcaca0a8671a7ea2a868d9
homepage: https://github.com/ncfavier/misfortune
latest: 0.1.2.1
license-name: MIT
maintainer: NaÃ¯m Favier <n@monade.li>
synopsis: fortune-mod clone
test-bench-deps: {}
