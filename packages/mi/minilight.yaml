all-versions:
- 0.1.0
- 0.1.1
- 0.2.0
- 0.3.0
- 0.4.0
- 0.4.1
- 0.4.2
- 0.4.3
- 0.4.4
- 0.5.0
author: myuon
basic-deps:
  FontyFruity: '>=0.5.3 && <0.6'
  aeson: '>=1.4.2 && <1.5'
  aeson-diff: '>=1.1.0 && <1.2'
  base: '>=4 && <5'
  caster: '>=0.0.2.0 && <0.1'
  containers: '>=0.6.0 && <0.7'
  exceptions: '>=0.10.1 && <0.11'
  fsnotify: '>=0.3.0 && <0.4'
  hashable: '>=1.3.0 && <1.4'
  hashtables: '>=1.2.3 && <1.3'
  lens: '>=4.19 && <4.20'
  linear: '>=1.20.8 && <1.21'
  microlens: '>=0'
  minilight: '>=0'
  mtl: '>=2.2.2 && <2.3'
  mwc-random: '>=0.14.0 && <0.15'
  scientific: '>=0.3.6 && <0.4'
  sdl2: '>=2.4.0 && <2.5'
  sdl2-gfx: '>=0.2 && <0.3'
  sdl2-image: '>=2.0.0 && <2.1'
  sdl2-ttf: '>=2.1.0 && <2.2'
  template-haskell: '>=2.14.0 && <2.16'
  text: '>=1.2.3 && <1.3'
  transformers: '>=0.5.6 && <0.6'
  trifecta: '>=2.1 && <2.2'
  unordered-containers: '>=0.2.10 && <0.3'
  uuid: '>=1.3.12 && <1.4'
  vector: '>=0.12.0 && <0.13'
  yaml: '>=0.11.0 && <0.12'
changelog: |
  # Revision history for minilight

  ## 0.5.0 -- 2020-05-06

  * `runMiniloop` with initial state in monad

  ## 0.4.4 -- 2020-05-05

  * Add `registerComponent` and `extend9tiles` functions

  ## 0.4.3 -- 2020-03-11

  * Support GHC 8.8

  ## 0.4.2 -- 2020-01-19

  * Other Changes:
      * Fix sdl2 version to be 2.4.X.X (which matches libsdl2-dev:2.0.5)

  ## 0.4 -- 2019-06-01

  * Features:
      * Hooks feature in Component Loader
      * Improve MessageEngine component
      * Improve Loader functions

  ## 0.3 -- 2019-05-05

  * New features:
      * Hot Config Replacement
      * Stdout Logger

  ## 0.2 -- 2019-04-23

  * New features:
      * Re-structured modules
      * Emit signals and signal handlers

  ## 0.1.1 -- 2019-04-14

  * Fixes:
      * Cache strategy
      * Button component and button-counter example now works correctly.

  ## 0.1.0 -- 2019-04-14

  * First version.
  * New features:
      * Mainloop management
      * Pre-defined Components
      * Config loader
      * Some examples
changelog-type: markdown
description: |
  # minilight

  [![CircleCI](https://circleci.com/gh/myuon/minilight.svg?style=svg)](https://circleci.com/gh/myuon/minilight) [![Hackage](http://img.shields.io/hackage/v/minilight.svg)](https://hackage.haskell.org/package/minilight) [![MIT license](http://img.shields.io/badge/license-MIT-blue.svg)](LICENSE)

  A simple but powerful graphics library.

  *NB: This library is fairly unstable and highly experimental.*

  ## Build

  You first need to install [sdl2](https://www.libsdl.org/index.php) packages.

  For Ubuntu 18.04:

  ```sh
  ~$ sudo apt install -y libsdl2-dev libsdl2-image-dev libsdl2-ttf-dev libsdl2-gfx-dev
  ```

  For ghc-8.8, use a version `>= 0.4.3`

  ## Tutorial

  Create a new project. Assume that you have the `resource` directory under the project root, which contains the resource stuff.

  Here is an example, specifying `resources/app.yml` for the configuration file and `resources` for the watching directory (dynamic hot reloading).

  ```hs
  import Control.Monad
  import Data.Component.Resolver (resolver)
  import MiniLight

  main :: IO ()
  main = runLightT $ do
    runMiniloop
      ( defConfig { appConfigFile        = Just "resources/app.yml"
                  , hotConfigReplacement = Just "resources"
                  , componentResolver    = resolver
                  }
      )
      ()
      return
  ```

  In `resources/app.yml`, you can write your application configuration.

  ```yaml
  _vars:
    window:
      width: 800
      height: 600
  app:
    - name: layer
      properties:
        image: resources/background.png
        position:
          x: 0
          y: 0
    - name: message-layer
      properties:
        window:
          image: resources/window-base.png
          position:
            x: 0
            y: ${${var:window.height} - ${ref:..size.height}}
          size:
            width: ${var:window.width}
            height: 150
        next:
          image: resources/text-pause.png
          division:
            x: 1
            y: 6
          interval: 40
        engine:
          messages: This is a message.
          color: [255,255,255,255]
          font:
            family: IPAGothic
            size: 22
  ```

  For the configuration syntax, see [MiniLight.Loader](https://hackage.haskell.org/package/minilight/docs/MiniLight-Loader.html).

  For the pre-defined components, see the modules under `Data.Component`.

  ## Examples

  See [examples](https://github.com/myuon/minilight/tree/master/examples)
description-type: markdown
hash: 07bbb87829d8a74b2e75e775ae8d4af87ed6082c1c53053faf62e6e59485cd76
homepage: ''
latest: 0.5.0
license-name: MIT
maintainer: ioi.joi.koi.loi@gmail.com
synopsis: A SDL2-based graphics library, batteries-included.
test-bench-deps:
  aeson: '>=0'
  base: '>=0'
  minilight: '>=0'
  tasty: '>=0'
  tasty-hspec: '>=0'
  trifecta: '>=0'
  vector: '>=0'
  yaml: '>=0'
