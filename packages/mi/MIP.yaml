all-versions:
- 0.1.0.0
- 0.1.1.0
- 0.1.2.0
author: Masahiro Sakai
basic-deps:
  OptDir: '>=0'
  base: '>=4.7 && <5'
  bytestring: '>=0'
  bytestring-encoding: '>=0'
  case-insensitive: '>=0'
  containers: '>=0.5.0'
  data-default-class: '>=0'
  extended-reals: '>=0.1 && <1.0'
  filepath: '>=0'
  intern: '>=0.9.1.2 && <1.0.0.0'
  lattices: '>=0'
  megaparsec: '>=5 && <10'
  mtl: '>=2.1.2 && <2.4'
  process: '>=1.1.0.2'
  scientific: '>=0'
  stm: '>=2.3'
  temporary: '>=1.2'
  text: '>=1.1.0.0'
  xml-conduit: '>=0'
  zlib: '>=0'
changelog: |
  # Changelog for MIP

  ## Unreleased changes

  ## 0.1.2.0

  * support mtl-2.3

  ## 0.1.1.0

  * re-export `Default` class from `Numeric.Optimization.MIP`.
  * fix to work with recent version of CBC
  * generalize type of `parseLPString` and `parseMPSString`

  ## 0.1.0.0

  * Separated from toysolver package
    https://github.com/msakai/toysolver/tree/7096038ece0a5f860a951567689ef9a03ac0355d
changelog-type: markdown
description: |
  # MIP

  [![Hackage](https://img.shields.io/hackage/v/MIP.svg)](https://hackage.haskell.org/package/MIP)
  [![Hackage Deps](https://img.shields.io/hackage-deps/v/MIP.svg)](https://packdeps.haskellers.com/feed?needle=MIP)
  [![License](https://img.shields.io/badge/License-BSD%203--Clause-blue.svg)](https://opensource.org/licenses/BSD-3-Clause)

  Library for using Mixed Integer Programming (MIP) in Haskell.
  This library contains functions like:

  * Reading / Writing MIP problem files (e.g. `LP` file or `MPS` file),
  * Invokling MIP solvers like Gurobi, CPLEX, CBC, GLPK, lp_solve,
  * Reading solution files of those solvers.
description-type: markdown
hash: 3a00b3bf4f298625b1fdb18bb4205e87b6eec7f3f9a209eb1dbb4d69166a0c83
homepage: https://github.com/msakai/haskell-MIP#readme
latest: 0.1.2.0
license-name: BSD-3-Clause
maintainer: masahiro.sakai@gmail.com
synopsis: Library for using Mixed Integer Programming (MIP)
test-bench-deps:
  MIP: '>=0'
  base: '>=4.7 && <5'
  containers: '>=0.5.0'
  data-default-class: '>=0'
  lattices: '>=0'
  tasty: '>=0.10.1'
  tasty-hunit: '>=0.9 && <0.11'
  tasty-quickcheck: '>=0.8 && <0.12'
  tasty-th: '>=0'
