all-versions:
- 0.1.2
- 0.1.3
- 0.1.4
author: Roman SmrÅ¾
basic-deps:
  Glob: ^>=0.10.2
  HsYAML: ^>=0.2
  base: ^>=4.15 || ^>=4.16 || ^>=4.17 || ^>=4.18 || ^>=4.19 || ^>=4.20 || ^>=4.21
  bytestring: ^>=0.10 || ^>=0.11 || ^>=0.12
  containers: ^>=0.6 || ^>=0.7
  directory: ^>=1.3
  exceptions: ^>=0.10
  filepath: ^>=1.4 || ^>=1.5
  hinotify: ^>=0.4
  mtl: ^>=2.2 || ^>=2.3
  parser-combinators: ^>=1.3
  process: ^>=1.6
  stm: ^>=2.5
  template-haskell: ^>=2.17 || ^>=2.18 || ^>=2.19 || ^>=2.20 || ^>=2.21 || ^>=2.22
    || ^>=2.23
  temporary: ^>=1.3
  text: ^>=1.2 || ^>=2.0 || ^>=2.1
  th-compat: ^>=0.1
  unix: ^>=2.7.3 || ^>=2.8.6
changelog: |
  # Revision history for MiniCI

  ## 0.1.4 -- 2025-02-04

  * Fix invocation of `minici run` without arguments
  * Fix that empty temporary dir was not deleted in some cases
  * Add explicit `--since-upstream` option for the `run` command

  ## 0.1.3 -- 2025-01-25

  * Run jobs based on configuration in associated commit
  * Configurable number of concurrently running jobs (using `-j` option)
  * Concurrently run jobs for multiple commits
  * Properly cancel and clean up jobs on user interrupt
  * Added `--new-commits-on` and `--new-tags` options for `run` command to dynamically generate jobs based on branch/tags changes
  * Support for GHC up to 9.12

  ## 0.1.2 -- 2024-07-30

  * Explicit run command
  * Support for GHC up to 9.10

  ## 0.1.1 -- 2023-04-25

  * Support for GHC 9.2
  * Added `-V` command-line switch to show version.

  ## 0.1.0 -- 2023-02-04

  * First version.
changelog-type: markdown
description: |
  MiniCI
  ======

  MiniCI runs jobs defined in the `minici.yaml` file in the root of the project
  (on the same level as the `.git` directory). With that, `minici` invocation can
  execute the jobs for local commits that are not yet in upstream (remote) branch
  or for any manually given commit range.


  Job definition
  --------------

  The top-level elements of the YAML file are `job <name>` defining steps to
  perform the job and potentially listing artifacts produced or required.

  Example:

  ```
  job build:
    shell:
      - make
    artifact bin:
      path: build/example

  job test:
    uses:
      - build.bin
    shell:
      - ./build/example test
  ```

  Each job is a map with the following attributes:

  `shell`
  : List of shell commands to perform the job

  `artifact <name>` (optional)
  : Defines artifact `<name>` produced by this job. Is itself defined as a dictionary.

  `artifact <name>.path`
  : Path to the produced artifact file, relative to the root of the project.

  `uses` (optional)
  : List of artifact required for this job, in the form `<job>.<artifact>`.


  Usage
  -----

  To run jobs for a git commit range:
  ```
  minici run <commit>..<commit>
  ```

  or:
  ```
  minici run --range=<commit>..<commit>
  ```

  To run jobs for commits that are in local `<branch>`, but not yet in its upstream:
  ```
  minici run <branch>
  ```
  or:
  ```
  minici run --since-upstream=<branch>
  ```

  For current branch, the name can be omitted:
  ```
  minici run
  ```

  To watch changes on given `<branch>` and run jobs for each new commit:
  ```
  minici run --new-commits-on=<branch>
  ```

  To watch new tags and run jobs for each tag matching given pattern:
  ```
  minici run --new-tags=<pattern>
  ```

  The above options `--range`, `--since-upstream`, etc can be arbitrarily combined.
description-type: markdown
hash: 1657ad9f875fb31c1f1d9dbbe72b5168977821d83822d36b57acc7ef77128453
homepage: https://erebosprotocol.net/minici
latest: 0.1.4
license-name: GPL-3.0-only
maintainer: roman.smrz@seznam.cz
synopsis: Minimalist CI framework to run checks on local machine
test-bench-deps: {}
