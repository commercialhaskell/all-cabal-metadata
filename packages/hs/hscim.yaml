all-versions:
- 0.3.4
- 0.3.5
- 0.3.6
- 0.4.0
- 0.4.0.1
- 0.4.0.2
author: Wire Swiss GmbH
basic-deps:
  aeson: '>=2.1.2 && <2.2'
  aeson-qq: '>=0.8.4 && <0.9'
  attoparsec: '>=0.14.4 && <0.15'
  base: '>=4.17.2 && <4.18'
  bytestring: '>=0.10.4 && <0.12'
  case-insensitive: '>=1.2.1 && <1.3'
  email-validate: '>=2.3.2 && <2.4'
  hashable: '>=1.4.3 && <1.5'
  hscim: '>=0'
  hspec: '>=2.10.10 && <2.11'
  hspec-expectations: '>=0.8.2 && <0.9'
  hspec-wai: '>=0.11.1 && <0.12'
  http-api-data: '>=0.5 && <0.6'
  http-media: '>=0.8.1 && <0.9'
  http-types: '>=0.12.3 && <0.13'
  list-t: '>=1.0.5 && <1.1'
  microlens: '>=0.4.13 && <0.5'
  mmorph: '>=1.2.0 && <1.3'
  mtl: '>=2.2.2 && <2.3'
  network-uri: '>=2.6.4 && <2.7'
  retry: '>=0.9.3 && <0.10'
  scientific: '>=0.3.7 && <0.4'
  servant: '>=0.19.1 && <0.20'
  servant-client: '>=0.19 && <0.20'
  servant-client-core: '>=0.19 && <0.20'
  servant-server: '>=0.19.2 && <0.20'
  stm: '>=2.5.1 && <2.6'
  stm-containers: '>=1.2.0 && <1.3'
  string-conversions: '>=0.4.0 && <0.5'
  template-haskell: '>=2.19.0 && <2.20'
  text: '>=2.0.2 && <2.1'
  time: '>=1.12.2 && <1.13'
  uuid: '>=1.3.15 && <1.4'
  wai: '>=3.2.3 && <3.3'
  wai-extra: '>=3.1.13 && <3.2'
  warp: '>=3.3.30 && <3.4'
changelog: |
  0.4.0:
    - update dependencies

  0.3.6:
    - fix serialization: json attributes in scim are case-insensitive

  0.3.4:
    - initial version
changelog-type: text
description: |
  # System for Cross-domain Identity Management (SCIM)

  This implements part of the [SCIM standard](http://www.simplecloud.info)
  for identity management. The parts that are currently supported are:

   * User schema version 2.0

  ## Building

  This project uses stack. You can install the sample executable with

  ```sh
  stack install
  ```

  ## Developing and testing

  This library only implements the schemas and endpoints defined by the
  SCIM standard. You will need to implement the actual storage by giving
  an instance for the `Persistence` class.

  There's a simple in-memory implementation of this class, which is used
  for tests. You can run the tests with the standard stack interface:

  ```sh
  stack test
  ```

  # Contributing

  Before submitting a PR, make sure to install [ormolu](https://github.com/tweag/ormolu)
  by doing `stack install ormolu` (we pin the version in our `stack.yaml` file)
  and run `make format`.
description-type: markdown
hash: b1b0cb4401badb3bb503ca8a2f86242514e5f05686ba8efbb4fb371f5a007cb8
homepage: https://github.com/wireapp/wire-server/libs/hscim/README.md
latest: 0.4.0.2
license-name: AGPL-3.0-only
maintainer: Wire Swiss GmbH <backend@wire.com>
synopsis: hscim json schema and server implementation
test-bench-deps:
  aeson: '>=0'
  attoparsec: '>=0'
  base: '>=0'
  bytestring: '>=0'
  email-validate: '>=0'
  hedgehog: '>=0'
  hscim: '>=0'
  hspec: '>=0'
  hspec-expectations: '>=0'
  hspec-wai: '>=0'
  http-types: '>=0'
  hw-hspec-hedgehog: '>=0'
  indexed-traversable: '>=0'
  microlens: '>=0'
  network-uri: '>=0'
  servant: '>=0'
  servant-server: '>=0'
  stm-containers: '>=0'
  text: '>=0'
  wai: '>=0'
  wai-extra: '>=0'
