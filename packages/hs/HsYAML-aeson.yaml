all-versions:
- 0.1.0.0
- 0.2.0.0
- 0.2.0.1
- 0.2.0.2
author: Herbert Valerio Riedel
basic-deps:
  HsYAML: ^>=0.2.0
  aeson: ^>=1.4.0.0 || ^>=1.5.0.0 || ^>=2.0.0.0 || ^>=2.1.0.0 || ^>=2.2.0.0
  base: '>=4.9 && <5'
  bytestring: '>=0.10.8.1 && <0.13'
  containers: '>=0.5.7.1 && <1'
  mtl: ^>=2.2.1 || ^>=2.3.1
  scientific: ^>=0.3.6.2
  text: ^>=1.2.3 || ^>=2.0 || ^>=2.1
  unordered-containers: ^>=0.2
  vector: ^>=0.12.0.2 || ^>=0.13.0.0
changelog: |
  ## 0.2.0.2

  _2025-03-11, Andreas Abel_

  * Drop support for GHC 7.
  * Support latest dependencies.
  * Tested with GHC 8.0 - 9.12.1.

  ## 0.2.0.1

  _2021-11-07, Andreas Abel_

  * Allow `aeson-2.0` and `bytestring-0.11`.
  * Build tested with GHC 7.4 -- 9.0.

  ## 0.2.0.0

  _2019-09-22, Herbert Valerio Riedel_

  This release incorporates the work from [Vijay Tadikamalla's GSOC 2019 Project](https://vijayphoenix.github.io/blog/gsoc-the-conclusion/).

  * **Breaking change**: The result types of `decode1`, `decode1'`, `decodeValue`, and `decodeValue'` have been changed from `Either String _` to `Either (Pos,String) _` to mirror the error-reporting change in the `HsYAML-0.2` API
  * New functions `encode1`, `encode1Strict`, `encodeValue`, and `encodeValue'` for serializing JSON Values as YAML documents
  * New convenience function `decode1Strict`
  * New (orphan) `instance ToYAML Data.Aeson.Value`

  ----

  ## 0.1.0.0

  * First release. Released on an unsuspecting world.
changelog-type: markdown
description: |-
  The [YAML 1.2](https://yaml.org/spec/1.2/spec.html) format provides
  a much richer data-model and feature-set
  than the [JavaScript Object Notation (JSON)](https://tools.ietf.org/html/rfc7159) format.
  However, sometimes it's desirable to ignore the extra capabilities
  and treat YAML as if it was merely a more convenient markup format
  for humans to write JSON data. To this end this module provides a
  compatibility layer atop [HsYAML](https://hackage.haskell.org/package/HsYAML)
  which allows decoding YAML documents in the more limited JSON data-model while also providing
  convenience by reusing [aeson](https://hackage.haskell.org/package/aeson)'s
  'FromJSON' instances for decoding the YAML data into native Haskell data types.
description-type: haddock
hash: cd96cea212ca2b15c3cef6a3e0b53c23a93bb6d098e6e47d6d98c53be986dc92
homepage: ''
latest: 0.2.0.2
license-name: GPL-2.0-or-later
maintainer: Andreas Abel
synopsis: JSON to YAML Adapter
test-bench-deps: {}
