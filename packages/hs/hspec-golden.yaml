all-versions:
- 0.1.0.0
- 0.1.0.1
- 0.1.0.2
- 0.1.0.3
- 0.2.0.0
- 0.2.0.1
- 0.2.1.0
- 0.2.2.0
author: Stack Builders
basic-deps:
  ansi-terminal: '>=1.0 && <2.0'
  base: '>=4.6 && <5'
  directory: '>=1.3.6 && <1.4'
  filepath: '>=1.0 && <2.0'
  hspec-core: '>=2.10 && <3.0'
  hspec-golden: '>=0'
  optparse-applicative: '>=0.18.1 && <0.20'
changelog: |
  # Changelog for hspec-golden
  ## 0.2.2.0
  #### Add
  * `golden` helper to write tests

  ## 0.2.1.1
  #### Add
  * Add colors to hspec-golden CLI tool.

  ## 0.2.1.0
  #### Add
  * Instance for IO Golden type. Kudos to @dbalseiro

  ## 0.2.0.1
  #### Add
  * Update docs.

  ## 0.2.0.0
  #### Add
  * More flexible file locations
  * Contributed by: @bitc and @christianheyn

  ## 0.1.0.2
  #### Add
  * Lowerbound for `hspec-core` in `hspec-golden` library

  ## 0.1.0.2
  #### Add
  * CLI updates tests recursively #19
  * Allow first execution to fail #16

  ## 0.1.0.1
  #### Add
  * CLI changed to work with optparse-applicative.

  ## 0.1.0.0
  #### Add
  * CLI to update `actual` files to `golden`
  * Basic functionality to have Golden tests in `hspec`.
  * `Golden str` type to write your own golden tests for the kind of
  type that you need and a variable output folder.
  * `defaultGolden` helper to create golden tests when your results are simple `String`s.
changelog-type: markdown
description: "# hspec-golden\n[![Build and Test](https://github.com/stackbuilders/hspec-golden/actions/workflows/build-and-test.yml/badge.svg?branch=main)](https://github.com/stackbuilders/hspec-golden/actions/workflows/build-and-test.yml)
  [![Hackage](https://img.shields.io/hackage/v/hspec-golden.svg)](http://hackage.haskell.org/package/hspec-golden)\n\n##
  Description\nGolden tests store the expected output in a separated file. Each time
  a golden test\nis executed the output of the subject under test (SUT) is compared
  with the\nexpected output. If the output of the SUT changes then the test will fail
  until\nthe expected output is updated.\n\n`hspec-golden` allows you to write golden
  tests using the popular `hspec`.\n\n## Usage\n\nYou can write golden tests using
  `defaultGolden` helper:\n\n```haskell\ndescribe \"myFunc\" $\n  it \"generates the
  right output with the right params\" $\n     let output = show $ myFunc params\n
  \      in defaultGolden \"myFunc\" output\n```\n\nThe first parameter of `defaultGolden`
  is the golden file name. I recommend you to use\n`show` and `'functionName` (enable
  `TemplateHaskellQuotes` for the quote) to\nalways have a unique name for your file.
  Example: `show 'myFunc == MyModule.myFunc`.\nAlthough, you can name it as you like.\n\nYou
  can write golden tests using `golden` helper:\n\n```haskell\ndescribe \"myFunc\"
  $\n  golden \"generates the right output with the right params\" $\n     let output
  = show $ myFunc params\n       in return output\n```\n\nIn case your output isn't
  a `String` you can define your own `Golden` test\nusing the `Golden` data type:\n\n```haskell\n{-#
  LANGUAGE TemplateHaskellQuotes #-}\n\nimport           Test.Hspec\nimport           Test.Hspec.Golden\nimport
  \          Data.Text (Text)\nimport qualified Data.Text.IO as T\n\nmyGoldenTest
  :: String -> Text -> Golden Text\nmyGoldenTest name actualOutput =\n  Golden {\n
  \   output = actualOutput,\n    encodePretty = prettyText,\n    writeToFile = T.writeFile,\n
  \   readFromFile = T.readFile,\n    goldenFile = name,\n    actualFile = Just (name
  </> \"-actual\"),\n    failFirstTime = False\n  }\n\nspec :: Spec\nspec =\n  describe
  \"myTextFunc\" $\n    it \"generates the right output with the right params\" $\n
  \      let textOutput = myTextFunc params\n         in myGoldenTest (show 'myTextFunc)
  textOutput\n```\n\n## Install CLI\n\nYou can install the `hspec-golden` command
  line interface (CLI) with `stack`:\n\n```\n$ stack install hspec-golden\n```\n\nor
  `cabal`:\n\n\n```\n$ cabal install hspec-golden\n```\n\nThe CLI is called `hgold`:\n\n```\n$
  hgold -h\n\nUpdate your golden files\n\nUsage: hgold [-u|--update [DIR]] [-v|--version]\n\nAvailable
  options:\n  -u,--update [DIR]        The testing directory where you're dumping
  your\n                           results. (default: \".golden\")\n  -v,--version
  \            Show version\n  -h,--help                Show this help text\n```\n\nUpdate
  the golden tests under `.golden` directory:\n\n```\n$ hgold\n```\n\nUpdate the golden
  tests under `.myGoldenTest` directory:\n\n```\n$ hgold -u .myGoldenTest\n```\n\n##
  Contributors ✨\n\nThanks goes to these wonderful people ([emoji key](https://allcontributors.org/docs/en/emoji-key)):\n\n<!--
  ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section -->\n<!-- prettier-ignore-start
  -->\n<!-- markdownlint-disable -->\n<table>\n  <tbody>\n    <tr>\n      <td align=\"center\"
  valign=\"top\" width=\"14.28%\"><a href=\"https://cristhianmotoche.github.io/\"><img
  src=\"https://avatars.githubusercontent.com/u/8370088?v=4?s=100\" width=\"100px;\"
  alt=\"Cristhian Motoche\"/><br /><sub><b>Cristhian Motoche</b></sub></a><br /><a
  href=\"https://github.com/stackbuilders/hspec-golden/commits?author=CristhianMotoche\"
  title=\"Code\">\U0001F4BB</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a
  href=\"https://www.christian-wuensche.com/\"><img src=\"https://avatars.githubusercontent.com/u/3807237?v=4?s=100\"
  width=\"100px;\" alt=\"Christian Wünsche (ehem Heyn)\"/><br /><sub><b>Christian
  Wünsche (ehem Heyn)</b></sub></a><br /><a href=\"https://github.com/stackbuilders/hspec-golden/commits?author=christianwish\"
  title=\"Code\">\U0001F4BB</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a
  href=\"https://github.com/bitc\"><img src=\"https://avatars.githubusercontent.com/u/996487?v=4?s=100\"
  width=\"100px;\" alt=\"Bit Connor\"/><br /><sub><b>Bit Connor</b></sub></a><br /><a
  href=\"https://github.com/stackbuilders/hspec-golden/commits?author=bitc\" title=\"Code\">\U0001F4BB</a></td>\n
  \     <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://dbalseiro.github.io/\"><img
  src=\"https://avatars.githubusercontent.com/u/2053849?v=4?s=100\" width=\"100px;\"
  alt=\"Diego Balseiro\"/><br /><sub><b>Diego Balseiro</b></sub></a><br /><a href=\"https://github.com/stackbuilders/hspec-golden/commits?author=dbalseiro\"
  title=\"Code\">\U0001F4BB</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a
  href=\"https://github.com/Jagl257\"><img src=\"https://avatars.githubusercontent.com/u/27145248?v=4?s=100\"
  width=\"100px;\" alt=\"Jorge Guerra Landázuri\"/><br /><sub><b>Jorge Guerra Landázuri</b></sub></a><br
  /><a href=\"https://github.com/stackbuilders/hspec-golden/commits?author=Jagl257\"
  title=\"Code\">\U0001F4BB</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a
  href=\"https://github.com/ChickenProp\"><img src=\"https://avatars.githubusercontent.com/u/57271?v=4?s=100\"
  width=\"100px;\" alt=\"Phil Hazelden\"/><br /><sub><b>Phil Hazelden</b></sub></a><br
  /><a href=\"https://github.com/stackbuilders/hspec-golden/commits?author=ChickenProp\"
  title=\"Code\">\U0001F4BB</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a
  href=\"http://alexvieth.wordpress.com/\"><img src=\"https://avatars.githubusercontent.com/u/1420272?v=4?s=100\"
  width=\"100px;\" alt=\"Alexander Vieth\"/><br /><sub><b>Alexander Vieth</b></sub></a><br
  /><a href=\"https://github.com/stackbuilders/hspec-golden/commits?author=avieth\"
  title=\"Code\">\U0001F4BB</a></td>\n    </tr>\n    <tr>\n      <td align=\"center\"
  valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/guibou\"><img src=\"https://avatars.githubusercontent.com/u/9705357?v=4?s=100\"
  width=\"100px;\" alt=\"Guillaume Bouchard\"/><br /><sub><b>Guillaume Bouchard</b></sub></a><br
  /><a href=\"https://github.com/stackbuilders/hspec-golden/commits?author=guibou\"
  title=\"Code\">\U0001F4BB</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a
  href=\"https://github.com/fefi95\"><img src=\"https://avatars.githubusercontent.com/u/12057338?v=4?s=100\"
  width=\"100px;\" alt=\"Stefani Castellanos\"/><br /><sub><b>Stefani Castellanos</b></sub></a><br
  /><a href=\"https://github.com/stackbuilders/hspec-golden/commits?author=fefi95\"
  title=\"Code\">\U0001F4BB</a></td>\n    </tr>\n  </tbody>\n  <tfoot>\n    <tr>\n
  \     <td align=\"center\" size=\"13px\" colspan=\"7\">\n        <img src=\"https://raw.githubusercontent.com/all-contributors/all-contributors-cli/1b8533af435da9854653492b1327a23a4dbd0a10/assets/logo-small.svg\">\n
  \         <a href=\"https://all-contributors.js.org/docs/en/bot/usage\">Add your
  contributions</a>\n        </img>\n      </td>\n    </tr>\n  </tfoot>\n</table>\n\n<!--
  markdownlint-restore -->\n<!-- prettier-ignore-end -->\n\n<!-- ALL-CONTRIBUTORS-LIST:END
  -->\n\nThis project follows the [all-contributors](https://github.com/all-contributors/all-contributors)
  specification. Contributions of any kind welcome!\n\n## License\n\nMIT, see the
  [LICENSE file](./LICENSE).\n\n## Contributing\n\nDo you want to contribute to this
  project? Please take a look at our [contributing guideline](/docs/CONTRIBUTING.md)
  to know how you can help us build it.\n\n---\n<img src=\"https://www.stackbuilders.com/media/images/Sb-supports.original.png\"
  alt=\"Stack Builders\" width=\"50%\"></img>\n[Check out our libraries](https://github.com/stackbuilders/)
  | [Join our team](https://www.stackbuilders.com/join-us/)\n"
description-type: markdown
hash: 8ab5c0e2aaac43a9ef2eb933da7d656e99973508a415bb849f4ab180b177c11e
homepage: https://github.com/stackbuilders/hspec-golden#readme
latest: 0.2.2.0
license-name: MIT
maintainer: Cristhian Motoche <cmotoche@stackbuilders.com>
synopsis: Golden tests for hspec
test-bench-deps:
  base: '>=4.6 && <5'
  directory: '>=0'
  hspec: '>=0'
  hspec-core: '>=0'
  hspec-golden: '>=0'
  silently: '>=0'
