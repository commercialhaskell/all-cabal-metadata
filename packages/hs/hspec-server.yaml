all-versions:
- 0.1.0.0
- 0.2.0
- 0.2.1
- 0.2.2
- 0.3.0
- 0.3.1
- 0.3.2
- 0.4.0
- 0.4.1
author: Junji Hashimoto
basic-deps:
  HUnit: '>=0'
  base: '>=4.6 && <5'
  containers: '>=0'
  hspec: '>=2'
  hspec-core: '>=2'
  hspec-expectations: '>=0'
  process: '>=0'
  regex-posix: '>=0'
  temporary: '>=0'
  transformers: '>=0'
changelog: |
  ## 0.4.1

  * Reduce time used by stSetup

  ## 0.4.0

  * Add NetworkStatus and function for checking network-reachablity
  * Change ServerStatus-Type to Data.Set ServerStatus' and Remove Sets-type-class
  * Change status data-constructors like Running to lower case functions like running for removing Sets-type-class

  ## 0.3.2

  * Support for docker
changelog-type: markdown
description: |
  # Hspec-Server: Test Framework like ServerSpec for Haskell

  [![Hackage version](https://img.shields.io/hackage/v/hspec-server.svg?style=flat)](https://hackage.haskell.org/package/hspec-server)  [![Build Status](https://travis-ci.org/junjihashimoto/hspec-server.png?branch=master)](https://travis-ci.org/junjihashimoto/hspec-server) [![Coverage Status](https://coveralls.io/repos/junjihashimoto/hspec-server/badge.png)](https://coveralls.io/r/junjihashimoto/hspec-server)

  Hspec-Server is test framework for checking server's status.
  It is inspired by the Ruby library ServerSpec.

  ## Getting started

  Install this from Hackage.

      cabal update && cabal install hspec-server

  ## Usage

  Put "with(ServerType)" after hspec's describe-sentence.
  Currently localhost, ssh , vagrant and docker(>=1.4.1) are supported for ServerType.
  Examples are below. "@>=" is like hspec's shouldBe.
  it can check multiple values.

  ```
      describe "test for localhost" $ with localhost $ do
        it "package zookeepr" $ do
          package "zookeeper" @>= installed
        it "port test" $ do
          port 2181 @>= listening
        it "service test" $ do
          service "cron" @>= running
        it "command test" $ do
          command "echo" ["hoge"] [] @>=  exit 0 <> stdout "hoge\n"
      describe "test for vagrant" $ with (vagrant "servername") $ do
        it "port test" $ do
          port 2181 @>= listening
      describe "test for docker" $ with (docker "containerId") $ do
        it "port test" $ do
          port 2181 @>= listening
  ```
description-type: markdown
hash: 08356c7384b0210769e2feedaa1606bdc0eadaa6cf6a83c6be1e0dc3a49913fc
homepage: ''
latest: 0.4.1
license-name: BSD-3-Clause
maintainer: junji.hashimoto@gmail.com
synopsis: Test Framework for checking server's status
test-bench-deps:
  base: '>=0'
  hspec: '>=0'
  hspec-contrib: '>=0'
  hspec-server: '>=0'
  transformers: '>=0'
