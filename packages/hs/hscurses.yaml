all-versions:
- '1.2'
- '1.3'
- 1.3.0.1
- 1.3.0.2
- 1.4.0.0
- 1.4.1.0
- 1.4.1.1
- 1.4.1.2
- 1.4.2.0
author: |-
  John Meacham <john at repetae dot net>
  Tuomo Valkonen <tuomov at iki.fi>
  Don Stewart <http://www.cse.unsw.edu.au/~dons>
  Stefan Wehr <http://www.stefanwehr.de>
basic-deps:
  base: '>=4.4 && <5'
  exceptions: '>=0'
  mtl: '>=0'
  old-locale: '>=1.0 && <1.1'
  old-time: <1.2
  unix: '>=2.4'
changelog: |
  1.4.2.0 (2015-02-12_
    - support for werase and winsch (thanks to Ryan Newton)
    - add wnoutrefresh for more efficient updates of multiple windows (Ryan Newton)
    - use getmaxyx for scrSize,  remove non-recommended approach of reading
      LINES and COLS global variables (Ryan Newton)
    - fixed findNextActiveCell (Matthew Hague)
    - support for GHC 7.8 (Mi�tek Bak)

  1.4.1.2 (2012-09-12)
    - support for GHC 7.6

  1.4.1.1 ?

  1.4.1.0 (2011-09-11)
    - support for GHC 7.2 (thanks to thoughtpolice)
    - support for windows (thanks to Jos� Romildo Malaquias)

  1.4.0.0 (2011-02-02)
    - support for GHC 7
    - dropped support for GHC 6.10
    - re-added support for unicode
    - use new exception API
    - proper version constraints in .cabal file
changelog-type: text
description: |2
                 hscurses -- A Haskell Binding to ncurses
                 =+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+

  hscurses is a Haskell binding to the ncurses library, a library of
  functions that manage an application's display on character-cell
  terminals. hscurses also provides some basic widgets implemented on
  top of the ncurses binding, such as a text input widget and a table
  widget.

  The hscurses library has been reported to work on Linux x86 using GHC
  6.12.1, 7.0.3 and 7.2.1.

  Building and installing the hscurses library with GHC
  -----------------------------------------------------

  Requirements:

  - GNU m4
  - GHC >= 6.8
  - ncurses

  Build and installation steps:

    runhaskell Setup.hs configure
    runhaskell Setup.hs build
    runhaskell Setup.hs install

  In order to generate the API documentation, you need haddock
  (http://www.haskell.org/haddock). The command is then:

    runhaskell Setup.hs haddock

  Using the hscurses library:
  ---------------------------

  Just add the flag `-package hscurses' to the compiler flags. At the
  moment, user documentation is only available through Haddock API
  documentation.

  Windows support:
  ----------------

  Windows support relies on pdcurses (http://pdcurses.sourceforge.net/),
  which is already packaged for MinGW
  (http://sourceforge.net/projects/mingw/files/MinGW/PDCurses/PDCurses-3.4-1/)
  and can be installed with mingw-get.

  Thanks to Jos� Romildo Malaquias (malaquias@gmail.com) for porting
  hscurses to the windows platform!

  Copyright:
  ----------

     John Meacham <john @ repetae . net>, 2002-2004.
     Tuomo Valkonen <tuomov @ iki.fi>, 2004.
     Don Stewart <http://www.cse.unsw.edu.au/~dons>, 2004.
     Stefan Wehr <http://www.stefanwehr.de>, 2004-2011.

  History:
  --------

  John Meacham started the binding for his chat client Ginsu
  (http://repetae.net/john/computer/ginsu/).

  Tuomo Valkonen integrated to code into Riot
  (http://modeemi.fi/~tuomov/riot/), with minor modifications.

  Don Stewart improved the code for the Yi editor
  (http://www.cse.unsw.edu.au/~dons/yi.html).

  Stefan Wehr turned the binding into a standalone library. He also
  added some basic widgets.
description-type: text
hash: 185f294036aaced6a4cf72c994339286e8e7886f5a327c3ccac898066985c528
homepage: https://github.com/skogsbaer/hscurses
latest: 1.4.2.0
license-name: LicenseRef-LGPL
maintainer: Stefan Wehr <http://www.stefanwehr.de>
synopsis: NCurses bindings for Haskell
test-bench-deps: {}
