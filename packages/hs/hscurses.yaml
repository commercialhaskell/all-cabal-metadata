all-versions:
- '1.2'
- '1.3'
- 1.3.0.1
- 1.3.0.2
- 1.4.0.0
- 1.4.1.0
- 1.4.1.1
- 1.4.1.2
- 1.4.2.0
- 1.5.0.0
author: |-
  John Meacham <john at repetae dot net>
  Tuomo Valkonen <tuomov at iki.fi>
  Don Stewart <http://www.cse.unsw.edu.au/~dons>
  Stefan Wehr <http://www.stefanwehr.de>
basic-deps:
  base: '>=4 && <5'
  exceptions: <0.11
  mtl: <2.4
  time: <1.15
  unix: <2.9
changelog: |
  1.5.0.0 (2025-01-19)
    - Support for mouse events
    - Support for 'newterm' and 'delscreen'
    - Made debug logging usable for library users by compiling with the 'debug'
      flag
    - Replaced 'old-time' and 'old-locale' dependencies with just 'time'
    - Tested GHC versions >=8.4

  1.4.2.0 (2015-02-12)
    - support for werase and winsch (thanks to Ryan Newton)
    - add wnoutrefresh for more efficient updates of multiple windows (Ryan Newton)
    - use getmaxyx for scrSize,  remove non-recommended approach of reading
      LINES and COLS global variables (Ryan Newton)
    - fixed findNextActiveCell (Matthew Hague)
    - support for GHC 7.8 (Mi�tek Bak)

  1.4.1.2 (2012-09-12)
    - support for GHC 7.6

  1.4.1.1 ?

  1.4.1.0 (2011-09-11)
    - support for GHC 7.2 (thanks to thoughtpolice)
    - support for windows (thanks to Jos� Romildo Malaquias)

  1.4.0.0 (2011-02-02)
    - support for GHC 7
    - dropped support for GHC 6.10
    - re-added support for unicode
    - use new exception API
    - proper version constraints in .cabal file
changelog-type: text
description: "# hscurses -- A Haskell Binding to ncurses\n\n`hscurses` is a Haskell
  binding to the ncurses library, a library of functions\nthat manage an application's
  display on character-cell terminals. `hscurses`\nalso provides some basic widgets
  implemented on top of the `ncurses` binding,\nsuch as a text input widget and a
  table widget.\n\nThe `hscurses` library has been reported to work on Linux x86 using
  GHC 6.12.1,\n7.0.3, 7.2.1, and GHC major versions starting from GHC 8.4. See the
  GitHub\nactions for GHC versions that we actively test against.\n\n## Building the
  `hscurses` library\n\nRequirements:\n\n- `cabal-install` + GHC installation\n- `ncurses`
  with headers\n\nBuild:\n\n    cabal build\n\nThe repository contains a couple of
  example and testing applications in the\n[example](./example) and [tests](./tests)
  directories. To run them, you have to\nenable the `examples` Cabal flag; for instance:\n\n
  \   cabal run -f examples widget-test-edit\n\nor:\n\n    cabal run -f examples contact-manager
  -- example/contacts\n\nIn order to generate the API documentation, you need\n[haddock](http://www.haskell.org/haddock).
  The command is then:\n\n    cabal haddock\n\n## Building and installing the `hscurses`
  library (old)\n\nRequirements:\n\n- GNU `m4`\n- GHC >= 6.8\n- `ncurses` with headers\n\nBuild
  and installation steps:\n\n    runhaskell Setup.hs configure\n    runhaskell Setup.hs
  build\n    runhaskell Setup.hs install\n\nIn order to generate the API documentation,
  you need haddock\n(http://www.haskell.org/haddock). The command is then:\n\n    runhaskell
  Setup.hs haddock\n\n## Using the `hscurses` library\n\nJust add the package `hscurses`
  to your dependencies and make sure you have an\ninstallation of `ncurses`. At the
  moment, user documentation is only available\nthrough Haddock API documentation.\n\nFor
  basic usage check out the code in the [example](./example) and\n[./tests](tests)
  directories.\n\n### Debug logging\n\n`hscurses` ships with very basic logging functionality.
  The default behavior is\nnot to compile with support for this, but you can use the
  Cabal flag `debug` to\nmanually enable this. Logs will be written to `.hscurses.logs`
  in the directory\nyou're running the `cabal` command from. Example:\n\n    cabal
  run -f examples -f debug contact-manager -- example/contacts\n\n## Windows support\n\nWindows
  support relies on [pdcurses](http://pdcurses.sourceforge.net/), which is\nalready
  [packaged for MinGW](http://sourceforge.net/projects/mingw/files/MinGW/PDCurses/PDCurses-3.4-1/)\nand
  can be installed with `mingw-get`.\n\nThanks to Jos� Romildo Malaquias (malaquias@gmail.com)
  for porting `hscurses` to\nthe Windows platform!\n\nThere is also a detailed installation
  instruction by\n[Ilan Godik](https://medium.com/@NightRa):\nhttps://medium.com/@NightRa/installing-hscurses-on-windows-830532d3268a\n\n##
  Development notes\n\n- We used [cabal-fmt](https://github.com/phadej/cabal-fmt)
  the cabal file(s).\n- To consolidate the code style a tiny bit, the Haskell code
  formatter\n  [fourmolu](https://fourmolu.github.io/) was used; see \n  [its configuration](./fourmolu.yaml)
  for details.\n\n## Copyright\n\n    John Meacham <john @ repetae . net>, 2002-2004.\n
  \   Tuomo Valkonen <tuomov @ iki.fi>, 2004.\n    Don Stewart <http://www.cse.unsw.edu.au/~dons>,
  2004.\n    Stefan Wehr <http://www.stefanwehr.de>, 2004-2011.\n\n## History\n\nJohn
  Meacham started the binding for his chat client\n[Ginsu](http://repetae.net/john/computer/ginsu/).\n\nTuomo
  Valkonen integrated to code into [Riot](http://modeemi.fi/~tuomov/riot/),\nwith
  minor modifications.\n\nDon Stewart improved the code for the [Yi editor](http://www.cse.unsw.edu.au/~dons/yi.html).\n\nStefan
  Wehr turned the binding into a standalone library. He also added some\nbasic widgets.\n"
description-type: markdown
hash: 5bd0d1840ede4a99becdbb7a6b68ee6abe14f4b4a4cdfce373fcf46b9e119650
homepage: https://github.com/skogsbaer/hscurses
latest: 1.5.0.0
license-name: LicenseRef-LGPL
maintainer: Stefan Wehr <http://www.stefanwehr.de>
synopsis: NCurses bindings for Haskell
test-bench-deps: {}
