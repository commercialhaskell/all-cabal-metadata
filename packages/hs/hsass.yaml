all-versions:
- 0.1.0
- 0.2.0
- 0.3.0
- 0.4.0
- 0.4.1
- 0.4.2
- 0.5.0
- 0.6.0
- 0.7.0
- 0.8.0
author: Jakub Fija≈Çkowski <kuba@codinginfinity.me>
basic-deps:
  base: '>=4.7 && <5'
  bytestring: '>=0.10.0'
  data-default-class: '>=0'
  filepath: '>=1.0'
  hlibsass: '>=0.1.7.0'
  monad-loops: '>=0.3'
  transformers: '>=0.3'
changelog: |
  # Change Log
  All notable changes to this project will be documented in this file.
  This project adheres to [Semantic Versioning](http://semver.org/).

  ## [0.8.0] - 2018-11-25
  ### Changed
  - Fix invalid usage of `sass_make_import` and fix `SassImport`. This is a
    breaking change. Fixes [#12](https://github.com/jakubfijalkowski/hsass/issues/12).

  ## [0.7.0] - 2018-04-02
  ### Changed
  - This library uses UTF-8 to encode/decode all `CString`s (paths included!)

  ## [0.6.0] - 2018-03-24
  ### Changed
  - Switched to `hLibsass` 0.1.7.0 and `libsass` 3.5.2

  ### Added
  - `compileByteString` for `ByteString`-only compilation
  - option to strip BOM/@charset with `sassStripEncodingInfo` option (thanks @h-3-0 !)

  ### Removed
  - `clearNativeFunction` and `clearNativeFunctionList` are not needed anymore

  ## [0.5.0] - 2017-11-01
  ### Changed
  - Split `SassImporter` into `SassImporter` and `SassHeader` (thanks @h-3-0 !)

  ### Added
  - `SassIporter` now takes path to the file that is being imported into (thanks
    @h-3-0)

  ## [0.4.2] - 2017-08-28
  ### Added
  - Introduce `defaultSassOptions` as default options (thanks @chris-martin !)

  ## [0.4.1] - 2017-03-19
  ### Fixed
  - Bump `hlibsass` version to 0.1.5.2 (fixes build problem on Cabal 1.24 & Stack
    1.4)

  ## [0.4.0] - 2015-12-19
  ### Added
  - Support for combining `SassValues` (new in hlibsass 0.1.5)

  ### Changed
  - Requires hlibsass version 0.1.5
  - `SassValue` derives `Show`

  ## [0.3.0] - 2015-07-10
  ### Added
  - Support for a `ByteString` result (thanks to [Andy
    Morris](https://github.com/jakubfijalkowski/hsass/pull/3) ).

  ### Changed
  - `SassExtendedResult` is now parametrised by a base result type (e.g.
    `String`).
  - The package depends on `transformers` instead of `mtl`.

  ### Fixed
  - Fix GHC 7.10.1 warnings related to AMP proposal.
  - Support for stack's lts-2.17 resolver.

  ## [0.2.0] - 2015-06-01
  ### Changed
  - Return type of `compileString` and `compileFile` is now polymorphic - may
    return both `String` and `SassExtendedResult` on success.
  - Fixes in documentation (articles, mostly).

  ### Added
  - `SassExtendedResult` with a compiled string, a list of files included during
    compilation and a source map.

  ## 0.1.0 - 2015-04-11
  ### Added
  - Support for functions, importers, headers and sass values.
  - Compilation of files and strings.

  [0.2.0]: https://github.com/jakubfijalkowski/hsass/compare/v0.1.0...v0.2.0
  [0.3.0]: https://github.com/jakubfijalkowski/hsass/compare/v0.2.0...v0.3.0
  [0.4.0]: https://github.com/jakubfijalkowski/hsass/compare/v0.3.0...v0.4.0
  [0.4.1]: https://github.com/jakubfijalkowski/hsass/compare/v0.4.0...v0.4.1
  [0.4.2]: https://github.com/jakubfijalkowski/hsass/compare/v0.4.1...v0.4.2
  [0.5.0]: https://github.com/jakubfijalkowski/hsass/compare/v0.4.2...v0.5.0
  [0.6.0]: https://github.com/jakubfijalkowski/hsass/compare/v0.5.0...v0.6.0
  [0.7.0]: https://github.com/jakubfijalkowski/hsass/compare/v0.6.0...v0.7.0
  [0.8.0]: https://github.com/jakubfijalkowski/hsass/compare/v0.7.0...v0.8.0
changelog-type: markdown
description: |-
  This package provides quite simple (but not too simple) API for
  compilation of <http://sass-lang.com/ Sass> code. It uses
  <https://sass-lang.com/libsass libsass> (hlibsass) underneath, so the code it
  parses/generates should be compatible with original Sass implementation (or at
  least <https://sass-lang.com/libsass#sassc sassc>).
  This package tries to minimize C API usage, so the only place where it is used
  is in the 'compileFile' / 'compileString' methods. This allows us to stay pure
  as long as we can and not waste performance for going back and forth.
  If you feel that compilation options constrain you too much, you may use rest
  of modules without it. With them, you can use Haskell types and mechanisms to
  manage libsass's data(eg. importers, options, values) and modify compilation
  process as you like.
description-type: haddock
hash: 66047578fc359b7edfba6a6a35a47fbd5db0314b7000959b9e8662adeb58b587
homepage: https://github.com/jakubfijalkowski/hsass
latest: 0.8.0
license-name: MIT
maintainer: kuba@codinginfinity.me
synopsis: Integrating Sass into Haskell applications.
test-bench-deps:
  base: '>=4.7 && <5'
  bytestring: '>=0.10.0'
  data-default-class: '>=0'
  hsass: '>=0'
  hspec: '>=2.1.5'
  hspec-discover: '>=2.1.5'
  temporary: '>=1.1'
  text: '>=1.2'
