homepage: https://github.com/freckle/hspec-junit-formatter#readme
changelog-type: markdown
hash: fdad6ed44d65cf285925933a2e5e9e480c1c376c8e04c6d44c50c37c1f52d53e
test-bench-deps:
  xml-conduit: '>=1.9.1.1'
  base: '>=4.14.1.0 && <5'
  hspec: '>=2.8.1'
  text: '>=1.2.4.1'
  markdown-unlit: '>=0.5.1'
  hspec-core: '>=2.8.1'
  filepath: '>=1.4.2.1'
  containers: '>=0.6.2.1'
  temporary: '>=1.3'
  hspec-junit-formatter: -any
maintainer: engineering@freckle.com
synopsis: A JUnit XML runner/formatter for hspec
changelog: |
  ## [_Unreleased_](https://github.com/freckle/hspec-junit-formatter/compare/v1.0.2.2...main)

  None

  ## [v1.0.2.2](https://github.com/freckle/hspec-junit-formatter/compare/v1.0.2.1...v1.0.2.2)

  - Add `file` and `line` attributes in `testcase` nodes

  ## [v1.0.2.1](https://github.com/freckle/hspec-junit-formatter/compare/v1.0.2.0...v1.0.2.1)

  - Support for prefixing reported source paths (e.g. if in a monorepo)
  - Ensure tests pass within unpacked release tarball

  ## [v1.0.2.0](https://github.com/freckle/hspec-junit-formatter/compare/v1.0.1.0...v1.0.2.0)

  - Create `Test.Hspec` module-space and deprecate misspelled `Test.HSpec` modules
  - Introduce `configWithJUnit` and `JUnitConfig`

  ## [v1.0.1.0](https://github.com/freckle/hspec-junit-formatter/compare/v1.0.0.4...v1.0.1.0)

  - Format function can be used directly without `withConfig` or `runJUnitSpec`.
  - Test case duration is now supported.
  - Failure locations are listed for some result types.
  - Timestamps in the resulting XML now display the start time of formatting.

  ## [v1.0.0.4](https://github.com/freckle/hspec-junit-formatter/compare/v1.0.0.3...v1.0.0.4)

  - Bring `base` bound back in to fix release

  ## [v1.0.0.3](https://github.com/freckle/hspec-junit-formatter/compare/v1.0.0.2...v1.0.0.3)

  - Remove dependencies upper bounds

  ## [v1.0.0.2](https://github.com/freckle/hspec-junit-formatter/compare/v1.0.0.1...v1.0.0.2)

  - Less restrictive upper bound on `base`

  ## [v1.0.0.1](https://github.com/freckle/hspec-junit-formatter/compare/v1.0.0.0...v1.0.0.1)

  - Bump `base` dep

  ## [v1.0.0.0](https://github.com/freckle/hspec-junit-formatter/tree/v1.0.0.0)

  Initial release.
basic-deps:
  exceptions: '>=0.10.4'
  xml-conduit: '>=1.9.1.1'
  base: '>=4.14.1.0 && <5'
  time: '>=1.9.3'
  text: '>=1.2.4.1'
  hspec-core: '>=2.8.1'
  filepath: '>=1.4.2.1'
  conduit: '>=1.3.4.1'
  containers: '>=0.6.2.1'
  xml-types: '>=0.3.8'
  directory: '>=1.3.6.0'
all-versions:
- 1.0.0.0
- 1.0.0.1
- 1.0.0.2
- 1.0.0.4
- 1.0.0.5
- 1.0.1.0
- 1.0.2.0
- 1.0.2.1
- 1.0.2.2
author: Freckle R&D
latest: 1.0.2.2
description-type: markdown
description: |
  # hspec-junit-formatter

  A `JUnit` XML runner/formatter for [`hspec`](http://hspec.github.io/).

  <!--
  ```haskell
  module Main (main) where
  import Prelude
  import Text.Markdown.Unlit ()
  ```
  -->

  ## Usage

  ```haskell
  import Test.Hspec
  import Test.Hspec.Core.Runner (defaultConfig, hspecWith)
  import Test.Hspec.JUnit

  main :: IO ()
  main = do
    let
      junitConfig = setJUnitConfigOutputDirectory "/tmp" $ defaultJUnitConfig "my-tests"
      hspecConfig = configWithJUnit junitConfig defaultConfig

    hspecWith hspecConfig spec

  spec :: Spec
  spec = describe "Addition" $ do
    it "adds" $ do
      2 + 2 `shouldBe` (4 :: Int)
  ```

  ---

  [LICENSE](./LICENSE)
license-name: MIT
