homepage: https://github.com/freckle/hspec-junit-formatter#readme
changelog-type: markdown
hash: 6429871263be4532a3a6d08e72da5a8e4c00e8bfbfd7fc5b8352a3643f867453
test-bench-deps:
  base: '>=4.14.1.0 && <5'
  hspec: '>=2.8.1'
  hspec-junit-formatter: -any
maintainer: engineering@freckle.com
synopsis: A JUnit XML runner/formatter for hspec
changelog: |
  ## [_Unreleased_](https://github.com/freckle/hspec-junit-formatter/compare/v1.0.0.4...main)

  None

  ## [v1.0.1.0](https://github.com/freckle/hspec-junit-formatter/compare/v1.0.0.4...v1.0.1.0)

  - Format function can be used directly without `withConfig` or `runJUnitSpec`.
  - Test case duration is now supported.
  - Failure locations are listed for some result types.
  - Timestamps in the resulting XML now display the start time of formatting.

  ## [v1.0.0.4](https://github.com/freckle/hspec-junit-formatter/compare/v1.0.0.3...v1.0.0.4)

  - Bring `base` bound back in to fix release

  ## [v1.0.0.3](https://github.com/freckle/hspec-junit-formatter/compare/v1.0.0.2...v1.0.0.3)

  - Remove dependencies upper bounds

  ## [v1.0.0.2](https://github.com/freckle/hspec-junit-formatter/compare/v1.0.0.1...v1.0.0.2)

  - Less restrictive upper bound on `base`

  ## [v1.0.0.1](https://github.com/freckle/hspec-junit-formatter/compare/v1.0.0.0...v1.0.0.1)

  - Bump `base` dep

  ## [v1.0.0.0](https://github.com/freckle/hspec-junit-formatter/tree/v1.0.0.0)

  Initial release.
basic-deps:
  exceptions: '>=0.10.4'
  xml-conduit: '>=1.9.1.1'
  base: '>=4.14.1.0 && <5'
  time: '>=1.9.3'
  text: '>=1.2.4.1'
  hspec-core: '>=2.8.1'
  filepath: '>=1.4.2.1'
  conduit: '>=1.3.4.1'
  containers: '>=0.6.2.1'
  xml-types: '>=0.3.8'
  directory: '>=1.3.6.0'
all-versions:
- 1.0.0.0
- 1.0.0.1
- 1.0.0.2
- 1.0.0.4
- 1.0.1.0
author: Freckle R&D
latest: 1.0.1.0
description-type: markdown
description: |
  # hspec-junit-formatter

  A `JUnit` XML runner/formatter for [`hspec`](http://hspec.github.io/).

  ```hs
  main :: IO ()
  main = do
    config <- readConfig defaultConfig =<< getArgs
    spec `runJUnitSpec` ("output-dir", "my-tests-title") $ config
  ```
license-name: MIT
