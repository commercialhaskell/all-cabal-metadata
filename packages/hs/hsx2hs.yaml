all-versions:
- 0.11.0
- 0.12.0
- 0.13.0
- 0.13.1
- 0.13.2
- 0.13.3
- 0.13.3.1
- 0.13.3.2
- 0.13.4
- 0.13.5
- 0.14.0
- 0.14.1
- 0.14.1.1
- 0.14.1.2
- 0.14.1.3
- 0.14.1.4
- 0.14.1.5
- 0.14.1.6
- 0.14.1.8
- 0.14.1.9
- 0.14.1.10
- 0.14.1.11
author: Niklas Broberg, Joel Bjornson
basic-deps:
  base: '>=4 && <5'
  bytestring: '>=0'
  haskell-src-exts: '>=1.18 && <1.24'
  haskell-src-meta: '>=0.7 && <0.9'
  mtl: '>=2.0 && <2.4'
  template-haskell: '>=2.7 && <2.20'
  utf8-string: '>=0.3 && <1.1'
changelog: ''
changelog-type: ''
description: |-
  HSX (Haskell Source with XML) allows literal XML syntax in Haskell source code.
  The hsx2hs preprocessor translates .hsx source files into ordinary .hs files. Literal
  XML syntax is translated into function calls for creating XML values of the appropriate
  forms.
  hsx2hs transforms literal XML syntax into a series of function calls. Any project
  can make use of the syntax by providing definitions for those functions, and the
  XML values produced will be of the types specified. This works for any types, since
  hsx2hs doesn't make any assumptions, or inserts any information depending on types.
  XMLGenerator defines a few typeclasses that together cover the functions injected by the
  preprocessor. A project that uses these classes to provide the semantics for the injected
  syntax will be able to use any functions written in terms of these, allowing better code
  reusability than if each project defines its own semantics for the XML syntax. Also, the classes
  makes it possible to use the literal syntax at different types within the same module.
  Achieving that is not as simple as it may seem, but the XMLGenerator module provides all the
  necessary machinery.
description-type: haddock
hash: 42f35dcd284b297aa55c6876c6811c29243ecea4162ff4ff68bec11e996bf57f
homepage: https://github.com/seereason/hsx2hs
latest: 0.14.1.11
license-name: BSD-3-Clause
maintainer: Jeremy Shaw <stepcut@n-heptane.com>
synopsis: HSX (Haskell Source with XML) allows literal XML syntax in Haskell source
  code.
test-bench-deps: {}
