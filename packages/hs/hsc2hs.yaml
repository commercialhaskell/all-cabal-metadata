all-versions:
- 0.67.20061107
- 0.67.20120610
- '0.68'
- 0.68.1
- 0.68.2
- 0.68.3
- 0.68.4
- 0.68.6
- 0.68.7
- 0.68.8
- 0.68.9
- 0.68.10
author: Marcin Kowalczyk <qrczak@knm.org.pl>
basic-deps:
  base: '>=4.3.0 && <4.22'
  containers: '>=0.4.0 && <0.8'
  directory: '>=1.1.0 && <1.4'
  filepath: '>=1.2.0 && <1.6'
  process: '>=1.1.0 && <1.7'
changelog: |
  ## 0.68.10

   - Further improve robustness of detection of pointer types in `--cross` mode.

   - Compatibility with new `base` versions

  ## 0.68.9

   - Improve robustness of detection of pointer types in `--cross` mode.

  ## 0.68.8

   - Process flags in order, now the last of `--compiler`, `--linker`,
      `--template` is used. (#35)

   - WINIO: Make sure that with we don't use the TEMP workaround (#52)

  ## 0.68.7

   - The C compiler is now assumed to be called `cc` instead of `gcc`
     by default (#42)

   - Fix race condition when using response files (#30)

   - Add extra diagnostics when `hsc2hs` sub-process fails
     and make TempFile creation fully atomic on Windows. See (#33)

  ## 0.68.6

   - Supports generation of response files to avoid system filepath
     limits (#22, #23)

   - Fix non-deterministic failures for response file handlings (#29)

   - Temporary file removals on Windows are not a bit more reliable and should
     throw less access denied errors.  See #25 and
     ([#9775](https://gitlab.haskell.org/ghc/ghc/issues/9775))

   - Accept a leading single quote for data constructor promotion (#13, #17)

   - Support `MonadFail` / base-4.13

   - Include template file as first header in hsc2hs generated C file (#28)

   - On Windows define `__USE_MINGW_ANSI_STDIO` to 1 instead of 0 when not already
     defined in standard template header.  This is a more modern default (#28)

  ## 0.68.5

   - Support response files regardless of which GHC `hsc2hs` was compiled
     with ([#15758](https://ghc.haskell.org/trac/ghc/ticket/15758))

   - Support for non-x86 platforms should be significantly more robust due to
     improvements in `hsc2hs`'s assembly parser

   - Add support for haskell files that use a leading single quote for promoted
     data constructors.

  ## 0.68.4

   - Add support to read command line arguments supplied via response files
     ([#13896](https://ghc.haskell.org/trac/ghc/ticket/13388))

  ## 0.68.2

   - Support GHC 8.2.1

   - Make `hsc_alignment` macro work in clang
     ([D3346](https://phabricator.haskell.org/D3346))

   - Track column numbers to improve GHC's caret diagnostic display
     ([#13388](https://ghc.haskell.org/trac/ghc/ticket/13388))

  ## 0.68.1

   - Fix type signature of generated `main` test function
     to avoid C compiler warnings about unused `argc`/`argv`
     function parameters during feature testing.

   - Double-escape paths used to build call to `hsc_line`
     ([#12504](http://ghc.haskell.org/ticket/12504))
changelog-type: markdown
description: |-
  The hsc2hs program can be used to automate some parts of the
  process of writing Haskell bindings to C code.  It reads an
  almost-Haskell source file with embedded special constructs, and
  outputs a real Haskell file with these constructs processed, based
  on information taken from some C headers.  The extra constructs
  provide Haskell counterparts of C types, values of C constants,
  including sizes of C types, and access to fields of C structs.

  For more details, see the
  <http://downloads.haskell.org/~ghc/master/users-guide/utils.html#writing-haskell-interfaces-to-c-code-hsc2hs hsc2hs section>
  in the GHC User's Guide.
description-type: haddock
hash: 276325277350cd2c2c88916ed3ae5cd35b2b4f494ec594fbd9534081eb7fb759
homepage: ''
latest: 0.68.10
license-name: BSD-3-Clause
maintainer: ghc-devs@haskell.org
synopsis: A preprocessor that helps with writing Haskell bindings to C code
test-bench-deps:
  HUnit: '>=1.3.1.2 && <1.4 || >=1.6.0.0 && <1.7'
  base: '>=4.3.0 && <4.22'
  test-framework: '>=0.8.2.0 && <0.9'
  test-framework-hunit: '>=0.3.0.2 && <0.4'
