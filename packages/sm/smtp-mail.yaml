all-versions:
- 0.1.0.0
- 0.1.1.0
- 0.1.2.0
- 0.1.3.0
- 0.1.4.0
- 0.1.4.1
- 0.1.4.2
- 0.1.4.3
- 0.1.4.4
- 0.1.4.5
- 0.1.4.6
- 0.2.0.0
- 0.2.0.1
- 0.3.0.0
- 0.4.0.0
- 0.4.0.1
- 0.4.0.2
author: Jason Hickner, Matt Parsons
basic-deps:
  array: '>=0'
  base: '>=4.5 && <5'
  base16-bytestring: '>=0'
  base64-bytestring: '>=0'
  bytestring: '>=0'
  crypton: '>=0 && <1 || ^>=1.0'
  crypton-connection: ^>=0.3.1 || ^>=0.4.0
  data-default-class: ^>=0.1.2.0
  filepath: '>=0'
  memory: '>=0'
  mime-mail: '>=0'
  network: '>=0'
  network-bsd: '>=0'
  text: '>=0'
changelog: "# CHANGELOG\n\nThis package follows the Package Versioning Policy.\nRoughly
  speaking, this means that we have four digits standing for:\n\n- Major: A significant
  rewrite of the library.\n- Major: A breaking change\n- Minor: A non-breaking addition\n-
  Patch: A non-breaking bugfix\n\n## Upcoming\n\nIf you are doing a pull-request,
  please update this list.\nA template is provided:\n\n```\n- [# PR number](URL to
  pr) @your_github_username\n  - Describe change #1\n  - Describe change #2\n  - Indicate
  if changes are major, minor, or patch changes.\n```\n\n## 0.4.0.1\n\n- [#11](https://github.com/haskell-github-trust/smtp-mail/pull/11)
  @spencerjanssen\n    - Support `crypton-connection-0.4.0`\n\n## 0.4.0.0\n\n- [#5](https://github.com/haskell-github-trust/smtp-mail/pull/5)
  @spencerjanssen\n    - Switch to `crypton-connection` because the `connection` package
  is no longer maintained\n- [#6](https://github.com/haskell-github-trust/smtp-mail/pull/6)
  @spencerjanssen\n    - [Change in maintainership](https://github.com/jhickner/smtp-mail/pull/41#issuecomment-2012521041)\n\n##
  0.3.0.0\n\n- [#32](https://github.com/jhickner/smtp-mail/pull/32) @typetetris\n
  \   - add some functions to use SMTPS, which should be preferred to\n      STARTTLS
  for mail submissions of endusers according to RFC 8314\n    - add STARTTLS\n    -
  add integration test using nixos tests\n\n- [#30](https://github.com/jhickner/smtp-mail/pull/30)
  @typetetris\n    - Replace `cryptohash` dependency with `cryptonite`.\n      `cryptohash`
  is deprecated and `cryptonite` offers HMAC MD5\n      directly.\n\n## 0.2.0.0\n\n-
  [#25](https://github.com/jhickner/smtp-mail/pull/25) @shulhi\n    - References to
  the deprecated `Network` module were removed and replaced \n      with the new `connection`
  package. \n    - Duplicate functionality was deprecated.\n- [#23](https://github.com/jhickner/smtp-mail/pull/23)
  @alexandersgreen\n    - The `Cc` and `Bcc` fields will be sent to the SMTP server,
  and they'll \n      actually be sent now. \n"
changelog-type: markdown
description: "SMTP-MAIL\n=========\n\nMaking it easy to send SMTP emails from Haskell.\n\n```\ncabal
  install smtp-mail\n```\n\n### Sending with an SMTP server\n\n```haskell\n{-# LANGUAGE
  OverloadedStrings #-}\n\nimport Network.Mail.SMTP\n\nfrom       = Address Nothing
  \"email@domain.com\"\nto         = [Address (Just \"Jason Hickner\") \"email@domain.com\"]\ncc
  \        = []\nbcc        = []\nsubject    = \"email subject\"\nbody       = plainTextPart
  \"email body\"\nhtml       = htmlPart \"<h1>HTML</h1>\"\n\nmail = simpleMail from
  to cc bcc subject [body, html]\n\nmain = sendMail host mail\n```\n\nor with an attachment:\n\n```haskell\nmain
  = do\n  attachment <- filePart \"application/octet-stream\" \"path/to/attachment.zip\"\n
  \ let mail = simpleMail from to cc bcc subject [body, html, attachment]\n  sendMail
  host mail\n```\n\nor, with authentication:\n\n```haskell\nmain = sendMailWithLogin
  host user pass mail\n```\n\nor, using STARTTLS:\n\n```haskell\nmain = sendMailSTARTTLS
  host mail\n```\n\nor, using SMTPS:\n\n```haskell\nmain = sendMailTLS host mail\n```\n\nNote:
  `sendMail'` and `sendMailWithLogin'` variations are also provided if you want to
  specify a port as well as a hostname.\n\n\n### Sending with sendmail\n\nIf you'd
  like to use sendmail, the sendmail interface from ```Network.Mail.Mime``` \nis reexported
  as well:\n\n```haskell\n-- send via the default sendmail executable with default
  options\nrenderSendMail mail\n\n-- send via the specified executable with specified
  options\nrenderSendMailCustom filepath [opts] mail\n```\n\nFor more complicated
  scenarios or for adding attachments or CC/BCC\naddresses you can import ```Network.Mail.Mime```
  and construct ```Mail```\nobjects manually.\n\n### Thanks\n\nThis library is based
  on code from HaskellNet, which appears to be no longer\nmaintained. I've cleaned
  up the error handling, added some API functions to\nmake common operations easier,
  and switched to ByteStrings where applicable.\n\n### Developing\n\n`nix-integration-test/`
  contains a integration test, which\nuses nixos qemu vm tests to start a qemu vm
  with a postfix and use smtp-mail to\nsend mails to that postfix.\n\nInstall [nix](https://nixos.org),
  enable [flakes](https://nixos.wiki/wiki/Flakes) and execute\n`nix flake check` to
  execute the test. Success is signalled by a return code of `0`.\n"
description-type: markdown
hash: 5a7f2b55f2faba6031e1acba4642f8e550708682c3f0664383e9131888d0607d
homepage: http://github.com/haskell-github-trust/smtp-mail
latest: 0.4.0.2
license-name: BSD-3-Clause
maintainer: spencerjanssen@gmail.com
synopsis: Simple email sending via SMTP
test-bench-deps: {}
