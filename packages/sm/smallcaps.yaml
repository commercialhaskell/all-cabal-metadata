all-versions:
- 0.3.0.0
- '0.4'
- 0.4.0.1
- 0.4.1
- 0.4.1.1
- 0.4.1.2
- 0.4.1.3
- 0.5.0.0
- 0.5.1.0
- 0.5.1.1
- 0.6.0.0
- 0.6.0.1
- 0.6.0.2
- 0.6.0.3
- 0.6.0.4
- 0.6.0.5
- 0.6.0.6
author: Stefan Berthold
basic-deps:
  attoparsec: '>=0'
  base: '>=4.8 && <5'
  containers: '>=0'
  data-default: '>=0'
  directory: '>=0'
  filepath: '>=0'
  parsec: '>=0'
  smallcaps: '>=0'
  text: '>=0'
  transformers: '>=0'
changelog: ''
changelog-type: ''
description: |-
  smallcaps is a pre-processor library for LaTeX files.
  The library comes with an executable that makes most
  functionality accessible through a command line interface.
  The pre-processor formats sequences of uppercase letters
  with TeX's @\\small@ macro or whatever you configure.
  Uppercase letters at the beginning of sentences are not
  formatted. Other formatting conditions can be configured by
  the user.

  The executable can be configured through its command line
  arguments as well as through TeX comments. In the default
  configuration, lesscase does not change the content of any
  macro argument or environment (different from document).
  More and less restrictive configuration profiles can be
  activated and adapted. Configurations can be stored and
  restored at any time, even while processing the input
  file.

  ["Text.SmallCaps"]
  exports the main program as library.

  ["Text.SmallCaps.Config"]
  specifies the default configuration values for
  "Text.SmallCaps".

  ["Text.SmallCaps.TeXParser"]
  parses 'Text' to a 'TeXElement' token stream.

  ["Text.SmallCaps.TeXLaTeXParser"]
  parses a 'TeXElement' token stream and produces a
  'LaTeXElement' token stream.

  ["Text.SmallCaps.DocumentParser"]
  replaces uppercase letters in 'LaTeXElement' token
  streams.

  A simple program can be defined as

  @
  import Data.Default           ( def )
  import Text.SmallCaps         ( smallcaps )
  import Text.SmallCaps.Config  ( defaultProfile )
  main = smallcaps def defaultProfile
  @

  This is virtually all the code that is necessary to
  implement the executable @lesscase@. Have a look in the
  source of the executable @twocase@ which only formats
  sequences of two or more uppercase letters. It is a good
  reference for understanding the API changes that took
  place between the revisions 0.5 and 0.6.
description-type: haddock
hash: 971353c6e41c0508e60835f06371369b4957a71e3d92d33d964dedadb2608515
homepage: ''
latest: 0.6.0.6
license-name: BSD-3-Clause
maintainer: stefan.berthold@gmx.net
synopsis: Flatten camel case text in LaTeX files
test-bench-deps:
  attoparsec: '>=0'
  base: '>=4.8 && <5'
  containers: '>=0'
  data-default: '>=0'
  parsec: '>=0'
  smallcaps: '>=0'
  text: '>=0'
