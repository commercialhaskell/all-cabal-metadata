all-versions:
- 0.1.0
- 0.2.0
- 0.2.1
- 0.3.0
- 0.4.0
- 0.4.1
- 1.0.0
- 1.0.1
- 1.0.2
author: ''
basic-deps:
  MonadRandom: '>=0.5.1 && <0.6'
  QuickCheck: '>=2.13 && <2.15'
  base: '>=4.12 && <5'
  bitvec: '>=1.0.2 && <1.2'
  groups: '>=0.4.1 && <0.6'
  integer-gmp: '>=1.0.2 && <1.2'
  mod: '>=0.1.0 && <0.2'
  poly: '>=0.3.2 && <0.5'
  protolude: '>=0.2 && <0.3'
  semirings: '>=0.5 && <0.7'
  vector: '>=0.12.0 && <0.13'
  wl-pprint-text: '>=1.2.0 && <1.3'
changelog: |
  # Change log for galois-field

  ## 1.0.2

  * Add `Mod` dependency for prime fields.
  * Add minor optimisations for prime fields.
  * Remove unsafeCoerce for number coercions.
  * Bump poly dependency to 0.4.
  * Bump upper bound for protolude.

  ## 1.0.1

  * Add `Bit` dependency for binary fields.
  * Add major optimisations for binary fields.

  ## 1.0.0

  * Refactor library structure from `GaloisField` to `Data.Field.Galois`.
  * Add `Field` export for Galois fields.
  * Add `Semiring` dependency for Galois fields.
  * Rename `PrimeField` to `Prime` and add `PrimeField` class.
  * Rename `ExtensionField` to `Extension` and add `ExtensionField` class.
  * Rename `BinaryField` to `Binary` and add `BinaryField` class.
  * Rename `split` to `poly` and swap `IrreducibleMonic` parameters.
  * Rename `toInt`, `toField`, `fromField` to `from`, `to` conversion functions.
  * Replace `Integer` with `Natural`.
  * Add `CyclicSubgroup` class with generator function.
  * Add `RootsOfUnity` type with cofactor, check, and conversion functions.
  * Add `TowerOfFields` class with embed and scalar multiplication functions.
  * Add `Bounded` instances for prime fields and binary fields.
  * Add `Enum` instances for prime fields and binary fields.
  * Add `Group` instances for Galois fields.
  * Add `Hashable` instances for prime fields and binary fields.
  * Add `Integral` instances for prime fields and binary fields.
  * Add `IsList` instances for Galois fields.
  * Add `Real` instances for prime fields and binary fields.
  * Add `rndR` function for Galois fields.
  * Add `conj` function for extension fields.
  * Add minor optimisations to exponentiation with `SPECIALISE`.
  * Add major optimisations to `frob` function.
  * Add pattern synonyms for field elements.

  ## 0.4.1

  * Add compilation optimisations with `INLINABLE`.

  ## 0.4.0

  * Add `Poly` dependency for extension fields.
  * Add `qnr` function for Galois fields.
  * Add `qr` function for Galois fields.
  * Add `quad` function for extension fields and binary fields.
  * Add `sr` function for extension fields and binary fields.
  * Add `Semiring` instances for Galois fields.
  * Add `Ord` instances for Galois fields.
  * Add minor optimisations to exponentiation with `RULES`.
  * Add pattern synonyms for monic monomials.

  ## 0.3.0

  * Add complete implementation of binary fields.
  * Add `quad` function for prime fields.
  * Add `sr` function for prime fields.

  ## 0.2.1

  * Add preliminary implementation of binary fields.
  * Add `frob` function for Galois fields.
  * Add minor improvements to documentation.

  ## 0.2.0

  * Add `deg` function for Galois fields.
  * Add `order` function for Galois fields.
  * Add `pow` function for Galois fields.
  * Add `rnd` function for Galois fields.
  * Add `Random` instances for Galois fields.

  ## 0.1.1

  * Add `Arbitrary` instances for Galois fields.
  * Add `Bits` instances for prime fields.
  * Add `Pretty` instances for Galois fields.
  * Add minor optimisations to multiplication and inversion with `INLINE`.

  ## 0.1.0

  * Initial release.
changelog-type: markdown
description: An efficient implementation of Galois fields used in cryptography research
description-type: haddock
hash: 1f7d31836da8553caf50682e9e0d7cb7edf2146bafb67bed1b6b68031278bbaf
homepage: https://github.com/adjoint-io/galois-field#readme
latest: 1.0.2
license-name: MIT
maintainer: Adjoint Inc (info@adjoint.io)
synopsis: Galois field library
test-bench-deps:
  MonadRandom: '>=0.5.1 && <0.6'
  QuickCheck: '>=2.13 && <2.14'
  base: '>=4.10 && <5'
  bitvec: '>=1.0.2 && <1.1'
  criterion: '>=1.5 && <1.6'
  galois-field: '>=0'
  groups: '>=0.4.1 && <0.5'
  integer-gmp: '>=1.0.2 && <1.1'
  mod: '>=0.1.0 && <0.2'
  poly: '>=0.3.2 && <0.5'
  protolude: '>=0.2 && <0.4'
  semirings: '>=0.5 && <0.6'
  tasty: '>=1.2 && <1.3'
  tasty-quickcheck: '>=0.10 && <0.11'
  vector: '>=0.12.0 && <0.13'
  wl-pprint-text: '>=1.2.0 && <1.3'
