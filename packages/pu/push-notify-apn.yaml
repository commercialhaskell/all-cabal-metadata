homepage: https://github.com/memrange/apn#readme
changelog-type: markdown
hash: cf555816346aa104084d73b94d06a6dc27522c3d5e14b72b225810528d5e4b2b
test-bench-deps:
  base: -any
  hspec: -any
  push-notify-apn: -any
  aeson: -any
maintainer: hc@hcesperer.org
synopsis: Send push notifications to mobile iOS devices
changelog: |
  0.3.0.0
  =======

  - Add support for JWT authentication
  - Allow arbitrary user specific content to be passed to the push API
  - Stability improvements

  0.2.0.2
  =======

  - Fix build for newer packages

  0.2.0.1
  =======

  - Use Data.Pool

  0.2.0.0
  =======

  - Threading bugfix
  - Migrate to http2-client-0.9.0.0 and lts-14

  0.1.1.1
  =======

  - Improve error handling

  0.1.1.0
  =======

  - Let the client send alerts with no title

  0.1.0.9
  =======

  - Add "semigroups" as a dependency for older ghc versions

  0.1.0.8
  =======

  - Remove version constraints for http2-client

  0.1.0.7
  =======

  - Make compatible with latest http2-client-0.7.0.0

  0.1.0.6
  =======

  - Use http2-client-0.5.0.0 or greater
  - Detect http2 goaway frames and remove connections from the
    connection pool accordingly
  - Detect connection errors when sending messages and remove
    connections from the pool when they happen
  - Fix in the README: The parameter is not timeout, but
    parallelConnections

  0.1.0.5
  =======

  - Bugfix: Close the cleanup thread when closing a session
  - Check if the certificates and key exist early, when the session is created
  - Catch IO errors and return a temporary failure instead
  - Depend explicitly on http2-client-0.3.0.2 for now

  0.1.0.4
  =======

  - Add an interactive/scriptable mode where messages are read from stdin
  - Re-structure exports to improve readability of the documentation
  - Close connections in addition to sending http2 gtfo when idle time exceeded (needs http2-client-0.3.0.2)
  - Add a closeSession method
  - Close sessions when they are garbage collected

  0.1.0.3
  =======

  - Filter out invalid token characters when hex encoded tokens are supplied
  - Clarify the documentation
  - Close the flow control thread when closing connections

  0.1.0.1
  =======

  - Initial release
basic-deps:
  bytestring: -any
  http2: -any
  base: '>=4.7 && <5'
  time: -any
  text: -any
  resource-pool: -any
  tls: -any
  http2-client: -any
  lifted-base: -any
  x509-store: -any
  data-default: -any
  semigroups: -any
  containers: -any
  x509: -any
  x509-system: -any
  binary: -any
  push-notify-apn: -any
  mtl: -any
  base16-bytestring: '>=1.0'
  optparse-applicative: -any
  random: -any
  aeson: -any
all-versions:
- 0.1.0.2
- 0.1.0.3
- 0.1.0.4
- 0.1.0.5
- 0.1.0.7
- 0.1.0.8
- 0.1.1.0
- 0.1.2.0
- 0.2.0.0
- 0.2.0.1
- 0.2.0.2
- 0.3.0.0
author: Hans-Christian Esperer
latest: 0.3.0.0
description-type: markdown
description: "# push-notify-apn\n\npush-notify-apn is a library and command line utility
  that can be used to send\npush notifications to mobile devices running iOS. Push
  notifications are small\nmessages that can be sent to apps on smart phones and tablets\nwithout
  the need to keep open a long lived TCP connection per app, dramatically\nreducing
  the power consumption in standby mode.\n\nThe library is still in an experimental
  state but apparently is used by\na few people and seems to be working. Bug and success
  reports\nas well as feature and pull requests are very welcome!\n\nSending a message
  is as simple as:\n\n    let sandbox     = True  -- Development environment\n        maxParallel
  = 10    -- Number of parallel connections to\n                            -- the
  APN Servers\n        useJwt      = False -- No message bearer Token\n    session
  <- newSession (Just \"my.key\") (Just \"my.crt\")\n        (Just \"/etc/ssl/ca_certificates.txt\")
  useJwt sandbox\n        maxParallel \"my.bundle.id\"\n    let payload = alertMessage
  \"Title\" \"Hello From Haskell\"\n        message = newMessage payload\n        token
  \  = base16EncodedToken \"the-token\"\n    success <- sendMessage session token
  None payload\n    print success\n\n# command line utility\n\nThe command line utility
  can be used for testing your app. Use like this:\n\n    sendapn -c ../apn.crt -k
  ../apn.key -a \\\n        /etc/ssl/certs/ca-certificates.crt -b your.bundle.id -s
  \\\n        -t your-token -m \"Your-message\"\n\nThe -s flag means \"sandbox\",
  i.e., for apps that are deployed in a\ndevelopment environment.\n\nYou can also
  use an interactive mode, where messages are read from\nstdin in this format:\n\n
  \   token:sound:title:message\n    \nTo use, invoke like this:\n\n    stack exec
  -- sendapn -k ~/your.key -c ~/your.crt -a /etc/ssl/cert.pem -b your.application.identifier
  -s -i\n    \nDo remove the -s flag when using the production instead of the sandbox
  environment.\n\n# credentials\n\nyour.crt and your.key are the certificate and private
  key of your\nAPN certificate from apple. To extract them from a .p12 file,\nyou
  can use openssl:\n\n    openssl pkcs12 -in mycredentials.p12 -out your.crt -nokeys\n
  \   openssl pkcs12 -in mycredentials.p12 -nodes -out your.key -nocerts\n    \n/etc/ssl/cert.pem
  is a truststore that contains the CA certificates\nthat are used to verify the apn
  server's server certificates.\nYou can create your own truststore that contains
  only the\nCAs you are sure are authorized to sign the push notification servers'\ncertificates.\n"
license-name: BSD-3-Clause
