all-versions:
- 0.1.0.0
- 0.1.0.1
- 0.1.0.2
- 0.1.0.3
- 0.1.0.4
- 0.2.0.0
- 0.3.0.0
author: Robert Vollmert
basic-deps:
  SVGFonts: '>=1.7 && <1.8'
  aeson: '>=0.7 && <1.4'
  base: '>=4.8 && <5'
  containers: '>=0.5 && <0.6'
  diagrams-lib: '>=1.4.2.3 && <1.5'
  diagrams-rasterific: '>=1.4.1 && <1.5'
  filepath: '>=1.3 && <1.5'
  hashable: '>=1.2 && <1.3'
  linear: '>=1.20.8 && <1.21'
  mtl: '>=2.1 && <2.3'
  optparse-applicative: '>=0.13 && <0.15'
  parsec: '>=3.1 && <3.2'
  puzzle-draw: '>=0'
  text: '>=1.1 && <1.3'
  unordered-containers: '>=0.2 && <0.3'
  vector-space: '>=0.8 && <0.14'
  yaml: '>=0.8.4 && <0.9'
changelog: |
  0.3.0.0: 20180718
  -----------------

  * Switch backend to diagrams-rasterific, losing the dependency on Cairo.
  * Upgrade to diagrams 1.4.
  * Various new puzzle types, including Minesweeper, Tents, Snake,
    Country Road, Killer Sudoku.

  0.2.0.0: 20161211
  -----------------

  * Upgrade diagrams version.
  * Add various new puzzle types.
  * Add solution code markers.

  0.1.0.4: 20141115
  -----------------

  * add installation and usage instructions to README
  * merge puzzle-draw-cmdline
  * update for diagrams 1.2 and ghc 7.8
  * add new puzzle types: Bahnhof, Cave
  * rename `countnumbers` to `meanderingnumbers`
  * include and use a nicer font
  * command-line option to list supported puzzle types
  * various tweaks and fixes

  0.1.0.3: 20140519
  -----------------

  * add new puzzle types: Maximal Lengths, Prime Place, Magic Labyrinth


  0.1.0.2: 20140419
  -----------------

  * add new puzzle types: Japanese Sums, Coral

  0.1.0.1: 20140409
  -----------------

  * add new puzzle type: Tapa

  0.1.0.0
  -------

  * first release
changelog-type: markdown
description: |
  [![Build Status](https://api.travis-ci.org/robx/puzzle-draw.png)][travis]

  puzzle-draw
  ===========

  puzzle-draw is a library and command-line tool for drawing pencil
  puzzles using [Diagrams][diagrams]. It aims to provide a utility layer
  on top of Diagrams to help with drawing arbitrary puzzles, as well as
  supporting several specific puzzle types directly. In addition, it
  includes functionality for parsing puzzle data from a YAML file format.

  Examples
  --------

  A [liar slitherlink][liarslither] with solution:

  ![Liar Slitherlink](doc/slitherlink-liar-example.png)

  This was rendered from the following YAML document:

  ```
  type: slitherlinkliar
  puzzle: |
    1..0.3
    .03222
    0....1
    3....3
    32202.
    3.3..3
  solution:
    loop: |
      o o-o-o-o o-o
       .|. . .|.|.|
      o o o-o-o o o
       .|.|. . .|.|
      o o o-o-o-o o
       .|. . . . .|
      o-o o o-o-o o
      |. . .|. .|.|
      o-o o-o o o o
       .|.|. . .|.|
      o-o o o o o o
      |. .|. . .|.|
      o-o-o o o o-o
    liars: |
      ...X..
      .X....
      X.....
      .....X
      ....X.
      ..X...
  ```

  There is a [demo web application][demo] that provides some more
  examples and that can be used to generate SVG images from such
  puzzle descriptions.

  Or see a [puzzle set][twentyfour] that covers the puzzle types
  that are supported as of 2014-05.

  Installing
  ----------

  This is a brief overview of how to install the command line tool.
  The easiest way right now is to get [stack](https://www.stackage.org/),
  clone this repository, and install using

  ```
  $ stack install
  ```

  Alternatively, get a Haskell environment by installing the
  [Haskell Platform](https://www.haskell.org/platform/).
  Then install `puzzle-draw` with cabal:

  ```
  $ cabal install puzzle-draw
  ```

  Running
  -------

  As an example, suppose the Liar Slitherlink puzzle description above
  is copied into a file `slitherliar.pzl`.

  ```
  $ drawpuzzle slitherliar.pzl
  ```

  This will generate two files `slitherliar.svg` and `slitherliar-sol.svg`,
  containing the puzzle and solved puzzle, respectively. Run

  ```
  $ drawpuzzle -h
  ```

  to see some command line options that allow modifying the program's
  behaviour, e.g., choosing the output format.

  [travis]: https://travis-ci.org/robx/puzzle-draw
  [liarslither]: https://maybepuzzles.wordpress.com/types/liar-slither-link/
  [twentyfour]: https://maybepuzzles.wordpress.com/2014/03/29/puzzle-set-24-hour-marathon/
  [diagrams]: http://projects.haskell.org/diagrams/
  [demo]: https://arp.vllmrt.net/puzzles/draw/static/puzzle.html
description-type: markdown
hash: 3219b0bcc7c751a3cd8c0cce49ad5aa4618d9f3aaba7a8ce163dae70e2916a6a
homepage: ''
latest: 0.3.0.0
license-name: MIT
maintainer: rob@vllmrt.net
synopsis: Creating graphics for pencil puzzles.
test-bench-deps:
  base: '>=4.8 && <5'
  blaze-svg: '>=0.3 && <0.4'
  bytestring: '>=0.10 && <0.11'
  containers: '>=0.5 && <0.6'
  deepseq: '>=1.3 && <1.5'
  diagrams-lib: '>=1.4.2.3 && <1.5'
  hspec: '>=2.5.4 && <2.6'
  puzzle-draw: '>=0'
  tasty: '>=0.8 && <1.2'
  tasty-hspec: '>=1.1.5 && <1.2'
  tasty-hunit: '>=0.8 && <0.11'
  text: '>=1.1 && <1.3'
  yaml: '>=0.8.4 && <0.9'
