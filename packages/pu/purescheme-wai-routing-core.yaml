all-versions:
- 0.1.0.0
- 0.1.1.0
- 0.1.2.0
- 0.1.3.0
author: Fernando Rincon Martin
basic-deps:
  aeson: '>=0'
  base: '>=4.7 && <5'
  bytestring: '>=0'
  case-insensitive: '>=0'
  http-media: '>=0'
  http-types: '>=0'
  interpolate: '>=0'
  purescheme-wai-routing-core: '>=0'
  text: '>=0'
  wai: '>=0'
  warp: '>=0'
changelog: |-
  # Changelog for simple-routing-core

  ## 0.1.3.0

  * Include header functions in `Core` module

  ## 0.1.2.0

  * Added variant of `headerValue` that accepts `HeaderName`

  ## 0.1.1.0

  * `headerValue` function to extract value from HTTP headers
  *  Add `withIO` which execute an IO as part of the request handling

  ## 0.1.0.0

  * First implementation
changelog-type: markdown
description: "# purescheme-wai-routing-core\n[![Build Status](https://travis-ci.org/purescheme/purescheme-wai-routing-core.svg?branch=master)](https://travis-ci.org/purescheme/purescheme-wai-routing-core)\n[![Hackage](https://img.shields.io/hackage/v/purescheme-wai-routing-core)](http://hackage.haskell.org/package/purescheme-wai-routing-core)\n\n*The
  goal of purescheme is make a simple framework for building fast microservices and
  web applications in haskell.*\n\nThis module provides simple routing functions for
  create rest APIs on top of a WAI server.\n\n## Getting Started\n\nMinimal Example
  to run a helloworld using Warp server:\n\n```haskell\n{-# LANGUAGE OverloadedStrings
  #-}\nmodule Main where\n\nimport Network.Wai.Routing.Purescheme.Core\n\nimport Network.HTTP.Types
  (status200, StdMethod(..), hContentType)\nimport Network.Wai.Handler.Warp (run)\nimport
  Network.Wai (responseLBS, Application)\n\nmain :: IO ()\nmain = run 8080 api\n\napi
  :: Application\napi = path \"hello\"\n            $ method GET\n            $ complete\n
  \           $ responseLBS status200 [(hContentType, \"text/html\")] \"<h1>Hellow
  World!</h1>\"\n\n```\n\n## Overview\n\nThis module provides simple routing functions
  that works on top of \"Network.Wai\"\napplications.\n \nThe basic idea is provides
  functions that modifies an @\"Application\" in order to match\ncertain rules. It
  is inspired on akka http server Routing DSL.\n\n## User Guide\n\nThe API is divided
  in several modules by its functionality:\n- `Network.Wai.Routing.Purescheme.Core.Basic`
  provides the basic types and functionality including how to complete a request and
  exception handling.\n- `Network.Wai.Routing.Purescheme.Core.Path` routing functions
  that matches with the Path of the URI.\n- `Network.Wai.Routing.Purescheme.Core.Query`
  routing functions to extract parameters from the query part of the URI.\n- `Network.Wai.Routing.Purescheme.Core.Method`
  routing functions based on http method.\n- `Network.Wai.Routing.Purescheme.Core.Entity`
  routing and manipulation API related with Entity in the request and the response.
  Useful for content negotiation and serialization of entities.\n- `Network.Wai.Routing.Purescheme.Core.Entity.Json`
  concrete functions to operate on JSON encoding entities based on Aeson library.\n\nA
  complete example can be found in the [app](https://github.com/purescheme/purescheme-wai-routing-core/tree/master/app)
  folder.\n\n## Why\nThere are many routing frameworks for Haskell but they usually
  are:\n- They come with their own Monads or exoteric strategics to build routes.\n-
  Some of them are not using the type system properly\n\nSo, as Haskell is totally
  functional, and, based on the simplicity of an Wai `Application` (which is basically\na
  function that converts requests to responses), why not create functions on top of
  Wai `Application` that \nprovides a functional way to implement RESTful APIs?\n\n##
  Status\nCurrently the API is totally functional but the status is considered Alpha.
  That means, the API can change\nin further release until it reachs the beta status.\n\n##
  Feedback are welcome!\nPlease, if you feel that some functionallity is missing or
  something can be improve, post an [issue](https://github.com/purescheme/purescheme-wai-routing-core/issues)
  or contact the author.\n"
description-type: markdown
hash: e7d86a7f632981183f4cd44aa1ae5a6c99d9d3eb4311375ab3a77cdb96a4cde2
homepage: https://github.com/purescheme/purescheme-wai-routing-core#readme
latest: 0.1.3.0
license-name: Apache-2.0
maintainer: f.rincon@protonmail.com
synopsis: Simple Routing functions for Wai Applications
test-bench-deps:
  base: '>=4.7 && <5'
  purescheme-wai-routing-core: '>=0'
