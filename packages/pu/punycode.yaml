all-versions:
- 0.0.1.0
- '0.5'
- 0.5.1
- '1.0'
- '2.0'
author: Myles C. Maxfield <myles.maxfield@gmail.com>
basic-deps:
  base: '>=4 && <5'
  bytestring: '>=0'
  cereal: '>=0'
  mtl: '>=0'
  text: '>=0'
changelog: ''
changelog-type: ''
description: Encode unicode strings to ascii forms according to RFC 3492. It is written
  in pure Haskell, as opposed to gnuidn's Data.Text.IDN.Punycode. Please note that
  Data.Encoding.BootString from the 'encoding' package also contains an implementation
  of the Punycode algorithm.
description-type: haddock
hash: dce7f481b5eedc750cf49d21a80b839cb366afd2d29bc506acca5ad9d0c06a8f
homepage: https://github.com/litherum/punycode
latest: '2.0'
license-name: BSD-3-Clause
maintainer: Myles C. Maxfield <myles.maxfield@gmail.com>
synopsis: Encode unicode strings to ascii forms according to RFC 3492
test-bench-deps:
  HUnit: '>=0'
  QuickCheck: '>=0'
  base: '>=4 && <5'
  bytestring: '>=0'
  cereal: '>=0'
  encoding: '>=0'
  mtl: '>=0'
  text: '>=0'
