homepage: https://www.altocumulus.org/Fudgets/
changelog-type: markdown
hash: 5683d75d7440fec9cb86f6a0e48fa91e9de1c7a4b454031fccb479533a3decf0
test-bench-deps: {}
maintainer: Thomas Hallgren
synopsis: The Fudgets Library
changelog: "# Release history for fudgets\n\n## 0.18.3.2 --  2022-08-04\n\n* Simplified
  the installation on macOS by adding a helper script\n  `hsrc/fudcpp` to workaround
  problems with the `-optP`  option in\n  `ghc>=8.10.3` and automatically detect which
  version of `gcc` is installed.\n  \n## 0.18.3.1 -- 2022-03-14\n\n* Renamed `doRequest.hs`
  to `doRequestCmd.hs` to avoid a name clash\n  with `DoRequest.hs` on systems with
  case-insensitive file names.\n\n## 0.18.3 -- 2022-03-13\n\n* Although Fudgets dates
  back to the early 1990s, this is the first\n  release on Hackage.\n"
basic-deps:
  unix: -any
  base: ==4.*
  time: -any
  process: -any
  array: -any
  containers: -any
  old-time: -any
  fudgets: -any
  random: -any
  parallel: -any
  directory: '>=1.2.3'
all-versions:
- 0.18.3
- 0.18.3.1
- 0.18.3.2
author: Thomas Hallgren and Magnus Carlsson and others
latest: 0.18.3.2
description-type: markdown
description: |2

  # ¤ Fudgets ¤

  [Fudgets](https://www.altocumulus.org/Fudgets/)
  is primarily a Graphical User Interface Toolkit implemented in Haskell
  on top of its own binding to the
  [Xlib library](https://tronche.com/gui/x/xlib/) of the
  [X Windows system](https://www.x.org/).
  Fudgets also makes it easy to create client/server applications that
  communicate via the Internet.
  [The Hello world program](https://www.altocumulus.org/Fudgets/Intro/ex1.html)
  fits on a single line:

  ```haskell
  main = fudlogue (shellF "Hello" (labelF "Hello world!"))
  ```

  The key abstraction is
  [*the fudget*](https://www.altocumulus.org/Fudgets/Intro/concept.html).
  A fudget is a *stream processor* with
  high-level and low-level streams. The high level streams are used for
  communication between fudgets within a program.
  The low level streams are for communication with the I/O system.

  > ![](https://www.altocumulus.org/~hallgren/WebFudgets/doc/P/the_fudget2.jpg)

  Fudgets are combined using various combinators for parallel composition,
  serial composition and loops.

  > ![](https://www.altocumulus.org/~hallgren/WebFudgets/doc/P/fudget_plumbing2.jpg)

  Fudgets was originally implemented in Lazy ML in the early 1990s,
  then converted to Haskell. It was thus designed before monadic IO was
  introduced in Haskell and early versions did not make use of Haskell's
  type classes at all.

  ## Documentation

  - [Your first 8 Fudgets program](https://www.altocumulus.org/Fudgets/Intro/).
    Gentle Introduction.
  - [Fudgets User's Guide](https://www.altocumulus.org/Fudgets/userguide.html).
    Naming conventions and some other practical things.
  - [Fudget Library Reference Manual](https://www.altocumulus.org/Fudgets/Manual/). (Haddock did not exist back when Fudgets were created.)
  - [The FPCA-93 paper about Fudgets](https://www.altocumulus.org/Fudgets/fpca93-abstract.html),
    the first publication describing Fudgets.
  - See the [Fudgets home page](https://www.altocumulus.org/Fudgets/) for more info.

  ## Installing Fudgets from Hackage

  ### On Linux systems

  - `sudo apt install libxext-dev`
  - `cabal install fudgets`

  (The first command installs Xlib etc on Debian-based distributions,
  the command and package name may be different on other Linux distributions.)

  ### On macOS

  - Install [XQuartz](https://www.xquartz.org/).
  - Install [Homebrew](https://brew.sh/).
  - `brew install gcc`
  - `cabal install fudgets`

  (The preprocessor in `clang` does not preserve layout, so we use `gcc`
  instead. Also, with ghc>=8.10.3 there seems to be problem with the `-optP`
  option, so we use a helper script `hsrc/fudcpp` to call `cpp` with the
  correct options.)
license-name: LicenseRef-OtherLicense
