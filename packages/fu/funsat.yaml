all-versions:
- '0.4'
- '0.5'
- 0.5.1
- 0.5.2
- 0.6.0
- 0.6.1
- 0.6.2
author: Denis Bueno
basic-deps:
  QuickCheck: '>=2 && <3'
  array: '>=0'
  base: <4
  bimap: '>=0.2 && <0.3'
  bitset: '>=1 && <2'
  containers: '>=0'
  fgl: '>=0'
  mtl: '>=0'
  parse-dimacs: '>=1.2 && <2'
  pretty: '>=0'
  random: '>=0'
  time: '>=0'
changelog: |+
  -*- mode: outline -*-

  * 0.6.0
  - Logical circuit representation added.
  - License is now BSD3, which is apparently happier for some people.

  * 0.5.2
  Maintenance update because a new (incompatible) version of bitset, version 1.0,
  was released.  Funsat should again compile via cabal-install.

  * 0.5.1
  ** Update for compatibility with parse-dimacs 1.2,
  which should mean faster parsing.
  ** Code cleanup

changelog-type: text
description: |+
  -*- mode: outline -*-

  * Funsat: A DPLL-style SAT solver in pure Haskell

  Funsat is a native Haskell SAT solver that uses modern techniques for solving
  SAT instances.  Current features include two-watched literals, conflict-directed
  learning, non-chronological backtracking, a VSIDS-like dynamic variable
  ordering, and restarts.  Our goal is to facilitate convenient embedding of a
  reasonably fast SAT solver as a constraint solving backend in other
  applications.

  Currently along this theme we provide /unsatisfiable core/ generation, giving
  (hopefully) small unsatisfiable sub-problems of unsatisfiable input problems
  (see "Funsat.Resolution").


  * Installation
  Install using the typical Cabal procedure:

      $ ghc --make -o Setup Setup.hs
      $ ./Setup configure
      $ ./Setup build

  This will produce a binary called funsat at ./dist/build/funsat/funsat and a
  standalone library interface for the solver.  If you feel like profiling the
  code, a profiling binary is automatically built in
  ./dist/build/funsat-prof/funsat-prof.

  ** Dependencies
  All the dependences are cabal-ised and available from hackage, or in etc/.

  *** parse-dimacs
  A haskell CNF file parser.

  http://hackage.haskell.org/cgi-bin/hackage-scripts/package/parse-dimacs

  *** bitset
  http://hackage.haskell.org/cgi-bin/hackage-scripts/package/bitset

description-type: text
hash: 5352a7ca95be2885ac85438af640de58abcc3bfabec92f6dccf9168561caa53b
homepage: http://github.com/dbueno/funsat
latest: 0.6.2
license-name: BSD-3-Clause
maintainer: Denis Bueno <dbueno@gmail.com>
synopsis: A modern DPLL-style SAT solver
test-bench-deps: {}
