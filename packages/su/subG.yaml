homepage: https://hackage.haskell.org/package/subG
changelog-type: markdown
hash: 4e5b5a4af5ef15a4b4f634aa6e1721088e67517436ed2378e5785be1f7ff7a6f
test-bench-deps: {}
maintainer: oleksandr.zhabenko@yahoo.com
synopsis: Some extension to the Foldable and Monoid classes.
changelog: "# Revision history for subG\n\n## 0.1.0.0 -- 2020-10-16\n\n* First version.
  Released on an unsuspecting world.\n\n## 0.1.1.0 -- 2020-10-16\n\n* First version
  revised A. Discontinued the support for the GHC-7.8.* series.\n\n## 0.1.1.1 -- 2020-10-16\n\n*
  First version revised B. Some documentation improvements.\n\n## 0.2.0.0 -- 2020-11-17\n\n*
  Second version. Added new functions to the Data.SubG module. Added a new module
  Data.MinMax with the functions that allow to find out both minimum and\nmaximum
  elements of the Foldable structures.\n\n## 0.2.1.0 -- 2020-11-18\n\n* Second version
  revised A. Fixed issues with the ambiguous names in the further reverse dependencies
  on the package. Now the ambiguous functions have\nin their names suffix G (it means
  'generalization'). Added a new function splitAtEndG to the Data.SubG module. Fixed
  issues with multiple search minimum and\nmaximum elements functions in the module
  Data.MinMax. Allowed equal elements in the structures so they are now general. Some
  documentation improvements.\n\n## 0.3.0.0 -- 2020-11-18\n\n* Third version. Added
  a new module Data.MinMax3Plus with additional functions.\n\n## 0.4.0.0 -- 2020-11-18\n\n*
  Fourth version. Added new modules Data.MinMax3Plus.Preconditions and Data.MinMax.Preconditions
  with additional functions. Added -By functions to the modules\nto make them more
  general. The modules with Preconditions in the names just use functions with no
  checking the needed length of the structure.\n\n## 0.4.1.0 -- 2020-11-19\n\n* Fourth
  version revised A. Added two new functions mapG and filterG to the module.\n\n##
  0.4.2.0 -- 2020-11-19\n\n* Fourth version revised B. Added two new functions partitionG
  to the module.\n\n## 0.5.0.0 -- 2021-06-28\n\n* Fifth version. Added a new module
  Data.SubG.Unfold inspired by: https://www.works-hub.com/learn/number-anamorphisms-aka-unfolds-explained-50e1a
  by Marty Stumpf.\n\n## 0.5.1.0 -- 2021-06-28\n\n* Fifth version revised A. Changed
  the code for Data.SubG.Unfold.unfoldG function influenced more by the Data.List.unfoldr
  code.\n\n## 0.5.2.0 -- 2021-06-28\n\n* Fifth version revised B. Changed the code
  for Data.SubG.Unfold.unfoldG to be more general.\n\n## 0.5.3.0 -- 2022-03-24\n\n*
  Fifth version revised C. Updated the dependency boundaries to support the latest
  GHC and Cabal versions.\n\n## 0.6.0.0 -- 2023-01-24\n\n* Sixth version. Switched
  to NoImplicitPrelude extension. Updated dependencies boundaries. Some\n  metadata
  improvements.\n\n## 0.6.1.0 -- 2023-01-25\n\n* Sixth version revised A. Done additional
  testing according to the advice for foldl package. \nFor performance reasons some
  functions were moved to the not recommended ones' section.\nSome documentation improvements.\n\n"
basic-deps:
  base: '>=4.13 && <5'
all-versions:
- 0.6.1.0
author: OleksandrZhabenko
latest: 0.6.1.0
description-type: haddock
description: Introduces a new class InsertLeft â€” the class of types of values that
  can be inserted from the left to the Foldable structure that is a data that is also
  the Monoid instance. Also contains some functions to find out both minimum and maximum
  elements of the finite Foldable structures.
license-name: MIT
