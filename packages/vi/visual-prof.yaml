all-versions:
- '0.1'
- '0.2'
- '0.3'
- '0.4'
- '0.5'
author: Daniel Velkov
basic-deps:
  base: '>=3 && <5'
  containers: '>=0'
  directory: '>=0'
  filepath: '>=0'
  haskell-src-exts: ==1.13.5
  mtl: '>=0'
  pretty: '>=0'
  process: '>=0'
  regexpr: '>=0'
  split: '>=0'
  uniplate: '>=0'
changelog: ''
changelog-type: ''
description: |-
  visual-prof profiles your Haskell program and generates a html file containing
  its source code with parts of the code highlighted in different
  colors depending on the fraction of the running time that they take.
  visual-prof gives you an easy way to find places for optimization in your code.

  Usage:

  > visual-prof -px A/B/C.hs run "arg1 arg2"

  This will profile the C.hs file used by run.hs which contains the Main module
  of your project. Arguments to ./run are passed as shown (arg1, arg2,...). The parameters
  should be given in that order.

  The simplest way to run it is:

  > visual-prof -px test.hs test

  which will generate a profile for the file test.hs (which needs to have a main function)
description-type: haddock
hash: 9111e2fcf200033685dd4afae53bd0d931ee73b6eb7c23db09468f9af247d3a1
homepage: http://github.com/djv/VisualProf
latest: '0.5'
license-name: BSD-3-Clause
maintainer: djvelkov@gmail.com
synopsis: Create a visual profile of a program's source code
test-bench-deps: {}
