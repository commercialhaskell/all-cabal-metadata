all-versions:
- 4.1.0.0
- 4.1.0.1
- 4.1.0.2
- 4.1.1.2
- 4.2.0.0
author: Tobias Dammers
basic-deps:
  base: '>=4.6 && <5.0'
  containers: '>=0.5 && <1.0'
  convertible: '>=1.1.1.0 && <2'
  fail: '>=4.9.0.0 && <4.10'
  filepath: '>=0'
  parsec: '>=3.0 && <4.0'
  template-haskell: '>=0'
changelog: ''
changelog-type: ''
description: "# YeshQL\n\n[YesQL](https://github.com/krisajenkins/yesql)-style SQL
  database abstraction.\n\nYeshQL implements quasiquoters that allow the programmer
  to write SQL queries\nin SQL, and embed these into Haskell programs using quasi-quotation.
  YeshQL\ntakes care of generating suitable functions that will run the SQL queries\nagainst
  a HDBC database driver, and marshal values between Haskell and SQL.\n\nIn order
  to do this properly, YeshQL extends SQL syntax with type annotations\nand function
  names; other than that, it is perfectly ignorant about the SQL\nsyntax itself. See
  the [YesQL\nReadme](https://github.com/krisajenkins/yesql/blob/master/README.md)
  for the\nfull rationale - Haskell and Clojure are sufficiently different languages,
  but\nthe reasoning behind YesQL applies to YeshQL almost unchanged.\n\n## Installation\n\nUse
  [stack](http://haskellstack.org/) or [cabal](http://haskell.org/cabal/) to\ninstall.
  Nothing extraordinary here.\n\n## Usage\n\nIn short:\n\n    {-#LANGUAGE QuasiQuotes
  #-}\n    import MyProject.DatabaseConnection (withDB)\n    import Database.HDBC\n
  \   import Database.YeshQL\n\n    [yesh|\n      -- name:getUser :: (String)\n      --
  :userID :: Int\n      SELECT username FROM users WHERE id = :userID\n    |] \n\n
  \   main = withDB $ \\conn -> do\n      username <- getUser 1 conn\n      putStrLn
  username\n\nPlease refer to the Haddock documentation for further usage details.\n\n##
  Bugs\n\nProbably. The project is hosted at https://github.com/tdammers/yeshql, feel\nfree
  to comment there or send a message to tdammers@gmail.com if you find any.\n\n##
  Something about the name\n\nYeshQL is rather heavily inspired by YesQL, so it makes
  sense to blatantly\nsteal most of the name. Throwing in an \"H\" for good measure
  (this being Haskell\nand all) makes it sound like Sean Connery, which automatically
  increases\naweshomenesh, so that'sh what we'll roll with.\n\n## License / Copying\n\nYeshQL
  is Free Software and provided as-is. Please see the enclosed LICENSE\nfile for details.\n"
description-type: markdown
hash: c786f754ddd5936f36b42700b1bd965167befd306bc4f93df4f64074d58799d6
homepage: https://github.com/tdammers/yeshql
latest: 4.2.0.0
license-name: MIT
maintainer: tdammers@gmail.com
synopsis: YesQL-style SQL database abstraction (core)
test-bench-deps:
  base: '>=4.6 && <5.0'
  containers: '>=0'
  stm: '>=0'
  tasty: '>=0'
  tasty-hunit: '>=0'
  tasty-quickcheck: '>=0'
  yeshql-core: '>=0'
