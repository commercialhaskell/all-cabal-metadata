homepage: http://github.com/freckle/yesod-auth-oauth2
changelog-type: markdown
hash: f498842159acaa7b0457e206e89f7807aa282f959e5a06ca64785e090b41501d
test-bench-deps:
  base: '>=4.9.0.0 && <5'
  hspec: '>=2.7.8 && <2.8'
  uri-bytestring: '>=0.3.3.0 && <0.4'
  yesod-auth-oauth2: -any
maintainer: engineering@freckle.com
synopsis: OAuth 2.0 authentication plugins
changelog: |
  ## [_Unreleased_](https://github.com/thoughtbot/yesod-auth-oauth2/compare/v0.6.3.3...main)

  None

  ## [v0.6.3.3](https://github.com/thoughtbot/yesod-auth-oauth2/compare/v0.6.3.2...v0.6.3.3)

  No changes, released to test release automation.

  ## [v0.6.3.2](https://github.com/thoughtbot/yesod-auth-oauth2/compare/v0.6.3.1...v0.6.3.2)

  - Remove dependencies upper bounds

  ## [v0.6.3.1](https://github.com/thoughtbot/yesod-auth-oauth2/compare/v0.6.3.0...v0.6.3.1)

  - Relax dependencies bounds

  ## [v0.6.3.0](https://github.com/thoughtbot/yesod-auth-oauth2/compare/v0.6.2.3...v0.6.3.0)

  - Expose `onDispatchError` and generic `OtherDispatchError` for passthrough log
  - Don't throw exceptions; handle all errors through the set-message-redirect
    path
  - Respect `onErrorHtml` for said error-handling
  - Support custom widget in Google plugin
    [@jmorag](https://github.com/freckle/yesod-auth-oauth2/pull/149)

  ## [v0.6.2.3](https://github.com/thoughtbot/yesod-auth-oauth2/compare/v0.6.2.2...v0.6.2.3)

  - Allow bytestring-0.11 and cryptonite 0.28
  - Test with GHC 8.10 on CI

  ## [v0.6.2.2](https://github.com/thoughtbot/yesod-auth-oauth2/compare/v0.6.2.1...v0.6.2.2)

  - Consistent dependencies bounds in all targets

  ## [v0.6.2.1](https://github.com/thoughtbot/yesod-auth-oauth2/compare/v0.6.2.0...v0.6.2.1)

  - Adjust lower bounds on cryptonite

  ## [v0.6.2.0](https://github.com/thoughtbot/yesod-auth-oauth2/compare/v0.6.1.7...v0.6.2.0)

  - Filter `+` from `state` tokens

    This decreases entropy in the token slightly, but ensures that providers
    performing unexpected +/space/%20 encoding (e.g. ClassLink) still function.

    See [#140](https://github.com/thoughtbot/yesod-auth-oauth2/pull/140).

  - Add ClassLink provider

  ## [v0.6.1.7](https://github.com/thoughtbot/yesod-auth-oauth2/compare/v0.6.1.6...v0.6.1.7)

  - Relax upper bounds on `hoauth2` and `http-client`

  ## [v0.6.1.6](https://github.com/thoughtbot/yesod-auth-oauth2/compare/v0.6.1.5...v0.6.1.6)

  - Revert back to Authorization-header-only `fetchAccessToken` function
  - Add `authOAuth2'` and `authOAuth2Widget'`, which use `fetchAccessToken2`

  ## [v0.6.1.5](https://github.com/thoughtbot/yesod-auth-oauth2/compare/v0.6.1.4...v0.6.1.5)

  - Update to GHC-8.8, and hoauth2-1.14
  - Drop CI-backed support for GHC-8.4

  ## [v0.6.1.4](https://github.com/thoughtbot/yesod-auth-oauth2/compare/v0.6.1.3...v0.6.1.4)

  - Tighten upper bound on hoauth2

  ## [v0.6.1.3](https://github.com/thoughtbot/yesod-auth-oauth2/compare/v0.6.1.2...v0.6.1.3)

  - Replace `System.Random` state token generation with `cryptonite`
  - Allow aeson-1.5 and hoauth2-1.14
  - Add WordPress.com provider
    [@nbloomf](https://github.com/thoughtbot/yesod-auth-oauth2/pull/130)

  ## [v0.6.1.2](https://github.com/thoughtbot/yesod-auth-oauth2/compare/v0.6.1.1...v0.6.1.2)

  - Don't report our own errors like OAuth2 ErrorResponses

  ## [v0.6.1.1](https://github.com/thoughtbot/yesod-auth-oauth2/compare/v0.6.1.0...v0.6.1.1)

  - Added AzureAD provider
  - COMPATIBILITY: Use `hoauth2-1.8.1`
  - COMPATIBILITY: Test with GHC 8.6.3, and not 8.2

  ## [v0.6.1.0](https://github.com/thoughtbot/yesod-auth-oauth2/compare/v0.6.0.0...v0.6.1.0)

  - Allow http-client-0.6

  ## [v0.6.0.0](https://github.com/thoughtbot/yesod-auth-oauth2/compare/v0.5.3.0...v0.6.0.0)

  - Remove deprecated Github module

  ## [v0.5.3.0](https://github.com/thoughtbot/yesod-auth-oauth2/compare/v0.5.2.0...v0.5.3.0)

  - Allow aeson-1.4 and hoauth2-1.8

  ## [v0.5.2.0](https://github.com/thoughtbot/yesod-auth-oauth2/compare/v0.5.1.0...v0.5.2.0)

  - `InvalidProfileResponse` was replaced with different, situation-specific
    constructors; the exception type is considered internal API, but end-users may
    see them in logs, or if they (unexpectedly) escape our error-handling
  - Errors during log-in no longer result in 4XX or 5XX responses; they now
    redirect to `LoginR` with the exception details logged and something
    user-appropriate displayed via `setMessage`

  ## [v0.5.1.0](https://github.com/thoughtbot/yesod-auth-oauth2/compare/v0.5.0.0...v0.5.1.0)

  - Added GitLab provider
  - Added properly-named `GitHub` module, deprecated `Github`
  - Store `refreshToken` in `credsExtra`

  ## [v0.5.0.0](https://github.com/thoughtbot/yesod-auth-oauth2/compare/v0.4.1.0...v0.5.0.0)

  - COMPATIBILITY: Allow and require yesod-1.6
  - COMPATIBILITY: Stop testing GHC 8.0 on CI

  ## [v0.4.1.0](https://github.com/thoughtbot/yesod-auth-oauth2/compare/v0.4.0.1...v0.4.1.0)

  - Check for `error`s in callback query params, as described in the
    [spec](https://tools.ietf.org/html/rfc6749#section-4.1.2.1)

  ## [v0.4.0.1](https://github.com/thoughtbot/yesod-auth-oauth2/compare/v0.4.0.0...v0.4.0.1)

  - COMPATIBILITY: Allow `http-types-0.12`

  ## [v0.4.0.0](https://github.com/thoughtbot/yesod-auth-oauth2/compare/v0.3.1...v0.4.0.0)

  - COMPATIBILITY: Allow `aeson-1.3`
  - COMPATIBILITY: Dropped a lot of information from `credsExtra`:

    **TL;DR**: you'll no longer find things like `username` or `email` as keys in
    the `credsExtra` map. Instead, you'll find the encoded profile response we
    received and the OAuth access token. You can/should do your own decoding or
    make your own follow-up requests to get extra data about your users.

    This reduced a lot of complexity, likely duplication between our decoding and
    yours, and (I think) makes the library easier to use.

    - [Issue](https://github.com/thoughtbot/yesod-auth-oauth2/issues/71)
    - [PR](https://github.com/thoughtbot/yesod-auth-oauth2/pull/100)

  - COMPATIBILITY: Support GHC-8.2
  - COMPATIBILITY: Drop (claimed, but never tested) support for GHC-7.8 & 7.10
  - LICENSE: fixed vague licensing (MIT now)

  ## [v0.3.1](https://github.com/thoughtbot/yesod-auth-oauth2/compare/v0.3.0...v0.3.1)

  - Internal project cleanup

  ## [v0.3.0](https://github.com/thoughtbot/yesod-auth-oauth2/compare/v0.2.4...v0.3.0)

  - COMPATIBILITY: Use `hoauth2-1.3`

  ## [v0.2.4](https://github.com/thoughtbot/yesod-auth-oauth2/compare/v0.2.1...v0.2.4)

  - FIX: Update Nylas provider
  - NEW: Battle.Net provider
  - NEW: Bitbucket provider
  - NEW: Salesforce provider

  ## [v0.2.1](https://github.com/thoughtbot/yesod-auth-oauth2/compare/v0.2.0...v0.2.1)

  - FIX: Fix collision in GitHub `email` / `public_email` extras value

  ## [v0.2.0](https://github.com/thoughtbot/yesod-auth-oauth2/compare/v0.1.10...v0.2.0)

  - NEW: Slack provider
    ([@jsteiner](https://github.com/thoughtbot/yesod-auth-oauth2/commit/aad8bd88eabf9fcf368d044e7003e5d323985837))

  ## [v0.1.10](https://github.com/thoughtbot/yesod-auth-oauth2/compare/v0.1.9...v0.1.10)

  - FIX: `location` is optional in GitHub response

  ## [v0.1.9](https://github.com/thoughtbot/yesod-auth-oauth2/compare/v0.1.8...v0.1.9)

  - COMPATIBILITY: Allow `transformers-0.5`
    ([@paul-rouse](https://github.com/thoughtbot/yesod-auth-oauth2/commit/120104b5348808f72877962c329a998434addace))

  ## [v0.1.8](https://github.com/thoughtbot/yesod-auth-oauth2/compare/v0.1.7...v0.1.8)

  - COMPATIBILITY: Allow `aeson-0.11`
    ([@k-bx](https://github.com/thoughtbot/yesod-auth-oauth2/commit/6e940b19e2d56080c7a749aeb29e143a17dad65c))

  ## [v0.1.7](https://github.com/thoughtbot/yesod-auth-oauth2/compare/v0.1.6...v0.1.7)

  - NEW: Prefer primary email in GitHub provider
  - NEW: Include `public_email` in GitHub extras response
  - REMOVED: Remove Twitter provider

  ## [v0.1.6](https://github.com/thoughtbot/yesod-auth-oauth2/compare/v0.1.5...v0.1.6)

  - NEW: Nicer error message on invalid `code`
    ([@silky](https://github.com/thoughtbot/yesod-auth-oauth2/commit/7354c36e1326d298e543fa65cf226153ed4a8a0b))

  ## [v0.1.5](https://github.com/thoughtbot/yesod-auth-oauth2/compare/v0.1.4...v0.1.5)

  - FIX: Incorrect `state` parameter handling

  ## [v0.1.4](https://github.com/thoughtbot/yesod-auth-oauth2/compare/v0.1.3...v0.1.4)

  - FIX: Use newer Nylas endpoint

  ## [v0.1.3](https://github.com/thoughtbot/yesod-auth-oauth2/compare/v0.1.2...v0.1.3)

  - NEW: EveOnline provider
    ([@Drezil](https://github.com/thoughtbot/yesod-auth-oauth2/pull/33))
  - NEW: Nylas provider
    ([@bts](https://github.com/thoughtbot/yesod-auth-oauth2/commit/815d44346403af0052a48aa844f506211bdc2863))

  ## [v0.1.2](https://github.com/thoughtbot/yesod-auth-oauth2/compare/v0.1.1...v0.1.2)

  - NEW: A more different Google provider
    ([@ssaavedra](https://github.com/thoughtbot/yesod-auth-oauth2/pull/32))

  ## [v0.1.1](https://github.com/thoughtbot/yesod-auth-oauth2/compare/v0.1.0...v0.1.1)

  - NEW: Twitter provider

  ## [v0.1.0](https://github.com/thoughtbot/yesod-auth-oauth2/compare/v0.0.12...v0.1.0)

  - REMOVED: Google provider, use `Yesod.Auth.GoogleEmail2`
  - CHANGED: Learn was renamed to Upcase
  - COMPATIBILITY: Drop support for GHC-6
  - COMPATIBILITY: Support GHC-7.10

  ## [v0.0.12](https://github.com/thoughtbot/yesod-auth-oauth2/compare/v0.0.11...v0.0.12)

  - COMPATIBILITY: Allow `transformers-0.4`
    ([@snoyberg](https://github.com/thoughtbot/yesod-auth-oauth2/pull/21))

  ## [v0.0.11](https://github.com/thoughtbot/yesod-auth-oauth2/compare/v0.0.10...v0.0.11)

  - COMPATIBILITY: Allow `aeson-0.8`
    ([@gfontenot](https://github.com/thoughtbot/yesod-auth-oauth2/pull/15))

  ## [v0.0.10](https://github.com/thoughtbot/yesod-auth-oauth2/compare/v0.0.9...v0.0.10)

  - COMPATIBILITY: Allow Yesod 1.4
    ([@gregwebs](https://github.com/thoughtbot/yesod-auth-oauth2/pull/14))

  ## [v0.0.9](https://github.com/thoughtbot/yesod-auth-oauth2/compare/v0.0.8...v0.0.9)

  - NEW: Spotify
    ([@benekastah](https://github.com/thoughtbot/yesod-auth-oauth2/pull/13))

  ## [v0.0.8](https://github.com/thoughtbot/yesod-auth-oauth2/compare/v0.0.7...v0.0.8)

  - FIX: Username may be missing in GitHub responses
    ([@skade](https://github.com/thoughtbot/yesod-auth-oauth2/pull/12))

  ## [v0.0.7](https://github.com/thoughtbot/yesod-auth-oauth2/compare/v0.0.6...v0.0.7)

  - NEW: Scope support in GitHub provider
    ([@skade](https://github.com/thoughtbot/yesod-auth-oauth2/pull/11))

  ## [v0.0.6](https://github.com/thoughtbot/yesod-auth-oauth2/compare/v0.0.5.1...v0.0.6)

  - NEW: GitHub provider
    ([@freiric](https://github.com/thoughtbot/yesod-auth-oauth2/pull/10))
  - COMPATIBILITY: flag-driven `network`/`network-uri` dependency

  ## [v0.0.5.1](https://github.com/thoughtbot/yesod-auth-oauth2/compare/v0.0.5...v0.0.5.1)

  - DOCUMENTATION: fix data declaration, allows Haddocks to build

  ## [v0.0.5](https://github.com/thoughtbot/yesod-auth-oauth2/compare/v0.0.4...v0.0.5)

  - COMPATIBILITY: Allow `yesod-core-1.3` and target `yesod-auth-1.3`
    ([@maxcan](https://github.com/thoughtbot/yesod-auth-oauth2/pull/7))
  - COMPATIBILITY: Target `haouth2-0.4`
    ([@katyo](https://github.com/thoughtbot/yesod-auth-oauth2/pull/9))

  ## [v0.0.4](https://github.com/thoughtbot/yesod-auth-oauth2/compare/v0.0.3...v0.0.4)

  - COMPATIBILITY: Allow `text-1.*`
  - COMPATIBILITY: Allow `lifted-base-0.2.*`

  ## [v0.0.3](https://github.com/thoughtbot/yesod-auth-oauth2/compare/v0.0.2...v0.0.3)

  - FIX: replace `error` crash with `throwIO` exception

  ## [v0.0.2](https://github.com/thoughtbot/yesod-auth-oauth2/compare/v0.0.1...v0.0.2)

  - Various documentation fixes.

  ## [v0.0.1](https://github.com/thoughtbot/yesod-auth-oauth2/tree/v0.0.1)

  Initial version. Maintainer-ship taken over by
  [@pbrisbin](https://github.com/thoughtbot/yesod-auth-oauth2/pull/1).
basic-deps:
  warp: '>=3.3.14 && <3.4'
  http-client: '>=0.4.0 && <0.7'
  bytestring: '>=0.9.1.4 && <0.11'
  unliftio: '>=0.2.14 && <0.3'
  yesod-core: '>=1.6.0 && <1.7'
  base: '>=4.9.0.0 && <5'
  hoauth2: '>=1.11.0 && <1.17'
  aeson-pretty: '>=0.8.8 && <0.9'
  text: '>=0.7 && <1.3'
  safe-exceptions: '>=0.1.7.1 && <0.2'
  memory: '>=0.15.0 && <0.16'
  containers: '>=0.6.2.1 && <0.7'
  uri-bytestring: '>=0.3.3.0 && <0.4'
  yesod: '>=1.6.1.0 && <1.7'
  cryptonite: '>=0.25 && <0.28'
  mtl: '>=2.2.2 && <2.3'
  errors: '>=2.3.0 && <2.4'
  http-conduit: '>=2.0 && <2.4'
  load-env: '>=0.2.1.0 && <0.3'
  http-types: '>=0.8 && <0.13'
  microlens: '>=0.4.11.2 && <0.5'
  aeson: '>=0.6 && <1.6'
  yesod-auth: '>=1.6.0 && <1.7'
  yesod-auth-oauth2: -any
all-versions:
- 0.0.1
- 0.0.2
- 0.0.3
- 0.0.4
- 0.0.5
- 0.0.5.1
- 0.0.6
- 0.0.7
- 0.0.8
- 0.0.9
- 0.0.10
- 0.0.11
- 0.0.12
- 0.1.0
- 0.1.1
- 0.1.2
- 0.1.3
- 0.1.4
- 0.1.5
- 0.1.6
- 0.1.7
- 0.1.8
- 0.1.9
- 0.1.10
- 0.2.0
- 0.2.1
- 0.2.2
- 0.2.4
- 0.3.0
- 0.3.1
- 0.4.0.0
- 0.4.0.1
- 0.4.1.0
- 0.5.0.0
- 0.5.1.0
- 0.5.2.0
- 0.5.3.0
- 0.6.0.0
- 0.6.1.0
- 0.6.1.1
- 0.6.1.2
- 0.6.1.3
- 0.6.1.4
- 0.6.1.5
- 0.6.1.6
- 0.6.1.7
- 0.6.2.0
- 0.6.2.1
- 0.6.2.2
- 0.6.2.3
- 0.6.3.0
- 0.6.3.1
- 0.6.3.3
author: |-
  Tom Streller,
  Patrick Brisbin,
  Freckle Engineering
latest: 0.6.3.3
description-type: markdown
description: |
  # Yesod.Auth.OAuth2

  OAuth2 `AuthPlugin`s for Yesod.

  ## Usage

  ```hs
  import Yesod.Auth
  import Yesod.Auth.OAuth2.GitHub

  instance YesodAuth App where
      -- ...

      authPlugins _ = [oauth2GitHub clientId clientSecret]

  clientId :: Text
  clientId = "..."

  clientSecret :: Text
  clientSecret = "..."
  ```

  Some plugins, such as GitHub and Slack, have scoped functions for requesting
  additional information:

  ```hs
  oauth2SlackScoped [SlackBasicScope, SlackEmailScope] clientId clientSecret
  ```

  ## Working with Extra Data

  We put the minimal amount of user data possible in `credsExtra` -- just enough
  to support you parsing or fetching additional data yourself.

  For example, if you work with GitHub and GitHub user profiles, you likely
  already have a model and a way to parse the `/user` response. Rather than
  duplicate all that in our library, we try to make it easy for you to re-use that
  code yourself:

  ```hs
  authenticate creds = do
      let
          -- You can run your own FromJSON parser on the response we already have
          eGitHubUser :: Either String GitHubUser
          eGitHubUser = getUserResponseJSON creds

          -- Avert your eyes, simplified example
          Just accessToken = getAccessToken creds
          Right githubUser = eGitHubUser

      -- Or make followup requests using our access token
      runGitHub accessToken $ userRepositories githubUser

      -- Or store it for later
      insert User
          { userIdent = credsIdent creds
          , userAccessToken = accessToken
          }
  ```

  **NOTE**: Avoid looking up values in `credsExtra` yourself; prefer the provided
  `get` functions. The data representation itself is no longer considered public
  API.

  ## Local Providers

  If we don't supply a "Provider" (e.g. GitHub, Google, etc) you need, you can
  write your own using our provided `Prelude`:

  ```haskell
  import Yesod.Auth.OAuth2.Prelude

  pluginName :: Text
  pluginName = "mysite"

  oauth2MySite :: YesodAuth m => Text -> Text -> AuthPlugin m
  oauth2MySite clientId clientSecret =
      authOAuth2 pluginName oauth2 $ \manager token -> do
          -- Fetch a profile using the manager and token, leave it a ByteString
          userResponse <- -- ...

          -- Parse it to your preferred identifier, e.g. with Data.Aeson
          userId <- -- ...

          -- See authGetProfile for the typical case

          pure Creds
              { credsPlugin = pluginName
              , credsIdent = userId
              , credsExtra = setExtra token userResponse
              }
    where
      oauth2 = OAuth2
          { oauthClientId = clientId
          , oauthClientSecret = Just clientSecret
          , oauthOAuthorizeEndpoint = "https://mysite.com/oauth/authorize"
          , oauthAccessTokenEndpoint = "https://mysite.com/oauth/token"
          , oauthCallback = Nothing
          }
  ```

  The `Prelude` module is considered public API, though we may build something
  higher-level that is more convenient for this use-case in the future.

  ## Development & Tests

  ```console
  stack setup
  stack build --dependencies-only
  stack build --pedantic --test
  ```

  Please also run HLint and Weeder before submitting PRs.

  ---

  [CHANGELOG](./CHANGELOG.md) | [LICENSE](./LICENSE)
license-name: MIT
