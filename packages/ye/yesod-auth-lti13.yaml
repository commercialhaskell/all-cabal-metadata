homepage: ''
changelog-type: markdown
hash: d1d83bdd1508e61f57024b43f841fbe4b83c95e21b8733da17ac88e90b85c87b
test-bench-deps: {}
maintainer: Jade <software at lfcode dot ca>
synopsis: A yesod-auth plugin for LTI 1.3
changelog: |+
  # Revision history for yesod-auth-lti13

  ## 0.2.0.2 -- 2021-07-28

  * lti13: add anonymization of tokens

  ## 0.2.0.1 -- 2021-02-26

  * Fix version bounds
  * Change the LTI-RI URL as our previous one got deleted (?!)

  ## 0.2.0.0 -- 2021-01-09

  * BREAKING: Change the signatures of the `getLtiIss`, `getLtiSub` and
    `getLtiToken` functions to operate on `credsExtra` instead of sessions.

  ## 0.1.2.2 -- 2020-09-19

  * No changes

  ## 0.1.2.1 -- 2020-09-16

  * No changes

  ## 0.1.2.0 -- 2020-09-16

  * Add `authLTI13WithWidget`

  ## 0.1.1.0 -- 2020-09-15

  * Handle Canvas Cloud setting all their issuers the same.
  * Remove dependency on changed jose-jwt. Thanks @tekul for the help on this.

  ## 0.1.0.0 -- 2020-08-13

  * Unreleased

basic-deps:
  warp: '>=3.3.13 && <3.4'
  http-client: '>=0.6.4 && <0.7'
  bytestring: '>=0.10.10 && <0.11'
  yesod-auth-lti13: -any
  yesod-core: '>=1.6.18 && <1.7'
  base: '>=4.12 && <5'
  time: '>=1.0.0 && <1.11'
  base64-bytestring: '>=1.0.0 && <1.2'
  aeson-pretty: '>=0.8.8 && <0.9'
  text: '>=1.2.4 && <1.3'
  safe-exceptions: '>=0.1.7 && <0.2'
  lti13: ==0.2.0.2
  containers: '>=0.6.2 && <0.7'
  yesod: '>=1.6.1 && <1.7'
  jose-jwt: '>=0.8.0 && <0.10.0'
  cryptonite: '>=0.26 && <0.28'
  oidc-client: '>=0.5.1 && <0.7'
  random: '>=1.1 && <1.2'
  http-conduit: '>=2.3.7 && <2.4'
  load-env: '>=0.2.1 && <0.3'
  microlens: '>=0.4.11 && <0.5'
  aeson: '>=1.4.7 && <1.6'
  yesod-auth: '>=1.6.10 && <1.7'
all-versions:
- 0.1.1.0
- 0.1.2.0
- 0.1.2.1
- 0.1.2.2
- 0.2.0.0
- 0.2.0.1
- 0.2.0.2
author: Jade
latest: 0.2.0.2
description-type: markdown
description: |
  # yesod-auth-lti13

  A [lti13](https://hackage.haskell.org/package/lti13) based authentication
  provider for Yesod.

  ## Usage

  Implement an `instance YesodAuthLTI13 App` for your Yesod site, using your
  persistence mechanisms. See the example for details.

  To build the example, pass `-f example` with your cabal commands. You can also
  `cabal configure -f example` to make it apply to commands by default (and also
  enable it for haskell-language-server).

  A sample configuration of the LTI 1.3 reference implementation for a site using
  this library is available here: https://lti-ri.imsglobal.org/platforms/1812/

  If this link breaks in the future, see the documentation at ../referencetool in
  the repo on how to create a new one.

  The following configuration is used on the provider (LMS) side, assuming your
  `AuthR` is `/auth`:

  * `oidc_initiation_url`: https://YOURAPPROOT/auth/page/lti13/initiate
  * `target_link_uri`: https://YOURAPPROOT
  * Public JWK URL: https://YOURAPPROOT/auth/page/lti13/jwks
  * Redirect URLs: https://YOURAPPROOT/auth/page/lti13/authenticate
license-name: LGPL-3.0-only
