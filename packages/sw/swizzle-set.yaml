all-versions:
- 0.1.0.0
- 0.2.0.0
author: Yoshikuni Jujo
basic-deps:
  base: '>=4.7 && <5'
  template-haskell: <3
changelog: |
  # Changelog for `swizzle-set`

  All notable changes to this project will be documented in this file.

  The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),
  and this project adheres to the
  [Haskell Package Versioning Policy](https://pvp.haskell.org/).

  ## Unreleased

  ## 0.1.0.0 - YYYY-MM-DD
changelog-type: markdown
description: "# swizzle-set\n\n```hsakell\n{-# LANGUAGE FlexibleContexts #-}\n\nimport
  Data.SwizzleSet qualified as SwzS\nimport Data.SwizzleSet.TH\n\ntype TupInt10 =
  (Int, Int, Int, Int, Int, Int, Int, Int, Int, Int)\n\nnums :: TupInt10\nnums = (0,
  1, 2, 3, 4, 5, 6, 7, 8, 9)\n\n\nfoo :: (Int, Int, Int, String, Int, Int, Int, Int,
  Int, Int)\nfoo = SwzS.ywv (100, \"hello\", 300) nums -- (0, 100, 2, \"hello\", 300,
  5, 6, 7, 8)\n\nfoo2, foo3, foo4 :: TupInt10\nfoo2 = SwzS.z nums 123 -- (0, 1, 123,
  3, 4, 5, 6, 7, 8, 9)\nfoo3 = SwzS.u nums 321 -- (0, 1, 2, 3, 4, 321, 6, 7, 8, 9)\nfoo4
  = SwzS.q nums 333 -- (0, 1, 2, 3, 4, 5, 6, 7, 8, 333)\n\nswizzleSet \"\" \"zvusq\"\n\nbar
  :: TupInt10\nbar = zvusq nums (100, 200, 300, 400, 500) -- (0, 1, 100, 3, 200, 300,
  6, 400, 8, 500)\n```\n\n```haskell\nimport GHC.Generics\nimport Data.Tuple\nimport
  Data.SwizzleSet qualified as SwzS\nimport Data.SwizzleSet.Class\n\nnewtype Red =
  Red Double deriving Show\nnewtype Green = Green Double deriving Show\nnewtype Blue
  = Blue Double deriving Show\nnewtype Alpha = Alpha Double deriving Show\n\ndata
  Argb = Argb Alpha Red Green Blue deriving (Show, Generic)\n\ninstance SwizzleSet1
  Argb Alpha where type X Argb Alpha = Argb\ninstance SwizzleSet2 Argb Red where type
  Y Argb Red = Argb\ninstance SwizzleSet3 Argb Green where type Z Argb Green = Argb\ninstance
  SwizzleSet4 Argb Blue where type W Argb Blue = Argb\n\nsample :: Argb\nsample =
  Argb (Alpha 0.5) (Red 0.9) (Green 0.3) (Blue 0.2)\n\nlessRed :: Argb\nlessRed =
  SwzS.y sample (Red 0.4) -- Argb (Alpha 0.5) (Red 0.4) (Green 0.3) (Blue 0.2)\n\nlessAlphaGreen
  :: Argb\nlessAlphaGreen = SwzS.xz sample (Alpha 0.2, Green 0.1)\n\t-- Argb (Alpha
  0.2) (Red 0.4) (Green 0.1) (Bluye 0.2)\n```\n\n```haskell\n{-# LANGUAGE FlexibleContexts
  #-}\n\nimport Data.SwizzleSet.TH\n\nswizzleSet \"set\" \"ywuq\"\n\nsample :: (Int,
  Int, Int, Int, Int, Int, Int, Int, Int, Int)\nsample = setYwuq (0, 1, 2, 3, 4, 5,
  6, 7, 8, 9) (100, 200, 300, 400)\n\t-- (0, 100, 2, 200, 4, 300, 6, 7, 8, 400)\n```\n"
description-type: markdown
hash: 5fe7be6695d589de962d79146f1e17b0737d379ef5a3b5a27cf2656f741f73f2
homepage: https://github.com/YoshikuniJujo/swizzle-set#readme
latest: 0.2.0.0
license-name: BSD-3-Clause
maintainer: yoshikuni.jujo@gmail.com
synopsis: Swizzle set functions
test-bench-deps:
  base: '>=4.7 && <5'
  swizzle-set: '>=0'
  template-haskell: <3
