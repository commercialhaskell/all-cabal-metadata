homepage: ''
changelog-type: markdown
hash: 06a8372e2d6df1eaad798830cf914279c64eddecc36a086f4744a115e371311c
test-bench-deps: {}
maintainer: derek.a.elkins@gmail.com
synopsis: A simple web server for serving directories.
changelog: |
  # Change Log
  All notable changes to this project will be documented in this file.

  ## 0.5.0.1 - 2021-03-07
  ### Changed
  - Upper bound bumps.

  ## 0.5.0.0 - 2020-01-02
  ### Added
  - Added back in support for self-signed certificate generation.

  ## 0.4.6.0 - 2019-10-20
  ### Changed
  - Upper bound bumps.

  ## 0.4.5.0 - 2019-10-14
  ### Added
  - `--content-type` option to override content types for a given file extension.

  ## 0.4.4.0 - 2019-02-04
  ### Changed
  - Unescape URIs before generating directory listings.

  ## 0.4.3.0 - 2018-09-15
  ### Changed
  - Upper bound bumps.
  - Using -X to add headers will remove headers added by default. Before it would lead to duplicate headers.

  ## 0.4.2.0 - 2018-06-01
  ### Changed
  - Store uploaded files directly in target directory rather than first uploading to a temp directory then copying.

  ## 0.4.1.0 - 2018-02-14
  ### Added
  - Upload only mode.
  - Options to control STUN.
  - Options to control what happens when a file is uploaded which already exists.

  ## 0.4.0.0 - 2017-09-10
  ### Changed
  - Upper bound bumps.
  ### Removed
  - TLS certificate generation. The functionality was removed from the crypto library this depends upon.

  ## 0.3.1.2 - 2015-08-25
  ### Changed
  - Upper bound bumps.
  - Make STUN server look up a bit more robust.

  ## 0.3.1.1 - 2015-04-17
  ### Changed
  - Upper bound bump to support GHC 7.10.

  ## 0.3.1.0 - 2015-01-07
  ### Added
  - Added Public mode.

  ### Changed
  - Dependency bounds changed on warp-tls to pull in critical bug fix.

  ## 0.3.0.0 - 2014-12-29
  ### Added
  - CHANGELOG.md and README.md
  - Support for generating throw-away TLS certificates.
  - Support for generating password for Basic Authentication.
  - Support for adding custom headers to all responses.
  - Support getting public IP via Google STUN server.
  - Added Quiet mode and Dev Mode.

  ### Changed
  - Change defaults to use HTTPS and Basic Authentication.
  - Change display of connection information to a copyable address.
  - Currently works around a bug in x509 to generate valid certificates.  (Pull request outstanding.)

  ### Removed
  - \-\-allow\-http is removed.  It did not appear to work anyway.

  ## 0.2.0.0 - 2014-12-06
  ### Added
  - Support for uploading files.  This includes overwriting existing files.

  ## 0.1.0.0 - 2014-11-11
  ### Added
  - This is intended to be fully usable for it's intended purpose, namely statically serving
  a directory tree.
basic-deps:
  warp: '>=3.2.22 && <3.4'
  bytestring: '>=0.10.8 && <0.11'
  wai: '>=3.2.1 && <3.3'
  hourglass: '>=0.2.11 && <0.3'
  base: '>=4.11.1 && <4.15'
  pem: '>=0.2.4 && <0.3'
  filepath: '>=1.4.2 && <1.5'
  asn1-types: '>=0.3.3 && <0.4'
  network: '>=2.7.0 && <3.2'
  containers: '>=0.6.0 && <0.7'
  x509: '>=1.7.5 && <1.8'
  warp-tls: '>=3.2.4 && <3.4'
  cryptonite: '>=0.25 && <0.29'
  network-uri: '>=2.6.0 && <2.7'
  wai-extra: '>=3.0.22 && <3.2'
  transformers: '>=0.5.5 && <0.6'
  wai-middleware-static: '>=0.8.3 && <0.10'
  asn1-encoding: '>=0.9.6 && <0.10'
  network-bsd: '>=2.7.0 && <2.9'
  resourcet: '>=1.2.1 && <1.3'
  http-types: '>=0.12.1 && <0.13'
  directory: '>=1.3.1 && <1.4'
all-versions:
- 0.1.0.0
- 0.1.0.1
- 0.2.0.0
- 0.3.0.0
- 0.3.0.1
- 0.3.1.0
- 0.3.1.1
- 0.3.1.2
- 0.4.0.0
- 0.4.0.1
- 0.4.1.0
- 0.4.2.0
- 0.4.3.0
- 0.4.5.0
- 0.4.6.0
- 0.5.0.0
- 0.5.0.1
author: Derek Elkins
latest: 0.5.0.1
description-type: markdown
description: "Simple Web Server\n=================\n\nWhat it is\n----------\n\n`sws`
  is a self-contained web server that serves files which runs on Linux, Windows and
  (untested) Mac OS X.  Once built, \nthe executable should have no dependencies,
  e.g., it does not require OpenSSL.  Convenience and security are the\nmain goals.
  \ It has no config files, and only a few, if any, easily provided command line parameters
  should be necessary.\nIf convenience and security conflict, I'm willing to sacrifice
  a little convenience for security, but only a little.\nOften such conflicts are
  largely resolvable.  For example, requiring a password and using TLS improve security,
  but\nmaking a password or a certificate are inconvenient, so `sws` can generate
  these.\n\n### Use-case 1: Large file transfer\n    \nYou want to send a large file
  to someone.  You browse to the directory containing it, type \"`sws`\", and give
  them\nyour public IP.  They browse to it and download.  Maybe they are the ones
  sending the file, but aren't \"technical\".\nYou browse to an empty directory, type
  \"`sws -w`\" or \"`sws -U`\", and give them your public IP.  They browse to it and
  upload.\n\nIn reality, you need to figure out what your public IP is and open a
  port in your firewall.  `sws` will currently\nuse Google's STUN server to attempt
  to figure out your public IP.\n\n### Use-case 2: Client-side code demo/development\n\nYou
  build an [unhosted](https://unhosted.org/) web application or you mock out AJAX
  responses.  You can do some\nsimple testing by running \"`sws -d`\".  (Admittedly,
  using a file URI will probably work pretty well too, though maybe\nnot so much for
  mocked POST requests...)  You want to show a friend.  Just make that \"`sws`\".\n\n###
  Use-case 3: Instant read-only Git hosting\n\n```bash\ngit clone --bare /path/to/myrepo
  ~/public/myrepo.git\ncd ~/public/myrepo.git\nmv hooks/post-update.sample hooks/post-update\nchmod
  a+x hooks/post-update\ngit update-server-info\nsws --no-compress -H example.com
  ~/public/\n```\n\nElsewhere:\n```bash\ngit -c http.sslVerify=false clone https://example.com:3000/myrepo.git\n```\n\nThis
  would be even more instant with darcs.\n\nWhat it isn't\n-------------\n\nThis is
  not an app server.  It reads and writes files, and that's all it will ever do.  There
  is no way to add\ncode to it.  The Haskell ecosystem has plenty of good web frameworks.
  \ This is not one of them.  It's an\napplication, not a framework.  (Well... you
  *could* do something with named pipes and/or interesting file systems...\nbut you
  really shouldn't.)\n"
license-name: BSD-3-Clause
