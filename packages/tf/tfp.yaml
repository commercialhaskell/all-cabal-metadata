all-versions:
- '0.1'
- '0.2'
- '0.3'
- '0.4'
- '0.5'
- '0.6'
- '0.7'
- '0.8'
- '1.0'
- 1.0.0.1
- 1.0.0.2
- 1.0.1
- 1.0.1.1
- 1.0.2
author: Peter Gavin, Henning Thielemann
basic-deps:
  base: '>=4.5 && <5'
  utility-ht: '>=0.0.10 && <0.1'
changelog: |
  1.0:

  * Change representation of decimals to an inherently normalized form
    that is symmetric with respect to positive and negative numbers.

  * singularize module names

  * separate Decimal and general representation

  * use Proxys instead of plain types for data functions
    This is also consistent with new Nat kind,
    where types of kind Nat have no data values.

  * Ord: make infix operators classes and prefix functions type functions
    It seems to be more natural to me to write
       x :<: y   and   GTT x y ~ True

  * Num, Bool, Ord: remove T suffixes from functions
    Use qualification instead.
changelog-type: markdown
description: |-
  TFP is an abbreviation for Type Family Programming.
  It provides implementations of type-level integers and booleans,
  and (eventually) simple type-level data structures.
  It uses type families as functions to produce new types,
  which provides an intuitive way to parameterize data types
  and functions on numerical values at compile time.
description-type: haddock
hash: d73d7d5f504f1af210443fc241515156852c217e549f61741afe1e30ee28da67
homepage: http://www.haskell.org/haskellwiki/Type_arithmetic
latest: 1.0.2
license-name: BSD-3-Clause
maintainer: haskell@henning-thielemann.de
synopsis: Type-level integers, booleans, lists using type families
test-bench-deps:
  QuickCheck: '>=1.2.0.0'
  base: '>=0'
  tfp: '>=0'
