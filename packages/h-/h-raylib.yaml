homepage: ''
changelog-type: markdown
hash: 9d10c64b42c06dc6ef2f9f3655f861dabbef9ca54ce8098225b781d6937e3ff9
test-bench-deps: {}
maintainer: Anut
synopsis: Raylib bindings for Haskell
changelog: "# h-raylib changelog\r\n\r\n## Version 4.6.0.4\r\n_16 June, 2023_\r\n\r\n-
  Updated raylib to the master branch\r\n\r\n\\[[#19](https://github.com/Anut-py/h-raylib/pull/19)\\]\r\n\r\n-
  Changed all the `Raylib.Util` functions to use `MonadIO` for flexibility\r\n\r\n\\[[#20](https://github.com/Anut-py/h-raylib/pull/20)\\]\r\n\r\n-
  Changed `CFloat` to `Float` in `drawCapsule` and `drawCapsuleWires`\r\n\r\n## Version
  4.6.0.3\r\n_23 April, 2023_\r\n\r\n- Updated raylib to the master branch\r\n\r\n\\[[#18](https://github.com/Anut-py/h-raylib/pull/18)\\]\r\n\r\n-
  Added lenses for raylib data structures\r\n\r\n## Version 4.6.0.2\r\n_8 April, 2023_\r\n\r\n-
  Fixed a bug in `clamp`\r\n- Updated raylib to the master branch\r\n\r\n## Version
  4.6.0.1\r\n_2 April, 2023_\r\n\r\n- Created the `Raylib.Util.Math` and `Raylib.Util.Camera`
  modules. They are Haskell implementations of `raymath` and `rcamera`.\r\n\r\n\\[[#15](https://github.com/Anut-py/h-raylib/pull/15)\\]\r\n\r\n-
  Fixed a memory issue with `getFontDefault`\r\n\r\n## Version 4.5.3.4\r\n_19 March,
  2023_\r\n\r\n- Updated raylib to the master branch\r\n\r\n## Version 4.5.3.3\r\n_15
  March, 2023_\r\n\r\n- Added GHCi support (see README.md for usage instructions)\r\n-
  Updated raylib to the master branch\r\n- Removed global state; use `WindowResources`
  (see examples for usage)\r\n\r\n## Version 4.5.3.2\r\n_1 March, 2023_\r\n\r\n\\[[#12](https://github.com/Anut-py/h-raylib/pull/12)\\]\r\n\r\n-
  Added rlgl bindings (`Raylib.Util.RLGL`)\r\n\r\n## Version 4.5.3.1\r\n_27 February,
  2023_\r\n\r\n- Added manual asset unloading functions\r\n- Updated raylib to the
  master branch\r\n\r\n\\[[#11](https://github.com/Anut-py/h-raylib/pull/11)\\]\r\n\r\n-
  Fixed a build issue on MacOS\r\n\r\n## Version 4.5.3.0\r\n_24 February, 2023_\r\n\r\n-
  \ **BREAKING CHANGE**: Restructured project; the main modules are moved into `Raylib/Core`
  and `Raylib.Colors` is now `Raylib.Util.Colors`\r\n- Changed `setShaderValue` and
  `setShaderValueV` to consume Haskell values rather than `Ptr`s\r\n- Added the `Raylib.Util`
  module for utility functions\r\n\r\n## Version 4.5.2.0\r\n_21 February, 2023_\r\n\r\n-
  **BREAKING CHANGE**: Removed asset unloading functions\r\n- **BREAKING CHANGE**:
  Changed `Camera3D` API to match C code\r\n- Added code to automatically unload assets\r\n-
  Added mathematical operators for vector types\r\n- Updated raylib to the master
  branch\r\n\r\n## Version 4.5.1.1\r\n_14 February, 2023_\r\n\r\n- Added finalizers
  to auto-unload audio data\r\n- Fixed C include errors\r\n\r\n## Version 4.5.1.0\r\n_12
  February, 2023_\r\n\r\n- **BREAKING CHANGE**: Changed all types to minimize usage
  of `Ptr`s\r\n- **BREAKING CHANGE**: Split the `Raylib` module into six modules:
  `Raylib.Audio`, `Raylib.Core`, `Raylib.Models`, `Raylib.Shapes`, `Raylib.Text`,
  and `Raylib.Textures`\r\n- Added the internal `Freeable` typeclass to prevent memory
  leaks\r\n\r\n\\[[#8](https://github.com/Anut-py/h-raylib/issues/8)\\]\r\n\r\n- Added
  `Xext` as a dependency again\r\n\r\n## Version 4.5.0.12\r\n_14 January, 2023_\r\n\r\n-
  Removed `ShaderLocationIndex` from some function types\r\n\r\n## Version 4.5.0.11\r\n_14
  January, 2023_\r\n\r\n- Fixed some function types\r\n- Allowed omitting fragment/vertex
  shaders in `loadShader` functions\r\n\r\n## Version 4.5.0.10\r\n_5 January, 2023_\r\n\r\n-
  Restructured to make the examples easier to run\r\n- Updated raylib to the master
  branch\r\n\r\n## Version 4.5.0.9\r\n_23 December, 2022_\r\n\r\n- Changed `setConfigFlags`
  and `setGesturesEnabled` to use an array of flags\r\n\r\n## Version 4.5.0.8\r\n_18
  December, 2022_\r\n\r\n\\[[#9](https://github.com/Anut-py/h-raylib/issues/9)\\]\r\n\r\n-
  Fixed an issue on Mac where `clang` failed to detect that `rglfw.c` was using objective-c\r\n\r\n##
  Version 4.5.0.7\r\n_26 November, 2022_\r\n\r\n\\[[#7](https://github.com/Anut-py/h-raylib/pull/7)\\]\r\n\r\n-
  Removed all constants that were enums in the original C API and replaced them with
  sum types deriving `Enum`\r\n- Removed some `CInt` usage in the main API\r\n- Removed
  `Raylib.Constants`\r\n\r\n## Version 4.5.0.6\r\n_24 November, 2022_\r\n\r\n\\[[#6](https://github.com/Anut-py/h-raylib/issues/6)\\]\r\n\r\n-
  Fixed `Font` marshalling\r\n\r\n## Version 4.5.0.5\r\n_19 November, 2022_\r\n- Replaced
  `CInt` with `CBool` in `RayCollision`\r\n- Updated raylib to the master branch\r\n\r\n##
  Version 4.5.0.4\r\n_13 November, 2022_\r\n- Replaced `CInt` with `CBool` for functions
  that return booleans\r\n- Removed `Xext` dependency (it is no longer required for
  Nix builds)\r\n"
basic-deps:
  base: '>=4.0 && <4.17.0'
  containers: '>=0.6.0 && <0.6.7.0'
  lens: '>=4.0 && <=5.2.2'
all-versions:
- 4.5.0.1
- 4.5.0.2
- 4.5.0.3
- 4.5.0.4
- 4.5.0.5
- 4.5.0.6
- 4.5.0.7
- 4.5.0.8
- 4.5.0.9
- 4.5.0.10
- 4.5.0.11
- 4.5.0.12
- 4.5.1.0
- 4.5.1.1
- 4.5.2.0
- 4.5.3.0
- 4.5.3.1
- 4.5.3.2
- 4.5.3.3
- 4.5.3.4
- 4.6.0.1
- 4.6.0.2
- 4.6.0.3
- 4.6.0.4
author: Anut
latest: 4.6.0.4
description-type: markdown
description: "# h-raylib: Haskell bindings for Raylib\r\n\r\nThis library includes
  Haskell bindings to the [Raylib](https://www.raylib.com/) library.\r\n\r\n## Usage\r\n\r\nTo
  use this package, include it as a dependency in your cabal file.\r\n\r\n```cabal\r\nbuild-depends:\r\n
  \ base,\r\n  # ...\r\n  h-raylib\r\n```\r\n\r\nYour platform-specific dependencies
  will automatically be built by default. You\r\nmay want to disable this behavior.
  You can disable the `detect-platform` flag to\r\nachieve this.\r\n\r\nYou can do
  this through the command line when running your project, like so\r\n\r\n```sh\r\ncabal
  run --constraint=\"h-raylib -detect-platform\"\r\n```\r\n\r\nOr you can add it to
  your `cabal.project` file.\r\n\r\n```\r\npackage h-raylib\r\n  flags: -detect-platform\r\n```\r\n\r\nThe
  flags `platform-windows`, `platform-mac`, `platform-linux`, and `platform-bsd` are
  also\r\nsupported if you want to build for a different platform.\r\n\r\n## Platform
  specific requirements\r\n\r\nThis library has been tested on Windows and Ubuntu
  through WSL. It may not work properly on other platforms, so don't hesitate to report
  issues on the GitHub repository.\r\n\r\n### Windows\r\n\r\nh-raylib should automatically
  work if you do not disable the `detect-platform` flag. In that case, you may skip
  this step.\r\n\r\n**If you do disable the `detect-platform` flag when building,**
  use the `platform-windows` flag when building.\r\n\r\n### Ubuntu/Debian based systems\r\n\r\nYou
  may need to run the following to install [X11](https://en.wikipedia.org/wiki/X_Window_System)
  (a window manager for Linux).\r\n\r\n```bash\r\nsudo apt-get install libx11-dev
  libxrandr-dev libxi-dev libxcursor-dev libxinerama-dev\r\n```\r\n\r\nNow, h-raylib
  should automatically work if you do not disable the `detect-platform` flag. In that
  case, you may skip the following.\r\n\r\n**If you do disable the `detect-platform`
  flag when building,** use the `platform-linux` flag when building\r\n\r\n### Other
  platforms\r\n\r\nThis library has not yet been tested on platforms other than Windows
  and Ubuntu. Anybody willing to try is welcome.\r\n\r\nIf you get it working on other
  platforms, please create a pull request in the\r\nGitHub repository and update `h-raylib.cabal`
  with the relevant config.\r\n\r\n## Running in GHCi\r\n\r\nYou can use this library
  in GHCi just like any other library, but you will need to add `--constraint=\"h-raylib
  +ghci\"` to the command. For example, in the root folder of this repository, you
  could use the command below to use the library through GHCi.\r\n\r\n```\r\ncabal
  repl --constraint=\"h-raylib +ghci\"\r\n```\r\n\r\nYou may need to use `:set -fno-ghci-sandbox`
  after entering the REPL to fix problems with multithreaded execution.\r\n\r\nOn
  Windows, you may lose joystick support when running in GHCi.\r\n\r\n## Contributing\r\n\r\nTo
  contribute or learn more about the project, see [CONTRIBUTING.md](https://github.com/Anut-py/h-raylib/blob/master/CONTRIBUTING.md).\r\n\r\n##
  FAQ\r\n\r\n- When I try to run an h-raylib program I get an error saying \"*The
  code execution cannot proceed because libwinpthread-1.dll was not found. Reinstalling
  the program may fix this problem.*\"\r\n  - See [#14](https://github.com/Anut-py/h-raylib/issues/14)\r\n\r\n##
  License\r\n\r\nThis project is licensed under the Apache License 2.0. See more in
  `LICENSE`.\r\n"
license-name: Apache-2.0
