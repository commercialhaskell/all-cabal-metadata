all-versions:
- 4.5.0.1
- 4.5.0.2
- 4.5.0.3
- 4.5.0.4
- 4.5.0.5
- 4.5.0.6
- 4.5.0.7
- 4.5.0.8
- 4.5.0.9
- 4.5.0.10
- 4.5.0.11
- 4.5.0.12
- 4.5.1.0
- 4.5.1.1
- 4.5.2.0
- 4.5.3.0
- 4.5.3.1
- 4.5.3.2
- 4.5.3.3
- 4.5.3.4
- 4.6.0.1
- 4.6.0.2
- 4.6.0.3
- 4.6.0.4
- 4.6.0.5
- 4.6.0.6
- 4.6.0.7
- 5.1.0.1
- 5.1.1.0
- 5.1.2.0
- 5.1.3.0
- 5.5.0.0
author: Anut
basic-deps:
  base: '>=4.0 && <4.20'
  bytestring: '>=0.11.0 && <0.13'
  containers: '>=0.6.0 && <0.7.0'
  exceptions: '>=0.10.4 && <0.10.8'
  lens: '>=4.0 && <5.2.4'
  linear: '>=1.22 && <1.23'
  template-haskell: '>=2.16.0.0 && <2.22.0.0'
  text: '>=2.0 && <2.2'
changelog: |
  # h-raylib changelog

  ## Version 5.5.0.0
  _12 July 2024_

  - **BREAKING CHANGE**: Reimplemented `Vector2/3/4` using `linear`'s `V2/3/4`
  - \[[#55](https://github.com/Anut-py/h-raylib/issues/55)\] **BREAKING CHANGE**: Completely reworked memory management (check `DOCUMENTATION.md` and the example programs)
  - Dropped ghc 8.10 support
  - \[[#54](https://github.com/Anut-py/h-raylib/issues/54)\] Exposed internal modules
  - \[[#56](https://github.com/Anut-py/h-raylib/issues/56)\] Fixed a bug with `loadFontEx` and other font-related functions not working

  ## Version 5.1.3.0
  _13 April, 2024_

  - Made some utility functions pure
  - Improved the performance of `Raylib.Util.Math`

  ## Version 5.1.2.0
  _9 April, 2024_

  - Internal changes for performance
  - Fixed a typo in `filePathList'capacity` (previously `filePathlist'capacity`)
  - Fixed marshalling bugs with `FilePathList`

  ## Version 5.1.1.0
  _22 February, 2024_

  - Split `Raylib.Types` into different modules (`Raylib.Types` reexports everything, so this will not break existing code)
  - Fixed `flake.nix` and `default.nix`
  - Exposed all the native functions
  - Added support for callbacks
  - Added more thorough Haddock documentation
  - Added pointer utility functions (`p'*`)
  - \[[#4](https://github.com/Anut-py/h-raylib/issues/4)\] Started working on web support
  - \[[#34](https://github.com/Anut-py/h-raylib/issues/34)\] Added bindings for raygui (`Raylib.Util.GUI`, `Raylib.Util.GUI.Styles`)

  ## Version 5.1.0.1
  _16 January, 2024_

  - Updated raylib to the master branch
  - \[[#26](https://github.com/Anut-py/h-raylib/pull/26)\] New `platform-nixos` build flag
  - \[[#27](https://github.com/Anut-py/h-raylib/pull/27), [#35](https://github.com/Anut-py/h-raylib/pull/35)\] Added flake.nix

  ## Version 4.6.0.7
  _10 September, 2023_

  - Updated raylib to the master branch

  ## Version 4.6.0.6
  _24 July, 2023_

  - Updated raylib to the master branch

  ## Version 4.6.0.5
  _29 June, 2023_

  - \[[#22](https://github.com/Anut-py/h-raylib/pull/22)\] Allowed `base-4.18` to support GHC 9.4 and higher
  - \[[#23](https://github.com/Anut-py/h-raylib/pull/23)\] Added helper functions in `Raylib.Util` as an alternative to the `begin*` and `end*` functions

  ## Version 4.6.0.4
  _16 June, 2023_

  - Updated raylib to the master branch
  - \[[#19](https://github.com/Anut-py/h-raylib/pull/19)\] Changed all the `Raylib.Util` functions to use `MonadIO` for flexibility
  - \[[#20](https://github.com/Anut-py/h-raylib/pull/20)\] Changed `CFloat` to `Float` in `drawCapsule` and `drawCapsuleWires`

  ## Version 4.6.0.3
  _23 April, 2023_

  - Updated raylib to the master branch
  - \[[#18](https://github.com/Anut-py/h-raylib/pull/18)\] Added lenses for raylib data structures

  ## Version 4.6.0.2
  _8 April, 2023_

  - Fixed a bug in `clamp`
  - Updated raylib to the master branch

  ## Version 4.6.0.1
  _2 April, 2023_

  - Created the `Raylib.Util.Math` and `Raylib.Util.Camera` modules. They are Haskell implementations of `raymath` and `rcamera`.
  - \[[#15](https://github.com/Anut-py/h-raylib/pull/15)\] Fixed a memory issue with `getFontDefault`

  ## Version 4.5.3.4
  _19 March, 2023_

  - Updated raylib to the master branch

  ## Version 4.5.3.3
  _15 March, 2023_

  - Added GHCi support (see README.md for usage instructions)
  - Updated raylib to the master branch
  - Removed global state; use `WindowResources` (see examples for usage)

  ## Version 4.5.3.2
  _1 March, 2023_

  - \[[#12](https://github.com/Anut-py/h-raylib/pull/12)\] Added rlgl bindings (`Raylib.Util.RLGL`)

  ## Version 4.5.3.1
  _27 February, 2023_

  - Added manual asset unloading functions
  - Updated raylib to the master branch
  - \[[#11](https://github.com/Anut-py/h-raylib/pull/11)\] Fixed a build issue on MacOS

  ## Version 4.5.3.0
  _24 February, 2023_

  -  **BREAKING CHANGE**: Restructured project; the main modules are moved into `Raylib/Core` and `Raylib.Colors` is now `Raylib.Util.Colors`
  - Changed `setShaderValue` and `setShaderValueV` to consume Haskell values rather than `Ptr`s
  - Added the `Raylib.Util` module for utility functions

  ## Version 4.5.2.0
  _21 February, 2023_

  - **BREAKING CHANGE**: Removed asset unloading functions
  - **BREAKING CHANGE**: Changed `Camera3D` API to match C code
  - Added code to automatically unload assets
  - Added mathematical operators for vector types
  - Updated raylib to the master branch

  ## Version 4.5.1.1
  _14 February, 2023_

  - Added finalizers to auto-unload audio data
  - Fixed C include errors

  ## Version 4.5.1.0
  _12 February, 2023_

  - **BREAKING CHANGE**: Changed all types to minimize usage of `Ptr`s
  - **BREAKING CHANGE**: Split the `Raylib` module into six modules: `Raylib.Audio`, `Raylib.Core`, `Raylib.Models`, `Raylib.Shapes`, `Raylib.Text`, and `Raylib.Textures`
  - Added the internal `Freeable` typeclass to prevent memory leaks
  - \[[#8](https://github.com/Anut-py/h-raylib/issues/8)\] Added `Xext` as a dependency again

  ## Version 4.5.0.12
  _14 January, 2023_

  - Removed `ShaderLocationIndex` from some function types

  ## Version 4.5.0.11
  _14 January, 2023_

  - Fixed some function types
  - Allowed omitting fragment/vertex shaders in `loadShader` functions

  ## Version 4.5.0.10
  _5 January, 2023_

  - Restructured to make the examples easier to run
  - Updated raylib to the master branch

  ## Version 4.5.0.9
  _23 December, 2022_

  - Changed `setConfigFlags` and `setGesturesEnabled` to use an array of flags

  ## Version 4.5.0.8
  _18 December, 2022_

  - \[[#9](https://github.com/Anut-py/h-raylib/issues/9)\] Fixed an issue on Mac where `clang` failed to detect that `rglfw.c` was using objective-c

  ## Version 4.5.0.7
  _26 November, 2022_

  \[[#7](https://github.com/Anut-py/h-raylib/pull/7)\]

  - Removed all constants that were enums in the original C API and replaced them with sum types deriving `Enum`
  - Removed some `CInt` usage in the main API
  - Removed `Raylib.Constants`

  ## Version 4.5.0.6
  _24 November, 2022_

  - \[[#6](https://github.com/Anut-py/h-raylib/issues/6)\] Fixed `Font` marshalling

  ## Version 4.5.0.5
  _19 November, 2022_
  - Replaced `CInt` with `CBool` in `RayCollision`
  - Updated raylib to the master branch

  ## Version 4.5.0.4
  _13 November, 2022_
  - Replaced `CInt` with `CBool` for functions that return booleans
  - Removed `Xext` dependency (it is no longer required for Nix builds)
changelog-type: markdown
description: "# h-raylib: Haskell bindings for Raylib\n\n[![cabal-build](https://github.com/Anut-py/h-raylib/actions/workflows/cabal-build.yml/badge.svg)](https://github.com/Anut-py/h-raylib/actions/workflows/cabal-build.yml)
  [![nix-build](https://github.com/Anut-py/h-raylib/actions/workflows/nix-build.yml/badge.svg)](https://github.com/Anut-py/h-raylib/actions/workflows/nix-build.yml)
  ![Hackage Version](https://img.shields.io/hackage/v/h-raylib)\n\n\nThis library
  includes Haskell bindings to the [Raylib](https://www.raylib.com/) library.\n\n[Basic
  usage](#basic-usage) | [Platform specific requirements](#platform-specific-requirements)
  | [Advanced usage](#advanced-usage) | [GHCi](#running-in-ghci) | [Documentation](#documentation)
  | [FAQ and help](#faq-and-help)\n\n## Basic usage\n\nTo use this package, include
  it as a dependency in your cabal file.\n\n```cabal\nbuild-depends:\n  base,\n  #
  ...\n  h-raylib\n```\n\nIt should work out of the box. See [Advanced usage](#advanced-usage)
  for more complex use cases.\n\n## Platform specific requirements\n\nThis library
  is known to work on Windows, Linux, and Mac. It may not work properly on other platforms,
  so don't hesitate to report issues on the GitHub repository.\n\n### Windows/Mac\n\nh-raylib
  should automatically work if you do not disable the `detect-platform` flag. In that
  case, you may skip this step.\n\n**If you do disable the `detect-platform` flag
  when building,** use the `platform-windows` or `platform-mac` flag when building.\n\n###
  Linux\n\nYou may need to run the following to install [X11](https://en.wikipedia.org/wiki/X_Window_System)
  (a window manager for Linux).\n\n```bash\nsudo apt-get install libx11-dev libxrandr-dev
  libxi-dev libxcursor-dev libxinerama-dev\n```\n\nNow, h-raylib should automatically
  work if you do not disable the `detect-platform` flag. In that case, you may skip
  the following.\n\n**If you do disable the `detect-platform` flag when building,**
  use the `platform-linux` flag when building\n\n### BSD *(Experimental)*\n\nh-raylib
  should automatically work if you do not disable the `detect-platform` flag. In that
  case, you may skip this step.\n\n**If you do disable the `detect-platform` flag
  when building,** use the `platform-bsd` flag when building.\n\n### Other platforms\n\nThis
  library has not yet been tested on other platforms (raylib supports\nAndroid, Raspberry
  Pi, and DRM, all of which have not been implemented in\nh-raylib). Anybody willing
  to try is welcome.\n\nWeb support has not been finalized yet.\n\nIf you get it working
  on other platforms, please create a pull request in the\nGitHub repository and update
  `h-raylib.cabal` with the relevant config.\n\n### Advanced usage\n\nYour platform-specific
  dependencies will automatically be built by default. You\nmay want to disable this
  behavior. You can disable the `detect-platform` flag to\nachieve this.\n\nYou can
  do this through the command line when running your project, like so\n\n```sh\ncabal
  run --constraint=\"h-raylib -detect-platform\"\n```\n\nOr you can add it to your
  `cabal.project` file.\n\n```\npackage h-raylib\n  flags: -detect-platform\n```\n\nThe
  flags `platform-windows`, `platform-mac`, `platform-linux`, and `platform-bsd` are
  also\nsupported if you want to build for a different platform.\n\n## Running in
  GHCi\n\nYou can use this library in GHCi just like any other library, but you will
  need to add `--constraint=\"h-raylib +ghci\"` to the command. For example, in the
  root folder of this repository, you could use the command below to use the library
  through GHCi.\n\n```\ncabal repl --constraint=\"h-raylib +ghci\"\n```\n\nYou may
  need to use `:set -fno-ghci-sandbox` after entering the REPL to fix problems with
  multithreaded execution.\n\nOn Windows, you may lose joystick support when running
  in GHCi.\n\n## Documentation\n\nFor documentation: [DOCUMENTATION.md](https://github.com/Anut-py/h-raylib/blob/master/DOCUMENTATION.md).\n\nFor
  contributors: [CONTRIBUTING.md](https://github.com/Anut-py/h-raylib/blob/master/CONTRIBUTING.md).\n\nIf
  you want to request a feature, create an issue in the GitHub repo. Please check
  [the roadmap](https://github.com/Anut-py/h-raylib/blob/master/CONTRIBUTING.md#h-raylib-roadmap)
  to see if the feature has already been planned.\n\n## FAQ and help\n\n- When I try
  to run an h-raylib program I get the error `The code execution cannot proceed because
  libwinpthread-1.dll was not found. Reinstalling the program may fix this problem.`\n
  \ - See [#14](https://github.com/Anut-py/h-raylib/issues/14)\n \n- When I try to
  compile an h-raylib program I get the error `Missing (or bad) C libraries: gcc_eh`\n
  \ - See [#36](https://github.com/Anut-py/h-raylib/issues/36)\n\nIf you find a bug,
  please [create an issue on GitHub](https://github.com/Anut-py/h-raylib/issues).\n\nIf
  you have a question about the library that is not related to a bug, ask it on [GitHub
  discussions](https://github.com/Anut-py/h-raylib/discussions) or in the [Haskell
  GameDev Discord server](https://discord.gg/aKHNgxc59t).\n\n## License\n\nThis project
  is licensed under the Apache License 2.0. See more in `LICENSE`.\n"
description-type: markdown
hash: 2c6ef6f554ed8ed5269c38f472ee16e7e114651c1b14fbd5f432cc936ac26d7b
homepage: ''
latest: 5.5.0.0
license-name: Apache-2.0
maintainer: Anut
synopsis: Raylib bindings for Haskell
test-bench-deps: {}
