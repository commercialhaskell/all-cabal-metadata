homepage: ''
changelog-type: markdown
hash: fc5cc91cc8aa9d72caf7dfb280e990955e9fd2f58375d74c0bde3ffde01ec1b1
test-bench-deps: {}
maintainer: Anut
synopsis: Raylib bindings for Haskell
changelog: "# h-raylib changelog\r\n\r\n## Version 4.5.0.4\r\n_13 November 2022_\r\n-
  Replaced `CInt` with `CBool` for functions that return booleans\r\n- Removed `Xext`
  dependency (it is no longer required for Nix builds)\r\n\r\n## Version 4.5.0.5\r\n_19
  November 2022_\r\n- Replaced `CInt` with `CBool` in `RayCollision`\r\n- Updated
  raylib to the master branch\r\n"
basic-deps:
  base: '>=4.0 && <4.17.0'
all-versions:
- 4.5.0.1
- 4.5.0.2
- 4.5.0.3
- 4.5.0.4
- 4.5.0.5
author: Anut
latest: 4.5.0.5
description-type: markdown
description: "# h-raylib: Haskell bindings for Raylib\r\n\r\nThis library includes
  Haskell bindings to the [Raylib](https://www.raylib.com/) library.\r\n\r\n## Usage\r\n\r\nTo
  use this package, include it as a dependency in your cabal file.\r\n\r\n```cabal\r\nbuild-depends:\r\n
  \ base,\r\n  # ...\r\n  h-raylib\r\n```\r\n\r\nYour platform-specific dependencies
  will automatically be built by default. You\r\nmay want to disable this behavior.
  You can disable the `detect-platform` flag to\r\nachieve this.\r\n\r\nYou can do
  this through the command line when running your project, like so\r\n\r\n```sh\r\ncabal
  run --constraint=\"h-raylib -detect-platform\"\r\n```\r\n\r\nOr you can add it to
  your `cabal.project` file.\r\n\r\n```\r\npackage h-raylib\r\n  flags: -detect-platform\r\n```\r\n\r\nThe
  flags `platform-windows`, `platform-mac`, `platform-linux`, and `platform-bsd` are
  also\r\nsupported if you want to build for a different platform.\r\n\r\n## Platform
  specific requirements\r\n\r\nThis library has been tested on Windows and Ubuntu
  through WSL. It may not work properly on other platforms, so don't hesitate to report
  issues on the GitHub repository.\r\n\r\n### Windows\r\n\r\nh-raylib should automatically
  work if you do not disable the `detect-platform` flag. In that case, you may skip
  this step.\r\n\r\n**If you do disable the `detect-platform` flag when building:**\r\n\r\nAdd
  the following in your cabal file, or use the `platform-windows` flag when building.\r\n\r\n```cabal\r\nextra-libraries:
  gdi32 opengl32 winmm kernel32\r\n```\r\n\r\n### Ubuntu/Debian based systems\r\n\r\nYou
  may need to run the following to install [X11](https://en.wikipedia.org/wiki/X_Window_System)
  (a window manager for Linux).\r\n\r\n```bash\r\nsudo apt-get install libx11-dev
  libxrandr-dev libxi-dev libxcursor-dev libxinerama-dev\r\n```\r\n\r\nNow, h-raylib
  should automatically work if you do not disable the `detect-platform` flag. In that
  case, you may skip the following.\r\n\r\n**If you do disable the `detect-platform`
  flag when building:**\r\n\r\nInclude the following in your cabal file, or use the
  `platform-linux` flag when building\r\n\r\n```cabal\r\nextra-libraries: GL c m pthread
  dl rt X11 Xinerama Xcursor Xrandr Xi\r\n```\r\n\r\n### Other platforms\r\n\r\nThis
  library has not yet been tested on platforms other than Windows and Ubuntu. Anybody
  willing to try is welcome.\r\n\r\nIf you get it working on other platforms, please
  create a pull request in the\r\nGitHub repository and update `h-raylib.cabal` with
  the relevant config.\r\n\r\n## Contributing\r\n\r\nAnybody willing to contribute
  to the project is welcome to do so. This\r\nlibrary is very new, so please report
  any bugs in the GitHub issue tracker.\r\n\r\nYou can run the examples by using `cabal
  run` in the example project directory.\r\n\r\n## License\r\n\r\nThis project is
  licensed under the Apache License 2.0. See more in `LICENSE`.\r\n"
license-name: Apache-2.0
