homepage: ''
changelog-type: markdown
hash: 11db34375d1b03b3d4d73637b1bcc2bbb8bf9aff8a58c836db3210ff8bcf3cef
test-bench-deps: {}
maintainer: Anut
synopsis: Raylib bindings for Haskell
changelog: "# h-raylib changelog\r\n\r\n## Version 4.5.3.0\r\n_24 February, 2023_\r\n\r\n-
  \ **BREAKING CHANGE**: Restructured project; the main modules are moved into `Raylib/Core`
  and `Raylib.Colors` is now `Raylib.Util.Colors`\r\n- Changed `setShaderValue` and
  `setShaderValueV` to consume Haskell values rather than `Ptr`s\r\n- Added the `Raylib.Util`
  module for utility functions\r\n\r\n## Version 4.5.2.0\r\n_21 February, 2023_\r\n\r\n-
  **BREAKING CHANGE**: Removed asset unloading functions\r\n- **BREAKING CHANGE**:
  Changed `Camera3D` API to match C code\r\n- Added code to automatically unload assets\r\n-
  Added mathematical operators for vector types\r\n- Updated raylib to the master
  branch\r\n\r\n## Version 4.5.1.1\r\n_14 February, 2023_\r\n\r\n- Added finalizers
  to auto-unload audio data\r\n- Fixed C include errors\r\n\r\n## Version 4.5.1.0\r\n_12
  February, 2023_\r\n\r\n- **BREAKING CHANGE**: Changed all types to minimize usage
  of `Ptr`s\r\n- **BREAKING CHANGE**: Split the `Raylib` module into six modules:
  `Raylib.Audio`, `Raylib.Core`, `Raylib.Models`, `Raylib.Shapes`, `Raylib.Text`,
  and `Raylib.Textures`\r\n- Added the internal `Freeable` typeclass to prevent memory
  leaks\r\n\r\n\\[[#8](https://github.com/Anut-py/h-raylib/issues/8)\\]\r\n\r\n- Added
  `Xext` as a dependency again\r\n\r\n## Version 4.5.0.12\r\n_14 January, 2023_\r\n\r\n-
  Removed `ShaderLocationIndex` from some function types\r\n\r\n## Version 4.5.0.11\r\n_14
  January, 2023_\r\n\r\n- Fixed some function types\r\n- Allowed omitting fragment/vertex
  shaders in `loadShader` functions\r\n\r\n## Version 4.5.0.10\r\n_5 January, 2023_\r\n\r\n-
  Restructured to make the examples easier to run\r\n- Updated raylib to the master
  branch\r\n\r\n## Version 4.5.0.9\r\n_23 December, 2022_\r\n\r\n- Changed `setConfigFlags`
  and `setGesturesEnabled` to use an array of flags\r\n\r\n## Version 4.5.0.8\r\n_18
  December, 2022_\r\n\r\n\\[[#9](https://github.com/Anut-py/h-raylib/issues/9)\\]\r\n\r\n-
  Fixed an issue on Mac where `clang` failed to detect that `rglfw.c` was using objective-c\r\n\r\n##
  Version 4.5.0.7\r\n_26 November, 2022_\r\n\r\n\\[[#7](https://github.com/Anut-py/h-raylib/pull/7)\\]\r\n\r\n-
  Removed all constants that were enums in the original C API and replaced them with
  sum types deriving `Enum`\r\n- Removed some `CInt` usage in the main API\r\n- Removed
  `Raylib.Constants`\r\n\r\n## Version 4.5.0.6\r\n_24 November, 2022_\r\n\r\n\\[[#6](https://github.com/Anut-py/h-raylib/issues/6)\\]\r\n\r\n-
  Fixed `Font` marshalling\r\n\r\n## Version 4.5.0.5\r\n_19 November, 2022_\r\n- Replaced
  `CInt` with `CBool` in `RayCollision`\r\n- Updated raylib to the master branch\r\n\r\n##
  Version 4.5.0.4\r\n_13 November, 2022_\r\n- Replaced `CInt` with `CBool` for functions
  that return booleans\r\n- Removed `Xext` dependency (it is no longer required for
  Nix builds)\r\n"
basic-deps:
  base: '>=4.0 && <4.17.0'
  containers: '>=0.6.0 && <0.6.7.0'
all-versions:
- 4.5.0.1
- 4.5.0.2
- 4.5.0.3
- 4.5.0.4
- 4.5.0.5
- 4.5.0.6
- 4.5.0.7
- 4.5.0.8
- 4.5.0.9
- 4.5.0.10
- 4.5.0.11
- 4.5.0.12
- 4.5.1.0
- 4.5.1.1
- 4.5.2.0
- 4.5.3.0
author: Anut
latest: 4.5.3.0
description-type: markdown
description: "# h-raylib: Haskell bindings for Raylib\r\n\r\nThis library includes
  Haskell bindings to the [Raylib](https://www.raylib.com/) library.\r\n\r\n## Usage\r\n\r\nTo
  use this package, include it as a dependency in your cabal file.\r\n\r\n```cabal\r\nbuild-depends:\r\n
  \ base,\r\n  # ...\r\n  h-raylib\r\n```\r\n\r\nYour platform-specific dependencies
  will automatically be built by default. You\r\nmay want to disable this behavior.
  You can disable the `detect-platform` flag to\r\nachieve this.\r\n\r\nYou can do
  this through the command line when running your project, like so\r\n\r\n```sh\r\ncabal
  run --constraint=\"h-raylib -detect-platform\"\r\n```\r\n\r\nOr you can add it to
  your `cabal.project` file.\r\n\r\n```\r\npackage h-raylib\r\n  flags: -detect-platform\r\n```\r\n\r\nThe
  flags `platform-windows`, `platform-mac`, `platform-linux`, and `platform-bsd` are
  also\r\nsupported if you want to build for a different platform.\r\n\r\n## Platform
  specific requirements\r\n\r\nThis library has been tested on Windows and Ubuntu
  through WSL. It may not work properly on other platforms, so don't hesitate to report
  issues on the GitHub repository.\r\n\r\n### Windows\r\n\r\nh-raylib should automatically
  work if you do not disable the `detect-platform` flag. In that case, you may skip
  this step.\r\n\r\n**If you do disable the `detect-platform` flag when building,**
  use the `platform-windows` flag when building.\r\n\r\n### Ubuntu/Debian based systems\r\n\r\nYou
  may need to run the following to install [X11](https://en.wikipedia.org/wiki/X_Window_System)
  (a window manager for Linux).\r\n\r\n```bash\r\nsudo apt-get install libx11-dev
  libxrandr-dev libxi-dev libxcursor-dev libxinerama-dev\r\n```\r\n\r\nNow, h-raylib
  should automatically work if you do not disable the `detect-platform` flag. In that
  case, you may skip the following.\r\n\r\n**If you do disable the `detect-platform`
  flag when building,** use the `platform-linux` flag when building\r\n\r\n### Other
  platforms\r\n\r\nThis library has not yet been tested on platforms other than Windows
  and Ubuntu. Anybody willing to try is welcome.\r\n\r\nIf you get it working on other
  platforms, please create a pull request in the\r\nGitHub repository and update `h-raylib.cabal`
  with the relevant config.\r\n\r\n## Contributing\r\n\r\nSee [CONTRIBUTING.md](https://github.com/Anut-py/h-raylib/blob/master/CONTRIBUTING.md).\r\n\r\n##
  License\r\n\r\nThis project is licensed under the Apache License 2.0. See more in
  `LICENSE`.\r\n"
license-name: Apache-2.0
