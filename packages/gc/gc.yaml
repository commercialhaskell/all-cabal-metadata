homepage: http://github.com/ekmett/gc/
changelog-type: markdown
hash: e2d0c617ceea0670b4cbc282b64c449bbce78ec5a6848b07f590aad8209cd9a7
test-bench-deps: {}
maintainer: Edward A. Kmett <ekmett@gmail.com>
synopsis: Poor Richard's Memory Manager
changelog: |
  0.1 [2019.04.13]
  ---
  * Reimplemented without RSS information. This should allow this to run portably
    with most of the desired efficiency.

  0.0.3 [2019.05.02]
  ------------------
  * Fix the build on Windows.
  * Remove the `doctests` test suite, as there were never any `doctest`s to
    begin with.

  0.0.2
  -----
  * Add a library dependency on the `doctests` test suite

  0.0.1
  -----
  * Revamp `Setup.hs` to use `cabal-doctest`. This makes it build
    with `Cabal-2.0`, and makes the `doctest`s work with `cabal new-build` and
    sandboxes.

  0
  -
  * Initialized repository
basic-deps:
  base: '>=4.7 && <5'
all-versions:
- '0'
- 0.0.1
- 0.0.2
- 0.0.3
- '0.1'
author: Edward A. Kmett
latest: '0.1'
description-type: markdown
description: |
  gc
  ==

  [![Build Status](https://secure.travis-ci.org/ekmett/gc.png?branch=master)](http://travis-ci.org/ekmett/gc)

  Experimenting with building [Poor Richard's Memory Manager](http://www.cse.buffalo.edu/~mhertz/prmm-ismm-2011.pdf) in Haskell user space.


  ```haskell
  import System.Mem.Manager

  main = do
    _ <- selfishManager
    ...
  ```

  Now an oracle would look for signs of memory pressure from the host operating system and attempt more aggressive garbage collection in response. The current implementation matches the 'GenMS+Selfish' scheme from the original paper due to lack of information from GHC about how many pages have been returned to the OS.

  Contact Information
  -------------------

  Contributions and bug reports are welcome!

  Please feel free to contact me through github or on the #haskell IRC channel on irc.freenode.net.

  -Edward Kmett
license-name: BSD-3-Clause
