homepage: https://github.com/isovector/lasercutter#readme
changelog-type: markdown
hash: 4a08708dee89adb0b75f0e0415296992f147469efe04c6b5c3269cf74d279871
test-bench-deps:
  witherable: -any
  checkers: -any
  base: '>=4.7 && <5'
  text: -any
  criterion: -any
  containers: -any
  scalpel: -any
  selective: -any
  lasercutter: -any
  deepseq: -any
  QuickCheck: -any
  tagsoup: -any
  profunctors: -any
maintainer: sandy@sandymaguire.me
synopsis: A high-powered, single-pass tree parser.
changelog: |+
  # Changelog for `lasercutter`

  All notable changes to this project will be documented in this file.

  The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),
  and this project adheres to the
  [Haskell Package Versioning Policy](https://pvp.haskell.org/).


  ## 0.1.0.0 - 2022-09-07

  - Hello world!


  ## Unreleased


basic-deps:
  witherable: -any
  base: '>=4.7 && <5'
  selective: -any
  profunctors: -any
all-versions:
- 0.1.0.0
author: Sandy Maguire
latest: 0.1.0.0
description-type: markdown
description: |+
  # lasercutter

  ## Dedication

  > The scalpel won't make you happy.
  >
  > --Demi Moore


  ## Overview

  `lasercutter` is a high-powered, high-speed, and high-tech tree parser for
  Haskell. It's somewhere between 500x and 1000x faster than `scalpel` on
  benchmarks and real workloads.

  <p align="center">
  <img src="https://raw.githubusercontent.com/isovector/lasercutter/master/bench.png" alt="Benchmark results" title="Benchmark results">
  </p>

  Not only is it smokin' fast, `lasercutter` is a general tool for chopping up any
  sort of tree you've got --- not just HTML!

  Best of all, `lasercutter` rips through trees in a single pass. This is truly
  space-age stuff!


  ## Acknowledgments

  The core abstraction here is the brainchild of [Xia Li-yao][lyxia] --- huge
  shout-outs to him for turning my vague ideas into reality.

  [lyxia]: https://github.com/Lysxia

license-name: BSD-3-Clause
