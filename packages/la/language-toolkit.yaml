all-versions:
- 1.0.0.0
- 1.0.1.0
- 1.1.0.0
author: Dakotah Lambert, James Rogers
basic-deps:
  base: '>=4.6 && <5.0'
  containers: '>=0.5 && <0.8'
  deepseq: '>=1.2 && <1.6'
  directory: '>=1.2.3 && <1.4'
  filepath: '>=1.0 && <1.5'
  haskeline: '>=0.2 && <0.9'
  language-toolkit: '>=0'
  parallel: '>=2.0 && <3.3'
  process: '>=1.1 && <1.7'
  transformers: '>=0.2 && <0.7'
changelog: ''
changelog-type: ''
description: |-
  This provides the Language Toolkit (LTK) library
  and associated executables.
  There are four main components:

  * @factorize@,
  which takes as input a set of finite-state automata
  and writes out for each one a set of constraints
  that approximates (or, if possible, defines) it.

  * @plebby@,
  an interactive theorem-prover in which one can
  define languages via logical constraints
  or import finite-state automata
  and get information about the languages so defined.

  * @classify@,
  a command-line classification program useful
  for batch jobs.

  * And the @LTK@ library,
  which includes the functions used by
  @factorize@ and @plebby@
  as well as several other useful tools.

  This project began as a simple tool for working with
  finite-state automata, and has grown considerably more
  useful in working specifically with sub-regular languages
  as it has matured.
description-type: haddock
hash: 88053187798ca880d3eab8b46435d86f9c7fcdda51c2d809c0847902acc6a18e
homepage: https://github.com/vvulpes0/Language-Toolkit-2
latest: 1.1.0.0
license-name: MIT
maintainer: Dakotah Lambert <dakotahlambert@acm.org>
synopsis: A set of tools for analyzing languages via logic and automata
test-bench-deps: {}
