homepage: http://visq.github.io/language-c/
changelog-type: text
hash: b60a66048ae5ae585b6c3d908e13811de2ba539cc0bafe3af622970fafdb7973
test-bench-deps:
  base: -any
  filepath: -any
  process: -any
  directory: -any
maintainer: language.c@monoid.al
synopsis: Analysis and generation of C code
changelog: "# Changelog\n\n## WIP\n\n## 0.9.0.1\n\n\t- Scrap dependency on syb\n\nThanks
  to @vmchale\n\n## 0.9\n\t- Make `Trav` a monad transformer\n\t- Add `runTravTWithTravState`\n\t-
  Tests now use Cabal-3\n\t- Implement alignment calculation and correct size calculation\n\t-
  Add `Show` instance for `Type`\n\t- Add machine descriptions for x86_64 and armv7l\n\t-
  Small correction in output of prettyprinter\n\t- Allow zeros as line numbers in
  preprocessed directives\n\nThanks to @aweinstock314, @ersran9, @expipiplus1, @jkoppel,
  @trofi and @visq\n\nChanges since 0.7.0\n==========================================================================\n\nWed
  May 23 07:08:02 2018 +0200\n    Support IEC 60559 types and literals. Closes #52.\n\nWed
  May 16 07:08:15 2018 +0200\n    introduce flag for optional IEC 60559 type support
  (see #43)\n\nWed May 16 06:36:04 2018 +0200\n    WIP: towards a complete Export
  (#51)\n\nThu Feb 22 13:22:50 2018 -0500\n    [syntax] GHC.Generics.Generic and Control.DeepSeq.NFData
  instances (#49)\n    (.cabal) drop splitBase flag\n\nTue Feb 20 08:34:39 2018 +0300\n
  \   Selectively hide Prelude.<>:  GHC 8.4 compat (#45)\n\nTue Feb 20 00:09:16 2018
  -0500\n    (Analysis) Minimal support for __float128 (#47)\n\nSat Nov 25 08:59:59
  2017 +0100\n    Consider builtin_convertvector from #34 for pretty printing\n\nSat
  Nov 25 00:46:33 2017 -0600\n    add support for _Float128 (#41)\n\nChanges since
  0.6.0\n==========================================================================\nMon
  Jul 31 2017\n    Improve TypeCheck output (#31)\n\nSun Jul 30 2017\n    * Add `__float128`
  (fixes #33)\n\nMon Maz 22 2017\n    * Support clangâ€™s __builtin_convertvector (Fixes
  #34)\n\nWed Mar 8 2017\n    * Move file and parent information to new datatype FilePosition
  for performance reasons\n\nChanges since 0.5.0\n==========================================================================\nThu
  Feb 23 2017\n  * Make gccParseCPPArgs grab the arg to -MF -MT and -MQ\nWed Feb 15
  2017\n  * In enums, allow multiple attribute specifiers per enumerator\nTue Feb
  21 2017\n  * Allow typedef redefinition if it denotes the same type\nTue Feb 21
  2017\n  * Change TypeDefRef to store Type, not Maybe Type\nTue Feb 14 2017\n  *
  Parse (and ignore) Clang __attribute__((availability(id=major.minor.rev)))\nSun
  Sep 11 2016\n  * Add __builtin_bswap32/64.\nWed Jun 22 2016\n  * Add '_Alignof'
  to Lexer.x (fixes #7)\nMon Jun 27 2016\n  * Updates for C11 (part 1)\n  * _Nullable
  and _Nonnull support as well as Warnings/lint fixes provided by Anthony Cowley (https://github.com/acowley)\nWed
  Mar 16 2016\n  * Consider storage specifier \"ThreadSpec\" for global and local
  declarations\nTue Mar 15 2016\n  * Support C11 _NoReturn, genearlize is_inline to
  FunSpecs (Syntax) / FunAttrs (SemRep)\n\nChanges since 0.4.3\n==========================================================================\nWed
  Mar 2 2016\n  * Add direct base type BaseInt128 (complements previous __int128 patch)\n
  \   ryan.gl.scott@gmail.com\nSun Feb 28 2016\n  * Parse gcc-specific __int128 type\nThu
  Dec 4 2014\n  * Scott Kovach <dskovach@gmail.com>: added derived Eq,Ord instances
  to NodeInfo\n\nChanges since 0.4.2\n==========================================================================\nSat
  Jan 11 2014\n  * Allow unicode characters in string/char literals and filenames\nMon
  Oct 27 2014\n  * macos-attributes\nTue Aug 13 2013\n  * Do not derive Error instances
  for newtypes (type parameter has non-parametric role)\nMon Aug 12 2013\n  * Fix
  bug caused by applying posFile to nopos (reported by Mikhail Sosonkin)\n\nChanges
  since 0.4.1\n==========================================================================\nTue
  Mar 19 2013\n  * TypeCheck: Return Left str instead of fail str (do not rely on
  MonadError instance of Either)\n  * Improve printing of SUERefs and Ident\nThu Feb
  28 2013\n  * Fix parsing and printing of octal character escapes.\nTue Jun 12 2012\n
  \ * Export Annotated type class from AST module\nWed Aug 24 2012\n  * Patch for
  alex-3.0\n\nChanges 0.3.1 - 0.4.1\n==========================================================================\nTue
  Aug 16 2011:\n  * Port to ghc-7.2\nFr April 15 2011: Alexander Bernauer <bernauer@inf.ethz.ch>\n
  \ * Show instances (popular request) for AST types, DumpAst demo\n\nChanges 0.3
  - 0.3.1\n==========================================================================\nThu
  Aug 21 benedikt.huber@gmail.com\n  * add aliases for exposed parsers, in order to
  document them\n\nFri Aug 15 benedikt.huber@gmail.com\n  * Remove NameMap from Data.Name.
  We will do this right when neccessary.\n  * Parser public API: expose parsers and
  the Parser Monad\n  * ParserMonad: Return updated name supply when executing parser\n
  \ * Parser: Expose expression, statement, declaration and file parsers\n  * Data:
  Add newNameSupply ~ (namesStartingFrom 0)\n\nThu Aug 14 17:13:29 CEST 2008  iavor.diatchki@gmail.com\n
  \ * Add a utility function to create a \"blank\" set of cpp arguments.\n  * Make
  that analysis traversal monad abstract.\n  * Export the type synonym \"Register\"
  (and bump version)\n\nWed Aug 13 12:00:57 CEST 2008  benedikt.huber@gmail.com\n
  \ * add Data.Position: internalIdentAt\n\n\nOld Changes\n==========================================================================\n\nMon
  Jun  9 23:12:46 CEST 2008  benedikt.huber@gmail.com\n  * License switched to 3-clause
  BSD\n  $\n-  In accordance with the original authors, Language.C is now licensed
  as BSD-3.\n   See:\n   http://haskell.org/pipermail/c2hs/2008-June/000833.html\n
  \  http://haskell.org/pipermail/c2hs/2008-June/000834.html\n   http://haskell.org/pipermail/c2hs/2008-June/000835.html\n\n"
basic-deps:
  bytestring: '>=0.9.0'
  base: '>=4.8 && <5'
  filepath: -any
  process: -any
  array: -any
  containers: '>=0.3'
  mtl: -any
  deepseq: '>=1.4.0.0 && <1.5'
  pretty: <1.2.0
  directory: -any
all-versions:
- 0.3.0
- 0.3.1
- 0.3.1.1
- 0.3.2
- 0.3.2.1
- 0.4.1
- 0.4.2
- 0.4.3
- 0.4.4
- 0.4.5
- 0.4.6
- 0.4.7
- 0.5.0
- '0.6'
- 0.6.1
- 0.7.0
- 0.7.1
- 0.7.2
- '0.8'
- 0.8.1
- 0.8.2
- 0.8.3
- '0.9'
- 0.9.0.1
author: AUTHORS
latest: 0.9.0.1
description-type: text
description: |
  = Language.C =

  Language.C is a parser and pretty-printer framework for C11 and the extensions of gcc.

  See http://visq.github.io/language-c/

  == Build and Install ==

  cabal install

  -- or --

  runhaskell Setup.hs configure FLAGS
  runhaskell Setup.hs build
  runhaskell Setup.hs install

  Provide the set of flags passing
   --flags="<flags-seperated-by-space>"
  to configure.

  == Compatibility ==

  Tested with GHC 8.0, 8.2, 8.4, 8.6, 8.8 and 8.10

  It is recommended to use the most recent platform release: http://hackage.haskell.org/platform/.

  == C Language Compatibility ==

  Currently unsupported C11 constructs:
   - static assertion 6.7.10 (_Static_assert)
   - generic selection 6.5.1.1 (_Generic)
   - _Atomic, _Alignas, _Thread_local
   - Universal character names

  Currently unsupported GNU C extensions:
   - __auto_type
   - __builtin_offsetof
     char a[__builtin_offsetof (struct S, sa->f)
   - _Decimal32
   - Extended assembler
     __asm__ __volatile__ ("" : : : );
     __asm__ goto ("" : : : : label);
   - __attribute__((packed)): types featuring this attribute may have an
     incorrect size or alignment calculated.

  IEC 60559:
    Since language-c-0.8, extended floating point types are supported (gcc 7 feature). Package maintainers may decide to disable these types (flag iecFpExtension) to work around the fact that the _Float128 type is redefined by glibc >= 2.26 if gcc < 7 is used for preprocessing:
    /* The type _Float128 exists only since GCC 7.0.  */
    # if !__GNUC_PREREQ (7, 0) || defined __cplusplus
    typedef __float128 _Float128;
    # endif

  == Sources ==

  see src/README

  == Examples ==

  A couple of small examples are available in /examples

  == Testing ==

  A couple of regression tests can be run via
  > cd test/harness; make

  For more tests, see test/README.
license-name: BSD-3-Clause
