all-versions:
- 0.1.0.0
- 0.2.0.0
- 0.3.0.0
author: Junyoung Clare Jang
basic-deps:
  base: '>=4.12 && <5'
  megaparsec: '>=9.0.1 && <9.1'
  syb: '>=0'
  template-haskell: '>=0'
  text: '>=1.2.4.0'
changelog: "# Unreleased\n\n# 0.3.0.0\n\n## Main updates\n\n- Type/Kind level quasiquoter
  are added.\n- Evaluators are added to the top-level modules.\n- STLC and System
  F omega are tested with various examples.\n- Identifiers now accepts `_`.\n\n##
  Bug fixed\n\n- Substitutions are fixed with valid shifting.\n- STLC normalizer is
  fixed with valid beta-reduction.\n- Fix type inference for System F and System F
  omega.\n\n## Breaking changes\n\n- Names of quasiquoters are changed.\n- The order
  of arguments for substitution are changed.\n- Non-Ast modules now have explicit
  export lists.\n\n# 0.2.0.0\n\n## Main updates\n\n- New top-level module for each
  lambda calculus is added.  \n  It make easier to use one specific lambda calculus
  under a qualified name.\n- Quasiquoter now supports splicing-in.\n- Change the type
  of elaborator and type checker for composability.  \n  Currently they are less type-safe.
  However, monad to make them type-safe will be added in the future.\n\n## Breaking
  changes\n\n- Lifters and substitutions into dedicated modules are moved.\n- Pretty
  printers are renamed.\n- Elaborators are renamed.\n- Quasiquoter are renamed.\n-
  Elaborated quasiquoters are remove.\n- The types of elaborators and type checkers
  are changed.\n\n# 0.1.0.0\n\nThe first release including support for following 4
  lambda calculi.\n\n- Simply Typed Lambda Calculus\n- System F\n- System F omega
  underbar\n- System F omega\n"
changelog-type: markdown
description: '# LambdaCube'
description-type: markdown
hash: a5c36e481214dc0a68599b20730289139bce80f4b0e8ce807fcfe67254e1eb0f
homepage: https://github.com/Ailrun/lambda-cube#readme
latest: 0.3.0.0
license-name: MIT
maintainer: jjc9310@gmail.com
synopsis: Haskell implementation of (some of) lambda cube calculi
test-bench-deps:
  base: '>=0'
  hspec: '>=0'
  lambda-cube: '>=0'
  tasty: '>=0'
  tasty-hspec: '>=0'
  text: '>=0'
