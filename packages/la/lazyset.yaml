all-versions:
- 0.1.0.0
author: Carlos Freund
basic-deps:
  base: '>=4.9 && <4.10'
  containers: '>=0.5.8.1 && <0.6'
  data-ordlist: '>=0.4 && <0.5'
changelog: "# Revision history for lazyset\r\n\r\n## 0.1.0.0  -- YYYY-mm-dd\r\n\r\n*
  First version. Released on an unsuspecting world.\r\n* Import of files from https://github.com/happyherp/littlethings/tree/master/euler\r\n*
  making this a cabal-module\r\n"
changelog-type: markdown
description: "# lazyset\r\nA Lazy Set and Map implemented in Haskell. \r\n\r\n\r\nAllows
  efficient, lazy lookups on sorted lists. The list may be of ininite size. \r\n\r\nThe
  Source-List must \r\n+ contain elements that implement *Ord* \r\n+ must be ascending
  (or descending: see *fromDescList*)\r\n+ either produce an infinite number of elements
  or terminate\r\n\r\n\r\n##  Set Sample usage\r\n```haskell\r\n\r\nimport Data.Set.Lazy\r\n\r\nset
  = fromAscList $ map (*3) [1..]\r\n\r\n3 `member` set -> True\r\n4 `member` set ->
  False\r\n```\r\n\r\n\r\n## Map Sample usage\r\n\r\n```haskell\r\n\r\nimport Prelude
  hiding(lookup)\r\nimport Data.Map.Lazier\r\n\r\n\r\nsqrtmap = fromList $ map (\\i->(i,
  sqrt i)) [1..]\r\nlookup 2 sqrtmap -> Just 1.4142135623730951\r\n\r\n```\r\n\r\n#
  Performance\r\n\r\nElements from the Source-List will be requested in batches of
  increasing size. By default the batch-size is increases by two. This would lead
  to batches of *1,2,4,8,16*. This can be changed by using *growFromAscList factor
  list*. For Example a factor of *1.3* casues the batches to be *1,2,2,3,3,4,5*.\r\n\r\nIncreasing
  the growth-factor reduces lookup times but increases the batch-size. When it is
  set to 1.0 it performs like a list.\r\n\r\n\r\nlookup: O(m) = log m where m is the
  index of the element in the source-list. \r\n\r\n## Issues\r\n\r\nThis breaks the
  set, because the underlying list stops producing elements. \r\n```haskell\r\n\r\nset
  = fromList $ filter (<4) [1..]\r\n5 `member` set\r\n\r\n```\r\n"
description-type: markdown
hash: c1965db3c296226c179394fb6c832694f534c6ebb5fad499dcbdcbc561208b13
homepage: https://github.com/happyherp/lazyset
latest: 0.1.0.0
license-name: MIT
maintainer: carlosfreund@googlemail.com
synopsis: Set and Map from lazy/infinite lists.
test-bench-deps:
  HUnit: '>=0'
  base: '>=0'
  containers: '>=0'
  data-ordlist: '>=0'
  time: '>=0'
  timeit: '>=1.0.0.0 && <1.1'
