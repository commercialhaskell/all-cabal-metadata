all-versions:
- 0.1.0.0
- 0.2.0.0
- 0.2.1.0
- '0.3'
- '0.4'
- 0.4.1
- 0.4.2
author: Edsko de Vries
basic-deps:
  base: '>=4.14 && <4.19'
  containers: '>=0.6.2 && <0.8'
  ghc: '>=8.10 && <9.7'
  large-generics: '>=0.2 && <0.3'
  mtl: '>=2.2.1 && <2.4'
  primitive: '>=0.7.3 && <0.10'
  record-dot-preprocessor: '>=0.2.16 && <0.3'
  record-hasfield: '>=1.0 && <1.1'
  syb: '>=0.7 && <0.8'
  template-haskell: '>=2.16 && <2.21'
  transformers: '>=0.5.6 && <0.7'
changelog: |
  # Revision history for large-records

  ## 0.4.2 -- 2024-10-15

  * Support `primitive-0.7.3` (#159, Isaac Elliott).
  * Plugin idempotence (#159, Isaac Elliott).
  * Document required additional dependencies and language extensions (#161).
  * Use `Exact` names for `Prelude` imports, to avoid unexpected clashes (#162).

  Notes:

  * If your code imports `Data.Plugin.Record` only for the `largeRecord`
    identifier used in the `ANN` annotations, this import is no longer required as
    of this version and can be omitted.
  * In addition to `large-generics` and `record-hasfield` you will now also need
    to declare a dependency on `ghc-prim`.

  ## 0.4.1 -- 2024-05-30

  * Support ghc 9.6 (and drop ghc <= 8.8)
    [together with Tristan Cacqueray and Gabriele Sales]

  ## 0.4 -- 2023-03-06

  * Fix issue with operator type families used in fields (#120).
  * Fix issue with `NamedWildCards` (#121, #124, #125).
  * Do not generate imports in the plugin (#129).
    NOTE: This means that use code must now import `Data.Record.Plugin` to bring
    `largeRecord` into scope (necessary for `ANN` annotations).
  * Support ghc 9.4 (#131).
    An annoying quirk of ghc 9.4 is that the order of plugins is reversed; this
    matters when using `large-records` and `record-dot-preprocessor` together.
    To avoid CPP, you can now use `Data.Record.Plugin.WithRDP`, which combines
    both plugins.
  * Support `OverloadedRecordDot` and `OverloadedRecordUpdate` (#135).

  ## 0.3 -- 2022-07-22

  * Support ghc 9.2 (#113 / #117).
  * Support for field strictness annotations (#106 / #107).

  ## 0.2.1.0 -- 2022-04-06

  * Update for `large-generics` 0.2

  ## 0.2.0.0 -- 2022-03-23

  * Avoid all quotes: no more Template Haskell (#63) or quasi-quotes (#43).
    TH replaced by a source-plugin; quasi-quotes avoided by using a different
    internal representation, so that records can be constructed "as normal".
  * Removed support for the pattern synonym, as it's not needed anymore.
  * Compatible with ghc 8.10 and 9.0 (as well as 8.8).
  * `large-generics` split off as a separate package (#45).
  * Remove dependency on micro-lens (#27);
    `Data.Record.Lens.Micro` is now `Data.Record.Generic.Lens.VL`
    (and lives in `large-generics).
  * Fix some strictness issues (#33).
  * Refactored test suite and benchmarks.

  ## 0.1.0.0 -- 2021-08-19

  * First public release.
changelog-type: markdown
description: |-
  For many reasons, the internal code generated for modules
  that contain records is quadratic in the number of record
  fields. For large records (more than 30 fields, say), this
  can become problematic, leading to large compilation times
  and high memory requirements for ghc. The large-records
  library provides a way to define records that is guaranteed
  to result in ghc core that is /linear/ in the number of
  record fields.
description-type: haddock
hash: 9c969347a75b1845db5d889fe9d9f318666c1a1bdebe3bc34447f78122071ff6
homepage: ''
latest: 0.4.2
license-name: BSD-3-Clause
maintainer: edsko@well-typed.com
synopsis: Efficient compilation for large records, linear in the size of the record
test-bench-deps:
  base: '>=0'
  generic-deriving: '>=0'
  ghc-prim: '>=0'
  large-generics: '>=0'
  large-records: '>=0'
  mtl: '>=0'
  newtype: '>=0'
  record-dot-preprocessor: '>=0'
  record-hasfield: '>=0'
  tasty: '>=0'
  tasty-hunit: '>=0'
  template-haskell: '>=0'
  transformers: '>=0'
