all-versions:
- 0.0.1.0
author: tushar
basic-deps:
  aeson: '>=2 && <3'
  base: '>=4.7 && <5'
  bytestring: '>=0.10'
  containers: '>=0.6 && <0.9'
  directory: '>=1.3.6 && <1.4'
  http-conduit: '>=2 && <3'
  http-types: '>=0.11 && <0.13'
  ollama-haskell: '>=0'
  pdf-toolbox-document: ==0.1.4
  scalpel: '>=0.6 && <0.7'
  text: '>=2 && <3'
changelog: |
  # Changelog for `langchain-haskell`

  All notable changes to this project will be documented in this file.

  The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),
  and this project adheres to the
  [Haskell Package Versioning Policy](https://pvp.haskell.org/).

  ## Unreleased

  ## 0.1.0.0 - YYYY-MM-DD
changelog-type: markdown
description: "# \U0001F99C️\U0001F517LangChain Haskell\n\n⚡ Building applications
  with LLMs through composability in Haskell! ⚡\n\n## Introduction\n\nLangChain Haskell
  is a robust port of the original [LangChain](https://github.com/langchain-ai/langchain)
  library, bringing its powerful natural language processing capabilities to the Haskell
  ecosystem. This library enables developers to build applications powered by large
  language models (LLMs) with ease and flexibility.\n\n## Features\n\n- **LLM Integration**:
  Seamlessly interact with various language models, including OpenAI's GPT series
  and others.\n- **Prompt Templates**: Create and manage dynamic prompts for different
  tasks.\n- **Memory Management**: Implement conversational memory to maintain context
  across interactions.\n- **Agents and Tools**: Develop agents that can utilize tools
  to perform complex tasks.\n- **Document Loaders**: Load and process documents from
  various sources for use in your applications.\n\n## Current Supported Providers\n\n
  \ - Ollama\n  - More to come...\n\n## Installation\n\nTo use LangChain Haskell in
  your project, add it to your package dependencies. \nIf you're using Stack, include
  it in your `package.yaml`:\n\n```yaml\ndependencies:\n  - base >= 4.7 && < 5\n  -
  langchain-hs\n```\nThen, run the build command for your respective build tool to
  fetch and compile the dependency.\n\n## Quickstart\n\nHere's a simple example demonstrating
  how to use LangChain Haskell to interact with an LLM:\n\n```haskell\n{-# LANGUAGE
  OverloadedStrings #-}\nmodule Main (main) where\n\nimport Langchain.LLM.Ollama\nimport
  Langchain.LLM.Core\nimport Langchain.PromptTemplate\nimport Langchain.Callback\nimport
  qualified Data.Map.Strict as Map\nimport qualified Data.Text as T\n\nmain :: IO
  ()\nmain = do \n  let ollamaLLM = Ollama \"llama3.2\" [stdOutCallback]\n      prompt
  = PromptTemplate \"Translate the following English text to French: {text}\"\n      input
  = Map.fromList [(\"text\", \"Hello, how are you?\")]\n      \n  case renderPrompt
  prompt input of\n    Left e -> putStrLn $ \"Error: \" ++ e\n    Right renderedPrompt
  -> do\n      eRes <- generate ollamaLLM renderedPrompt Nothing\n      case eRes
  of\n        Left err -> putStrLn $ \"Error: \" ++ err\n        Right response ->
  putStrLn $ \"Translation: \" ++ (T.unpack response)\n```\n\n## Documentation\n\nDocumentation
  will soon be available on hackage.\n\n## Examples\n\nExplore the `examples` directory
  in the repository for more use cases, including:\n\n- **Conversational Agents**:
  Building chatbots that maintain context.\n- **Document Q&A**: Answering questions
  based on the content of provided documents.\n- **Tool Use**: Creating agents that
  can use external tools to fetch information or perform calculations.\n\n## Contributing\n\nContributions
  are welcome! If you'd like to contribute, please fork the repository and submit
  a pull request. \nFor major changes, please open an issue first to discuss what
  you'd like to change.\n\n## License\n\nThis project is licensed under the MIT License.
  See the [LICENSE](LICENSE) file for details.\n\n## Acknowledgements\n\nThis project
  is inspired by and builds upon the original [LangChain](https://github.com/langchain-ai/langchain)
  library and its various ports in other programming languages. \nSpecial thanks to
  the developers of those projects for their foundational work.\n"
description-type: markdown
hash: acd89d084abd1072811dfaf0f1edfeb35e3d5272d5589ee3c0071322393b89d9
homepage: https://github.com/tusharad/langchain-hs#readme
latest: 0.0.1.0
license-name: MIT
maintainer: tusharadhatrao@gmail.com
synopsis: Haskell implementation of Langchain
test-bench-deps:
  aeson: '>=2 && <3'
  base: '>=4.7 && <5'
  bytestring: '>=0.10'
  containers: '>=0.6 && <0.9'
  directory: '>=1.3.6 && <1.4'
  filepath: '>=0'
  http-conduit: '>=2 && <3'
  http-types: '>=0.11 && <0.13'
  langchain-hs: '>=0'
  ollama-haskell: '>=0'
  pdf-toolbox-document: ==0.1.4
  scalpel: '>=0.6 && <0.7'
  tasty: '>=0'
  tasty-hunit: '>=0'
  temporary: '>=0'
  text: '>=0'
