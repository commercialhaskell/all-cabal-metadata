all-versions:
- 0.1.0.0
- 0.1.1
- '0.2'
- 0.2.1
- 0.3.0
- 0.3.1
author: Edsko de Vries
basic-deps:
  aeson: '>=1.4.4 && <2.3'
  base: '>=4.14 && <4.19'
  containers: '>=0.6.2 && <0.8'
  deepseq: '>=1.4.4 && <1.6'
  fourmolu: '>=0.10.1'
  ghc: '>=8.10 && <9.7'
  ghc-tcplugin-api: '>=0.11 && <0.12'
  hashable: '>=1.3 && <1.5'
  large-generics: '>=0.2 && <0.3'
  mtl: '>=2.2.1 && <2.4'
  optics-core: '>=0.3 && <0.5'
  primitive: '>=0.8 && <0.10'
  record-hasfield: '>=1.0 && <1.1'
  sop-core: '>=0.5 && <0.6'
  syb: '>=0.7 && <0.8'
  tagged: '>=0.8.6 && <0.9'
  text: '>=0'
  typelet: '>=0.1 && <0.2'
changelog: |
  # Revision history for large-anon

  ## 0.3.1 -- 2024-05-30

  * Support ghc 9.6 (and drop ghc <= 8.8)
    [together with Gabriele Sales]

  ## 0.3 -- 2023-07-04

  * Critical bugfix (#146): incremental record construction was fundamentally
    broken. This is a major version dump because the internal representation
    is different, so if any code happens to rely on that, it will need to be
    updated. Specifically, indices into the underlying representation of the
    record are now interpreted from the _end_ of the array, rather than the
    start; this is necessary to ensure that inserting new fields (which are
    prepended to the record row) do not affect the indices of old fields.
    With thanks to Johannes Gerer for the bug report and initial investigation.
  * One somewhat unfortunate consequence of this new design is that we can no
    longer resolve constraints `HasField` constraints unless _all_ fields in the
    record are known. Previously, we had limited support for resolving `HasField`
    constraints for rows such as `(a := Int ': r)`. However, since this
    support did not extend to other constraints, it was probably not very useful
    anyway; `large-anon` is quite explicit about not supporting inductive
    reasoning.
  * Add `disableFourmoluExec` flag to disable the Fourmolu tests in the test suite
    (#145; together with Johannes Gerer).

  ## 0.2.1 -- 2023-06-05

  * Add `distribute` (Johannes Gerer, #142)

  ## 0.2 -- 2023-03-06

  * Do not generate imports in the plugin (#129).
  * Support ghc 9.4 (#131).
  * Use `ANON`/`ANON_F` in `Show` instance (#103).
  * Support `OverloadedRecordDot` and `OverloadedRecordUpdate` (#128).

  ## 0.1.1 -- 2022-07-22

  * Support for ghc 9.2 (#116)

  ## 0.1.0.0 -- 2022-04-06

  * First public release
changelog-type: markdown
description: |-
  The @large-anon@ package provides support for anonymous
  records in Haskell, with a focus on compile-time (and
  run-time) scalability.
description-type: haddock
hash: ef93b1574f4a42b7e76079024546a9bfed252d0426f3145d5f989517fd6fbc81
homepage: ''
latest: 0.3.1
license-name: BSD-3-Clause
maintainer: edsko@well-typed.com
synopsis: Scalable anonymous records
test-bench-deps:
  QuickCheck: '>=0'
  Stream: '>=0'
  aeson: '>=0'
  aeson-pretty: '>=0'
  arrows: '>=0'
  base: '>=0'
  bytestring: '>=0'
  containers: '>=0'
  large-anon: '>=0'
  large-generics: '>=0'
  mtl: '>=0'
  optics-core: '>=0'
  parsec: '>=0'
  record-dot-preprocessor: '>=0'
  record-hasfield: '>=0'
  sop-core: '>=0'
  tasty: '>=0'
  tasty-hunit: '>=0'
  tasty-quickcheck: '>=0'
  text: '>=0'
  typelet: '>=0'
  validation-selective: '>=0'
