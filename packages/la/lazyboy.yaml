all-versions:
- 0.2.0.1
- 0.2.1.1
- 0.2.2.0
author: Rose
basic-deps:
  aeson: '>=1.4.2.0 && <1.5'
  base: '>=4.7 && <5'
  hspec: '>=2.6.1 && <2.7'
  microstache: '>=1.0.1.1 && <1.1'
  text: '>=1.2.3.1 && <1.3'
  transformers: '>=0.5.6.2 && <0.6'
changelog: |
  # Changelog for Lazyboy

  # 0.2.2.0
  - Added a Prelude module which provides overloaded operators.
  - Updated the example in Main.hs to use the newer syntax.
  - Updated README to match the newer syntax.

  # 0.2.1.1
  - Added a lot of instruction tests and fix some bugs.

  # 0.2.1.0
  - Added compound conditionals, including boolean AND, OR support.
  - Added tests for conditionals.

  # 0.2.0.0
  - Started versioning.
  - Formatted as a library package.

  ## 0.2.0.1
  - Removed some useless instances of Show and Read.
  - Refactored most of the documentation.

  ## 0.2.0.2
   - Changed ASM.hs to use custom exception types instead of just `error`.

  # 0.1.0.0
  - Initial version.

  ## Unreleased changes
changelog-type: markdown
description: "![LAZYBOY](meta/logo.png)\n[![Build Status](https://travis-ci.org/ix/lazyboy.svg?branch=master)](https://travis-ci.org/ix/lazyboy)\n[![Coverage
  Status](https://coveralls.io/repos/github/ix/lazyboy/badge.svg?branch=master)](https://coveralls.io/github/ix/lazyboy?branch=master)\n[![Hackage](https://img.shields.io/hackage/v/lazyboy.svg?color=mediumpurple)](https://hackage.haskell.org/package/lazyboy)\n---\n\nAn
  embedded domain-specific language + compiler written in Haskell for producing code
  to run on the Nintendo Game Boy.\n\nAlso features a library for manipulating constructs
  such as memory and graphics.\n\nCurrently, RGBASM is the only output target, but
  in the future native machine code generation is planned.\n\nSyntax example (will
  be updated as more complex constructs are added):\n\n```haskell\nmain :: IO ()\nmain
  = rom >>= T.putStrLn\n    where rom = compileROM $ do\n            byte A 0xDE\n
  \           byte B 0xDE\n            if' ((A == (0xDE :: Word8)) && (A == B)) $
  do\n                write (Address wram0) 0xDE\n            freeze\n```\n\nSee `app/Main.hs`
  for a full usage example.\n\nBuild a ROM (output will be named `main.gb`):\n```\nstack
  run > examples/main.asm\ncd examples && make NAME=main\n```\n\n# About issues\nI
  mostly use the issue tracker on here as a place to write about planned features
  and compiler development, \ndon't take the count as an indicator of active bugs,
  and be sure to filter to show only issues that are bugs if you are curious on the
  state of the project.\n\n# Contributing\nPlease see the [Contributing](https://github.com/ix/lazyboy/wiki/Contributing)
  page on the Wiki.\n\nAdditional information about the project can also be found
  on the Wiki.\n\n# Special thanks\nThanks to [Francesco149](https://github.com/Francesco149)
  and [Bonzi](https://github.com/bnzis) for kindly devoting their time and knowledge
  to the project. The graphics functionality in particular would not be where it is
  without their assistance.\n"
description-type: markdown
hash: 5c8435f01ac7da477bcc2ce545621e0806c319086e41da9c3d9b2812327b110f
homepage: https://github.com/ix/lazyboy#readme
latest: 0.2.2.0
license-name: BSD-3-Clause
maintainer: rose@lain.org.uk
synopsis: An EDSL for programming the Game Boy.
test-bench-deps:
  aeson: '>=1.4.2.0 && <1.5'
  base: '>=4.7 && <5'
  hspec: '>=2.6.1 && <2.7'
  lazyboy: '>=0'
  microstache: '>=1.0.1.1 && <1.1'
  text: '>=1.2.3.1 && <1.3'
  transformers: '>=0.5.6.2 && <0.6'
