all-versions:
- 0.0.1
author: Daniil Iaitskov
basic-deps:
  base: '>=4.7 && <5'
  bytestring: '>=0.12.1 && <1'
  deepseq: <2
  directory: <2
  filepath: <2
  mtl: <3
  relude: '>=1.2.2 && <2'
  trace-embrace: '>=1.2.0 && <2'
  transformers: <1
  unliftio: <1
changelog: |
  # lazy-scope changelog


  ## Version 0.0.1 2025-07-12
    * init
changelog-type: markdown
description: |-
  lazy-scope library appeared as an attempt to improve lazy IO API from
  <https://hackage.haskell.org/package/bytestring bytestring> package:

  -   @hGetContents@ closes handle which was open by somebody else.
  -   @hGetContents@ closes handle only on EOF

  E.g. <https://hackage.haskell.org/package/git-phoenix git-phoenix> does
  GIT objects recovery. Recovered compressed file usually has trailing
  trash bytes after archive ends. In such circumstance bracket finalizer
  should check every handle before closing.

  lazy-scope library provides @hGetContents@ with alternative semantic -
  it never close the handle! Handle and values, derived from it, have a
  type parameter which prevents accidental thunk escape beyond open handle
  scope. Solution is based on
  <https://hackage.haskell.org/package/base/docs/Control-Monad-ST.html ST>
  monad.

  > import Lazy.Scope qualified as S
  > import Relude
  >
  > main = do
  >   r <- S.withBinaryFile "/etc/hosts" ReadMode S.hGetContents
  >   S.unsnoc r `seq` return ()

  Error:

  >   • Couldn't match type ‘s0’ with ‘s’
  >     Expected: S.Handle s -> S.LazyT s IO (S.Bs s0)
  >       Actual: S.Handle s -> S.LazyT s IO (S.Bs s)
  >       because type variable ‘s’ would escape its scope

  Correct version:

  > import Data.ByteString.Lazy qualified as LBS
  > import Lazy.Scope qualified as S
  > import Relude
  >
  > main = do
  >   r <- S.withBinaryFile "/etc/hosts" ReadMode (S.hGetContents >=> S.toLbs)
  >   LBS.unsnoc r `seq` return ()

  The package has scoped alternatives for majority of @Handle@ and
  @ByteString@ functions from @System.IO@ and @Data.ByteString.Lazy@
  modules correspondingly.

  == Development
  #development#

  Dev environment is provided by
  <https://nixos.org/guides/nix-pills/10-developing-with-nix-shell.html nix-shell>

  > $ nix-shell
  > $ cabal test
description-type: haddock
hash: 198895256d47d689b9e0e0fb503ce1683b27dd216d691686e855f73dac8ae274
homepage: http://github.com/yaitskov/scoped-handle
latest: 0.0.1
license-name: BSD-3-Clause
maintainer: dyaitskov@gmail.com
synopsis: Alternative lazy ByteString and ST-like IO Handle
test-bench-deps:
  base: '>=4.7 && <5'
  bytestring: '>=0.12.1 && <1'
  directory: '>=0'
  lazy-scope: '>=0'
  relude: '>=1.2.2 && <2'
  tasty: '>=0'
  tasty-discover: '>=0'
  tasty-hunit: '>=0'
  tasty-quickcheck: '>=0'
  unliftio: <1
