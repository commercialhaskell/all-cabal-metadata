all-versions:
- 0.1.0.0
- 0.1.1.0
- 0.1.2.0
author: Marios Titas <rednebΑΤgmxDΟΤcom>
basic-deps:
  base: '>=4.9 && <5'
  bytestring: '>=0.10.2'
changelog: |
  #### 0.1.2.0 *2018-03-15*

  * Fix compatibility with base-4.11/GHC 8.4

  #### 0.1.1.0 *2016-01-25*

  * Introduce the `adler32Update'` method to the `Adler32Src` class.
changelog-type: markdown
description: |-
  This package provides an implementation of the Adler-32 checksum algorithm.
  It supports a rolling checksum mode, i.e. the checksum of a sliding window
  of the input message can be computed efficiently. It also supports
  compounding, i.e. the checksum of the concatenation of two messages can be
  efficiently computed from the checksums of the two parts.

  By default, the highly optimized implementation of Adler-32 from @zlib@
  will be used. This can be disabled, in which case a pure haskell
  implementation will be used instead. On my system, the haskell version
  is 2 to 3 times slower.
description-type: haddock
hash: 1a6a55affe1ce5cf61c7d71fa074042d9a5703df1d3322993535e73b908b99fc
homepage: https://github.com/redneb/hs-adler32
latest: 0.1.2.0
license-name: BSD-3-Clause
maintainer: Marios Titas <rednebΑΤgmxDΟΤcom>
synopsis: An implementation of Adler-32, supporting rolling checksum operation
test-bench-deps:
  adler32: '>=0'
  base: '>=0'
  bytestring: '>=0'
  hspec: '>=2'
