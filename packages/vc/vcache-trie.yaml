all-versions:
- '0.1'
- 0.1.1
- 0.1.2
- 0.2.0
- 0.2.1
- 0.2.2
- 0.2.3
- 0.2.4
author: David Barbour
basic-deps:
  array: '>=0'
  base: '>=4.6 && <5'
  bytestring: '>=0'
  bytestring-builder: '>=0'
  vcache: '>=0.2.3'
changelog: "\n# Versions\n\n## 0.1 \n* initial release\n\n## 0.1.1 \n* flexibility:
  expose module VCache.Trie.Type\n\n## 0.1.2 \n* performance: lookup by prefix without
  allocation\n\n## 0.2.0\n* documentation: adding this changelog\n* modified lookup'
  to receive user-defined 'deref' behavior\n * removes lookupc and modifies signature
  for lookup'\n* lookup variants now use CacheMode0 by default\n\n## 0.2.1\n* performance:
  plain old bytestring ops for key reconstruction \n * (from profiling) bytestring
  builder isn't helping at typical key sizes\n\n## 0.2.2\n* function: toListOnKey
  to support key-range lookups\n\n## 0.2.3\n* function: diff; find changes between
  two tries\n\n## 0.2.4\n* added 'functor' instance for the Diff datatype"
changelog-type: markdown
description: "\n# Haskell VCache Trie\n\nA Patricia trie implemented above [VCache](https://hackage.haskell.org/package/vcache).
  \n\nSuitable for database-as-a-value or modeling abstract virtual filesystems. \n\nCurrently,
  this only supports bytestring keys, similar to the [bytestring-trie](http://hackage.haskell.org/package/bytestring-trie)
  package. It may be necessary to later adapt the [list-tries](http://hackage.haskell.org/package/list-tries)
  model to support arbitrary keys... though, not for any projects I'm pursuing at
  the moment.\n"
description-type: markdown
hash: 009c3b546001e618d22373f5c5b9405ecf11240127ebce6b322b9908b089df8e
homepage: http://github.com/dmbarbour/haskell-vcache-trie
latest: 0.2.4
license-name: BSD-3-Clause
maintainer: dmbarbour@gmail.com
synopsis: 'patricia tries modeled above VCache '
test-bench-deps: {}
