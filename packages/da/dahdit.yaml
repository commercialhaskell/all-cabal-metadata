all-versions:
- 0.1.0
- 0.1.1
- 0.1.2
- 0.1.3
- 0.1.4
- 0.2.0
- 0.3.0
- 0.5.0
- 0.5.1
- 0.6.0
author: Eric Conlon
basic-deps:
  base: '>=4.12 && <5'
  bytestring: '>=0.11 && <0.13'
  containers: '>=0.6 && <0.7'
  data-default: '>=0.7 && <0.8'
  data-sword: '>=0.2 && <0.3'
  free: '>=5.1 && <5.3'
  ghc-typelits-knownnat: '>=0.7 && <0.8'
  mtl: '>=2.2 && <2.4'
  primitive: '>=0.7 && <0.10'
  text: '>=1.2 && <2.2'
  transformers: '>=0.5 && <0.7'
  vector: '>=0.12 && <0.14'
changelog: ''
changelog-type: ''
description: |+
  # dahdit

  Binary parsing and serialization with integrated size.

  (dahs and dits are signal durations in Morse code)

  This differs from `binary` in a few ways:

  * It supports parsing from (or rendering into) pinned or unpinned memory.
  * It uses `ByteArray` internally to avoid generating new or retaining references to old pinned memory.
  * Examining `Put` can yield required byte size without serializing.
  * Derivation uses `via` and not `anyclass` for better control of derived instances.
  * Types implementing `Binary` can implement `byteSized` for size calculation (or it will reflect on `put`).
  * Known-statically-sized types can implement `StaticByteSized` for size speedups.
  * Provides several additional types representing fixed-length strings or sequences (using `TypeLits`).

  ## Static sizes

  You may find it necessary to discharge simple `KnownNat` constraints with a plugin like `ghc-typelits-knownnat`.
  Add that package to your dependencies and add this to the top of the necessary files:

      {-# OPTIONS_GHC -fplugin GHC.TypeLits.KnownNat.Solver #-}

description-type: markdown
hash: df4791564cd4bc14d77e6c37e7c37c37d62f7a52eb9d32d056520617824befe4
homepage: https://github.com/ejconlon/dahdit#readme
latest: 0.6.0
license-name: BSD-3-Clause
maintainer: ejconlon@gmail.com
synopsis: Binary parsing and serialization with integrated size
test-bench-deps:
  base: '>=4.12 && <5'
  bytestring: '>=0.11 && <0.13'
  containers: '>=0.6 && <0.7'
  dahdit: '>=0'
  data-default: '>=0.7 && <0.8'
  data-sword: '>=0.2 && <0.3'
  free: '>=5.1 && <5.3'
  ghc-typelits-knownnat: '>=0.7 && <0.8'
  hedgehog: '>=1.5 && <1.6'
  mtl: '>=2.2 && <2.4'
  primitive: '>=0.7 && <0.10'
  prop-unit: '>=0.2 && <0.3'
  text: '>=1.2 && <2.2'
  transformers: '>=0.5 && <0.7'
  vector: '>=0.12 && <0.14'
