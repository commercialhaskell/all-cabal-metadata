homepage: https://github.com/ejconlon/dahdit#readme
changelog-type: ''
hash: a531787da9c3bfe8d43b0016390b001a4e10c6a2475f5cf43266dbd5c2857f3e
test-bench-deps:
  dahdit: -any
  free: ==5.1.*
  bytestring: '>=0.10 && <0.12'
  base: '>=4.12 && <5'
  data-sword: ==0.2.*
  data-default: ==0.7.*
  containers: ==0.6.*
  mtl: ==2.2.*
  tasty-hunit: -any
  transformers: ==0.5.*
  tasty: -any
  primitive: ==0.7.*
maintainer: ejconlon@gmail.com
synopsis: Binary parsing and serialization with integrated size
changelog: ''
basic-deps:
  free: ==5.1.*
  bytestring: '>=0.10 && <0.12'
  base: '>=4.12 && <5'
  data-sword: ==0.2.*
  data-default: ==0.7.*
  containers: ==0.6.*
  mtl: ==2.2.*
  transformers: ==0.5.*
  primitive: ==0.7.*
all-versions:
- 0.1.0
- 0.1.1
author: Eric Conlon
latest: 0.1.1
description-type: markdown
description: |
  # dahdit

  Binary parsing and serialization with integrated size.

  This differs from `binary` in a few ways:

  * It is required that all types implementing `Binary` must also implement `ByteSized`.
  * Known-statically-sized types can implement `StaticByteSized` for size speedups.
  * Examining `Put` can yield required byte size without serializing.
  * It uses `ShortByteString` to avoid pinned memory.
  * It supports parsing `PrimArray` for fast copies of repeated chunks of primitive data.
  * Derivation uses `via` and not `anyclass` for better control of derived instances.
  * Provides several additional types representing fixed-length strings or sequences (using `TypeLits`).

  This generally works but should be considered experimental.

  (dahs and dits are signal durations in Morse code)
license-name: BSD-3-Clause
