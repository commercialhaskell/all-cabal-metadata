all-versions:
- 0.0.0.1
- 0.0.0.2
- 0.0.1.0
author: Sebastian Graf
basic-deps:
  base: '>=4.8 && <5'
  containers: '>=0.5 && <0.7'
  datafix: '>=0'
  lattices: <2
  pomaps: '>=0.2 && <0.3'
  primitive: '>=0.6.2.0 && <0.8'
  transformers: <0.6
  vector: <0.13
changelog: |
  # Change log

  `datafix` follows the [PVP][1].
  The change log is available [on GitHub][2].

  [1]: https://pvp.haskell.org/
  [2]: https://github.com/sgraf812/datafix/releases
changelog-type: markdown
description: |-
  `datafix` [![Build Status](https://travis-ci.org/sgraf812/datafix.svg?branch=master)](https://travis-ci.org/sgraf812/datafix) [![Hackage](https://img.shields.io/hackage/v/datafix.svg)](https://hackage.haskell.org/package/datafix)
  ==========

  Library for separating specification of a data-flow problem from computing its solution.

  See the haddocks in `Datafix.Tutorial` for an introduction and the `examples/` folder for more advanced material.
description-type: markdown
hash: d658337cc7cd229972a71161ceaaeb4bf03586bd1f2cf1791155495ab39da03f
homepage: https://github.com/sgraf812/datafix
latest: 0.0.1.0
license-name: ISC
maintainer: sgraf1337@gmail.com
synopsis: Fixing data-flow problems
test-bench-deps:
  Cabal: '>=0'
  QuickCheck: '>=2.5'
  base: '>=4.8 && <5'
  cabal-toolkit: '>=0.0.4'
  containers: '>=0'
  criterion: '>=1.1'
  datafix: '>=0'
  deepseq: '>=0'
  directory: '>=0'
  doctest: '>=0.10'
  filepath: '>=0'
  ghc: '>=0'
  ghc-paths: '>=0'
  lattices: <2
  primitive: '>=0'
  tasty: '>=0.11'
  tasty-hunit: '>=0.9'
  tasty-smallcheck: '>=0.8'
  text: '>=0'
  transformers: <0.6
  turtle: '>=0'
