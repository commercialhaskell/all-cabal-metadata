all-versions:
- '0.1'
- 0.1.1
- 0.1.2
- 0.1.3
- 0.1.5.1
- 0.1.6
- 0.1.7
- 0.1.8
- 0.1.8.1
- 0.1.8.2
- 0.1.8.3
- 0.1.9
author: |-
  Eric Kow <kowey@darcs.net>, Simon Michael <simon@joyful.com>
  and Petr Rockai <me@mornfall.net>
basic-deps:
  HTTP: '>=4000.0.8 && <4000.1'
  SHA: '>=0'
  base: <5
  bytestring: '>=0'
  cmdargs: '>=0'
  containers: '>=0'
  datetime: '>=0'
  directory: '>=0'
  filepath: '>=0'
  hs-gchart: '>=0'
  html: '>=0'
  json: '>=0.4 && <0.5'
  mtl: '>=0'
  network: '>=2.2 && <2.3'
  old-locale: '>=0'
  process: '>=0'
  regex-posix: '>=0'
  split: '>=0.1 && <0.2'
  statistics: '>=0.4 && <0.5'
  strict: '>=0'
  tabular: '>=0.2.2.1'
  tar: '>=0'
  time: '>=0'
  utf8-string: '>=0.3 && <0.4'
  uvector: '>=0.1 && <0.2'
  zlib: '>=0'
changelog: ''
changelog-type: ''
description: |
  Darcs benchmarking bits
  =======================

  Running
  -------

  Say `cabal install` to build and install the darcs-benchmark binary. When you
  have one, run it to obtain further instructions. (Hint: --get will download the
  benchmark repositories.)

  Writing Benchmarks
  ------------------

  Please take a look at Standard.hs: this is a module with a bunch of "standard
  darcs benchmarks", currently get, annotate, check, repair and some other. It
  should be fairly clear how to write your own from these examples. Timing is the
  overall time spent in the benchmark, memory is the peak memory usage reported
  by RTS, from darcs invocations only (this also means that the darcs executables
  supplied need to accept +RTS ... options).

  Adding repositories
  -------------------

  To add a new repository:

  - cd my-bench-repo && tar czf ../my-bench-repo.tgz .
  - upload the result somewhere and tell mornfall (me-at-mornfall-dot-org)

  To test locally, just darcs get /path/to/your/repository repo.your-repo and run
  darcs-benchmark.

  Obtaining Profiles
  -----------------

  Not yet implemented, but shouldn't be too hard. Probably we need to:

  - detect whether the binaries are compiled with profiling enabled,
  - pass in the right RTS flags to produce some profiling output,
  - stash away this output after each darcs invocation, to a predictable place.
description-type: text
hash: ed897754de1db7759f07b4f8695541a39ddd5f9df8d38ea8498fd20ecfb6fc00
homepage: http://wiki.darcs.net/Development/Benchmarks
latest: 0.1.9
license-name: BSD-3-Clause
maintainer: Darcs Project <darcs-users@darcs.net>
synopsis: Comparative benchmark suite for darcs.
test-bench-deps: {}
