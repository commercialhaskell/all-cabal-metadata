all-versions:
- '0.4'
- '0.5'
- '0.6'
- 0.6.1
- 0.7.0
author: João Cristóvão
basic-deps:
  base: '>=4.6 && <4.11'
  containers: '>=0.5.0.0'
  safe: '>=0.3.3'
changelog: ''
changelog-type: ''
description: |-
  Easy to use set of utility functions, implementing a Data.Maybe like
  interface for other common types, like Either, List, Bool, Tuple,
  or even member of the Monoid type class.
  Also features a set of conversion functions among them,
  using sensible defaults.

  Most of these functions are one liners, and this library started out as a
  self-educational project, which nevertheless proved to to be useful on its
  own right.

  Please feel free to contribute and/or suggest changes.
description-type: haddock
hash: 0df7e6579f6aa685327dd0e7432fc02cbef8d19b682d026df01c2d0c13656d17
homepage: https://github.com/jcristovao/data-easy
latest: 0.7.0
license-name: BSD-3-Clause
maintainer: jmacristovao@gmail.com
synopsis: Consistent set of utility functions for Maybe, Either, List and Monoids.
test-bench-deps:
  HUnit: '>=1.2.5.2'
  QuickCheck: '>=2.7 && <2.8'
  base: '>=4.6 && <4.9'
  containers: '>=0.5.0.0'
  directory: '>=1.2.0.1'
  errors: '>=2.0'
  haskell-src-exts: '>=1.14'
  hlint: '>=0'
  hspec: '>=1.7.2'
  safe: '>=0.3.3'
  text: '>=0.11.3'
  transformers: '>=0.4 && <0.5'
  unix: '>=2.6'
