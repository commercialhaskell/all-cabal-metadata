homepage: ''
changelog-type: text
hash: f52f8e75e68682f12baeebe387e9a6c013d7a3c96dfb100d7f262771431be124
test-bench-deps:
  base: (>=4.6 && <5)
  zephyr-copilot: -any
  process: -any
  temporary: -any
  directory: -any
maintainer: Joey Hess <id@joeyh.name>
synopsis: Embedded programming in haskell using the Copilot stream DSL and Zephyr
changelog: |
  zephyr-copilot (1.0.3) upstream; urgency=medium

    * Update to copilot-3.10.

   -- Joey Hess <id@joeyh.name>  Tue, 12 Jul 2022 21:45:22 -0400

  zephyr-copilot (1.0.2) upstream; urgency=medium

    * Update to copilot-3.9.

   -- Joey Hess <id@joeyh.name>  Sun, 08 May 2022 15:14:11 -0400

  zephyr-copilot (1.0.1) upstream; urgency=medium

    * Small documentation fixes.

   -- Joey Hess <id@joeyh.name>  Sun, 08 May 2022 15:12:10 -0400

  zephyr-copilot (1.0.0) unstable; urgency=medium

    * First release.

   -- Joey Hess <id@joeyh.name>  Fri, 11 Feb 2022 14:07:02 -0400
basic-deps:
  copilot: (==3.10.*)
  base: (>=4.5 && <5)
  filepath: -any
  containers: -any
  copilot-c99: (==3.10.*)
  sketch-frp-copilot: (==1.0.3)
  copilot-language: (==3.10.*)
  mtl: -any
  temporary: -any
  optparse-applicative: (>=0.14.1)
  directory: -any
all-versions:
- 1.0.0
- 1.0.1
- 1.0.2
- 1.0.3
author: Joey Hess
latest: 1.0.3
description-type: text
description: "Embedded programming in haskell using the Copilot stream DSL and Zephyr\nzephyr-copilot
  contains allows using Haskell to program many boards\nsupported by the Zephyr project.\n\nzephyr-copilot
  uses the Copilot stream DSL (domain-specific language)\nand Functional Reactive
  Programming (FRP) to generate a program which\ncan be compiled in Zephyr and flashed
  to the board.\n\nSee Copilot.Zephyr for details on how to use write a program using
  this\nlibrary.\n\nFor example, to make a board blink its LED:\n\n\timport Copilot.Zephyr.Board.Generic\n\tmain
  = zephyr $ do\n\t\tled0 =: blinking\n\t\tdelay =: MilliSeconds (constant 100)\n\nThis
  and other examples are included in the Examples/ directory, each\nwith their own
  README explaining how to build and use them.\n\nCopilot is a stream (i.e., infinite
  lists) domain-specific language\n(DSL) in Haskell that compiles into embedded C.
  Copilot contains an\ninterpreter, multiple back-end compilers, and other verification
  tools.\n<https://copilot-language.github.io/>\n\nZephyr is a real time embedded
  operating system (RTOS) supporting\nhundreds of boards. <https://zephyrproject.org/>\n\n##
  Contributing\n\nContributions are welcome, including adding support for more parts
  of\nZephyr and more boards that are supported by Zephyr.\n\nAny contribution should
  have well documented functions and types.\n"
license-name: BSD-3-Clause
