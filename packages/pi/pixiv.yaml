homepage: https://github.com/The-closed-eye-of-love/pixiv
changelog-type: markdown
hash: 01280495b4129b87662b86c8581b1ea596e11db34f0075ab00961ca080948e0f
test-bench-deps:
  http-client: ^>=0.6.4
  bytestring: ^>=0.10.12
  base: '>=4.10 && <5'
  pixiv: -any
  http-client-tls: ^>=0.3.5
  aeson: ^>=1.5.4
maintainer: Poscat <poscat@mail.poscat.moe>, berberman <berberman@yandex.com>
synopsis: Pixiv API binding based on servant-client
changelog: |
  # pixiv

  ## 0.1.0

  Initial release
basic-deps:
  http-client: ^>=0.6.4
  exceptions: ^>=0.10.4
  zip-archive: ^>=0.4.1
  bytestring: ^>=0.10.12
  base: '>=4.10 && <5'
  time: ^>=1.9.3
  servant-client: ^>=0.18.2
  text: ^>=1.2.3
  cryptohash-md5: ^>=0.11.100
  servant-client-core: ^>=0.18.2
  monad-control: ^>=1.0.2
  filepath: ^>=1.4.2
  process: ^>=1.6.9
  servant: ^>=0.18.2
  lens: ^>=4.19.2
  http-client-tls: ^>=0.3.5
  mtl: ^>=2.2.2
  transformers-base: ^>=0.4.5
  base16-bytestring: '>=0.1.1 && <1.1'
  transformers: ^>=0.5.6
  temporary: ^>=1.3
  aeson: ^>=1.5.4
  template-haskell: -any
  directory: ^>=1.3.6
all-versions:
- 0.1.0
author: Poscat, berberman
latest: 0.1.0
description-type: markdown
description: "# pixiv\n\n[![build](https://github.com/The-closed-eye-of-love/pixiv/workflows/build/badge.svg)](https://github.com/The-closed-eye-of-love/pixiv/actions)\n[![nix](https://github.com/The-closed-eye-of-love/pixiv/workflows/nix/badge.svg)](https://github.com/The-closed-eye-of-love/pixiv/actions)\n[![Hackage](https://img.shields.io/hackage/v/pixiv.svg?logo=haskell)](https://hackage.haskell.org/package/pixiv)\n![Hackage-Deps](https://img.shields.io/hackage-deps/v/pixiv)\n[![LICENSE](https://img.shields.io/github/license/The-closed-eye-of-love/pixiv)](LICENSE)\n\nHaskell
  implementation of Pixiv API, based on [servant-client](https://hackage.haskell.org/package/servant-client).\n\n##
  Usage\n\nIn most cases, it is enough to import only `Web.Pixiv`. If you want to
  use lenses to access and operate data types,\nyou should import `Web.Pixiv.Types.Lens`
  as well. Pixiv API requires authentication before being accessed, thus the `PixivT`
  monad transformer provides an user-friendly and thread-safe interface\nto manage,
  and renew access token on demand, where you just need to give the username and password
  of your pixiv account.\n\n### Example\n\nHere is a simpe example:\n\n```haskell\nimport
  Control.Lens ((^.))\nimport Control.Monad.IO.Class (liftIO)\nimport Web.Pixiv\nimport
  Web.Pixiv.Types.Lens\n\nmain :: IO ()\nmain = do\n  let credential = Password \"username\"
  \"password\"\n  result <- runPixivT' credential action\n  case result of\n    Left
  err -> print err\n    Right x -> pure x\n\naction :: PixivT IO ()\naction = do\n
  \ -- gets the details of user <https://www.pixiv.net/users/16731>\n  userDetail
  <- getUserDetail 16731\n  liftIO $ print userDetail\n\n  -- gets the details of
  illustration <https://www.pixiv.net/artworks/80132896>\n  illustDetail <- getIllustDetail
  80132896\n  liftIO $ print illustDetail\n\n  -- gets day ranking illustrations\n
  \ -- 1 means the first page of the results\n  ranking <- getIllustRanking (Just
  Day) 1\n  liftIO $ print ranking\n\n  -- searches the user who has name \"玉之けだま\"
  then gets their first work\n  -- (function 'head' is not total, just used for demonstration)
  \n  targetUser <- head <$> searchUser \"玉之けだま\" Nothing 1\n  firstWork <- head <$>
  getUserIllusts (targetUser ^. user . userId) (Just TypeIllust) 1\n  liftIO $ print
  firstWork\n```\n\nAs you can see, functions accessing Pixiv API are run in `PixivT
  IO` monad.\nFor more functionalities this library provides and relevant information
  about functions or data types, please refer to the documentation.  \n\n## Documentation\n\nDocumentation
  is available at [hackage (latest release)](https://hackage.haskell.org/package/pixiv)\nand
  our [github pages (master)](https://the-closed-eye-of-love.github.io/pixiv/).\n\n##
  Related projects\n\n* [pixivpy](https://github.com/upbit/pixivpy)\n* [Pixiv-Shaft](https://github.com/CeuiLiSA/Pixiv-Shaft)\n"
license-name: BSD-3-Clause
