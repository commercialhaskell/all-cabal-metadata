homepage: https://github.com/jonschoning/pinboard
changelog-type: markdown
hash: 4f66ae76ce4beb6d130ed2f8586da0d632e637b0a1b9dc607da8d53cb6a38e04
test-bench-deps:
  bytestring: -any
  unliftio: -any
  base: '>=4.6 && <5.0'
  time: -any
  unordered-containers: -any
  hspec: '>=1.8'
  text: -any
  semigroups: -any
  containers: -any
  unliftio-core: -any
  mtl: '>=2.2.1'
  pinboard: -any
  transformers: '>=0.4.0.0'
  QuickCheck: -any
  aeson: -any
maintainer: jonschoning@gmail.com
synopsis: Access to the Pinboard API
changelog: "__v0.10.3.0\nghc9.0, aeson 2.0\n\n__v0.10.2.0\n\nupdate time dependency\n\n__v0.10.1.4\n\nnetwork
  3.0.0.0\n\n__v0.10.1.3\n\nhttp-client 0.6\n\n__v0.10.1.2\n\nupdate to ghc 8.6; update
  containers\n\n__v0.10.0.0\n\nrefactor; use UnliftIO; remove MonadError/MonadErrorPinboard;
  remove ExceptT from PinboardT\n\n** previously caught http exceptions may no longer
  by automatically be caught - need to test further **\n\n__v0.9.12.11\n\nupdate deps
  bounds\n\n__v0.9.12.9\n\nupdate http-types bounds\n\n__v0.9.12.5\n\nupdate time
  bounds\n\n__v0.9.12.4\n\nfix for aeson [] instances in 1.0.0.0\n\n__v0.9.12.2\n\nvector
  bounds\n\n__v0.9.12.1\n\nbug fixes \n\n__v0.9.12__\n\nadd runPinboardE\n\nadd ability
  to delay the thread if the time since the previous request exceeds the configured
  maxRequestRateMills (rename requestDelayMills to maxRequestRateMills)\n\n__v0.9.11__\n\nadd
  logging\n\nadd option to delay between requests (requestDelayMills)\n\n__v0.9.10__\n\navoid
  pre-lifting IO into MonadIO\n\nextend aeson upper-bound\n\n__v0.9.9__\n\ngeneralize
  (Either PinboardError a) to (MonadErrorPinboard)\n\n__v0.9.8__\n\nuse safe-exception\n\navoid
  use of 'error' to communicate failure when parsing json\n\nincludes a few changes
  to the types/api in Pinboard.Client\n\n__v0.9.7__\n\nadd http-client-0.5.0 support\n\nadd
  PVP bounds\n\n__v0.9.6__\n\nadd http-client bound\n\n__v0.9.5__\n\nadd JSON roundtrip
  tests\n\n__v0.9.4__\n\nderive generic\n\n__v0.9.3__\n\nAdd lenses\n\n__v0.9.2__\n\nMake
  data fields strict\n\n__v0.9.1__\n\nrename field: postToread -> postToRead\n\n__v0.9.0__\n\nrefactored
  Client.hs to simplify parameters\n\npromote types under .Client subtree to top-level\n\n__v0.8.5__\n\nreplace
  Pinboard stack with PinboardT transfomer (use mtl style constraints instead of a
  fixed monad transformer stack)\n\n__v0.7.5__\n\nreplacing/removing io-streams in
  favor of http-client\n\n__v0.6.5__\n\ncompatability with both time < 1.5 and time
  >= 1.5\n\n__v0.6.4__\n\nadd ability to update a post directly from a Post record
  (save an existing post)\n\n__v0.6.3__\n\nadd ToJson instances\nadd pretty print
  function\n"
basic-deps:
  http-client: '>=0.5 && <0.8'
  bytestring: '>=0.10.0 && <0.11'
  unliftio: -any
  base: '>=4.6 && <5.0'
  time: '>1.3'
  unordered-containers: -any
  text: '>=0.11 && <1.3'
  network: '>=2.6.2 && <4'
  containers: '>=0.5.0.0 && <0.7'
  unliftio-core: -any
  http-client-tls: '>=0.3.0 && <0.4'
  mtl: '>=2.2.1'
  monad-logger: ==0.3.*
  transformers: '>=0.4.0.0'
  random: '>=1.1'
  http-types: '>=0.8 && <0.13'
  aeson: '>=2.0 && <3.0'
  profunctors: '>=5'
  vector: '>=0.10.9 && <0.13'
all-versions:
- '0.1'
- '0.2'
- '0.3'
- '0.4'
- '0.5'
- '0.6'
- 0.6.1
- 0.6.2
- 0.6.2.1
- 0.6.2.2
- 0.6.3
- 0.6.4
- 0.6.5
- 0.7.5
- 0.8.5
- 0.8.6
- 0.8.7
- 0.8.8
- 0.8.9
- 0.8.10
- 0.9.0
- 0.9.1
- 0.9.2
- 0.9.3
- 0.9.4
- 0.9.5
- 0.9.6
- 0.9.7
- 0.9.8
- 0.9.9
- 0.9.10
- 0.9.11
- 0.9.12
- 0.9.12.1
- 0.9.12.2
- 0.9.12.3
- 0.9.12.4
- 0.9.12.5
- 0.9.12.6
- 0.9.12.7
- 0.9.12.8
- 0.9.12.9
- 0.9.12.10
- 0.9.12.11
- 0.10.0.0
- 0.10.0.1
- 0.10.0.2
- 0.10.1.2
- 0.10.1.3
- 0.10.1.4
- 0.10.2.0
- 0.10.3.0
author: Jon Schoning
latest: 0.10.3.0
description-type: markdown
description: "# Pinboard [![Hackage](https://img.shields.io/hackage/v/pinboard.svg?style=flat)](https://hackage.haskell.org/package/pinboard)
  [![Build Status](https://travis-ci.org/jonschoning/pinboard.svg?branch=master)](https://travis-ci.org/jonschoning/pinboard)\n\nThe
  Pinboard API is a way to interact programatically with\nyour bookmarks, notes and
  other Pinboard data. This\nlibrary wraps the API exposing functions and data\nstructures
  suitable for usage in Haskell programs.\n\n## Hackage documentation\n\n<http://hackage.haskell.org/package/pinboard>\n\n##
  Stackage documentation\n\n<https://www.stackage.org/package/pinboard>\n\n## Pinboard
  Api documentation\n\n<https://pinboard.in/api/>\n\n## Examples: \n\n### getPostsRecent\n```
  {.haskell}\n{-# LANGUAGE OverloadedStrings #-}\n\nimport Pinboard\n\nmain :: IO
  ()\nmain = do\n  let config = fromApiToken \"api token\"\n  result <- runPinboard
  config $ getPostsRecent Nothing Nothing\n  case result of\n    Right details ->
  print details\n    Left pinboardError -> print pinboardError\n```\n\noutput:\n```\nPosts{postsDate
  = 2015 - 10 - 24 16 : 17 : 12 UTC,\n       postsUser = \"jonschoning\",\n       postsPosts
  =\n         [Post{postHref = \"http://www.reddit.com/r/haskell/comments/25vj62/adventure_with_types_in_haskell_simon_peyton/\",\n
  \              postDescription = \"Adventure with Types in Haskell - Simon Peyton
  Jones [1:33:36] : haskell\",\n               postExtended = \"\", \n               postMeta
  = \"3fe9fb05c7c37f7bb66be7b9d85599eb\",\n               postHash = \"c46b717604ef8b126dabeba97b27a36f\",\n
  \              postTime = 2014 - 5 - 19 3 : 35 : 55 UTC, \n               postShared
  = True,\n               postToRead = False,\n               postTags = [\"spj\",
  \"video\", \"haskell\", \"typetheory\"]}]}\n```\n\n### getPostsRecent (using Lenses)\n```
  {.haskell}\n{-# LANGUAGE OverloadedStrings #-}\n\nimport Pinboard\nimport Control.Lens\n\nmain
  :: IO ()\nmain = do\n  let config = fromApiToken \"api token\"\n  result <- runPinboard
  config $ getPostsRecent (Just [\"haskell\"]) (Just 3)\n  mapM_ print (result ^..
  _Right . postsPostsL . traverse . postHrefL)\n\n```\n\noutput:\n```\n\"http://www.stephendiehl.com/posts/production.html\"\n\"https://mail.haskell.org/mailman/listinfo\"\n\"https://en.wikibooks.org/wiki/Haskell/Applicative_functors#A_sliding_scale_of_power\"\n```\n\n\n##
  Modules\n\n[Pinboard.Types](https://hackage.haskell.org/package/pinboard/docs/Pinboard-Types.html)\n\n
  \ Pinboard typeclasses and type aliases\n\n[Pinboard.Client](https://hackage.haskell.org/package/pinboard/docs/Pinboard-Client.html)\n\n
  \ Executes the methods defined in Pinboard.Api\n\n[Pinboard.Api](https://hackage.haskell.org/package/pinboard/docs/Pinboard-Api.html)\n\n
  \ Provides Pinboard Api Methods\n\n[Pinboard.ApiTypes](https://hackage.haskell.org/package/pinboard/docs/Pinboard-ApiTypes.html)\n\n
  \ Pinboard Data Structures returned by the Api\n\n[Pinboard.ApiTypesLens](https://hackage.haskell.org/package/pinboard/docs/Pinboard-ApiTypesLens.html)\n\n
  \ Lens accessors for Pinboard.ApiTypes\n"
license-name: MIT
