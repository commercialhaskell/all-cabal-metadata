all-versions:
- 0.0.1
- 0.0.2
- 0.1.0
- 0.1.0.1
- 0.1.1.0
- 0.2.0.0
- 0.3.0.0
- 0.4.0.0
- 0.4.0.1
- 0.4.0.2
- 0.5.0.0
- 0.5.1.0
- 0.6.0
- 0.6.1
- 0.6.2
- 0.6.3
- 0.6.4
- 0.6.4.1
- 0.6.5
author: Renzo Carbonara
basic-deps:
  base: '>=4 && <5'
  bytestring: '>=0'
  exceptions: '>=0'
  network: '>=0'
  network-simple: '>=0'
  pipes: '>=0'
  pipes-safe: '>=0'
  transformers: '>=0'
changelog: |
  # Version 0.6.5

  * Remover upper bound on all dependencies except `base`.

  * Fixed internal error handling in server-side functions.

  * Re-export `MonadSafe`.


  # Version 0.6.4.1

  * Raise upper-bound dependency on `transformers` and `pipes`.


  # Version 0.6.4

  * The various `fromServe` and `toServe*` pipes from
    `Pipes.Network.TCP.Safe` now close the listening socket immediately
    after accepting a first connection.

  * Re-export `sendLazy`, `sendMany` and `closeSock`.

  * Add `to{Socket,SocketTimeout,Serve,Connect}{Lazy,Many}`.

  * Fix issue #29 where `fromSocketTimeout` and `fromSocketTimeoutN`
    would loop forever.


  # Version 0.6.3

  * Bump `network-simple`, `transformers` and `pipes-safe` upper bounds.

  * Remove `Base m ~ IO` constraints from `Pipes.Network.TCP.Safe`, as
    not all of them were removed in 0.6.1.


  # Version 0.6.2

  * Dependency bumps (upper bounds).


  # Version 0.6.1

  * Remove the `Base m ~ IO` constraint from `Pipes.Network.TCP.Safe`


  # Version 0.6.0

  * Significantly upgraded the API and renamed functions to play well with
    pipes-4.0.0, pipes-safe-2.0.0 and network-simple-0.3.0.

  * Throw `IOError` in `IO` in order to report timeout errors. Delete
    the `Timeout` data-type.


  # Version 0.5.1.0

  * Re-export `Network.Socket.withSocketsDo`.

  * Use TCP `send` and `recv` as eported by network-simple-0.2.1.0.


  # Version 0.5.0.0

  * Removed `Control.Proxy.TCP.Sync` and `Control.Proxy.TCP.Safe.Sync`.


  # Version 0.4.0.1

  * FIX: `acceptFork` now properly closes the connection socket, even in
    case of asynchronous exceptions.


  # Version 0.4.0.0

  * Do not handle “Broken Pipe” errors on the `*Write*D` proxies anymore.
    As as a result, those proxies run forever and have a polymorphic
    return value, which makes this release binary compatible with 0.2.0.0,
    but not with 0.3.0.0.


  # Version 0.3.0.0

  * Quietly stop writing or reading bytes from a TCP socket if a
    “Broken Pipe” error happens, indicating that the remote end
    already closed the connection. Previously, a `ResourceVanished`
    exception was thrown.

  * All the `*Write*D` proxies now return `()` if the remote end
    closed the connection.


  # Version 0.2.0.0

  * Depend on network-simple 0.2

  * In both modules `Control.Proxy.TCP` and `Control.Proxy.TCP.Safe`:
    `serveFork` was renamed to `serve` and the previous function named
    `serve` was removed.


  # Version 0.1.1.0

  * Split many of the non-pipes-related TCP utilities to the own
    `network-simple` package.
  * Depend on `network-simple` and re-export its functions.


  # Version 0.1.0.1

  * Dependency bumps.


  # Version 0.1.0

  * New backwards incompatible API
  * Based on pipes 3.1


  # Up to version 0.0.2

  * Based on pipes-core.
changelog-type: markdown
description: |
  # pipes-network

  Utilities to deal with sockets using the **pipes** and **pipes-safe**
  libraries.

  Check the source or rendered Haddocks for extensive documentation.

  This code is licensed under the terms of the so called **3-clause BSD
  license**. Read the file named ``LICENSE`` found in this same directory
  for details.

  See the ``PEOPLE`` file to learn about the people involved in this
  effort.
description-type: markdown
hash: 1dd16c7dd7f70c0683052c486f4d46d89ff4ae68d0738da2efa451d452fcd657
homepage: https://github.com/k0001/pipes-network
latest: 0.6.5
license-name: BSD-3-Clause
maintainer: renzocarbonaraλgmail.com
synopsis: Use network sockets together with the pipes library.
test-bench-deps: {}
