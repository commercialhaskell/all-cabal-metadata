all-versions:
- 0.1.0.0
- 0.1.0.1
- 0.1.0.2
- 0.1.1.0
- 0.1.2.0
- 0.1.2.1
author: Ulf Lilleengen
basic-deps:
  async: '>=2.0 && <3'
  base: '>=4 && <5'
  binary: '>=0.7 && <0.8'
  bytestring: '>=0.10 && <0.11'
  dns: '>=2 && <3'
  hcoap: '>=0'
  iproute: '>=1.3 && <2'
  mtl: '>=2.1 && <2.3'
  network: '>=2.6 && <2.7'
  network-uri: '>=2.6 && <3'
  random: '>=1.1 && <2'
  stm: '>=2.4 && <2.5'
  time: '>=1.4 && <1.6'
changelog: ''
changelog-type: ''
description: |
  Hcoap is a haskell CoAP library. See http://coap.technology/ for more information about the CoAP
  protocol. The library aims to support RFC 7252 specification, and currently only support non-secure
  CoAP transport.

  The library is split into a high-level API in Network.CoAP.Server and Network.CoAP.Client, and a lower layer API in Network.CoAP.Message for working directly with CoAP messages.

  [![Build Status](https://travis-ci.org/lulf/hcoap.svg?branch=master)](https://travis-ci.org/lulf/hcoap)

  ## Example server
      main =
        withSocketsDo $ do
          sock <- socket AF_INET6 Datagram defaultProtocol
          bindSocket sock (SockAddrInet6 5683 0 iN6ADDR_ANY 0)
          server <- createServer (createUDPTransport sock) (\(request, _) -> do
            let payload = Just (B.pack "{\"value\":\"foo\"}")
            return (Response Content [ContentFormat ApplicationJson] payload))
          runServer server

  ## Example client
      main = do
        let request = Request { requestMethod = GET
                              , requestOptions = []
                              , requestPayload = Nothing
                              , requestReliable = True }
      withSocketsDo $ do
        sock <- socket AF_INET6 Datagram defaultProtocol
        bindSocket sock (SockAddrInet6 0 0 iN6ADDR_ANY 0)
        let transport = createUDPTransport sock
        client <- createClient transport
        uri <- parseURI "coap://[::1]:5683/hello"
        response <- doRequest client uri request
        putStrLn ("Got response: " ++ show response)
        return ()
description-type: markdown
hash: 341428db573bf12dd204bd901b1218c38dfa92acf4d7276b33407cdd7a89539c
homepage: https://github.com/lulf/hcoap
latest: 0.1.2.1
license-name: BSD-3-Clause
maintainer: ulf.lilleengen@gmail.com
synopsis: CoAP implementation for Haskell.
test-bench-deps:
  HUnit: '>=0'
  QuickCheck: '>=0'
  async: '>=0'
  base: '>=0'
  bytestring: '>=0'
  hcoap: '>=0'
  network: '>=0'
  random: '>=0'
