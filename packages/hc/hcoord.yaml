all-versions:
- 1.0.0.0
author: Daniele Francesconi
basic-deps:
  base: '>=4 && <5'
  hcoord: '>=0'
  mtl: '>=0'
  regex-pcre: '>=0'
changelog: ''
changelog-type: ''
description: "# HCoord\r\n\r\n[![feed](https://budueba.com/hackage/hcoord)](https://hackage.haskell.org/package/hcoord)\r\n[![Build
  Status](https://travis-ci.org/danfran/hcoord.svg?branch=master)](https://travis-ci.org/danfran/hcoord)\r\n\r\nNote
  that this repo is a _translation_ of the 2006 [Jcoord](http://www.jstott.me.uk/jcoord)
  project to Haskell.\r\n\r\n## Original Project Homepage ##\r\nConversion between
  latitude/longitude and grid references is not as simple as one would expect. Indeed,
  the maths involved is rather complex and not really for the faint-hearted! I have
  created a Java package which provides a simple API to allow conversion between OSGB
  (Ordnance Survey of Great Britain) grid references, UTM (Universal Transverse Mercator)
  references and latitude/longitude. OSGB Grid references can be returned as a standard
  six-figure grid reference using the 100km grid square letters (e.g. SK619847).\r\n\r\n_Note:
  it is now possible to obtain an eight-figure grid reference as from [release 1.2](https://github.com/xni06/JCoord/releases/tag/1.2)._\r\n\r\nThe
  Jcoord script also contains a method to allow the calculation of the surface distance
  between two points of latitude/longitude.\r\n\r\nLooking for the same thing but
  with JavaScript or PHP? Translations of this package with the same functionality
  are available for JavaScript (see JScoord) and PHP (see PHPcoord).\r\n\r\nInformation
  on converting between UTM and latitude/longitude is available at www.posc.org.\r\n\r\nThe
  Ordnance Survey have published a concise guide on converting between OSGB and latitude/longitude
  which is available at www.gps.gov.uk.\r\n\r\nBear in mind that Jcoord is still in
  development, so check back often for updates. To contact me about Jcoord, send an
  e-mail to jcoord@jstott.me.uk.\r\n\r\n```\r\n--------------------------------------------------------------------------\r\n
  Jcoord\r\n readme.txt\r\n \r\n (c) 2006 Jonathan Stott\r\n \r\n Created on 11-Feb-2006\r\n--------------------------------------------------------------------------\r\n\r\nJcoord
  is a collection of Java classes that provide functions for handling\r\nvarious co-ordinate
  systems and converting between them. Currently, OSGB\r\n(Ordnance Survey of Great
  Britain) grid references, UTM (Universal Transverse\r\nMercator) references and
  latitude/longitude are supported. A function is \r\nalso provided to find the surface
  distance between two points of latitude\r\nand longitude.\r\n\r\nWhen using the
  OSGB conversions, the majority of applications use the\r\nWGS84 datum rather than
  the OSGB36 datum. Conversions between the two\r\ndata were added in v1.1 - the conversions
  should be accurate to within\r\n5m or so. If accuracy is not important (i.e. to
  within 200m or so),\r\nthen it isn't necessary to perform the conversions.\r\n\r\nExamples
  of how to use the classes in Jcoord can be found in the\r\nuk.me.jstott.jcoord.Test
  class\r\n\r\nSee http://www.jstott.me.uk/jcoord/ for latest releases and information.\r\n\r\n\r\nDISCLAIMER\r\n\r\nAccuracy
  of the co-ordinate conversions contained within the Jcoord\r\npackage is not guaranteed.
  Use of the conversions is entirely at your\r\nown risk and I cannot be held responsible
  for any consequences of\r\nerrors created by the conversions. I do not recommend
  using the package\r\nfor mission-critical applications.\r\n\r\n\r\nLICENSING\r\n\r\nThis
  software product is available under the GNU General Public License\r\n(GPL). Terms
  of the GPL can be read at http://www.jstott.me.uk/gpl/.\r\nAny commercial use requires
  the purchase of a license - contact me at\r\njcoord@jstott.me.uk for details.\r\n\r\n\r\nVERSION
  HISTORY\r\n\r\n 1.1 -\r\n  - Added Junit unit test suite in the uk.me.jstott.jcoord.junit
  package.\r\n  - Added NotDefinedOnUTMGridException which is thrown whenever an attempt
  is\r\n    made to convert a LatLng object to a UTMRef object where the latitude
  falls\r\n    outside the defined UTM grid.\r\n  - Can format a latitude/longitude
  into a String in degrees-minutes-seconds\r\n    format.\r\n  - Added a class for
  Military Grid Reference System (MGRS) to allow for\r\n    conversrions between MGRS
  and UTM and latitude/longitude.\r\n  - Documentation (javadoc) improvements.\r\n
  \ - LatLng.getLat() has been deprecated. Use LatLng.getLatitude() instead.\r\n  -
  LatLng.getLng() has been deprecated. Use LatLng.getLongitude() instead.\r\n  - LatLng
  constructor now validates parameters and throws an\r\n    IllegalArgumentException
  if either the latitude or longitude are invalid.\r\n  - UTMRef(double,double,char,int)
  constructor has been deprecated and\r\n    replaced with UTMRef(int,char,double,double).
  This is to make the order of\r\n    the parameters more sensible.\r\n  - Fixed slight
  error with values for converting between WGS84 and OSGB36.\r\n  - New method: LatLng.distanceMiles(LatLng)
  to calculate the distance between\r\n    two points of latitude/longitude in miles.\r\n
  \ - New constructors in LatLng to allow for specifying a datum and/or the\r\n    latitude
  and longitude as degrees/minutes/seconds.\r\n  - Added IrishRef class to allow conversion
  between latitude and longitude and\r\n    Irish National Grid References.\r\n  -
  Added new uk.me.jstott.jcoord.datum package with a number of data that\r\n    all
  extend uk.me.jstott.jcoord.datum.Datum.\r\n  - Added new uk.me.jstott.jcoord.ellipsoid
  package with a number of definitions\r\n    of reference ellipsoids that all extend\r\n
  \   uk.me.jstott.jcoord.ellipsoid.Ellipsoid.\r\n  - Fixed slight errors in OSRef
  to LatLng conversions.\r\n 1.0 - 11 Feb 2006\r\n  - Initial version created from
  PHPcoord v2.2.\r\n```\r\n"
description-type: markdown
hash: 8cf3030c7df35900770bfbf5c972880c550cba160497c09315f4084aba64b177
homepage: https://github.com/danfran/hcoord#readme
latest: 1.0.0.0
license-name: BSD-3-Clause
maintainer: dfrancesconi12@gmail.com
synopsis: Easily convert between latitude/longitude, UTM and OSGB.
test-bench-deps:
  HUnit: '>=1.2 && <1.6'
  base: '>=0'
  data-default: '>=0'
  hcoord: '>=0'
  ieee754: '>=0'
  mtl: '>=0'
