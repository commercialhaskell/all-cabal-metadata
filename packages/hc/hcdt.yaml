homepage: https://github.com/stla/hcdt#readme
changelog-type: markdown
hash: a2f1cddc30fc9e80880bd1d57f93e49a09e5fc8a138286c1ce26d8c888757357
test-bench-deps: {}
maintainer: laurent_step@outlook.fr
synopsis: 2d Delaunay triangulation
changelog: "0.1.0.0\r\n-------\r\n* initial release\r\n\r\n0.1.0.4\r\n-------\r\n*
  removed the upper bounds of the dependencies\r\n\r\n0.1.0.5\r\n-------\r\n* fixed
  the cabal file\r\n\r\n0.1.1.0\r\n-------\r\n* upgraded the 'CDT' library"
basic-deps:
  witherable: '>=0.4'
  base: '>=4.7 && <5'
  indexed-traversable: '>=0.1.2'
  containers: '>=0.6.4.1'
  hashable: '>=1.3.5.0'
all-versions:
- 0.1.0.0
- 0.1.0.1
- 0.1.0.2
- 0.1.0.3
- 0.1.0.4
- 0.1.0.5
- 0.1.1.0
author: St√©phane Laurent
latest: 0.1.1.0
description-type: markdown
description: "# hcdt\r\n\r\n<!-- badges: start -->\r\n[![Stack-lts](https://github.com/stla/hcdt/actions/workflows/Stack-lts.yml/badge.svg)](https://github.com/stla/hcdt/actions/workflows/Stack-lts.yml)\r\n[![Stack-lts-Mac](https://github.com/stla/hcdt/actions/workflows/Stack-lts-Mac.yml/badge.svg)](https://github.com/stla/hcdt/actions/workflows/Stack-lts-Mac.yml)\r\n[![Stack-nightly](https://github.com/stla/hcdt/actions/workflows/Stack-nightly.yml/badge.svg)](https://github.com/stla/hcdt/actions/workflows/Stack-nightly.yml)\r\n<!--
  badges: end -->\r\n\r\n\r\n### Delaunay triangulation \r\n\r\n```haskell\r\nghci>
  import Text.Show.Pretty\r\nghci> import Geometry.HCDT\r\nghci> vertices = [Vertex
  0 0, Vertex 0 1, Vertex 1 1, Vertex 1 0]\r\nghci> triangulation <- delaunay vertices\r\nghci>
  pPrint triangulation\r\nTriangulation\r\n  { _vertices =\r\n      fromList\r\n        [
  ( 0 , Vertex 0.0 0.0 )\r\n        , ( 1 , Vertex 0.0 1.0 )\r\n        , ( 2 , Vertex
  1.0 1.0 )\r\n        , ( 3 , Vertex 1.0 0.0 )\r\n        ]\r\n  , _triangles = [
  Triangle 1 0 2 , Triangle 2 0 3 ]\r\n  , _edges = [ Edge 2 3 , Edge 0 3 , Edge 1
  2 , Edge 0 2 , Edge 0 1 ]\r\n  }\r\nghci> pPrint $ borderEdges triangulation\r\nfromList
  [ Edge 1 0 , Edge 1 2 , Edge 0 3 , Edge 2 3 ]\r\n```\r\n\r\n\r\n### Constrained
  Delaunay triangulation \r\n\r\n```haskell\r\nghci> import Text.Show.Pretty\r\nghci>
  import Geometry.HCDT\r\nghci> vertices = [Vertex 1 1, Vertex 3 1, Vertex 2 2, Vertex
  0 0, Vertex 4 0, Vertex 2 5]\r\nghci> edges = [Edge 0 1, Edge 0 2, Edge 1 2, Edge
  3 4, Edge 3 5, Edge 4 5]\r\nghci> triangulation <- cdelaunay vertices edges\r\nntriangles:
  6\r\nghci> pPrint triangulation\r\nConstrainedTriangulation\r\n  { _triangulation
  =\r\n      Triangulation\r\n        { _vertices =\r\n            fromList\r\n              [
  ( 0 , Vertex 1.0 1.0 )\r\n              , ( 1 , Vertex 3.0 1.0 )\r\n              ,
  ( 2 , Vertex 2.0 2.0 )\r\n              , ( 3 , Vertex 0.0 0.0 )\r\n              ,
  ( 4 , Vertex 4.0 0.0 )\r\n              , ( 5 , Vertex 2.0 5.0 )\r\n              ]\r\n
  \       , _triangles =\r\n            [ Triangle 1 0 3\r\n            , Triangle
  2 1 5\r\n            , Triangle 2 5 0\r\n            , Triangle 0 5 3\r\n            ,
  Triangle 1 4 5\r\n            , Triangle 1 3 4\r\n            ]\r\n        , _edges
  =\r\n            [ Edge 3 4\r\n            , Edge 1 4\r\n            , Edge 3 5\r\n
  \           , Edge 0 5\r\n            , Edge 2 5\r\n            , Edge 0 2\r\n            ,
  Edge 1 5\r\n            , Edge 1 2\r\n            , Edge 1 3\r\n            , Edge
  4 5\r\n            , Edge 0 3\r\n            , Edge 0 1\r\n            ]\r\n        }\r\n
  \ , _fixedEdges =\r\n      [ Edge 0 1 , Edge 0 2 , Edge 4 5 , Edge 1 2 , Edge 3
  4 , Edge 3 5 ]\r\n  }\r\n```"
license-name: BSD-3-Clause
