homepage: https://github.com/ku-fpg/blank-canvas/wiki
changelog-type: markdown
hash: 12e194ab9eeb0e7a1f0a2fbfb9c6bd464b09613005c0b05f79b709d9571fb42d
test-bench-deps: {}
maintainer: andygill@ku.edu
synopsis: HTML5 Canvas Graphics Library
changelog: |+
  ### 0.7.3
  * Allow building with GHC 9.0.

  ### 0.7.2
  * Render Unicode codepoints beyond `0xFFFF` properly.

  ### 0.7.1
  * Remove the `wiki-suite` test suite from `blank-canvas.cabal`, as it was never
    intended to work as a traditional test suite. The functionality of
    `wiki-suite` has moved to a subdirectory of the upstream `blank-canvas`
    repository.

  ## 0.7
  * Strengthen the `Monad` constraint on `readColourName` to `MonadFail`.

  #### 0.6.3
  * Use `base-compat-batteries`.

  ### 0.6.2
  Additions
   * Add `Semigroup` instance for `Canvas`

  ### 0.6.1
  * Fix building with `aeson-1.2.2.0`.

  ### 0.6
  API changes
   * The `(#)` function had its type generalized from `a -> (a -> Canvas b) -> Canvas b` to `a -> (a -> b) -> b`. This allows it to be used with font length units.
   * Added more type synonyms (`Interval`, `Degrees`, `Radians`, etc.) to more clearly indicate what functions expect constrained values.
   * `showbJS` (formerly `showJS`) and `jsStyle` now return a text `Builder` instead of a `String`. This change was introduced as part of a larger `blank-canvas` refactoring to increase performance. See the `Data.Text.Lazy.Builder` module from the `text` package for more details on how to use `Builder`s.

  API additions
   * A new ADT for `Font`s has been added in `Graphics.Blank.Font` that can be used in place of `Text`. For example, `"30pt Calibri"` is equivalent to `(defFont "Calibri") { fontSize = 30 # pt }`.
   * A generalized `font` function of type `CanvasFont canvasFont => canvasFont -> Canvas ()` was added to `Graphics.Blank.Font` that can accept a `Text` or `Font` argument. The `font` function in `Graphics.Blank` remains of type `Text -> Canvas ()`.
   * Added a `cursor` function to change the browser cursor. Also added the `Graphics.Blank.Cursor` module containing a generalized `cursor` function that uses a `Cursor` ADT instead of `Text`.
   * Added `Bounded`, `Enum`, `Eq`, `Ix`, `Ord`, and `Show` instances for more data types
   * Added support for more MIME types via the `mime-types` library

  Additions
   * Allowed building with `base-4.8.0.0`

  Other
   * Require `scotty` >= 0.10 and `kansas-comet` >= 0.4

  ## 0.5

  API changes
   * Using Double rather than Float
   * Generalized saveRestore to be polymorphic

  API additions
   * Added sync for forcing synchronization between the server and client
   * Added argument specific variants of drawImage and putImageData.
   * Added ADTs for RepeatDirection, Alignment, Baseline, LineEnds, Corner (previous used Text)
   * Use of the colour(sic) package (Text is still allowed)

  Bug fixes:
   * Fixed unicode escapes in strings

  Additions:
   * Allow Images to access client-side filesystem

basic-deps:
  warp: ==3.*
  bytestring: '>=0.10 && <0.12'
  wai: ==3.*
  stm: '>=2.2 && <2.6'
  base-compat-batteries: '>=0.10 && <0.13'
  fail: ==4.9.*
  base: '>=4.7 && <4.16'
  data-default-class: '>=0.0.1 && <0.2'
  base64-bytestring: '>=1.0 && <1.3'
  text: '>=1.1 && <1.3'
  kansas-comet: '>=0.4 && <0.5'
  text-show: '>=2 && <4'
  semigroups: '>=0.18 && <1'
  containers: '>=0.5 && <0.7'
  mime-types: '>=0.1.0.3 && <0.2'
  wai-extra: '>=3.0.1 && <3.2'
  colour: '>=2.2 && <2.4'
  transformers: '>=0.3 && <0.6'
  scotty: '>=0.10 && <0.13'
  http-types: '>=0.8 && <0.13'
  aeson: '>=0.7 && <1.6'
  vector: '>=0.10 && <0.13'
all-versions:
- 0.2.0
- 0.2.0.1
- 0.2.2
- 0.2.3
- 0.2.3.1
- 0.2.3.2
- 0.3.1
- 0.4.0
- '0.5'
- '0.6'
- 0.6.1
- 0.6.2
- 0.6.3
- '0.7'
- 0.7.1
- 0.7.2
- 0.7.3
author: Andy Gill and Ryan Scott
latest: 0.7.3
description-type: markdown
description: |
  ### Background

  **blank-canvas** is a Haskell binding to the complete HTML5 Canvas
  API. blank-canvas allows Haskell users to write, in Haskell,
  interactive images onto their web browsers. blank-canvas gives the
  user a single full-window canvas, and provides many well-documented
  functions for rendering images.

  ### First Example

  ````Haskell
  {-# LANGUAGE OverloadedStrings #-}
  module Main where

  import Graphics.Blank                     -- import the blank canvas

  main = blankCanvas 3000 $ \ context -> do -- start blank canvas on port 3000
          send context $ do                 -- send commands to this specific context
                  moveTo(50,50)
                  lineTo(200,100)
                  lineWidth 10
                  strokeStyle "red"
                  stroke()                  -- this draws the ink into the canvas
  ````

  Running this program, and going to <http://localhost:3000/> gives

  ![images/Red_Line.png](https://github.com/ku-fpg/blank-canvas/wiki/images/Red_Line.png)

  For more details about this example, see [Red Line](https://github.com/ku-fpg/blank-canvas/wiki/Red%20Line).

  ### Documentation

  | Link  | Notes |
  |-------|-------|
  | [Examples](https://github.com/ku-fpg/blank-canvas/wiki/Examples) | Various complete examples of using blank-canvas |
  | [Installation](https://github.com/ku-fpg/blank-canvas/wiki/Installation) | How to install blank-canvas |
  | [Hackage](https://hackage.haskell.org/package/blank-canvas) | Current release is 0.5 |
  | [API](https://github.com/ku-fpg/blank-canvas/wiki/API) | Discussion of API, compared with the original JavaScript API |
  | [Canvas Examples](https://github.com/ku-fpg/blank-canvas/wiki/Canvas%20Examples) | Transliterated from <http://www.html5canvastutorials.com/> into Haskell and blank-canvas, with kind permission of Eric Rowell, author of the JavaScript HTML5 Canvas Tutorial. |
  | [FAQ](https://github.com/ku-fpg/blank-canvas/wiki/FAQ) | F.A.Q. |

  #### Other Links

   * <http://www.html5canvastutorials.com/>
   * <http://www.webcodeapp.com/>

  ### Credits

  Thank you to Eric Rowell, for allowing blank-canvas to base our Canvas examples on his JavaScript Canvas examples.

  The "Haskell" picture is taken by [Mandy Lackey](https://www.flickr.com/photos/mandaloo/), from link <<http://www.flickr.com/photos/77649176@N00/3776224595/>.> This picture allows sharing, under the [creative commons license](https://creativecommons.org/licenses/by-nc-sa/2.0/).
license-name: BSD-3-Clause
