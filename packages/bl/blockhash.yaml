all-versions:
- 0.1.0.0
author: Kwang Yul Seo
basic-deps:
  JuicyPixels: '>=3.2 && <3.3'
  base: '>=4.7 && <5'
  blockhash: '>=0'
  bytestring: '>=0.10 && <0.11'
  optparse-applicative: '>=0.12 && <0.13'
  primitive: '>=0.6 && <0.7'
  vector: '>=0.11 && <0.12'
  vector-algorithms: '>=0.7 && <0.8'
changelog: ''
changelog-type: ''
description: |
  blockhash [![Build Status](https://travis-ci.org/kseo/blockhash.svg?branch=master)](https://travis-ci.org/kseo/blockhash)
  =========

  This is a perceptual image hash calculation tool based on algorithm descibed in
  Block Mean Value Based Image Perceptual Hashing by Bian Yang, Fan Gu and Xiamu Niu.
  Visit [the website][blockhash] for further information.

  [blockhash]: http://blockhash.io/

  ## Program

  ```
  Usage: blockhash [-q|--quick] [-b|--bits ARG] filenames
    blockhash

  Available options:
    -h,--help                Show this help text
    -q,--quick               Use quick hashing method
    -b,--bits ARG            Create hash of size N^2 bits.
  ```

  ## Library

  The example code below uses [JuicyPixels][JuicyPixels] to load images and prints
  the hash to stdout.

  ```haskell
  import qualified Codec.Picture as P
  import Data.Blockhash
  import qualified Data.Vector.Generic as VG
  import qualified Data.Vector.Unboxed as V

  printHash :: FilePath -> IO ()
  printHash :: filename = do
    res <- P.readImage filename
    case res of
      Left err -> putStrLn ("Fail to read: " ++ filename)
      Right dynamicImage -> do
        let rgbaImage = P.convertRGBA8 dynamicImage
            pixels = VG.convert (P.imageData rgbaImage)
            image = Image { imagePixels = pixels
                          , imageWidth = P.imageWidth rgbaImage
                          , imageHeight = P.imageHeight rgbaImage }
            hash = blockhash image 16 Precise
        putStrLn (show hash)
  ```

  [JuicyPixels]: https://hackage.haskell.org/package/JuicyPixels-3.2.7.2
description-type: markdown
hash: 72a1b500453fbf933b12362e4077f8be87095848cc7696de9543ecc16bb69836
homepage: https://github.com/kseo/blockhash#readme
latest: 0.1.0.0
license-name: BSD-3-Clause
maintainer: kwangyul.seo@gmail.com
synopsis: Blockhash perceptual image hash algorithm
test-bench-deps:
  base: '>=0'
  blockhash: '>=0'
