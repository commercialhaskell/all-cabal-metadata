all-versions:
- 1.1.0.0
author: tushar
basic-deps:
  aeson: <3
  base: '>=4.7 && <5'
  base64-bytestring: '>=0'
  bytestring: '>=0.9.1.4'
  containers: '>=0'
  google-cloud-common: '>=1.1.0.0 && <1.2.0.0'
  http-conduit: '>=0'
  http-types: '>=0'
  text: '>=1.2 && <3'
changelog: |
  # Changelog

  All notable changes to this project will be documented in this file.

  The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),
  and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).

  ## [0.1.0.0] - 2025-01-27

  ## 1.1.0.0 - 2025-09-11

  - Synchronized version bump for v1.1.0.0 release.

  ### Added
  - Initial release of google-cloud-pubsub
  - Topic operations:
    - Create topics
    - Delete topics
    - Publish messages to topics
  - Subscription operations:
    - Create subscriptions
    - Delete subscriptions
    - Acknowledge messages
    - Modify acknowledgment deadlines
    - Pull messages from subscriptions
  - Comprehensive data types for Pub/Sub entities
  - Integration with google-cloud-common for authentication
changelog-type: markdown
description: "# google-cloud-pubsub\n\nA thin wrapper around Google Cloud Pub/Sub
  for Haskell.\n\n## Features\n\n### Topic Operations\n- Create topics\n- Delete topics
  \ \n- Publish messages to topics\n\n### Subscription Operations\n- Create subscriptions\n-
  Delete subscriptions\n- Acknowledge messages\n- Modify acknowledgment deadlines\n-
  Pull messages from subscriptions\n\n## Installation\n\n- Cabal: add to your `.cabal`\n
  \ - `build-depends: google-cloud-pubsub == 1.1.0.0`\n- Stack: add to your `package.yaml`\n
  \ - `dependencies: - google-cloud-pubsub == 1.1.0.0`\n\nThis package depends on
  `google-cloud-common` for authentication and HTTP helpers.\n\n## Usage\n\n### Topic
  Operations\n\n```haskell\nimport Google.Cloud.PubSub.Topic\n\n-- Create a topic\nresult
  <- createTopic \"my-project\" \"my-topic\"\ncase result of\n  Left err -> putStrLn
  $ \"Error: \" ++ err\n  Right topic -> print topic\n\n-- Publish a message\nlet
  message = Message \"Hello World\" Nothing Nothing\npublishResult <- publishMessage
  \"my-project\" \"my-topic\" [message]\ncase publishResult of\n  Left err -> putStrLn
  $ \"Error: \" ++ err\n  Right response -> print $ messageIds response\n\n-- Delete
  a topic\ndeleteResult <- deleteTopic \"my-project\" \"my-topic\"\ncase deleteResult
  of\n  Left err -> putStrLn $ \"Error: \" ++ err\n  Right _ -> putStrLn \"Topic deleted
  successfully\"\n```\n\n### Subscription Operations\n\n```haskell\nimport Google.Cloud.PubSub.Subscription\n\n--
  Create a subscription\nlet config = SubscriptionConfig \n  { topic = \"projects/my-project/topics/my-topic\"\n
  \ , pushConfig = Nothing\n  , ackDeadlineSeconds = 600\n  , retainAckedMessages
  = False\n  , messageRetentionDuration = Nothing\n  , labels = Nothing\n  , enableMessageOrdering
  = False\n  , expirationPolicy = Nothing\n  , filter = Nothing\n  , deadLetterPolicy
  = Nothing\n  , retryPolicy = Nothing\n  , enableExactlyOnceDelivery = Nothing\n
  \ }\n\ncreateResult <- createSubscription \"my-project\" \"my-subscription\" config\ncase
  createResult of\n  Left err -> putStrLn $ \"Error: \" ++ err\n  Right subscription
  -> print subscription\n\n-- Pull messages\npullResult <- pullMessages \"my-project\"
  \"my-subscription\" 10\ncase pullResult of\n  Left err -> putStrLn $ \"Error: \"
  ++ err\n  Right response -> do\n    mapM_ print $ receivedMessages response\n    --
  Acknowledge messages\n    let ackIds = map ackId $ receivedMessages response\n    ackResult
  <- acknowledgeMessages \"my-project\" \"my-subscription\" ackIds\n    case ackResult
  of\n      Left err -> putStrLn $ \"Ack error: \" ++ err\n      Right _ -> putStrLn
  \"Messages acknowledged\"\n\n-- Delete a subscription\ndeleteResult <- deleteSubscription
  \"my-project\" \"my-subscription\"\ncase deleteResult of\n  Left err -> putStrLn
  $ \"Error: \" ++ err\n  Right _ -> putStrLn \"Subscription deleted successfully\"\n```\n\n##
  Authentication\n\nAuthentication is handled by `google-cloud-common` and follows
  this order:\n\n1. If `GOOGLE_APPLICATION_CREDENTIALS` is set, a Service Account
  JSON is used to\n   create a signed JWT which is exchanged for an access token.\n2.
  Otherwise, the Compute metadata server is used (suitable for GCE/GKE).\n\n## Dependencies\n\n-
  `google-cloud-common` - Common functionality for Google Cloud libraries\n\n## License\n\nMIT
  Â© Contributors\n"
description-type: markdown
hash: daa63a70354ae19f21bf31a8326924b0a0f82516a720f236d99acb469d6b97b4
homepage: https://github.com/tusharad/google-cloud-haskell#readme
latest: 1.1.0.0
license-name: MIT
maintainer: tusharadhatrao@gmail.com
synopsis: GCP Pub/Sub Client for Haskell
test-bench-deps:
  aeson: <3
  base: '>=4.7 && <5'
  base64-bytestring: '>=0'
  bytestring: '>=0.9.1.4'
  containers: '>=0'
  google-cloud-common: '>=1.1.0.0 && <1.2.0.0'
  google-cloud-pubsub: '>=0'
  http-conduit: '>=0'
  http-types: '>=0'
  text: '>=1.2 && <3'
