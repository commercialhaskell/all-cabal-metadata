all-versions:
- 0.2.0.0
author: Anton Gushcha
basic-deps:
  GLFW-b: '>=1.4.7.3'
  JuicyPixels: '>=3.2.7'
  base: '>=4.7 && <5'
  containers: '>=0.5.6.2'
  deepseq: '>=1.4.1.1'
  exceptions: '>=0.8.2.1'
  gore-and-ash: '>=1.2.1.0'
  gore-and-ash-glfw: '>=1.1.0.0'
  gore-and-ash-lambdacube: '>=0'
  hashable: '>=1.2.4.0'
  lambdacube-compiler: '>=0.5.0.1'
  lambdacube-gl: '>=0.5.0.5'
  lambdacube-ir: '>=0.3.0.0'
  linear: '>=1.20.4'
  mtl: '>=2.2.1'
  text: '>=1.2.2.0'
  transformers: '>=0.4.2.0'
  unordered-containers: '>=0.2.5.1'
  vector: '>=0.11.0.0'
changelog: |
  0.2.0.0
  =======

  * Adapted to `lamdacube-compiler-0.6.0.0` and GHC 8.0.1
changelog-type: markdown
description: "gore-and-ash-lambdacube\n==================\n\nThe module provides API
  for something for [Gore&Ash](https://github.com/Teaspot-Studio/gore-and-ash) engine.\n\nInstalling\n==========\n\nAdd
  following to your `stack.yml` to `packages` section:\n```yaml\n- location:\n    git:
  https://github.com/TeaspotStudio/gore-and-ash-lambdacube.git\n    commit: <PLACE
  HERE FULL HASH OF LAST COMMIT> \n```\n\nWhen defining you application stack, add
  `LambdaCubeT`:\n``` haskell\ntype AppStack = ModuleStack [LambdaCubeT, ... other
  modules ... ] IO\n```\n\nAnd derive `MonadLambdaCube` for your resulting `AppMonad`:\n```
  haskell\nnewtype AppMonad a = AppMonad (AppStack a)\n  deriving (Functor, Applicative,
  Monad, MonadFix, MonadIO, MonadThrow, MonadCatch, MonadLambdaCube)\n```\n\nBuilding
  examples\n=================\n\nThe package has several examples, to build them pass
  `examples` flag:\n```\nstack install --flag gore-and-ash-lambdacube:examples\n```"
description-type: markdown
hash: 7c447d4434fce295f1f7abe0a792e78fbf57487ad31e123b1aaa184ca90ecb1f
homepage: https://github.com/TeaspotStudio/gore-and-ash-lambdacube#readme
latest: 0.2.0.0
license-name: BSD-3-Clause
maintainer: ncrashed@gmail.com
synopsis: Core module for Gore&Ash engine that do something.
test-bench-deps: {}
