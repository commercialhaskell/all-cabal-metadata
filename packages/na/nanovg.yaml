homepage: https://github.com/cocreature/nanovg-hs
changelog-type: markdown
hash: bfcbe0dc0020aaa80db895966c9cf1b8aa4f13ac5253e713d728165fea7e9fc1
test-bench-deps:
  inline-c: -any
  base: -any
  hspec: -any
  containers: -any
  nanovg: -any
  QuickCheck: -any
maintainer: moritz.kiefer@purelyfunctional.org
synopsis: Haskell bindings for nanovg
changelog: |
  0.8.1.0
  -------

  * Fix use after free in `createFontMem` #17

  0.8.0.0
  -------

  * Windows support

  0.6.0.0
  ---

  * GL2 support
  * openGLES3 support
  * Drop support for GHC 7.10

  0.5.2.0
  ---
  * MacOS support

  0.5.0.0
  ---
  * Remove dependency on linear
basic-deps:
  bytestring: '>=0.10 && <0.12'
  base: '>=4.8 && <5.0'
  text: '>=1.2 && <2.1'
  containers: '>=0.5 && <0.7'
  vector: '>=0.11 && <0.14'
all-versions:
- 0.1.0.0
- 0.1.0.1
- 0.1.0.2
- 0.2.0.0
- 0.3.0.0
- 0.4.0.0
- 0.5.0.0
- 0.5.1.0
- 0.5.2.0
- 0.6.0.0
- 0.7.0.0
- 0.8.0.0
- 0.8.1.0
author: Moritz Kiefer
latest: 0.8.1.0
description-type: markdown
description: |
  # NanoVG Haskell bindings

  [![Build Status](https://img.shields.io/travis/cocreature/nanovg-hs.svg)](https://travis-ci.org/cocreature/nanovg-hs)
  [![Hackage](https://img.shields.io/hackage/v/nanovg.svg)](https://hackage.haskell.org/package/nanovg)

  Currently only the GL3 backend is supported.

  A large part of the example bundled with
  [NanoVG](https://github.com/memononen/nanovg) is translated into
  Haskell and bundled as `example00`.

  Most of the bindings directly expose the corresponding
  [NanoVG](https://github.com/memononen/nanovg) so look there for more
  details on the usage.

  There is also a [diagrams backend](https://github.com/cocreature/diagrams-nanovg) using these bindings.

  Feel free to open issues if you have any ideas for improvements (or even better PRs :)).
license-name: ISC
