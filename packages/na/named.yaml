homepage: https://github.com/monadfix/named
changelog-type: markdown
hash: 16c23f330b9f0373c464fee44d48dfa0f9d561f35bfe73dfd6ea69459688d4e5
test-bench-deps:
  base: '>=4.9 && <4.17'
  named: -any
maintainer: Monadfix <hi@monadfix.com>
synopsis: Named parameters (keyword arguments) for Haskell
changelog: |
  ## 0.3.0.1

  * Bumped upper bounds for GHC 8.8.

  ## 0.3.0.0

  * Added 'param', 'paramF'.
  * Export 'NamedF(Arg, ArgF)' as a bundle.

  ## 0.2.0.0

  * Removed 'Flag', 'named', 'Apply', 'apply'.
  * Changed notation: 'Named' is now '(:!)' in types, 'Arg' in patterns.
  * Added 'arg', 'argF'.
  * Support for optional parameters: see 'argDef', 'defaults', '(:?)'.
  * 'with #param value' is now 'with (#param value)' to allow 'with defaults'.
  * Internals are now exposed from "Named.Internal".

  ## 0.1.0.0

  * First version. Released on an unsuspecting world.
basic-deps:
  base: '>=4.9 && <4.17'
all-versions:
- 0.1.0.0
- 0.2.0.0
- 0.3.0.0
- 0.3.0.1
author: Vladislav Zavialov
latest: 0.3.0.1
description-type: haddock
description: |-
  `named` is a lightweight library for named function parameters (keyword
  arguments) based on overloaded labels. Keyword arguments have several
  advantages over positional arguments:

  * they can be supplied in arbitrary order
  * their names serve as documentation at call site
  * it is impossible to accidentally mix them up

  Unlike @newtype@ wrappers, keyword arguments don't pollute the global
  namespace, don't require top-level definitions, and don't need to be
  exported.

  This implementation of named parameters is typesafe, provides good type
  inference, descriptive type errors, and has no runtime overhead.

  Example usage:

  > import Named
  >
  > createSymLink :: "from" :! FilePath -> "to" :! FilePath -> IO ()
  > createSymLink (Arg from) (Arg to) = ...
  >
  > main = createSymLink ! #from "/path/to/source"
  >                      ! #to "/target/path"
license-name: BSD-3-Clause
