all-versions:
- '0.1'
- 0.1.1
- 0.1.2
- 0.1.3
author: Ezra e. k. Cooper
basic-deps:
  HDBC: '>=0'
  HUnit: '>=0'
  QuickCheck: '>=0'
  base: '>=4 && <5'
  mtl: '>=0'
  random: '>=0'
changelog: ''
changelog-type: ''
description: |-
  Narc is an embedded language for querying SQL databases,
  which permits using the ``nested relational'' model, a more
  flexible model than the traditional relational model of SQL
  databases. In spite of this richer data model, queries are
  transformed into SQL to run against standard databases.

  To use the language, express a query using the combinators
  like @foreach@, @table@, @having@, @singleton@ and so on.
  Wrap this in a call to @narcToSQLString@ to get a string
  that can be sent to a SQL database.

  To send a query directly to an HDBC connection, import
  the module @Database.Narc.HDBC@ and use its @run@ function,
  passing it an HDBC connection and a Narc query. The result
  is an IO action that returns a 2-D list of result values
  in HDBC's usual format.
description-type: haddock
hash: ddb24c490d3b347482340e1b1c45d39903761ce364cca79b90a9e94e73b01d5d
homepage: http://ezrakilty.net/projects/narc
latest: 0.1.3
license-name: BSD-3-Clause
maintainer: ezra@ezrakilty.net
synopsis: Query SQL databases using Nested Relational Calculus embedded in Haskell.
test-bench-deps: {}
