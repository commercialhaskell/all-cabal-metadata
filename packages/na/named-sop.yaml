all-versions:
- 0.1.0.0
- 0.1.0.1
- 0.2.0.0
- 0.3.0.0
author: Sam Schweigel
basic-deps:
  base: ^>=4.13.0.0
  singletons: ^>=2.6
  text: ^>=1.2.3.1
changelog: |
  # 0.3.0.0
  - Update to GHC 8.8.2 and singletons-2.6.

  # 0.2.0.0

  - Made NMap and NSum polymorphic over the kind of the key.  (Perhaps
    'Natural' keys would be useful as well.)  This is a breaking API
    change, because the qualifier for the kind of the key must go before
    the qualifier for the typelevel lists, potentially breaking
    TypeApplication uses.
  - Add Eq and Ord instances for NMap and NSum
  - Add a testsuite

  # 0.1.0.1

  Quickfix for an oversight in the `uninsertSum` function that broke
  `splitSum`.

  # 0.1.0.0

  Initial release.  Expect the public-facing API to change as the
  library is reworked.
changelog-type: markdown
description: "# named-sop: Dependently-typed sums and products, tagged by field name\n\n[![Hackage](https://img.shields.io/hackage/v/named-sop.svg)](https://hackage.haskell.org/package/named-sop)\n[![Build
  Status](https://secure.travis-ci.org/sjsch/named-sop.svg)](http://travis-ci.org/sjsch/named-sop)\n\nSums
  and Maps (products) indexed by a typelevel map of their field\n(or constructor)
  names and types.  They can be combined and split\nagain; their typelevel map is
  sorted to ensure that the end result\nis independent of the order you combine it
  in.\n\n\"Data.NamedSOP.Generic\" contains functions for automatically\nconverting
  between types with a Generic instance and named sums of\nproducts:\n\n```haskell\n>>>
  data A = C { a :: Int, b :: Bool } \n>>>          | D Int Bool deriving (Generic)\n>>>
  :t genSum (C 3 True)\nNSum\n '[ \"_C\" ':-> NMap '[ \"a\" ':-> Int, \"b\" ':-> Bool],\n
  \   \"_D\" ':-> NMap '[ \"_1\" ':-> Int, \"_2\" ':-> Bool]]\n```\n"
description-type: markdown
hash: 181e56b0922cc0fc44328f1aa86497d2ad596ea0b78e21717507d8adc0dcb987
homepage: https://github.com/sjsch/named-sop
latest: 0.3.0.0
license-name: MIT
maintainer: Sam Schweigel <s.schweigel@gmail.com>
synopsis: Dependently-typed sums and products, tagged by field name
test-bench-deps:
  base: '>=0'
  named-sop: '>=0'
  tasty: '>=0'
  tasty-hunit: '>=0'
