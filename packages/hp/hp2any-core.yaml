all-versions:
- 0.9.0
- 0.10.0
- 0.10.1
- 0.11.1
- 0.11.2
author: Patai Gergely
basic-deps:
  attoparsec: '>=0'
  base: '>=4 && <5'
  bytestring: '>=0'
  containers: '>=0'
  directory: '>=0'
  filepath: '>=0'
  network: '>=0'
  old-locale: '>=0'
  process: '>=0'
  time: '>=0'
changelog: |
  0.11.2 - 130304
  * various improvements by Takano Akio and SÃ¶nke Hahn

  0.11.1 - 111117
  * improved parsing performance by Claude Heiland-Allen

  0.10.1 - 110413
  * cleaned up warnings

  0.10.0 - 090812
  * changed processToProfile to accept parameters as a list of strings
  * added some preliminary Win32 code that still doesn't work due to
    sharing violations

  0.9.0 - 090810
  * switched to Int64 for representing costs
  * added a Maybe layer to readProfile as well

  0.8.0 - 090802
  * introduced profile query class to provide some flexibility
  * introduced the statistics module

  0.7.0 - 090731
  * threw out most of the network protocol, which was obsoleted by the
    idea that the grapher is provided as a library instead of a remote
    controlled application

  0.6.0 - 090729
  * added a Maybe layer to the return values of profiling functions

  0.5.0 - 090720
  * added the ability to stop an asynchronous loading operation

  0.4.0 - 090718
  * added asynchronous loading

  0.3.0 - 090705
  * added interface for remote profiling, moved in networking code from
    the grapher and the relay test apps
  * modified stopper action to acknowledge the end of profiling by
    invoking the callback with SinkStop
  * hid internals and tests

  0.2.0 - 090624
  * network protocol implemented (un/marshalling functions)

  0.1.0 - 090613
  * added interface to specify profiling parameters
  * added stopper action that terminates the reader thread in a clean way
  * switched to bytestrings

  0.0.0 - 090528
  * basic functionality: profileCallback, profile, readProfile, and querying
changelog-type: text
description: |
  Testing:

  1. Go to the test directory and compile tester.
  2. Load Profiling.Heap.Read into ghci.
  3. Change to the dir that contains the cabal file (you should be
     already there if you performed the second step from Emacs).
  4. Now you can try _test{1,2,3} as you please. You might want to delete
     test/tester.hp between tests.
description-type: text
hash: 4cd5929ce5a384348d77564da039fd05add5e54b300bbc1584efe844e1bc6bba
homepage: http://www.haskell.org/haskellwiki/Hp2any
latest: 0.11.2
license-name: BSD-3-Clause
maintainer: Patai Gergely (patai.gergely@gmail.com)
synopsis: Heap profiling helper library
test-bench-deps: {}
