all-versions:
- '0.1'
- 0.1.0.1
- '0.2'
- '0.3'
author: Isaac Elliott
basic-deps:
  base: '>=4.9 && <5'
  bifunctors: '>=0.1 && <5.6'
  bytestring: '>=0.10 && <0.11'
  containers: '>=0.5.7.1 && <0.7'
  deriving-compat: '>=0.4 && <0.6'
  digit: '>=0.7 && <0.8'
  dlist: '>=0.8 && <0.9'
  fingertree: '>=0.1 && <0.2'
  generic-lens: '>=1.0 && <1.2'
  hpython: '>=0'
  lens: '>=4 && <4.18'
  megaparsec: '>=6.3 && <7'
  mtl: '>=2.1 && <2.3'
  parsers: '>=0.10 && <0.13'
  parsers-megaparsec: '>=0.1 && <0.2'
  semigroupoids: '>=5.2.2 && <5.4'
  text: '>=1.2 && <1.3'
  these: '>=0.7.4 && <0.9'
  validation: '>=1 && <1.1'
changelog: "# Revision history for hpython\n\n## 0.3\n\n* Changed the sigature of
  `Data.Validation.Monadic.bindVM` to have the same form as\n  `(>>=)`\n  \n* Added
  `HasAnn` instance for `Language.Python.Syntax.Ann.Ann`\n\n* Reworked scope checking
  (`Language.Python.Validate.Scope`)\n\n  Instead of the old triplicate `ScopeContext`,
  we now keep a single context\n  and mark each entry with its 'occurrence path'.
  This is much simpler to manage,\n  but just as expressive as the old version.\n
  \ \n* Improved scope checking of compound statements\n\n  Compound statements like\n
  \ \n  ```\n  if ...:\n      x = 1\n  else:\n      y = x\n  ```\n  \n  were succeeding
  in scope checking because the variables from each block were\n  added to the scope
  sequentially. Now, the multiple blocks are checked in the\n  same scope, and their
  final scopes are combined at the end of the process.\n  \n* Added `Foldable1`/`Traversable1`
  instances for `CommaSep1` and `CommaSep1'`\n\n* Added `HasStatements1` with instances
  for `Statement` and `Block`\n\n## 0.2\n\n*2019-01-10*\n\n* Improved Plated instance
  for exprs\n\n  It now drills down into collections, parameters, arguments, subscripts,
  and\n  comprehensions\n  \n* Added `_Idents` traversal\n\n* Annotations are now
  wrapped in the `Ann` type to aid generic deriving\n\n* Added `HasExprs` instance
  for `Module`\n\n* Added `HasStatements` instance for `Statement`\n\n* Added IO-based
  `read-` functions to `Language.Python.Parse`\n\n* Re-export `Data.Validation` from
  `Language.Python.Parse`\n\n* Added `annot` and `annot_` lenses to `Language.Python.Syntax.Ann`
  to retrieve\n  annotations from structures\n\n## 0.1.0.1\n\n*2019-01-07*\n\nWelcome
  to 2019! (Fixed dates)\n\n## 0.1\n\n*2019-01-07*\n\nInitial release\n"
changelog-type: markdown
description: |-
  `hpython` provides an abstract syntax tree for Python 3.5, along with a parser,
  printer, and syntax checker. It also contains optics for working with the AST,
  and a DSL for writing Python programs directly in Haskell.

  For a high-level overview of the library, see the @Language.Python@ module.

  For code examples, see the [examples directory on GitHub](https://github.com/qfpl/hpython/tree/master/example).

  For general information about the project, see the [project readme](https://github.com/qfpl/hpython/blob/master/README.md).
description-type: haddock
hash: 42e97eb696a0f88b4e0f14744332f70cecc63b8537adad01b52d3ffa3e901be0
homepage: ''
latest: '0.3'
license-name: BSD-3-Clause
maintainer: isaace71295@gmail.com
synopsis: Python language tools
test-bench-deps:
  base: '>=4.9 && <5'
  criterion: '>=1 && <1.6'
  deepseq: '>=0'
  filepath: '>=0'
  hedgehog: '>=0.5 && <0.7'
  hpython: '>=0'
  lens: '>=4 && <4.18'
  megaparsec: '>=6.3 && <7'
  text: '>=1.2 && <1.3'
  validation: '>=1 && <1.1'
