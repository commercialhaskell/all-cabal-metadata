all-versions:
- '0.3'
author: Adam Foltzer, Ryan Newton
basic-deps:
  abstract-deque: '>=0.1.4'
  abstract-par: '>=0'
  base: '>=4 && <5'
  bytestring: '>=0.9'
  containers: '>=0'
  deepseq: '>=1.2'
  mtl: '>=2.0.1.0'
  mwc-random: '>=0.11'
  transformers: '>=0.2.2.0'
  vector: '>=0'
changelog: ''
changelog-type: ''
description: |-
  This library provides a composable abstraction for /Resources/ which
  can be mixed and matched to build /Schedulers/.
  A `Resource` typically corresponds to a specific kind of hardware or
  to a style of scheduling.  This package contains implementations of
  basic `Resource`s that implement parallel scheduling on the CPU.
  To use a complete meta-par Scheduler, import Control.Monad.Par.SMP for
  example, which will provide a `runPar` as well as instances for the
  relevant classes that enable `Par` programming (e.g. `ParFuture`).
description-type: haddock
hash: 18c1777cc7e54ea303dd413b680c3dee6b238c349148941efed1aff76dc3d09e
homepage: https://github.com/simonmar/monad-par
latest: '0.3'
license-name: BSD-3-Clause
maintainer: Adam Foltzer <acfoltzer@gmail.com>
synopsis: Provides the monad-par interface, but based on modular scheduler "mix-ins".
test-bench-deps: {}
