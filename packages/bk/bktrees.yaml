all-versions:
- '0.1'
- 0.1.1
- 0.1.2
- 0.1.3
- '0.2'
- 0.2.1
- 0.2.2
- '0.3'
- 0.3.1
author: Josef Svenningsson
basic-deps:
  array: '>=0'
  base: '>=3 && <5'
  containers: '>=0'
changelog: ''
changelog-type: ''
description: "This is a module I hacked together quickly after having read the following\nblog
  post:\nhttp://blog.notdot.net/archives/30-Damn-Cool-Algorithms,-Part-1-BK-Trees.html\n\nI
  thought the data structure sounded cool so I thought it would be an \ninteresting
  excerise to implement it. \n\nBK-trees can apparently perform very good in some
  circumstances. The \npaper \"Fast Approximate String Matching in a Dictionary\"
  (Baeza-Yates, \nNavarro 1998) recommends them over other structures for doing \napproximate
  search.\nhttp://citeseer.ist.psu.edu/1593.html\n\nThe original paper can be found
  here:\nhttp://portal.acm.org/citation.cfm?id=362003.362025\n\nHenning GÃ¼nter <h.guenther@tu-bs.de>
  generously supplied two algorithms for\ncomputing the levenshtein edit distance.
  The better one of the two is used in\nthe list instance for the Metric class.\n"
description-type: text
hash: 696026dd70fd2ee04ed37505d6380325532c6840442cdd7a030f20ad15b5e1be
homepage: ''
latest: 0.3.1
license-name: BSD-3-Clause
maintainer: josef.svenningsson@gmail.com
synopsis: A set data structure with approximate searching
test-bench-deps: {}
