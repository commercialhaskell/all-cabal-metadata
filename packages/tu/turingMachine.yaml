all-versions:
- 0.1.1.2
- 0.1.2.0
- 0.1.3.0
- 1.0.0.0
author: Jorge Santiago Alvarez Cuadros
basic-deps:
  base: '>=4.6 && <5'
  containers: '>=0.5.6.2'
  mtl: '>=2 && <2.3'
changelog: ''
changelog-type: ''
description: "# Turing Machine Model\nAn implementation of Turing Machine and Automaton
  for Language Theory\n\n  [![turingMachine](https://img.shields.io/badge/turingMachine-v1.0.0.0-blue.svg?style=plastic)](https://hackage.haskell.org/package/turingMachine)\n
  \ [![Build Status](https://travis-ci.org/sanjorgek/turingMachine.svg?branch=master)](https://travis-ci.org/sanjorgek/turingMachine)\n
  \ [![Code Climate](https://codeclimate.com/github/sanjorgek/turingMachine/badges/gpa.svg)](https://codeclimate.com/github/sanjorgek/turingMachine)\n
  \ [![Issue Count](https://codeclimate.com/github/sanjorgek/turingMachine/badges/issue_count.svg)](https://codeclimate.com/github/sanjorgek/turingMachine)\n
  \ [![CircleCI](https://circleci.com/gh/sanjorgek/turingMachine.svg?style=svg)](https://circleci.com/gh/sanjorgek/turingMachine)\n\n##
  Math Models\n### Finite Automaton\n\nFinite State machine, with no memory.\nExist:\n\n1.
  Recognizer\n2. Generator\n3. Transducer\n\n### Stack Automaton\nStack memory machine
  with states\n\n### Turing Machine\n\n## To Do\n\n- [ ] Finite Automaton\n  - [x]
  Delta\n    - [x] Deterministic\n    - [x] Non-deterministic\n    - [x] Lift deltas\n
  \ - [x] Lambda\n    - [x] Lambda1\n    - [x] Lambda2\n    - [x] Lift lambda\n  -
  [ ] Recognizer\n    - [x] Deterministic def\n    - [x] Non-deterministic def\n    -
  [x] Check Word\n    - [ ] k-distinguishable states\n    - [ ] Distinguishable states\n
  \   - [ ] Equivalent states\n    - [x] Equivalent recognizer\n    - [x] Non-deterministic
  to deterministic, and viceversa\n    - [x] Recheable recognizer\n    - [x] Distinguishable
  recognizer\n    - [x] Minimize recognizer\n    - [ ] Remove Ambiguity\n    - [x]
  Language cadinality\n  - [ ] Transductor\n    - [x] Moore\n    - [x] Mealy\n    -
  [x] translate\n    - [ ] Moore to Mealy, and viceversa   \n  - [ ] Recognizer with
  epsilon transitions\n    - [ ] def\n    - [ ] Recognizer with epsilon transitions
  to Recognizer without epsilon transitions\n- [ ] Stack Automaton\n  - [x] Lift delta\n
  \ - [x] Deterministic stack automaton def\n  - [ ] Non-deterministic stack automaton
  def\n  - [ ] Non-deterministic to deterministic stack automaton\n  - [ ] Recognizer
  with epsilon transitions\n- [ ] Turing Machine\n  - [ ] Class def\n  - [ ] Tape
  def\n  - [ ] Delta def\n  - [ ] Accept word\n"
description-type: markdown
hash: f0b98cb58ff20769531ef2eb18b48ba4fb415e5ab312e8974d48a1e96019cb5f
homepage: https://github.com/sanjorgek/turingMachine
latest: 1.0.0.0
license-name: GPL-3.0-only
maintainer: sanjorgek@ciencias.unam.mx
synopsis: An implementation of Turing Machine and Automaton
test-bench-deps:
  QuickCheck: '>=0'
  QuickCheckVariant: '>=1 && <2'
  base: '>=0'
  containers: '>=0'
  hspec: '>=0'
  hspecVariant: '>=1 && <2'
  turingMachine: '>=0'
