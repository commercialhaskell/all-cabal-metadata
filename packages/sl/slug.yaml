all-versions:
- 0.1.0
- 0.1.1
- 0.1.2
- 0.1.3
- 0.1.4
- 0.1.5
- 0.1.6
- 0.1.7
author: Mark Karpov <markkarpov92@gmail.com>
basic-deps:
  QuickCheck: '>=2.4 && <3.0'
  aeson: '>=0.8 && <1.5'
  base: '>=4.7 && <5.0'
  exceptions: '>=0.6 && <0.11'
  http-api-data: '>=0.2 && <0.4'
  path-pieces: '>=0.1.5 && <0.3'
  persistent: '>=2.0 && <3.0'
  text: '>=1.0 && <1.3'
changelog: |
  ## Slug 0.1.7

  * Defined `Semigroup` instance for `Slug`.

  * Improved documentation and metadata.

  ## Slug 0.1.6

  * Allowed Aeson 1.1.

  * Switched to Hspec for test suite.

  * Made public `Arbitrary` instance for `Slug`.

  * Derived `Eq` for `SlugException`.

  * Drop support for GHC 7.6.

  * Started to use the derived `Show` instance for `SlugException`.
    Human-friendly version goes to `Exception`'s method `displayException`
    instead.

  * Added instances of `ToHttpApiData` and `FromHttpApiData` for `Slug`.

  ## Slug 0.1.5

  * Allow Aeson 1.0.

  ## Slug 0.1.4

  * Derive `Ord` and `Data` instances for `Slug`.

  ## Slug 0.1.3

  * Export plain function `unSlug` instead of record selector `unSlug`.

  ## Slug 0.1.2

  * Improved error messages in `parseJSON`.

  ## Slug 0.1.1

  * Add `Read` instance of `Slug`.

  * Add `parseSlug` and `truncateSlug` functions.

  * Functions (including instance methods) that parse `Text` that must be
    formatted as valid slug are case-sensitive now.

  ## Slug 0.1.0

  * Initial release.
changelog-type: markdown
description: |
  # Slug

  [![License BSD3](https://img.shields.io/badge/license-BSD3-brightgreen.svg)](http://opensource.org/licenses/BSD-3-Clause)
  [![Hackage](https://img.shields.io/hackage/v/slug.svg?style=flat)](https://hackage.haskell.org/package/slug)
  [![Stackage Nightly](http://stackage.org/package/slug/badge/nightly)](http://stackage.org/nightly/package/slug)
  [![Stackage LTS](http://stackage.org/package/slug/badge/lts)](http://stackage.org/lts/package/slug)
  [![Build Status](https://travis-ci.org/mrkkrp/slug.svg?branch=master)](https://travis-ci.org/mrkkrp/slug)
  [![Coverage Status](https://coveralls.io/repos/mrkkrp/slug/badge.svg?branch=master&service=github)](https://coveralls.io/github/mrkkrp/slug?branch=master)

  This is a [slug](https://en.wikipedia.org/wiki/Semantic_URL#Slug)
  implementation that plays nicely with the [Yesod](http://www.yesodweb.com/)
  ecosystem. Although it's fairly easy to write this thing, slugs are useful
  and general enough to be coded once and be used again and again. So this
  little package eliminates some boilerplate you might find yourself writing.

  ## Quick start

  The package provides the data type `Slug` that is an instance of various
  type classes, so it can be used with Persistent or as a part of a route. It
  also works with the `aeson` package.

  The slugs are completely type-safe. When you have a `Slug`, you can be sure
  that there is a valid slug inside. Valid slug has the following qualities:

  * it's not empty;

  * it consists only of alpha-numeric groups of characters (words) separated
    by `'-'` dashes in such a way that entire slug cannot start or end in a
    dash and also two dashes in a row cannot be found;

  * every character with defined notion of case is lower-cased.

  To use the package with persistent models, just import `Web.Slug` and add it
  to model file:

  ```
  MyEntity
    slug Slug
    …
  ```

  Use it in route file like this:

  ```
  /post/#Slug PostR GET
  ```

  In Haskell code, create slugs from `Text` with `mkSlug` and extract their
  textual representation with `unSlug`. The following property holds:

  ```haskell
  mkSlug = mkSlug >=> mkSlug . unSlug
  ```

  ## License

  Copyright © 2015–2017 Mark Karpov

  Distributed under BSD 3 clause license.
description-type: markdown
hash: b9d9b1c9e259dff95ddee1d24fe22c6741a6a536b725ec490269ada104e502a2
homepage: https://github.com/mrkkrp/slug
latest: 0.1.7
license-name: BSD-3-Clause
maintainer: Mark Karpov <markkarpov92@gmail.com>
synopsis: Type-safe slugs for Yesod ecosystem
test-bench-deps:
  QuickCheck: '>=2.4 && <3.0'
  base: '>=4.7 && <5.0'
  exceptions: '>=0.6 && <0.11'
  hspec: '>=2.0 && <3.0'
  http-api-data: '>=0.2 && <0.4'
  path-pieces: '>=0.1.5 && <0.3'
  slug: '>=0'
  text: '>=1.0 && <1.3'
