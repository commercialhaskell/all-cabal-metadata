all-versions:
- 0.0.1
- 0.1.0
- 0.2.1
- 0.2.2
- 0.3.0
- 0.3.1
- 0.3.2
- 0.3.3
- 0.3.4
- 0.4.0
- 0.4.1
- 0.5.0
- 0.5.0.1
- 0.5.0.2
- 0.5.1.0
- 0.5.1.1
- 0.6.0.0
- 0.6.1.0
- 0.6.1.1
- 0.7.0.1
- 0.7.1.0
- 0.7.2.0
- 0.7.2.1
- 0.7.2.2
- 0.8.0.0
- 0.9.0.0
author: Dominik Schrempf
basic-deps:
  aeson: '>=0'
  attoparsec: '>=0'
  base: '>=4.7 && <5'
  bytestring: '>=0'
  containers: '>=0'
  elynx-markov: '>=0'
  elynx-seq: '>=0'
  elynx-tools: '>=0'
  elynx-tree: '>=0'
  hmatrix: '>=0'
  matrices: '>=0'
  optparse-applicative: '>=0'
  random: '>=0'
  slynx: '>=0'
  statistics: '>=0'
  text: '>=0'
  transformers: '>=0'
  vector: '>=0'
changelog: |2+

  # Revision history for ELynx


  ## Unreleased changes


  ## Version 0.9.0.0

  -   Toolchain update
  -   Update to random version 1.3


  ## Version 0.8.0.0

  -   Adapt to breaking changes in upstream libraries (`data-default`).


  ## Version 0.7.2.0

  -   `slynx`: Allow global normalization of mixture models.


  ## Version 0.7.1.0

  -   Be less strict with quoted identifiers/names in phylogenetic trees.
  -   Be less strict with FASTA identifiers.
  -   Update tooling (GHC 9.2.4).


  ## Version 0.7.0.1

  -   Random 1.2: Parallel functions now require an \`IOGenM\` random number
      generator.
  -   Fix splitting of the random number generator.


  ## Version 0.6.1.1

  -   Remove plotting functionality (gnuplot incompatible with ghc922).
  -   Read files strictly.
  -   Refactor; flatten model hierarchy.


  ## Version 0.6.1.0

  -   Split `ELynx.Tools` into separate modules because the package will be reduced.
  -   Remove the following modules from `ELynx.Tools`: `Concurrent`,
      `LinearAlgebra`, `List`, `Misc`, and `Numeric`.


  ## Version 0.6.0.0

  -   **elynx-tree:** remove parallel folds with layers (`parBranchFoldMapWithLayer`
      too special and slow).
  -   **elynx-tree:** fix various tree instances; add zip trees with appropriate
      instances.
  -   Remove `monad-logger` dependency and implement lighter alternative.
  -   Significant changes to the tool chain.


  ## Version 0.5.1.0

  -   **elynx-tree:** new functions `isValidPath`, `isLeaf`, `depth`; add conversion
      topology -> tree; various internal algorithmic improvements; improved error
      messages; simplified interface to Newick parsers; parallel fold map; Nix
      flake.
  -   Remove unneeded dependencies.


  ## Version 0.5.0.2

  -   Speed up mixture model simulation.
  -   Improve rooting functions.
  -   Improve `Topology` data type (but still a lot to do).
  -   Various additions to the documentation.
  -   Rename `Measurable` to `HasLength`, `Supported` to `HasSupport`, and `Named`
      to `HasLength`.
  -   Cabal and stack file changes.


  ## Version 0.5.0.1

  -   `modLen`, `modSup`.
  -   Newtype wrappers for branch length, branch support, and node name. Those data
      types and some functions were also renamed.
  -   Add `Path`, and `getSubTreeUnsafe` to tree zipper.
  -   Rename `unsafe` functions so that `unsafe` is at the end.
  -   Many small changes.


  ## Version 0.4.1

  -   Improve `TimeSpec` (Point process).
  -   Parallel evaluation strategies.
  -   Change names of some functions involving partitions. For example, `mp` was
      renamed to `pt`.
  -   Improve documentation for (bi)partitions.
  -   Bugfix `tlynx compare`; do not throw error when branch support values are not
      set.
  -   Add `no-elynx-file` option.
  -   Also parse Nexus files with `tlynx` commands.
  -   Bugfix `subSample`; the sub sample was reversed.


  ## Version 0.4.0

  -   Major refactor of `elynx-tree`. All required function can now conveniently
      reexported by `ELynx.Tree`.


  ## Version 0.3.4

  -   Improve `slynx examine`; show hamming distance; show constant sites.
  -   PhyloStrict -> PhyloExplicit; and some conversion functions were changed.
  -   `tlynx coalesce` was merged into `tlynx simulate`, the syntax has changed; see
      `tlynx simulate --help`.


  ## Version 0.3.3

  -   Fix test suites.


  ## Version 0.3.2

  -   Remove llvm dependency.
  -   Move away from hpack.


  ## Version 0.3.1

  -   Use Attoparsec.
  -   Use ByteString consistently.
  -   Remove elynx-tools dependency from libaries.


  ## Version 0.3.0

  -   **`elynx-nexus`:** library to import and export Nexus files.
  -   **`elynx-tree`:** major refactor and big cleanup; use rose trees with branch
      labels.
  -   **`elynx-tree`:** provide zippers.


  ## Version 0.2.2

  -   Validation and repetition of previous analyses is finally possible with the
      new `elynx` binary.
  -   A library `elynx-markov` for running Markov processes along phylogenetic trees
      has been split off `elynx-seq`. This library performs the computations when
      executing `slynx simulate ...`.
  -   Many other small improvements.

changelog-type: markdown
description: "\n\n# The ELynx Suite\n\nVersion: 0.9.0.0.\nReproducible evolution made
  easy.\n\n<p align=\"center\"><img src=\"https://travis-ci.org/dschrempf/elynx.svg?branch=master\"/></p>\n\nA
  Haskell library and tool set for computational biology. The goal of ELynx is\nreproducible
  research. Evolutionary sequences and phylogenetic trees can be\nread, viewed, modified
  and simulated. The command line with all arguments is\nlogged consistently, and
  automatically. Data integrity is verified using SHA256\nsums so that validation
  of past analyses is possible without the need to\nrecompute the result.\n\nThe Elynx
  Suite consists of library packages and executables providing a range\nof sub commands.\n\nThe
  library packages are:\n\n-   **[elynx-nexus](https://hackage.haskell.org/package/elynx-nexus):**
  Nexus file support.\n-   **[elynx-markov](https://hackage.haskell.org/package/elynx-markov):**
  Simulate multi sequence alignments along phylogenetic trees.\n-   **[elynx-seq](https://hackage.haskell.org/package/elynx-seq):**
  Handle evolutionary sequences and multi sequence alignments.\n-   **[elynx-tools](https://hackage.haskell.org/package/elynx-tools):**
  Tools for the provided executables.\n-   **[elynx-tree](https://hackage.haskell.org/package/elynx-tree):**
  Handle phylogenetic trees.\n\nThe executables are:\n\n-   **[slynx](https://hackage.haskell.org/package/slynx):**
  Analyze, modify, and simulate evolutionary sequences.\n-   **[tlynx](https://hackage.haskell.org/package/tlynx):**
  Analyze, modify, and simulate phylogenetic trees.\n-   **[elynx](https://hackage.haskell.org/package/elynx):**
  Validate and redo past analyses.\n\nDocumentation is available on [Hackage](https://hackage.haskell.org/)
  (use direct links above).\n\n**ELynx is actively developed. We happily receive comments,
  ideas, feature\nrequests, and pull requests!**\n\n\n# Installation\n\nELynx is written
  in [Haskell](https://www.haskell.org/) and can be installed with [cabal-install](https://cabal.readthedocs.io/en/3.4/cabal-commands.html)
  or [Stack](https://docs.haskellstack.org/en/stable/README/).\n\n1.  Install Stack
  with your package manager, or directly from the web\n    page.\n    \n        curl
  -sSL https://get.haskellstack.org/ | sh\n\n2.  Clone the ELynx repository.\n    \n
  \       git clone https://github.com/dschrempf/elynx\n\n3.  Navigate to the newly
  created `elynx` folder and build the binaries.\n    This will take a while.\n    \n
  \       stack build\n\n4.  Run a binary from within the project directory. For example,\n
  \   \n        stack exec tlynx -- --help\n\n5.  If needed, install the binaries.\n
  \   \n        stack install\n    \n    The binaries are installed into `~/.local/bin/`
  which has to be added to the\n    [PATH](https://en.wikipedia.org/wiki/PATH_(variable))
  environment variable. Then, they can be used directly.\n\n\n# Get help\n\n    cabal
  run slynx -- --help\n    # OR: stack exec slynx -- --help\n    # OR: slynx --help\n\n
  \   ELynx Suite version 0.9.0.0.\n    Developed by Dominik Schrempf.\n    Compiled
  on August 11, 2025, at 07:19 am, UTC.\n    \n    Usage: slynx [-v|--verbosity VALUE]
  [-o|--output-file-basename NAME]\n                 [-f|--force] [--no-elynx-file]
  COMMAND\n    \n      Analyze, and simulate multi sequence alignments.\n    \n    Available
  options:\n      -h,--help                Show this help text\n      -V,--version
  \            Show version\n      -v,--verbosity VALUE     Be verbose; one of: Quiet
  Warn Info Debug\n                               (default: Info)\n      -o,--output-file-basename
  NAME\n                               Specify base name of output file\n      -f,--force
  \              Ignore previous analysis and overwrite existing\n                               output
  files.\n      --no-elynx-file          Do not write data required to reproduce an
  analysis.\n    \n    Available commands:\n      concatenate              Concatenate
  sequences found in input files.\n      examine                  Examine sequences.
  If data is a multi sequence alignment, additionally analyze columns.\n      filter-columns
  \          Filter columns of multi sequence alignments.\n      filter-rows              Filter
  rows (or sequences) found in input files.\n      simulate                 Simulate
  multi sequence alignments.\n      sub-sample               Sub-sample columns from
  multi sequence alignments.\n      translate                Translate from DNA to
  Protein or DNAX to ProteinX.\n    \n    \n    Available sequence file formats:\n
  \     - FASTA\n    \n    Available alphabets:\n      - DNA (nucleotides)\n      -
  DNAX (nucleotides; including gaps)\n      - DNAI (nucleotides; including gaps, and
  IUPAC codes)\n      - Protein (amino acids)\n      - ProteinX (amino acids; including
  gaps)\n      - ProteinS (amino acids; including gaps, and translation stops)\n      -
  ProteinI (amino acids; including gaps, translation stops, and IUPAC codes)\n    \n
  \   ELynx\n    -----\n    A Haskell library and tool set for computational biology.
  The goal of ELynx is\n    reproducible research. Evolutionary sequences and phylogenetic
  trees can be\n    read, viewed, modified and simulated. The command line with all
  arguments is\n    logged consistently, and automatically. Data integrity is verified
  using SHA256\n    sums so that validation of past analyses is possible without the
  need to\n    recompute the result.\n    \n    slynx     Analyze, modify, and simulate
  evolutionary sequences.\n    tlynx     Analyze, modify, and simulate phylogenetic
  trees.\n    elynx     Validate and redo past analyses.\n    \n    Get help for commands:\n
  \     slynx --help\n    \n    Get help for sub commands:\n      slynx examine --help\n\n\n##
  Sub command\n\nThe documentation of sub commands can be accessed separately:\n\n
  \   cabal run slynx -- simulate --help\n    # OR: stack exec slynx -- simulate --help\n
  \   # OR: slynx simulate --help\n\n    ELynx Suite version 0.9.0.0.\n    Developed
  by Dominik Schrempf.\n    Compiled on August 11, 2025, at 07:19 am, UTC.\n    \n
  \   Usage: slynx simulate (-t|--tree-file Name) [-s|--substitution-model MODEL]\n
  \                         [-m|--mixture-model MODEL] [-n|--global-normalization]\n
  \                         [-e|--edm-file NAME] [-p|--siteprofile-files NAMES]\n
  \                         [-w|--mixture-model-weights \"[DOUBLE,DOUBLE,...]\"]\n
  \                         [-g|--gamma-rate-heterogeneity \"(NCAT,SHAPE)\"]\n                          (-l|--length
  NUMBER) [-S|--seed INT]\n    \n      Simulate multi sequence alignments.\n    \n
  \   Available options:\n      -h,--help                Show this help text\n      -V,--version
  \            Show version\n      -t,--tree-file Name      Read tree from Newick
  file NAME\n      -s,--substitution-model MODEL\n                               Set
  the phylogenetic substitution model; available\n                               models
  are shown below (mutually exclusive with -m\n                               option)\n
  \     -m,--mixture-model MODEL Set the phylogenetic mixture model; available models\n
  \                              are shown below (mutually exclusive with -s option)\n
  \     -n,--global-normalization\n                               Normalize mixture
  model globally (one normalization\n                               constant for all
  components)\n      -e,--edm-file NAME       Empirical distribution model file NAME
  in Phylobayes\n                               format\n      -p,--siteprofile-files
  NAMES\n                               File names of site profiles in Phylobayes
  format\n      -w,--mixture-model-weights \"[DOUBLE,DOUBLE,...]\"\n                               Weights
  of mixture model components\n      -g,--gamma-rate-heterogeneity \"(NCAT,SHAPE)\"\n
  \                              Number of gamma rate categories and shape parameter\n
  \     -l,--length NUMBER       Set alignment length to NUMBER\n      -S,--seed INT
  \           Seed for random number generator (default: random)\n      -h,--help
  \               Show this help text\n    \n    Substitution models:\n    -s \"MODEL[PARAMETER,PARAMETER,...]{STATIONARY_DISTRIBUTION}\"\n
  \      Supported DNA models: JC, F81, HKY, GTR4.\n         For example,\n           -s
  HKY[KAPPA]{DOUBLE,DOUBLE,DOUBLE,DOUBLE}\n           -s GTR4[e_AC,e_AG,e_AT,e_CG,e_CT,e_GT]{DOUBLE,DOUBLE,DOUBLE,DOUBLE}\n
  \             where the 'e_XY' are the exchangeabilities from nucleotide X to Y.\n
  \      Supported Protein models: Poisson, Poisson-Custom, LG, LG-Custom, WAG, WAG-Custom,
  GTR20.\n         MODEL-Custom means that only the exchangeabilities of MODEL are
  used,\n         and a custom stationary distribution is provided.\n         For
  example,\n           -s LG\n           -s LG-Custom{...}\n           -s GTR20[e_AR,e_AN,...]{...}\n
  \             the 'e_XY' are the exchangeabilities from amino acid X to Y (alphabetical
  order).\n       Notes: The F81 model for DNA is equivalent to the Poisson-Custom
  for proteins.\n              The GTR4 model for DNA is equivalent to the GTR20 for
  proteins.\n    \n    Mixture models:\n    -m \"MIXTURE(SUBSTITUTION_MODEL_1,SUBSTITUTION_MODEL_2[PARAMETERS]{STATIONARY_DISTRIBUTION},...)\"\n
  \      For example,\n         -m \"MIXTURE(JC,HKY[6.0]{0.3,0.2,0.2,0.3})\"\n    Mixture
  weights have to be provided with the -w option.\n    \n    Special mixture models:\n
  \   -m CXX\n       where XX is 10, 20, 30, 40, 50, or 60; CXX models, Quang et al.,
  2008.\n    -m \"EDM(EXCHANGEABILITIES)\"\n       Arbitrary empirical distribution
  mixture (EDM) models.\n       Stationary distributions have to be provided with
  the -e or -p option.\n       For example,\n         LG exchangeabilities with stationary
  distributions given in FILE.\n         -m \"EDM(LG-Custom)\" -e FILE\n         LG
  exchangeabilities with site profiles (Phylobayes) given in FILES.\n         -m \"EDM(LG-Custom)\"
  -p FILES\n    For special mixture models, mixture weights are optional.\n\n"
description-type: markdown
hash: 3c8c6c447b5b745a5ed37af72d1b40d85dd556cb8f722693d41d31b07a1051b5
homepage: https://github.com/dschrempf/elynx#readme
latest: 0.9.0.0
license-name: GPL-3.0-or-later
maintainer: dominik.schrempf@gmail.com
synopsis: Handle molecular sequences
test-bench-deps: {}
...
