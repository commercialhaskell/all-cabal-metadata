homepage: https://github.com/tarleb/gridtables
changelog-type: markdown
hash: 6ed9840499e0bd950523e6f6c9c05d3f6719f791671a771b053ea1f81f35bb72
test-bench-deps:
  base: '>=4.12 && <5'
  gridtables: -any
  text: '>=1.1.1.0 && <1.3 || >=2.0 && <2.1'
  parsec: '>=3.1 && <3.2'
  array: -any
  tasty-hunit: '>=0.9'
  tasty: '>=0.11'
maintainer: Albert Krewinkel <albert@zeitkraut.de>
synopsis: Parser for reStructuredText-style grid tables.
changelog: |
  # Changelog

  `gridtables` uses [PVP Versioning][].

  ## gridtables-0.0.1

  Release pending.

  -   Boldly going where no Haskell library has gone before.

    [PVP Versioning]: https://pvp.haskell.org
basic-deps:
  doclayout: -any
  base: '>=4.12 && <5'
  text: '>=1.1.1.0 && <1.3 || >=2.0 && <2.1'
  parsec: '>=3.1 && <3.2'
  array: -any
  containers: -any
all-versions:
- 0.0.1.0
author: Albert Krewinkel
latest: 0.0.1.0
description-type: markdown
description: |
  # gridtables

  Parser for reStructuredText-style grid tables.

  This package provides a parser for plain-text representations of
  tables, like the one given below.

  ```
  +---------------------+-----------------------+
  | Location            | Temperature 1961-1990 |
  |                     | in degree Celsius     |
  |                     +-------+-------+-------+
  |                     | min   | mean  | max   |
  +=====================+=======+=======+=======+
  | Antarctica          | -89.2 | N/A   | 19.8  |
  +---------------------+-------+-------+-------+
  | Earth               | -89.2 | 14    | 56.7  |
  +---------------------+-------+-------+-------+
  ```

  ## Character widths

  The tables are intended to look good when viewed in a monospace
  font. Therefore, wide and full-width characters, as those in East
  Asian scripts, are counted as two characters.

  ## Column alignments

  The parser re-implements a table extensions from John MacFarlane's
  pandoc, namely support for column-wide cell alignments. The
  alignment of cells is determined by placing colons in the row that
  separates the table head from the body, like so:

      +------+--------+-------+
      | left | center | right |
      +:=====+:======:+======:+
      | 1    | 2      | 3     |
      +------+--------+-------+

  The first line must be used for headless tables:

      +:-----+:------:+------:+
      | left | center | right |
      +------+--------+-------+
      | a 1  | b 2    | c 3   |
      +------+--------+-------+


  ## Algorithm

  The cell tracing algorithm used in this package has been
  translated from the original Python implementation for
  reStructuredText. The parser has been placed in the public domain.

  ## Usage

  The usual way to use this package will be to use it as part of a
  parsec parser:

  ``` haskell
  main :: IO ()
  main = do
    let gt = T.unlines
             [ "+------+--------+-------+"
             , "| left | center | right |"
             , "+:=====+:======:+======:+"
             , "| 1    | 2      | 3     |"
             , "+------+--------+-------+"
             ]
    in print (runParser GT.gridTable () "table" gt)
  ```

  Use `traceLines :: [Text] -> Maybe (GridTable [Text])`, if the
  table's raw lines have been retrieved in a different way.
license-name: MIT
