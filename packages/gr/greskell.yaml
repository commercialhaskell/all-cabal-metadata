all-versions:
- 0.1.0.0
- 0.1.1.0
- 0.2.0.0
- 0.2.0.1
- 0.2.0.2
- 0.2.0.3
- 0.2.1.0
- 0.2.1.1
- 0.2.2.0
- 0.2.3.0
- 0.2.3.1
- 1.0.0.0
- 1.0.0.1
- 1.0.1.0
- 1.1.0.0
- 1.1.0.1
- 1.1.0.2
- 1.1.0.3
- 1.2.0.0
- 1.2.0.1
- 1.2.0.2
- 2.0.0.0
- 2.0.1.0
- 2.0.2.0
- 2.0.3.0
- 2.0.3.1
- 2.0.3.2
- 2.0.3.3
author: Toshio Ito <debug.ito@gmail.com>
basic-deps:
  aeson: ^>=2.0.2 || ^>=2.1.0 || ^>=2.2.3
  base: ^>=4.13.0 || ^>=4.14.0 || ^>=4.15.0 || ^>=4.16.0 || ^>=4.17.0 || ^>=4.18.0
    || ^>=4.19.0 || ^>=4.20.0 || ^>=4.21.0
  exceptions: ^>=0.10.4
  greskell-core: ^>=1.0.0
  hashable: ^>=1.4.0 || ^>=1.5.0
  semigroups: ^>=0.20
  text: ^>=1.2.3 || ^>=2.0.2 || ^>=2.1
  transformers: ^>=0.5.6 || ^>=0.6.1
  unordered-containers: ^>=0.2.15
  vector: ^>=0.12.3 || ^>=0.13.0
changelog: "# Revision history for greskell\n\n## 2.0.3.3  -- 2025-01-30\n\n* Binder:
  now `newBind` produces an expression like `((__v0))`, that is, a variable name wrapped
  with double parens.\n  (see https://github.com/debug-ito/greskell/issues/18 )\n
  \ While this is basically backward-compatible, it can break a user code if it depends
  on the internal of the `Greskell` returned by `newBind`.\n* Support ghc-9.12 (base-4.21).\n
  \ \n\n## 2.0.3.2  -- 2024-11-05\n\n* Bump dependency version bounds.\n\n## 2.0.3.1
  \ -- 2024-09-12\n\n* Update dependency version bounds with cabal-plan-bounds.\n
  \ This adds support for new packages, while drops support for old ones.\n\n## 2.0.3.0
  \ -- 2023-02-24\n\n* Add `GTraversal.Gen` module (see https://github.com/debug-ito/greskell/issues/15
  )\n\n## 2.0.2.0  -- 2023-01-11\n\n* Add `oDesc` and `oAsc` functions (`Gremlin`
  module) ( https://github.com/debug-ito/greskell/pull/14 )\n\n## 2.0.1.0  -- 2022-11-24\n\n*
  Confirm test with ghc-9.2.5, vector-0.13.0.0 and aeson-2.1.0.0.\n* Remove doctests.
  This is because it's so difficult to maintain doctests with recent GHCs and cabals.\n
  \ * doctests have been moved to `examples` function defined in some modules.\n  *
  @ners helped a lot in https://github.com/debug-ito/greskell/pull/12\n* Add the following
  functions ( https://github.com/debug-ito/greskell/pull/13 )\n  * `gElementMap` (`GTraversal`
  module)\n  * `toGremlinKeys` (`Graph` module)\n* Use stylish-haskell to format codes.\n\n##
  2.0.0.0  -- 2021-12-28\n\n* **BREAKING CHANGE**: Now greskell uses `aeson-2.0`.\n
  \ As a result, now implementation of `Data.Aeson.Object` has been changed from `HashMap`
  to `KeyMap`.\n  Some types in greskell (e.g. `Binding`) directly uses the `Object`
  type.\n* Confirm test with `aeson-2.0.2.0`, `semigroups-0.20`, `hashable-1.4.0.1`,
  `doctest-0.19`, `doctest-0.20`.\n* Add `showWalkType`, `showLift` and `showSplit`
  functions, but those are only for testing purposes.\n* `hint-test-suite` is removed.
  Instead, `typecheck-test-suite` is added, which is more robust and lightweight.\n\n##
  1.2.0.2  -- 2021-11-08\n\n* Confirm test with `base-4.15.0.0`.\n\n## 1.2.0.1  --
  2021-02-11\n\n* Confirm test with `doctest-0.18`.\n\n## 1.2.0.0  -- 2020-12-29\n\n*
  Add `Logic` module.\n\n### Gremlin module\n\n* Add `PLike` class.\n* **BREAKING
  CHANGE** Generalize signatures of the following functions\n  using `PLike`. You
  may encounter compile errors if the compiler\n  fails to infer the type.\n  * `pEq`\n
  \ * `pNeq`\n  * `pLt`\n  * `pLte`\n  * `pGt`\n  * `pGte`\n  * `pInside`\n  * `pOutside`\n
  \ * `pBetween`\n  * `pWithin`\n  * `pWithout`\n\n\n### GTraversal module\n\n* Add
  the following functions. (Fix for #10)\n  * `gWhereP1`\n  * `gWhereP1'`\n  * `gWhereP2`\n
  \ * `gWhereP2'`\n  * `gMatch`\n  * `mPattern`\n* Add the following types.\n  * `MatchPattern`\n
  \ * `MatchResult`\n\n### Gremlin module\n\n* Add `LabeledP` type.\n\n## 1.1.0.3
  \ -- 2020-06-21\n\n* Confirm test with `base-4.14.0.0`.\n\n## 1.1.0.2  -- 2020-06-06\n\n*
  Support `doctest-0.17`.\n\n## 1.1.0.1  -- 2020-05-30\n\n* Support `aeson-1.5.0.0`.\n\n##
  1.1.0.0  -- 2020-04-26\n\n### GTraversal module\n\n* **BREAKING CHANGE** `gFlatMap`
  is now polymorphic about the\n  WalkTypes. Use `gFlatMap'`For monomorphic version.\n*
  Add the following functions.\n  * `gFlatMap'`\n  * `gCoalesce`\n  * `gIterate`\n
  \ * `gPath`\n  * `gPathBy`\n* Document change: Now `gProject` is a \"Transformation
  step\", and\n  `gUnfold` is an \"Accessor step\".\n\n### Graph module\n\n* Add the
  following types.\n  * `Path`\n  * `PathEntry`\n* Add the following functions.\n
  \ * `pathToPMap`\n  * `makePathEntry`\n\n### Extra module\n\n* Add `gWhenEmptyInput`
  function.\n\n### AsLabel module\n\n* Derive `Hashable` instance for `AsLabel`.\n*
  Add `unsafeCastAsLabel` function.\n\n## 1.0.1.0  -- 2020-04-24\n\n### GTraversal
  module\n\n* Add the following functions.\n  * `gRepeat`\n  * `gTimes`\n  * `gUntilHead`\n
  \ * `gUntilTail`\n  * `gEmitHead`\n  * `gEmitTail`\n  * `gEmitHeadT`\n  * `gEmitTailT`\n
  \ * `gLoops`\n  * `gIs`\n  * `gIs'`\n  * `gIsP`\n  * `gIsP'`\n  * `gCyclicPath`\n
  \ * `gCyclicPath'`\n  * `gSimplePath`\n  * `gSimplePath'`\n  * `gUnion`\n  * `gChoose3`\n
  \ * `gConstant`\n  * `gLocal`\n  * `gBarrier`\n  * `gDedup`\n  * `gDedupN`\n  *
  `gUnfold`\n* Add the follwing types.\n  * `RepeatUntil`\n  * `RepeatEmit`\n  * `RepeatPos`\n
  \ * `RepeatLabel`\n\n## 1.0.0.1  -- 2019-12-30\n\n* Confirm test with `base-4.13.0.0`\n\n##
  1.0.0.0  -- 2019-12-27\n\n* Add some test cases to server-behavior-test\n* Add PMap
  and NonEmptyLike modules.\n\n### Data.Greskell module\n\n* Export PMap module.\n\n###
  Graph module - Element class and ElementID\n\n* **BREAKING CHANGE** Now `ElementID`
  is a newtype for `GValue`. It was\n  an associated type family in `Element` class.
  However, I think there\n  was no point to make it polymorphic.\n* **BREAKING CHANGE**
  Remove `EdgeVertexID` type family from `Edge` class.\n* **BREAKING CHANGE** Add
  `ElementData` class, and set it as a super class of `Element`.\n* **BREAKING CHANGE**
  Type of the ID field for `AVertex`, `AEdge` and\n  `AVertexProperty` is now `ElementID`,
  not `GValue`.\n* Add `unsafeCastElementID` function.\n* Add `ElementPropertyContainer`
  type family to `Element` class. It's\n  necessary for `gValueMap` traversal.\n\n###
  Graph module - \"reference\" model for graph element types\n\nNow the graph element
  types don't contain properties. They only have\ntheir ID and label (and the value
  if it's a VertexProperty). This is\nbecause some graph implementation of TinkerPop
  don't return properties\nwhen it returns graph elements. See #6.\n\n* **BREAKING
  CHANGE** Remove `avProperties` field from `AVertex`.\n* **BREAKING CHANGE** Remove
  `aeInVLabel`, `aeOutVLabel`, `aeInV`,\n  `aeOutV` and `aeProperties` fields from
  `AEdge`.\n* **BREAKING CHANGE** Remove `avpProperties` field from `AVertexProperty`.\n*
  **BREAKING CHANGE** Move `PropertyMap` class, `FromGraphSONWithKey`\n  class, `PropertyMapSingle`
  type, `PropertyMapList` types and related\n  functions to `Graph.PropertyMap` module.
  They are now all\n  deprecated. Use `PMap` module instead.\n\n### Graph module -
  Key for element property\n\n* **BREAKING CHANGE** Internal of `Key` is modified
  from `Greskell Text`\n  to `Text`, so that it can be an instance of `PMapKey` class.\n*
  **BREAKING CHANGE** Add `KeyNoValue` data constructor for `KeyValue`\n  type.\n*
  Add `unsafeCastKey` function.\n* Add `Keys` type and related functions.\n\n### GTraversal
  module\n\n* **BREAKING CHANGE** Change the signature of the following functions\n
  \ because now `ElementID` is a newtype, not a type alias.\n    * `sV'`\n    * `gV'`\n
  \   * `sE'`\n* Add `gValueMap`, `gProject` and `gByL` functions.\n* Add `LabeledByProjection`
  type.\n* Add `unsafeCastStart` and `unsafeCastEnd` functions to `ToGTraversal` class.\n\n###
  Extra module\n\n* **BREAKING CHANGE** Remove `writeAllProperties` because `PropertyMap`\n
  \ is deprecated.\n* Add `writeKeyValues` function.\n* Add `writePMapProperties`
  function.\n* Add `(<=:>)` and `(<=?>)` operators.\n* Re-export property reader functions
  such as `lookupAs`.\n\n### AsLabel module\n\n* Now `SelectedMap` is a specialized
  type alias for `PMap`.\n* **BREAKING CHANGE** `lookup`, `lookupM`, `lookupAs` and
  `lookupAsM`\n  are now re-exports from `PMap` module, whose signature is more\n
  \ polymorphic than the original ones and have a different exception\n  type.\n*
  **BREAKING CHANGE** `AsLookupException` is removed. Use\n  `PMapLookupException`
  instead.\n* Make `AsLabel` an instance of `PMapKey`.\n* Add `IsString` instance
  to `AsLabel`.\n\n\n## 0.2.3.1  -- 2019-10-02\n\n* Confirm test with `semigroups-0.19.1`.\n\n##
  0.2.3.0  -- 2019-01-01\n\n* Add Extra module.\n\n## 0.2.2.0  -- 2018-11-23\n\n*
  Add new `AsLabel` module.\n\n### GTraversal module\n\n* Add `gAs`, `gSelect1`, `gSelectN`,
  `gSelectBy1`, `gSelectByN`,\n  `gOutV`, `gOutV'`, `gInV`, `gInV'` functions.\n\n###
  Binder module\n\n* Add `newAsLabel` function.\n\n\n\n## 0.2.1.1  -- 2018-10-03\n\n*
  Confirm test with `base-4.12.0.0`\n\n\n## 0.2.1.0  -- 2018-08-17\n\n### GTraversal
  module\n\n* Add `(<$.>)`, `(<*.>)`, `gLimit`, `gTail`, `gSkip`, `gId`, `gLabel`\n
  \ functions.\n\n\n## 0.2.0.3  -- 2018-07-24\n\n* Confirmed test with `doctest-discover-0.2.0.0`.\n\n\n##
  0.2.0.2  -- 2018-06-24\n\n* Confirmed test with `doctest-0.16.0`.\n\n\n## 0.2.0.1
  \ -- 2018-06-24\n\n* .cabal: Now `hint-test` flag has `manual: True` setting. The\n
  \ hint-test may be sometimes unstable, so the user should be able to\n  disable
  it in a stable way.\n  See https://github.com/commercialhaskell/stackage/pull/3758\n\n\n##
  0.2.0.0  -- 2018-06-21\n\n* Confirmed test with `aeson-1.4.0.0` and `hint-0.8.0`.\n\n###
  Graph module\n\n* **BREAKING CHANGE**: Now `AVertex`, `AEdge`, `AVertexProperty`
  are\n  based on `GValue` type, instead of `GraphSON Value`. This is for\n  taking
  care of possibly nested GraphSON-encoded values in a generic\n  way.\n* **BREAKING
  CHANGE**: `parseOneValue`, `parseListValues`,\n  `parseNonEmptyValues` functions
  now require `FromGraphSON`\n  constraint, instead of `FromJSON`, because property
  types of\n  `AVertex` etc have changed.\n* Add `Cardinality` type and its enum instances.\n*
  Add `KeyValue` type and `(=:)` operator.\n\n* (internal change): `PropertyMapGeneric`
  is now based on\n  `HashMap.Strict`.\n\n### The top Data.Greskell module\n\n* Re-export
  `GMap` and `AsIterator` modules.\n\n### GTraversal module\n\n* Add `gV`, `gV'`,
  `gAddE`, `gAddE'`, `gFrom`, `gTo`, `gProperty`,\n  `gPropertyV`, `sAddV`, `sAddV'`.\n\n\n##
  0.1.1.0  -- 2018-04-08\n\n* Add Semigroup instance to PropertyMapSingle and PropertyMapList.\n*
  Confirmed test with base-4.11 (with hint-test and server-test disabled)\n\n\n##
  0.1.0.0  -- 2018-03-12\n\n* First version. Released on an unsuspecting world.\n"
changelog-type: markdown
description: |
  # greskell

  Haskell binding for Gremlin query language.

  See the package description, or [project README](https://github.com/debug-ito/greskell/blob/master/README.md).

  ## Author

  Toshio Ito <debug.ito@gmail.com>
description-type: markdown
hash: dba9e99d4fa353746ee41996d1b45c5fdc29d9358f4a30b7ff7ce2bd47654314
homepage: https://github.com/debug-ito/greskell/
latest: 2.0.3.3
license-name: BSD-3-Clause
maintainer: Toshio Ito <debug.ito@gmail.com>
synopsis: Haskell binding for Gremlin graph query language
test-bench-deps:
  aeson: ^>=2.0.2 || ^>=2.1.0 || ^>=2.2.3
  base: '>=4.13.0 && <4.14 || >=4.14.0 && <4.15 || >=4.15.0 && <4.16 || >=4.16.0 &&
    <4.17 || >=4.17.0 && <4.18 || >=4.18.0 && <4.19 || >=4.19.0 && <4.20 || >=4.20.0
    && <4.21 || >=4.21.0 && <4.22'
  bytestring: ^>=0.10.9 || ^>=0.11.3 || ^>=0.12.0
  greskell: '>=0'
  greskell-core: ^>=1.0.0
  hspec: '>=2.9.1 && <2.10 || >=2.10.6 && <2.11 || >=2.11.9 && <2.12'
  should-not-typecheck: ^>=2.1.0
  text: ^>=1.2.3 || ^>=2.0.2 || ^>=2.1
  unordered-containers: ^>=0.2.15
