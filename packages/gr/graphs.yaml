all-versions:
- '0.1'
- '0.2'
- '0.3'
- 0.3.1
- 0.3.2
- 0.3.2.1
- 0.3.2.2
- 0.3.2.3
- '0.4'
- 0.4.0.1
- 0.4.0.3
- 0.4.1
- '0.5'
- 0.5.0.1
- '0.6'
- 0.6.0.1
- '0.7'
- 0.7.1
- 0.7.2
- 0.7.3
author: Edward A. Kmett
basic-deps:
  array: '>=0.3 && <0.7'
  base: '>=4.9 && <5'
  containers: '>=0.3 && <0.9'
  transformers: '>=0.2.2 && <0.7'
  transformers-compat: '>=0.3 && <1'
  void: '>=0.5.5.1 && <1'
changelog: |+
  0.7.3 [2025.03.03]
  ------------------
  * Drop support for pre-8.0 versions of GHC.

  0.7.2 [2022.05.07]
  ------------------
  * Allow building with `transformers-0.6.*`.

  0.7.1 [2018.02.24]
  ------------------
  * Add a `Semigroup` instance for `GraphSearch`.

  0.7
  ---
  * Build warning-free on GHC 7.10 and GHC 8.0-rc1

  0.6
  ---
  * Fixed the `dfs` `enterVertex` and `exitVertex` order, they were wrong before.
  * Factored out a common visitor model for both `bfs` and `dfs`.

  0.5
  ---
  * Added `enterEdge` to `bfs` and `dfs`.
  * Exported `AdjacencyListGraph` and `AdjacencyMatrixGraph`.

  0.4.1
  -----
  * Added CHANGELOG
  * Removed my intra-package dependency upper bounds

changelog-type: markdown
description: |
  graphs
  ==========

  [![Hackage](https://img.shields.io/hackage/v/graphs.svg)](https://hackage.haskell.org/package/graphs) [![Build Status](https://github.com/ekmett/graphs/workflows/Haskell-CI/badge.svg)](https://github.com/ekmett/graphs/actions?query=workflow%3AHaskell-CI)

  This provides a "not-very-Haskelly" API for calculating traversals of graphs that may be too large to fit into memory.

  Contact Information
  -------------------

  Contributions and bug reports are welcome!

  Please feel free to contact me through github or on the #haskell IRC channel on irc.freenode.net.

  -Edward Kmett
description-type: markdown
hash: 38c583161c64e6b4f1531e57243598e8a36f4d131b1e87d3254de2910bef7365
homepage: http://github.com/ekmett/graphs
latest: 0.7.3
license-name: BSD-3-Clause
maintainer: Edward A. Kmett <ekmett@gmail.com>
synopsis: A simple monadic graph library
test-bench-deps: {}
