all-versions:
- 0.4.3
- 0.4.4
- 0.4.5
- 0.4.7
- '0.5'
- 0.5.1
- 0.5.2
- 0.5.4
- 0.5.6
- 0.5.7
- 0.6.1
- 0.6.2
- 0.6.3
- 0.6.4
- 0.6.5
- 0.6.6
- 0.6.7
- 0.6.8
author: Jan Rochel
basic-deps:
  GLUT: '>=2.4 && <3'
  OpenGL: '>=3.0 && <4'
  base: '>=4.3 && <5'
  base-unicode-symbols: '>=0.2 && <0.3'
  graph-rewriting: '>=0.7.6 && <0.9'
  graph-rewriting-gl: '>=0.7.6 && <0.8'
  graph-rewriting-layout: '>=0.5.4 && <0.6'
  parsec: '>=3.1.0 && <3.2'
changelog: ''
changelog-type: ''
description: This package serves as an example for how to use the graph-rewriting,
  graph-rewriting-layout, and graph-rewriting-gl packages to create a graph rewriting
  system with an interactive, graphical front-end. The SKI combinator calculus is
  implemented once as an interaction net with combinators that accumulate their arguments,
  and once with rules that consume all the arguments at once. The sources (of the
  interaction net implementation) are well documented and serve as a tutorial for
  implementing your own rewrite system. Start reading in INet/Graph.hs. To run the
  program run either the "ski-inet" or the "ski-direct" with one of the files from
  the "examples" directory as an argument. For usage of the GUI see "GraphRewriting.GL.UI".
description-type: haddock
hash: 0219741cb47779f4a0af34184e69d02de2e2ac97c45fbe7a29e27edfb584de25
homepage: https://github.com/jrochel/graph-rewriting
latest: 0.6.8
license-name: BSD-3-Clause
maintainer: jan@rochel.info
synopsis: Two interactive evalutors of the SKI combinator calculus
test-bench-deps: {}
