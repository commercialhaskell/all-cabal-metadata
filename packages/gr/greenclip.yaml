all-versions:
- 1.3.0
- 2.0.0
- 2.0.1
- 3.0.0
- 3.0.1
- 3.0.2
- 3.1.0
- 3.1.1
- 3.2.0
- 3.3.0
- 3.4.0
- 4.0.0
- 4.1.0
- 4.2.0
- 4.3.0
- 4.3.1
author: Erèbe - Romain GERARD
basic-deps:
  X11: '>=1.6'
  base: '>=4 && <5'
  base16-bytestring: '>=0'
  binary: '>=0'
  bytestring: '>=0'
  cryptohash-md5: '>=0'
  directory: '>=0'
  exceptions: '>=0'
  hashable: '>=0'
  microlens: '>=0'
  microlens-mtl: '>=0'
  protolude: '>=0'
  text: '>=0'
  tomland: '>=0'
  unix: '>=0'
  vector: '>=0'
  wordexp: '>=0'
changelog: ''
changelog-type: ''
description: "<p align=\"center\">\n  <img src=\"https://github.com/erebe/greenclip/raw/master/logo.png\"
  alt=\"logo\"/>\n</p>\n\n## Description\n\nRecycle your clipboard selections with
  greenclip and don't waste your time anymore\nto reselect things over and over.\n\n**Purpose:**\nKeeps
  track of your history of selections to quickly switch between them\n\n**Demo:**
  \ <a href=\"https://www.youtube.com/watch?v=Utk-9Gy8H3w\">Video Link</a>\n<br/>\n<a
  href=\"https://www.youtube.com/watch?v=4IycORAdW9M\">Video made by @gotbletu</a>\n\n**Features:**\n
  \ + Integrated with [rofi](https://github.com/DaveDavenport/rofi)\n  + Permanently
  set some selections to added at the end (set `static_history = []` in the config
  file)\n  + Merge X Primary selection with clipboard selection (set `use_primary_selection_as_input
  = true` in the config file)\n  + Blacklist some applications (see `I want to blacklist
  some applications !` in the FAQ section)\n  + Copy small images (you can disable
  it in the config)\n\n## Installation\n\n- It's a static binary so drop it anywhere
  in your $PATH env\n\n```wget https://github.com/erebe/greenclip/releases/download/v4.2/greenclip```\n\n\n-
  Alternatively if you are using Archlinux you can install the package from AUR\n\n``yay
  rofi-greenclip``\n\nPS: If you want, you can add a permanent list of selections
  to be added to your current history. Go see the config file\n\nConfiguration file
  can be found at: \n```\n❯ cat ~/.config/greenclip.toml\n\n[greenclip]\n  history_file
  = \"/home/erebe/.cache/greenclip.history\"\n  max_history_length = 50\n  max_selection_size_bytes
  = 0\n  trim_space_from_selection = true\n  use_primary_selection_as_input = false\n
  \ blacklisted_applications = []\n  enable_image_support = true\n  image_cache_directory
  = \"/tmp/greenclip\"\n  static_history = [\n '''¯\\_(ツ)_/¯''',\n]\n```\n\n## Usage\n\nGreenclip
  is intended to be used with [rofi](https://github.com/DaveDavenport/rofi)\n\n1.
  Spawn the daemon ``` greenclip daemon ```\n2. When ever you need to get your selections
  history ``` rofi -modi \"clipboard:greenclip print\" -show clipboard -run-command
  '{cmd}' ```\n3. The entry that you have selected will be in your clipboard now\n4.
  Configuration file can be found in ```.config/greenclip.toml```\n\n## Migrating
  from 2.x version to 3.x one\n\n1. Kill all greenclip process already running\n2.
  Delete your old config file and old cache file (in ~/.cache/greenclip*)\n3. Start
  the new version of greenclip\n\n## Building the project\n\n1. Get [stack](https://docs.haskellstack.org/en/stable/README/)
  for Haskell\n2. stack init && stack install\n\nor you can look at the .travis.yml
  file\n\n## FAQ\n\nQ. **Greenclip does not copy selection !**\n\nA. Greenclip cannot
  run alongside other clipboard manager. If you have already one activated (there
  is one by default in KDE), you have first to disable it before trying to run greenclip\n\n---------\n\nQ.
  **I cannot paste images !**\n\nA. You can only keep in your history small images
  \ (~ <500 kb). I disabled the support for bigger images as it will turn your CPU
  into a heater for winter.\n\n----------\n\nQ. **I want to blacklist some applications
  !**\n\nA. There is in your config file a section for blacklisting applications.\n
  \  You can run greenclip daemon in a terminal to find what is the name of the application
  who has the current selection.\n   Be aware that a lot of application does not name
  their clipboard process/window, so it will be empty most of the time.\n   Be aware
  also, that if you use an electron application (like slack i.e) you will get a generic
  name like \"Chromium clipboard\"\n\n----------\n\nQ. **I want to paste selection
  directly after selecting them !**\n\nA. This is not possible as when you invoke
  rofi, you lose focus of your current window and there is no way to find it back
  (from greenclip point of view)\n\n   Nonetheless, you can emulate the feature with
  xdotool `rofi -modi \"clipboard:greenclip print\" -show clipboard -run-command '{cmd}'
  ; sleep 0.5; xdotool type $(xclip -o -selection clipboard)`\n\n   or look at this
  issue for a more complete solution https://github.com/erebe/greenclip/issues/27\n\n----------\n\nQ.
  **I got a strange behavior when clearing the clipboard - greenclip clear**\n\nA.
  The command is not doing what it is supposed to do, if greenclip's daemon is running.
  You need to stop it first.\n\n   Use this command to clear the history `pkill greenclip
  && greenclip clear && greenclip daemon &`\n   \n   For more information regarding
  why, refer to https://github.com/erebe/greenclip/issues/34 \n\n----------\n\nQ.
  **I need multi-line text in staticHistory**\n\nA. https://github.com/erebe/greenclip/issues/78\n\n----------\n\nQ.
  **I don't want to use rofi !**\n\nA. You can also use greenclip with [dmenu](http://tools.suckless.org/dmenu)
  or [fzf](https://github.com/junegunn/fzf). Example usage:\n\n   `greenclip print
  | grep . | dmenu -i -l 10 -p clipboard | xargs -r -d'\\n' -I '{}' greenclip print
  '{}'`\n\n   `greenclip print | grep . | fzf -e | xargs -r -d'\\n' -I '{}' greenclip
  print '{}'`\n\n----------\n\nQ. **I want to thank you for greenclip !**\n\nA. Give
  a star to this repository\n"
description-type: markdown
hash: 2b0046542b6a238628b637ff8d4e0127111751b8102347a53c79ac6d243d4482
homepage: https://github.com/erebe/greenclip#readme
latest: 4.3.1
license-name: BSD-3-Clause
maintainer: romain.gerard@erebe.eu
synopsis: Simple clipboard manager to be integrated with rofi
test-bench-deps: {}
