homepage: http://github.com/yav/graphmod/wiki
changelog-type: markdown
hash: 3d68051640c6db1fee70867e22ad7d87b633cf254dce0f375daf963d6995dd10
test-bench-deps: {}
maintainer: iavor.diatchki@gmail.com
synopsis: Present the module dependencies of a program as a "dot" graph.
changelog: "* 1.4.5.1\n  - Support for Cabal 3.6\n\n* 1.4.5\n  Several Main modules
  in one package are disambiguated \n  as follows (see https://github.com/yav/graphmod/issues/28).\n
  \ When the module name is Main and there are no qualifiers \n  (Cabal does not allow
  any)\n  Then the qualifiers are the directories leading up to the \n  source file
  and the module name is replaced by the file's \n  basename. \n  E.g. when the Main
  module resides in \n  app/Program/Main.hs\n  then the node in the graph is labelled
  \n  app.Program.Main\n\n* Version 1.4.1\n  - Support for Cabal 2\n  - Updates to
  build infrastructure\n  - Fixes memory leak\n\n* Version 1.3\n  - Corrects collapsing
  logic.\n  - Change node coloring in clusters:\n    * Clusters are displayed with
  various shades of gray\n    * Nodes in a cluster are all the same color\n  - Change
  to clustering logic:  by default, a module that has the same\n    name as a cluster
  will be rendered inside the cluster.  One can tell\n    that the module is different
  because it will still have the color of\n    modules from the cluster \"above\".
  \ Also, the module has a border to\n    empahsize the difference.\n    This behavior
  may be disabled using `--no-module-in-cluster`\n\n* Version 1.2.9\n  - Support for
  Cabal: if we find a cabal file, we add all modules in it\n  - Render `{-# SOURCE
  #-}` imports specially.\n\n* Version 1.2.7\n  Correct the prunning logic.\n\n* Version
  1.2.6\n\n  Add support for parsing GHC's `.import` files.  These may be produced\n
  \ by running GHC with `-ddump-minimal-imports`\n\n* Version 1.2.5\n\n  Add support
  for pruning the dependecy graph.\n\n* Version 1.2.3\n\n  [Collapse Modules]\n  The
  flag `--collapse-module` (`-C` for short) adds a new mode of collapsing\n  multiples
  nodes into a single one.  This is similar to `--collapse` except\n  that the parameter
  can refer either to a module name, or to a module prefix.\n  So, for example, `--collapse-module=A.B`
  will use a single node for the\n  module A.B (if there is one), as well as for any
  module that starts with\n  the prefix A.B (e.g., A.B.C).\n\n  \"Collapsed\" nodes
  are represented with a box.\n\n  Collapsed nodes corresponding to modules have a
  border, while ones which\n  correspond to just a prefix do not have a border.\n\n\n
  \ [Color Schemes]\n  The flag `--colors` (`-s` for short) enables users to choose
  from\n  a set of predefined color schemes.\n\n\n* Version 1.2.2\n\n  [Show Version]\n
  \ The flag `--version` (`-v` for short) shows graphmod's version.\n\n"
basic-deps:
  haskell-lexer: '>=1.0.2'
  Cabal: -any
  base: <5
  dotgen: '>=0.2 && <0.5'
  filepath: -any
  containers: -any
  graphmod: -any
  pretty: -any
  directory: -any
all-versions:
- '1.1'
- 1.1.1
- 1.1.2
- 1.1.3
- '1.2'
- 1.2.1
- 1.2.2
- 1.2.3
- 1.2.4
- 1.2.5
- 1.2.6
- 1.2.7
- 1.2.8
- 1.2.9
- '1.3'
- '1.4'
- 1.4.1
- 1.4.2
- 1.4.3
- 1.4.4
- 1.4.5.1
author: Iavor S. Diatchki
latest: 1.4.5.1
description-type: haddock
description: |-
  This package contains a program that computes "dot" graphs
  from the dependencies of a number of Haskell modules.
license-name: BSD-3-Clause
