all-versions:
- 0.0.2
- 0.0.3
- 0.0.4
- 1.0.1
- 1.0.3.0
- '1.1'
- '1.2'
author: Dino Morelli
basic-deps:
  base: '>=3 && <5'
  containers: '>=0'
  directory: '>=0'
  filepath: '>=0'
  hslogger: '>=0'
  mtl: '>=2.2.1'
  network: '>=0'
  process: '>=0'
  regex-compat: '>=0'
  time: '>=0'
  time-locale-compat: '>=0'
  unix: '>=0'
changelog: |
  1.2 (2015-06-30)

     * Added a lower bound for mtl dep
     * Simplified some config error handling
     * Decided to not force time >= 1.5 for now
     * Reformatted cabal file a bit


  1.1 (2015-06-28)

     * Replaced deprecated Control.Monad.ErrorT with ExceptT
     * Fixed defaultTimeLocale import problem
     * Now getting version from cabal info using Paths_ code
     * Updated cabal info
     * Moved copyright date up to 2015
     * Adjustments to documentation


  1.0.3.0 (2011-03-18)

     * Fixed code that was leaving zombie child processes by not
       waiting for them
     * Changed listenAcpi delay time from 0.25 secs to 2 secs
     * Refined developer and testing environment creation scripts
     * Updated and clarified some documentation


  1.0.1 (2010-04-06)

     * Fix for a recent change in how System.Directory.doesFileExist
       behaves with sockets
     * Fixes for new GHC 6.12.x unused do binding warnings
     * Various cosmetic changes of copyright dates and version strings
     * Added HCAR info


  0.0.4 (2009-07-19)

     * Another try at fixing the broken man page installation problem
       on Arch Linux.


  0.0.3 (2009-07-15)

     * Fix for installation problem on Arch Linux. The man page was
       not getting installed.


  0.0.2 (2009-07-15)

     * Initial release
changelog-type: markdown
description: "# uacpid\n\n\n## Synopsis\n\nUserspace Advanced Configuration and Power
  Interface event daemon\n(Haskell)\n\n\n## Description\n\nuacpid is a daemon designed
  to be run in userspace that will monitor\nthe local system's acpid socket for hardware
  events. These events can\nthen be acted upon by handlers with access to the user's
  environment.\n\nAn example of why you need this: Suppose you want to have a hardware\nevent
  change the active X displays, like a laptop external monitor\nfunction button. Some
  tools to achieve this display change require\nthe logged in user's DISPLAY and other
  settings that may be difficult\nor impossible to gain access to from acpid scripts.\n\nAnother
  example is media control function buttons, like play/pause\nor next/previous track
  for a music player.\n\nuacpid is running as you and is getting the hardware events
  reported\nby the system's acpid. uacpid can then act on the events on your\nbehalf,
  with your environment.\n\nuacpid will respond to SIGHUP by reloading the event handlers
  and\nreestablishing its connection to the acpid socket. Changes to the\nconfig file
  will require that uacpid be restarted, it will not\nreload the config on SIGHUP.\n\nHandler
  syntax closely follows that of acpid. Users familiar with\nacpid should have no
  problem here. An example is included.\n\nNote that uacpid requires acpid. It must
  be installed and running.\n\n(Please see the uacpid man page for more detailed info)
  \n\n\n## Getting source\n\n- Download the cabalized source package [from Hackage](http://hackage.haskell.org/package/uacpid)\n-
  epub-tools is available for Arch Linux [from the AUR](https://aur.archlinux.org/packages/uacpid/)\n-
  Get the source with darcs: `$ darcs get http://hub.darcs.net/dino/uacpid`\n- If
  you're just looking, [browse the source](http://hub.darcs.net/dino/uacpid)\n\nGetting
  started developing:\n\nThis daemon is designed to make files for itself in ~/.uacpid/
  the\nfirst time it's run. To assist with development, there is a script\nwhich will
  build a development installation and execution environment\nin /tmp/uacpid-dev/
  for you.\n\nTo initialize for development:\n\n    $ bin/uacpid-dev-setup\n\n\nOnce
  that's completed, it can be run like this:\n\n    $ bin/uacpid-dev\n\nAnd once you
  have it, building the usual way:\n\n    $ cabal configure\n    $ cabal build\n    $
  cabal install\n\n\n## Installing\n\nBuild and install with cabal-install:\n  `$
  cabal update ; cabal install uacpid`\n\n\n## Contact\n\nDino Morelli <[dino@ui3.info](mailto:dino@ui3.info)>\n"
description-type: markdown
hash: dbd03425396c0639e920979d9e7b3125cada3d85e1afa9613c6b7ac3678d0ce5
homepage: http://hub.darcs.net/dino/uacpid
latest: '1.2'
license-name: BSD-3-Clause
maintainer: Dino Morelli <dino@ui3.info>
synopsis: |-
  Userspace Advanced Configuration and Power Interface
  event daemon
test-bench-deps: {}
