all-versions:
- 0.2.0.0
- 0.3.0.0
- 0.3.1.0
- 0.3.2.0
- 0.3.2.1
- 0.3.2.2
- 0.3.2.3
- 0.3.2.4
- 0.4.0.0
- 0.5.0.0
- 0.5.1.0
- 0.5.1.1
- 0.5.1.2
- 0.5.2.0
- 0.5.3.0
- 0.5.4.1
- 0.5.5.0
author: Travis Athougies
basic-deps:
  aeson: '>=0.11 && <2.3'
  attoparsec: '>=0.13 && <0.15'
  base: '>=4.11 && <5'
  beam-core: '>=0.10 && <0.11'
  beam-migrate: '>=0.5.3.2 && <0.6'
  bytestring: '>=0.10 && <0.13'
  direct-sqlite: '>=2.3.27'
  dlist: '>=0.8 && <1.1'
  free: '>=4.12 && <5.3'
  hashable: '>=1.2 && <1.6'
  monad-control: '>=1.0 && <1.1'
  mtl: '>=2.1 && <2.4'
  network-uri: '>=2.6 && <2.7'
  scientific: '>=0.3 && <0.4'
  sqlite-simple: '>=0.4 && <0.5'
  text: '>=1.0 && <2.2'
  time: '>=1.6 && <1.15'
  transformers-base: '>=0.4 && <0.5'
changelog: "# 0.5.5.0\n\n## Added features\n\n* `runInsertReturningList` now uses
  SQLite's relatively new `RETURNING` clause.\n\n## Bux fixes\n\n* Fixed an issue
  where values inserted with conflicts did not return then when using `runInsertReturningList`
  (#774) \n\n## Updated dependencies\n\n* Updated the lower bound of `direct-sqlite`
  to `2.3.27`.\n* Updated the upper bound on `time` to include `time-1.14`.\n\n# 0.5.4.1\n\n##
  Dependencies\n\n* Ensure that beam-sqlite uses sqlite-3.24+, which is the minimum
  supported version (#589).\n\n# 0.5.4.0\n\n## Added features\n\n * Removed the reliance
  on either the `unix` or `windows` package, which should enable (#738)\n   `beam-sqlite`
  to be buildable on a wider variety of platforms.\n\n# 0.5.3.1\n\n## Added features\n\n
  * Replaced use of deprecated functions.\n\n# 0.5.3.0\n\n## Added features\n\n *
  Loosen some version bounds\n * `HasSqlEqualityCheck` instance for `Day`\n\n# 0.5.2.0\n\n##
  Bug fixes\n\n * Fix encoding for `UTCTime`\n\n## Addded features\n\n * `IN (SELECT
  ...)` syntax via `inQuery_`\n\n# 0.5.1.2\n\n## Added features\n\n * Aeson 2.0 support\n\n#
  0.5.1.1\n\n## Added features\n\n * GHC 9.2 and 9.0 support\n\n## Bug fixes\n\n *
  Support inserting default values for all columns (except with upsert)\n\n# 0.5.1.0\n\n##
  Added features\n\n * `MonadBase` and `MonadBaseControl` instances for `SqliteM`\n\n#
  0.5.0.0\n\n## Interface changes\n\n * Removed instances for machine-dependent ambiguous
  integer types `Int` and `Word`\n\n## Added features\n\n * Support for `in_` on row
  values\n * Upsert support using `HasInsertOnConflict`\n * Fix build on Android and
  OpenBSD\n\n## Bug fixes\n\n * Fix emitting and detection of `DECIMAL` and `DOUBLE
  PRECISION` types\n * Fix `bitLength`, `charLength_`, and `octectLength_` by emulating
  with `CAST` and `LENGTH`\n * Fix `runInsertReturningList` for when the database
  column order and beam column order disagree.\n\n# 0.4.0.0\n\n# 0.3.2.0\n\nAdd `Semigroup`
  instances to prepare for GHC 8.4 and Stackage nightly\n\n# 0.3.1.0\n\nAdd `runBeamSqlite`
  and `runBeamSqliteDebug` functions\n\n# 0.3.0.0\n\n* Re-introduce backend parameter
  to `Database` class\n\n# 0.2.0.0\n\nFirst split of sqlite backend from main beam
  package\n"
changelog-type: markdown
description: "# `beam-sqlite`: Beam backend for the SQLite embedded database\n\n`beam-sqlite`
  is a beam backend for\nthe [SQLite embedded database](https://sqlite.org/). \n\nSQLite
  is mostly standards compliant, but there are a few cases that beam-sqlite\ncannot
  handle. These cases may result in run-time errors. For more information,\nsee\n[the
  documentation](https://haskell-beam.github.io/beam/user-guide/backends/beam-sqlite/).\nDue
  to SQLite's embedded nature, there are currently no plans to get rid of\nthese.
  However, proposals and PRs to fix these corner cases are welcome, where\nappropriate.\n"
description-type: markdown
hash: 2caff6ef43559ff9b44394214fc4648dc31ba66d69448ecc5c069e05e705de55
homepage: https://haskell-beam.github.io/beam/user-guide/backends/beam-sqlite/
latest: 0.5.5.0
license-name: MIT
maintainer: travis@athougies.net
synopsis: Beam driver for SQLite
test-bench-deps:
  base: '>=0'
  beam-core: '>=0'
  beam-migrate: '>=0'
  beam-sqlite: '>=0'
  sqlite-simple: '>=0'
  tasty: '>=0'
  tasty-expected-failure: '>=0'
  tasty-hunit: '>=0'
  text: '>=0'
  time: '>=0'
