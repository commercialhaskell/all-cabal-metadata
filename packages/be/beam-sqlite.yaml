all-versions:
- 0.2.0.0
- 0.3.0.0
- 0.3.1.0
- 0.3.2.0
- 0.3.2.1
- 0.3.2.2
- 0.3.2.3
- 0.3.2.4
- 0.4.0.0
- 0.5.0.0
- 0.5.1.0
- 0.5.1.1
- 0.5.1.2
- 0.5.2.0
- 0.5.3.0
author: Travis Athougies
basic-deps:
  aeson: '>=0.11 && <2.3'
  attoparsec: '>=0.13 && <0.15'
  base: '>=4.7 && <5'
  beam-core: '>=0.10 && <0.11'
  beam-migrate: '>=0.5 && <0.6'
  bytestring: '>=0.10 && <0.13'
  dlist: '>=0.8 && <1.1'
  free: '>=4.12 && <5.3'
  hashable: '>=1.2 && <1.5'
  monad-control: '>=1.0 && <1.1'
  mtl: '>=2.1 && <2.4'
  network-uri: '>=2.6 && <2.7'
  scientific: '>=0.3 && <0.4'
  sqlite-simple: '>=0.4 && <0.5'
  text: '>=1.0 && <2.2'
  time: '>=1.6 && <1.13'
  transformers-base: '>=0.4 && <0.5'
  unix: '>=2.0 && <2.9'
changelog: |
  # 0.5.3.0

  # Added features

   * Loosen some version bounds
   * `HasSqlEqualityCheck` instance for `Day`

  # 0.5.2.0

  # Bug fixes

   * Fix encoding for `UTCTime`

  # Addded features

   * `IN (SELECT ...)` syntax via `inQuery_`

  # 0.5.1.2

  ## Added features

   * Aeson 2.0 support

  # 0.5.1.1

  ## Added features

   * GHC 9.2 and 9.0 support

  ## Bug fixes

   * Support inserting default values for all columns (except with upsert)

  # 0.5.1.0

  ## Added features

   * `MonadBase` and `MonadBaseControl` instances for `SqliteM`

  # 0.5.0.0

  ## Interface changes

   * Removed instances for machine-dependent ambiguous integer types `Int` and `Word`

  ## Added features

   * Support for `in_` on row values
   * Upsert support using `HasInsertOnConflict`
   * Fix build on Android and OpenBSD

  ## Bug fixes

   * Fix emitting and detection of `DECIMAL` and `DOUBLE PRECISION` types
   * Fix `bitLength`, `charLength_`, and `octectLength_` by emulating with `CAST` and `LENGTH`
   * Fix `runInsertReturningList` for when the database column order and beam column order disagree.

  # 0.4.0.0

  # 0.3.2.0

  Add `Semigroup` instances to prepare for GHC 8.4 and Stackage nightly

  # 0.3.1.0

  Add `runBeamSqlite` and `runBeamSqliteDebug` functions

  # 0.3.0.0

  * Re-introduce backend parameter to `Database` class

  # 0.2.0.0

  First split of sqlite backend from main beam package
changelog-type: markdown
description: "# `beam-sqlite`: Beam backend for the SQLite embedded database\n\n`beam-sqlite`
  is a beam backend for\nthe [SQLite embedded database](https://sqlite.org/). \n\nSQLite
  is mostly standards compliant, but there are a few cases that beam-sqlite\ncannot
  handle. These cases may result in run-time errors. For more information,\nsee\n[the
  documentation](https://haskell-beam.github.io/beam/user-guide/backends/beam-sqlite/).\nDue
  to SQLite's embedded nature, there are currently no plans to get rid of\nthese.
  However, proposals and PRs to fix these corner cases are welcome, where\nappropriate.\n"
description-type: markdown
hash: 2894d2d2480f1aae2af577a42a28576f5a8e145f9eb8b1298fba42635c4fc59e
homepage: https://haskell-beam.github.io/beam/user-guide/backends/beam-sqlite/
latest: 0.5.3.0
license-name: MIT
maintainer: travis@athougies.net
synopsis: Beam driver for SQLite
test-bench-deps:
  base: '>=0'
  beam-core: '>=0'
  beam-migrate: '>=0'
  beam-sqlite: '>=0'
  sqlite-simple: '>=0'
  tasty: '>=0'
  tasty-expected-failure: '>=0'
  tasty-hunit: '>=0'
  text: '>=0'
  time: '>=0'
