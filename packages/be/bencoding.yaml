all-versions:
- 0.1.0.0
- 0.2.0.0
- 0.2.2.0
- 0.3.0.0
- 0.4.0.0
- 0.4.0.1
- 0.4.0.2
- 0.4.1.0
- 0.4.2.0
- 0.4.2.1
- 0.4.3.0
- 0.4.4.0
- 0.4.5.0
- 0.4.5.1
- 0.4.5.2
- 0.4.5.3
- 0.4.5.4
- 0.4.5.5
- 0.4.5.6
author: Sam Truzjan
basic-deps:
  attoparsec: '>=0.10'
  base: '>=4.9 && <5'
  bytestring: '>=0.10'
  deepseq: '>=1.3'
  ghc-prim: '>=0'
  integer-gmp: '>=0'
  mtl: '>=0'
  pretty: '>=0'
  text: '>=0.11'
changelog: |
  # 0.4.5.6

  - Fix build for GHC 9.10

  # 0.4.5.5

  - Fix build for GHC 9.6

  # 0.4.5.2

  - Fix build for GHC 8.8.1

  # 0.4.5.1

  - Fix benchmark build when dependency on AttoBencode is switched off

  # 0.4.5.0

  - Test against GHC 8.6. Make benchmark dependency on AttoBencode disableable

  # 0.4.4.0

  - Fix build for GHC 8.0-8.4. Derive Generic instances. Add Semigroup instance.

  # 0.4.3.0

  - Add lookAhead and match functions.

  # 0.4.2.1

  - Override default Monad(fail) method so it is possible to catch Get monad failures from pure code.

  # 0.4.2.0

  - Override default fixity for operators. Previously it has been impossible to mix bencode Get operators (`(<$>!)`, `(<$>?)`, `(<*>!)`, `(<*>?)`) with applicative operators (`(<$>)`, `(<*>)`).

  # 0.4.1.0

  - Expose parser and builder so it is possible to use parser incrementally.

  # 0.4.0.2

  - Minor fixes.

  # 0.4.0.1

  - Nothing changed.

  # 0.4.0.0

  - Faster dictionary conversion.

  # 0.3.0.0

  - Rename `BEncode` to `BValue` and `BEncodable` to `BEncode`.

  # 0.2.2.0

  - Arbitrary length integers. (by specification)

  # 0.2.0.0

  - Added default decoders/encoders using GHC Generics.

  # 0.1.0.0

  - Initial version.
changelog-type: markdown
description: |
  ### Synopsis

  [BEncode][bencode] is [JSON][json-ref]-like format used in bittorrent
  protocol but might be used anywhere else.

  ### Description

  This package implements fast seamless encoding/decoding to/from
  bencode format for many native datatypes. To achieve
  [more performance][cmp] we use
  [bytestring builders][bytestring-builder] and hand optimized
  [attoparsec][attoparsec] parser so this library is considered as
  replacement for BEncode and AttoBencode packages.

  #### Format

  Bencode is pretty similar to JSON: it has dictionaries(JSON objects),
  lists(JSON arrays), strings and integers. However bencode has a few
  advantages:

  * Compactness: no spaces in between any values â€” nor lists nor dicts
    nor anywhere else.
  * Dictionaries always sorted lexicographically by the keys. This allow
    us to test data on equality without decoding from raw bytestring.
    Moreover this allow to hash encoded data (this property is heavily
    used by core bittorrent protocol).
  * All strings prefixed with its length. This simplifies and speed up
    string parsing.

  Hovewer there are some disadvantages comparing with JSON:

  * Bencode is certainly less human readable.
  * Bencode is rarely used, except bittorrent protocol of course.

  ### Documentation

  For documentation see package [hackage][hackage] page.

  ### Build Status

  [![build](https://github.com/sergv/bencoding/actions/workflows/ci.yaml/badge.svg)](https://github.com/sergv/bencoding/actions/workflows/ci.yaml)

  ### Maintainer <serg.foo@gmail.com>

  Feel free to report bugs and suggestions via [issue tracker][issues]
  or the mail.


  [cmp]: http://htmlpreview.github.com/?https://raw.github.com/wiki/cobit/bencoding/comparison.html

  [bencode]: https://wiki.theory.org/BitTorrentSpecification#Bencoding
  [json-ref]: http://www.json.org/
  [attoparsec]: http://hackage.haskell.org/package/attoparsec-0.10.4.0
  [bytestring-builder]: http://hackage.haskell.org/packages/archive/bytestring/0.10.2.0/doc/html/Data-ByteString-Builder.html

  [hackage]: http://hackage.haskell.org/package/bencoding
  [issues]: https://github.com/sergv/bencoding/issues
description-type: markdown
hash: ceda320189ef3ee259654f08d26d8a1f103134ac60cb0d6aa7073e67015471a7
homepage: https://github.com/sergv/bencoding
latest: 0.4.5.6
license-name: BSD-3-Clause
maintainer: Sergey Vinokurov <serg.foo@gmail.com>
synopsis: A library for encoding and decoding of BEncode data.
test-bench-deps:
  QuickCheck: '>=0'
  attoparsec: '>=0.10'
  base: '>=4 && <5'
  bencode: '>=0.5'
  bencoding: '>=0'
  bytestring: '>=0.10'
  containers: '>=0.4'
  criterion: '>=0'
  deepseq: '>=0'
  ghc-prim: '>=0'
  hspec: '>=0'
