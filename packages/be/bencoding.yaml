homepage: https://github.com/sergv/bencoding
changelog-type: text
hash: af6b33a8e5944f3f2ba702b09178bdc8f092ee4ff35f1deb70a36a53dea357eb
test-bench-deps:
  bytestring: '>=0.10'
  base: ==4.*
  hspec: -any
  criterion: -any
  bencoding: -any
  containers: '>=0.4'
  bencode: '>=0.5'
  ghc-prim: -any
  attoparsec: '>=0.10'
  deepseq: -any
  QuickCheck: -any
maintainer: Sergey Vinokurov <serg.foo@gmail.com>
synopsis: A library for encoding and decoding of BEncode data.
changelog: "2019-10-27  Sergey Vinokurov  <serg.foo@gmail.com>\n\n\t* 0.4.5.2: Fix
  build for 8.8.1\n\n2019-01-06  Sergey Vinokurov  <serg.foo@gmail.com>\n\n\t* 0.4.5.1:
  Fix benchmark build when dependency on AttoBencode is switched off\n\t* 0.4.5.0:
  Test against GHC 8.6. Make benchmark dependency on AttoBencode disablable\n\n2018-09-18
  \ Sergey Vinokurov  <serg.foo@gmail.com>\n\n\t* 0.4.4.0: Fix build for GHC 8.0-8.4.
  Derive Generic instances. Add Semigroup instance.\n\n2013-12-19  Sam Truzjan  <pxqr.sta@gmail.com>\n\n\t*
  0.4.3.0: Add lookAhead and match functions.\n\n2013-12-16  Sam Truzjan  <pxqr.sta@gmail.com>\n\n\t*
  0.4.2.1: Override default Monad(fail) method so it is possible\n\tto catch Get monad
  failures from pure code.\n\n2013-12-14  Sam Truzjan  <pxqr.sta@gmail.com>\n\n\t*
  0.4.2.0: Override default fixity for operators: previously it\n\thas been impossible
  to mix bencode Get operators ((<$>!), (<$>?),\n\t(<*>!), (<*>?)) with applicative
  operators ((<$>), (<*>)).\n\n2013-12-08  Sam Truzjan  <pxqr.sta@gmail.com>\n\n\t*
  0.4.1.0: Expose parser and builder so it is possible to use\n\tparser incrementally.\n\n2013-10-01
  \ Sam Truzjan  <pxqr.sta@gmail.com>\n\n\t* 0.4.0.2: Minor fixes.\n\n2013-10-01  Sam
  Truzjan  <pxqr.sta@gmail.com>\n\n\t* 0.4.0.1: Nothing changed.\n\n2013-10-01  Sam
  Truzjan  <pxqr.sta@gmail.com>\n\n\t* 0.4.0.0: Faster dictionary conversion.\n\n2013-09-28
  \ Sam Truzjan  <pxqr.sta@gmail.com>\n\n\t* 0.3.0.0: Rename BEncode to BValue and
  BEncodable to BEncode.\n\n2013-09-28  Sam Truzjan  <pxqr.sta@gmail.com>\n\n\t* 0.2.2.0:
  Arbitrary length integers. (by specification)\n\n2013-08-26  Sam Truzjan  <pxqr.sta@gmail.com>\n\n\t*
  0.2.0.0: Added default decoders/encoders using GHC Generics.\n\n2013-06-09  Sam
  Truzjan  <pxqr.sta@gmail.com>\n\n\t* 0.1.0.0: Initial version.\n"
basic-deps:
  bytestring: '>=0.10'
  base: '>=4.4 && <5'
  text: '>=0.11'
  integer-gmp: -any
  ghc-prim: -any
  mtl: -any
  attoparsec: '>=0.10'
  deepseq: '>=1.3'
  pretty: -any
all-versions:
- 0.1.0.0
- 0.2.0.0
- 0.2.2.0
- 0.3.0.0
- 0.4.0.0
- 0.4.0.1
- 0.4.0.2
- 0.4.1.0
- 0.4.2.0
- 0.4.2.1
- 0.4.3.0
- 0.4.4.0
- 0.4.5.0
- 0.4.5.1
- 0.4.5.2
- 0.4.5.3
author: Sam Truzjan
latest: 0.4.5.3
description-type: markdown
description: |
  ### Synopsis

  [BEncode][bencode] is [JSON][json-ref]-like format used in bittorrent
  protocol but might be used anywhere else.

  ### Description

  This package implements fast seamless encoding/decoding to/from
  bencode format for many native datatypes. To achieve
  [more performance][cmp] we use
  [bytestring builders][bytestring-builder] and hand optimized
  [attoparsec][attoparsec] parser so this library is considered as
  replacement for BEncode and AttoBencode packages.

  #### Format

  Bencode is pretty similar to JSON: it has dictionaries(JSON objects),
  lists(JSON arrays), strings and integers. However bencode has a few
  advantages:

  * Compactness: no spaces in between any values â€” nor lists nor dicts
    nor anywhere else.
  * Dictionaries always sorted lexicographically by the keys. This allow
    us to test data on equality without decoding from raw bytestring.
    Moreover this allow to hash encoded data (this property is heavily
    used by core bittorrent protocol).
  * All strings prefixed with its length. This simplifies and speed up
    string parsing.

  Hovewer there are some disadvantages comparing with JSON:

  * Bencode is certainly less human readable.
  * Bencode is rarely used, except bittorrent protocol of course.

  ### Documentation

  For documentation see package [hackage][hackage] page.

  ### Build Status

  [![Build Status][travis-img]][travis-log]

  ### Maintainer <serg.foo@gmail.com>

  Feel free to report bugs and suggestions via [issue tracker][issues]
  or the mail.


  [cmp]: http://htmlpreview.github.com/?https://raw.github.com/wiki/cobit/bencoding/comparison.html

  [bencode]: https://wiki.theory.org/BitTorrentSpecification#Bencoding
  [json-ref]: http://www.json.org/
  [attoparsec]: http://hackage.haskell.org/package/attoparsec-0.10.4.0
  [bytestring-builder]: http://hackage.haskell.org/packages/archive/bytestring/0.10.2.0/doc/html/Data-ByteString-Builder.html

  [travis-img]: https://travis-ci.org/sergv/bencoding.svg?branch=master
  [travis-log]: https://travis-ci.org/sergv/bencoding

  [hackage]: http://hackage.haskell.org/package/bencoding
  [issues]: https://github.com/sergv/bencoding/issues
license-name: BSD-3-Clause
