homepage: https://github.com/hackage-trustees/hackage-cli
changelog-type: markdown
hash: 69df60ec285aa59827851c9c85d0a6a2b5c582dc8ff0020f03c8af335344f4e9
test-bench-deps:
  bytestring: -any
  Cabal: -any
  base: -any
  tasty-golden: ^>=2.3.2
  cabal-revisions: -any
  filepath: ^>=1.4.0.0
  tasty: '>=1.0 && <1.6'
maintainer: Andreas Abel
synopsis: CLI tool for Hackage
changelog: |
  # Changelog for hackage-cli

  ## 0.1.0.1

  _Andreas Abel, 2023-02-20_

  - Fix for `Cabal-3.9.0.0`

  Builds with `Cabal 3.4 - 3.9` and `GHC 8.2 - 9.6`.

  ## 0.1.0.0

  _Andreas Abel, 2023-01-15_

  - Skip errors when running `add-bound` on several files.
    (PR [#42](https://github.com/hackage-trustees/hackage-cli/pull/42))

  - If no version range is given for a dependency, interpret it as `-any` rather than _none_ (`<0`).
    (PR [#48](https://github.com/hackage-trustees/hackage-cli/pull/48))

  Builds with `Cabal 3.4 - 3.8` and `GHC 8.2 - 9.4`.


  ## 0.0.3.6

  _Andreas Abel, 2022-04-30_

  First release to hackage.
  Builds with `Cabal 3.4 - 3.6` and `GHC 8.2 - 9.2`.

  # Pre-release versions (February 2022)

  ## 0.0.3.4

  Builds with `Cabal-3.4` and `GHC 9.0`.

  ## 0.0.3.2

  Builds with `Cabal-3.2` and `GHC 8.10`.

  ## 0.0.3.0

  Builds with `Cabal-3.0` and `GHC 8.8`.

  ## 0.0.2.4

  Builds with `Cabal-2.4` and `GHC 8.6`.
basic-deps:
  microlens-th: '>=0.4.1.3 && <0.5'
  bytestring: -any
  process-extras: ^>=0.7.4
  Cabal: -any
  base: -any
  time: '>=1.5.0.1 && <1.13'
  unordered-containers: ^>=0.2.7
  text: '>=1.2 && <2.2'
  cabal-revisions: -any
  stringsearch: ^>=0.3.6
  filepath: '>=1.4.0.0 && <2'
  semigroups: '>=0.18.3 && <0.21'
  http-io-streams: ^>=0.1.0.0
  containers: -any
  io-streams: ^>=1.5.0.1
  tar: '>=0.5 && <1'
  zlib: ^>=0.6.1
  mtl: -any
  optparse-applicative: '>=0.14 && <0.19'
  deepseq: ^>=1.4.0.0 || ^>=1.5.0.0
  tagsoup: ^>=0.14
  netrc: ^>=0.2.0.0
  microlens-mtl: '>=0.1.11.1 && <0.3'
  microlens: '>=0.4.8.3 && <4.13'
  aeson: '>=1.2.4.0 && <2.3'
  directory: ^>=1.2.0.1 || ^>=1.3.0.0
all-versions:
- 0.0.3.6
- 0.1.0.0
- 0.1.0.1
author: Herbert Valerio Riedel, Andreas Abel
latest: 0.1.0.1
description-type: markdown
description: |
  [![Hackage version](https://img.shields.io/hackage/v/hackage-cli.svg?label=Hackage&color=informational)](http://hackage.haskell.org/package/hackage-cli)
  [![Stackage LTS version](https://www.stackage.org/package/hackage-cli/badge/lts?label=Stackage)](https://www.stackage.org/package/hackage-cli)
  [![hackage-cli on Stackage Nightly](https://stackage.org/package/hackage-cli/badge/nightly)](https://stackage.org/nightly/package/hackage-cli)
  [![Cabal build](https://github.com/hackage-trustees/hackage-cli/workflows/Haskell-CI/badge.svg)](https://github.com/hackage-trustees/hackage-cli/actions)
  [![Stack build](https://github.com/hackage-trustees/hackage-cli/workflows/Build%20with%20Stack/badge.svg)](https://github.com/hackage-trustees/hackage-cli/actions)

  # `hackage-cli`

  A command-line tool to manage package metadata
  [revisions](https://github.com/haskell-infra/hackage-trustees/blob/master/revisions-information.md)
  on Hackage.

  Caveat: this is a developer tool and work-in-progress.
  Check known bugs at the [issue tracker](https://github.com/hackage-trustees/hackage-cli/issues).

  ## Command-line reference

  ```
  hackage-cli - CLI tool for Hackage

  Usage: hackage-cli [--version] [--verbose] [--hostname HOSTNAME] COMMAND

  Available options:
    -h,--help                Show this help text
    --version                output version information and exit
    --verbose                enable verbose output
    --hostname HOSTNAME      Hackage hostname (default: "hackage.haskell.org")

  Available commands:
    pull-cabal               download .cabal files for a package
    push-cabal               upload revised .cabal files
    sync-cabal               upadate/sync local .cabal file with latest revision
                             on Hackage
    push-candidate           upload package candidate(s)
    list-versions            list versions for a package
    check-revision           validate revision
    index-sha256sum          generate sha256sum-format file
    add-bound                add bound to the library section of a package. .cabal
                             file is edited in place

  Each command has a sub-`--help` text. Hackage credentials are expected to be
  stored in an `${HOME}/.netrc`-entry for the respective Hackage hostname. E.g.
  "machine hackage.haskell.org login MyUserName password TrustNo1". All
  interactions with Hackage occur TLS-encrypted via the HTTPS protocol.
  ```

  (Section created 2015-04-26, last updated 2018-03-21.)

  ## How to: bulk revision

  Suppose that all versions starting with `1.2.3` of the package `pkg-x`
  on hackage need the additional bound `< 4.5.6` on their dependency
  `pkg-y`, typically to prevent compilation attempts with `pkg-y-4.5.6`
  and up that will fail.

  With `hackage-cli` this can be done in a typical workflow that consists of

    1. downloading the `.cabal` files,
    2. adding bounds (with `hackage-cli`), or making other revisions (manually),
    3. re-uploading the modified `.cabal` files.

  We walk through a typical workflow:

  1. Download the relevant `pkg-x.cabal` files to a new temporary directory:
     ```
     $ cd $(mktemp)
     $ hackage-cli pull-cabal pkg-x '>= 1.2.3'
     ```

  2. Adding bound `pkg-y < 4.5.6` to all of them:
     ```
     $ hackage-cli add-bound pkg-y '< 4.5.6' *.cabal
     ```
     This will write a new line
     ```
       build-depends: pkg-y < 4.5.6
     ```
     to the `library` section of each of the `.cabal` files.
     If files without a `library` section are encountered (as in ancient `.cabal` formats),
     they will be skipped, but the final exitcode of `hackage-cli` will be 1 (error).
     If a file contains more than one `library` section, `hackage-cli` will take the first
     such section.  (This might not produce the intended result, so double-checking is advised.)

     If this bound does not further constrain the existing version range
     for `pkg-y`, it will not be added unless `--force` is used.
     (E.g., one of the cabal files could already have a bound `pkg-y <
     3.0.0` or so---this file will remain unchanged.)

     You can of course add more bounds using `add-bound` or make further
     manual changes to `.cabal` files.

  3. Review the changes via a trial upload:
     ```
     $ hackage-cli push-cabal --incr-rev *.cabal
     ```
     (The flag `--incr-rev` will increment the `x-revision` field by `1` during the upload.
     Existing revisions cannot be overwritten.)

     During (trial) upload you will see for each `.cabal` file a summary of what will be changed.
     Hackage might reject your revision, if it does not match the criteria
     of what it thinks is
     [legal](https://github.com/haskell-infra/hackage-trustees/blob/master/revisions-information.md).
     Note that the legality check of the Hackage server is neither
     complete nor sound, so some legal revisions might be rejected, and some illegal ones accepted.
     You bear the responsibility for correct revisions yourself.

  4. Upload!
     ```
     $ hackage-cli push-cabal --incr-rev --publish *.cabal
     ```
     Adding the flag `--publish` will actually commit the revisions to Hackage.

  (Section created 2022-02-21.)

  ## License

  - Licensed under GPL-3.

  - (C) 2015 Herbert Valerio Riedel.
  - (C) 2016-2019 Herbert Valerio Riedel and Oleg Grenrus.
  - (C) 2021-2022 Andreas Abel.

  - Further contributors: Simon Jakobi, Kevin Buhr.

  (Section created 2022-02-21.)
license-name: GPL-3.0-or-later
