all-versions:
- '0.1'
- 0.1.1
- 0.2.0
- 0.2.1
author: Stephen Paul Weber <singpolyma@singpolyma.net>
basic-deps:
  base: '>=4 && <5'
  bytestring: '>=0'
  containers: '>=0'
  errors: '>=1.3.0'
  haskell-src: '>=0'
  text: '>=0'
  text-format: '>=0'
changelog: ''
changelog-type: ''
description: |
  Autogeneration of bindings for creating BlackBerry Cascades apps
  with Haskell back ends.

  Run as:

  > ./haskades HaskadesBinding.hs haskades_run.cpp haskades_run.h < Types.hs

  Where Types.hs is a Haskell file containing a a sum type declaration
  named 'SignalToUI' and another named 'SignalFromUI'  which fully
  specify the communication possible between the UI layer (which you
  write in QML) and the Haskell backend.  QML code can access these
  signals on the 'app' context object.  Haskell code can emit
  signals by using the 'emit' function exported from the generated
  HaskadesBinding.  The 'emit' call is threadsafe.

  Text, Lazy Text, and String all end up as QString so that QML can
  work with them properly, and vice-versa.  UTCTime becomes QDateTime.
  Int, Double, and () are passed through fairly directly.  Other types
  may have support added as there is need.

  A simple example lives at <https://github.com/singpolyma/haskades-sample>
description-type: text
hash: 081850384972dd2fafb8be724876ef80f870e7572a0e9b18706a5e3101297f98
homepage: http://github.com/singpolyma/haskades
latest: 0.2.1
license-name: LicenseRef-OtherLicense
maintainer: Stephen Paul Weber <singpolyma@singpolyma.net>
synopsis: Utility to generate bindings for BlackBerry Cascades
test-bench-deps: {}
