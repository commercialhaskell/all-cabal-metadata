all-versions:
- 0.4.0
- 0.4.1
- 0.4.2
- 0.4.3
- 0.4.4
- 1.0.0
- 1.0.1
- 1.1.0
- 1.1.1
- 1.2.0
- 1.2.1
- 1.2.2
- 1.3.0
author: Laurent P. René de Cotret
basic-deps:
  JuicyPixels: '>=3 && <4'
  JuicyPixels-extra: '>0.3 && <1'
  base: '>=4.8 && <5'
  binary: '>=0.5 && <1'
  bytestring: '>=0.9 && <1'
  hakyll: '>4 && <5'
  vector: '>=0.12 && <0.14'
changelog: |
  # Change log

  ## Release 1.3.0

  * Fixed handling of EXIF orientation of metadata, which was previously thought to be fixed (#11).
    The EXIF orientation tag, if it exists, will now persist through all compilers provided
    by `hakyll-images`.
  * Removed the `compressJpg` function, which was only used for testing. `compressJpgCompiler` is still here of course.
  * Refactoring of the test suite, which led to internals being exposed in `Hakyll.Images.Internal`.

  ## Release 1.2.2

  * Minor documentation improvements

  ## Release 1.2.1

  * Fixed an issue where compressing certain JPEGs would also rotate them, due to metadata being stripped (#11).

  ## Release 1.2.0

  * Made `JpgQuality` an opaque constructor, so that we can normalize the input to the range [0, 100].

  ## Release 1.1.1

  * Updated the test suite to support `Hakyll.Core.Runtime.RunMode` (added in hakyll 4.15) (#10).

  ## Release 1.1.0

  * Added support for GIFs (#9).
  * Releases are now automatically uploaded via Github Actions

  ## Release 1.0.1

  * The module `Hakyll.Images.Metadata` is now exposed (#5).

  ## Release 1.0.0

  * Updated dependency bounds.

  ## Release 0.4.4

  * Added the `imageMetadata` compiler, to extract metadata from images.

  ## Release 0.4.3

  * hakyll-images now handles file extensions in a case-insensitive manner (extension of PR #4).

  ## Release 0.4.2

  * Added `ensureFitCompiler`, a Hakyll compiler much like `scaleImageCompiler` but that will only scale images down.

  ## Release 0.4.1

  * Added some regression tests
  * Simplified type architecture (no surface changes)

  ## Release 0.4

  * Fixed an issue from version 0.3.1 where some type instances were missing to write images to disk.

  ## Release 0.3.1

  * Change underlying image type to carry image format around.

  ## Release 0.3

  * Refactored the internal structure to allow for composition of compilers

  ## Release 0.1.1

  * Exposed `resizeImageCompiler` and `scaleImageCompiler` to the base `Hakyll.Images` module

  ## Release 0.1.0

  * added `resizeImageCompiler` to resize images to a specific shape;
  * added `scaleImageCompiler` to scale images while keeping aspect ratio.

  ## Release 0.0.1

  * Added compressJpgCompiler to compress JPEGs.
changelog-type: markdown
description: "# hakyll-images\n\n[![Hackage version](https://img.shields.io/hackage/v/hakyll-images.svg)](http://hackage.haskell.org/package/hakyll-images)\n\n##
  A Haskell package containing utilities to deal with images in the context of Hakyll\n\n[Hakyll](https://hackage.haskell.org/package/hakyll)
  is a static website compiler library. As one of the benefits of static websites
  is their small size, this repository aims at providing utilities to work with images
  in the context of Hakyll. Example usage includes:\n\n* Re-encoding Jpeg images at
  a lower quality to make them much smaller;\n* Re-sizing images to fit within a certain
  shape;\n\n## Usage\n\n`hakyll-images` is meant to be integrated within a Hakyll
  program. Here are some examples within a Hakyll program:\n\n```haskell\nimport Hakyll\nimport
  Hakyll.Images        ( loadImage\n                            , compressJpgCompiler\n
  \                           , resizeImageCompiler\n                            ,
  scaleImageCompiler\n                            )\n\n(...)\n\nhakyll $ do\n\n    --
  Compress all source Jpegs to a Jpeg quality of 50 (maximum of 100)\n    match \"images/**.jpg\"
  $ do\n        route idRoute\n        compile $ loadImage \n            >>= compressJpgCompiler
  50\n\n    -- Resize all profile pictures to 64x48\n    -- Aspect ratio might be
  mangled\n    match \"profiles/**.jpg\" $ do\n        route idRoute\n        compile
  $ loadImage \n            >>= resizeImageCompiler 64 48\n            >>= compressJpgCompiler
  50\n\n    -- Scale images to fit within a 600x400 box\n    -- Aspect ratio will
  be preserved\n    match \"images/**.png\" $ do\n        route idRoute\n        compile
  $ loadImage\n            >>= scaleImageCompiler 600 400\n\n    (...)\n```\n\nTake
  a look at the [documentation](hackage.haskell.org/package/hakyll-images) for more
  usage examples.\n\nIf you would like a feature added, consider creating [an issue
  on Github](https://github.com/LaurentRDC/hakyll-images/issues/)\n\n## Installation\n\n###
  From Hackage\n\n`hakyll-images` is available on [Hackage](https://hackage.haskell.org).
  Using the [`cabal-install`](https://www.haskell.org/cabal/) tool:\n\n```bash\ncabal
  update\ncabal install hakyll-images\n```\n\n### From source\n\nBuilding from source
  can be done using [`stack`](https://docs.haskellstack.org/en/stable/README/) or
  [`cabal`](https://www.haskell.org/cabal/):\n\n```bash\ngit clone github.com/LaurentRDC/hakyll-images.git\ncd
  hakyll-images\nstack install # Alternatively, `cabal install`\n```\n\n## Documentation\n\nThe
  documentation for the latest release is available on the [Hackage page](http://hackage.haskell.org/package/hakyll-images/).
  \n\n## Support  Issues / Feature requests\n\nAll support requests (e.g. installation
  issues, unclear documentation, bugs, etc.) should of [filed on Github as an issue](https://github.com/LaurentRDC/hakyll-images/issues/)\n\n##
  License\n\nThis package is made available under the BSD 3-clause license. For more
  details, see the [LICENSE.md](https://github.com/LaurentRDC/hakyll-images/blob/master/LICENSE.md)\n"
description-type: markdown
hash: e4fc8729347df13c763253e68418f9c44d27e506fc5a69b12b749f3b89c6ba58
homepage: https://github.com/LaurentRDC/hakyll-images#readme
latest: 1.3.0
license-name: BSD-3-Clause
maintainer: Laurent P. René de Cotret
synopsis: Hakyll utilities to work with images
test-bench-deps:
  HUnit-approx: '>=1 && <2'
  JuicyPixels: '>=3 && <4'
  JuicyPixels-extra: '>0.3 && <1'
  base: '>=4.8 && <5'
  binary: '>=0.5 && <1'
  bytestring: '>=0.9 && <1'
  containers: '>=0'
  directory: '>=1 && <2'
  filepath: '>=1 && <2'
  hakyll: '>=4 && <5'
  hakyll-images: '>=0'
  tasty: '>=0.11 && <2'
  tasty-hunit: '>=0.9 && <1'
  vector: '>=0.12'
