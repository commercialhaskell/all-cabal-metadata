all-versions:
- 0.45.0
- 0.45.1
- 0.45.2
author: Xiaoyu
basic-deps:
  Decimal: '>=0.5.2 && <0.6'
  Hastructure: '>=0'
  MissingH: '>=1.6.0 && <1.7'
  aeson: '>=2.2.3 && <2.3'
  aeson-pretty: '>=0.8.10 && <0.9'
  attoparsec: '>=0.14.4 && <0.15'
  attoparsec-aeson: '>=2.2.2 && <2.3'
  base: '>=4.18.0 && <4.20'
  base-compat: '>=0.13.0 && <0.15'
  bytestring: '>=0.12.1 && <0.13'
  containers: '>=0.6.8 && <0.7'
  deepseq: '>=1.5.1 && <1.6'
  dlist: '>=1.0 && <1.1'
  exceptions: '>=0.10.7 && <0.11'
  generic-lens: '>=2.2.2 && <2.3'
  hashable: '>=1.4.7 && <1.5'
  http-types: '>=0.12.4 && <0.13'
  ieee754: '>=0.8.0 && <0.9'
  lens: '>=5.2.3 && <5.3.4'
  math-functions: '>=0.3.4 && <0.4'
  monad-loops: '>=0.4.3 && <0.5'
  mtl: '>=2.3.1 && <2.4'
  numeric-limits: '>=0.1.0 && <0.2'
  openapi3: '>=3.2.4 && <3.3'
  parallel: '>=3.2.2 && <3.3'
  regex-base: '>=0.94.0 && <0.95'
  regex-pcre-builtin: '>=0.95.2 && <0.96'
  regex-tdfa: '>=1.3.2 && <1.4'
  scientific: '>=0.3.8 && <0.4'
  servant: '>=0.20.2 && <0.21'
  servant-openapi3: '>=2.0.1 && <2.1'
  servant-server: '>=0.20.2 && <0.21'
  split: '>=0.2.5 && <0.3'
  string-conversions: '>=0.4.0 && <0.5'
  swagger2: '>=2.8.9 && <2.9'
  tabular: '>=0.2.2 && <0.3'
  tasty: '>=1.5.3 && <1.6'
  tasty-golden: '>=2.3.5 && <2.4'
  tasty-hspec: '>=1.2.0 && <1.3'
  tasty-hunit: '>=0.10.2 && <0.11'
  template-haskell: '>=2.20.0 && <2.22'
  text: '>=2.1.1 && <2.2'
  time: '>=1.12.2 && <1.13'
  vector: '>=0.13.2 && <0.14'
  wai: '>=3.2.4 && <3.3'
  wai-cors: '>=0.2.7 && <0.3'
  warp: '>=3.4.7 && <3.5'
  yaml: '>=0.11.11 && <0.12'
changelog: "# Changelog for Hastructure\n\n<!-- towncrier release notes start -->\n\n##
  0.46.4\n### 2025-06-10\n* ENHANCE: add error message when calculation IRR for bond
  with non cashflow\n* ENHANCE: add `tweak`: `Stress Prepayment` \n* ENHANCE: add
  `stop`: `Bond Principal Loss` `Bond Interest Loss`\n\n\n## 0.46.2\n### 2025-06-08\n*
  ENHANCE: add `tweak`: `Balance Split` and `stop`: `Bond Met Target IRR`\n\n## 0.46.1\n###
  2025-06-07\n* ENHANCE: add 2 more `leaseEndType` assumptions: `Earlier` `Later`
  which will end the lease projection base on two input `End date` and `extention
  times`.\n* ENHANCE: expose `new bond rate type` in `trigger effects`. Now bond rate
  type can be changed during the projection.\n* REFACTOR: with new refactor `root
  finder` endpoint and signature. In the long term, the refactor of signature lays
  down fundation for `deal structuring` domain, now it would be easy to implement
  all kinds of structuring features.\n\n## 0.45.7\n### 2025-05-26\n* ENHANCE: add
  `BaseByVec` for vector-based rental change\n\n\n## 0.45.5\n### 2025-05-20\n* NEW:
  `MaxSpread` feature for structuring stage: get max possible bond coupon rate !\n*
  ENHANCE: Transfer from `stack` to `cabal` as build tool\n* ENHANCE: Apply `DList`
  to trigger log\n* ENHANCE: Enable `Double Decline Balance` in `FixedAsset`\n* REFACTOR:
  Refactor `Leasing` asset type\n  * Add `Default` assumption\n  * Add `Period-based`
  rental ,in addition to `Day-based` rental calculation\n\n\n## 0.45.2\n### 2025-04-01\n*
  ENHANCE: Performance optimization by replace `List` with `DList`.\n* ENHANCE: In
  `inspection` ,expose `IsOutstanding` `HasPassedMaturity` in `Pre`\n\n## 0.45.1\n###
  2025-03-25\n* FIX: in `Pricing/IRR`, error when holding position is too small\n*
  ENHANCE: engine will auto patch `interest start date` for bonds if it is not modeled.
  In `PreClosing` status, engine will use `closing date` as bond interest begin date
  ; In `Non-PreClosing` status, it defaults to use last waterfall distribution date
  as bond interest begin date.\n\n## 0.45.0\n### 2025-03-21\n* BREAK: remove unused
  `DealDates` : `FixInterval`, `CustomDates` and `PatternInterval`. Since all these
  can be replace by new `GenericDates` in type `DateDesp`\n* ENHANCE: now bond with
  `No last interest accure day` will begin accrue interest from `closing date` if
  the deal is in `PreClosing` mode, while the bond will use `last bond day` otherwise.\n*
  FIX: `IsPaidOff` now can be queried in inspection formula\n\n\n## 0.44.0\n### 2025-03-11\n*
  BREAK: Add `PAC` `PAC Anchor` to `BondGroup`, now `BondGroup` is `Map String L.Bond
  (Maybe PrinType)`\n* NEW: add formula `bondTargetBalance` to query target amortized
  balance\n* ENHANCE: expose `PAC Anchor` which is same to `PAC` except that the balance
  schedule will be ineffective if `Anchor Bonds` are paid off.\n\n\n## 0.43.0\n###
  2025-03-08\n* NEW: new interest type `BalRef` which bond will accrue its interest
  by a `Formula`, which is being used to model `IO` bond\n* ENHANCE: in `FirstLoss`
  ,the stress will be applied to `revolving assumption` as well\n* FIX: add `interest
  accrued` in bond pricing result\n* BREAK: In waterfall ,the action `CalcBondInt`
  now only accepts a list of bond names\n* BREAK: asset modeling and analytics `lease`
  has been refactored\n\n\n## 0.42.10\n### 2025-02-15\n* NEW: expose new bond pricing
  : calculate IRR for `holding` a bond, `hold and sell` a bond, or `buy a bond`.\n*
  ENHANCE: lift `Pricing` to expose error message.\n* ENHANCE: change compare symbol
  in response from `GT` to `>` and others as well.\n* ENHANCE: auto patch `bond paid
  periods` and `pool collection periods` for `preClosing` deal.\n\n\n## 0.42.8\n###
  2025-02-13\n* FIX: Enable `byTerm` assumption on `Installment`\n* FIX: cap the default
  rate vector with 100% geneated by `root.finder`\n* NEW: add `PeriodBased` rate curve
  or balance curve in `Pre`, i.e. easy to build default rate trigger in structuring
  stage\n\n## 0.42.4\n### 2025-02-06\n* NEW: `FirstLoss` as new endpoint, which will
  stress on `Default` assumption till 0.01 loss on input tranche.\n* NEW: New prepayment
  /default assumption via `byTerm`, which vector curves are being applied via term
  of the assets.\n\n\n## 0.42.3\n### 2025-02-04\n* NEW: `Multi-thread` on pool cashflow
  projection\n* NEW: Expose `convexity` on bond/asset\n* NEW: Add new prepayment assumption
  `PSA` for Monthly mortgage\n* NEW: Add new prepayment/default vector assumption
  based on asset origin term\n\n## 0.42.1\n### 2025-02-02\n* NEW: add custom fee flow
  by `BondPaidPeriod` `PoolCollectedPeriod` index\n\n\n## 0.42.0\n### 2025-02-01\n*
  ENHANCE: refactor `calcPmt` to boost 15x performance for mortgage cashflow projection.
  \n* NEW: add `ScheduleByIndex` for bonds\n* FIX: `fundWith` shall increase the bond
  balance\n* ENHANCE: refactor Z-spread calc logic with numeric.root.finder\n\n\n##
  0.41.1\n### 2025-01-11\n* NEW: `Multi Interest Bond` which used to model in bond
  with `step up` feature ( sub ordinated interest) in European \n* NEW: new assumption
  ,which used to funding existing bond.\n* NEW: new query `totalFunding` for bond,which
  records all funding amount of bond.\n* NEW: new query `AmountRequiredForIRR` for
  bond,which return the amount to be paid out make bond met the target IRR.\n* NEW:
  in `Rate Swap` , the notional can be set by `Formula`\n* ENHANCE: when account is
  being used as a source for `support`, it has option to book ledger with both `credit`
  and `debit` direction.\n* FIX: `payPrinBySeq` was not paying out principal.\n\n\n##
  0.40.13\n### 2024-12-17\n* NEW: new formula `totalFunded` for bond with extra funding
  amount\n* NEW: new deal run assumption `FundBond`, which records a time series funding
  amount for a single bond.\n* ENHANCE: When booking account from `support` action,
  now user can book on `Credit` or `Debit` side\n* FIX: `payPrinBySeq` was not working\n\n\n\n##
  0.40.9\n### 2024-12-11\n* ENHANCE:  Ensure `limit` always return positive ,otherwise
  engine will throw error\n* NEW: add new action  `changeStatus` in waterfall, with
  optional `Pre` as condition to trigger the status change\n\n\n## 0.40.6\n### 2024-12-06
  \n* NEW: new formula `ledgerBalanceBy`, which return either `Credit` or `Debit`
  balance of a ledger\n* FIX: step-up coupon bond which has a floater index will increase
  forever\n* ENHANCE: refactor on `PDL` book type.\n\n\n## 0.40.1\n### 2024-11-05\n*
  NEW: break changes on API ,now the engine is able to throw out error message instead
  of just hanging.\n\n\n## 0.31.0\n### 2024-11-05\n* NEW: new Call options assumption
  ,which specifies `dates` to be tested\n* ENHANCE: transform financial report to
  a `Tree` from a `Table`\n\n## 0.30.5\n### 2024-11-02\n* NEW: Expose bond factor
  formula for single bond\n* FIX: Enable balanceSheet support for multiple pools\n*
  FIX: Include logs from clean up waterfall\n* FIX: Include logs from trigger/actions\n*
  ENHANCE: query borrower number by Pool Id\n* ENHANCE: query current pool balance
  by Pool Id\n\n\n## 0.30.3\n### 2024-10-20\n* NEW: Expose combo sensitivity endpoint,
  \n* NEW: Expose single clear ledger function\n* NEW: Expose `writeoffBySeq` which
  write a list of bonds by sequence.\n* NEW: Add new assumption curve with padding
  last value to rest\n* NEW: Expose extra Stress on ppy/def curve, use can impose
  time-series based stress on prepayment and default.\n* NEW: Expose `transferMultiple`,
  with one action transfer multiple account to single account\n* ENHANCE: Expose pricing
  for bond groups\n* ENHANCE: Instead of liquidating all pools but users now have
  the option to select pool to liquidate\n* FIX: Revolve buy when building balance\n*
  FIX: avoid duplicate run waterfall in call\n\n\n## 0.28.21\n### 2024-8-25\n* ENHANCE:
  Expose pricing function with options of `include` or `not include` accrued interest.\n*
  NEW: Ballon Mortgage\n* NEW: Expose Assumption: defaultAtEnd with rates\n* NEW:
  Expose revolving buy asset from multiple pools\n* NEW: Expose which waterfall is
  run at each payment date\n\n## 0.28.16\n### 2024-8-6\n* FIX: correct `runPool` cashflow
  order and add UT \n\n## 0.28.15\n### 2024-7-31\n* FIX: enable compound formula on
  `weighted average` formula.\n\n\n## 0.28.14\n### 2024-07-06\n* FIX: enable `annualized
  rate fee type` with formula `bondbalance` on `bondGroup`\n\n## 0.28.13\n###  2024-06-30\n*
  NEW: new assumption `issue bond` which allow funding by issuing new bonds during
  cashflow projection.\n* NEW: new asset class `projectScheduleFlow` which can be
  divided projected cashflow with fix portion and float portions. The interest from
  the float portion will be affected by interest rate assumption.\n* ENHANCE: enable
  formula `bondRate`/`bondWaRate` on `bondGroup`\n* FIX: `formula` will return `inf`
  if a `divide` with zero instead of just throw exception\n* FIX: `financial reports`
  was failing because it can't access to `interest due` on bond group.\n* FIX: enable
  formula query on `bond groups` \n\n\n## 0.28.8\n### 2024-06\n* FIX: `limit` on `payFee`
  was not working with `duePct`\n* ENHANCE: expose `transaction statement` for `triggers`\n\n##
  0.28.2\n### 2024-05-27\n* NEW: enable `trigger` to run waterfall `actions`\n* FIX:
  the `result log` used to be doubled each pool collection period\n* FIX: `payPrinResidual`
  will use all cash from account regardless principal due of bonds, which may caused
  negative balance of bonds( cash of account > principal due of bond)\n\n## 0.28.1\n###
  2024-05-26\n* BREAK : add `bondGroup`, which group bonds and pay with prorata/sequential/by
  coupon rate/by maturity/by start date\n* BREAK : add `begin balance`/`accure interest`/`as
  of date` for cashflow frame\n* BREAK : add `interest arrears` `interest over interest`
  on bond cashflow\n* NEW: add `interest over interest` settings on bonds and expose
  `interest over interest` `interest due` flow\n* ENHANCE: add tabular representation
  of cashflow frame\n* FIX: fix rolling default rate query\n\n\n## 0.27.21\n### 2024-05-15\n*
  NEW: add `weekday <n>` in the date pattern\n* ENHANCE: expose `weekly` /`biweekly`
  in `Period`\n* NEW: now allow new `first N period without Fee` feature to model
  cashflow of type `Installment` \n* FIX: negative pool balance for (revolving pool
  asset >= 2)\n\n## 0.27.13\n### 2024-05-05\n* ENHANCE: enable all `Combination Type`
  formula (via patching dates)\n* ENHANCE: add capability to query txn in (Fee/Bond/Account)
  via a `comment`\n\n\n## 0.27.12\n### 2024-05-04\n* ENHANCE: deal will return how
  it was ended in projection\n\n## 0.27.11\n### 2024-05-04\n* NEW: Formula:  `originalBondBalance`,`BondDuePrin`\n*
  NEW: Waterfall Action: `CalcBondPrin`,`PayPrinWithDue`\n* ENHANCE: fix Formula:
  `PoolFactor`\n* NEW: Enable `*` between formulas\n* FIX: Unlimit Liquidity Provider
  has wrong available balance\n\n## 0.27.7\n### 2024-05-01\n* ENHANCE: Enable pricing
  on asset via a constant rate/rate curve; add `duration` for asset pricing (curve
  only)\n\n\n## 0.27.4\n### 2024-04-15\n* ENHANCE: Pool run: enhance multip-scenario
  run and mulitple-assets type run\n* ENHANCE: Enable revovling on `Receivable`\n*
  ENHANCE: add `RecoveryByDays` to `Receivable` ,which describes recovery cash received
  after default.\n* FIX: Fix single asset run on `lease`\n* FIX: Failed to include
  cumulative stats on revolving buy assets\n* FIX: Multi-asset run was failure due
  to including schedule cashflow run.\n* ENHANCE: upgrade stack resolver from `lts-18.22`
  to `lts-22.6`\n\n\n## 0.27.0\n### 2024-04-01\n* NEW: Now docker image ship with
  `Apple silicon` chip ! Happy hacking Mac users !\n\n\n## 0.26.2\n### 2024-03-24\n*
  FIX: patch recoveries for `Mortgage` type cashflow\n* NEW: add new asset class `Receivable`
  which represent a `invoice factored`,`trading receivable`\n* NEW: `DefaultAtEnd`
  assumption, which assumes asset default at last payment(For `Receivable`)\n\n##
  0.26.1\n### 2024-03-09\n* NEW: `fundWith` which will increate the balance of bond
  and deposit cash to account.\n* NEW: `writeOff` which will write off balance of
  bond via a formula\n* NEW: a new predicate `passMaturity` which True if bonds has
  passed their expected maturity/pay off date.\n* NEW: `Not` as composite boolean
  test.\n* NEW: add new `OAS` pricing assumption, which return OAS spread given input
  scenarios.\n\n## 0.26.0\n### 2024-02-27\n* NEW: add `NO_FirstN` as type of `Mortgage`
  which implies no payment for first N period and interest due will be capitalized.\n*
  NEW: add `IO_FirstN` as type of `Mortgage` which implies no principal payment for
  first N period.\n* NEW: add `Make Whole` Feature, which allow user to set a <Date>,<Spread>,<WAL/Spread>
  Table. The bond will be componsate with PV from spread determined by WAL remaining.\n\n##
  0.25.0\n### 2024-02-16\n* NEW: add `resec deal`, which allow to use bonds as underlying
  assets and allow user to set assumption on underlying deals.\n\n\n## 0.24.1\n###
  2023-12-17\n* NEW: add `payIntBySeq` which pay interest to bonds sequentially with
  optional limit\n* NEW: add condition to \"ExtraSupport\" ,which support only available
  if a <predicate> is satisfied \n* NEW: add `Nothing` to trigger effects\n* NEW:
  add `payFeeBySeq` to which pay a list of fees sequentially with optional limit\n*
  NEW: add a fee type which due amount is X per pool collection period\n* NEW: add
  a fee type which is a lookup table with look up value from a formula\n* NEW: add
  override feature `rate` and `balance` to `calcDueInt` action in waterfall.\n* NEW:
  multiple pool support !! now engine support multiple pools in a deal with mixed
  assets.\n* NEW: add query on `present value on schedule pool cashflow`, which enable
  `Yield Maitenance Overcollaterisaztion` supports\n\n\n\n## 0.23.1\n### 2023-11-16\n*
  NEW: new asset class `FixAsset` type , which yield cashflow given a `capacity` and
  assumption called `utilization rate curve`. The new asset type is applicable to
  Hotel booking/EV Charge station/Solar Panel/Wind Power type.\n* NEW: new rate hedge
  instrument `RateCap` which yield cash if `rateCurve` is higher than a `strike rate`\n*
  NEW: add `accruedInterest` field in pool stats, which will be deducted from pool
  cash flow \n* NEW: add `payPrinBySeq` in waterfall action, now user can pay prin
  bond via a simple list.\n* NEW: add an assumption `fireTrigger` which mannualy fire
  a trigger at point of projection\n* NEW: add pool collection type `totalCash` will
  aggregate all pool cash field\n* NEW: `payInt` now accept a `limit` which constrain
  how much interset to be paid via a `formula`\n* NEW: add `bookBy` a ledger via `formula`\n*
  NEW: add `I_P` to `Mortgage` type ,which models `Buy To Let` type mortgage( interest
  only and principal at last period)\n* ENHANCE: include `Lens` and code clean up\n*
  BREAK: refactor `StepUp` out of `interest` part of bond.\n\n\n## 0.22.2\n### 2023-10-27\n*
  ENHANCE: expose cumulative stats on pool cashflow returned by `runDeal`\n\n\n##
  0.22.1\n### 2023-10-26\n* NEW: add `default by amount` assumption, which enable
  user to set a `total amount of default` alongside with a vector.\n* ENHANCE: misc
  refactors\n\n\n## 0.22.0\n### 2023-10-15\n* BREAK: cashflow now with `Cumulative
  Stats` ( cumulative default/delinq/loss/prepayment/principal/recovery)\n* NEW: expose
  `inspect` in waterfall action to observe variables during a waterfall execution\n*
  NEW: `stepup` now accpet a `pre` instead of a `date` to switch rate\n* ENHANCE:
  auto patch `issuance balance` for `PreClosing` Deal\n* ENHANCE: implement `pre-run
  check` and `post-run check`\n  * IssuanceBalance check : `Ongoing Deal` shall have
  a IssuanceBalance value in Pool\n  * Interest Rate check : index required by deal
  should be found in assumption\n  * Waterfall action check : actions in waterfall
  ( source/target) should exist in deal object\n* FIX: fix bug on `prepay penalty`
  when using `stepDown`\n* FIX: fix project cashflow for `Loan`\n\n## 0.21.5\n###
  2023-10-8\n* ENHANCE: in the revolving buy , now buy amount is no longer a multipler
  of revolving assets face value\n* FIX: now revolving asset may have remtain term
  ==  original term\n\n## 0.21.4\n### 2023-9-27\n* ENHANCE: require a new status when
  defining a deal in `preClosing` stage\n* FIX: fix a bug when reading financial report
  logs \n\n## 0.21.3\n### 2023-9-26\n* NEW: include a `default`/`delinq`/`loss` status
  map when projecting cashflow\n* NEW: implement `haircut` as extra stress projecting
  `mortgage` \n* ENHANCE: include `called` deal status, which will be set when deal
  was triggered with a clean up call assumption\n* ENHANCE: expose `runAsset` endpoint\n*
  ENHANCE: expose formula query on `deal status` as well as `trigger status`\n* ENHANCE:
  add `rampUp` deal status\n* FIX: adjust bond reset date from `cutoff date` to `closing
  date`\n\n## 0.21.1\n### 2023-9-21\n* BREAK: seperate `performance assumption`\n*
  BREAK: add `delinquency` projection on mortgage as well as schedule mortgage cashflow\n\n##
  0.20.3\n### 2023-9-4\n* ENHANCE: now user can include boolean/int/balance/rate type
  query in `inspect` field\n\n## 0.20.2\n### 2023-8-31\n* BREAK: move `Trigger` from
  `list` into a `map` with a name\n* ENHANCE: add `CumulatiePoolDefaultedRateTill`
  to query default rate as of collection period N , then support query last one,last
  two default rates in the past as a rolling basis..\n* ENHANCE: add `queryBool` with
  test logic of `any` `or` which will test all predicates or any predicates are/is
  satisfied. With new included aforementioned formula above, the engine can have a
  predicate like `last 2 period cumulative defaulte rates are all lower than 5%`,
  `any last 2 period cumulative defaulte rates is higher than 5%`  \n\n## 0.20.1\n###
  2023-8-29\n* ENHANCE: add `LedgerTxnAmt` , allow user to query transaction amount
  for a ledger by `comment`\n* ENHANCE: expose `Abs` in formula , which will get absolute
  value of another formula\n\n## 0.20.0\n### 2023-8-25\n* BREAK: refactor `payInt`
  and `payFee` which includes `extraSupport` from either another `account` or `liquidation
  provider`, with option to book `PDL draw` on ledger\n* NEW: expose `Cumulative Net
  Loss` `Cumulative Net Loss Ratio` `Bond Rate` `Bond Weight Average Rate` in formula\n*
  NEW: expose `Avg` in formula ,which can calculate average value from a list of deal
  stats.\n* NEW: expose `RefRate` in bond , now bond can be setup interest rate which
  reference to a value of deal , could be like 100% of Pool WAC coupon , or average
  of bond rate of bonds etc.\n* ENHANCE: add `liquidity provider` `interest swap`
  to `balance sheet repot`\n* ENHANCE: add new bool query `is_most_senior_bond`\n*
  ENHANCE: add new balance query `PoolCurCollection` returns target pool source balance
  in last collected period\n* ENHANCE: refactor account transfer by `target reserve
  amount`\n\n\n## 0.19.15\n### 2023-8-20\n* ENHANCE: add `reserve account excess/gap`
  to formula\n* ENHANCE: refactor bond `step up` coupon by date ,which pertains to
  Euro deals\n* ENHANCE: add comments to souce code and prepare to release to `Hackage`\n\n##
  0.19.12\n### 2023-8-17\n* NEW: Add `Step Up By Date` /`Cap`/`Floor` coupon type
  for bond\n* NEW: Add `Prepay Penalty` attribute on `Mortgage`, penalty types includes:\n
  \ * `rate0` before `term N` and `rate1` after `term N`\n  * Fixed amount in lifetime
  or before `term N`\n  * Fixed pct in life time or bfore `term N`\n  * Sliding from
  `rate0` by step of `rate1`\n  * Ladder type like first `12` periods with Pct of
  `Rate0` , next `12` periods with Pct of `Rate1`\n* ENHANCE: refactor `liquidity
  provider`\n  * include a maybe `valid date` of the agreement\n  * include floater
  index\n\n## 0.19.11\n### 2023-8-14\n* ENHANCE: add `calcAndPay` action for fee\n*
  ENHANCE: expose new assumption on expense projection\n* ENHANCE: include a new `NO_IE`
  type to generate dates vector\n* FIX: Fix missing periods of `recurr` type of fee\n\n##
  0.19.10\n### 2023-8-7\n* NEW : add a new expense type: `TargetBalanceFee`, which
  due amount = `<formula 1> - <formula 2>`\n* ENHANCE: add query total txn amount
  for account/bond/expense with optional `comment` as a filter\n* ENHANCE: expoese
  query on `cumulative pool` on `recoveries` `principal` `interest` `prepayment` \n*
  ENHANCE: expoese query on `beg balance` on pool\n\n\n## 0.19.8\n### 2023-7-24\n*
  ENHANCE: trancate payments records for bond with 0 balance and 0 due interest/due
  pricipal\n\n## 0.19.7\n### 2023-7-19\n* ENHANCE: expose query on `cumulative pool
  recoveries`\n* ENHANCE: expose `factor` in query\n* ENHANCE: ensure principal payment
  is cap via bond oustanding balance \n\n## 0.19.6\n### 2023-7-18\n* FIX: update PDL
  Ledger balance after `bookBy` action\n\n## 0.19.4\n#### 2023-7-17\n* FIX: fix pricing
  error if bond flow size is 0\n\n## 0.19.0\n#### 2023-7-1\n* BREAK : seperate `payInt`
  action and `accrueInt` action\n* ENHANCE: optimize `Z-spread` calculation\n* ENHANCE:
  re arrange `deal.hs` , break down code logic into seperate files.\n* NEW: include
  `ledgers` to accomodate `PDL` feature (Principal Deficiency Ledger)\n* ENHANCE:
  expose `rounding` on `deal stats`, which rounds interest rate change by a factor
  of fix amount ,or pay principal on balance by a factor of fix amount.\n* ENAHNCE:
  expose `runDate` endpoint as sandbox for user to play with `<datePattern>`\n\n\n##
  0.18.9\n#### 2023-6-23\n* NEW : add `floorAndCap` formula to set upper or lower
  bound of formula value\n* NEW : add formula based fee rate for `pct` and `annual`
  type of fee\n\n## 0.18.1\n#### 2023-6-21\n* NEW : Project cashflow for a list of
  asset, with performance assumption\n* ENHANCE : Add `limit` for revolving buy action\n*
  ENHANCE : Add `default` waterfall \n* NEW : Add \"IF-ELSE\" in waterfall action\n\n##
  0.18.0\n#### 2023-6-8\n* NEW \"Major\" : expose revolving assumption !\n* NEW :
  `Pre` now support comparing with a `balance` type formula ,not limited to a balance
  number\n\n\n## 0.17.2\n#### 2023-5-24\n* NEW: expose `exclude dates` and `offset
  by days` <date pattern>\n\n\n## 0.17.1\n#### 2023-5-21\n* NEW: expose trigger status
  in `Inspect`\n\n## 0.17.0\n#### 2023-5-21\n* NEW: expose `BalanceSheet Report` and
  `Cashflow Report`, user can query them via set flags in assumption\n* BREAK: normalized
  some account comments to be analysed when compling `Cashflow Report`\n\n\n## 0.16.0\n####
  2023-5-13\n* NEW: expose bond with `Step-Up coupon` feature \n* BREAK:using `DatePattern`
  to annotate reset date for floater bonds\n* FIX: data query in the trigger\n\n##
  0.15.4\n#### 2023-5-6\n* FIX: Fix cashflow projection logic for `Installment`\n*
  Include `DefaultedRecovery` assumption for defaulted assets.\n\n## 0.15\n#### 2023-5-1\n*
  Introduce new asset : `AdjustRateMortgage` with assumption:\n    * init period,first
  reset cap, periodic reset cap,lifetime cap, lifetime floor\n* Docker hub will host
  each stable releases of Hastructure\n\n\n\n"
changelog-type: markdown
description: "[![Actions Status](https://github.com/yellowbean/Hastructure/workflows/Haskell%20CI/badge.svg)](https://github.com/yellowbean/Hastructure/actions)\n[![Docker
  Build](https://img.shields.io/docker/v/yellowbean/hastructure?color=green&label=docker)](https://hub.docker.com/r/yellowbean/hastructure)\n[![Pulls
  from DockerHub](https://img.shields.io/docker/pulls/yellowbean/hastructure.svg)](https://hub.docker.com/r/yellowbean/hastructure)\n![Hackage
  Version](https://img.shields.io/hackage/v/Hastructure)\n\n\n# What is Hastructure
  ?\n\n``Hastructure`` names after ``Haskell`` and ``Structured Finance``, aims to
  provide cashflow projection for deal/transactions described in either Haskell structure
  or ``JSON`` via RESTful Service, with inputs from below:\n\n* deal components (bonds,assets,accounts,waterfall,trigger,fees
  etc.) \n* pool performance assumption input as well as interest rate assumption\n\n``Hastructure``
  will generate outputs:\n\n* cashflow of bonds/accounts/fees\n* pricing of bonds\n*
  or other outputs make your lose money faster :sunglasses:\n\n# Why Hastructure ?\n\n*
  :bricks: A collection of building blocks to build cashflows model for structured
  product. User just need to `compose` them together.\n* :car: In-house and white-label
  friendly.\n* :flags: No lock-in risk, all JSONs input/output, no proprietary file
  formats.\n\n# I'm using language XXX\n\n* :snake: [Python wrapper](https://github.com/yellowbean/PyABS)
  is in ``Beta`` now !\n* :coffee: Easy integration with ``Java/C#/C++/JavaScript/Python``
  with ``RESTful`` interface and Docker image are ready. \n  * C/Java : [here](https://github.com/yellowbean/Hastructure/issues/106)\n\n###
  Documentation\n\n* see what `Hastructure` is capable of -> [Here](https://absbox-doc.readthedocs.io/en/latest/)\n
  \ * [Where is `Hastructure` doc ? ](https://github.com/yellowbean/Hastructure/wiki/Where-is-documentation-of-Hastructure-%3F)\n\n###
  Features\n* Integration\n  * Built-in REST API services\n    * Language independent,
  integration friendly.\n    * Swagger -> [here](https://github.com/yellowbean/Hastructure/blob/master/swagger.json)\n
  \   * Public server status -> [here](https://absbox.org)\n  * Docker Support \n*
  Asset class coverage (Mortgage/Student Loan/Auto Loan/Rentals/Corp Loan/Consumer
  Installment)\n* Pool Assumptions\n  * Mortgage (Prepay, Prepay Penalty, Deliquency,
  Default,Recovery Lag/Rate)\n  * Installment (Prepay Default Recovery Lag/Rate) \n
  \ * Corp Loan (Prepay Default Recovery Lag/Rate)\n  * Receivable (Default Recovery
  Lag/Rate)\n  * Rentals (Gaps between leases,Rental Curve Assumption) \n  * Fixed
  Asset ( Uitility Rate)\n* Multiple Waterfalls\n  * Clean up waterfall/ Pre,Post
  Enforcement waterfall\n  * Pool collection waterfall\n* Accounts\n  * Reserve Account/Bank
  Account (with interest)/Cash Account/ Ledger(PDL)\n* Bonds/Tranches\n  * Float Index
  rate / Step Up coupon type / Fix Rate\n  * Sequential / Prepay Lockout /PAC Bond
  Support /Z Bond Support \n  * Bond Pricing (IRR /WAL /Duration /Accrual Int)\n*
  Call\n  * call by Pool/Bond Balance amount;Bond/Pool Factor;On Date/or after\n*
  Fees\n  * Pool / Bond balanced based fees \n  * Fix Amount Fees / Custom Fee Flow
  / Number Type Fee of a deal / Formula based fee rate \n* Liquidity Provider \n  *
  line of credit/ Unlimit support \n  * interest charge or fee charge on the credit
  used & unused\n* Trigger \n  * Base on Date \n  * Base on Free Formula, Bond /Pool
  metrics\n  * Base on Pool performance, like Cumulative Default Rate, last 3 periods
  delinquency rates.\n  * Base on any combination above\n* Interest Swap\n  * Float
  to Float/ Fix to Float\n  * formula based notional balance\n* Scenario Analysis\n
  \ * Running multiple scenarios on single deal\n  * Pricing on single asset \n  *
  Revoving Buy Analysis \n* Free Formula Support \n  * User is able to using statistics
  of deal ( Pool Balance,Account balance ,total Bond Balance of , A factor of .. )
  to construct formula which used to specify the amount of cash to transfer , pay
  out to fee or liabilities etc.\n* Misc\n  * Support user define pay dates & pool
  collection dates \n\n\n### Online Demo\n\nThe demo only cover very limit features
  of this engine and subject to UI performance issue due to rapid prototype design
  of web component\n\n**Pls noted that the web demo is far behind latest development/stable
  version**\n\n* [Here](https://deal-bench.xyz)\n\n\n### Others\n* [Why yet another
  cashflow engine](https://github.com/yellowbean/Hastructure/wiki/Why-Yet-Anohter-Cashflow-Engine)\n"
description-type: markdown
hash: 38407d5e7f0aa5d7621a8fa5784365644d52c33e233da581c7d24791464c8159
homepage: https://github.com/yellowbean/Hastructure#readme
latest: 0.45.2
license-name: BSD-3-Clause
maintainer: always.zhang@gmail.com
synopsis: Cashflow modeling library for structured finance
test-bench-deps:
  Decimal: '>=0'
  Hastructure: '>=0'
  MissingH: '>=0'
  aeson: '>=0'
  aeson-pretty: '>=0'
  attoparsec: '>=0'
  attoparsec-aeson: '>=0'
  base: '>=4.18.0 && <4.20'
  base-compat: '>=0'
  bytestring: '>=0'
  containers: '>=0'
  deepseq: '>=0'
  dlist: '>=0'
  exceptions: '>=0'
  generic-lens: '>=0'
  hashable: '>=0'
  http-types: '>=0'
  ieee754: '>=0'
  lens: '>=0'
  math-functions: '>=0'
  monad-loops: '>=0'
  mtl: '>=0'
  numeric-limits: '>=0'
  openapi3: '>=0'
  parallel: '>=0'
  regex-base: '>=0'
  regex-pcre-builtin: '>=0'
  regex-tdfa: '>=0'
  scientific: '>=0'
  servant: '>=0'
  servant-openapi3: '>=0'
  servant-server: '>=0'
  split: '>=0'
  string-conversions: '>=0'
  swagger2: '>=0'
  tabular: '>=0'
  tasty: '>=0'
  tasty-golden: '>=0'
  tasty-hspec: '>=0'
  tasty-hunit: '>=0'
  template-haskell: '>=0'
  text: '>=0'
  time: '>=0'
  vector: '>=0'
  wai: '>=0'
  wai-cors: '>=0'
  warp: '>=0'
  yaml: '>=0'
