all-versions:
- 0.1.1.0
author: Sebastian GliÅ£a-Catina
basic-deps:
  base: ^>=4.18
changelog: ''
changelog-type: markdown
description: |
  HaScalaM
  =========

  It converts (textually) to and fro between `Haskell` and `Scalameta` `AST`s.

  It is fairly complete as far as `Scalameta` coverage is concerned.
  It starts with "constraint" classes corresponding to `Scalameta` traits,
  goes through types corresponding to OOP, and ends with wrapper types that
  have `Show` instances.

  The disadvantage is that constructors are "doubled", e.g., "`TDo (SmDoT`" is
  required, because "`TDo`" involves type equality, while "`SmDoT`" only uses type
  constraints. ("`T`" stands for "`term`".)

  It is used [here](https://github.com/sjbiaga/pisc-dotarrow) at the
  metaprogramming level to convert to and fro between `Scala` and `Haskell`.
description-type: markdown
hash: d415fbdf1c940178786f5afda631f96208cd0a882035e1d4db03acdf7e9a071e
homepage: https://github.com/sjbiaga/hascalam
latest: 0.1.1.0
license-name: MIT
maintainer: sjb.ia.ga@gmail.com
synopsis: Haskell to and from Scalameta
test-bench-deps: {}
