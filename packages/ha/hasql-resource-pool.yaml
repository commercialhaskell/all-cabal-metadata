homepage: https://github.com/avanov/hasql-resource-pool
changelog-type: markdown
hash: d6e40eb60a6958e72ccf6b2203dd66a2ebcdb940f21f3491cebef69183ea3d06
test-bench-deps:
  hasql: -any
  base-prelude: -any
  hspec: '>=2.6 && <3'
  hasql-resource-pool: -any
maintainer: Maxim Avanov <maxim.avanov@gmail.com>
synopsis: A pool of connections for Hasql based on resource-pool.
changelog: |
  # 0.6.0.0

  * Upgrade to support [`reasource-pool`](https://github.com/scrive/pool) from the new maintainer.
  * `acquireWith` no longer accepts the stripes number, due to semantic changes in `resource-pool`.


  # 0.5.4.1

  * Upgrade to support breaking changes of `hasql-1.6.3`. No breaking changes introduced to the library.

  # 0.5.3.1

  * `acquireWithStripes` renamed to `aquireWith` and allows specifying a custom `ConnectionGetter`.


  # 0.5.3

  * Initial release as a new package. The implementation is based on `hasql-pool` v0.5.2.2
  and continues using `resource-pool` v0.2.x
  (actually, a [fork with important performance and stats changes applied](https://github.com/bos/pool/pull/43)).
  * The long-term plan is to make a switch to a [newer v0.3.x maintained by scrive](https://github.com/bos/pool/pull/43).
basic-deps:
  hasql: '>=1.6.3'
  base-prelude: '>=1 && <2'
  time: '>=1.5 && <2'
  clock: '>=0.8'
  resource-pool: '>=0.4.0.0'
all-versions:
- 0.5.3.2
- 0.5.4.0
- 0.5.4.1
- 0.6.0.0
author: Nikita Volkov <nikita.y.volkov@mail.ru>
latest: 0.6.0.0
description-type: markdown
description: |
  hasql-resource-pool
  ===================

  This is a fork of [hasql-pool](https://github.com/nikita-volkov/hasql-pool) that
  continues using [resource-pool](https://hackage.haskell.org/package/resource-pool) for
  its underlying pool implementation.

  The fork is based on [0.5.2.2 release](https://hackage.haskell.org/package/hasql-pool)
  (as the latest original implementation based on `resource-pool`), and it includes the following API and layout changes:

  * Connections are based on settings with IO actions.
    This change to the API makes the library usable with the custom authentication methods
    such as [AWS RDS IAM tokens](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.IAMDBAuth.html).
  * Pool interface allows for specifying IO observer actions. These actions are useful for collecting and tracking various pool metrics
    with tools like [Prometheus](https://prometheus.io/docs/introduction/overview/).
  * Decision making on the size of the stripes is delegated to the upgraded `resource-pool` (which has slightly different semantics compared to v0.2.x).
  * No reliance on Stack tooling.
license-name: MIT
