all-versions:
- 0.1.0.0
author: Alexander Thiemann
basic-deps:
  aeson: '>=1.1'
  base: '>=4.7 && <5'
  bytestring: '>=0.10'
  contravariant: '>=1.4'
  hasql: '>=0'
  text: '>=1.2'
  time: '>=1.6'
  unordered-containers: '>=0.2'
  vector: '>=0.12'
changelog: ''
changelog-type: ''
description: |
  # hasql-simple

  [![CircleCI](https://circleci.com/gh/agrafix/hasql-simple.svg?style=svg)](https://circleci.com/gh/agrafix/hasql-simple)

  A somewhat opinionated "simpler" API to hasql. This allows to write code like:

  ```haskell
  import Hasql.Query
  import Hasql.Simple
  import qualified Hasql.Decoders as D

  data NewUser
      = NewUser
      { nu_username :: !T.Text
      , nu_email :: !T.Text
      , nu_password :: !(Password 'PtHash)
      } deriving (Show)

  createUserQ :: Query NewUser UserId
  createUserQ =
      statement sql encoder decoder True
      where
        sql =
            "INSERT INTO login (username, email, password) VALUES ($1, $2, $3) RETURNING id;"
        encoder =
            req nu_username
            <> req nu_email
            <> req nu_password
        decoder =
            D.singleRow dbDecVal
  ```

  The `-simple` in the name is due to this type class approach beeing similar to the one found in `postgresql-simple`. All contributions (e.g. more instances and/or helper functions) are welcome, please send a PR.
description-type: markdown
hash: 2554df30f5dbff8e1ed89a2c16a3652db56efea328216704f4d0fec1f4e6635f
homepage: https://github.com/agrafix/hasql-simple#readme
latest: 0.1.0.0
license-name: BSD-3-Clause
maintainer: mail@athiemann.net
synopsis: A somewhat opinionated "simpler" API to hasql
test-bench-deps: {}
