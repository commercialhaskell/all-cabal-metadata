all-versions:
- 0.1.0.0
- 0.1.0.1
- 0.1.1.0
- 0.2.0.0
- 0.2.0.1
- 0.2.0.2
- 0.2.1.0
- 0.2.1.1
- 0.2.1.2
- 0.2.2.0
- 0.2.2.1
author: Hans-Christian Esperer <hc@hcesperer.org>
basic-deps:
  ansi-wl-pprint: '>=0'
  array: '>=0'
  base: '>=4.7 && <5'
  binary: '>=0'
  bytestring: '>=0'
  conduit: '>=0'
  containers: '>=0'
  directory: '>=0'
  exceptions: '>=0'
  filepath: '>=0'
  gitrev: '>=0'
  hascar: '>=0'
  mtl: '>=0'
  optparse-applicative: '>=0'
  path: '>=0'
  text: '>=0'
  time: '>=0'
  transformers: '>=0'
  unix: '>=0'
changelog: |
  0.2.2.1
  -------

  - When unwrapping transport files from PAT files,
    name the transport files properly
  - Add an option to specify the extraction directory
    (default: CWD)

  0.2.2.0
  -------

  - Add an option to extract transport files from PAT
    files automatically

  0.2.1.2
  -------

  - Remove version constraints, rely on stack/nixos instead
    for dependency management

  0.2.1.1
  -------

  - Make it compile with ghc-8.0.2

  0.2.1.0
  -------

  - Make "SapCar" a real type instead of a type synonym
  - Use the type system to prevent "CarEntry"s to escape the monad

  0.2.0.0
  -------

  - Use ST unboxed arrays instead of Data.Sequence and
    avoid usage of "temporary lists" during conversion
    to ByteStrings
  - Add a parameter "size" to the decompressBlock
    function for more efficiency
  - Rename the decompressBlock function to
    decompressBlocks for clarity
  - Limit the maximum SAPCAR block size to make memory
    exhaustion attacks a bit less easy
  - Compile the application single threadedly for more
    efficiency (yes, it does help in this case!)

  0.1.1.0
  -------

  - Expose the decompressBlock function directly
changelog-type: markdown
description: |
  [![Build Status](https://travis-ci.org/VirtualForgeGmbH/hascar.svg?branch=master)](https://travis-ci.org/VirtualForgeGmbH/hascar)

  # What is hascar?

  HASCAR is a free unzip utility for SAP's SAPCAR format. You can use it to
  decompress sap car files on the command line. The command line utility also
  supports unwrapping of transport files that are contained inside patch files.
  (Option -p, --depat) You can also use it as a library in your own haskell programs. So
  far, only the latest version of sapcar files are is supported, which is 2.01.

  It is implemented 100% in haskell, including the lzh decompression
  routine.

  This is not yet in a stable state. It should successfully unpack lzh
  compressed files and uncompressed files.

  The SAPCAR container format decoder is based on [research done by
  Martin Gallo](https://github.com/CoreSecurity/pysap) with further
  investigation by Hans-Christian Esperer <hc@hcesperer.org>, who also
  did the LZH decompressor reimplementation.

  What is supported:

  * Reading SAPCAR archives version 2.01 only
  * Unpacking files that are LZH compressed
  * Unpacking files that are not compressed
  * Unpacking transport files are wrapped inside a PAT file

  TODO:

  * Implement LZC
  * Implement packing functionality
  * Maybe implement signature checking
  * Make the LZH algorithm more efficient (the author just about
    started to learn haskell when he embarked on implementing
    that algorithm :-)
    => Some work on this has been done; more is required.
  * Implement CRC checking


  # Installing hascar

  ## nixos

  Users of [nixos](https://nixos.org) can simply install hascar by issuing
  "nix-env -iaP haskellPackages.hascar". Or if you only need it temporarily, open
  a nix-shell like this: "nix-shell -p haskellPackages.hascar"

  ## FreeBSD/GNU_Linux/OS X/Windows

  To compile and install, first [get stack](
  http://docs.haskellstack.org/en/stable/README/), then issue:

  stack build && stack install

  hascar will be installed to ~/.local/bin  . You should set your PATH variable to point
  to this directory.

  # Verifying signatures and encrypted archives

  Since both use a proprietary crypto API, this is currently not supported.

  # Usage

  Run hascar with the -h flag to get help. The basic usage should be the
  same as with SAP(R)'s sapcar tool. It should be noted that the used
  command line parser is a bit more strict than what you might be used
  to.

  # Extracting transport files from PAT files

  SAR files can contain transport files that are wrapped inside PAT (patch)
  files. Since hascar 0.2.2.0 the option -p is offered, that will try to
  automatically detect PAT files. If such a file is detected, the contained
  transport file is extracted.
description-type: markdown
hash: 1aea857d11ddc5f196d2b2b33ce3e510109126a461ade9b69f24cf1a6ef04f24
homepage: https://github.com/VirtualForgeGmbH/hascar
latest: 0.2.2.1
license-name: GPL-2.0-only
maintainer: Hans-Christian Esperer <hc@hcesperer.org>
synopsis: Decompress SAPCAR archives
test-bench-deps:
  base: '>=0'
  bytestring: '>=0'
  conduit: '>=0'
  cryptohash: '>=0'
  hascar: '>=0'
  hex: '>=0'
  path: '>=0'
