all-versions:
- '0.1'
- '0.2'
- '0.3'
- '0.4'
- '0.5'
- '0.6'
- '0.7'
- '0.8'
- '0.9'
- 0.9.5
- 0.9.9
- '1.0'
- '1.1'
- '1.2'
- 1.3.3
- 1.3.4
- 1.3.5
- 1.3.6
- 1.3.7
- 1.3.8.1
author: Yoshikuni Jujo
basic-deps:
  base: <5
  directory: '>=0'
  filepath: '>=0'
  mtl: '>=0'
  process: '>=0'
  regexpr: '>=0.5.1'
  time: '>=0'
  yjtools: '>=0.9.10'
changelog: ''
changelog-type: ''
description: "Like ruby's rake, hake have Hakefile which is Haskell source.\n\nAnd
  Hakefile is like rake's Rakefile, and make's Makefile.\n\nHakefile is just Haskell
  source code,\nthen you can use all Haskell features.\n\nNew:\n\n> deps :: [ String
  ] -> [ String] -> Rule\n> deps trgts srcs == file trgts srcs $ \\_ _ -> []\n\nUse
  'deps' if you want to define no command rule for new\nTargets.\nPlease use addDeps
  if you will add dependencies to already\nexisting targets.\n\nHakefile example:\n\n>
  import Development.Hake\n> import Development.Hake.FunSetRaw\n> hake_rules = [\n>\n>
  \ dflt\t[ \"greeting\" ]\n>  ,\n>  file\t[ \"greeting\", \"greeting.log\" ] [ \"hello.o\",
  \"good-bye.o\" ] $\n> \t\tconst2 [ [ \"linker\", \"-o\", \"greeting\", \"hello.o\",
  \"good-bye.o\" ] ]\n>  ,\n>  rule\t\".o\" \".sfx1\" $\n> \t\t\\t (s:_) -> [ [ \"compiler1\",
  s, \"-o\", t ] ]\n>  ,\n>  rule\t\".o\" \".sfx2\" $\n> \t\t\\t (s:_) -> [ [ \"compiler2\",
  s, \"-o\", t ] ]\n>  ,\n>  task\t\"clean\"\n>       [ [ \"rm\", \"-f\", \"hello.o\",
  \"good-by.o\", \"greeting\", \"greeting.log\" ] ]\n>  ,\n>  mkfl\t\"script.sh\"
  [ \"#!/bin/sh\", \"echo This is script\", \"echo made by Hakefile\" ]\n>  ,\n>  ruleSS
  \"\" \".o\" $ \\t (s:_) -> [ (\".c\",  [ [ \"gcc\", s, \"-o\", t ] ] ) ,\n>                             (\".cc\",
  [ [ \"g++\", s, \"-o\", t ] ] ) ] )\n>  ,\n>  rule   \".o\" \".c\" $ \\_ (s:_) ->
  [ [ \"gcc\", \"-c\", s ] ]\n>  ,\n>  rule   \".o\" \".cc\" $ \\_ (s:_) -> [ [ \"g++\",
  \"-c\", s ] ]\n>  ,\n>  base   (==\"foo\") (const [ \"foo.gen\", \"Hakefile\" ])
  $ \\t (s:_) _ _ -> do\n>               gen <- readFile s\n>               writeFile
  t $ unlines $\n>                 [ \"#!/bin/sh\", \"echo This is script\" ] ++ lines
  gen\n>               return ExitSuccess\n>\n>  ]\n>\n> main = hake hake_rules"
description-type: haddock
hash: cf8ce41fadb54e8c5f9b44e5ee73b0b7eef32d48ddba502c0f0a1fbc1476b6d0
homepage: http://homepage3.nifty.com/salamander/second/projects/hake/index.xhtml
latest: 1.3.8.1
license-name: LicenseRef-GPL
maintainer: Yoshikuni Jujo <PAF01143@nifty.ne.jp>
synopsis: 'make tool. ruby : rake = haskell : hake'
test-bench-deps: {}
