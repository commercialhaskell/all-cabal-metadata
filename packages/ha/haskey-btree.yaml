all-versions:
- 0.2.0.0
- 0.2.0.1
- 0.3.0.0
- 0.3.0.1
author: Henri Verroken, Steven Keuchel
basic-deps:
  base: '>=4.7 && <5'
  binary: '>=0.6 && <0.9 || >0.9 && <1'
  bytestring: '>=0.10 && <1'
  containers: '>=0.5 && <1'
  hashable: '>=1.2 && <2'
  mtl: '>=2.1 && <3'
  semigroups: '>=0.12 && <1'
  text: '>=1.2.1 && <2.2'
  transformers: '>=0.3 && <1'
  vector: '>=0.10 && <1'
changelog: ''
changelog-type: ''
description: |
  haskey-btree
  ============

  [![Travis](https://travis-ci.org/haskell-haskey/haskey-btree.svg?branch=master)](https://travis-ci.org/haskell-haskey/haskey-btree)
  [![Hackage](https://img.shields.io/hackage/v/haskey-btree.svg?maxAge=2592000)](https://hackage.haskell.org/package/haskey-btree)
  [![Stackage Nightly](http://stackage.org/package/haskey-btree/badge/nightly)](http://stackage.org/nightly/package/haskey-btree)
  [![Stackage LTS](http://stackage.org/package/haskey-btree/badge/lts)](http://stackage.org/lts/package/haskey-btree)

  B+-tree implementation in Haskell.

  This package provides two B+-tree implementations. The first one is a pure
  B+-tree of a specific order, while the second one is an impure one backed
  by a page allocator.

  This project is part of the [haskey](https://github.com/haskell-haskey/haskey)
  project. The [haskey](https://github.com/haskell-haskey/haskey) repository
  contains more information on how to use this library.
description-type: markdown
hash: f269e44d89924a76eb88e7f1ae5b8e1637b1b9c6b1ab98d1f64aa0d2e1a88806
homepage: https://github.com/haskell-haskey/haskey-btree
latest: 0.3.0.1
license-name: BSD-3-Clause
maintainer: steven.keuchel@gmail.com
synopsis: B+-tree implementation in Haskell.
test-bench-deps:
  HUnit: '>=1.3 && <2'
  QuickCheck: '>=2 && <3'
  base: '>=4.7 && <5'
  binary: '>=0.6 && <0.9 || >0.9 && <1'
  bytestring: '>=0.10 && <1'
  containers: '>=0.5 && <1'
  data-ordlist: '>=0.4 && <1'
  haskey-btree: '>=0'
  mtl: '>=2.1 && <3'
  test-framework: '>=0.8 && <1'
  test-framework-hunit: '>=0.3 && <1'
  test-framework-quickcheck2: '>=0.3 && <1'
  transformers: '>=0.3 && <1'
  vector: '>=0.10 && <1'
