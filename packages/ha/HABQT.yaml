all-versions:
- 0.1.0.0
author: Leonid Belinsky
basic-deps:
  HABQT: '>=0'
  base: '>=4.10 && <4.11'
  hmatrix: '>=0.18.2 && <0.19'
  hmatrix-gsl: '>=0.18 && <0.20'
  mtl: '>=2.2.2 && <2.3'
  mwc-random: '>=0.13.6 && <0.14'
  newtype-generics: '>=0.5.3 && <0.6'
  optparse-applicative: '>=0.14.2 && <0.15'
  streaming: '>=0.2.1 && <0.3'
  utility-ht: '>=0.0.14 && <0.1'
  validation: '>=1 && <1.1'
  vector: '>=0.12.0 && <0.13'
changelog: |
  # Changelog for HABQT

  ## Unreleased changes
changelog-type: markdown
description: "# HABQT\n\nAim of the project is to extend adaptive Bayesian quantum
  tomography as\ndescribed in [2012 paper by Huszár and\nHoulsby](https://doi.org/10.1103/PhysRevA.85.052120)
  by using a hierarchical\ndistribution over density matrices of all possible ranks.\n\nIncludes:\n\n*
  a Haskell library\n* a shared library which provides a C interface to the tomography
  function\n* an executable that simulates tomography of random states and outputs\n
  \ infidelity between true states and mean Bayesian estimates to a file\n\nPlease
  refer to `HABQT-simulation --help` for executable usage instructions,\naccompanying
  Haddock documentation for Haskell API, and [libHABQT header\nfile](./libHABQT.h)
  for shared library C ABI description.\n\n### Installation instructions\n\n#### Linux\n\nNo
  special setup should be necessary. Simply make sure GSL, BLAS and LAPACK are\ninstalled
  on your system and install normally using stack, cabal or Setup.hs.\n\n#### Windows\n\nMaking
  the necessary shared libraries and tools available on windows can be a\nbit tricky.
  One way to do this is install them inside MSYS2 that comes with\nstack on windows
  (on x86\\_64 can be found under\n`%LOCALAPPDATA%\\Programs\\stack\\x86_64-windows`):\n\n0.
  MSYS may not be present, in which case execute `stack build` in HABQT\n   directory.
  The build will fail due to missing libraries/tools, but MSYS\n   should be installed
  after it, and you will be able to add them.\n1. Launch msys2.exe\n2. (Optional)
  Update MSYS2 with `pacman -Syu`. It may be necessary to restart\n   the shell: follow
  the instructions displayed in it.\n3. Install the appropriate mingw toolchain, which
  includes necessary tools like\n   pkg-config. E.g.  \n   ```pacman -S mingw-w64-x86_64-toolchain```\n4.
  Install GSL for the appropriate mingw toolchain (the 64-bit one this case):  \n
  \  ```pacman -S mingw64/mingw-w64-x86_64-gsl```\n5. Install openblas for appropriate
  mingw toolchain:  \n   ```pacman -S mingw64/mingw-w64-x86_64-openblas```\n6. The
  versions/naming conventions hmatrix expects differ from what is used in\n   modern
  MSYS2, so it's necessary to either link of create renamed copies of\n   two libraries
  from the appropriate mingw toolchain (in my case found under\n   `%LOCALAPPDATA%\\Programs\\stack\\x86_64-windows\\msys2-20150512\\mingw64\\bin`):\n
  \  `libgfortran-4.dll` to `libgfortran.dll` and `libgslcblas-0.dll` to\n   `gsl-0.dll`.
  I recommend placing links/copies in some directory that isn't\n   normally on PATH
  (neither windows nor MSYS) and explicitly pointing stack to\n   them during installation
  with `--extra-lib-dirs ` (example follows in next\n   step).\n7. Outside MSYS2 open
  a normal windows shell, navigate to HABQT folder and\n   build/install with stack,
  passing appropriate flags and library dirs:  \n   ```stack build --flag hmatrix:openblas
  --extra-lib-dirs=D:\\lib```  \n   where `D:\\lib` contains ` libgfortran.dll` and
  `gsl-0.dll`.\n\nTo use the shared library or executable, you’ll need to have several
  mingw\nlibraries on PATH or in the same directory: libgcc_s_seh-1.dll,\nlibgfortran-4.dll,
  libgsl-23.dll, libgslcblas-0.dll, libopenblas.dll,\nlibquadmath-0.dll and libwinpthread-1.dll.\n"
description-type: markdown
hash: efa51931ff98caa81ba2a337e925e1fce5cc1d7c021062da0ffc146afec6ed10
homepage: https://github.com/Belinsky-L-V/HABQT#readme
latest: 0.1.0.0
license-name: BSD-3-Clause
maintainer: belinsky.leonid@gmail.com
synopsis: Hierarchical adaptive Bayesian quantum tomography for quantum bits
test-bench-deps:
  HABQT: '>=0'
  QuickCheck: '>=2.10.1 && <2.11'
  base: '>=4.10 && <4.11'
  hmatrix: '>=0.18.2 && <0.19'
  mwc-random: '>=0.13.6 && <0.14'
  newtype-generics: '>=0.5.3 && <0.6'
  streaming: '>=0.2.1 && <0.3'
  utility-ht: '>=0.0.14 && <0.1'
  vector: '>=0.12.0 && <0.13'
