all-versions:
- 0.2.1
- 0.2.6
- 0.2.7
- 0.2.8
- 0.2.9
- 0.2.10
- 0.2.12
- 0.2.13
- 0.2.14
- 0.2.15
- 0.2.16
- 0.2.17
- 0.2.18
- 0.2.19
- '0.3'
- 0.3.1
- 0.3.2
- 0.3.3
- 0.3.4
- 0.3.5
- 0.3.6
- '0.4'
- 0.4.1
- 0.4.2
- 0.4.3
- 0.4.4
- 0.4.5
- 0.4.6
- 0.4.7
- '0.5'
- 0.5.1
- 0.5.2
- 0.5.3
- 0.5.4
- 0.5.5
- 0.5.6
- '0.6'
- 0.6.1
- 0.6.2
- 0.6.3
- 0.6.4
- 0.6.5
- 0.6.6
- 0.6.7
- '0.7'
- 0.7.1.1
- 0.7.1.2
- 0.7.2.1
- 0.7.2.2
- 0.7.3.0
- 0.7.3.1
- 0.8.0.0
- 0.8.1.0
- 0.8.2.0
- 0.8.2.1
- 0.8.2.2
- 0.8.3.0
- 0.8.4.0
author: Henning GÃ¼nther, Duncan Coutts, Lennart Kolmodin
basic-deps:
  base: '>=0'
  directory: '>=0'
  filepath: '>=0'
  hackport: '>=0'
  optparse-applicative: '>=0'
  parsec: '>=0'
  parser-combinators: '>=0'
  prettyprinter: '>=0'
  process: '>=0'
changelog: |
  ## v0.8.4.0 (2023-06-03)

  Release v0.8.4.0

  - Do not add `[profile]` to dev-lang/ghc

    The needed changes have been addressed in haskell-cabal.eclass and
    should not be handled by hackport

  - KEYWORDs are now automatically passed forward between version bumps

    This functionality was removed in the last version and has been added
    back. Any "stable" keywords should automatically become "testing"
    when passed forward.

  - Add shell completion functionality

    Use optparse-applicative's functionality to generate bash, zsh, and
    fish completion scripts. Because autocompletion for `hackport merge`
    requires searching the list of package/version strings from Hackage,
    this data is stored in a trie which is cached in
    ~/.hackport/packages.cache (which is removed when `hackport update`
    is run).

  - Fix doctests

    Doctests should now work with cabal-v1 (Setup.hs), cabal-v2, and
    GitHub CI setups.

  ## v0.8.3.0 (2023-05-06)

  Release v0.8.3.0

  - Add `[profile?]` by default to dev-lang/ghc in RDEPEND

    Packages that require profiling and depend on the 'base' library
    (e.g. all of them) will need USE=profile on ghc.

  - Only add current ARCH to KEYWORDS

    No longer pass KEYWORDS forward from previous ebuilds. Only add
    current ARCH by default.

  ## v0.8.2.2 (2023-04-29)

  v0.8.2.2

  Set modern defaults for LocalInfo in Portage.Host (this will help in
  the event that askPortageq fails, such as on a clean stage3 chroot)

  ## v0.8.2.1 (2023-04-02)

  v0.8.2.1

  Allow Setup.hs to work without cabal-doctest

  ## v0.8.2.0 (2023-03-03)

  v0.8.2.0

  Update GHCCore dependency list:

  - Mark 'stm' as non-upgradeable, 'parsec' and 'text' as upgradeable
  - Update bundled version of 'process'
  - Add `ghc-9.2.*` entries
  - Remove ancient `<ghc-8.8` entries

  ## v0.8.1.0 (2023-02-16)

  v0.8.1.0

  - Revert change that adds dev-haskell/process to ebuilds

  ## v0.8.0.0 (2022-12-25)

  v0.8.0.0

  - Switch 'cabal' submodule to new 3.8 branch
  - Use new updateAction from cabal-install
  - Builds on ghc-9.2
  - Make process an upgradeable package

  Thanks-to: Miezhiko <Miezhiko@gmail.com>

  ## v0.7.3.1 (2022-12-07)

  Bump to v0.7.3.1

  - Support optparse-applicative-0.17

  ## v0.7.3.0 (2022-08-26)

  Add remote-id support for metadata.xml

  ## v0.7.2.1 (2022-07-23)

  Release v0.7.2.1

  ## v0.7.2 (2022-07-19)

  Release v0.7.2

  Main change is automated hackage revision
  handling when using 'hackport merge'.

  ## v0.7.1.2 (2022-07-17)

  Release version 0.7.1.2

  Main user-facing change is the removal of repoman.

  ## v0.7.1.1 (2022-02-19)

  Tag version 0.7.1.1: minor .cabal file fixes

  ## v0.7.1 (2022-02-19)

  Tag version 0.7.1. Main changes include:

  - ghc-9.0.2 library detection and bundled library changes
  - bumped and patched submodules for compatibility with newer deps
  - miscellaneous changes to test-suite, http-only websites list, docs
    and .cabal file.

  ## v0.7 (2021-07-10)

  release 0.7

  ## v0.6.7 (2020-12-18)

  release v0.6.7

  ## v0.6.6 (2020-07-27)

  Release v0.6.6

  Changes:

  * Add `Hspec` test suite, migrating older `HUnit` tests to `Hspec`.

    There are currently 55 tests validating parsers, `metadata.xml`
    generators, licence converters and more to mitigate against
    unintended regressions

  * Add `doctest` test suite to validate code comments.

    Although hackport is not a library, code comments are still
    important. Where we have code examples, let's make sure they are
    correct

  * Comment the code in many places

  * Refactor code, such as splitting `Merge.hs` between itself and
    `Merge/Utils.hs`, applying some hlint suggestions, and addressing
    some compiler warnings

  * Fix a bug in the `Suffix` parser

  * Raise `base` lower bound to 4.9 (hackport has not been able to build
    on `base-4.8` for many versions)

  * Add GitHub CI for the GHC versions 8.0 -> 8.10 inclusive

  * Set licence to GPL-3 in `.cabal` file, which it always was

  * Rebase onto `Cabal-3.4` and `hackage-security-0.6.0.1` submodules

  * Improve licence handling to more accurately generate the correct
    licence string where possible. This also fixes a regression which
    snuck in after a previous `Cabal` submodule upgrade, which would
    generate invalid GPL licence strings if the package's `.cabal` file
    used a `SPDX` licence identifier such as `GPL-<v>-or-later`

  * Automate the addition of new USE flags into an existing
    `metadata.xml`.

    This new functionality alerts the user to the new `USE` flags (if
    any), and overwrites the existing `metadata.xml` with the union of
    the existing and new `USE` flags. This also updates any `USE` flag
    descriptions, as well as any other updated `metadata.xml` elements

  * Add `GHC-8.8.4` library detection.

  ## v0.6.5 (2020-07-01)

  Release 0.6.5

  ## v0.6.4 (2020-01-31)

  Release 0.6.4

  ## v0.6.3 (2020-01-19)

  hackport.cabal: release 0.6.3

  Signed-off-by: Jack Todaro <jack.todaro@posteo.net>

  ## v0.6.2 (2020-01-04)

  release v0.6.2

  ## v0.6.1 (2019-10-07)

  Release v0.6.1

  ## v0.6 (2019-02-04)

  New in 0.6:

  * Builds with GHC 8.6
  * Generates EAPI 7-compliant ebuilds
  * Generates USE flags in the metadata.xml if the file does not yet exist.

  ## v0.5.6 (2018-05-30)

  release 0.5.6

  ## v0.5.5 (2018-03-15)

  release v0.5.5

  ## v0.5.4 (2017-09-23)

  Release v0.5.4

  ## v0.5.3 (2017-05-24)

  release v0.5.3

  ## v0.5.2 (2017-02-25)

  tag v0.5.2

  ## v0.5.1 (2016-11-12)

  release v0.5.1

  ## v0.5 (2016-04-20)

  release 0.5

  ## v0.4.7 (2016-02-06)

  release 0.4.6

  ## v0.4.6 (2015-08-12)

  release 0.4.6

  ## v0.4.5 (2015-03-28)

  release 0.4.5

  ## v0.4.4 (2014-09-26)

  release v0.4.4

  ## v0.4.3 (2014-07-24)

  release 0.4.3

  ## v0.4.2 (2014-05-29)

  release 0.4.2

  ## v0.4.1 (2014-05-29)

  release 0.4.1

  ## v0.4 (2014-04-05)

  release v0.4

  ## v0.3.6 (2014-01-07)

  tag release v0.3.6

  ## v0.3.5 (2013-11-28)

  hackport.cabal: tag 0.3.5

  Signed-off-by: Sergei Trofimovich <slyfox@gentoo.org>

  ## v0.3.4 (2013-09-14)

  release 0.3.4

  ## v0.3.3 (2013-07-31)

  release 0.3.3

  ## v0.3.2 (2013-01-01)

  release v0.3.2

  ## v0.3.1 (2012-11-28)

  release 0.3.1

  ## v0.3 (2012-10-17)

  release 0.3

  ## v0.2.19 (2012-09-24)

  release 0.2.19

  ## v0.2.18 (2012-05-29)

  release 0.2.18

  ## v0.2.17 (2012-02-29)

  release 0.2.17

  ## v0.2.16 (2012-02-16)

  release 0.2.16

  ## v0.2.15 (2012-02-05)

  release 0.2.15

  ## v0.2.14 (2011-11-28)

  release 0.2.13
changelog-type: markdown
description: "Hackport\n========\n\n.. image:: https://img.shields.io/hackage/v/hackport\n
  \  :target: https://hackage.haskell.org/package/hackport\n.. image:: https://github.com/gentoo-haskell/hackport/workflows/Haskell%20CI/badge.svg\n
  \  :target: https://github.com/gentoo-haskell/hackport/actions?query=workflow%3A%22Haskell+CI%22\n\nAbout\n-----\n\nHackport
  is a utility application for Gentoo Linux to ease the tasks for the\nHaskell Project.\n\nThe
  main purpose for Hackport is to interact with Hackage and create\nEbuilds from Cabal
  packages. It also does handy functions to compare\nhackage, the overlay and the
  portage tree.\n\nQuick start\n-----------\n\n1. Build hackport binary by hand (or
  install it from haskell overlay).\n2. Setup hackport database into overlay you plan
  to merge new ebuilds:\n\n::\n\n    $ mkdir ~/overlays\n    $ cd ~/overlays\n    $
  git clone git://github.com/gentoo-haskell/gentoo-haskell.git\n    $ cd gentoo-haskell\n
  \   $ mkdir .hackport\n    $ hackport update\n    $ ls -1 .hackport/\n        00-index.tar\n
  \       00-index.tar.gz\n\n3. Add your ~/overlays/gentoo-haskell to PORTDIR_OVERLAY
  in /etc/make.conf.\n\nDone! Now you can `hackport merge <package-name>` to get an
  ebuild merged to\nyour overlay!\n\nFeatures\n--------\n\n    'hackport update'\n
  \       Update the local copy of hackage's package list. You should run this\n        every
  once in a while to get a more recent copy.\n\n    'hackport list [FILTER]'\n        Print
  packages from hackage, with an optional substring matching.\n\n    'hackport merge
  <package>'\n        Create a Gentoo Linux Ebuild for hackage package named <package>.\n
  \       The category defaults to dev-haskell, but is overridden if an older\n        version
  has been merged previously to another category. The category\n        can also be
  overridden with the syntax category/package. Example:\n\n            $ hackport
  merge x11-wm/xmonad\n\n        Hackport will make an ebuild that uses the haskell-cabal
  eclass, and\n        set the following properties:\n\n        PN (package name)\n
  \           Package name converted into lower case\n        PV (package version)\n
  \           Package version with tags dropped.\n        KEYWORDS\n            Defaults
  to ~amd64 ~x86\n        CABAL_FEATURES\n            Populates the following features
  (see haskell-cabal.eclass):\n            lib, profile, haddock, hoogle, hscolour,
  test-suite\n        DEPEND\n            GHC dependency defaults to >=dev-lang/ghc-6.6.1.\n
  \           Cabal dependency is fetched from Cabal field 'Cabal-Version'.\n            All
  other package dependencies are converted into gentoo syntax.\n            Range
  dependencies are flattened and usually needs manual\n            tweaking.\n        DESCRIPTION\n
  \           From Synopsis if it is non-empty, otherwise Description.\n        HOMEPAGE\n
  \           From Homepage\n        SRC_URI\n            From package url\n        LICENSE
  \n            From cabal license converted into gentoo licenses\n        SLOT\n
  \           Defaults to \"0\"\n\n    'hackport diff [missing|additions|newer|common]'\n
  \       Prints a list showing a diff between hackage and the overlay.\n        For
  each package it shows the latest version in both hackage and the\n        overlay.\n\n\n
  \       Optional parameters:\n            'all', the default action\n                List
  all packages.\n            'missing'\n                List packages that exist in
  hackage but not in the overlay,\n                or where the hackage version is
  more recent.\n            'additions'\n                List packages only in the
  overlay, or where the overlay has\n                a more recent version.\n            'newer'\n
  \               List packages where hackage has a more recent version.\n            'common'\n
  \               List packages where hackage and the overlay has the same\n                version.\n\n
  \   'hackport status [toportage]'\n        Provides an overview comparing the overlay
  to the portage tree.\n        It will tell you, for each package and version, if
  the package exist\n\n            - only in the portage tree\n            - only
  in the overlay\n            - both in the portage tree and the overlay\n            -
  both in the portage tree and the overlay,\n                but the ebuilds are not
  identical\n\n        Optional parameters:\n            '--to-portage'\n                Only
  print packages that are likely to be interesting to\n                move to the
  portage tree.\n                It will print packages when they exist in both portage
  and\n                the overlay, and:\n                    - the ebuilds differ,
  or\n                    - the overlay has a more recent version\n\n    'hackport
  make-ebuild <category> <path/to/package.cabal>'\n        Generates standalone .ebuild
  file from .cabal spec and stores result\n        to the overlay into <category>/<package>\n
  \       Option is useful for not-on-hackage packages and for debug purposes.\n\n-------\n\n
  \   Henning GÃ¼nther\n    Duncan Coutts\n    Lennart Kolmodin\n"
description-type: text
hash: a43191712007e1a3e5810d4bf959dcd87795b3df72ec62a6ef63e696506eaa0b
homepage: https://github.com/gentoo-haskell/hackport#readme
latest: 0.8.4.0
license-name: GPL-3.0-or-later
maintainer: Gentoo Haskell team <haskell@gentoo.org>
synopsis: Hackage and Portage integration tool
test-bench-deps:
  Glob: '>=0'
  HUnit: '>=0'
  QuickCheck: '>=2.0'
  array: '>=0'
  async: '>=0'
  base: '>=0'
  base-compat: '>=0'
  binary: '>=0'
  bytestring: '>=0'
  cabal-doctest: '>=0'
  containers: '>=0'
  deepseq: '>=0'
  directory: '>=0'
  doctest: '>=0.8'
  extensible-exceptions: '>=0'
  filepath: '>=0'
  hackport: '>=0'
  hackport-external-libs: '>=0'
  hspec: '>=2.0'
  network-uri: '>=0'
  parallel: '>=0'
  parsec: '>=0'
  pretty: '>=0'
  process: '>=0'
  split: '>=0'
  template-haskell: '>=0'
  text: '>=0'
  time: '>=0'
  transformers: '>=0'
  unix: '>=0'
  xml: '>=0'
