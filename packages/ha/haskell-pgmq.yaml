all-versions:
- 0.1.0.0
author: Gargantext
basic-deps:
  aeson: '>=1.4 && <2.3'
  base: '>=4.17.2.0 && <5'
  bytestring: '>=0.11 && <0.13'
  haskell-pgmq: '>=0'
  postgresql-simple: '>=0.6 && <0.8'
  safe: '>=0.3 && <0.4'
  text: '>=1.2 && <2.2'
  time: '>=1.10 && <1.15'
  units: '>=2.4 && <2.5'
changelog: |-
  # Changelog

  All notable changes to this project will be documented in this file.

  The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),
  and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).

  ## [Unreleased]

  ## [0.1.0.0] - 2024-XX-XX

  ### Added
  - Initial Haskell interface for Tembo's PGMQ PostgreSQL extension
  - Core modules: `Database.PGMQ`, `Database.PGMQ.Simple`, `Database.PGMQ.Types`
  - Helper modules: `Database.PGMQ.Helpers`, `Database.PGMQ.Schema`
  - Simple test executable (`simple-test`) for basic functionality testing
  - Simple exception catching executable (`simple-exception-catch`)
  - Integration test suite with PostgreSQL
  - Support for PostgreSQL message queue operations
  - Documentation and examples in README

  ### Dependencies
  - postgresql-simple for database connectivity
  - aeson for JSON handling
  - Various supporting libraries (bytestring, text, time, units, safe)

  [Unreleased]: https://gitlab.iscpif.fr/gargantext/haskell-pgmq/compare/v0.1.0.0...HEAD
  [0.1.0.0]: https://gitlab.iscpif.fr/gargantext/haskell-pgmq/releases/tag/v0.1.0.0
changelog-type: markdown
description: |
  # Haskell PGMQ

  This is a Haskell interface to Tembo's
  [pgmq](https://github.com/tembo-io/pgmq) PostgreSQL extension.

  The API design is based on [Elixir PGMQ](https://hexdocs.pm/pgmq/Pgmq.html) bindings.

  ## Running test cases

  There is a binary located at [./bin/simple-test/Main.hs](./bin/simple-test/Main.hs), which contains all test cases
  for the basic module `Database.PGMQ.Simple`.

  First, choose which container image to use:
  ```shell
  export PGMQ_CONTAINER=quay.io/tembo/pg16-pgmq:latest
  ```
  However, with the above container, some tests might fail because certain functions
  throw errors when a table is not present (e.g. `pgmq.drop_queue`).

  Some fixes are available in our custom repository:
  https://github.com/garganscript/pgmq
  and you can use:
  ```shell
  export PGMQ_CONTAINER=cgenie/pgmq:16-1.3.3.1
  ```

  To run the tests, first start a PGMQ container:
  ```shell
    podman run --rm --name pgmq -e POSTGRES_PASSWORD=postgres -p 5432:5432 $PGMQ_CONTAINER
  ```
  or with Docker:
  ```shell
    docker run --rm --name pgmq -e POSTGRES_PASSWORD=postgres -p 5432:5432 $PGMQ_CONTAINER
  ```
  Then, execute the tests:
  ```shell
    cabal v2-test
  ```
  The tests should print debug information and complete without errors.
description-type: markdown
hash: ab9bcaaa602cca75399aba29c1a5bdbfe7956a892261d014df22033a7144ac40
homepage: https://gitlab.iscpif.fr/gargantext/haskell-pgmq
latest: 0.1.0.0
license-name: AGPL-3.0-or-later
maintainer: gargantext@iscpif.fr
synopsis: Haskell interface for Tembo's PGMQ PostgreSQL extension
test-bench-deps:
  aeson: '>=1.4 && <2.3'
  base: '>=4.17.2.0 && <5'
  containers: '>=0.6 && <0.8'
  haskell-pgmq: '>=0'
  hspec: '>=2.11 && <3'
  postgresql-simple: '>=0.6 && <0.8'
  random-strings: ==0.1.1.0
  stm: '>=2.5.3 && <3'
  tasty: '>=1.5 && <1.6'
  tasty-hspec: '>=1.2.0 && <2'
  text: '>=1.2 && <2.2'
