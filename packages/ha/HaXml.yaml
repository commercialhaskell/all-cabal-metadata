homepage: https://github.com/HaXml/HaXml
changelog-type: markdown
hash: f440aadea5cc32e931a0fbc3a4d92f1e28cdeb4a347eafe8e4e42f375734dbdc
test-bench-deps: {}
maintainer: Jens Petersen <juhpetersen@gmail.com>
synopsis: Utilities for manipulating XML documents
changelog: |
  ## 1.25.9 (2022-04-10)
  - fix 1.25.7 regression in Xtract.Parse (#7 by Isaac van Bakel)
  - comment typo fixes (#6 by Eric Lindblad)
  - include README file

  ## 1.25.8 (2021-11-22)
  - version the License tag in HaXml.cabal as LGPL-2.1 (#3)
  - allow building with ghc 9.2 (#4)

  ## 1.25.7 (2021-10-15)
  - many hlint fixes
  - fix the rendering of time durations (#1)

  ## 1.25.6 (2021-09-26)

  - GHC 8.8, 8.10, and 9.0 compatibility

  ## 1.25.5 (2018-10-30)

  - GHC-8.4 and GHC-8.6 compatibility
    - Monoids have Semigroup instances
basic-deps:
  bytestring: '>=0.9.1.10 && <0.12'
  base: '>=4.3.1.0 && <4.18'
  HaXml: -any
  filepath: '>=1.2.0.0 && <1.5'
  containers: '>=0.4.0.0 && <0.7'
  polyparse: '>=1.12.1 && <1.14'
  random: '>=1.0 && <1.3'
  pretty: '>=1.0.1.2 && <1.2'
  directory: -any
all-versions:
- 1.13.2
- 1.13.3
- '1.19'
- 1.19.1
- 1.19.2
- 1.19.3
- 1.19.4
- 1.19.5
- 1.19.6
- 1.19.7
- '1.20'
- 1.20.1
- 1.20.2
- '1.22'
- 1.22.1
- 1.22.2
- 1.22.3
- 1.22.4
- 1.22.5
- '1.23'
- 1.23.1
- 1.23.2
- 1.23.3
- '1.24'
- 1.24.1
- '1.25'
- 1.25.1
- 1.25.2
- 1.25.3
- 1.25.4
- 1.25.5
- 1.25.6
- 1.25.7
- 1.25.8
- 1.25.9
author: Malcolm Wallace <Malcolm.Wallace@me.com>
latest: 1.25.9
description-type: text
description: "        HaXml - Haskell utilities for processing XML\n        --------------------------------------------\n\nInstallation
  instructions:\nWe currently support nhc98, ghc, and Hugs.  The automatic configuration\ndetects
  which compilers/interpreters you have, and prepares a build\ntree for each.  Installation
  requires write-permission on the system\ndirectories of the compiler/interpreter
  - the libraries and interfaces\ncan then be used as \"-package HaXml\" (for ghc/nhc98
  - no extra options\nrequired for Hugs).  The standalone tools are installed to a
  directory of\nyour choice.\n\nFor newer compilers, use Cabal to build and install:\n\n
  \   cabal install\n\nor \n\n    runhaskell Setup.hs configure\n    runhaskell Setup.hs
  build\n    runhaskell Setup.hs install\n\nFor older compilers, use the traditional
  sequence:\n\n    ./configure\n    make\n    make install\n\nOptions to configure
  are:\n    --buildwith=...  e.g. ghc-6.2,        to build for a specific compiler\n
  \   --prefix=...     e.g. /usr/local/bin, installation location for HaXml tools\n\nComplaints
  to:  :-)\n    Malcolm.Wallace@me.com\n\nP.S.\n    For those building on Windows
  /without/ Cygwin, you can avoid the need\n    for configure/make steps by simply
  running the minimal build script in\n        Build.bat\n    You will need to edit
  it for the location of your compiler etc.\n\n----\nWhat this package contains:\n\n
  \ docs/\t\t\tSome rudimentary HTML documentation about the libraries.\n  docs/HaXml/\t\tHaddock-generated
  API documentation.\n  examples/\t\tSome small examples of how the libraries/tools
  are used.\n\n  src/Text/XML/HaXml/\tNumerous support modules for processing XML.\n\t\t\t(The
  main APIs are as follows:)\n\tTypes.hs\tDefines a (generic) representation for any
  XML document.\n\tParse.hs\tParses an XML document into the generic representation.\n\tParseLazy.hs\tA
  more space-efficient parser.\n\tPretty.hs\tPretty-prints an XML document.\n\tValidate.hs\tValidates
  an XML document against a DTD.\n\tCombinators.hs\tProvides the combinators described
  in the ICFP'99 paper\n\t\t\ttogether with some other useful functions.\n\tSAX.hs\t\tA
  simple SAX-like stream-event-parser.\n\tWrappers.hs\tSimple top-level wrappers for
  processing a single\n\t\t\tdocument using the combinators.\n\tXmlContent.hs\tA replacement
  class for Show/Read, to translate Haskell\n\t\t\tvalues to/from XML documents.  Can
  be derived by DrIFT\n\t\t\tand/or DtdToHaskell.\n\tTypeMapping.hs\tDefines an explicit
  representation for Haskell types,\n\t\t\tallowing generation of a DTD from a Haskell
  value.\n\tOneOfN.hs\tSome support types (OneOf2 - OneOf20) for code\n\t\t\tgenerated
  by tools/DtdToHaskell.\n\n  src/Text/XML/HaXml/Html\tExtra support modules for processing
  HTML.\n\tParse.hs\tAn error-correcting HTML parser, produces the generic\n\t\t\tXML
  representation.\n\tPretty.hs\tAn HTML-specific pretty-printer.\n\tGenerate.hs\tSome
  useful combinators for generating HTML content.\n\n  src/Text/XML/HaXml/Schema\tExtra
  support modules for processing Schema.\n\tXSDTypeModel.hs\t\tA representation of
  the datatype model of\n\t\t\t\tXml Schema in terms of XSD concepts.\n\tHaskellTypeModel.hs\tA
  representation of the datatype model of\n\t\t\t\tXml Schema in terms of Haskell
  datatypes.\n\tParse.hs\t\tParser from an XSD document to the XSD\n\t\t\t\ttype model
  above.\n\tTypeConversion.hs\tTranslate from the XSD model to the Haskell\n\t\t\t\tmodel.\n\tPrettyHaskell.hs\tGenerate
  Haskell sourcecode from the Haskell\n\t\t\t\ttype model.\n\n  src/tools/\t\tStandalone
  tools based on the library above.\n\tDtdToHaskell\tTranslates an XML doc containing
  a DTD into a Haskell\n\t\t\tmodule containing data/newtype definitions.\n\tXtract\t\tA
  structured 'grep' for XML docs, loosely based on\n\t\t\tthe XPath and XQL query
  languages.\n\tValidate\tA simple validation tool for XML docs.  Give it a DTD\n\t\t\tfile
  and an XML file, and it reports all validation\n\t\t\terrors it can find.\n\tCanonicalise\tA
  'cat' filter for XML docs, shows our \"standard\"\n\t\t\tparsing and pretty-printing
  behaviour.\n\tMkOneOf\t\tGenerates a OneOfN type, given an N, together with\n\t\t\tits
  required instance of XmlContent.  Sometimes types\n\t\t\tlarger than OneOf20 are
  required in code generated by\n\t\t\tDtdToHaskell.\n\tXsdToHaskell\tTranslates an
  XSD schema into a Haskell module.\n\tFpMLToHaskell\tTranslates the set of XSD schemas
  defining the FpML\n\t\t\tlanguage into a set of Haskell modules.\n\n  src/Text/XML/HaXml/Xtract\tInternal
  APIs of the Xtract tool.\n\tParse.hs\tParse an XPath query to produce a filter.\n\tCombinators.hs\tModified
  version of the standard combinators.\n\n  src/Text/XML/HaXml/DtdToHaskell\tInternal
  APIs of the DtdToHaskell tool.\n\tTypeDef.hs\tA representation of the Haskell types
  corresponding\n\t\t\tto an XML DTD, and a pretty printer for them.\n\tConvert.hs\tConvert
  the standard DTD representation to the\n\t\t\tHaskell-like TypeDef representation.\n\tInstance.hs\tGenerate
  appropriate XmlContent class instances for\n\t\t\tthe TypeDefs.\n\n----\n"
license-name: LGPL-2.1-only
