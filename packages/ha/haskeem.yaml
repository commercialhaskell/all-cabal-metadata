all-versions:
- 0.6.10
- 0.7.0
- 0.7.4
- 0.7.5
- 0.7.7
- 0.7.9
- 0.7.12
- 0.7.16
author: Uwe Hollerbach <uh@alumni.caltech.edu>
basic-deps:
  base: '>=4 && <5'
  containers: '>=0'
  directory: '>=0'
  haskeline: '>=0'
  haskell98: '>=0'
  mtl: '>=0'
  network: '>=0'
  old-time: '>=0'
  parsec: '>=0'
  process: '>=0'
  random: '>=0'
  unix: '>=0'
changelog: ''
changelog-type: ''
description: |
  This is haskeem, a small scheme interpreter. It lives on the web at

      http://www.korgwal.com/haskeem/

  You should be able to build it with

      cabal configure
      cabal build

  Once you have done so, find the haskeem executable and run it.
  At the "lisp> " prompt, type (assuming you are still in the top-level
  haskeem directory)

      (load "stdlib.scm")
      (load "selftest.scm")

  The first command loads haskeem's standard library, and the second command
  runs the self-test. Assuming that all works, you can automate some of this:
  copy the haskeem executable and the stdlib.scm file to some standard
  location(s), and then set the environment variable HASKEEM_INIT to the
  absolute path of the stdlib.scm file. I store both the haskeem executable
  and the stdlib.scm file in /home/uwe/tools, which is in my PATH, and thus
  I set HASKEEM_INIT to /home/uwe/tools/stdlib.scm. Then I (and you) can launch
  haskeem from any directory.

  If you do not have haskeline installed, don't panic! There is an alternate
  version of the main module in the file haskeem_readline.hs. That provides
  either a binding to the gnu readline library, or an alternate REPL with no
  line-editing capability at all. You'll need to rename this to haskeem.hs,
  edit it to select which of the two you want, and rebuild.

  Sorry, no bindings to editline.

  Enjoy!
description-type: text
hash: 56ba74c8423bc18f72aad7223c96f25b121bde501674a7678daa943ad604492c
homepage: http://www.korgwal.com/haskeem/
latest: 0.7.16
license-name: LicenseRef-GPL
maintainer: Uwe Hollerbach <uh@alumni.caltech.edu>
synopsis: A small scheme interpreter
test-bench-deps: {}
