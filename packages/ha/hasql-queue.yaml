all-versions:
- 1.0.1
- 1.0.1.1
- 1.2.0.0
- 1.2.0.1
- 1.2.0.2
author: Jonathan Fischoff
basic-deps:
  aeson: '>=0'
  async: '>=0'
  base: '>=4.7 && <5'
  base64-bytestring: '>=0'
  bytestring: '>=0'
  cryptohash-sha1: '>=0'
  exceptions: '>=0'
  hasql: '>=0'
  hasql-queue: '>=0'
  here: '>=0'
  monad-control: '>=0'
  postgresql-libpq: '>=0'
  postgresql-libpq-notify: '>=0.2.0.0'
  random: '>=0'
  resource-pool: '>=0'
  stm: '>=0'
  text: '>=0'
  time: '>=0'
  tmp-postgres: '>=0'
  transformers: '>=0'
changelog: |
  Changelog for hasql-queue
  - 1.2.0.2
    - Better partial index #104

  - 1.2.0.1
    - Update README.md

  -1.2.0.0
    - Escape notification channel #100
    - Remove dequeued count from benchmarks #99
    - Document new api #98
    - Create teardown for migration #96
    - Extend API to use schemas #95
    - Add `delete` to the `AtLeastOnce` APIs #92
    - Change `failed` function to `failures` and return all `PayloadIds` #91
    - Reorg API #89
    - Use a compound index to make the partial index work #86
    - Specialize single element dequeue #84
    - Delete instead of changing the state to dequeued #82
    -


  - 1.0.1.1
    - Fixed cabal meta data and copyright

  - 1.0.1
    - First release!
changelog-type: markdown
description: |
  [![Travis CI Status](https://travis-ci.org/jfischoff/hasql-queue.svg?branch=master)](http://travis-ci.org/jfischoff/hasql-queue)

  # hasql-queue

  This module utilizes PostgreSQL to implement a durable queue for efficently processing payloads.

  Typically a producer would enqueue a new payload as part of larger database transaction

  ```haskell
  createAccount userRecord = transaction Serializable Write $ do
    createUser userRecord
    enqueue "queue_channel" emailEncoder [makeVerificationEmail userRecord]
  ```

  In another thread or process the consumer would drain the queue.

  ```haskell
    -- Wait for a single new record and try to send the email 5 times for giving
    -- up and marking the payload as failed.
    forever $ withDequeue "queue_channel" conn emailDecoder 5 1 $
      mapM_ sendEmail
  ```
description-type: markdown
hash: a02aea32f1bc8361cfd9b69abdb201ee68689fb4e721426ee50a9a3af05d72e5
homepage: https://github.com/jfischoff/hasql-queue#readme
latest: 1.2.0.2
license-name: BSD-3-Clause
maintainer: jonathangfischoff@gmail.com
synopsis: A PostgreSQL backed queue
test-bench-deps:
  aeson: '>=0'
  async: '>=0'
  base: '>=4.7 && <5'
  base64-bytestring: '>=0'
  bytestring: '>=0'
  cryptohash-sha1: '>=0'
  exceptions: '>=0'
  hasql: '>=0'
  hasql-queue: '>=0'
  here: '>=0'
  hspec: '>=0'
  hspec-core: '>=0'
  hspec-expectations-lifted: '>=0'
  monad-control: '>=0'
  postgresql-libpq: '>=0'
  postgresql-libpq-notify: '>=0.2.0.0'
  random: '>=0'
  resource-pool: '>=0'
  split: '>=0'
  stm: '>=0'
  text: '>=0'
  time: '>=0'
  tmp-postgres: '>=0'
  transformers: '>=0'
