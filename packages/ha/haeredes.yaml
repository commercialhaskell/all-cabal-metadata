homepage: http://michael.orlitzky.com/code/haeredes.xhtml
changelog-type: ''
hash: 893da7a9000720d42fc50ffb456c4f1416577d7e0a706f0df7cfd24937cf992e
test-bench-deps:
  filemanip: '>=0.3.6'
  base: '>=4.15 && <5.0'
  process: '>=1.1'
  doctest: '>=0.9'
maintainer: Michael Orlitzky <michael@orlitzky.com>
synopsis: Confirm delegation of NS and MX records.
changelog: ''
basic-deps:
  bytestring: '>=0.10'
  base: '>=4.15 && <5.0'
  cmdargs: '>=0.10'
  iproute: '>=1.2'
  parallel-io: '>=0.3'
  dns: '>=1.4'
all-versions:
- '0.1'
- 0.2.0
- 0.3.0
- 0.4.0
- 0.4.1
- 0.4.2
- 0.4.3
- 0.4.4
- 0.5.0
- 0.5.1
- 0.5.2
- 0.5.3
author: Michael Orlitzky
latest: 0.5.3
description-type: haddock
description: |-
  Haeredes is primarily useful for ISP network administrators.
  Customers will occasionally decide to switch hosts without alerting
  the current host; this can cause two problems:

    * With NS records, the previous host (at the very least) keeps
      hosting a DNS zone that does nothing. If that host uses their
      authoritative nameserver as a caching lookup server as well, it
      may return incorrect results to queries about the domain in
      question.

    * For MX records, the situation is slightly worse. Most mail servers
      will immediately accept mail for which the server thinks it is the
      ultimate destination. If a mail server is configured as the
      destination for a domain, but it is not the MX for that domain,
      then mail submitted to that server may possibly be lost. It is
      therefore important to remove domains from the old mail host as
      soon as the MX record is changed.

  Haeredes can alert administrators when NS/MX records are changed. More
  detail and usage examples can be found in the man page.

  /Examples/:

  Make sure example.com has the expected name servers,
  [ab].iana-servers.net:

  @
  $ echo \"example.com\" | haeredes a.iana-servers.net b.iana-servers.net
  @

  Check orlitzky.com against only one of the expected two nameservers:

  @
  $ echo \"orlitzky.com\" | haeredes dns1.viabit.com
  Domain \"orlitzky.com.\" delegates somewhere else: \"dns2.viabit.com.\"
  @

  Check a nonexistent domain (we provide no delegates, since we
  know .doesnt-exist will not be delegated):

  @
  $ echo \"foo.doesnt-exist\" | haeredes
  Domain \"foo.doesnt-exist.\" not delegated.
  @
license-name: AGPL-3.0-only
