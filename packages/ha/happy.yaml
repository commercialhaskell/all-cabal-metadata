homepage: https://www.haskell.org/happy/
changelog-type: text
hash: f99e612b29d68d784d7e193943a13466f0923de69452a2585081491efed0436b
test-bench-deps:
  base: -any
  process: -any
maintainer: Simon Marlow <marlowsd@gmail.com>
synopsis: Happy is a parser generator for Haskell
changelog: "-----------------------------------------------------------------------------\n1.20.0\n\n
  \       * Fix #121: the -i flag produces an .info file even if\n          the %expect
  pragma is violated\n        * Fix #131: qualify uses of Prelude functions in generated
  code\n        * Fix #161: drop fewer parse items when generating an .info file\n
  \       * Introduce the %shift directive to resolve shift/reduce\n          conflicts
  explicitly, useful in conjunction with %expect 0\n        * Remove the deprecated
  build configuration flag 'small_base'\n\n-----------------------------------------------------------------------------\n1.19.12\n\n
  \       * Fix for building with GHC 8.8.x\n        * Move custom Setup preprocessing
  steps into a separate\n          executable, like Alex\n\n-----------------------------------------------------------------------------\n1.19.11\n\n
  \       * Fix for building with GHC 8.6.x\n\n-----------------------------------------------------------------------------\n1.19.10\n\n
  \       * Fix polymorphic (rank-n) non-terminals\n        * Fix for GHC 8.8.1\n\n-----------------------------------------------------------------------------\n\n1.19.9\n\n
  \       * Fix cabal warnings\n        * Bump upper bounds\n        * Fix build with
  GHC 8.4.1-alpha\n\n-----------------------------------------------------------------------------\n1.19.8\n\n
  \       * Fix issue #94 (some grammars don't compile due to new type\n          signatures
  introduced to allow overloading to be used)\n\n-----------------------------------------------------------------------------\n1.19.7\n\n
  \       * Fix missing test suite files in the sdist\n\n-----------------------------------------------------------------------------\n1.19.6\n
  \       * Manually generate Parser.hs using Makefile before sdist,\n          to
  fix bootstrapping problems with cabal sandboxes & new-build\n        * Documentation
  fixes\n        * Fixed GLR support\n        * new option -p/--pretty prints the
  grammar rules (only) to a file\n        * Added generation of additional type signatures
  to enable use\n          of typeclasses in monadic parsers.\n\n-----------------------------------------------------------------------------\n1.19.5\n
  \       * fixes for GHC 7.10\n        * Code cleanups (thanks Index Int <vlad.z.4096@gmail.com>)\n\n-----------------------------------------------------------------------------\n1.19.4\n
  \       * fix for GHC 7.10 (Applicative/Monad, #19, #21)\n\n-----------------------------------------------------------------------------\n1.19.3\n
  \       * fix for GHC 7.2 (#16)\n\n-----------------------------------------------------------------------------\n1.19.2\n
  \       * fixes for clang (XCode 5)\n\n-----------------------------------------------------------------------------\n1.19.1\n
  \       * repackaged to build with GHC 7.7+\n\n-----------------------------------------------------------------------------\n1.19\n
  \       * necessary changes to work with GHC 7.8\n\n-----------------------------------------------------------------------------\n1.18.10\n
  \       * Fix build with GHC 7.6\n\n-----------------------------------------------------------------------------\n1.18.8\n
  \       * Fix a packaging bug (cabal-install-0.10.2 didn't put the\n          Happy-generated
  files in the sdist)\n\n-----------------------------------------------------------------------------\n1.18.7\n\n
  \       * Fix a bug in error handling when using %monad without %lexer\n\n-----------------------------------------------------------------------------\nChanges
  from version 1.17 to 1.18\n\n        * New feature: EBNF-style paramterized macros,
  thanks to\n          Iavor Diatchki.\n        * Works with Cabal 1.2, 1.4 and 1.6\n
  \       * A few minor bugfixes\n\n-----------------------------------------------------------------------------\nChanges
  from version 1.16 to 1.17\n\n        * Cabal 1.2 is required\n        * Works with
  upcoming GHC 6.8.1\n        * Fix the 'parE' bug (poor error message for errors
  in the grammar)\n        * Some performance improvements to Happy itself\n\n-----------------------------------------------------------------------------\nChanges
  from version 1.15 to 1.16\n\n\t* Switch to a Cabal build system: you need a recent
  version of Cabal\n\t  (1.1.6 or later).  If you have GHC 6.4.2, then you need to
  upgrade\n\t  Cabal before building Happy.  GHC 6.6 is fine.\n\n\t* New %error directive\n\n\t*
  New production forms: {%% .. } and {%^ .. }\n\n\t* Added Attribute Grammar support,
  by Robert Dockins\n\n-----------------------------------------------------------------------------\nChanges
  from version 1.14 to 1.15\n\n\t* New %expect directive\n\t* the list of tokens passed
  to happyError now includes the current\n          token (not %lexer).\n\t* added
  support for ambiguous grammars via Generalized LR parsing\n\t* added %partial to
  indicate a parser that can return a result\n\t  before EOF is reached.\n\n-----------------------------------------------------------------------------\nChanges
  from version 1.13 to 1.14\n\n\t* New meta-variable $> represents the rightmost token.\n\n\t*
  Happy's OPTIONS pragma is merged with an existing one in\n\t  the grammar file,
  if any.\n\n-----------------------------------------------------------------------------\nChanges
  from version 1.11 to 1.13\n\n\t* Support for newer versions of GHC (>= 5.04).\n\n\t*
  Addition of an experimental flag: --strict.\n\n-----------------------------------------------------------------------------\nChanges
  from version 1.10 to 1.11\n\n\t* tokens no longer have a default precedence - if
  you \n\t  want a token to have a precedence, you have to declare it.\n\n\t* bugfix
  to templates for GHC on 64-bit platforms.\n\n-----------------------------------------------------------------------------\nChanges
  from version 1.9 to 1.10\n\n\t* bugfixes, and minor performance improvements,\n\n\t*
  most of the examples work again.\n\n-----------------------------------------------------------------------------\nChanges
  from version 1.8 to 1.9\n\n\t* A grammar may now contain several entry points, allowing\n\t
  \ several parsers to share parts of the grammar.\n\n\t* Some bugfixes.\n\n-----------------------------------------------------------------------------\nChanges
  from version 1.6 to 1.8\n\n      * Parser table compression, and more efficient\n
  \       table encoding when used with GHC.  Large grammars\n        can now be compiled
  in much less time/space than\n        before using GHC.\n\n      * Yacc-style operator
  precedence, thanks to patches\n        from Hermann Oliveira Rodrigues <hermann@dcc.ufmg.br>\n
  \       and Josef Svenningsson <josefs@cs.chalmers.se>.\n\n      * A debug option
  which causes the generated parser to\n        print tracing information at each
  step during parsing.\n\n-----------------------------------------------------------------------------\nChanges
  from version 1.5 to 1.6\n\n* Now written in, and generates, Haskell 98.\n\n* Several
  bug fixes.\n\n* A new option, -c, generates parsers that use GHC's unsafeCoerce#
  \n  primitive to speed up parsing and cut down the binary size.\n  The -c option
  can only be used with the -g (GHC extensions) option.\n\n* Parsers generated with
  the -g option will compile to smaller binaries\n  now - some sources of parser-bloat
  were identified and squished.\n\n* Happy has a new Open Source license, based on
  the BSD license.\n\n* A sample Haskell parser using Happy is included.\n\n-----------------------------------------------------------------------------\nChanges
  from version 1.2 to version 1.5\n\n* Many bug fixes to the error recovery support,
  found by experimenting\n  with the Haskell grammar and layout.\n\n* Happy is about
  5 times faster on large examples, due to some\n  changes in the LALR(1) algorithms.\n\n-----------------------------------------------------------------------------\nChanges
  from version 0.9a to version 1.2\n\n* Supports Haskell 1.4\n\n* Lots of bugs fixed\n\n*
  Performance: the parser generator is at least 20% faster, and\n  generated parsers
  should be faster due to the replacement of a\n  data type with a newtype.\n\n* Simple
  error recovery: designed to be enough to implement the\n  Haskell layout rule.\n\n*
  Revamped monad support: the monad can now be threaded through\n  the lexer, enabling
  passing of state between the parser and the\n  lexer (handy for the Haskell layout
  rule), and consistent error\n  handling.\n\n* The %newline feature is removed, the
  same effect can be achieved\n  using the new monad support.\n\n-----------------------------------------------------------------------------\nChanges
  from version 0.8 to 0.9:\n\n* Happy should be much faster than before.\n\n* Generated
  parsers will be 5-10% smaller.\n\n* Happy now compiles with ghc-0.26.\n\n* Support
  for monadic parsers via %monad (see the documentation).\n\n* New syntax: previously\n\n\tf
  :: { <type> }\n\tf : ...\n\t  | ...\n\t  etc.\n\n  can now be written\n\n\tf ::
  { <type> }\n\t  : ...\n\t  | ...\n\t  etc.\n\n  (i.e. omit the extra 'f'.  It was
  always ignored anyway :-)\n\n* Miscellaneous bug fixes.\n"
basic-deps:
  base: <5
  array: -any
  containers: '>=0.4.2'
  mtl: '>=2.2.1'
all-versions:
- '1.18'
- 1.18.1
- 1.18.2
- 1.18.4
- 1.18.5
- 1.18.6
- 1.18.7
- 1.18.8
- 1.18.9
- 1.18.10
- 1.18.11
- 1.19.0
- 1.19.1
- 1.19.2
- 1.19.3
- 1.19.4
- 1.19.5
- 1.19.6
- 1.19.7
- 1.19.8
- 1.19.9
- 1.19.10
- 1.19.11
- 1.19.12
- 1.20.0
author: Andy Gill and Simon Marlow
latest: 1.20.0
description-type: markdown
description: |
  # Happy

  Happy is a parser generator for Haskell 98 (and later).

  [![Build Status](https://secure.travis-ci.org/simonmar/happy.svg?branch=master)](http://travis-ci.org/simonmar/happy)

  * https://www.haskell.org/happy/
  * http://hackage.haskell.org/package/happy

  Happy is built using Cabal.  First install GHC, then:
  ```
    $ cabal install
  ```
  If you obtained the development version from https://github.com/simonmar/happy/,
  install via:
  ```
    $ make sdist && cabal install
  ```

  Complete documentation can be found in the directory 'doc', in
  DocBook XML format.  To format the documentation, the DocBook-Tools
  suite (see http://wiki.docbook.org/DocBookTools)
  provides all the bits & pieces you need.  Alternatively, pre-formatted
  documentation is available from Happy's homepage (URL above).

  The directory 'examples' contains some example parsers that use Happy.

  For information on copying and distributing this program, see the file
  LICENSE in this directory.

  Bugs should be reported at: https://github.com/simonmar/happy/issues

  Happy Parsing!

  Simon.
license-name: BSD-2-Clause
