all-versions:
- 0.0.1
- 0.0.2
- 0.0.3
- 0.0.4
- 0.0.5
- 0.0.6
- 0.0.7
- 0.0.8
- 0.0.9
- 0.0.11
- 0.0.12
author: Joshua Grosso
basic-deps:
  aeson: '>=0'
  ansi-terminal: '>=0'
  axel: '>=0'
  base: '>=4.12 && <4.13'
  bytestring: '>=0'
  containers: '>=0'
  directory: '>=0'
  extra: '>=0'
  filepath: '>=0'
  freer-simple: '>=0'
  ghcid: '>=0'
  hashable: '>=0'
  haskell-src-exts: '>=0'
  hedgehog: '>=0'
  hpack: '>=0'
  lens: '>=0'
  lens-aeson: '>=0'
  megaparsec: '>=0'
  mono-traversable: '>=0'
  optparse-applicative: '>=0'
  polysemy: '>=0'
  polysemy-plugin: '>=0'
  prettyprinter: '>=0'
  process: '>=0'
  profunctors: '>=0'
  random: '>=0'
  split: '>=0'
  tasty: '>=0'
  tasty-discover: '>=0'
  tasty-golden: '>=0'
  tasty-hedgehog: '>=0'
  tasty-hspec: '>=0'
  tasty-hunit: '>=0'
  template-haskell: '>=0'
  text: '>=0'
  time: '>=0'
  transformers: '>=0'
  typed-process: '>=0'
  uniplate: '>=0'
  vector: '>=0'
  yaml: '>=0'
changelog: ''
changelog-type: ''
description: |
  #+OPTIONS: num:nil toc:nil
  #+STARTUP: inlineimages
  * Axel
    Haskell + Lisp (+ JVM/Node/..., soon) = Profit!

    See [[https://axellang.github.io]].
    #+CAPTION: Build Status
    [[https://travis-ci.org/axellang/axel.svg?branch=master]]
  ** Code Style
     Run ~scripts/format.sh~ to format code and ~scripts/lint.sh~ to maintain code quality.
  ** Running
     Run ~scripts/build.sh~ to build the project, ~stack run -- <arguments>~ to run the project, and ~scripts/test.sh~ to test the project.
  ** Examples
     See the `.axel` files in this repository for example Axel programs.
description-type: text
hash: 61405e7b8fdf94ff66f039cbf03ea0f9e111941b01ae25f50cc88a6f27ccfc10
homepage: https://github.com/axellang/axel#readme
latest: 0.0.12
license-name: BSD-3-Clause
maintainer: jgrosso256@gmail.com
synopsis: The Axel programming language.
test-bench-deps:
  aeson: '>=0'
  ansi-terminal: '>=0'
  axel: '>=0'
  base: '>=4.12 && <4.13'
  bytestring: '>=0'
  containers: '>=0'
  directory: '>=0'
  extra: '>=0'
  filepath: '>=0'
  freer-simple: '>=0'
  ghcid: '>=0'
  hashable: '>=0'
  haskell-src-exts: '>=0'
  hedgehog: '>=0'
  hpack: '>=0'
  lens: '>=0'
  lens-aeson: '>=0'
  megaparsec: '>=0'
  mono-traversable: '>=0'
  optparse-applicative: '>=0'
  polysemy: '>=0'
  polysemy-plugin: '>=0'
  prettyprinter: '>=0'
  process: '>=0'
  profunctors: '>=0'
  random: '>=0'
  split: '>=0'
  tasty: '>=0'
  tasty-discover: '>=0'
  tasty-golden: '>=0'
  tasty-hedgehog: '>=0'
  tasty-hspec: '>=0'
  tasty-hunit: '>=0'
  template-haskell: '>=0'
  text: '>=0'
  time: '>=0'
  transformers: '>=0'
  typed-process: '>=0'
  uniplate: '>=0'
  vector: '>=0'
  yaml: '>=0'
