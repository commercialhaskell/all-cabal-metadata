homepage: https://github.com/luispedro/hs-zstd
changelog-type: text
hash: 4c0a372251068eb6086b8c3a0a9f347488f08b570a7705844ffeb2c720c97223
test-bench-deps:
  bytestring: '>=0.9'
  test-framework: '>=0.4'
  base: '>=4.8 && <5'
  test-framework-quickcheck2: '>=0.2'
  criterion: -any
  ghc-prim: -any
  zlib: -any
  QuickCheck: '>=2.7'
  zstd: -any
maintainer: luis@luispedro.org
synopsis: Haskell bindings to the Zstandard compression algorithm
changelog: "Version 0.1.3.0 2021-09-26 by luispedro\n\t* Update to zstd 1.5.0 (PR
  #5 by Vanessa McHale)\n\nVersion 0.1.2.0 2020-05-21 by luispedro\n\t* Update to
  zstd 1.4.5 (PR #2 by Vanessa McHale)\n\nVersion 0.1.1.2 2019-05-20 by luispedro\n\t*
  Re-release v0.1.1.1 with updated info\n\nVersion 0.1.1.1 2019-05-18 by luispedro
  (released as hs-zstd)\n\t* Add missing files to package\n\nVersion 0.1.1.0 2019-05-18
  by luispedro (release as hs-zstd)\n\t* Fix bugs\n\t* Update to newer zstd version\n\n#
  0.1.0.0\n\n* Initial release\n"
basic-deps:
  bytestring: '>=0.9'
  base: '>=4.8 && <5'
  ghc-prim: -any
  deepseq: -any
all-versions:
- 0.1.0.0
- 0.1.1.2
- 0.1.2.0
- 0.1.3.0
author: Bryan O'Sullivan
latest: 0.1.3.0
description-type: markdown
description: |
  # Zstandard bindings for Haskell

  [![Travis](https://api.travis-ci.com/luispedro/hs-zstd.png)](https://travis-ci.com/luispedro/hs-zstd)

  This library provides Haskell bindings to the
  [Zstandard compression library](http://facebook.github.io/zstd/).

  Note that is now the official repositoryc for the
  [zstd](https://hackage.haskell.org/package/zstd) Haskell package. The original
  authors (Facebook) are no longer interested in maintaining it.

  The library is structured to provide several layers of abstraction.

  * For the simplest use cases, the top-level
    [`Zstd`](http://hackage.haskell.org/package/zstd/docs/Codec-Compression-Zstd.html)
    module is the best place to get started.

  * If you need to stream a large amount of data with a constant memory
    footprint, use the
    [`Zstd.Streaming`](http://hackage.haskell.org/package/zstd/docs/Codec-Compression-Zstd-Streaming.html)
    module. See also the
    [`conduit-zstd`](https://hackage.haskell.org/package/conduit-zstd) package
    which provides a very thin wrapper to integrate with the `conduit` library.
    If you need to use lazy bytestrings instead, see the
    [`Zstd.Lazy`](http://hackage.haskell.org/package/zstd/docs/Codec-Compression-Zstd-Lazy.html)
    module. This is built using the abstractions from the `Zstd.Streaming`
    module.

  * When your usage is dominated by lots of small messages (presumably
    using pre-computed compression dictionaries), use the
    [`Zstd.Efficient`](http://hackage.haskell.org/package/zstd/docs/Codec-Compression-Zstd-Efficient.html)
    module to amortize the cost of allocating and initializing context
    and dictionary values.

  ## Join in

  If you'd like to help improve the code, please
  [read the contribution guidelines](CONTRIBUTING.md).  This discusses
  how to file bugs and submit changes to the code itself.

  ## API documentation

  The APIs should be easy to understand and work with, and you can find
  [documentation on Hackage](http://hackage.haskell.org/package/zstd).
license-name: BSD-3-Clause
