homepage: http://snapframework.com/
changelog-type: ''
hash: aa6a9161afac5ac8fce029dc5c242b659a856f81f754f984b5069131429dbd15
test-bench-deps:
  snap: -any
  test-framework-hunit: '>=0.3.0.1 && <0.4'
  cereal: -any
  bytestring: -any
  clientsession: -any
  mwc-random: -any
  test-framework: '>=0.8.0.3 && <0.9'
  stm: -any
  fail: -any
  base: -any
  time: -any
  configurator: -any
  unordered-containers: -any
  text: -any
  map-syntax: -any
  syb: -any
  monad-control: -any
  filepath: -any
  test-framework-quickcheck2: '>=0.3.0.3 && <0.4'
  async: '>=2.0.1.5 && <2.3'
  lifted-base: -any
  dlist: -any
  HUnit: '>=1.2.5.2 && <1.7'
  smallcheck: '>=1.1.1 && <1.3'
  containers: -any
  snap-server: -any
  xmlhtml: -any
  lens: -any
  snap-core: -any
  http-streams: '>=0.7.1.1 && <0.9'
  directory-tree: -any
  mtl: -any
  pwstore-fast: -any
  hashable: -any
  transformers-base: -any
  attoparsec: -any
  transformers: -any
  heist: -any
  deepseq: -any
  QuickCheck: '>=2.4.2 && <2.15'
  test-framework-smallcheck: '>=0.2 && <0.3'
  aeson: -any
  directory: -any
maintainer: snap@snapframework.com
synopsis: Top-level package for the Snap Web Framework
changelog: ''
basic-deps:
  cereal: '>=0.3 && <0.6'
  bytestring: '>=0.9.1 && <0.12'
  clientsession: '>=0.8 && <0.10'
  mwc-random: '>=0.8 && <0.15'
  stm: '>=2.2 && <2.6'
  fail: '>=4.9 && <4.10'
  base: '>=4 && <4.18'
  time: '>=1.1 && <1.14'
  configurator: '>=0.1 && <0.4'
  unordered-containers: '>=0.1.4 && <0.3'
  text: '>=0.11 && <2.1'
  map-syntax: '>=0.2 && <0.4'
  monad-control: '>=0.3 && <1.1'
  filepath: '>=1.3 && <1.5'
  lifted-base: '>=0.2 && <0.3'
  dlist: '>=0.5 && <0.9'
  containers: '>=0.2 && <0.7'
  snap-server: '>=1.0 && <1.2'
  xmlhtml: '>=0.1 && <0.3'
  lens: '>=3.7.6 && <5.3'
  snap-core: '>=1.0 && <1.1'
  directory-tree: '>=0.10 && <0.13'
  mtl: '>=2.0 && <2.3'
  pwstore-fast: '>=2.2 && <2.5'
  hashable: '>=1.2.0.6 && <1.5'
  transformers-base: '>=0.4 && <0.5'
  attoparsec: '>=0.10 && <0.15'
  transformers: '>=0.2 && <0.6'
  heist: '>=1.1 && <1.2'
  aeson: '>=0.6 && <2.2'
  directory: '>=1.1 && <1.4'
all-versions:
- 0.3.0
- 0.3.0.1
- 0.3.1
- '0.4'
- 0.4.1
- 0.4.2
- 0.4.3
- 0.5.0
- 0.5.1
- 0.5.1.1
- 0.5.1.2
- 0.5.1.3
- 0.5.2
- 0.5.3
- 0.5.3.1
- 0.5.4
- 0.5.5
- 0.5.5.1
- 0.6.0
- 0.6.0.1
- 0.6.0.2
- '0.7'
- 0.8.0
- 0.8.0.1
- 0.8.0.2
- 0.8.1
- 0.9.0
- 0.9.0.1
- 0.9.1
- 0.9.1.1
- 0.9.2
- 0.9.2.1
- 0.9.2.2
- 0.10.0
- 0.10.0.1
- 0.11.0
- 0.11.1
- 0.11.2
- 0.11.2.1
- 0.11.2.2
- 0.11.3
- 0.11.3.1
- 0.12.0
- 0.12.1
- 0.13.0
- 0.13.0.1
- 0.13.0.2
- 0.13.0.3
- 0.13.0.4
- 0.13.1
- 0.13.1.1
- 0.13.1.2
- 0.13.2.0
- 0.13.2.1
- 0.13.2.2
- 0.13.2.3
- 0.13.2.4
- 0.13.2.5
- 0.13.2.6
- 0.13.2.7
- 0.13.2.8
- 0.13.2.9
- 0.13.3
- 0.13.3.1
- 0.13.3.2
- 0.14.0
- 0.14.0.1
- 0.14.0.2
- 0.14.0.3
- 0.14.0.4
- 0.14.0.5
- 0.14.0.6
- 0.14.0.7
- 1.0.0.0
- 1.0.0.1
- 1.0.0.2
- 1.1.0.0
- 1.1.1.0
- 1.1.2.0
- 1.1.3.0
- 1.1.3.1
author: |-
  Ozgun Ataman, Doug Beardsley,
  Gregory Collins, Carl Howells, Chris Smith
latest: 1.1.3.1
description-type: markdown
description: |
  Snap Framework [![Hackage Status](https://img.shields.io/hackage/v/snap.svg)](https://hackage.haskell.org/package/snap)
  ==============

  [![Build Status](https://travis-ci.org/snapframework/snap.svg?branch=master)](https://travis-ci.org/snapframework/snap)

  Snap is a simple and fast web development framework and server written in
  Haskell. For more information about Snap, read the `README.SNAP.md` or visit
  the Snap project website at http://www.snapframework.com/.

  ## Library contents

  This is top-level project for the Snap Framework, which contains:

    * a library allowing Snap applications to recompile actions on the
      fly in development mode, with no performance loss in production
      mode.

    * a "snaplet" API allowing web applications to be build from composable
      pieces.

  The command-line utility `snap` for creating initial Snap applications used to
  be a part of this package. As of version 1.0, the snap command-line utility is
  no longer provided by this package.  It is now provided by the package
  [`snap-templates`](https://github.com/snapframework/snap-templates).

  Building snap
  =============

  After you clone the repository, change to the newly created snap directory and
  run

      git submodule update --init --recursive
      ./init-sandbox.sh
      cabal install

  (You may want to look at pull.sh or pullLatestMaster.sh.)
  This updates all the Snap Framework dependencies to the correct version,
  creates a sandbox, and installs everything.  The snap library is built using
  [Cabal](http://www.haskell.org/cabal/) and
  [Hackage](http://hackage.haskell.org/packages/hackage.html).

  ## Building the Haddock Documentation

  The haddock documentation can be built using 'cabal haddock'.

  The docs get put in `dist/doc/html/`.


  ## Building the testsuite

  To build the test suite, run

      $ cabal clean
      $ cabal configure --enable-tests --enable-library-coverage
      $ cabal build
      $ cabal install --enable-tests

  From here you can invoke the testsuite by running:

      $ ./runTestsAndCoverage.sh


  The testsuite generates an `hpc` test coverage report in `dist/hpc`.


  ## Roadmap to Understanding Snaplets

  1. Read `Tutorial.lhs` which is in the `project_template/tutorial/src` directory of the `snap-templates` package.
  2. Generate and read the haddock docs.
  3. The test code has the nice property that it actually functions as a pretty good example app and covers a lot of the use cases.
  4. If you're interested in the implementation, read design.md.
license-name: BSD-3-Clause
