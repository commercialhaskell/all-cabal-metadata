all-versions:
- 0.1.1
- 0.1.2
- 0.2.1
- 0.2.2
- 0.2.3
- 0.2.4
- 0.2.5
- 0.2.6
- 0.2.7
- 0.2.7.1
- 0.2.8
- 0.2.8.1
- 0.2.9
- 0.2.10
- 0.2.11
- 0.2.12
- 0.2.13
- 0.2.14
- 0.2.15
- 0.2.15.1
- 0.2.16
- 0.3.0
- 0.3.1
- 0.3.1.1
- 0.4.0
- 0.4.0.1
- 0.4.0.2
- 0.4.1
- 0.4.2
- 0.4.3
- 0.5.0
- 0.5.1
- 0.5.1.1
- 0.5.1.2
- 0.5.1.3
- 0.5.1.4
- 0.5.2
- 0.5.3
- 0.5.3.1
- 0.5.4
- 0.5.5
- 0.6.0
- 0.6.0.1
- '0.7'
- 0.7.0.1
- 0.8.0
- 0.8.0.1
- 0.8.1
- 0.9.0
- 0.9.2
- 0.9.2.1
- 0.9.2.2
- 0.9.3
- 0.9.3.1
- 0.9.4.0
- 0.9.4.1
- 0.9.5.0
- 0.9.6.0
- 0.9.6.1
- 0.9.6.2
- 0.9.6.3
- 0.9.6.4
- 0.9.7.0
- 0.9.7.2
- 0.9.8.0
- 1.0.0.0
- 1.0.1.0
- 1.0.1.1
- 1.0.2.0
- 1.0.2.1
- 1.0.3.0
- 1.0.3.1
- 1.0.3.2
- 1.0.4.0
- 1.0.4.1
- 1.0.4.2
- 1.0.5.0
- 1.0.5.1
author: Snap Framework Authors (see CONTRIBUTORS)
basic-deps:
  HUnit: '>=1.2 && <2'
  attoparsec: '>=0.12 && <0.15'
  base: '>=4 && <5'
  bytestring: '>=0.9 && <0.13'
  bytestring-builder: '>=0.10.4 && <0.11'
  case-insensitive: '>=1.1 && <1.3'
  containers: '>=0.3 && <1'
  directory: '>=1 && <2'
  filepath: '>=1.1 && <2'
  hashable: '>=1.2.0.6 && <1.5'
  io-streams: '>=1.3 && <1.6'
  lifted-base: '>=0.1 && <0.3'
  monad-control: '>=1.0 && <1.1'
  mtl: '>=2.0 && <2.4'
  network: '>=2.6 && <4'
  network-uri: '>=2.6 && <2.7'
  old-locale: '>=1 && <2'
  random: '>=1 && <2'
  readable: '>=0.1 && <0.4'
  regex-posix: '>=0.95 && <1'
  text: '>=0.11 && <2.2'
  time: '>=1.0 && <1.15'
  transformers: '>=0.3 && <0.7'
  transformers-base: '>=0.4 && <0.5'
  unix-compat: '>=0.3 && <0.8'
  unordered-containers: '>=0.1.4.3 && <0.3'
  vector: '>=0.6 && <0.14'
changelog: |
  ## 1.0.5.0

  - Add `head` helper for `Snap.Test`
  - Add support for GHC 9
  - Expose Snap.Internal.Util.FileServe
  - Ensure parseHttpTime returns 0 on invalid input
  - Add test helper for HEAD requests
  - Misc version bumps

  ## 1.0.4.0
  - Allow `network` 3.0.

  ## 1.0.3.2
  - Allow `unix-compat` 0.5

  - Stop using deprecated Data.Map.insertWith'

  - Test with GHC 8.4.1

  ## 1.0.3.1
  - Allow `io-streams` 1.5.

  ## 1.0.3.0
  ### Added
  - Alternative file upload handling into Snap.Util.FileUploads

  ### Fixes
  - Fixed parsing of field values in multipart/form-data headers with encodings
    other than US-ASCII

  ## 1.0.2.1
  ### Dependencies
  - Allow `io-streams` 1.4.

  ## 1.0.2.0
  ### Added
  - Merged CORS functionality from snap-cors project into Snap.Util.CORS

  ### Dependencies
  - Bumped `time` dependency.

  ## 1.0.1.1
  ### Fixes
  - Fixed a bug in token parsing in Snap.Util.Parsing

  ## 1.0.1.0
  ### Fixes
  - fixed a FileUpload exception test

  - Exported `compressibleMimeTypes`

  - Added a missing file to the tarball.

  ## 1.0.0.0
  ### Added
  ### Removed

   - Removed support for `iteratees` in favor of
     [io-streams](https://hackage.haskell.org/package/io-streams)
changelog-type: markdown
description: |
  Snap Framework Core
  ===================

  [![GitHub CI](https://github.com/snapframework/snap-core/workflows/CI/badge.svg)](https://github.com/snapframework/snap-core/actions)

  Snap is a web framework for Haskell. For more information about Snap, read the
  `README.SNAP.md` or visit the Snap project website at
  http://www.snapframework.com/.

  ## Library contents

  This is the `snap-core` library, which contains:

    * primitive types and functions for HTTP (requests, responses, cookies,
      post/query parameters, etc).

    * a "Snap" monad interface for programming web handlers, which allows:

      * stateful access to the HTTP request and response objects.

      * monadic failure (i.e. MonadPlus/Alternative instances) for declining to
        handle requests and chaining handlers together.

      * early termination of the computation if you know early what you want to
        return and want to prevent further monadic processing.

    * useful utilities for web handlers, like file serving and gzip/zlib
      compression.


  Building snap-core
  ===================

  The snap-core library is built using [Cabal](http://www.haskell.org/cabal/) and
  [Hackage](http://hackage.haskell.org/packages/hackage.html). Just run

      cabal install

  from the `snap-core` toplevel directory.


  ## Building the Haddock Documentation

  The haddock documentation can be built using the supplied `haddock.sh` shell
  script:

      ./haddock.sh

  The docs get put in `dist/doc/html/`.


  ## Building the testsuite

  Snap aims for 100% test coverage, and we're trying hard to stick to that.

  To build the test suite, configure with --enable-tests:

      $ cabal configure --enable-tests
      $ cabal build

  From here you can invoke the testsuite by running:

      $ ./runTestsAndCoverage.sh


  The testsuite generates an `hpc` test coverage report in `dist/hpc`.
description-type: markdown
hash: c1112eaf146b15abe287479138cd8babd43c7d45d56cbb677adf3149e7d05f0b
homepage: http://snapframework.com/
latest: 1.0.5.1
license-name: BSD-3-Clause
maintainer: snap@snapframework.com
synopsis: 'Snap: A Haskell Web Framework (core interfaces and types)'
test-bench-deps:
  HUnit: '>=0'
  QuickCheck: '>=2.3.0.2 && <3'
  attoparsec: '>=0'
  base: '>=4 && <5'
  bytestring: '>=0'
  bytestring-builder: '>=0'
  case-insensitive: '>=0'
  containers: '>=0'
  deepseq: '>=1.1 && <1.6'
  directory: '>=0'
  filepath: '>=0'
  hashable: '>=0'
  io-streams: '>=0'
  lifted-base: '>=0'
  monad-control: '>=0'
  mtl: '>=0'
  network: '>=0'
  network-uri: '>=0'
  old-locale: '>=1 && <2'
  parallel: '>=3 && <4'
  random: '>=0'
  readable: '>=0'
  regex-posix: '>=0'
  test-framework: '>=0.8.0.3 && <0.9'
  test-framework-hunit: '>=0.2.7 && <0.4'
  test-framework-quickcheck2: '>=0.2.12.1 && <0.4'
  text: '>=0'
  time: '>=0'
  transformers: '>=0'
  transformers-base: '>=0'
  unix-compat: '>=0'
  unordered-containers: '>=0'
  vector: '>=0'
  zlib: '>=0.5 && <0.8'
