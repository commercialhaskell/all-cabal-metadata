all-versions:
- 1.0.0.0
- 1.1.0.0
author: Gleb Popov
basic-deps:
  base: <5
  bifunctors: '>=5.5.13 && <5.6'
  containers: '>=0.6.5 && <0.7'
  pretty-simple: '>=4.1.2 && <4.2'
  sbv: '>=9.0 && <9.1'
changelog: ''
changelog-type: ''
description: |
  # Component-based synthesis of loop-free programs

  This package implements a library for synthesizing programs as described in the
  [Component-based Synthesis Applied to Bitvector Programs](https://www.microsoft.com/en-us/research/wp-content/uploads/2010/02/bv.pdf) paper.
  It uses an off-the-shelf SMT solver via [sbv](https://hackage.haskell.org/package/sbv) library.

  See [Examples.hs](https://github.com/arrowd/sbv-program/blob/master/src/Data/SBV/Program/Examples.hs) file to quickly get at how to use this.
  For deeper understanding of library's internals see the Haddock documentation.

  The code is structured and commented in such way that it follows variable naming
  of the original paper.
description-type: markdown
hash: dc7f1c6c27a27e2e52bd2829c1020016859e17675b8def3bc8b4caff2a803af9
homepage: https://github.com/arrowd/sbv-program
latest: 1.1.0.0
license-name: BSD-3-Clause
maintainer: 6yearold@gmail.com
synopsis: Component-based program synthesis using SBV
test-bench-deps:
  base: '>=0'
  sbv: '>=0'
  sbv-program: '>=0'
