homepage: https://github.com/arrowd/sbv-program
changelog-type: ''
hash: e9b05ee9f25416f32a68ba302dea6a3a840c3a3295885be0bd13470d1da2f337
test-bench-deps:
  sbv: -any
  base: -any
  sbv-program: -any
maintainer: 6yearold@gmail.com
synopsis: Component-based program synthesis using SBV
changelog: ''
basic-deps:
  sbv: -any
  base: <5
  containers: -any
  bifunctors: -any
  pretty-simple: -any
all-versions:
- 1.0.0.0
author: Gleb Popov
latest: 1.0.0.0
description-type: markdown
description: |
  # Component-based synthesis of loop-free programs

  This package implements a library for synthesizing programs as described in the
  [Component-based Synthesis Applied to Bitvector Programs](https://www.microsoft.com/en-us/research/wp-content/uploads/2010/02/bv.pdf) paper.
  It uses an off-the-shelf SMT solver via [sbv](https://hackage.haskell.org/package/sbv) library.

  See [Examples.hs](https://github.com/arrowd/sbv-program/blob/master/src/Data/SBV/Program/Examples.hs) file to quickly get at how to use this.
  For deeper understanding of library's internals see the Haddock documentation.

  The code is structured and commented in such way that it follows variable naming
  of the original paper.
license-name: BSD-3-Clause
