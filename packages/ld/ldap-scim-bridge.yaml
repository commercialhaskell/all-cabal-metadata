homepage: https://github.com/fisx/ldap-scim-bridge
changelog-type: markdown
hash: 4727e6c1861f4f75eeab310c2f36076542db2f31bd038049ff192c190dce05b6
test-bench-deps: {}
maintainer: Matthias Fischmann <mf@zerobuzz.net>
synopsis: See README for synopsis
changelog: |
  # Changelog

  `ldap-scim-bridge` uses [PVP][1]-compatible versioning.
  The changelog is available [on GitHub][2].

  ## 0.5

  - Various small fixes (#15)

  ## 0.4

  - Filter for arbitrary LDAP attributes (#16)

  ## 0.3

  - Better error logging. (#11)
  - Allow mapping the scim `displayName` attribute. (#14)

  ## 0.2

  * Fix: add `./examples/wire-server/` to hackage distro.

  ## 0.1

  * Working for one non-trivial use-case.  See `./examples/wire-server/`

  ## 0.0.0.0

  * Initially created.

  [1]: https://pvp.haskell.org
  [2]: https://github.com/fisx/ldap-scim-bridge/releases
basic-deps:
  http-client: '>=0.7.8 && <0.8'
  hscim: '>=0.3.6 && <0.4'
  email-validate: '>=2.3.2.13 && <2.4'
  bytestring: '>=0.10.12 && <0.11'
  base: '>=4.13 && <4.15'
  ldap-client: '>=0.4.1 && <0.5'
  aeson-pretty: '>=0.8.8 && <0.9'
  servant-client: '>=0.18.3 && <0.19'
  unordered-containers: '>=0.2.14.0 && <0.3'
  text: '>=1.2.4.1 && <1.3'
  servant-client-core: '>=0.18.3 && <0.19'
  network: '>=3.1.1.1 && <3.2'
  servant: '>=0.18.3 && <0.19'
  containers: '>=0.6.2.1 && <0.7'
  relude: -any
  ldap-scim-bridge: -any
  http-client-tls: '>=0.3.5 && <0.4'
  string-conversions: '>=0.4.0.1 && <0.5'
  http-types: '>=0.12.3 && <0.13'
  aeson: '>=1.4.7.1 && <1.5'
  tinylog: ==0.15.*
  yaml: '>=0.11.5.0 && <0.12'
all-versions:
- '0.1'
- '0.2'
- '0.3'
- '0.4'
- '0.5'
author: Matthias Fischmann
latest: '0.5'
description-type: markdown
description: |
  ## ldap-scim-bridge

  [![GitHub CI](https://github.com/fisx/ldap-scim-bridge/workflows/CI/badge.svg)](https://github.com/fisx/ldap-scim-bridge/actions)
  [![Hackage](https://img.shields.io/hackage/v/ldap-scim-bridge.svg?logo=haskell)](https://hackage.haskell.org/package/ldap-scim-bridge)
  [![Stackage Lts](http://stackage.org/package/ldap-scim-bridge/badge/lts)](http://stackage.org/lts/package/ldap-scim-bridge)
  [![Stackage Nightly](http://stackage.org/package/ldap-scim-bridge/badge/nightly)](http://stackage.org/nightly/package/ldap-scim-bridge)
  [![AGPL-3.0-only license](https://img.shields.io/badge/license-AGPL--3.0--only-blue.svg)](LICENSE)

  ## this is work in progress.  use at your own risk?

  ## intro

  This is a small command line tool to pull data from an LDAP server and
  push it to a SCIM peer.  It supports fields `externalId`,
  `userName`, `displayName`, `emails`, in the `User` schema.  It may not
  support any other fields, and it does not support scim `Group`s.

  If you extend this to other fields, groups, or other use cases and setups, we
  would highly appreciate pull requests, tickets, or emails (no matter how half-baked).

  There is a yaml config file that describes both how to reach the LDAP
  server (including the desired directory object(s)) and the SCIM peer,
  how to map attributes between the two worlds, and anything else that's
  needed like log level.

  Every communication is logged to stdout.  When called
  without arguments, the tool will print out usage info:

  ```
  *** Exception: bad number of arguments: []

  usage: ldap-scim-bridge <config.yaml>
  see https://github.com/wireapp/ldap-scim-bridge for a sample config.
  ```

  See [ldif](./ldif/README.md) for a few sample user records to play with.
  A working example can be found in `./examples/wire-server`.

  ## future work

  Support more SCIM attributes and extensions.
  Specifically, for
  [wire-server](https://github.com/wireapp/wire-server), we may want to
  add rich profiles:

  ```
        { ...,
          "urn:wire:scim:schemas:profile:1.0": {
            "richInfo": {
              "version": 0,
              "fields": [
                {
                  "value": "hair color",
                  "type": "green"
                },
                {
                  "value": "title",
                  "type": "galactic overlord"
                }
              ]
            }
          },
          "urn:ietf:params:scim:schemas:extension:wire:1.0:User": {
            "hair color": "green",
            "title": "galactic overlord"
          },
          ...
        }
  ```

  ## further reading

  - [https://devconnected.com/how-to-setup-openldap-server-on-debian-10/](https://devconnected.com/how-to-setup-openldap-server-on-debian-10/)
  - [https://www.lepide.com/how-to/restore-deleted-objects-in-active-directory.html](https://www.lepide.com/how-to/restore-deleted-objects-in-active-directory.html)
license-name: AGPL-3.0-or-later
