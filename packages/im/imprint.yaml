all-versions:
- 0.0.1.0
author: Mark Karpov <markkarpov92@gmail.com>
basic-deps:
  base: '>=4.10 && <5.0'
  binary: '>=0.8.5 && <0.10'
  bytestring: '>=0.2 && <0.11'
  constraints: '>=0.9 && <0.11'
changelog: |
  ## Imprint 0.0.1.0

  * Initial release.
changelog-type: markdown
description: |
  # Imprint

  [![License BSD3](https://img.shields.io/badge/license-BSD3-brightgreen.svg)](http://opensource.org/licenses/BSD-3-Clause)
  [![Hackage](https://img.shields.io/hackage/v/imprint.svg?style=flat)](https://hackage.haskell.org/package/imprint)
  [![Stackage Nightly](http://stackage.org/package/imprint/badge/nightly)](http://stackage.org/nightly/package/imprint)
  [![Stackage LTS](http://stackage.org/package/imprint/badge/lts)](http://stackage.org/lts/package/imprint)
  [![Build Status](https://travis-ci.org/mrkkrp/imprint.svg?branch=master)](https://travis-ci.org/mrkkrp/imprint)
  [![Coverage Status](https://coveralls.io/repos/mrkkrp/imprint/badge.svg?branch=master&service=github)](https://coveralls.io/github/mrkkrp/imprint?branch=master)

  Serialization of arbitrary Haskell expressions. Currently supports
  serialization of

  * Values with a `Binary` instance
  * Monomorphic functions
  * Closures built upon the two previous components

  See the Haddock for a proper introduction.

  ## Contribution

  Issues, bugs, and questions may be reported in [the GitHub issue tracker for
  this project](https://github.com/mrkkrp/imprint/issues).

  Pull requests are also welcome and will be reviewed quickly.

  ## License

  Copyright Â© 2018 Mark Karpov

  Distributed under BSD 3 clause license.
description-type: markdown
hash: 4071c28da4620e7e2730453fd1e8cd53beeb17c6648762283bd22acddc45818c
homepage: https://github.com/mrkkrp/imprint
latest: 0.0.1.0
license-name: BSD-3-Clause
maintainer: Mark Karpov <markkarpov92@gmail.com>
synopsis: Serialization of arbitrary Haskell expressions
test-bench-deps:
  base: '>=4.10 && <5.0'
  binary: '>=0.8.5 && <0.10'
  constraints: '>=0.9 && <0.11'
  hspec: '>=2.0 && <3.0'
  imprint: '>=0'
