all-versions:
- 1.0.0
- 1.0.1
- 1.0.2
- 1.0.3
- 1.0.4
- 1.0.5
- 1.0.6
- 1.0.7
- 1.0.8
- 1.0.9
- 1.0.10
- 1.0.11
- 1.0.12
- 1.0.14
- 1.0.15
- 1.0.16
- 1.0.17
- 1.0.18
- 1.0.19
- 1.0.20
- 1.0.21
author: Gabriella Gonzalez
basic-deps:
  QuickCheck: <2.16
  aeson: '>=0'
  attoparsec: '>=0.13 && <0.15'
  base: '>=4.9 && <5'
  bytestring: '>=0.9 && <0.13'
  containers: '>=0.5 && <0.8'
  directory: <1.4
  filepath: <1.6
  generic-arbitrary: <1.1
  mtl: '>=2.2 && <2.4'
  nix-derivation: '>=1.1 && <1.2'
  nix-diff: '>=0'
  optparse-applicative: '>=0.14.0.0 && <0.19'
  patience: '>=0.3 && <0.4'
  process: <1.7
  quickcheck-instances: <3.29
  text: '>=1.2 && <2.2'
  uniplate: <1.17
  unix: <2.9
  vector: '>=0.12 && <0.14'
changelog: |
  1.0.21

  * [Support relocated Nix store](https://github.com/Gabriella439/nix-diff/pull/82)
    * If configured through `NIX_REMOTE` environment variable.
  * [Compact input derivation diffs](https://github.com/Gabriella439/nix-diff/pull/86)
  * [Fix support for `less -R` when coloring multiple lines](https://github.com/Gabriella439/nix-diff/pull/96)

  1.0.20

  * [Add `--context` flag](https://github.com/Gabriella439/nix-diff/pull/81)
    * This limits the context to the specified number of characters/words/lines
  * [Bump upper bounds](https://github.com/Gabriella439/nix-diff/pull/79)
    * Allow `unix-2.8` and few more

  1.0.19

  * [New Haskell API](https://github.com/Gabriella439/nix-diff/pull/60)
    * Previously `nix-diff` only had a command-line API, but now there is a
      Haskell API available under the `Nix.Diff` module hierarchy
  * [Machine-readable output](https://github.com/Gabriella439/nix-diff/pull/61)
    * `nix-diff` now supports a `--json` flag for machine-readable JSON output
  * [New `--skip-already-compared` command-line option](https://github.com/Gabriella439/nix-diff/pull/69)
    * This compresses a sub-tree of the diff if the leaves have already been
      compared
  * [New `--squash-text-diff` command-line option](https://github.com/Gabriella439/nix-diff/pull/70)
    * This compresses textual diffs into larger spans when possible
  * [Ignore `!${OUTPUT}`](https://github.com/Gabriella439/nix-diff/pull/66)
    * `nix-diff` will now strip everything after `!` from a derivation argument
      so that arguments like `/nix/store/…!bin` no longer fail

  1.0.18

  * [Document the `--color` command-line option](https://github.com/Gabriel439/nix-diff/pull/54)

  1.0.17

  * [Handle `.drv` and `.nix` files that contain non-UTF8 text](https://github.com/Gabriel439/nix-diff/pull/50)

  1.0.16

  * [Accept realised store paths as input](https://github.com/Gabriel439/nix-diff/pull/47)
    * `nix-diff` will attempt to find the corresponding derivations using
      `nix-store --query --deriver` if you provide a realised store path as input

  1.0.15

  * [Fix non-exhaustive pattern match](https://github.com/Gabriel439/nix-diff/pull/45)
      * This non-exhaustive pattern match would cause the program to fail if
        the new derivation added or removed input sources

  1.0.14

  * [Improve whitespace handling](https://github.com/Gabriel439/nix-diff/pull/40)
      * `--word-oriented` now treats all whitespace characters as word
        boundaries instead of just spaces

        This matches the behavior of `Prelude.words`

      * `--word-oriented` no longer highlights the intervening spaces between
        words

        This is for consistency with `--line-oriented`, which doesn't
        highlight the intervening spaces between lines.  Also, you could argue
        that if the user specifies `--word-oriented` then they want all new
        tokens to be highlighted on a word-by-word basis.

      * `--line-oriented` now no longer introduces a trailing newline at the
        end of a newline-free segment of text

      * More generally, both `--word-oriented` and `--newline-oriented`
        exactly preserve the original whitespace that was used for word or
        line boundaries.

  1.0.13

  * [Add new `--word-oriented` mode, which is now the new default mode](https://github.com/Gabriel439/nix-diff/pull/38)
      * This now diffs on word boundaries instead of line-boundaries

  1.0.12

  * [Use "patience" diff algorithm](https://github.com/Gabriel439/nix-diff/pull/33)
      * This improves the quality of the diff

  1.0.11

  * [Add support for diffing input sources](https://github.com/Gabriel439/nix-diff/pull/30)
changelog-type: markdown
description: |
  # `nix-diff`

  [![GitHub Workflow Status](https://img.shields.io/github/actions/workflow/status/Gabriella439/nix-diff/ci.yaml?branch=main)](https://github.com/Gabriella439/nix-diff/actions/workflows/ci.yaml)
  [![Hackage version](https://img.shields.io/hackage/v/nix-diff.svg?color=success)](https://hackage.haskell.org/package/nix-diff)
  [![Dependencies](https://img.shields.io/hackage-deps/v/nix-diff?label=Dependencies)](https://packdeps.haskellers.com/feed?needle=nix-diff)

  This package provides a `nix-diff` executable which explains why two Nix
  derivations differ.  The most common use cases for this are:

  * Understanding why you have a cache miss
  * Verifying a Nix change had the intended effect at the derivation level
  * Improving your understanding of how Nix works

  For example, consider the following Nix derivation to build a bare-bones NixOS
  system:

  ```nix
  let
    nixos = import <nixpkgs/nixos> {
      system = "x86_64-linux";

      configuration = {
        boot.loader.grub.devices = [ "/dev/sda" ];

        fileSystems."/" = {
          device = "/dev/sda";
        };
      };
    };

  in
    nixos.system
  ```

  We can use `nix-instantiate` to compute the derivation for the above file:

  ```bash
  $ nix-instantiate example.nix  # Your exact hash might differ
  warning: you did not specify ‘--add-root’; the result might be removed by the garbage collector
  /nix/store/6z9nr5pzs4j1v9mld517dmlcz61zy78z-nixos-system-nixos-18.03pre119245.5cfd049a03.drv
  ```

  Now, let's add a service to our system definition:

  ```nix
  let
    nixos = import <nixpkgs/nixos> {
      system = "x86_64-linux";

      configuration = {
        boot.loader.grub.devices = [ "/dev/sda" ];

        fileSystems."/" = {
          device = "/dev/sda";
        };

        services.apache-kafka.enable = true;
      };
    };

  in
    nixos.system
  ```

  ... and compute the derivation for the updated system:

  ```bash
  $ nix-instantiate example.nix
  warning: you did not specify ‘--add-root’; the result might be removed by the garbage collector
  /nix/store/k05ibijg0kknvwrgfyb7dxwjrs8qrlbj-nixos-system-nixos-18.03pre119245.5cfd049a03.drv
  ```

  We can use `nix-diff` to compare the two computed derivations to determine what
  changed about our system:

  ```bash
  $ nix-diff /nix/store/6z9nr5pzs4j1v9mld517dmlcz61zy78z-nixos-system-nixos-18.03pre119245.5cfd049a03.drv /nix/store/k05ibijg0kknvwrgfyb7dxwjrs8qrlbj-nixos-system-nixos-18.03pre119245.5cfd049a03.drv
  ```

  ... which produces the following output:

  ![](https://i.imgur.com/KUB4rXx.png)

  It's also possible to pass store paths or links to store paths, for example:

  ```ShellSession
  $ nix-build example.nix
  $ nix-diff /run/current-system ./result
  ```
  ## Testing

  Run tests, using `cabal test` command.

  You need to have nix installed in your PC.

  ## Development status

  I don't currently plan to add any new features, but I do welcome feature
  requests.  Just open an issue on the issue tracker if you would like to request
  an improvement.

  ## License (BSD 3-clause)

      Copyright (c) 2017 Gabriella Gonzalez
      All rights reserved.

      Redistribution and use in source and binary forms, with or without modification,
      are permitted provided that the following conditions are met:
          * Redistributions of source code must retain the above copyright notice,
            this list of conditions and the following disclaimer.
          * Redistributions in binary form must reproduce the above copyright notice,
            this list of conditions and the following disclaimer in the documentation
            and/or other materials provided with the distribution.
          * Neither the name of Gabriella Gonzalez nor the names of other contributors
            may be used to endorse or promote products derived from this software
            without specific prior written permission.

      THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
      ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
      WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
      DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
      ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
      (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
      LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
      ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
      (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
      SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
description-type: markdown
hash: 6f0fcc994b3613d42f19c1ceb7328f46731aed384100e8411bf3e00c7698fd48
homepage: https://github.com/Gabriella439/nix-diff
latest: 1.0.21
license-name: BSD-3-Clause
maintainer: GenuineGabriella@gmail.com
synopsis: Explain why two Nix derivations differ
test-bench-deps:
  aeson: '>=0'
  base: '>=0'
  bytestring: '>=0'
  containers: '>=0'
  mtl: '>=0'
  nix-diff: '>=0'
  tasty: <1.6
  tasty-quickcheck: <0.11
  tasty-silver: <3.4
  text: '>=0'
  typed-process: <0.2.12
