all-versions:
- '1.0'
- '1.1'
- 1.1.1
- 1.1.2
author: Uwe Hoffmann
basic-deps:
  GoogleChart: '>=0.2'
  HStringTemplate: '>=0.5.1.2'
  HTTP: '>=4000.0.6'
  base: '>=4.1.0.0 && <5'
  containers: '>=0.2.0.1'
  filepath: '>=1.1.0.2'
  haskell98: '>=0'
  haxr: '>=3000.2.1'
  hs-twitter: '>=0.2.8'
  hxt: '>=8.3.0'
  json: '>=0.4.3'
  network: '>=2.2.1'
  old-locale: '>=1.0.0.1'
  old-time: '>=1.0.0.2'
  regex-compat: '>=0.71.0.1'
  regex-posix: '>=0.72.0.3'
  syb: '>=0.1.0.1'
  time: '>=1.1.2.4'
changelog: ''
changelog-type: ''
description: "nikepub\n\nINTRODUCTION\n\nnikepub is a simple commandline program that
  given a Nike+ user id will fetch the\nmost recent Nike+ run and publish it to any
  blog and/or Twitter account.\nAssumes the Nike+ user profile is public. Supports
  customizable templates\nfor the blog entry title, body and Twitter status update.
  Any blogging\nsystem with XML-RPC support for metaWeblog.newPost (like WordPress
  or MovableType)\nis supported.\n\nA description of the implementation can be found
  in this series of blog posts:\n\nhttp://www.codemanic.com/uwe/2009/05/publishing-nike-runs-part-1-numeric-lists.html\nhttp://www.codemanic.com/uwe/2009/06/publishing-nike-runs-part-2-google-charts.html\nhttp://www.codemanic.com/uwe/2009/06/publishing-nike-runs-part-3-handling-xml.html\nhttp://www.codemanic.com/uwe/2009/06/publishing-nike-runs-part-4-string-templates.html\nhttp://www.codemanic.com/uwe/2009/06/publishing-nike-runs-part-5-blogging-and-twitter.html\n\nINSTALLATION\n\nnikepub
  comes as a cabal package so doing \n\n$ runhaskell Setup configure --prefix=$HOME
  --user\n$ runhaskell Setup build\n$ runhaskell Setup install\n\nin the untarred
  package directory will install nikepub in $HOME/bin.\n\nUSAGE\n\nExample command
  line flags (fill in values where you see <value description>s):\n\nnikepub\n --id=<your
  nike+ id> \\\n --templates=<path to a templates dir> \\\n --mtUrl=<url to your blog
  xml-rpc> \\\n --mtUser=<your blog username> \\ \n --mtPassword=<path to a file containing
  your blog api password> \\ \n --message=<any additional message you want in blog
  entry> \\ \n --twitterUser=<your twitter username> \\\n --twitterPassword=<path
  to a file containing your twitter password>\n\nThe distribution package contains
  an example template directory. It can be used directly or customized.\nThe example
  template files have all the supported $fields$ in them. All three files must be
  present in\na template directory. You might want to copy the template directory
  into a more convenient place.\nTemplates can contain special comments with JSON
  strings configuring the desired chart size \n(more configuration properties to follow
  in later versions).\n\nYour Nike+ profile is assumed to be public. nikepub doesn't
  work with non-public profiles (if you publish\nyour runs with nikepub you might
  as well have your profile public). Your Nike+ id is an integer. The simplest way\nto
  find it out is to share a run or your profile in the Flash UI on the Nike+ website
  by choosing to grab\nthe link to the run you want to share in the Share menu.\nThe
  pasteboard now has a URL with your Nike+ user id in the URL params.\n\nThe --message
  flag on the nikepub commandline lets you append an arbitrary message to the body
  of the generated\nblog entry.\n\nIf the --draft flag is present then the blog entry
  is not published but sent as a draft to the blogging system.\n\nThe flag --airport
  allows for the specification of an airport code. It is used to fetch the weather
  conditions\nduring the run. nikepub must be executed within 90 minutes of the run
  start time for it to fetch the weather.\n\nBUGS, SUGGESTIONS, COMMENTS\n\nPlease
  send to uwe@codemanic.com\n"
description-type: text
hash: 2cea569f7314000fd45b0c60228d29d7819f23a7e07f9faa7253f3fef3bb8087
homepage: http://www.codemanic.com/uwe
latest: 1.1.2
license-name: LicenseRef-LGPL
maintainer: uwe@codemanic.com
synopsis: Command line utility publishes Nike+ runs on blogs and Twitter
test-bench-deps: {}
