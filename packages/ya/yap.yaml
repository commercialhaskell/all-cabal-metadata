homepage: ''
changelog-type: ''
hash: bb2cde5b094d85c7bd7b2fa9e329f07c12fc482157d59f81a3f3188fedeb0513
test-bench-deps: {}
maintainer: Ross Paterson <ross@soi.city.ac.uk>
synopsis: |-
  yet another prelude - a simplistic refactoring with algebraic
  classes
changelog: ''
basic-deps:
  base: '>=4.5 && <6'
all-versions:
- '0.0'
- '0.1'
- '0.2'
author: Ross Paterson <ross@soi.city.ac.uk>
latest: '0.2'
description-type: haddock
description: |-
  A simple refactoring of the Prelude numeric classes,
  attempting backwards compatibility for clients by defining
  a few algebraic classes as superclasses of the Haskell 98
  numeric classes.  This yields the following class hierarchy
  (grey classes are unchanged):

  <<http://code.haskell.org/~ross/images/hierarchy-2.png>>

  "Prelude.YAP" is an almost-compatible replacement
  for the standard Haskell Prelude, as long as you're
  not defining instances of the numeric classes
  (though defaulting will be affected).
  When importing it, turn on @RebindableSyntax@.

  "Data.YAP.Algebra" contains just the new classes;
  you'll need to import it if you want access to the
  new names, including to define instances.

  Other modules contain some example instances, including
  for the existing types @Complex@ and @Ratio@.

  History:

  * 0.0: initial version

  * 0.1: moved 'fromRational' back to 'Fractional', as it
  isn't well-behaved for all fields.  Removed @realToField@.

  * 0.2: removed 'Eq' and 'Show' constraints from 'Num',
  following @base-4.5@.
license-name: BSD-3-Clause
