all-versions:
- '0.1'
- '0.2'
- 0.2.0.1
- 0.2.1
author: Brandon Simmons
basic-deps:
  base: <5 && >=4
  categories: '>=1.0'
  transformers: '>=0'
changelog: ''
changelog-type: ''
description: |-
  Why yet /another/ lens library?
  First, none of the existing libraries for Lenses were
  adequate for my needs (specifically for my use of lenses
  in "pez"). And anyway, why not try to create something
  novel and better?

  Distinguishing features:

  - Lenses are parameterized over two Monads (by convention
  @m@ and @w@), and look like @a -> m (b -> w a, b)@. this
  lets us define lenses for sum types, that perform
  validation, that do IO (e.g. persist data to disk),
  etc., etc.

  - a module "Data.Yall.Iso" that complements @Lens@ powerfully

  - a rich set of category-level class instances (for now
  from "categories") for 'Lens' and 'Iso'. These along
  with the pre-defined primitive lenses and combinators
  give an interface comparable to Arrow

  You should import either "Data.Yall" or "Data.Yall.Lens",
  and optionally "Data.Yall.Iso". "Data.Yall" is a simplified,
  but mostly-compatible, version of a subset of "Data.Yall.Lens".

  /UPDATE/: I have stopped developing this package. Instead you
  should take a look at and contribute to <http://hackage.haskell.org/package/lens>

  /TODOs/:

  - a module providing template haskell deriving of Lenses

  - pre-define lenses for prelude types, State

  /CHANGES/:

  - depend on categories >= 1
description-type: haddock
hash: ebd73c1b9df7d5257a59a86e04a6713a341cc8552ce7fc2267abc3249b87a8d7
homepage: http://brandon.si/code/yall/
latest: 0.2.1
license-name: BSD-3-Clause
maintainer: brandon.m.simmons@gmail.com
synopsis: Lenses with a southern twang
test-bench-deps: {}
