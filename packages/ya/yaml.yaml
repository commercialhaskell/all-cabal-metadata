homepage: https://github.com/snoyberg/yaml#readme
changelog-type: markdown
hash: e94ed960399bad59b892e783e7f17ea8f64d7ee9907d1a85524cd728d88e2705
test-bench-deps:
  bytestring: '>=0.9.1.4'
  base: '>=4.9.1 && <5'
  unordered-containers: -any
  hspec: '>=1.3'
  text: -any
  filepath: -any
  conduit: '>=1.2.8 && <1.4'
  HUnit: -any
  containers: -any
  mockery: -any
  base-compat: -any
  raw-strings-qq: -any
  mtl: -any
  attoparsec: '>=0.11.3.0'
  transformers: '>=0.1'
  temporary: -any
  scientific: '>=0.3'
  libyaml: ==0.1.*
  resourcet: '>=0.3 && <1.3'
  aeson: '>=0.11'
  template-haskell: -any
  yaml: -any
  vector: -any
  directory: -any
maintainer: Michael Snoyman <michael@snoyman.com>
synopsis: Support for parsing and rendering YAML documents.
changelog: "# ChangeLog for yaml\n\n## 0.11.8.0\n\n* Export `Parse` and `StringStyle`
  [#204](https://github.com/snoyberg/yaml/pull/204)\n\n## 0.11.7.0\n\n* Support `aeson`
  2 [#202](https://github.com/snoyberg/yaml/pull/202)\n\n## 0.11.6.0\n\n* `yaml2json`:
  add `--help` and `--version` options [#197](https://github.com/snoyberg/yaml/pull/197)\n*
  `json2yaml`: add `--help` and `--version` options [#198](https://github.com/snoyberg/yaml/pull/198)\n*
  Add the `-o` options to both `yaml2json` and `json2yaml` [#200](https://github.com/snoyberg/yaml/pull/200)\n\n##
  0.11.5.0\n\n* New functions capable of parsing YAML streams containing multiple
  documents into a list of results:\n  * `decodeAllEither'`\n  * `decodeAllFileEither`\n
  \ * `decodeAllFileWithWarnings`\n  * `decodeAllThrow`\n  * `decodeAllFileThrow`\n\n##
  0.11.4.0\n\n* add `ToYaml` instance for `String` [#186](https://github.com/snoyberg/yaml/pull/186)\n\n##
  0.11.3.0\n\n* Don't wrap up async exceptions [#185](https://github.com/snoyberg/yaml/issues/185)\n\n##
  0.11.2.0\n\n* Reduces some of the code duplication between the `encode` and `encodePretty`
  functions\n* The output of `encodePretty` has been improved:\n    - Multiline strings
  now use `Literal` style instead of `SingleQuoted`\n    - Special keys are now quoted
  in mappings [#179](https://github.com/snoyberg/yaml/issues/179)\n* Support for complex
  keys in mappings: [#182](https://github.com/snoyberg/yaml/issues/182)\n    - Adds
  `complexMapping` function to `Data.Yaml.Builder`\n    - Decode functions now return
  a `NonStringKey` error when attempting to decode a mapping with a complex key as
  it is not possible to decode these to an Aeson `Value`\n* Adds missing `ToYaml`
  instances\n\n## 0.11.1.2\n\n* Compiles with GHC 8.8.1 (`MonadFail` split)\n\n##
  0.11.1.1\n\n* Use the appropriate `Scientific` rendering function to avoid a memory
  overflow when rendering. The previously used function from `aeson` would not use
  scientific notation, and could use large amounts of memory for values such as `1e9999999999999`.\n\n##
  0.11.1.0\n\n* Better error messages in the `Data.Yaml.Config` module [#168](https://github.com/snoyberg/yaml/issues/168)\n*
  Add `LoadSettingsException` exception and remove error printing from `loadYamlSettings`
  [#172](https://github.com/snoyberg/yaml/pull/172)\n\n## 0.11.0.0\n\n* Split out
  the `libyaml` and `Text.Libyaml` code into its own package. [#145](https://github.com/snoyberg/yaml/issues/145)\n\n##
  0.10.4.0\n\n* Add `decodeMarked` and `decodeFileMarked` functions to `Text.Libyaml`,
  and\n  extend native bindings to extract mark information. [#157](https://github.com/snoyberg/yaml/issues/157)\n\n##
  0.10.3.0\n\n* Add support for anchors and aliases to Data.Yaml.Builder [#155](https://github.com/snoyberg/yaml/pull/155)\n*
  Fix test suite for 32 bit machines [#158](https://github.com/snoyberg/yaml/issues/158)\n\n##
  0.10.2.0\n\n* Add `EncodeOptions` and `FormatOptions` to control the style of the
  encoded YAML. [#153](https://github.com/snoyberg/yaml/pull/153)\n* Default to using
  literal style for multiline strings [#152](https://github.com/snoyberg/yaml/issues/152)\n\n##
  0.10.1.1\n\n* Correctly declare libyaml dependency on system-libyaml flag [#151](https://github.com/snoyberg/yaml/pull/151)\n\n##
  0.10.1\n\n* Avoid incurring a `semigroups` dependency on recent GHCs.\n* Fix a space
  leak that was introduced with `0.10.0` [#147](https://github.com/snoyberg/yaml/issues/147)\n\n##
  0.10.0\n\n* Add `decodeFileWithWarnings` which returns warnings for duplicate fields\n\n##
  0.9.0\n\n* Expose style and tags on mappings and sequences in Text.Libyaml [#141](https://github.com/snoyberg/yaml/pull/141)\n\n##
  0.8.32\n\n* Escape keys as necessary [#137](https://github.com/snoyberg/yaml/issues/137)\n*
  Support hexadecimal and octal number values [#135](https://github.com/snoyberg/yaml/issues/135)\n*
  More resilient `isNumeric` (should reduce cases of unneeded quoting)\n* hpackify\n*
  src subdir\n\n## 0.8.31.1\n\n* Add a workaround for a cabal bug [haskell-infra/hackage-trustees#165](https://github.com/haskell-infra/hackage-trustees/issues/165)\n\n##
  0.8.31\n\n* Add `decodeThrow` and `decodeFileThrow` convenience functions.\n* Upgrade
  libyaml versions\n* Deprecate `decode` and `decodeEither`\n\n## 0.8.30\n\n* Removed
  `AppSettings` mentioned in `loadYamlSettings` error message.\n\n## 0.8.29\n\n* Deprecated
  `decodeFile` [#129](https://github.com/snoyberg/yaml/issues/129)\n* Turn off executables
  by default [#103](https://github.com/snoyberg/yaml/issues/103)\n\n## 0.8.28\n\n*
  Add `Data.Yaml.TH.yamlQQ`\n\n## 0.8.27\n\n* Support conduit 1.3\n\n## 0.8.26\n\n*
  Add `Semigroup` instance [#123](https://github.com/snoyberg/yaml/pull/123)\n\n##
  0.8.25.2\n\n* Use `throwM` instead of `monadThrow`\n\n## 0.8.25.1\n\n* Drop aeson-qq
  dep (incompatible with Stackage Nightly)\n\n## 0.8.25\n\n* Tweaks to the executable
  `yaml2json` [#119](https://github.com/snoyberg/yaml/pull/119): \n    - Add command-line
  option `-h` and `--help` to show help message\n    - Error messages are now written
  to `stderr` instead of `stdout`\n\n## 0.8.24\n\n* New encodePretty option `setConfDropNull`
  to drop null values from objects [#116](https://github.com/snoyberg/yaml/issues/116)\n\n##
  0.8.23.3\n\n* Avoid over-escaping `*` [#113](https://github.com/snoyberg/yaml/issues/113)\n\n##
  0.8.23.2\n\n* Update libyaml [#110](https://github.com/snoyberg/yaml/issues/110)\n\n##
  0.8.23.1\n\n* Update CPP `MIN_VERSION_*` checks [#109](https://github.com/snoyberg/yaml/pull/109)\n\n##
  0.8.23\n\n* Re-export the with helpers from aeson\n\n## 0.8.22.1\n\n* Make numeric
  string detection slightly smarter so, e.g., `.` does\n  not get quoted\n\n## 0.8.22\n\n*
  Update to libyaml hosted on Github [#105](https://github.com/snoyberg/yaml/issues/105)\n\n##
  0.8.21.2\n\n* Fix wrong file not found exception in `Data.Yaml.Include` with pre-1.2.3.0
  `directory` [#104](https://github.com/snoyberg/yaml/pull/104)\n\n## 0.8.21.1\n\n*
  Add missing test files [#102](https://github.com/snoyberg/yaml/pull/102)\n\n## 0.8.21\n\n*
  Decode empty inputs as Null [#101](https://github.com/snoyberg/yaml/pull/101)\n\n##
  0.8.20\n\n* Upgrade to libyaml 0.1.7\n\n## 0.8.19.0\n\n* Add `Data.Yaml.TH` module\n\n##
  0.8.18.7\n\n* Add `O_TRUNC` when opening files\n\n## 0.8.18.6\n\n* s/fdopen/_fdopen
  on Windows [#96](https://github.com/snoyberg/yaml/issues/96)\n\n## 0.8.18.5\n\n*
  Properly fix previous bug (fixes #94)\n\n## 0.8.18.4\n\n* Remove file with non-ASCII
  name due to Stack/cabal-install/Hackage\n  restrictions (see [#92](https://github.com/snoyberg/yaml/issues/92))\n\n##
  0.8.18.2\n\n* Handle non-ASCII filenames correctly on Windows [#91](https://github.com/snoyberg/yaml/pull/91)\n\n##
  0.8.18.1\n\n* Improve prettyPrintParseException when context is empty [#89](https://github.com/snoyberg/yaml/pull/89)\n\n##
  0.8.18\n\n* Switched yaml decode function for config file readers in `Data.Yaml.Config`
  to\n  the one from `Data.Yaml.Include` that supports `!include` syntax.\n\n## 0.8.17.2\n\n*
  Fix pretty-printing order of UnexpectedEvent's fields (fixes [#84](https://github.com/snoyberg/yaml/issues/84))
  [#85](https://github.com/snoyberg/yaml/pull/85)\n\n## 0.8.17.1\n\n* Avoid bug in
  Cabal [#83](https://github.com/snoyberg/yaml/pull/83)\n\n## 0.8.17\n\n* `loadYamlSettingsArgs`\n\n##
  0.8.16.1\n\n* Slight doc improvement\n\n## 0.8.16\n\nAdd env variable parsing. `loadYamlSettings`
  can read config values from the environment with Yaml that specifies an env var.\nThe
  syntax is\n\n`var: _env:ENV_VAR:default`\n\n## 0.8.15.3\n\n* Give a warning when
  compiling with GHCJS\n\n## 0.8.15.2\n\n* Canonicalise Monad instances [#76](https://github.com/snoyberg/yaml/pull/76)\n\n##
  0.8.15.1\n\n* Compile with aeson below 0.7 [#70](https://github.com/snoyberg/yaml/pull/70)\n\n##
  0.8.15\n\n* Parse `Scientific` directly, avoiding loss in precision. [#68](https://github.com/snoyberg/yaml/pull/68)\n\n##
  0.8.14\n\n* Pretty print improvements for exceptions [#67](https://github.com/snoyberg/yaml/pull/67)\n\n##
  0.8.13\n\n* Pretty module [#66](https://github.com/snoyberg/yaml/pull/66)\n\n##
  0.8.12\n\n* Proper handling of `String \"+123\"` [#64](https://github.com/snoyberg/yaml/issues/64)\n\n##
  0.8.11\n\n* Function to print prettier parse exceptions [#59](https://github.com/snoyberg/yaml/pull/59)\n\n##
  0.8.10\n\nAdd the Data.Yaml.Include module\n"
basic-deps:
  bytestring: '>=0.9.1.4'
  base: '>=4.9.1 && <5'
  unordered-containers: -any
  text: -any
  filepath: -any
  conduit: '>=1.2.8 && <1.4'
  containers: -any
  mtl: -any
  attoparsec: '>=0.11.3.0'
  transformers: '>=0.1'
  optparse-applicative: -any
  scientific: '>=0.3'
  libyaml: ==0.1.*
  resourcet: '>=0.3 && <1.3'
  aeson: '>=0.11'
  template-haskell: -any
  yaml: -any
  vector: -any
  directory: -any
all-versions:
- 0.0.0
- 0.0.1
- 0.0.2
- 0.0.3
- 0.0.4
- 0.2.0
- 0.2.1
- 0.3.0
- 0.4.0
- 0.4.1
- 0.4.1.1
- 0.4.1.2
- 0.5.0
- 0.5.0.1
- 0.5.1
- 0.5.1.1
- 0.5.1.2
- 0.5.2
- 0.6.0
- 0.6.1
- 0.7.0
- 0.7.0.1
- 0.7.0.2
- 0.7.0.3
- 0.7.0.4
- 0.8.0
- 0.8.0.1
- 0.8.0.2
- 0.8.1
- 0.8.1.1
- 0.8.1.2
- 0.8.2
- 0.8.2.1
- 0.8.2.2
- 0.8.2.3
- 0.8.2.4
- 0.8.3
- 0.8.4
- 0.8.4.1
- 0.8.5
- 0.8.5.1
- 0.8.5.2
- 0.8.5.3
- 0.8.5.4
- 0.8.6
- 0.8.6.1
- 0.8.6.2
- 0.8.7
- 0.8.7.1
- 0.8.7.2
- 0.8.8
- 0.8.8.1
- 0.8.8.2
- 0.8.8.3
- 0.8.8.4
- 0.8.9
- 0.8.9.1
- 0.8.9.2
- 0.8.9.3
- 0.8.9.4
- 0.8.10
- 0.8.10.1
- 0.8.11
- 0.8.12
- 0.8.13
- 0.8.14
- 0.8.15.1
- 0.8.15.2
- 0.8.15.3
- 0.8.16
- 0.8.17
- 0.8.17.1
- 0.8.17.2
- 0.8.18
- 0.8.18.1
- 0.8.18.2
- 0.8.18.3
- 0.8.18.4
- 0.8.18.5
- 0.8.18.6
- 0.8.18.7
- 0.8.19.0
- 0.8.20
- 0.8.21
- 0.8.21.1
- 0.8.21.2
- 0.8.22
- 0.8.22.1
- 0.8.23
- 0.8.23.1
- 0.8.23.3
- 0.8.24
- 0.8.25
- 0.8.25.1
- 0.8.26
- 0.8.27
- 0.8.28
- 0.8.29
- 0.8.30
- 0.8.31
- 0.8.31.1
- 0.8.32
- 0.9.0
- 0.10.0
- 0.10.1
- 0.10.1.1
- 0.10.2.0
- 0.10.3.0
- 0.10.4.0
- 0.11.0.0
- 0.11.1.0
- 0.11.1.1
- 0.11.1.2
- 0.11.2.0
- 0.11.3.0
- 0.11.4.0
- 0.11.5.0
- 0.11.6.0
- 0.11.7.0
- 0.11.8.0
author: Michael Snoyman <michael@snoyman.com>, Anton Ageev <antage@gmail.com>,Kirill
  Simonov
latest: 0.11.8.0
description-type: markdown
description: |
  ## yaml

  [![GitHub build and test status](https://github.com/snoyberg/yaml/actions/workflows/tests.yml/badge.svg?branch=master)](https://github.com/snoyberg/yaml/actions/workflows/tests.yml)
  [![Appveyor build status](https://ci.appveyor.com/api/projects/status/hqy2jketp8m502so/branch/master?svg=true)](https://ci.appveyor.com/project/snoyberg/yaml/branch/master)

  Provides support for parsing and emitting Yaml documents.

  `Data.Yaml` provides a high-level interface based around the JSON datatypes provided by the `aeson` package. It uses `Text.Libyaml` from `libyaml` in its implementation of the low-level yaml encoder/decoder.

  ### Examples

  Usage examples can be found in the `Data.Yaml` documentation or in the [examples](https://github.com/snoyberg/yaml/tree/master/yaml/examples) directory.

  ### Additional `yaml` modules

  * `Data.Yaml.Include` supports adding `!include` directives to your YAML files.
  * `Data.Yaml.Builder` and `Data.Yaml.Parser` allow more fine-grained control of parsing an rendering, as opposed to just using the aeson typeclass and datatype system for parsing and rendering.
  * `Data.Yaml.Aeson` is currently a re-export of `Data.Yaml` to explicitly choose to use the aeson-compatible API.

  ### Executables

  Converters `json2yaml` and `yaml2json` can be built by disabling flag `no-exe`, e.g., one of:
  ```
  cabal install yaml -f-no-exe
  stack install yaml --flag yaml:-no-exe
  ```
license-name: BSD-3-Clause
