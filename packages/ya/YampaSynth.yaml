all-versions:
- 0.0.1
- 0.0.2
- '0.1'
- 0.1.1
- 0.1.2
- '0.2'
author: George Giorgidze and Henrik Nilsson
basic-deps:
  HCodecs: '>=0.5'
  Yampa: '>=0'
  array: '>=0'
  base: <5
  bytestring: '>=0'
  containers: '>=0'
changelog: ''
changelog-type: ''
description: "YampaSynth Release Notes  \n-------------------------------------------\n\nDescription\n-----------\nYampaSynth
  is a software synthesizer implemented in Haskell, using Yampa domain specific language.
  It contains little framework of sound generating and sound shaping modules and example
  applications:\n  * yampasynth-wav is an application which synthesizes a MIDI music
  and writes result into a WAVE audio file.\n  * yampasynth-openal is an application
  which synthesizes MIDI music and sends audio data in real-time to a sound card.
  We use Haskell binding of OpenAL library as an interface to audio hardware.\n  *
  yampasynth-gtk is an application with simple graphical user interface which allows
  you to play music with various instruments in real-time using keyboard of your computer.
  We use Haskell binding of GTK library for GUI programming and Haskell binding of
  OpenAL library as an interface to audio hardware.\n\nSoftware synthesizer uses the
  MIDI standard as a music description and the SoundFont standard as an instrument
  description.\n\nImplementation is based on the paper \"Switched-on Yampa: Declarative
  Programming of Modular Synthesizers\" by George Giorgidze and Henrik Nilsson (http://www.cs.nott.ac.uk/~ggg/publications/padl2008.pdf).\n\nThis
  is mainly a proof of concept, but already useful to some extent.\n             \nPrerequisites\n-------------\n*
  You will need Glasgow Haskell Compiler (GHC) version 6.8 or higher.\n* Cabal version
  1.2 or higher.\n* To install any of the example applications you will need the following
  packages:\n    * base\n    * array\n    * containers\n    * bytestring\n    * Yampa\n
  \   * HCodecs\n  All of them are either included with GHC or are available for download
  from Hackage (http://hackage.haskell.org/).\n  \n  Aforementioned dependencies are
  enough to build yampasynth-wav application.\n  To build yampasynth-openal in addition
  you will need OpenAL package from Hackage.\n  To build yampasynth-gtk in addition
  you will need to install GTK and Glade from Hackage.\n\n  For further details about
  dependencies see cabal package description file (YampaSynth.cabal).\n\nInstallation\n------------\nUse
  standard steps for Cabal package installation.\n\nrunhaskell Setup.hs configure\nrunhaskell
  Setup.hs build\nrunhaskell Setup.hs install\n\nThis will install applications for
  which your system satisfies dependencies.\n\nUsage\n-----\nSome typical usage example
  are:\n\nyampasynth-wav -r 44100  -s /path/to/SoundFontFile.sf2  -m /path/to/MidiFile.mid
  \ -o /path/to/result.wav\n\nyampasynth-openal -r 11025 -s /path/to/SoundFontFile.sf2
  -m /path/to/MidiFile.mid\n\nyampasynth-gtk -r 22050 -s /path/to/SoundFontFile.sf2\n\nIf
  you have dual core CPU add \"+RTS -N2 -RTS\" to your options (this works only for
  yampasynth-openal and yampasynth-gtk).\nYou may also try \"+RTS -N2 -C -RTS\".\n\nOption
  \"-r 44100\" sets sampling rate (or sampling frequency) of a synthesizer to 44100
  samples per second.\nWith yampasynth-wav I recommend to use 44100 Hz, which will
  generate audio CD quality .wav files.\nWith yampasynth-openal I recommend to use
  11025 Hz to get a smooth real-time playback without interruption, especially when
  playing a polyphonic music with several instruments. But sometimes you can afford
  higher sampling rates, feel free to experiment with this value.\nWith yampasynth-gtk
  I recommend to use 22050 Hz, if you get interruptions decrease it.\n\nSoundFonts\n----------\nSoundFonts
  are instrument description files. They are used in software and hardware synthesis.
  Free soundfonts are available for download. Try to google \"free soundfont\". Here
  are some links which I have found and used:\nhttp://soundfonts.homemusician.net/\nhttp://www.sf2midi.com/\n\nI
  recommend to search for \"FluidR3_GM.SF2\" (it is also included in some linux distributions).
  However the file size is about 150 MB and it takes some time for synthesizer to
  parse and import it into memory. But quality of the generated audio is very good.\nThere
  are smaller ones e.g. \"Ultimate.SF2\" which is only 8 MB in size.\n\nOpenAL\n------\nFor
  real-time playback I use Haskell binding of OpenAL library.\nOn some linux systems
  (including my Ubuntu 7.10, OpenAL version libopenal0a 1:0.0.8) there are some issues
  with original C library, it is very buggy. For example on my system there were problems
  with ALSA output, so I had to put \"(define devices '(native esd))\" into my \"~/.openalrc\"
  file.\nAlso output was not that good on sampling rates other than 11025, 22050 and
  44100.\nIn general I recommend to use these sampling rates if you experience similar
  problems."
description-type: text
hash: 9113d4cc9a400bc562f7a76864d81c18cc63bb5df57d508df7bbfcd17c97a6bd
homepage: http://www-db.informatik.uni-tuebingen.de/team/giorgidze
latest: '0.2'
license-name: BSD-3-Clause
maintainer: George Giorgidze (giorgidze@gmail.com)
synopsis: Software synthesizer
test-bench-deps: {}
