homepage: ''
changelog-type: markdown
hash: f961039a5061d3ba428e6c086062fe741b39d6467fdf9c2124312d98c577849c
test-bench-deps:
  optics-core: -any
  bytestring: -any
  sop-core: -any
  base: '>=4.12 && <4.17'
  text: -any
  containers: -any
  quickcheck-instances: -any
  borsh: -any
  wide-word: -any
  tasty-quickcheck: -any
  tasty: -any
  generics-sop: -any
  QuickCheck: -any
  profunctors: -any
maintainer: edsko@well-typed.com
synopsis: Implementation of BORSH serialisation
changelog: |
  # Revision history for borsh

  ## 0.2.0 -- 2022-11-15

  * Remove dependency on `memory`
  * Don't newtype-wrap `Int128` and `Word128`
  * Improve documentation of the incremental interface
  * Make size argument to `FixedSizeArray` nominal

  ## 0.1.0 -- 2022-11-11

  * First released version
basic-deps:
  bytestring: '>=0.10 && <0.12'
  sop-core: '>=0.5 && <0.6'
  base: '>=4.12 && <4.17'
  text: '>=1.2 && <2.1'
  containers: '>=0.6 && <0.7'
  wide-word: '>=0.1 && <0.2'
  generics-sop: '>=0.5 && <0.6'
  vector: '>=0.13 && <0.14'
all-versions:
- 0.1.0
- 0.2.0
author: Edsko de Vries, Finley McIlwaine
latest: 0.2.0
description-type: haddock
description: |-
  This package provides type classes and combinators for
  serialisation\/deserialisation to\/from [Borsh](https://borsh.io/) format.
  Unlike [CBOR](http://cbor.io/), Borsh is a non self-describing serialisation
  format. It is designed such that any object serialises to a canonical and
  deterministic string of bytes.

  The library supports incremental encoding and incremental decoding, and
  supports the use of the @ST@ monad in the decoder for efficient decoding for
  types such as arrays. However, the library has currently not been optimized
  for speed, and there may well be low-hanging fruit to make it faster.
license-name: BSD-3-Clause
