homepage: https://github.com/phadej/boring
changelog-type: markdown
hash: f3385e3c204f8cb943efff70471677d641c2ae1af38406805f748df68b340fe4
test-bench-deps: {}
maintainer: Oleg.Grenrus <oleg.grenrus@iki.fi>
synopsis: Boring and Absurd types
changelog: |
  # Revision history for boring

  ## 0.2

  - Make `boring` package dependency light.
    `fin`, `bin`, `ral`, `vec`, `dec`, `singleton-bool` instances
    are migrated to corresponding packages.
    Rest are migrated to `boring-instances` for now.
  - Data.Boring is `Trustworthy`
  - Add Generic derivation. Thanks to David Feuer.

  ## 0.1.3

  - Allow `vec-0.3`
  - Add instances for `ral` and `bin` types.

  ## 0.1.2

  - Add instances for 'Boring' instances for 'SBool', 'SNat' and 'LE'.
  - Add 'Boring (Dec a)', 'boringYes' and 'boringNo'.

  ## 0.1.1

  - Add `GHC.Generics` instances
  - Add `:~~:` and `Coercion` instances

  ## 0.1

  - `streams`, `constraints`, `generics-sop` instances.
  - Reversed dependency with `vec`, add `fin` instances.

  ## 0

  - First version. Released on an unsuspecting world.
basic-deps:
  base: '>=4.5 && <4.16'
  tagged: '>=0.8.6 && <0.9'
  transformers: '>=0.3 && <0.6'
all-versions:
- '0'
- '0.1'
- 0.1.1
- 0.1.2
- 0.1.3
- '0.2'
author: Oleg Grenrus <oleg.grenrus@iki.fi>
latest: '0.2'
description-type: haddock
description: |-
  * @Boring@ types are isomorphic to @()@.

  * @Absurd@ types are isomorphic to @Void@.

  See [What does () mean in Haskell -answer by Conor McBride](https://stackoverflow.com/questions/33112439/what-does-mean-in-haskell/33115522#33115522)
license-name: BSD-3-Clause
