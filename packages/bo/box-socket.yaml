all-versions:
- 0.0.1
- 0.0.2
- 0.1.1
- 0.1.2
- 0.2.0
- 0.3.0
- 0.4.0
- 0.4.1
- 0.5.0.0
- 0.5.1.0
- 0.5.2.0
- 0.5.2.1
author: Tony Day
basic-deps:
  async: '>=2.2.3 && <2.3'
  base: '>=4.14 && <5'
  box: '>=0.9.3 && <0.10'
  box-socket: '>=0'
  bytestring: '>=0.11.3 && <0.13'
  network-simple: '>=0.4 && <0.5'
  optparse-applicative: '>=0.17 && <0.20'
  profunctors: '>=5.6 && <5.7'
  text: '>=1.2 && <2.2'
  websockets: '>=0.12 && <0.14'
changelog: |+
  0.5.2
  ===
  * dependency bumps for 9.10

  0.5
  ===
  * complete refactor

  * aligned TCP api with Websockets

  * Action & Codensity-based API surface

changelog-type: markdown
description: |+
  [![img](https://img.shields.io/hackage/v/box-socket.svg)](https://hackage.haskell.org/package/box-socket) [![img](https://github.com/tonyday567/box-socket/actions/workflows/haskell-ci.yml/badge.svg)](https://github.com/tonyday567/box/actions/workflows/haskell-ci.yml)

  Socket API based on the box library, with websockets and TCP support.


  # Usage

      :set -XOverloadedStrings
      import Box
      import Box.Socket.Types
      import Box.Websocket

  IO client:

      clientBox defaultSocketConfig (CloseAfter 0) (stdBox "q")

  IO server:

      serverBox defaultSocketConfig (CloseAfter 0) (stdBox "q")

  See examples in Box.Websocket.Example and Box.TCP.Example for a variety of usage.


  # Design

  -   The API attempts to be similar for TCP and Websocket

  -   A Codensity, continuation passing style is encouraged, similar to the box library.

description-type: markdown
hash: a0056c7e69f06a417a01510cf873121ce806c306ea69cf91fc589a990619834e
homepage: https://github.com/tonyday567/box-socket#readme
latest: 0.5.2.1
license-name: BSD-3-Clause
maintainer: tonyday567@gmail.com
synopsis: Box websockets
test-bench-deps:
  base: '>=4.14 && <5'
  doctest-parallel: '>=0.3 && <0.5'
...
