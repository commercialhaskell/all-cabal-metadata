homepage: https://gitlab.com/daniel-casanueva/haskell/mysql-json-table
changelog-type: markdown
hash: 609994f9d78ba2ce140313a799f597d32a2f00b0e1de998c0c363d38fdd0d6b7
test-bench-deps: {}
maintainer: Daniel Casanueva (daniel.casanueva `at` proton.me)
synopsis: Using MySQL to store id-to-json tables.
changelog: |-
  ## 0.1.0.0
  * Initial release.
basic-deps:
  bytestring: -any
  mysql: -any
  base: <5
  conduit: -any
  mysql-json-table: -any
  aeson: -any
  mysql-simple: -any
all-versions:
- 0.1.0.0
author: Daniel Casanueva (daniel.casanueva `at` proton.me)
latest: 0.1.0.0
description-type: markdown
description: |-
  # mysql-json-table

  Using mysql to store id-to-json tables.

  A table would look something like this:

  |       id       |        data        |
  |----------------|--------------------|
  | Row identifier | JSON-encoded value |

  ## Why would you do this?

  To re-use mysql-server capabilities without having to deal with table reshaping.
  If changes come down the road, the data content might change, but the table stays the same.
  JSON can easily be made compatible between versions, making for smoother releases and rollbacks.
  It's also simple, and I like simple.

  ## Documentation

  Haddock documentation can be found [here](https://daniel-casanueva.gitlab.io/haskell/mysql-json-table/doc)
  (based on the main branch).
license-name: MIT
