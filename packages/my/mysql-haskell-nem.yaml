all-versions:
- 0.1.0.0
author: |-
  José Lorenzo Rodríguez
  , Bryan O'Sullivan
  , Paul Rouse
basic-deps:
  base: '>=4.7 && <5'
  bytestring: '>=0'
  io-streams: '>=0'
  mysql-haskell: '>=0'
  scientific: '>=0'
  text: '>=0'
  time: '>=0'
changelog: ''
changelog-type: ''
description: "mysql-haskell-nem\n=================\n\nProvides a simpler interface
  for retrieving results when using the [mysql-haskell](http://hackage.haskell.org/package/mysql-haskell)
  package.\n\nGuide\n-----\n\nThe `Database.MySQL.Base` and `Database.MySQL.Nem` modules
  provides everything you need to start making queries:\n\n```haskell\n{-# LANGUAGE
  OverloadedStrings #-}\n\nmodule Main where\n\nimport Database.MySQL.Base\nimport
  Database.MySQL.Base.Nem\nimport Data.Text (unpack)\nimport qualified System.IO.Streams
  as Streams\n\nmain :: IO () \nmain = do\n    conn <- connect\n        defaultConnectInfo
  {ciUser = \"username\", ciPassword = \"password\", ciDatabase = \"dbname\"}\n\n\tresults
  <- queryResults conn \"SELECT email, name FROM users\" >>=\n\t_ <-\n\t\tStreams.mapM_\n\t\t\t(\\(email,
  name) -> print $ (Text.unpack email) ++ \":\" ++ (name :: String) ) results >>=\n\t\tStreams.toList\n```\n\nIt's
  recommended to use prepared statement to improve query speed:\n\n```haskell\n    ...\n
  \   s <- prepareStmt conn \"SELECT * FROM some_table where person_age > ?\"\n    ...\n
  \   results <- queryStmtResutls s [MySQLInt32U 18]\n    ...\n```\n"
description-type: markdown
hash: 302757858fd59b0a6b35eb447529306708c737b7ca794cafccc4e24e0f71254e
homepage: https://github.com/lorenzo/mysql-haskell-nem#readme
latest: 0.1.0.0
license-name: BSD-3-Clause
maintainer: jose.zap@gmail.com
synopsis: Adds a interface like mysql-simple to mysql-haskell.
test-bench-deps: {}
