all-versions:
- 0.1.0.0
- 0.1.0.1
- 0.1.1.0
- 0.1.1.1
- 0.1.1.2
- 0.1.1.3
- 0.1.1.4
- 0.1.1.5
- 0.1.1.6
- 0.1.1.7
- 0.1.1.8
- 0.1.2
- 0.1.2.1
- 0.1.3
- 0.1.4
- 0.1.5
- 0.1.6
- 0.1.7
- 0.1.7.2
- 0.1.7.3
- '0.2'
- 0.2.0.1
- 0.2.1
author: Bryan O'Sullivan <bos@serpentine.com>
basic-deps:
  base: <5
  bytestring: '>=0.9 && <1.0'
  containers: '>=0'
changelog: |
  ## 0.2.1

  * Work around incorrect test for header-file definition of MYSQL_TYPE_JSON (#45 and 51464fa)

  ## 0.2.0.1

  * Make connection finalizer thread safe (#28).

  ## 0.2

  * Remove obsolete `fieldDefault` from `data Field` (#41).

  ## 0.1.7.3

  * Fix error on certain systems introduced by the change in (#40): some implementations of `mysql_config` do not recognise `--libs-sys`, yet return a zero status for attempts to use it.

  ## 0.1.7.2

  * Update .cabal file

  ## 0.1.7.1

  * Use `mysql_config --libs-sys` in Setup.hs if available (#40)

  ## 0.1.7

  * Add support for JSON type

  ## 0.1.6

  * Fix build for mysql 8

  ## 0.1.5

  * Add Semigroup instance for FieldFlags
  * Fix some warnings
  * Drop testing under GHC 7.8 / lts-2

  ## 0.1.4

  * Expose mysql_thread_end() as `endThread`

  ## 0.1.3

  * Safer concurrency - see https://ro-che.info/articles/2015-04-17-safe-concurrent-mysql-haskell
  * Better support for building against MariaDB (not well tested).
  * Additional C binding: mysql_get_server_version().

  ## 0.1.2.1

  * Fix bystestring-valued connectOptions sometimes not being null terminated at the correct place (avoid unsafeUseAsCString).

  ## 0.1.2

  * Fix setup for cabal 1.24
  * New maintainer and GitHub location - with many thanks to Bryan O'Sullivan for all of the past work on this module, and for facilitating the transfer of maintenance responsibility.
changelog-type: markdown
description: |
  # mysql: bindings to the mysqlclient library

  This library is a Haskell binding to the MySQL `mysqlclient` client
  library.  It is a fairly faithful, low level library that implements
  most of the MySQL client API.  The major departure from the C API is
  that in Haskell, resource management is mostly automatic and safe.

  This library deliberately avoids the question of providing a "good"
  API. Its purpose is to serve as a base upon which higher-level
  libraries can be built.

  # Licensing

  This library is BSD-licensed under the terms of the
  [MySQL FOSS License Exception](http://www.mysql.com/about/legal/licensing/foss-exception/).

  Since this library links against the GPL-licensed `mysqlclient`
  library, a non-open-source application that uses it *may* be subject
  to the terms of the GPL.

  # To do

  * Add support for prepared statements. The prepared statement API is
    huge and of dubious performance value, so it's not currently a
    priority for us. Patches welcome!

  # Get involved!

  We are happy to receive bug reports, fixes, documentation enhancements,
  and other improvements.

  Please report bugs via the
  [github issue tracker](http://github.com/paul-rouse/mysql/issues).

  Master [git repository](http://github.com/paul-rouse/mysql):

  * `git clone git://github.com/paul-rouse/mysql.git`

  # Authors

  This library was written by Bryan O'Sullivan, <bos@serpentine.com>,
  to whom all of the credit is due.
  It is now being maintained by Paul Rouse, <pyr@doynton.org>.
description-type: markdown
hash: 156061d432d29b3a56037e8a67e16589b1d370fb9ad0dd71a81ea2c4b0b195bb
homepage: https://github.com/paul-rouse/mysql
latest: 0.2.1
license-name: BSD-3-Clause
maintainer: Paul Rouse <pyr@doynton.org>
synopsis: A low-level MySQL client library.
test-bench-deps:
  base: '>=4 && <5'
  bytestring: '>=0'
  hspec: '>=0'
  mysql: '>=0'
