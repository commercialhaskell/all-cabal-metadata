all-versions:
- 0.1.0
- 0.1.1
- 0.1.2
- 0.2.0
- 0.2.1
- 0.3.0
author: Igor Pashev <pashev.igor@gmail.com>
basic-deps:
  ConfigFile: '>=1.1'
  MissingH: '>=0'
  aeson: '>=0.8'
  base: '>=4.8 && <50'
  bytestring: '>=0.10'
  data-default-class: '>=0'
  docopt: '>=0.7'
  fast-logger: '>=0'
  filepath: '>=0'
  http-types: '>=0.9'
  interpolatedstring-perl6: '>=1.0'
  mtl: '>=2.2'
  mysql: '>=0.1'
  mysql-simple: '>=0.2'
  network: '>=2.6'
  resource-pool: '>=0.2'
  scotty: '>=0.10'
  text: '>=1.2'
  unix: '>=2.7'
  unordered-containers: '>=0.2'
  wai: '>=3.2'
  wai-extra: '>=3.0'
  wai-middleware-static: '>=0.8'
  warp: '>=3.2'
changelog: |+
  0.3.0
  =====

    * Support Sproxy's end-point `/.sproxy/access` to find servers, available
      to the current user, in one single HTTP request. This requires
      Sproxy2 >= 1.95.0. Fallback to old multiple-request way if that
      end-point returns error.


  0.2.1
  =====

    * Compress all responses with gzip if acceptable


  0.2.0
  =====

    * Allow killing queries via `CALL mysql.mywatch_kill(id)`. You should have
      this routine on your database server and grant MyWatch privilege to
      execute it. Provided a safe example of this function.

    * Minor improvements in UI


  0.1.2
  =====

    * Use location hash for server name
    * Compact server list (`display: inline-block`)


  0.1.1
  =====

    * Request `HEAD /server/:server/processlist.json` before
      showing the server to user. This is to hide servers which
      are not allowed by Sproxy to this user.

    * Added a workaround for buggy haskell mysql package
      causing a heisenbug that random sections of the
      configuration files were not found by libmysqlclient.

    * Added a workaround for the way MariaDB's libmysqlclient
      processes SSL options. SSL now works with MariaDB's
      libmysqlclient.

    * Fixed parsing of `GRANT` queries (they have `NULL` states)


  0.1.0
  =====

    * Initial version
    * Only view queries

changelog-type: markdown
description: |+
  My Watch
  ========

  Web application for viewing and killing MySQL queries on multiple
  servers. Designed to work behind [Sproxy](http://hackage.haskell.org/package/sproxy2).


  Requirements
  ============

  MyWatch is written in Haskell with [GHC](http://www.haskell.org/ghc/).
  All required Haskell libraries are listed in [mywatch.cabal](mywatch.cabal).
  Use [cabal-install](http://www.haskell.org/haskellwiki/Cabal-Install)
  to fetch and build all pre-requisites automatically.


  Installation
  ============

      $ git clone https://github.com/ip1981/mywatch.git
      $ cd mywatch
      $ cabal install


  Usage
  =====

  Type `mywatch --help` to see usage summary:

      Usage:
        mywatch [options] MYCNF

      Options:

        -d, --datadir=DIR        Data directory including static files [default: {cabal data dir}]

        -s, --socket=SOCK        Listen on this UNIX-socket [default: /tmp/mywatch.sock]
        -p, --port=PORT          Instead of UNIX-socket, listen on this TCP port (localhost)

        -h, --help               Show this message



  Configuration
  =============

  The `MYCNF` argument denotes a MySQL client config file.  Each section in this
  file describes a MySQL server where you can view processes. As usually, the
  "client" section applies internally to all other sections, but is ignored by
  MyWatch. Remember to make this file secret if it includes passwords, or use the
  `!include` directive. However, MyWatch does not parse included files for
  more sections.

  ```
  [foo]
  host = example.com
  user = user1
  ...

  [bar]
  host = example.net
  user = user2
  ...

  !include /run/keys/my.secret.cnf
  ```

  Sproxy Configuration
  ====================

  * To access the service allow `GET` for `/`, `/static/%` and `/serverlist.json`.
  * To see processes on a particular MySQL server allow `GET` and (optional)
    `HEAD` for `/server/:server/processlist.json`. The latter is only required with
    Sproxy2 before version 1.95.0
  * To kill processes allow `DELETE` for `/server/:server/process/%`


  Database Configuration
  ======================

  MyWatch needs the [PROCESS](http://dev.mysql.com/doc/refman/en/privileges-provided.html#priv_process)
  privilege.

  To be able to kill queries a procedure named `mywatch_kill` must exist
  in the `mysql` database.  MyWatch invokes `CALL mysql.mywatch_kill(id)`
  for killing queries.  It's up to you how to implement this routine, for a
  safe example see [sql/mywatch_kill.sql](sql/mywatch_kill.sql). Of course,
  MyWatch should be granted to execute this procedure.  If this procedure
  does not exist, MyWatch will not show this possibility in user interface,
  API will work, but result in Internal Server Error (HTTP 500). There is no
  filtering at application level, though the "kill" button may not be shown
  in some circumstances.


  Screenshots
  ===========
  ![MyWatch1](./screenshots/mywatch-1.png)
  ![MyWatch2](./screenshots/mywatch-2.png)

description-type: markdown
hash: 2e4fefa2c6f6cdd6ab4149e975cc2dde3c181ab84083c0c0d3ff61c5497245c1
homepage: ''
latest: 0.3.0
license-name: MIT
maintainer: Igor Pashev <pashev.igor@gmail.com>
synopsis: Web application to view and kill MySQL queries
test-bench-deps: {}
