all-versions:
- 0.0.0.1
- 0.0.0.2
- 0.0.1.0
- 0.0.1.2
author: Kenny Foner
basic-deps:
  aeson: ^>=1.4
  async: ^>=2.2
  base: '>=4.12.0.0 && <=4.14.0.0'
  blaze-html: ^>=0.9
  blaze-markup: ^>=0.8
  bytestring: ^>=0.10
  constraints: '>=0.10 && <=0.12'
  containers: ^>=0.6
  dependent-map: ^>=0.4
  file-embed: ^>=0.0.11.1
  hashable: ^>=1.3
  http-client: ^>=0.6
  http-types: ^>=0.12
  lens: ^>=4.19
  modern-uri: ^>=0.3
  mtl: ^>=2.2
  req: '>=3.1 && <=3.3'
  salve: ^>=1.0
  some: ^>=1.0
  spoon: ^>=0.3
  template-haskell: '>=2.14.0.0 && <=2.16.0.0'
  text: ^>=1.2
  transformers: ^>=0.5
  unordered-containers: ^>=0.2
changelog: ''
changelog-type: markdown
description: |-
  [Myxine](https://github.com/kwf/myxine) is a language-agnostic local
  server that lets you build interactive applications in the browser using a
  RESTful API. This package defines high-level typed Haskell bindings for using
  Myxine to quickly prototype surprisingly high-performance GUIs.

  Myxine itself runs as a local server, separately from these bindings. It is
  built in [Rust](https://www.rust-lang.org/learn/get-started), and can be
  installed using the standard Rust build tool @cargo@:

  > $ cargo install myxine

  This Haskell package does __not__ manage the @myxine@ server process; it
  assumes that it is already running in the background (either started by an
  end-user, or managed by your own Haskell application).

  __Required extensions:__ This library relies on the __@OverloadedRecordFields@__
  language extension, since a variety of browser event interfaces share field
  names/types. Without enabling it, you'll see many bewildering errors about
  ambiguous names. You may also find useful for concision the extensions
  __@NamedFieldPuns@__ and __@RecordWildCards@__.
description-type: haddock
hash: 0bd35e0634306028010f8f10adf6a081a85dc74af5e419541f4a6980a2834314
homepage: https://github.com/kwf/myxine
latest: 0.0.1.2
license-name: MIT
maintainer: kwf@very.science
synopsis: A Haskell client for the Myxine GUI server
test-bench-deps:
  bytestring: '>=0'
  myxine-client: '>=0'
  text: '>=0'
