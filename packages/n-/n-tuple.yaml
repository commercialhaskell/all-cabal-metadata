all-versions:
- 0.0.0
- 0.0.1
- 0.0.1.1
- 0.0.2.0
- 0.0.3
author: Athan Clark
basic-deps:
  base: '>=4.11 && <5'
  singletons-base: '>=3'
  vector: '>=0'
changelog: ''
changelog-type: ''
description: |
  # n-tuple

  This is a silly implementation of "homogeneous n-length tuples" -- basically
  an array. Internally, it builds a `Vector`, and projections just pull that index.

  ```haskell
  {-# LANGUAGE DataKinds -#}

  import Data.NTuple


  foo :: NTuple 3 String
  foo
    = incl _3 "three"
    . incl _2 "two"
    . incl _1 "one"
    $ empty


  one :: String
  one = proj _1 foo

  two :: String
  two = proj _2 foo
  ```
description-type: markdown
hash: d437b2c8e0cc35c54c962e3b485793dabe7d0a36cf07f19ab50c8e034926028f
homepage: https://github.com/athanclark/n-tuple#readme
latest: 0.0.3
license-name: BSD-3-Clause
maintainer: athan.clark@gmail.com
synopsis: Homogeneous tuples of arbitrary length.
test-bench-deps: {}
