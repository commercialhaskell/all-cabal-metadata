all-versions:
- 0.1.0.0
author: Jonathan Kochems
basic-deps:
  base: '>=4.7 && <4.8'
  json: '>=0.9 && <0.10'
changelog: ''
changelog-type: ''
description: "# json-litobj [![Build Status](https://travis-ci.org/jonathankochems/json-litobj.svg)](https://travis-ci.org/jonathankochems/json-litobj)
  [![codecov.io](http://codecov.io/github/jonathankochems/json-litobj/coverage.svg?branch=master)](http://codecov.io/github/jonathankochems/json-litobj?branch=master)
  [![BSD3 License](http://img.shields.io/badge/license-BSD3-brightgreen.svg)](https://tldrlegal.com/license/bsd-3-clause-license-%28revised%29)\n\nThis
  module extends Text.JSON to enable the decoding of strings containing literal JS
  objects.\nIn particular, it relaxes the restriction that fields in JSON objects
  must be strings.\n\nFor example:\n\n* JSON conformant:  \n\n> { \"foo\" : \"bar\"
  }\n\n* literal JS object: \n\n> { foo : \"bar\" }\n\n## Documentation\n\nThe haddock
  documentation can be found on [hackage](https://hackage.haskell.org/package/json-litobj-0.1.0.0).\n\n##
  Motivation\n\nI wanted to parse JSON responses from various websites with Text.JSON.
  Unfortunately, I ran into parsing errors due to literal JS objects included in the
  answer strings. Since literal JS object are not really part of the JSON format I
  started this module to work around this problem.\n\n## Contributing\n\nIf you feel
  that this module is missing something useful which should be part of a more ``permissive''
  JSON parsing please consider a contribution.\n\nTo contribute:\n\n1. fork this repository\n2.
  create a feature branch \n3. commit and push your code to your feature branch\n4.
  create a pull request to this repository\n\n"
description-type: markdown
hash: 92dbae78243d407d1120f80ffe00628a10f0064ce2697c9ed044a40a831e20ad
homepage: https://github.com/jonathankochems/json-litobj
latest: 0.1.0.0
license-name: BSD-3-Clause
maintainer: jonathan.kochems@gmail.com
synopsis: Extends Text.JSON to handle literal JS objects.
test-bench-deps:
  QuickCheck: '>=2.6'
  base: '>=0'
  hspec: '>=1.3'
  json: '>=0.9'
  json-litobj: '>=0'
