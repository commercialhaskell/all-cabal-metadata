all-versions:
- 0.1.0.0
- 0.1.0.1
- 0.1.0.2
- 0.1.0.3
- 0.1.0.4
- 0.1.0.5
- 0.2.0.0
- 0.2.0.1
- 0.2.0.2
- 0.2.1.0
- 0.2.1.1
- 0.2.1.2
- 0.2.1.4
- 0.2.1.5
- 0.2.1.6
- 0.3.0.0
- 0.3.0.1
- 0.3.0.2
- 0.4.0.0
- 0.5.0.0
- 0.6.0.0
- 0.6.1.0
- 0.6.2.0
- 0.6.2.1
- 0.7.0.0
- 0.7.0.1
- 0.7.0.2
- 0.7.1.0
- 0.7.1.1
- 0.8.0.0
- 1.0.0
- 1.0.1
- 1.0.2
- 1.0.3
- 1.0.4
- 1.1.0
- 1.1.1
- 1.1.2
author: JP Rupp
basic-deps:
  QuickCheck: '>=0'
  aeson: '>=0'
  attoparsec: '>=0'
  attoparsec-aeson: '>=0'
  base: '>=4.6 && <5'
  bytestring: '>=0'
  conduit: '>=0'
  conduit-extra: '>=0'
  deepseq: '>=0'
  hashable: '>=0'
  json-rpc: '>=0'
  monad-logger: '>=0'
  mtl: '>=0'
  stm-conduit: '>=0'
  text: '>=0'
  time: '>=0'
  unliftio: '>=0'
  unordered-containers: '>=0'
  vector: '>=0'
changelog: |
  # Changelog
  All notable changes to this project will be documented in this file.

  The format is based on [Keep a Changelog](http://keepachangelog.com/en/1.0.0/)
  and this project adheres to [Semantic Versioning](http://semver.org/spec/v2.0.0.html).

  ## 1.1.2 - 2025-05-09

  ### Fixed
  - Correct Arbitraty instance for errors.

  ## 1.1.1 - 2023-03-14

  ### Fixed
  - Close TBMChan when the session is closed

  ## 1.1.0 - 2023-12-29

  ### Changed
  - Update dependency to Aeson 2.2.

  ## 1.0.4 - 2022-05-15

  ### Fixed
  - Remove `Arbitrary Value` instance because it is already provided by the `aeson` package.

  ### Changed
  - Relax restrictions on `params` field for JSON-RPCv1 requests.
  - Bump minimum version of `aeson` accordingly.

  ## 1.0.3 - 2020-06-19

  ### Changed
  - `LogSource` (defined in `monad-logger`) for this library is set to `"json-rpc"` so that logs can be filtered base on it.

  ## 1.0.2 - 2020-06-12
  ### Changed
  - Change license to MIT.

  ## 1.0.1 - 2019-01-01
  ### Fixed
  - Correct JSON-RPC 2.0 methods returning null result.

  ## 1.0.0 - 2018-08-12
  ### Added
  - Complete JSON-RPC 1.0 and 2.0 support.
  - Ability to use either endpoint to send and receive requests, responses or notifications.
  - Simple TCP client/server implementation available.
  - Example files.
  - Exhaustive test suite.
  - Compatibility with GHC 8.4.
  - Support semantic versioning.
  - Add a changelog.
changelog-type: markdown
description: |+
  json-rpc
  ========

  Fully-featured JSON-RPC 2.0 library for Haskell programs.

  This JSON-RPC library is fully-compatible with JSON-RPC 2.0 and 1.0. It
  provides an interface that combines a JSON-RPC client and server. It can
  set and keep track of request ids to parse responses.  There is support
  for sending and receiving notifications. You may use any underlying
  transport.  Basic TCP client and server provided.

  A JSON-RPC application using this interface is considered to be
  peer-to-peer, as it can send and receive all types of JSON-RPC message
  independent of whether it originated the connection.

  [Documentation](http://hackage.haskell.org/package/json-rpc)

  [Examples](https://github.com/xenog/json-rpc/tree/master/examples)

description-type: markdown
hash: 91dec952d78b6d87d92e35d1c22dbec6ce5a3234cda00071fc196dd57ee81758
homepage: https://github.com/jprupp/json-rpc.git#readme
latest: 1.1.2
license-name: MIT
maintainer: jprupp@protonmail.ch
synopsis: Fully-featured JSON-RPC 2.0 library
test-bench-deps:
  QuickCheck: '>=0'
  aeson: '>=0'
  attoparsec-aeson: '>=0'
  base: '>=4.6 && <5'
  bytestring: '>=0'
  conduit: '>=0'
  conduit-extra: '>=0'
  hspec: '>=0'
  json-rpc: '>=0'
  monad-logger: '>=0'
  mtl: '>=0'
  stm-conduit: '>=0'
  text: '>=0'
  time: '>=0'
  unliftio: '>=0'
  unordered-containers: '>=0'
  vector: '>=0'
