all-versions:
- 0.1.0.0
- 0.1.1.0
- 0.1.2.0
- 0.1.3.0
- 0.1.4.0
- 0.1.5.0
- 0.1.6.1
- 0.1.6.2
- 0.1.6.3
- 0.1.6.4
- 0.1.7.0
- 0.1.7.1
- 0.1.7.2
author: |-
  Andrew Cowie <andrew@operationaldynamics.com>,
  Herbert Valerio Riedel <hvr@gnu.org>
basic-deps:
  HsOpenSSL: ^>=0.11.2
  attoparsec: ^>=0.13.2.2 || ^>=0.14.4
  base: '>=4.9 && <5'
  base64-bytestring: ^>=1.2.1.0
  binary: ^>=0.8.3.0
  blaze-builder: ^>=0.4.1.0
  brotli-streams: ^>=0.0.0.0
  bytestring: '>=0.10.0.0 && <0.13'
  case-insensitive: ^>=1.2.0.11
  containers: '>=0.5.7.1 && <1'
  cryptohash-sha1: ^>=0.11.100
  directory: ^>=1.2.6.2 || ^>=1.3.0.0
  io-streams: ^>=1.5.0.1
  mtl: ^>=2.2.2 || ^>=2.3.1
  network: ^>=2.6.3.1 || ^>=2.7.0.0 || ^>=2.8.0.0 || ^>=3.0.0.0 || ^>=3.1.0.0 || ^>=3.2.0.0
  network-uri: ^>=2.6.1.0
  openssl-streams: ^>=1.2.1.3
  text: ^>=1.2.3.0 || ^>=2.0 || ^>=2.1
  xor: ^>=0.0.1.0
changelog: |
  See also http://pvp.haskell.org/faq

  ### 0.1.7.2

  * Fix compilations with `-Werror={unused-packages,incomplete-uni-patterns}`.

  Tested with GHC 8.0 - 9.14 alpha1.

  ### 0.1.7.1

  * Drop support for GHC 7.
  * Drop unused dependency `system-filepath`.

  Tested with GHC 8.0 - 9.12.2.

  ### 0.1.7.0

  * New function `voidContextSSL` for creating a _void_ SSL Context which rejects any TLS handshake attempts
  * New function `contextSetCASystemStore` exposing functionality embedded in `baselineContextSSL`

  NB: These functions were originally introduced in the retroactively deprecated 0.1.6.0 release but due to an oversight were dropped again in 0.1.6.1 inadvertently. This minor release reintroduces them in a PVP-compliant way.

  #### 0.1.6.4

  * Depend on `directory` rather than `system-fileio` ([PR #18](https://github.com/haskell-hvr/http-io-streams/pull/18)).

  Tested with GHC 8.0 - 9.8.

  #### 0.1.6.3

  * Test-suite: add dependency `attoparsec-aeson` for `aeson-2.2`.

  Tested with GHC 8.0 - 9.8.

  #### 0.1.6.2

  * Allow `mtl-2.3` (no code change).
  * Run test-suite via `cabal test`.

  Tested with GHC 7.4 - 9.6.

  #### 0.1.6.1 revision 1

  * Allow `text-2.0` (no code change).

  #### 0.1.6.1

  * Build with GHC 9.2 and `ghc-prim-0.8` (via `base-4.16`).
  * Accidentally removed function `voidContextSSL` and `contextSetCASystemStore` introduced in 0.1.6.0

  ### 0.1.6.0 **deprecated**

  * New function `voidContextSSL` for creating a _void_ SSL Context which rejects any TLS handshake attempts
  * New function `contextSetCASystemStore` exposing functionality embedded in `baselineContextSSL`
  * New function `openConnectionAddress''` supporting supplying local `SSLContext`s as well as modifying the `SSL` connection before initiating the client SSL handshake.
  * New function `openConnectionSSL'` which allows to customize the SSL connection _before_ a client SSL handshake is attempted.
  * New convenience function `getContextSSL` function allowing to retrieve global `SSLContext`.

  ### 0.1.5.0

  * New function `openConnectionAddress'` function supporting supplying local `SSLContext`s.

  ### 0.1.4.0

  * New module `Network.Http.Client.WebSocket` providing basic RFC6455 support.
  * New function `inputStreamBodyChunked` supporting breaking up over-sized chunks.

  ### 0.1.3.0

  * New functions `receiveUpgradeResponse`, `receiveConnectResponse`, and `unsafeWithRawStreams` for accessing full-duplex low-level streams (e.g. for upgrading to Websockets protocol).
  * New function `makeConnection` for constructing a `Connection` object over custom streams.

  ### 0.1.2.0

  * New functions `unsafeReceiveResponse` and `unsafeReceiveResponseRaw` that do not automatically skip to end-of-stream.

  ### 0.1.1.0

  * New alternative connection-setup API (`ConnectionAddress` et al.).
  * New function `getHeaderMap` for exporting all response headers at once.
  * Add convenience functions `bytestringBody`, `lazyBytestringBody`, `utf8TextBody`, `utf8LazyTextBody`.
  * Add support for Brotli HTTP compression.

  ## 0.1.0.0

  * First version. Released on an unsuspecting world.
  * Derived from `http-streams-core-0.8.6.1` & `http-common-0.8.2.0`.
changelog-type: markdown
description: |-
  An HTTP client with WebSocket (RFC 6455) support, using the Snap Framework's [io-streams](https://hackage.haskell.org/package/io-streams) library to
  handle the streaming IO. The @http-io-streams@ API designed for ease of use when querying web services and dealing with the result as streaming I/O.

  The main HTTP/1.1 part of the library is exported in a single module "Network.Http.Client"; the WebSocket specific functionality is available from the "Network.Http.Client.WebSocket" module.

  __NOTE__: This package originally started as a fork of [http-streams](http://hackage.haskell.org/package/http-streams) with a lighter dependency footprint focusing on core HTTP functionality.
description-type: haddock
hash: 9f9a796feb6f58224ac22dbe1f4ce706c8738e59f72c17dac2b81ea6de374b01
homepage: ''
latest: 0.1.7.2
license-name: BSD-3-Clause AND GPL-2.0-or-later
maintainer: https://github.com/haskell-hvr/http-io-streams
synopsis: HTTP and WebSocket client based on io-streams
test-bench-deps:
  HUnit: '>=0'
  HsOpenSSL: ^>=0.11.2
  aeson: '>=0'
  aeson-pretty: '>=0'
  attoparsec: ^>=0.13.2.2 || ^>=0.14.4
  attoparsec-aeson: '>=0'
  base: '>=4.9 && <5'
  base64-bytestring: ^>=1.2.1.0
  blaze-builder: ^>=0.4.1.0
  bytestring: '>=0.10.0.0 && <0.13'
  case-insensitive: ^>=1.2.0.11
  containers: '>=0.5.7.1 && <1'
  directory: '>=1.2.6.2 && <1.3 || >=1.3.0.0 && <1.4'
  hspec: '>=0'
  hspec-expectations: '>=0'
  io-streams: ^>=1.5.0.1
  lifted-base: '>=0'
  mtl: ^>=2.2.2 || ^>=2.3.1
  network: ^>=2.6.3.1 || ^>=2.7.0.0 || ^>=2.8.0.0 || ^>=3.0.0.0 || ^>=3.1.0.0 || ^>=3.2.0.0
  network-uri: ^>=2.6.1.0
  openssl-streams: ^>=1.2.1.3
  snap-core: '>=0'
  snap-server: '>=0'
  text: ^>=1.2.3.0 || ^>=2.0 || ^>=2.1
  unordered-containers: '>=0'
