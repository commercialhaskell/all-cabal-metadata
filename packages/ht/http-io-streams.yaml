homepage: ''
changelog-type: markdown
hash: ac3813803aae1ca396a8046e1c12cd049da454435c760a94b516e5505f25f369
test-bench-deps:
  snap: -any
  bytestring: '>=0.10.0.0 && <0.13'
  case-insensitive: ^>=1.2.0.11
  openssl-streams: ^>=1.2.1.3
  base: '>=4.5 && <5'
  base64-bytestring: ^>=1.2.1.0
  aeson-pretty: -any
  unordered-containers: -any
  hspec: -any
  text: ^>=1.2.3.0 || ^>=2.0 || ^>=2.1
  system-fileio: -any
  network: ^>=2.6.0.0 || ^>=2.7.0.0 || ^>=2.8.0.0 || ^>=3.0.0.0 || ^>=3.1.0.0
  lifted-base: -any
  HUnit: -any
  containers: '>=0.5.0.0 && <0.8'
  snap-server: -any
  blaze-builder: ^>=0.4.1.0
  io-streams: ^>=1.5.0.1
  snap-core: -any
  network-uri: ^>=2.6.0.0
  mtl: ^>=2.2.2 || ^>=2.3.1
  attoparsec: ^>=0.13.2.2 || ^>=0.14.4
  transformers: ^>=0.3.0.0 || ^>=0.4.2.0 || ^>=0.5.2.0 || ^>=0.6.0.4
  HsOpenSSL: ^>=0.11.2
  system-filepath: -any
  aeson: -any
  hspec-expectations: -any
  directory: ^>=1.2.0.1 || ^>=1.3.0.0
maintainer: https://github.com/haskell-hvr/http-io-streams
synopsis: HTTP and WebSocket client based on io-streams
changelog: |
  See also http://pvp.haskell.org/faq

  #### 0.1.6.2

  * Allow `mtl-2.3` (no code change).
  * Run test-suite via `cabal test`.

  Tested with GHC 7.4 - 9.6.

  #### 0.1.6.1 revision 1

  * Allow `text-2.0` (no code change).

  #### 0.1.6.1

  * Build with GHC 9.2 and `ghc-prim-0.8` (via `base-4.16`).

  ### 0.1.6.0

  * New function `openConnectionAddress''` supporting supplying local `SSLContext`s as well as modifying the `SSL` connection before initiating the client SSL handshake.
  * New function `openConnectionSSL'` which allows to customize the SSL connection _before_ a client SSL handshake is attempted.
  * New convenience function `getContextSSL` function allowing to retrieve global `SSLContext`.

  ### 0.1.5.0

  * New function `openConnectionAddress'` function supporting supplying local `SSLContext`s.

  ### 0.1.4.0

  * New module `Network.Http.Client.WebSocket` providing basic RFC6455 support.
  * New function `inputStreamBodyChunked` supporting breaking up over-sized chunks.

  ### 0.1.3.0

  * New functions `receiveUpgradeResponse`, `receiveConnectResponse`, and `unsafeWithRawStreams` for accessing full-duplex low-level streams (e.g. for upgrading to Websockets protocol).
  * New function `makeConnection` for constructing a `Connection` object over custom streams.

  ### 0.1.2.0

  * New functions `unsafeReceiveResponse` and `unsafeReceiveResponseRaw` that do not automatically skip to end-of-stream.

  ### 0.1.1.0

  * New alternative connection-setup API (`ConnectionAddress` et al.).
  * New function `getHeaderMap` for exporting all response headers at once.
  * Add convenience functions `bytestringBody`, `lazyBytestringBody`, `utf8TextBody`, `utf8LazyTextBody`.
  * Add support for Brotli HTTP compression.

  ## 0.1.0.0

  * First version. Released on an unsuspecting world.
  * Derived from `http-streams-core-0.8.6.1` & `http-common-0.8.2.0`.
basic-deps:
  brotli-streams: ^>=0.0.0.0
  cryptohash-sha1: ^>=0.11.100
  bytestring: '>=0.10.0.0 && <0.13'
  case-insensitive: ^>=1.2.0.11
  openssl-streams: ^>=1.2.1.3
  base: '>=4.5 && <5'
  base64-bytestring: ^>=1.2.1.0
  xor: ^>=0.0.1.0
  text: ^>=1.2.3.0 || ^>=2.0 || ^>=2.1
  network: ^>=2.6.0.0 || ^>=2.7.0.0 || ^>=2.8.0.0 || ^>=3.0.0.0 || ^>=3.1.0.0
  containers: '>=0.5.0.0 && <0.8'
  blaze-builder: ^>=0.4.1.0
  io-streams: ^>=1.5.0.1
  binary: ^>=0.7.1 || ^>=0.8.3
  network-uri: ^>=2.6.0.0
  mtl: ^>=2.2.2 || ^>=2.3.1
  attoparsec: ^>=0.13.2.2 || ^>=0.14.4
  transformers: ^>=0.3.0.0 || ^>=0.4.2.0 || ^>=0.5.2.0 || ^>=0.6.0.4
  HsOpenSSL: ^>=0.11.2
  directory: ^>=1.2.0.1 || ^>=1.3.0.0
all-versions:
- 0.1.0.0
- 0.1.1.0
- 0.1.2.0
- 0.1.3.0
- 0.1.4.0
- 0.1.5.0
- 0.1.6.0
- 0.1.6.1
- 0.1.6.2
author: |-
  Andrew Cowie <andrew@operationaldynamics.com>,
  Herbert Valerio Riedel <hvr@gnu.org>
latest: 0.1.6.2
description-type: haddock
description: |-
  An HTTP client with WebSocket (RFC 6455) support, using the Snap Framework's [io-streams](https://hackage.haskell.org/package/io-streams) library to
  handle the streaming IO. The @http-io-streams@ API designed for ease of use when querying web services and dealing with the result as streaming I/O.

  The main HTTP/1.1 part of the library is exported in a single module "Network.Http.Client"; the WebSocket specific functionality is available from the "Network.Http.Client.WebSocket" module.

  __NOTE__: This package originally started as a fork of [http-streams](http://hackage.haskell.org/package/http-streams) with a lighter dependency footprint focusing on core HTTP functionality.
license-name: BSD-3-Clause AND GPL-2.0-or-later
