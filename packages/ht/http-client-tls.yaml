homepage: https://github.com/snoyberg/http-client
changelog-type: markdown
hash: c986b98a06ddde487fcfe139f024717d9263c61037ff45a4c63dae93b290c27f
test-bench-deps:
  http-client: -any
  base: -any
  hspec: -any
  connection: -any
  gauge: -any
  http-client-tls: -any
  http-types: -any
maintainer: michael@snoyman.com
synopsis: http-client backend using the connection package and tls library
changelog: |
  # Changelog for http-client-tls

  ## 0.3.6.1

  * [#482](https://github.com/snoyberg/http-client/issues/482):
    Raise lower bound on `http-client` to fix build.

  ## 0.3.6

  * Allow making requests to raw IPv6 hosts [#477](https://github.com/snoyberg/http-client/pull/477)

  ## 0.3.5.3

  * Fix `newTlsManager` [#325](https://github.com/snoyberg/http-client/issues/325)

  ## 0.3.5.2

  * [#289](https://github.com/snoyberg/http-client/issues/289):
    Keep original `TLSSettings` when creating a `Manager` using `newTlsManagerWith`.

  ## 0.3.5.1

  * Also catch TLSError exceptions [#273](https://github.com/snoyberg/http-client/pull/273)

  ## 0.3.5

  * Add `newTlsManagerWith`
    [#278](https://github.com/snoyberg/http-client/issues/278), which
    provides a variant of `newTlsManager` that takes a `ManagerSettings`
    to base its settings off of.

  ## 0.3.4.2

  * Never throw exceptions on 401 status in `applyDigestAuth`

  ## 0.3.4.1

  * Better exception cleanup behavior

  ## 0.3.4

  * Add 'newTlsManager'
    [#263](https://github.com/snoyberg/http-client/issues/263), which adds
    support for respecting `socks5://` and `socks5h://` `http_proxy` and
    `https_proxy` environment variables.

  ## 0.3.3.2

  * Better handling of internal exceptions

  ## 0.3.3.1

  * Better exception safety via `bracketOnError`

  ## 0.3.3

  * Add `DigestAuthException` and generalize `applyDigestAuth`
  * Global manager uses a shared TLS context (faster init)

  ## 0.3.2

  * Add `mkManagerSettingsContext` [#228](https://github.com/snoyberg/http-client/issues/228)

  ## 0.3.1.1

  * Minor doc updates

  ## 0.3.1

  * Add `applyDigestAuth`

  ## 0.3.0

  * Support http-client 0.5

  ## 0.2.4.1

  * Cabal description fix

  ## 0.2.4

  * Global manager

  ## 0.2.3

  * Exception catching cleanup
basic-deps:
  http-client: '>=0.7.11'
  exceptions: -any
  bytestring: -any
  case-insensitive: -any
  base: '>=4.10 && <5'
  data-default-class: -any
  text: -any
  tls: '>=1.2'
  network: -any
  connection: '>=0.2.5'
  memory: -any
  containers: -any
  cryptonite: -any
  network-uri: -any
  transformers: -any
  http-types: -any
all-versions:
- 0.2.0.0
- 0.2.0.1
- 0.2.0.2
- 0.2.0.3
- 0.2.1
- 0.2.1.1
- 0.2.1.2
- 0.2.2
- 0.2.3
- 0.2.4
- 0.2.4.1
- 0.3.0
- 0.3.1
- 0.3.1.1
- 0.3.2
- 0.3.3
- 0.3.3.1
- 0.3.4
- 0.3.4.1
- 0.3.4.2
- 0.3.5
- 0.3.5.1
- 0.3.5.2
- 0.3.5.3
- 0.3.6
- 0.3.6.1
author: Michael Snoyman
latest: 0.3.6.1
description-type: markdown
description: |
  ## http-client-tls

  Full tutorial docs are available at:
  https://haskell-lang.org/library/http-client

  Use the http-client package with the pure-Haskell tls package for secure
  connections. For the most part, you'll just want to replace
  `defaultManagerSettings` with `tlsManagerSettings`, e.g.:

  ```haskell
  import Network.HTTP.Client
  import Network.HTTP.Client.TLS

  main :: IO ()
  main = do
      manager <- newManager tlsManagerSettings
      ...
  ```
license-name: MIT
