all-versions:
- 0.1.0.0
- 0.2.0.0
- 0.3.0.0
- 0.3.1.0
- 0.3.2.0
- 0.3.2.1
author: Andrew Martin
basic-deps:
  base: '>=4.16.3.0 && <5'
  bytebuild: '>=0.3.10'
  byteslice: '>=0.2.11'
  bytesmith: '>=0.3.10'
  contiguous: '>=0.6.3'
  primitive: '>=0.9.0'
  text: '>=2.0'
changelog: |
  # Revision history for http-interchange

  ## 0.3.2.1 -- 2024-02-07

  * List test suite file dependencies in `extra-source-files` so that Hackage
    is able to run the test suite.
  * Update package metadata.

  ## 0.3.2.0 -- 2024-01-16

  * Add `Eq` and `Show` to all data types.

  ## 0.3.1.0 -- 2023-08-16

  * Add these to `Http.Headers`: cons, snoc, lookupHost, lookupAccept,
    lookupDate, lacksContentLengthAndTransferEncoding,
    snocContentLength.

  ## 0.3.0.0 -- 2023-08-15

  * Add `Http.Headers.fromList`. In examples, this makes it easier
    to create HTTP requests.
  * Add `Eq` and `Show` instances for `Bodied`.
  * Get rid of `versionMajor` and `versionMinor` from both requests
    and responses. Only support HTTP/1.1.

  ## 0.2.0.0 -- 2023-08-14

  * Redo module structure
  * Introduce Headers type. Currently a low performance implementation.
  * Introduce Http.Types module, which reexports all types

  ## 0.1.0.0 -- 2023-07-25

  * Initial release
changelog-type: markdown
description: |
  # http-interchange

  Types, encode functions, and decode functions for HTTP requests and responses.
  This is similar in spirit to `http-types`, but it differs in these ways:

  * This library includes encoders and decoders for the parts of a
    request/response leading up to the body (but not including the body).
  * This library does not have use types from `case-insensitive`.
  * This library defines data types instead of aliasing tuples. For example,
    `Header` in `http-types` is defined as `type Header = (HeaderName, ByteString)`.
    Here, it is defined as `data Header = Header {...}`.

  This library aims to provide just enough common functionality that someone
  could build an HTTP client on top of it. Things that are not goals:

  * This library does not use network sockets.

  Other notable design decisions:

  * This library tries to follow RFC 7230. Response header values are restricted
    to the subset of visible ASCII characters (plus space and tab). This is
    enforced by the decoders but not by the encoders.
description-type: markdown
hash: c635375913924aa6ef575b0c49acc297e5a89264430ca637f9653b492d5a27b7
homepage: https://github.com/byteverse/http-interchange
latest: 0.3.2.1
license-name: BSD-3-Clause
maintainer: amartin@layer3com.com
synopsis: Types and serialization for HTTP
test-bench-deps:
  aeson: '>=2.1'
  base: '>=4.16.3.0'
  byteslice: '>=0'
  bytestring: '>=0.11'
  filepath: '>=0'
  http-interchange: '>=0'
  pretty-show: '>=1.10'
  primitive: '>=0.9.0'
  tasty: '>=1.4.3'
  tasty-golden: '>=2.3.5'
