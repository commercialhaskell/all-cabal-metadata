all-versions:
- '0.1'
- '0.2'
- '0.3'
- 0.5.5
- 0.5.6
- 0.5.8
- 0.5.8.0
- 0.5.8.1
- 0.5.8.2
- 0.6.0.0
- 0.7.0.0
- 0.7.0.1
- 0.7.0.2
- 0.7.0.3
- 0.7.0.4
- 0.7.0.5
- 0.7.0.6
- 0.7.0.7
- 0.8.0.0
- 0.8.0.1
- 0.8.0.2
- 0.8.0.3
- 0.8.0.4
- 0.8.0.5
- 0.8.0.6
- 0.8.0.7
- 0.8.0.8
- 0.8.0.9
- 0.8.1
- 0.8.2
- 0.8.3
author: Alberto GÃ³mez Corona
basic-deps:
  RefSerialize: '>=0'
  TCache: '>=0'
  base: '>=4 && <4.12'
  binary: '>=0'
  bytestring: <0.11
  containers: '>=0'
  directory: '>=0'
  exceptions: '>=0.6'
  extensible-exceptions: '>=0'
  mtl: '>=0'
  old-time: '>=0'
  stm: '>2'
  vector: '>=0'
changelog: ''
changelog-type: ''
description: |-
  Transparent support for interruptible computations. A workflow can be seen as a persistent thread that executes a
  monadic computation. Therefore, it can be used in very time consuming computations such are CPU intensive calculations
  or procedures that are most of the time waiting for the action of a process or an user, that are prone to communication
  failures, timeouts or shutdowns. It also can be used if you like to restart your
  program at the point where the user left it last time
  .             .
  The computation can be restarted at the interrupted point thanks to its logged state in permanent storage.
  The thread state is located in files by default. It can be moved and continued in another computer.
  Besides that, the package also provides other higher level services associated to workflows: Workflow patterns,
  and a general configuration utility, workflow observation events and references to the internal state.
  The state can be stored maintaining memory references (using the "RefSerialize" package), so that it is possible to track the modifications
  of a big structure (for example a document) along the workflow execution.

  See "Control.Workflow" for details

  In this release:
  * Adaptation for MonadMask instance introduced in the package exceptions-0.6
description-type: haddock
hash: 47824f069850bc24a3436138736f3d6b722a6b40229fc82f4dfc73babb2d5846
homepage: ''
latest: 0.8.3
license-name: BSD-3-Clause
maintainer: agocorona@gmail.com
synopsis: Workflow patterns over a monad for thread state logging & recovery
test-bench-deps: {}
