homepage: https://github.com/galenhuntington/fpe#readme
changelog-type: ''
hash: 390fbfd825f9216590f36ad4720d6beff05dc894d72b3b5a89475a0661fc263f
test-bench-deps:
  bytestring: '>=0.10 && <0.13'
  integer-logarithms: '>=1 && <1.1'
  base: '>=4.9 && <5'
  cryptonite: -any
  vector: '>=0.12 && <0.14'
maintainer: Galen Huntington
synopsis: Format-preserving encryption.
changelog: ''
basic-deps:
  bytestring: '>=0.10 && <0.13'
  integer-logarithms: '>=1 && <1.1'
  base: '>=4.9 && <5'
  vector: '>=0.12 && <0.14'
all-versions:
- 0.1.0
- 0.1.1
- 0.1.2
author: Galen Huntington
latest: 0.1.2
description-type: markdown
description: |
  [![Hackage](https://img.shields.io/hackage/v/fpe.svg)](https://hackage.haskell.org/package/fpe)
  ![Build status](https://github.com/galenhuntington/fpe/actions/workflows/haskell.yml/badge.svg)

  _Format-preserving encryption_ encrypts data without changing its
  format.  An example is encrypting a 16-digit credit card number
  as 16 digits.  The encryption uses a key, which is secret, and an
  optional _tweak_, which can be public and varies for each record
  (such as the cardholder's name), and provides extra security.

  This module implements FF1.  Another similar algorithm, FF3, is no
  longer considered secure, and so is not included (yet).

  For example usage, see `ff1test.hs`.
license-name: MIT
