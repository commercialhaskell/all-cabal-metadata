all-versions:
- '0.1'
- 0.1.1
author: Mauro Blanco, Pablo Perdomo, Pablo Ezzatti, Alberto Pardo, Marcos Viera
basic-deps:
  accelerate: '>=0.13.0.5'
  array: '>=0.4.0.1'
  base: '>=4 && <5'
  deepseq: '>=1.3.0.1'
  fpnla: '>=0'
  hmatrix: '>=0.14.1.0'
  linear-algebra-cblas: '>=0'
  monad-par: '>=0.3.4.2'
  parallel: '>=3.2.0.3'
  repa: '>=3.2.3.3'
  vector: '>=0.10.0.1'
changelog: ''
changelog-type: ''
description: |2

  This package provides many example implementations of the operations defined in package @fpnla@ (<http://hackage.haskell.org/package/fpnla>) using various data structures and algorithms.

  IMPORTANT: Many algorithms are only partially implemented

  The structures currently used are:

  - @hmatrix@ <http://hackage.haskell.org/package/hmatrix>

  - @vector@ <http://hackage.haskell.org/package/vector>

  - @array@ <http://hackage.haskell.org/package/array>

  - @repa arrays@ <http://hackage.haskell.org/package/repa>

  - @accelerate arrays@ <http://hackage.haskell.org/package/accelerate>

  - @array@ <http://hackage.haskell.org/package/array>

  - Haskell lists <http://hackage.haskell.org/package/base-4.6.0.1/docs/Data-List.html>

  Operations are parallelized using the @parallel@ framework (<http://hackage.haskell.org/package/parallel>), @Monad-Par@ (<http://hackage.haskell.org/package/monad-par>), @Repa@ (<http://hackage.haskell.org/package/repa>) and @Accelerate@ (<http://hackage.haskell.org/package/accelerate>).

  Details about the package may be found in the paper: Towards a functional run-time for dense NLA domain. In Proceedings of the 2Nd ACM SIGPLAN Workshop on
  Functional High-performance Computing. New York, NY, USA. ACM, pages 85-96 (<http://www.fing.edu.uy/~mviera/papers/fhpc13.pdf>).
description-type: haddock
hash: baf2bfdd946ca66b3b51317f2b2a24e2234528bfddd0276acec100351b2138bc
homepage: ''
latest: 0.1.1
license-name: BSD-3-Clause
maintainer: Pablo Perdomo <pperdomo@fing.edu.uy>, Mauro Blanco <mblanco@fing.edu.uy>
synopsis: Example implementations for FPNLA library
test-bench-deps:
  HUnit: '>=1.2 && <2'
  QuickCheck: '>=2.4'
  accelerate: '>=0'
  array: '>=0'
  base: '>=4'
  data-default: '>=0'
  deepseq: '>=0'
  fpnla: '>=0'
  fpnla-examples: '>=0'
  hmatrix: '>=0'
  linear-algebra-cblas: '>=0'
  monad-par: '>=0'
  parallel: '>=0'
  random: '>=0'
  repa: '>=0'
  tagged: '>=0'
  test-framework: '>=0.4.1'
  test-framework-hunit: '>=0'
  test-framework-quickcheck2: '>=0'
  time: '>=0'
  vector: '>=0'
