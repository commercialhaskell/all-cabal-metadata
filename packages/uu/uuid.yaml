homepage: https://github.com/haskell-hvr/uuid
changelog-type: markdown
hash: 346445c6c45d69d99cbeb50c4bed1367e17112e5cf6ffc1fe2dfa2f60218e9f5
test-bench-deps:
  bytestring: -any
  base: -any
  uuid: -any
  tasty-quickcheck: '>=0.10 && <0.11'
  tasty-hunit: '>=0.10 && <0.11'
  random: -any
  tasty: '>=1.4.0.1 && <1.5'
  QuickCheck: '>=2.14.2 && <2.15'
maintainer: Oleg Grenrus <oleg.grenrus@iki.fi>
synopsis: For creating, comparing, parsing and printing Universally Unique Identifiers
changelog: "1.3.14\n\n- Use more compact heap object representation which saves 16
  bytes on 64bit platforms.\n- Add `toWords64`/`fromWords64` functions\n\n1.3.13\n\n-
  Optimize `V4.nextRandom` (~3x speed increase)\n- Optimize UUID V3 & V5 generation
  (~2x speed increase)\n- Use `cryptohash-md5`/`cryptohash-sha1`/`entropy` instead\n
  \ of `memory`/`cryptonite` for better performance and stability,\n  but GHCJS is
  now no longer supported.\n- Update cabal-spec to version 1.10\n\n1.3.12\n\n- Update
  package dependencies\n- Use `cryptonite` for crypto\n- The function `V4.nextRandom`
  is now implemented with functions from\n  `Crypto.Random` in package `cryptonite`.
  This does slow-down random\n  UUID generation but provides for far greater randomness.
  The\n  `Random` instance for `UUID` can be used to re-gain the old\n  behavior.\n\n1.3.11\n\n-
  Add `toText`/`fromText`\n\n1.3.10\n\n- Update dependencies in tests and benchmarks.\n\n1.3.9\n\n-
  Split definition of UUID data type into separate Cabal package to\n  enable 3rd
  party libraries to avoid some of the larger dependencies.\n\n1.3.8\n\n- Allow building
  against newer `deepseq`.\n\n1.3.7\n\n- Allow building against newer `time`.\n\n1.3.6\n\n-
  Move to GitHub.\n\n1.3.5\n\n- Allow building against newer `random`.\n\n1.3.4\n\n-
  Allow building against newer `QuickCheck`.\n\n1.3.3\n\n- More complex version constraints
  on `hashable`, to avoid building against\n  versions less than 1.1.1.0 or equal
  to 1.2.0.*.\n\n1.3.2\n\n- Fix for building against `bytestring` 0.9.*\n\n1.3.1\n\n-
  Allow building against `hashable` 1.1.* in addition to 1.2.*\n\n1.3.0\n\n- New functions
  for parsing and printing UUIDs to and from ASCII BytesStrings\n- New module `Data.UUID.Util`.
  This module includes the type `UnpackedUUID`,\n  whose fields correspond to the
  UUID fields described in RFC 4122.\n- The `Storable` instance now stores a UUID
  in host byte-order instead of\n  big endian.\n- There is now an instance for `Hashable
  UUID`.\n\n1.2.13\n\nBenchmark only changes:\n\n- Allow `criterion` 0.8.*\n\n1.2.12\n\nTest
  only changes:\n\n- Allow `QuickCheck` 2.6.*\n\n1.2.11\n\n- Allow `binary` 0.7.*\n\n1.2.10\n\n-
  Allow `cryptohash` version 0.9.*\n- Cleanup tests\n\n1.2.9\n\n- Bumped dependency
  on `cryptohash`.\n\n1.2.8\n\n- Bumped various dependencies and cleaned up dependencies
  in general.\n\n1.2.7\n\n- Added stricter constraints on `random` package.\n\n1.2.6\n\n-
  Add module `V4` to direct attention to our Random instance\n\n- In module `V1` seed
  the generator with a random number\n  if the hardware MAC address could not be discovered.\n\n-
  Fix and cleanup various haddocks.\n\n- In module docs, warn about MD5 use in Data.UUID.V3
  and\n  encourage the reader to use Data.UUID.V5 instead.\n\n1.2.5\n\n- Use `cryptohash`
  package for MD5 and SHA1 instead of `Crypto`\n\n1.2.4\n\n- Unpack Word32 values
  into UUID constructor.\n\n- Update test suite to QuickCheck 2\n\n- Bump other dependencies
  in tests/benchmarks\n\n1.2.3\n\n- The Read instance now drops leading spaces in
  the string to be parsed.\nThanks to Marc Ziegert for reporting this bug.\n\n- The
  tests have moved over to the new Cabal test running framework.\n\n1.2.2\n\n- Add
  functions fromWords/toWords\n\nThe goal was to have a total function that can be
  used to construct\na UUID, primarily for use by uuid-th.\n\n1.2.1\n\n- Fix concurrency
  bug in Data.UUID.V1 (thanks to Neil Mitchell for reporting\nand a test case)\n\n1.2.0\n
  \ (Contributors: Antoine Latter & Mark Lentczner)\n\n- added functions toByteString
  and fromByteString\n- added `nil` UUID\n- added unit tests and benchmarks, built
  when configured -ftest\n- major speed up of to/from functions (as well as in general)\n-
  added version-3 generation (deterministic based on MD5)\n- major changes to internal
  representation\n\t- now uses four strict Word32 values\n\t- internal ByteSource
  classes for easy construction (see Builder.hs)\n- Storable instance now stores in
  memory as system libraries in C do:\n    16 bytes derived from the network order
  of the fields, no matter what\n    the host native endianess is.\n- fixed bugs in
  V1 time and clock stepping, and V1 generated values\n- builds cleanly under GHC's
  -Wall\n- added CHANGES file\n\n1.1.1\n\n- no longer exporting `null` from the prelude\n-
  add `null` predicate on UUIDs\n- documentation fix (thanks Mark Lentczner)\n"
basic-deps:
  cryptohash-sha1: '>=0.11.100 && <0.12'
  bytestring: '>=0.9.2.1 && <0.12'
  base: '>=4.5 && <5'
  time: '>=1.4 && <1.12'
  text: '>=1.2.3.0 && <1.3'
  cryptohash-md5: '>=0.11.100 && <0.12'
  entropy: '>=0.3.7 && <0.5'
  binary: '>=0.5.1.0 && <0.9'
  network-info: '>=0.2 && <0.3'
  random: '>=1.1 && <1.3'
  uuid-types: '>=1.0.4 && <1.0.5'
all-versions:
- 0.1.0
- 0.1.1
- 1.0.0
- 1.0.1
- 1.0.2
- 1.1.1
- 1.2.0
- 1.2.1
- 1.2.2
- 1.2.3
- 1.2.4
- 1.2.5
- 1.2.6
- 1.2.7
- 1.2.8
- 1.2.9
- 1.2.10
- 1.2.11
- 1.2.12
- 1.2.13
- 1.2.14
- 1.2.14.1
- 1.3.0
- 1.3.1
- 1.3.2
- 1.3.3
- 1.3.4
- 1.3.5
- 1.3.6
- 1.3.7
- 1.3.8
- 1.3.9
- 1.3.10
- 1.3.11
- 1.3.12
- 1.3.13
- 1.3.14
author: Antoine Latter
latest: 1.3.14
description-type: haddock
description: |-
  This library is useful for creating, comparing, parsing and
  printing Universally Unique Identifiers.

  See <http://en.wikipedia.org/wiki/UUID> for the general idea.
license-name: BSD-3-Clause
