homepage: https://github.com/berberman/uusi
changelog-type: markdown
hash: 9c461f1ef4d9a23dcf389bcae72a908ec08c6d176478f34100dcda2da6695514
test-bench-deps:
  uusi: -any
  Cabal: ^>=3.2 || ^>=3.4
  base: '>=4.8 && <5'
  text: -any
  HUnit: -any
maintainer: berberman <berberman@yandex.com>
synopsis: Tweak .cabal files
changelog: "# Changelog\n\n`uusi` uses [PVP Versioning][1].\nThe changelog is available
  [on GitHub][2].\n\n## 0.4.2.0\n\n* Support `Cabal-3.4`\n\n## 0.4.1.0\n\n* Remove
  `microlens` and `microlens-th` - now `uusi` only depends on boot libs\n\n## 0.4.0.0\n\n*
  Support modifying `ghc-options` \n\n## 0.3.1.0\n\n* Remove `--gen-setup` from options
  of `uusi`\n\n* Add `gen-setup` executable\n\n* Clearify cabal version constraint\n\n##
  0.3.0.0\n\n* Add `--buildable` and `--no-buildable`\n\n* Fix a typo in prompt [#5](https://github.com/berberman/uusi/pull/5)\n\n##
  0.2.1.0\n\n* Add `--gen-setup`\n\n* Fix typo\n\n## 0.2.0.0\n\n* Provide functionalities
  other than removing all version constraints\n\n* Refactor project structure, `uusi`
  now becomes a library\n\n* Add some unit tests\n\n## 0.1.0.0\n\n* Remove diff\n\n*
  Reduce dependencies as much as possible\n\n## 0.0.1.0\n\n* Support sub-libraries
  and legacy build tools.\n\n## 0.0.0.0\n\n* Split from [arch-hs](https://github.com/berberman/arch-hs).\n\n[1]:
  https://pvp.haskell.org\n[2]: https://github.com/berberman/uusi/releases\n"
basic-deps:
  uusi: -any
  Cabal: ==3.2.* || ==3.4.*
  base: '>=4.8 && <5'
  text: -any
  filepath: -any
  directory: -any
all-versions:
- 0.2.0.0
- 0.2.1.0
- 0.3.0.0
- 0.3.1.0
- 0.4.0.0
- 0.4.1.0
- 0.4.2.0
author: berberman
latest: 0.4.2.0
description-type: markdown
description: "# uusi\n\n[![GitHub CI](https://github.com/berberman/uusi/workflows/CI/badge.svg)](https://github.com/berberman/uusi/actions)\n[![Hackage](https://img.shields.io/hackage/v/uusi.svg?logo=haskell)](https://hackage.haskell.org/package/uusi)\n[![MIT
  license](https://img.shields.io/badge/license-MIT-blue.svg)](LICENSE)\n\n`uusi`
  is a simple command-line program to tweak [Package Description](https://cabal.readthedocs.io/en/latest/cabal-package.html#package-description).\nIn
  distribution packaging, sometimes we need modify the version range of dependencies.
  Usually, this can be done by some *nix text processing utilities, such as awk, sed,
  etc.\nHowever, these tools process cabal files as plain text, not considering the
  semantics. Thus, it might be pesky or elusive to conver the entire cases.\n`uusi`
  has almost no extra dependencies, so it's safe to introduce `uusi` as build-depends
  of the target, which packagers can use to manipulate target's dependencies.\nCurrently,
  `uusi` works in Arch Linux packaging, and you may find out that it has been [required
  by](https://www.archlinux.org/packages/community/x86_64/uusi/) many haskell packages.\nIn
  most cases, it is used to loose the version constraint of a dependency when building
  a package, because the dependent haskell package provided by system may be too new
  to fit the constraints,\nwhereas this package can be built against the newer dependency
  successfully.\n\n## Installation\n\n```\n# pacman -S uusi\n```\n\nInstall it via
  `pacman`.\n\n## Build\n\n```\n$ git clone https://github.com/berberman/uusi\n```\n\nIf
  you choose to use dynamic haskell packages provided by Arch Linux, run to configure
  the project locally:\n\n```\n$ cabal configure --disable-library-vanilla --enable-shared
  --enable-executable-dynamic --ghc-options=-dynamic\n```\n\nThen build it:\n\n```\n$
  cabal build\n```\n\n## Usage\n\n`uusi` will replace the text in .cabal file inplace.
  `uusi` supports four kinds of actions:\n\n* remove all version constraints of dependencies\n\n*
  overwrite a version range of a specific dependency\n\n* remove a dependency\n\n*
  replace a dependency with given packages\n\n* set the `buildable` of a component
  \n\n* modify `ghc-options` of a component\n\nIf no option is specified, `uusi` will
  use `--all`, removing all version constraints.\n\n`uusi` provides an executable
  `gen-setup` to generate a boilerplate `Setup.hs`.\n\n### Examples\n\n* Set all dependencies'
  version ranges to any version:\n\n```\n$ uusi foo.cabal\n```\n\n* Replace `old-time`
  with `time`:\n\n```\n$ uusi -rold-time:time foo.cabal\n```\n\n* Remove `semigroup`:\n\n```\n$
  uusi -dsemigroup foo.cabal\n```\n\n* Overwrite `base`:\n\n```\n$ uusi -ubase: >=4.14
  foo.cabal\n```\n\nPackages have pattern `<pkgname>` or `<pkgname>:<version>`. Run
  this program, and see help message for details.\n\n* Together:\n\n```\n$ uusi -ubar:2999.20.1.0
  -dbase --all foo.cabal\n```\n\n* Do not build `foo-test`:\n\n```\n$ uusi -nb foo-test
  foo.cabal\n```\n\n* Add `dynamic` to `ghc-options` of `foo-test`:\n\n```\n$ uusi
  --add-options foo-test:-dynamic foo.cabal\n```\n\n* Add `-dynamic` to `ghc-options`
  of all components:\n\n```\n$ uusi --add-options-all -dynamic foo.cabal\n```\n\n*
  Remove `-Wall` and `-dynamic` from `ghc-options` of all components:\n\n```\n$ uusi
  --remove-options-all -Wall,-dynamic \n```\n\n## Contributing\n\nIssues and PRs are
  always welcome. **_\\(:з」∠)\\_**\n"
license-name: MIT
