homepage: https://github.com/troydm/xmonad-dbus#readme
changelog-type: ''
hash: f8b84266d4eab5a18dd264a5aa4727685b7370f94a6c6fdf531cfe3db5198b18
test-bench-deps:
  xmonad-dbus: -any
  base: '>=4.7 && <5'
  dbus: '>=0.10'
maintainer: d.geurkov@gmail.com
synopsis: ''
changelog: ''
basic-deps:
  xmonad-dbus: -any
  base: '>=4.7 && <5'
  dbus: '>=0.10'
all-versions:
- 0.1.0.0
- 0.1.0.1
author: Dmitry Geurkov
latest: 0.1.0.1
description-type: markdown
description: "# xmonad-dbus\nxmonad-dbus is DBus monitoring solution inspired by [xmonad-log](https://github.com/xintron/xmonad-log)
  completely written in Haskell.\nIt allows you to easily send your status via DBus
  using XMonad's DynamicLog to any application that can execute custom scripts.\nIt
  can be used to easily display XMonad status in [polybar](https://github.com/jaagr/polybar)\n\n##
  Building\n\n    stack build\n\n## Running\n\n```bash\n    # start xmonad-dbus, you
  can optionally specify a path that would be used when receiveing messages, \n    #
  otherwise all xmonad-dbus related messages will be received)\n    stack exec xmonad-dbus
  -- [path]\n    # you can manually send messages from command line too\n    stack
  exec xmonad-dbus -- send string\n    # and if you want to send messages only to
  particular path you can use sendToPath \n    stack exec xmonad-dbus -- sendToPath
  path string\n```\n\n## Configuring XMonad\nTo send status information from XMonad
  you need to add xmonad-dbus as dependency either via stack or manually when building
  your xmonad.hs\n\n```haskell\n    import XMonad\n    import XMonad.Hooks.DynamicLog\n
  \   import qualified XMonad.DBus as D\n\n    -- Override the PP values as you would
  like (see XMonad.Hooks.DynamicLog documentation)\n    myLogHook :: D.Client -> PP\n
  \   myLogHook dbus = def { ppOutput = D.send dbus }\n\n    main :: IO ()\n    main
  = do\n        -- Connect to DBus\n        dbus <- D.connect\n        -- Request
  access (needed when sending messages)\n        D.requestAccess dbus\n        --
  start xmonad\n        xmonad $ def { logHook = dynamicLogWithPP (myLogHook dbus)
  }\n```\n\n## Configuring polybar\nTo receive status you need to add custom/script
  module to your polybar config\nDon't forget to add compiled xmonad-dbus executable
  to your PATH\n\n    [module/xmonad]\n    type = custom/script\n    exec = xmonad-dbus\n
  \   tail = true\n    interval = 1\n\n"
license-name: BSD-3-Clause
