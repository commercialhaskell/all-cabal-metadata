all-versions:
- '0.1'
- '0.2'
- '0.3'
- '0.4'
- 0.4.1
- '0.5'
- '0.6'
- '0.7'
- '0.8'
- 0.8.1
- '0.9'
- 0.9.1
- 0.9.2
- '0.10'
- '0.11'
- 0.11.1
- '0.12'
- '0.13'
- '0.14'
- 0.14.2
- '0.15'
- 0.17.0
- 0.17.1
- 0.17.2
author: |-
  Spencer Janssen, Don Stewart, Adam Vogt, David Roundy, Jason Creighton,
  Brent Yorgey, Peter Jones, Peter Simons, Andrea Rossato, Devin Mullins,
  Lukas Mai, Alec Berryman, Stefan O'Rear, Daniel Wagner, Peter J. Jones,
  Daniel Schoepe, Karsten Schoelzel, Neil Mitchell, Joachim Breitner,
  Peter De Wachter, Eric Mertens, Geoff Reedy, Michiel Derhaeg,
  Philipp Balzarek, Valery V. Vorotyntsev, Alex Tarkovsky, Fabian Beuke,
  Felix Hirn, Michael Sloan, Tomas Janousek, Vanessa McHale, Nicolas Pouillard,
  Aaron Denney, Austin Seipp, Benno Fünfstück, Brandon S Allbery, Chris Mears,
  Christian Thiemann, Clint Adams, Daniel Neri, David Lazar, Ferenc Wagner,
  Francesco Ariis, Gábor Lipták, Ivan N. Veselov, Ivan Tarasov, Javran Cheng,
  Jens Petersen, Joey Hess, Jonne Ransijn, Josh Holland, Khudyakov Alexey,
  Klaus Weidner, Michael G. Sloan, Mikkel Christiansen, Nicolas Dudebout,
  Ondřej Súkup, Paul Hebble, Shachaf Ben-Kiki, Siim Põder, Tim McIver,
  Trevor Elliott, Wouter Swierstra, Conrad Irwin, Tim Thelion, Tony Zorman
basic-deps:
  X11: '>=1.10 && <1.11'
  base: '>=4.11 && <5'
  containers: '>=0'
  data-default-class: '>=0'
  directory: '>=0'
  filepath: '>=0'
  mtl: '>=0'
  process: '>=0'
  setlocale: '>=0'
  time: '>=0'
  transformers: '>=0.3'
  unix: '>=0'
  xmonad: '>=0'
changelog: |
  # Change Log / Release Notes

  ## 0.17.2 (April 2, 2023)

  ### Bug Fixes

    * Fixed the build with GHC 9.6.

  ## 0.17.1 (September 3, 2022)

  ### Enhancements

    * Added custom cursor shapes for resizing and moving windows.

    * Exported `cacheNumlockMask` and `mkGrabs` from `XMonad.Operations`.

  ### Bug Fixes

    * Fixed border color of windows with alpha channel. Now all windows have the
      same opaque border color.

    * Change the main loop to try to avoid [GHC bug 21708] on systems
      running GHC 9.2 up to version 9.2.3. The issue has been fixed in
      [GHC 9.2.4] and all later releases.

  [GHC bug 21708]: https://gitlab.haskell.org/ghc/ghc/-/issues/21708
  [GHC 9.2.4]: https://discourse.haskell.org/t/ghc-9-2-4-released/4851

  ## 0.17.0 (October 27, 2021)

  ### Enhancements

    * Migrated `X.L.LayoutCombinators.(|||)` into `XMonad.Layout`, providing the
      ability to directly jump to a layout with the `JumpToLayout` message.

    * Recompilation now detects `stack.yaml` (can be a symlink) alongside
      `xmonad.hs` and switches to using `stack ghc`. We also updated INSTALL.md
      with instructions for cabal-install that lead to correct recompilation.

      Deprecation warnings during recompilation are no longer suppressed to make
      it easier for us to clean up the codebase. These can still be suppressed
      manually using an `OPTIONS_GHC` pragma with `-Wno-deprecations`.

    * Improve handling of XDG directories.

        1. If all three of xmonad's environment variables (`XMONAD_DATA_DIR,`
           `XMONAD_CONFIG_DIR`, and `XMONAD_CACHE_DIR`) are set, use them.
        2. If there is a build script called `build` (see [these build scripts]
           for usage examples) or configuration `xmonad.hs` in `~/.xmonad`, set
           all three directories to `~/.xmonad`.
        3. Otherwise, use the `xmonad` directory in `XDG_DATA_HOME`,
           `XDG_CONFIG_HOME`, and `XDG_CACHE_HOME` (or their respective
           fallbacks). These directories are created if necessary.

      In the cases of 1. and 3., the build script or executable is expected to be
      in the config dir.

      Additionally, the xmonad config binary and intermediate object files were
      moved to the cache directory (only relevant if using XDG or
      `XMONAD_CACHE_DIR`).

    * Added `Foldable`, `Functor`, and `Traversable` instances for `Stack`.

    * Added `Typeable layout` constraint to `LayoutClass`, making it possible to
      cast `Layout` back into a concrete type and extract current layout state
      from it.

    * Export constructor for `Choose` and `CLR` from `Module.Layout` to allow
      pattern-matching on the left and right sub-layouts of `Choose l r a`.

    * Added `withUnfocused` function to `XMonad.Operations`, allowing for `X`
      operations to be applied to unfocused windows.

    * Added `willFloat` function to `XMonad.ManageHooks` to detect whether the
      (about to be) managed window will be a floating window or not

  [these build scripts]: https://github.com/xmonad/xmonad-testing/tree/master/build-scripts

  ### Bug Fixes

    * Fixed a bug when using multiple screens with different dimensions, causing
      some floating windows to be smaller/larger than the size they requested.

    * Compatibility with GHC 9.0

    * Fixed dunst notifications being obscured when moving floats.
      https://github.com/xmonad/xmonad/issues/208

  ### Breaking Changes

    * Made `(<&&>)` and `(<||>)` non-strict in their right operand; i.e., these
      operators now implement short-circuit evaluation so the right operand is
      evaluated only if the left operand does not suffice to determine the
      result.

    * Change `ScreenDetail` to a newtype and make `RationalRect` strict in its
      contents.

    * Added the `extensibleConf` field to `XConfig` which makes it easier for
      contrib modules to have composable configuration (custom hooks, …).

    * `util/GenerateManpage.hs` is no longer distributed in the tarball.
      Instead, the manpage source is regenerated and manpage rebuilt
      automatically in CI.

    * `DestroyWindowEvent` is now broadcasted to layouts to let them know
      window-specific resources can be discarded.

  ## 0.15 (September 30, 2018)

    * Reimplement `sendMessage` to deal properly with windowset changes made
      during handling.

    * Add new library functions `windowBracket` and `modifyWindowSet` to
      `XMonad.Operations`.

  ## 0.14.2 (August 21, 2018)

  ### Bug Fixes

    * Add the sample configuration file xmonad.hs again to the release tarball.
      [https://github.com/xmonad/xmonad/issues/181]

  ## 0.14.1 (August 20, 2018)

  ### Breaking Changes

    * The cabal build no longer installs xmonad.hs, xmonad.1, and xmonad.1.html
      as data files. The location cabal picks for chose files isn't useful as
      standard tools like man(1) won't find them there. Instead, we rely on
      distributors to pick up the files from the source tarball during the build
      and to install them into proper locations where their users expect them.
      [https://github.com/xmonad/xmonad/pull/127]

  ### Bug Fixes

    * Add support for GHC 8.6.x by providing an instance for 'MonadFail X'. A
      side effect of that change is that our code no longer compiles with GHC
      versions prior to 8.0.x. We could work around that, no doubt, but the
      resulting code would require CPP and Cabal flags and whatnot. It feels more
      reasonable to just require a moderately recent compiler instead of going
      through all that trouble.

    * xmonad no longer always recompile on startup. Now it only does so if the
      executable does not have the name that would be used for the compilation
      output. The purpose of recompiling and executing the results in this case is
      so that the `xmonad` executable in the package can be used with custom
      configurations.

  ### Enhancements

    * Whenever xmonad recompiles, it now explains how it is attempting to
      recompile, by outputting logs to stderr. If you are using xmonad as a custom
      X session, then this will end up in a `.xsession-errors` file.

  ## 0.14 (July 30, 2018)

  ### Bug Fixes

    * The state file that xmonad uses while restarting itself is now
      removed after it is processed.  This fixes a bug that manifested
      in several different ways:

      - Names of old workspaces would be resurrected after a restart
      - Screen sizes would be wrong after changing monitor configuration (#90)
      - `spawnOnce` stopped working (xmonad/xmonad-contrib#155)
      - Focus did not follow when moving between workspaces (#87)
      - etc.

    * Recover old behavior (in 0.12) when `focusFollowsMouse == True`:
      the focus follows when the mouse enters another workspace
      but not moving into any window.

    * Compiles with GHC 8.4.1

    * Restored compatability with GHC version prior to 8.0.1 by removing the
      dependency on directory version 1.2.3.


  ## 0.13 (February 10, 2017)

  ### Breaking Changes

    * When restarting xmonad, resume state is no longer passed to the
      next process via the command line.  Instead, a temporary state
      file is created and xmonad's state is serialized to that file.

      When upgrading to 0.13 from a previous version, the `--resume`
      command line option will automatically migrate to a state file.

      This fixes issue #12.

  ### Enhancements

    * You can now control which directory xmonad uses for finding your
      configuration file and which one is used for storing the compiled
      version of your configuration.  In order of preference:

        1. New environment variables.  If you want to use these ensure
           you set the correct environment variable and also create the
           directory it references:

           - `XMONAD_CONFIG_DIR`
           - `XMONAD_CACHE_DIR`
           - `XMONAD_DATA_DIR`

        2. The `~/.xmonad` directory.

        3. XDG Base Directory Specification directories, if they exist:

           - `XDG_CONFIG_HOME/xmonad`
           - `XDG_CACHE_HOME/xmonad`
           - `XDG_DATA_HOME/xmonad`

      If none of these directories exist then one will be created using
      the following logic: If the relevant environment variable
      mentioned in step (1) above is set, the referent directory will be
      created and used.  Otherwise `~/.xmonad` will be created and used.

      This fixes a few issues, notably #7 and #56.

    * A custom build script can be used when xmonad is given the
      `--recompile` command line option.  If an executable named `build`
      exists in the xmonad configuration directory it will be called
      instead of `ghc`.  It takes one argument, the name of the
      executable binary it must produce.

      This fixes #8.  (One of two possible custom build solutions.  See
      the next entry for another solution.)

    * For users who build their xmonad configuration using tools such as
      cabal or stack, there is another option for executing xmonad.

      Instead of running the `xmonad` executable directly, arrange to
      have your login manager run your configuration binary instead.
      Then, in your binary, use the new `launch` command instead of
      `xmonad`.

      This will keep xmonad from using its configuration file
      checking/compiling code and directly start the window manager
      without `exec`ing any other binary.

      See the documentation for the `launch` function in `XMonad.Main`
      for more details.

      Fixes #8.  (Second way to have a custom build environment for
      XMonad.  See previous entry for another solution.)

  ## 0.12 (December 14, 2015)

    * Compiles with GHC 7.10.2, 7.8.4, and 7.6.3

    * Use of [data-default][] allows using `def` where previously you
      had to write `defaultConfig`, `defaultXPConfig`, etc.

    * The [setlocale][] package is now used instead of a binding shipped
      with xmonad proper allowing the use of `Main.hs` instead of
      `Main.hsc`

    * No longer encodes paths for `spawnPID`

    * The default `manageHook` no longer floats Gimp windows

    * Doesn't crash when there are fewer workspaces than screens

    * `Query` is now an instance of `Applicative`

    * Various improvements to the example configuration file

  [data-default]: http://hackage.haskell.org/package/data-default
  [setlocale]: https://hackage.haskell.org/package/setlocale
changelog-type: markdown
description: |
  <p align="center">
    <a href="https://xmonad.org/"><img alt="XMonad logo" src="https://xmonad.org/images/logo-wrapped.svg" height=150></a>
  </p>
  <p align="center">
    <a href="https://hackage.haskell.org/package/xmonad"><img alt="Hackage" src="https://img.shields.io/hackage/v/xmonad?logo=haskell"></a>
    <a href="https://github.com/xmonad/xmonad/blob/readme/LICENSE"><img alt="License" src="https://img.shields.io/github/license/xmonad/xmonad"></a>
    <a href="https://haskell.org/"><img alt="Made in Haskell" src="https://img.shields.io/badge/Made%20in-Haskell-%235e5086?logo=haskell"></a>
    <br>
    <a href="https://github.com/xmonad/xmonad/actions/workflows/stack.yml"><img alt="Stack" src="https://img.shields.io/github/workflow/status/xmonad/xmonad/Stack?label=Stack&logo=githubactions&logoColor=white"></a>
    <a href="https://github.com/xmonad/xmonad/actions/workflows/haskell-ci.yml"><img alt="Cabal" src="https://img.shields.io/github/workflow/status/xmonad/xmonad/Haskell-CI?label=Cabal&logo=githubactions&logoColor=white"></a>
    <a href="https://github.com/xmonad/xmonad/actions/workflows/nix.yml"><img alt="Nix" src="https://img.shields.io/github/workflow/status/xmonad/xmonad/Nix?label=Nix&logo=githubactions&logoColor=white"></a>
    <br>
    <a href="https://github.com/sponsors/xmonad"><img alt="GitHub Sponsors" src="https://img.shields.io/github/sponsors/xmonad?label=GitHub%20Sponsors&logo=githubsponsors"></a>
    <a href="https://opencollective.com/xmonad"><img alt="Open Collective" src="https://img.shields.io/opencollective/all/xmonad?label=Open%20Collective&logo=opencollective"></a>
    <br>
    <a href="https://web.libera.chat/#xmonad"><img alt="Chat on #xmonad@irc.libera.chat" src="https://img.shields.io/badge/%23%20chat-on%20libera-brightgreen"></a>
    <a href="https://matrix.to/#/#xmonad:matrix.org"><img alt="Chat on #xmonad:matrix.org" src="https://img.shields.io/matrix/xmonad:matrix.org?logo=matrix"></a>
  </p>

  # xmonad

  **A tiling window manager for X11.**

  [XMonad][web:xmonad] is a tiling window manager for X11. Windows are arranged
  automatically to tile the screen without gaps or overlap, maximising
  screen use. Window manager features are accessible from the keyboard:
  a mouse is optional. xmonad is written, configured and extensible in
  Haskell. Custom layout algorithms, key bindings and other extensions
  may be written by the user in config files. Layouts are applied
  dynamically, and different layouts may be used on each
  workspace. Xinerama is fully supported, allowing windows to be tiled
  on several physical screens.

  This repository contains the [xmonad][hackage:xmonad] package, a minimal,
  stable, yet extensible core. It is accompanied by
  [xmonad-contrib][gh:xmonad-contrib], a library of hundreds of additional
  community-maintained tiling algorithms and extension modules. The two combined
  make for a powerful X11 window-manager with endless customization
  possibilities. They are, quite literally, libraries for creating your own
  window manager.

  ## Installation

  For installation and configuration instructions, please see:

   * [downloading and installing xmonad][web:download]
   * [installing latest xmonad snapshot from git][web:install]
   * [configuring xmonad][web:tutorial]

  If you run into any trouble, consult our [documentation][web:documentation] or
  ask the [community][web:community] for help.

  ## Contributing

  We welcome all forms of contributions:

   * [bug reports and feature ideas][gh:xmonad:issues]
     (also to [xmonad-contrib][gh:xmonad-contrib:issues])
   * [bug fixes, new features, new extensions][gh:xmonad:pulls]
     (usually to [xmonad-contrib][gh:xmonad-contrib:pulls])
   * documentation fixes and improvements: [xmonad][gh:xmonad],
     [xmonad-contrib][gh:xmonad-contrib], [xmonad-web][gh:xmonad-web]
   * helping others in the [community][web:community]
   * financial support: [GitHub Sponsors][gh:xmonad:sponsors],
     [Open Collective][opencollective:xmonad]

  Please do read the [CONTRIBUTING][gh:xmonad:contributing] document for more
  information about bug reporting and code contributions. For a brief overview
  of the architecture and code conventions, see the [documentation for the
  `XMonad.Doc.Developing` module][doc:developing]. If in doubt, [talk to
  us][web:community].

  ## Authors

  Started in 2007 by [Spencer Janssen][gh:spencerjanssen], [Don
  Stewart][gh:donsbot] and [Jason Creighton][gh:JasonCreighton], the
  [XMonad][web:xmonad] project lives on thanks to [new generations of
  maintainers][gh:xmonad:maintainers] and [dozens of
  contributors][gh:xmonad:contributors].

  [gh:spencerjanssen]: https://github.com/spencerjanssen
  [gh:donsbot]: https://github.com/donsbot
  [gh:JasonCreighton]: https://github.com/JasonCreighton

  [doc:developing]: https://xmonad.github.io/xmonad-docs/xmonad-contrib/XMonad-Doc-Developing.html
  [gh:xmonad-contrib:issues]: https://github.com/xmonad/xmonad-contrib/issues
  [gh:xmonad-contrib:pulls]: https://github.com/xmonad/xmonad-contrib/pulls
  [gh:xmonad-contrib]: https://github.com/xmonad/xmonad-contrib
  [gh:xmonad-web]: https://github.com/xmonad/xmonad-web
  [gh:xmonad:contributing]: https://github.com/xmonad/xmonad/blob/master/CONTRIBUTING.md
  [gh:xmonad:contributors]: https://github.com/xmonad/xmonad/graphs/contributors
  [gh:xmonad:issues]: https://github.com/xmonad/xmonad/issues
  [gh:xmonad:maintainers]: https://github.com/xmonad/xmonad/blob/master/MAINTAINERS.md
  [gh:xmonad:pulls]: https://github.com/xmonad/xmonad/pulls
  [gh:xmonad:sponsors]: https://github.com/sponsors/xmonad
  [gh:xmonad]: https://github.com/xmonad/xmonad
  [hackage:xmonad]: https://hackage.haskell.org/package/xmonad
  [opencollective:xmonad]: https://opencollective.com/xmonad
  [web:community]: https://xmonad.org/community.html
  [web:documentation]: https://xmonad.org/documentation.html
  [web:download]: https://xmonad.org/download.html
  [web:install]: https://xmonad.org/INSTALL.html
  [web:tutorial]: https://xmonad.org/TUTORIAL.html
  [web:xmonad]: https://xmonad.org/
description-type: markdown
hash: 083f43183bdc5dbb70f65cbd287f95c8199c0ed01f524a41747f645843734829
homepage: http://xmonad.org
latest: 0.17.2
license-name: BSD-3-Clause
maintainer: xmonad@haskell.org
synopsis: A tiling window manager
test-bench-deps:
  QuickCheck: '>=2'
  X11: '>=0'
  base: '>=0'
  containers: '>=0'
  quickcheck-classes: '>=0.4.3'
  xmonad: '>=0'
