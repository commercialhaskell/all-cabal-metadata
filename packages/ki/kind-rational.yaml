homepage: https://github.com/k0001/hs-kind
changelog-type: markdown
hash: d4fab952aa151d3bdafdb2abe08d4e6beb035261fc9c0a3bd912492d39d17531
test-bench-deps:
  base: ==4.*
  singletons: -any
  kind-rational: -any
  kind-integer: '>=0.5'
maintainer: renÎ»ren.zone
synopsis: Type-level rationals. Like KnownNat, but for rationals.
changelog: |
  # Version 0.3.1

  * COMPILER ASSISTED BREAKING CHANGE: `rationalVal`, `someRationalVal`,
    `fromSRational`, `terminates`, `divRem`, `div` and `rem` now deal
    with `KindRational`'s `Rational`s, rather than `Prelude`'s `Rational`s.

  * COMPILER ASSISTED BREAKING CHANGE: Removed `fromSRational'`.

  * Added `SingI` and `SingKind` instances.


  # Version 0.3

  * COMPILER ASSISTED BREAKING CHANGE: `TestEquality` and `TestCoercion`
    don't `Normalize` inputs before making a decision anymore.

  * BREAKING CHANGE: The `Rational` inside `SRational` is not automatically
    normalized anymore. This is so that `SDecide`, `TestEquality` and
    `TestCoercion` behave as expected, treating `1/2` differently than `2/4`,
    for example. This is mostly an internal change, but it can be observed in
    the `Show` instance for `SRational`, for example.

  * Added role annotations to `SRational`.

  * Add dependency on `singletons` so that we can give a `Sing` and `SDecide`
    instances for type-level `Rational`s.

  * Export `fromSRational'`.

  # Version 0.2

  * COMPILER ASSISTED BREAKING CHANGE: Removed `Mod`, `DivMod`, `mod`, `divMod`.

  * COMPILER ASSISTED BREAKING CHANGE: Renamed `Dif` to `Rem`, `DivDif` to
    `DivRem`, `mod` to `rem`, `divDif` to `divRem`.


  # Version 0.1

  * Initial version.
basic-deps:
  base: ==4.*
  singletons: -any
  kind-integer: '>=0.5'
all-versions:
- '0.1'
- '0.2'
- '0.3'
- '0.4'
author: Renzo Carbonara
latest: '0.4'
description-type: markdown
description: |+
  # kind-rational

  Haskell type-level `Rational`s. Like `KnownNat`, but for `Rational`s.

license-name: BSD-3-Clause
