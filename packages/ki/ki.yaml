homepage: https://github.com/awkward-squad/ki
changelog-type: markdown
hash: 0514c5dfdb1d3701ee1910ca7c7903ea54474ab11284728a6c7003af9b8821dc
test-bench-deps:
  ki: -any
  stm: ^>=2.5
  base: ^>=4.12 || ^>=4.13 || ^>=4.14 || ^>=4.15 || ^>=4.16 || ^>=4.17 || ^>=4.18
  tasty-hunit: ^>=0.10
  tasty: ^>=1.4.2
maintainer: Mitchell Rosen <mitchellwrosen@gmail.com>, Travis Staton <hello@travisstaton.com>
synopsis: A lightweight structured concurrency library
changelog: |
  ## [1.0.0.2] - 2023-01-25

  - Bugfix [#20](https://github.com/awkward-squad/ki/pull/20): previously, a child thread could deadlock when attempting
    to propagate an exception to its parent

  ## [1.0.0.1] - 2022-08-14

  - Compat: support GHC 9.4.1

  ## [1.0.0] - 2022-06-30

  - Breaking: Remove `Context` type, `Ki.Implicit` module, and the ability to soft-cancel a `Scope`.
  - Breaking: Remove `Duration` type and its associated API, including `waitFor` and `awaitFor`.
  - Breaking: Remove `Ki.Internal` module.
  - Breaking: Generalize `async` to `forkTry`.
  - Breaking: Generalize `forkWithUnmask` to `forkWith`.
  - Breaking: Make `fork_` take an `IO Void` rather than an `IO ()`.
  - Breaking: Make `fork` create an unmasked thread, rather than inherit the parent's masking state.
  - Breaking: Rename `waitSTM` to `awaitAll` (replacing the old `wait` in `IO`).

  - Change: Make `scoped` kill threads in the order they were created.

  - Bugfix: Fix small memory leak related to closing a scope.
  - Bugfix: Fix subtle bug related to GHC's treatment of deadlocked threads.
  - Bugfix: make `async` (now `forkTry`) propagate async exceptions.
  - Bugfix: make `scoped` safe to run with asynchronous exceptions masked.
  - Bugfix: propagate exceptions to creator of scope, not creator of thread

  - Performance: Use atomic fetch-and-add rather than a `TVar` to track internal child thread ids.

  ## [0.2.0] - 2020-12-17

  - Breaking: Remove `ThreadFailed` exception wrapper.
  - Breaking: Rename `cancelScope` to `cancel`.

  ## [0.1.0.1] - 2020-11-30

  - Misc: Replace `AtomicCounter` with `Int` to drop the `atomic-primops` dependency.

  - Bounds: Lower `cabal-version` from 3.0 to 2.2 because `stack` cannot parse 3.0.

  ## [0.1.0] - 2020-11-11

  - Initial release.
basic-deps:
  base: ^>=4.12 || ^>=4.13 || ^>=4.14 || ^>=4.15 || ^>=4.16 || ^>=4.17 || ^>=4.18
  containers: ^>=0.6
all-versions:
- 1.0.0.2
author: Mitchell Rosen
latest: 1.0.0.2
description-type: markdown
description: |
  | `ki` | `ki-unlifted` |
  | --- | --- |
  | [![GitHub CI](https://github.com/awkward-squad/ki/workflows/CI/badge.svg)](https://github.com/awkward-squad/ki/actions) | |
  | [![Hackage](https://img.shields.io/hackage/v/ki.svg?label=ki&logo=haskell)](https://hackage.haskell.org/package/ki) | [![Hackage](https://img.shields.io/hackage/v/ki-unlifted.svg?label=ki-unlifted&logo=haskell)](https://hackage.haskell.org/package/ki-unlifted) |
  | [![Stackage LTS](https://stackage.org/package/ki/badge/lts)](https://www.stackage.org/lts/package/ki) | [![Stackage LTS](https://stackage.org/package/ki-unlifted/badge/lts)](https://www.stackage.org/lts/package/ki-unlifted) |
  | [![Stackage Nightly](https://stackage.org/package/ki/badge/nightly)](https://www.stackage.org/nightly/package/ki) | [![Stackage Nightly](https://stackage.org/package/ki-unlifted/badge/nightly)](https://www.stackage.org/nightly/package/ki-unlifted) |
  | [![Dependencies](https://img.shields.io/hackage-deps/v/ki)](https://packdeps.haskellers.com/reverse/ki) | [![Dependencies](https://img.shields.io/hackage-deps/v/ki-unlifted)](https://packdeps.haskellers.com/reverse/ki-unlifted) |

  # Overview

  `ki` is a lightweight structured-concurrency library inspired by many other projects and blog posts:

  * [libdill](http://libdill.org/)
  * [trio](https://github.com/python-trio/trio)
  * [Kotlin coroutines](https://kotlinlang.org/docs/reference/coroutines-overview.html)
  * [Notes on structured concurrency, or: Go statement considered harmful](https://vorpus.org/blog/notes-on-structured-concurrency-or-go-statement-considered-harmful)
  * [Structured Concurrency in High-level Languages](https://250bpm.com/blog:124)
  * [Update on Structured Concurrency](https://250bpm.com/blog:137)
  * [Two Approaches to Structured Concurrency](https://250bpm.com/blog:139)
  * [libdill: Structured Concurrency for C](https://libdill.org/structured-concurrency.html)

  A previous version of `ki` also included a mechanism for soft-cancellation/graceful shutdown, which took inspiration
  from:

  * [Go Concurrency Patterns: Context](https://blog.golang.org/context)
  * [.NET 4 Cancellation Framework](https://devblogs.microsoft.com/pfxteam/net-4-cancellation-framework)
  * [Timeouts and cancellation for humans](https://vorpus.org/blog/timeouts-and-cancellation-for-humans)
  * [Graceful Shutdown](https://250bpm.com/blog:146)

  However, this feature was removed (perhaps temporarily) because the design of the API was unsatisfactory.

  # Documentation

  [Hackage documentation](https://hackage.haskell.org/package/ki/docs/Ki.html)
license-name: BSD-3-Clause
