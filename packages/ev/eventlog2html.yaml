all-versions:
- 0.1.0
- 0.2.0
- 0.3.0
- 0.4.0
- 0.5.0
- 0.6.0
- 0.7.0
- 0.8.0
- 0.8.1
- 0.8.2
- 0.8.3
- 0.9.0
- 0.9.1
- 0.9.2
- 0.9.3
- 0.10.0
- 0.11.0
- 0.11.1
- 0.12.0
author: Matthew Pickering, David Binder, Claude Heiland-Allen
basic-deps:
  aeson: '>=1.4.3 && <1.6 || >=2.0 && <2.3'
  array: '>=0.5.3 && <0.6'
  attoparsec: '>=0.13.2 && <0.15'
  base: '>=4 && <5'
  blaze-html: '>=0.9.1 && <0.10'
  blaze-markup: '>=0.8 && <0.9'
  bytestring: '>=0.10.8 && <0.13'
  containers: '>=0.5.0 && <0.8'
  eventlog2html: '>=0'
  file-embed: '>=0.0.11 && <0.1'
  filepath: '>=1.4.2 && <1.6'
  ghc-events: '>=0.20.0 && <0.21'
  ghc-heap: '>=9 && <10'
  githash: '>=0.1.6.2 && <0.2'
  hashable: '>=1.0 && <1.6'
  hashtables: '>=1.2.3 && <1.5'
  hvega: '>=0.11.0 && <0.13'
  mtl: '>=2.2.2 && <2.4'
  optparse-applicative: '>=0.14.3 && <0.19'
  raw-strings-qq: '>=1.1 && <1.2'
  semigroups: '>=0.18 && <0.21'
  statistics-linreg: '>=0.3 && <0.4'
  text: '>=1.2.3 && <1.3 || >=2.0 && <2.2'
  time: '>=1.8.0 && <2.0'
  trie-simple: '>=0.4 && <0.5'
  vector: '>=0.11 && <0.14'
changelog: |
  0.12.0 release 2024-06-03
  -------------------------

  * Fix rendering of .hp profiles (#191)
  * Add support for eras profiling

  0.11.1 release 2024-08-17
  -------------------------

  * Fix build error due to new exported function in blaze-html [#186](https://github.com/mpickering/eventlog2html/issues/186)
  * Add `GHC 9.10.1` to the build matrix.

  0.11.0 release 2024-02-06
  -------------------------

  * Add sorting by numbers [#183](https://github.com/mpickering/eventlog2html/pull/183)
  * Refactoring and modernization of the UI [#178](https://github.com/mpickering/eventlog2html/pull/178)
  * Compatibility with `9.0`, `9.2`, `9.4`, `9.6` and `9.8` which are now also checked in CI.
    ([#180](https://github.com/mpickering/eventlog2html/pull/180) and [#181](https://github.com/mpickering/eventlog2html/pull/181))

  0.10.0 release 2023-03-31
  -------------------------

  * Add support for rendering ticky profiles ([#167](https://github.com/mpickering/eventlog2html/pull/167))

  0.9.3 release 2022-12-11
  ------------------------

  * Add `--version` flag for eventlog2html which prints the version,
    git commit and git branch used to build eventlog2html.
  * Compatibility with `9.4.*` and `9.2.*` compilers.

  0.9.2 release 2021-11-24
  ------------------------

  * Improve profile load speed ([#150](https://github.com/mpickering/eventlog2html/pull/150))

  0.9.1 release 2021-06-21
  ------------------------

  * Improve detailed mode for cost centre profiling ([#146](https://github.com/mpickering/eventlog2html/pull/146))

  0.9 release 2021-03-17
  ----------------------

  * Add support for `-hi` profiling
  * Add a chart to show memory usage vs live bytes

  0.8.3 release 2020-12-29
  ------------------------

  * Add `defaultArgs` and `generateJsonData` for using eventlog2html as a library
  * Update to `hvega-0.11`

  0.8.2, release 2020-12-17
  -------------------------

  * Fix initialisation of fancyTable ([#137](https://github.com/mpickering/eventlog2html/pull/137))

  0.8.1, release 2020-12-16
  -------------------------

  * Add a missing file to the cabal file to fix `0.8` release

  0.8, release 2020-12-11
  -----------------------

  * Fix a bug for Windows users by explicitly setting output to utf-8. ([#123](https://github.com/mpickering/eventlog2html/issues/123))
  * New detailed view to display per-band information
  * Update vega assets to latest versions

  0.7, released 2020-03-26
  ------------------------

  * Use native interactive legend in new version of vega-lite
  * Update to latest vega, vega-lite and vega-embed versions

  0.6, released 2019-10-22
  ------------------------

  * Revamp how cost centre profiles are displayed.
  * Fix incorrectly calculated start time for certain profiles.
  * Line chart now displays points for each sample so it's easier to see where to hover.
  * Add `--y-axis` option to allow the user to specify the extent of the y-axis.
    This is useful when comparing two different profiles together.

  0.5, released 2019-10-11
  ------------------------

  * Add some more metainformation to the header (sample mode and sample interval)
  * Fix empty sample at start of eventlog
  * Support for biographical and retaining profiling modes if using
  at least GHC-8.10.
  * Fix cost centre profiles to match the output of hp2pretty

  0.4, released 2019-09-18
  ------------------------

  *  BREAKING CHANGE: eventlog2html no longer includes traces which have been generated by "traceEvent" or "traceEventIO" from "Debug.Trace" by default.
    "traceEvent" and "traceEventIO" are supposed to be used for high-frequency events.
    If you want to trace low-frequency events, especially in order to relate phases of your program to memory usage patterns,  use "traceMarker" and "traceMarkerIO" instead.
    If you want to return to the old behaviour, add the `--include-trace-events` option on the commandline.
  * Removed "trace PERCENT" option, which had no effect in the code.
  * Added warning about eventlogs with a lot of traces.
  * Added option to filter the traces which should be included in the
    generated output.

  0.3, released 2019-09-08
  ------------------------

  * Added warnings if eventlog2html is used on eventlogs generated by GHC Version without profiling support.
  * Moved to version `0.4` of HVega.
  * HeapProfCostCentre and HeapProfSampleCostCentre Events are included  in the generated output.

  0.2, released 2019-07-05
  ------------------------

  * Added the commandline option `-o OUTFILE` which writes the output to
    the given filename.
  * Show the time the eventlog was created in the generated HTML output.

  0.1, released 2019-06-23
  ------------------------

  * Initial release, a complete rewrite on hp2pretty. Implemented by
    Matthew Pickering and David Binder.
changelog-type: markdown
description: |
  # eventlog2html

  [Interactive Documentation](https://mpickering.github.io/eventlog2html/)

  [![GHC Matrix CI](https://github.com/mpickering/eventlog2html/actions/workflows/ghc-matrix.yml/badge.svg?branch=master)](https://github.com/mpickering/eventlog2html/actions/workflows/ghc-matrix.yml)
  ![Hackage](https://img.shields.io/hackage/v/eventlog2html.svg)

  `eventlog2html` is a tool to visualise eventlogs. In particular, it creates
  interactive charts for the heap profiling information included in the
  eventlog.

  The [complete documentation](https://mpickering.github.io/eventlog2html/) contain
  [interactive](https://mpickering.github.io/eventlog2html/examples/ghc.eventlog.html) [examples](https://mpickering.github.io/eventlog2html/examples/eventlog2html.eventlog.html) and complete usage information.

  ## How to use

  The tool produces a static webpage to visualise the heap profile.
  For an eventlog `program.eventlog`, a static page titled `program.eventlog.html`
  will be created adjacent to the original file.

  In order to use `eventlog2html` you first need an eventlog with heap profiling
  samples.

  Compile your program with `-prof`. In a cabal project, the easiest way to
  do this is to set `profiling: True` in the `cabal.project` file.

  Then, run your program with the normal profiling flags with an additional `-l`
  flag. This will tell GHC to also emit the eventlog.

  ```
  my-leaky-program +RTS -hy -l-au
  ```

  In the current directory a file `my-leaky-program.eventlog` will be produced.
  This is what you need to pass to `eventlog2html` to generate the profiling
  graphs.

  ```
  eventlog2html my-leaky-program.eventlog
  ```

  Note: The `-l-au` suffix will result in a significantly smaller eventlog
  as it will not include thread events. This makes a big difference for
  multi-threaded applications.

  ## Building the project

  There are two supported ways to build the project: `cabal new-build` and `nix`.
  For development the normal `cabal new-build` workflow should work fine.

  There are also nix files provided which can build both the tool and documentation.
  Binary caches are populated by CI.

  ```
  cachix use mpickering
  nix build -f . eventlog2html
  nix build -f . site
  ```

  Using `nix` means that you can conveniently try the project using

  ```
  nix run -f https://github.com/mpickering/eventlog2html/archive/master.tar.gz eventlog2html -c eventlog2html my-leaky-program.eventlog
  ```

  ## Fixing CI

  If we need a newer version of a dependency then it might be necessary to update
  the `index-state` which `haskell.nix` uses to compute the build plan.

  All this requires is updating the date in `build.nix` to something more recent.
  The `index-state-hashes` are updated once a day so you might have to choose a
  date from a few days ago rather than the current date.

  ## Modifying Documentation

  The documentation for the project is located in the `docs` folder. It is a hakyll
  site built by the generator in the `hakyll-eventlog` folder. CI automatically
  builds and deploys changes to the documentation.

  Additional examples can be added by adding an eventlog to the `examples`
  subdirectory. They will automatically be added to the examples gallery.

  You can build the documentation using the `nix` target or using `cabal
  new-build hakyll-eventlog` and invoking the resulting executable in the `docs/`
  directory.

  There is a custom pandoc filter which can insert rendered eventlogs into the
  documentation. To understand how this works it's probably easiest to read the code
  or copy the existing examples.
description-type: markdown
hash: e3027cf5e7335a5c1be15057eee7635d2726037a1205224308ee00b7b6214f63
homepage: https://mpickering.github.io/eventlog2html
latest: 0.12.0
license-name: BSD-3-Clause
maintainer: matthewtpickering@gmail.com
synopsis: Visualise an eventlog
test-bench-deps: {}
