all-versions:
- 0.1.0.0
- 0.1.0.1
- 0.2.0.0
- 0.2.0.1
- 0.2.0.2
- 0.2.0.3
- 0.2.0.4
- 0.2.0.5
- 0.2.0.6
- 0.2.0.7
- 0.2.1.0
- 0.2.1.1
author: Justin Leitgeb
basic-deps:
  base: '>=4.5 && <5.0'
  bytestring: '>=0.10.4 && <0.13.0'
  directory: '>=1.3 && <1.4'
  filepath: '>=1.4 && <1.6'
  temporary: '>=1.3 && <1.4'
  text: '>=1.2 && <3.0'
  unix-compat: '>=0.5 && <1.0'
changelog: ''
changelog-type: ''
description: |2-

  Atomically write to a file on POSIX-compliant systems while preserving
  permissions.

  On most Unix systems, `mv` is an atomic operation. This makes it simple to write
  to a file atomically just by using the mv operation. However, this will
  destroy the permissions on the original file. This library does the following
  to preserve permissions while atomically writing to a file:

  * If an original file exists, take those permissions and apply them to the
  temp file before `mv`ing the file into place.

  * If the original file does not exist, create a following with default
  permissions (based on the currently-active umask).

  This way, when the file is `mv`'ed into place, the permissions will be the ones
  held by the original file.

  This library is based on similar implementations found in common libraries in
  Ruby and Python:

  * <http://apidock.com/rails/File/atomic_write/class Ruby on Rails includes a similar method called atomic_write>

  * <https://github.com/chef/chef/blob/c4631816132fcfefaba3d123a1d0dfe8bc2866bb/lib/chef/file_content_management/deploy/mv_unix.rb#L23:L71 Chef includes atomic update functionality>

  * <https://github.com/sashka/atomicfile There is a python library for atomically updating a file>

  To use `atomic-write`, import the module corresponding to the type you wish to
  write atomically, e.g., to write a (strict) ByteString atomically:

  > import System.AtomicWrite.Writer.ByteString

  Then you can use the atomicWriteFile function that accepts a `FilePath` and a
  `ByteString`, e.g.:

  > atomicWriteFile myFilePath myByteString
description-type: haddock
hash: 1863c94cef87b4cf52b0064fd696201ebc747843d72daa3de2b2ce947a66e898
homepage: https://github.com/stackbuilders/atomic-write
latest: 0.2.1.1
license-name: MIT
maintainer: support@stackbuilders.com
synopsis: Atomically write to a file
test-bench-deps:
  atomic-write: '>=0'
  base: '>=4.5 && <5.0'
  bytestring: '>=0'
  filepath: '>=0'
  hspec: '>=2.5 && <2.12'
  temporary: '>=0'
  text: '>=0'
  unix-compat: '>=0'
