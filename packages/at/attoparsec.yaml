homepage: https://github.com/bgamari/attoparsec
changelog-type: markdown
hash: 7366879ff00281aca05130f0d496a2fc4c6ce326a00f95d70afadb8aefbfc2e0
test-bench-deps:
  bytestring: '>=0.10.4.0'
  case-insensitive: -any
  base: ==4.*
  unordered-containers: -any
  text: '>=1.1.1.0'
  filepath: -any
  criterion: '>=1.0'
  parsec: '>=3.1.2'
  array: -any
  quickcheck-unicode: -any
  containers: -any
  ghc-prim: -any
  tasty-quickcheck: '>=0.8'
  transformers: -any
  tasty: '>=0.11'
  deepseq: '>=1.1'
  scientific: -any
  QuickCheck: '>=2.13.2 && <2.15'
  http-types: -any
  vector: -any
  directory: -any
maintainer: Bryan O'Sullivan <bos@serpentine.com>, Ben Gamari <ben@smart-cactus.org>
synopsis: Fast combinator parsing for bytestrings and text
changelog: |
  0.13.2.1

  * Improved performance of `Data.Attoparsec.Text.asciiCI`

  0.13.2.0

  * `pure` is now strict in `Position`

  0.13.1.0

  * `runScanner` now correctly returns the final state
    (https://github.com/bos/attoparsec/issues/105).
  * `Parser`, `ZeptoT`, `Buffer`, and `More` now expose `Semigroup` instances.
  * `Parser`, and `ZeptoT` now expose `MonadFail` instances.

  0.13.0.2

  * Restore the fast specialised character set implementation for Text
  * Move testsuite from test-framework to tasty
  * Performance optimization of takeWhile and takeWhile1

  0.13.0.1

  * Fixed a bug in the implementations of inClass and notInClass for
    Text (https://github.com/bos/attoparsec/issues/103)

  0.13.0.0

  * Made the parser type in the Zepto module a monad transformer
    (needed by aeson's string unescaping parser).

  0.12.1.6

  * Fixed a case folding bug in the ByteString version of stringCI.

  0.12.1.5

  * Fixed an indexing bug in the new Text implementation of string,
    reported by Michel Boucey.

  0.12.1.4

  * Fixed a case where the string parser would consume an unnecessary
    amount of input before failing a match, when it could bail much
    earlier (https://github.com/bos/attoparsec/issues/97)

  * Added more context to error messages
    (https://github.com/bos/attoparsec/pull/79)

  0.12.1.3

  * Fixed incorrect tracking of Text lengths
    (https://github.com/bos/attoparsec/issues/80)

  0.12.1.2

  * Fixed the incorrect tracking of capacity if the initial buffer was
    empty (https://github.com/bos/attoparsec/issues/75)

  0.12.1.1

  * Fixed a data corruption bug that occurred under some circumstances
    if a buffer grew after prompting for more input
    (https://github.com/bos/attoparsec/issues/74)

  0.12.1.0

  * Now compatible with GHC 7.9

  * Reintroduced the Chunk class, used by the parsers package

  0.12.0.0

  * A new internal representation makes almost all real-world parsers
    faster, sometimes by big margins.  For example, parsing JSON data
    with aeson is now up to 70% faster.  These performance improvements
    also come with reduced memory consumption and some new capabilities.

  * The new match combinator gives both the result of a parse and the
    input that it matched.

  * The test suite has doubled in size.  This made it possible to switch
    to the new internal representation with a decent degree of
    confidence that everything was more or less working.

  * The benchmark suite now contains a small family of benchmarks taken
    from real-world uses of attoparsec.

  * A few types that ought to have been private now are.

  * A few obsolete modules and functions have been marked as deprecated.
    They will be removed from the next major release.

  0.11.3.0

  * New function scientific is compatible with rational, but parses
    integers more efficiently (https://github.com/bos/aeson/issues/198)

  0.11.2.0

  * The new Chunk typeclass allows for some code sharing with Ed
    Kmett's parsers package: http://hackage.haskell.org/package/parsers

  * New function runScanner generalises scan to return the final state
    of the scanner as well as the input consumed.


  0.11.1.0

  * New dependency: the scientific package.  This allows us to parse
    numbers much more efficiently.

  * peekWord8', peekChar': new primitive parsers that allow
    single-character lookahead.
basic-deps:
  bytestring: <0.12
  base: '>=4.3 && <5'
  text: '>=1.1.1.3'
  array: -any
  containers: -any
  ghc-prim: <0.7
  transformers: '>=0.2 && (<0.4 || >=0.4.1.0) && <0.6'
  deepseq: -any
  scientific: '>=0.3.1 && <0.4'
all-versions:
- '0.4'
- '0.5'
- 0.5.1
- '0.6'
- 0.7.1
- 0.7.2
- 0.8.0.0
- 0.8.0.1
- 0.8.0.2
- 0.8.1.0
- 0.8.1.1
- 0.8.2.0
- 0.8.3.0
- 0.8.4.0
- 0.8.5.0
- 0.8.5.1
- 0.8.5.2
- 0.8.5.3
- 0.8.6.0
- 0.8.6.1
- 0.9.0.0
- 0.9.1.1
- 0.9.1.2
- 0.10.0.0
- 0.10.0.1
- 0.10.0.2
- 0.10.0.3
- 0.10.1.0
- 0.10.1.1
- 0.10.2.0
- 0.10.3.0
- 0.10.4.0
- 0.11.1.0
- 0.11.2.1
- 0.11.3.0
- 0.11.3.1
- 0.11.3.2
- 0.11.3.3
- 0.11.3.4
- 0.12.0.0
- 0.12.1.0
- 0.12.1.1
- 0.12.1.2
- 0.12.1.3
- 0.12.1.4
- 0.12.1.5
- 0.12.1.6
- 0.13.0.0
- 0.13.0.1
- 0.13.0.2
- 0.13.1.0
- 0.13.2.0
- 0.13.2.1
- 0.13.2.2
- 0.13.2.3
- 0.13.2.4
- 0.13.2.5
author: Bryan O'Sullivan <bos@serpentine.com>
latest: 0.13.2.5
description-type: markdown
description: |
  # Welcome to attoparsec

  attoparsec is a fast Haskell parser combinator library, aimed
  particularly at dealing efficiently with network protocols and
  complicated text/binary file formats.

  # Join in!

  I'm happy to receive bug reports, fixes, documentation enhancements,
  and other improvements.

  Please report bugs via the
  [github issue tracker](https://github.com/bos/attoparsec/issues).

  Master [git repository](https://github.com/bos/attoparsec):

  * `git clone git://github.com/bos/attoparsec.git`

  Authors
  -------

  This library is written and maintained by Bryan O'Sullivan,
  <bos@serpentine.com>.
license-name: BSD-3-Clause
