homepage: https://github.com/stla/scubature#readme
changelog-type: markdown
hash: f7a939acead8c4a61a1654218bfcb19c3f2bc22e8ef98508558cc0061d3f7f93
test-bench-deps: {}
maintainer: laurent_step@outlook.fr
synopsis: Multidimensional integration over simplices
changelog: "1.0.0.0\n-------\n* initial release\n\n1.0.0.1\n-------\n* removed the
  upper bounds of the dependencies\n\n1.1.0.0\n-------\n* new function `integratePolynomialOnSimplex`,
  returning the exact value of \n  the integral of a polynomial over a simplex"
basic-deps:
  base: '>=4.7 && <5'
  matrix: '>=0.3.6.1'
  array: '>=0.5.4.0'
  containers: '>=0.6.4.1'
  ilist: '>=0.4.0.1'
  hspray: '>=0.1.1.0'
  vector: '>=0.12.3.1'
  numeric-prelude: '>=0.4.4'
all-versions:
- 1.0.0.0
- 1.0.0.1
- 1.1.0.0
author: Stéphane Laurent
latest: 1.1.0.0
description-type: markdown
description: "# scubature\n\nPure Haskell implementation of simplicial cubature (integration
  over a simplex).\n\nThis library is a port of a part of the R package **SimplicalCubature**,
  \nwritten by John P. Nolan, and which contains R translations of \nsome Matlab and
  Fortran code written by Alan Genz. \nIt is also a port of a part of the R package
  **SphericalCubature**, also \nwritten by John P. Nolan. \nIn addition it provides
  a function for the exact computation of the integral \nof a polynomial over a simplex.\n\n___\n\n##
  Integral of a function on a simplex\n\n```haskell\nintegrateOnSimplex\n    :: (VectorD
  -> VectorD)   -- integrand\n    -> Simplices              -- domain of integration
  (union of the simplices)\n    -> Int                    -- number of components
  of the integrand\n    -> Int                    -- maximum number of evaluations\n
  \   -> Double                 -- desired absolute error\n    -> Double                 --
  desired relative error\n    -> Int                    -- integration rule: 1, 2,
  3 or 4\n    -> IO Results             -- values, error estimates, evaluations, success\n```\n\n###
  Example\n\n![equation](http://latex.codecogs.com/gif.latex?%5Cint_0%5E1%5Cint_0%5Ex%5Cint_0%5Ey%5Cexp%28x+y+z%29%5C,%5Cmathrm%7Bd%7Dz%5C,%5Cmathrm%7Bd%7Dy%5C,%5Cmathrm%7Bd%7Dx=%5Cfrac%7B1%7D%7B6%7D%28e-1%29%5E3%5Capprox%20.8455356853)\n\nDefine
  the integrand:\n\n```haskell\nimport Data.Vector.Unboxed as V\n:{\nf :: Vector Double
  -> Vector Double\nf v = singleton $ exp (V.sum v)\n:}\n```\n\nDefine the simplex
  (tetrahedron in dimension 3) by the list of its vertices:\n\n```haskell\nsimplex
  = [[0, 0, 0], [1, 1, 1], [0, 1, 1], [0, 0, 1]]\n```\n\nIntegrate:\n\n```haskell\nimport
  Numeric.Integration.SimplexCubature\nintegrateOnSimplex f [simplex] 1 100000 0 1e-10
  3\n-- Results { values = [0.8455356852954488]\n--         , errorEstimates = [8.082378899762402e-11]\n--
  \        , evaluations = 8700\n--         , success = True }\n```\n\nFor a scalar-valued
  integrand, it's more convenient to define... a scalar-valued\nintegrand! That is:\n\n```haskell\n:{\nf
  :: Vector Double -> Double\nf v = exp (V.sum v)\n:}\n```\n\nand then to use `integrateOnSimplex'`:\n\n```haskell\nintegrateOnSimplex'
  f [simplex] 100000 0 1e-10 3\n-- Result { value         = 0.8455356852954488\n--
  \       , errorEstimate = 8.082378899762402e-11\n--        , evaluations   = 8700\n--
  \       , success       = True }\n```\n\n\n## Exact integral of a polynomial on
  a simplex\n\n```haskell\nintegratePolynomialOnSimplex\n  :: (C a, Fractional a,
  Ord a) -- `C a` means that `a` must be a ring\n  => Spray a -- ^ polynomial to be
  integrated\n  -> [[a]]   -- ^ simplex to integrate over\n  -> a\n```\n\n### Example\n\nWe
  take as an example the rational numbers for `a`. Thus we must take a \npolynomial
  with rational coefficients and a simplex whose vertices \nhave rational coordinates.
  Then the integral will be a rational number.\n\nOur polynomial is \n\n![equation](https://latex.codecogs.com/gif.image?\\dpi{110}P(x,&space;y,&space;z)&space;=&space;x^4&space;&plus;&space;y&space;&plus;&space;2xy^2&space;-&space;3z.)\n\nIt
  must be defined in Haskell with the \n[**hspray**](https://github.com/stla/hspray)
  library.\n\n```haskell\nimport Numeric.Integration.IntegratePolynomialOnSimplex\nimport
  Data.Ratio\nimport Math.Algebra.Hspray \n\n:{\nsimplex :: [[Rational]]\nsimplex
  = [[1, 1, 1], [2, 2, 3], [3, 4, 5], [3, 2, 1]]\n:}\n\nx = lone 1 :: Spray Rational\ny
  = lone 2 :: Spray Rational\nz = lone 3 :: Spray Rational\n\n:{\npoly :: Spray Rational\npoly
  = x^**^4 ^+^ y ^+^ 2.^(x ^*^ y^**^2) ^-^ 3.^z\n:}\n\nintegratePolynomialOnSimplex
  poly simplex\n-- 1387 % 42\n```\n\n\n## Integration on a spherical triangle\n\nThe
  library also allows to evaluate an integral on a spherical simplex on the\nunit
  sphere (in dimension 3, a spherical triangle).\n\n### Example\n\nFor example take
  the first orthant in dimension 3:\n\n```haskell\nimport Numeric.Integration.SphericalSimplexCubature\no1
  = orthants 3 !! 0\no1\n-- [ [1.0, 0.0, 0.0]\n-- , [0.0, 1.0, 0.0]\n-- , [0.0, 0.0,
  1.0] ]\n```\n\nAnd this integrand:\n\n```haskell\n:{\nintegrand :: [Double] -> Double\nintegrand
  x = (x!!0 * x!!0 * x!!2) + (x!!1 * x!!1 * x!!2) + (x!!2 * x!!2 * x!!2)\n:}\n```\n\nCompute
  the integral (the exact result is `pi/4 ≈ 0.7853981634`):\n\n```haskell\nintegrateOnSphericalSimplex
  integrand o1 20000 0 1e-7 3\n-- Result { value         = 0.7853981641913279\n--
  \       , errorEstimate = 7.71579524444753e-8\n--        , evaluations   = 17065\n--
  \       , success       = True }\n```\n\n\n## References\n\n- A. Genz and R. Cools.
  \n  *An adaptive numerical cubature algorithm for simplices.* \n  ACM Trans. Math.
  Software 29, 297-308 (2003).\n\n- Jean B. Lasserre.\n  *Simple formula for the integration
  of polynomials on a simplex.* \n  BIT Numerical Mathematics 61, 523-533 (2021)."
license-name: GPL-3.0-only
