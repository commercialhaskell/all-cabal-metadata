homepage: ''
changelog-type: ''
hash: 3bdb9ded20c546038d96143c40338682439c23a0cae7bf0ffeb8f429f88e8abd
test-bench-deps:
  base: '>=4.0 && <5.0'
  time: '>=1.6.0.1'
  parsec: '>=3.1'
  containers: '>=0.5.7.1'
  random: '>=1.0.1.1'
  QuickCheck: '>=2.4'
  pretty: '>=1.1'
maintainer: Joe Leslie-Hurd <joe@gilith.com>
synopsis: Factoring integers and polynomials
changelog: ''
basic-deps:
  base: '>=4.0 && <5.0'
  time: '>=1.6.0.1'
  parsec: '>=3.1'
  containers: '>=0.5.7.1'
  random: '>=1.0.1.1'
  pretty: '>=1.1'
all-versions:
- '1.0'
- '1.1'
- '1.2'
- '1.3'
- '1.4'
- '1.5'
- '1.6'
author: Joe Leslie-Hurd <joe@gilith.com>
latest: '1.6'
description-type: markdown
description: "The [factor package][] is a [Haskell][] library for factoring integers\nand
  polynomials, implementing the following algorithms:\n\n- [Number field sieve](doc/nfs-example.txt)
  (NFS) for factoring arbitrary integers\n- [Elliptic curve method](doc/ecm-example.txt)
  (ECM) for finding \"small\" factors of integers\n- Miller-Rabin probabilistic primality
  test for integers\n- Berlekamp-Zassenhaus algorithm for factoring integer polynomials\n-
  Berlekamp algorithm for factoring polynomials over GF(*p*) (for small primes *p*)\n-
  Cantorâ€“Zassenhaus algorithm for factoring polynomials over GF(*p*) (for arbitrary
  odd primes *p*)\n\nThis software is released under the [MIT License](LICENSE).\n\nInstall\n-------\n\nInstalling
  the factor package requires [cabal][]:\n\n    git clone https://github.com/gilith/factor.git\n
  \   cd factor\n    cabal install --enable-tests\n\nThe factor package contains an
  executable called `factor`, which is\n[run](doc/factor-usage.txt) as follows:\n\n
  \   Usage: factor [options] \"expression to factor\"\n          --trial=N       Set
  trial division maximum to N\n          --ecm-primes=N  Limit ECM to first N primes
  (use - for no limit)\n          --nfs-chars=N   Use N quadratic characters in NFS\n
  \         --nfs-verbose   Show complete lists in NFS verbose messages\n      -v
  \ --verbose       Enable verbose messages\n      -t  --timestamp     Prepend verbose
  messages with timestamp\n          --version       Print version\n      -h  --help
  \         Show help\n\nExample input expressions:\n\n      2047               Concrete
  integer\n      2^2^7 + 1          Integer expression\n      N[100]             Random
  100-bit positive integer\n      P[50] * P[50]      Product of random 50-bit primes\n
  \     x^4 - 10*x^2 + 1   Polynomial over the integers\n      x^5^2 - x (mod 5)  Polynomial
  over GF(5)\n\nLet expressions are supported: `let p = P[4] in x^p - x (mod p)`  \nMultivariate
  polynomials (e.g., `y^2 - x^3 - a*x - b`) are not supported\n\nTest and Profile\n----------------\n\nUse
  [cabal][] to run the test suite:\n\n    cabal test\n\nProfiles of the time and memory
  requirements for factoring inputs of\nvarious sizes:\n\n- [Number field sieve profile](doc/nfs-profile.txt)\n-
  [Elliptic curve method profile](doc/ecm-profile.txt)\n\nThe following recipe can
  be used to [visualize the dynamic memory\nusage](doc/nfs-memory.png) of the number
  field sieve:\n\n    cabal clean\n    cabal configure --enable-profiling\n    cabal
  build\n    factor +RTS -hc -RTS -v --ecm-primes 0 'P[35] * P[35]'\n    hp2ps -e8in
  -c factor.hp\n    gm convert -density 180 factor.ps factor.png\n    xview factor.png\n\nReferences\n----------\n\nComments
  in the code contain references to descriptions of the\nspecific implemented algorithms,
  and the following references helped\nwith general understanding of the number field
  sieve:\n\n- [A Tale of Two Sieves][Pomerance1996], Carl Pomerance, 1996\n- [The
  Number Field Sieve][Byrnes2005], Steven Byrnes, 2005\n- [An Introduction to the
  General Number Field Sieve][Briggs1998], Matthew E Briggs, 1998\n- [Integer Factorization][Jensen2005],
  Per Leslie Jensen, 2005\n- [Square Root Algorithms for the Number Field Sieve][Thome2012],
  Emmanuel Thome, 2012\n- [MSIEVE: A Library for Factoring Large Integers][msieve],
  Jason Papadopoulos, 2010\n\n[Briggs1998]: https://vtechworks.lib.vt.edu/bitstream/handle/10919/36618/etd.pdf
  \"An Introduction to the General Number Field Sieve\"\n[Byrnes2005]: https://wstein.org/129-05/final_papers/Steve_Byrnes.pdf
  \"The Number Field Sieve\"\n[cabal]: https://www.haskell.org/cabal/ \"Cabal\"\n[factor
  package]: https://hackage.haskell.org/package/factor \"factor package\"\n[Haskell]:
  https://www.haskell.org/ \"Haskell\"\n[Jensen2005]: http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.693.9784
  \"Integer Factorization\"\n[msieve]: https://github.com/radii/msieve \"msieve\"\n[Pomerance1996]:
  https://www.ams.org/notices/199612/pomerance.pdf \"A Tale of Two Sieves\"\n[Thome2012]:
  https://hal.inria.fr/hal-00756838/en \"Square root algorithms for the number field
  sieve\"\n"
license-name: MIT
