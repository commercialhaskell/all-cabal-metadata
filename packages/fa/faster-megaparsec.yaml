homepage: https://hub.darcs.net/olf/faster-megaparsec
changelog-type: markdown
hash: 10cf303997d691f5ea36b22f1791817ddaac53575827b8925f32198efbd265bd
test-bench-deps:
  base: '>=4.7 && <5'
  text: -any
  megaparsec: -any
  containers: '>=0.5.11'
  faster-megaparsec: -any
  QuickCheck: -any
maintainer: olaf.klinke@phymetric.de, olf@aatal-apotheke.de
synopsis: see README.md
changelog: |
  # Changelog for `faster-megaparsec`

  All notable changes to this project will be documented in this file.

  The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),
  and this project adheres to the
  [Haskell Package Versioning Policy](https://pvp.haskell.org/).

  ## Unreleased

  ## 0.1.0.0 - YYYY-MM-DD
basic-deps:
  base: '>=4.7 && <5'
  megaparsec: '>=6 && <10'
  mtl: <2.4
all-versions:
- 0.1.0.0
author: Olaf Klinke
latest: 0.1.0.0
description-type: markdown
description: "# faster-megaparsec\n\nThis package defines a MonadParsec instance for
  \n(a type isomorphic to) `StateT s Maybe`\nwhere `s` is a Megaparsec Stream type
  such as `String`, `Text` or `ByteString`.\nThis parser can be faster than Cassava
  for csv parsing \nbut at the cost of no error information whatsoever. \n\nIf, however,
  you construct your parser in a generic `MonadParsec` fashion, \nthen with the help
  of `Text.Megaparsec.Simple.tryFast` \nyou can first attempt to specialize and run
  the fast parser \nsupplied by this package and only on parse error specialize \nthe
  parser to `ParsecT` and parse again, yielding an informative \nerror message.  \nThis
  buys you speed in the smooth case of successful parsing \nat the cost of double
  parse when something goes wrong. \n\nBeware that the behaviour of a `SimpleParser`
  can differ from its `Parsec` sibling \nbecause \n\n * `SimpleParser` is always backtracking
  since it does not know whether it has consumed tokens,\n * any fancy parsing that
  relies on inspecting parser state components such as offset will not work as intended.\n\n"
license-name: GPL-3.0-only
