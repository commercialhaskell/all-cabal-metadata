all-versions:
- 0.1.0.0
- 0.1.0.1
- 0.1.0.2
- 0.1.0.3
- 0.1.0.4
- 0.1.0.5
- 0.1.0.6
- 0.1.0.7
- 0.1.1.0
- 0.1.1.1
- 0.1.1.2
- 0.1.1.3
- 0.1.1.4
- 0.1.1.5
- 0.2.0.0
- 0.2.0.1
- 0.2.1.0
- 0.2.2.0
- 0.2.2.1
- 0.2.2.2
- 0.2.2.3
- 0.2.3.0
- 0.2.3.1
- 0.2.3.2
- 0.3.0.0
- 0.3.0.1
- 0.3.0.2
- 0.3.0.3
- 0.3.1.0
- 0.3.2.0
- 0.3.2.1
- 0.3.2.4
- 0.3.2.5
- 0.3.2.6
- 0.3.3.0
- 0.3.3.1
- 0.3.3.2
- 0.3.3.3
- 0.3.3.4
- 0.3.3.5
- 0.3.3.6
- 0.3.3.7
- 0.4.0.0
- 0.5.0.0
- 0.6.0.1
- 0.6.0.2
- 0.6.0.3
- 0.6.0.4
- 0.6.0.5
- 0.6.0.6
- 0.6.0.7
- 0.6.0.8
- 0.6.0.9
- 0.6.1.1
- 0.6.2.0
- 0.6.2.2
- 0.6.2.3
- 0.6.3.0
- 0.6.4.0
- 0.6.4.1
- 0.6.4.2
- 0.6.4.3
- 0.6.5.0
- 0.6.5.1
- 0.6.6.0
- 0.6.7.0
author: Vanessa McHale
basic-deps:
  base: '>=4.10 && <5'
  hgmp: '>=0'
changelog: |
  # fast-arithmetic

  ## 0.6.7.0

    * Add `risingFac` function

  ## 0.6.6.0

    * Export `bell` function

  ## 0.6.5.1

    * Documentation fixes
    * Fix performance of `tau`; it now beats Haskell implementation from arithmoi
      again.

  # 0.6.5.0

    * Add `isSemiprime`

  ## 0.6.4.3

    * Improved documentation
    * Update for latest `ats-includes` package
    * Remove unsafe casts and don't bother with `intinfGt(0)` types
    * Use internal library `pure-haskell` for benchmarks/test suite
    * Drop some older GHC support

  ## 0.6.4.2

    * Fix bug in `include/fast_arithmetic.h`
    * Put some documentation in `.sats` files rather than `.dats` files
    * Fix `.dhall` files

  ## 0.6.4.1

    * Use `hgmp` internally

  ## 0.6.4.0

    * Add `bell` to the ATS library
    * Add `stirling2` for computing Stirling numbers of the second kind.
    * Add `radical` to `fast_arithmetic.h`, for users of the C library

  ## 0.6.3.0

    * Patch `isPrime`

  ## 0.6.2.1

    * Export `radical`

  ## 0.6.2.0

    * Add `radical` for computing radicals of integers

  ## 0.6.1.2

    * Add `fast_arithmetic.h` for those wanting to use the C library.

  ## 0.6.1.1

    * Add niche function for a problem of combinatorial geometry.

  ## 0.6.1.0

    * Add `permutations` function
    * Minor performance improvements
    * Add debian package
    * Improvements to the ATS library

  ## 0.6.0.9

    * Fix builds on older GHCs

  ## 0.6.0.8

    * Improved performance slightly
    * Updated `pkg.dhall`
changelog-type: markdown
description: "# fast-arithmetic\n\n[![Build Status](https://travis-ci.org/vmchale/hs-ats.svg?branch=master)](https://travis-ci.org/vmchale/hs-ats)\n[![Hackage](https://img.shields.io/hackage/v/fast-arithmetic.svg)](http://hackage.haskell.org/package/fast-arithmetic)\n[![Dependencies
  of latest version on Hackage](https://img.shields.io/hackage-deps/v/fast-arithmetic.svg)](https://hackage.haskell.org/package/fast-arithmetic)\n\nThis
  is a library for fast arithmetical functions using ATS, with a Haskell\nwrapper.\n\nIt
  is intended to supplement (but not replace)\n[arithmoi](https://hackage.haskell.org/package/arithmoi)
  and\n[combinat](https://hackage.haskell.org/package/combinat) where speed is\nimportant.
  In particular, this library provides a fast primality check and fast\ncomputation
  of basic combinatorial functions.\n\n## Benchmarks\n\n| Computation | Version (ATS/Haskell)
  | Time |\n| ----------- | --------------------- | ---- |\n| `isPrime 2017` | ATS
  | 117.2 ns |\n| `isPrime 2017` | Haskell | 425.0 ns |\n| `φ(2016)` | ATS | 191.5
  ns |\n| `φ(2016)` | Haskell | 384.8 ns |\n| `τ(3018)` | ATS | 337.0 ns |\n| `τ(3018)`
  | Haskell | 660.2 ns |\n| `σ(115)` | ATS | 45.41 ns |\n| `σ(115)` | Haskell | 322.4
  ns |\n| `ω(91)` | ATS | 65.52 ns |\n| `ω(91)` | Haskell | 345.2 ns |\n| `160!` |
  ATS | 2.363 μs |\n| `160!` | Haskell | 6.134μs |\n| `79!!` | ATS | 556.2 ns |\n|
  `79!!` | Haskell | 1.355 μs |\n| ``322 `choose` 16`` | ATS | 467.6 ns |\n| ``322
  `choose` 16`` | Haskell | 956.7 ns |\n| `catalan 300` | ATS | 13.74 μs |\n| `catalan
  300` | Haskell | 28.76 μs |\n| `permutations 20 10` | ATS | 202.8 ns |\n| `permutations
  20 10` | Haskell | 362.6 ns |\n| `maxRegions 45000` | ATS | 624.1 ns |\n| `maxRegions
  45000` | Haskell | 1.064 μs |\n| `stirling2 25 8` | ATS | 3.108 μs |\n| `stirling2
  25 8` | Haskell | 9.494 μs |\n\n## Building\n\nThe Haskell library comes with the
  C bundled, however you will likely want to build from\nsource if you are hacking
  on the library. To that end, you can install\n[atspkg](http://hackage.haskell.org/package/ats-pkg)
  and build with\n\n```bash\natspkg build --pkg-args \"./source.dhall\"\ncabal build\n```\n\n##
  Documentation\n\nYou can find documentation for the Haskell library on \n[Hackage](https://hackage.haskell.org/package/fast-arithmetic/).\nUnfortunately,
  there is no documentation for the ATS library, however,\nthe bundled source code
  is commented.\n"
description-type: markdown
hash: 56a40def0f9440bd4dceeba1bdb67f301bff6b87fb9ece07b0bc04ba062a6a5f
homepage: ''
latest: 0.6.7.0
license-name: BSD-3-Clause
maintainer: vamchale@gmail.com
synopsis: Fast functions on integers.
test-bench-deps:
  QuickCheck: '>=0'
  arithmoi: '>=0.4.3.0'
  base: '>=0'
  combinat: '>=0'
  criterion: '>=0'
  exact-combinatorics: '>=0'
  fast-arithmetic: '>=0'
  hspec: '>=0'
