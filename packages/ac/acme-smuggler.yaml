all-versions:
- 0.1.0.1
- 1.1.1.0
author: Ben Clifford <benc@hawaga.org.uk>
basic-deps:
  base: '>=4.7 && <5'
changelog: ''
changelog-type: ''
description: |+
  ACME Smuggler
  =============

  The `()` type has only one value, also called `()` with no
  internal structure.

  Nevertheless, acme-smuggler allows you to smuggle
  arbitrary values into `()` and discover them later.

  And! `Void` has no values at all, but acme-smuggler lets you
  smuggle values into `Void`. Or into any other Haskell type.

  ```haskell
  > x = smuggle "hello"
  > :t x
  x :: ()

  > y = smuggle (7 :: Integer)
  > :t y
  y :: ()

  > discover x :: Maybe String
  Just "hello"
  > discover y :: Maybe Integer
  Just 7
  > discover x :: Maybe Integer
  Nothing
  ```

description-type: markdown
hash: 5a6b4ac96e2ade2dabf95f4d9057e8afffa655bb6f5d80dfeaed1f0700c3b7f9
homepage: https://github.com/benclifford/acme-smuggler
latest: 1.1.1.0
license-name: BSD-3-Clause
maintainer: Ben Clifford <benc@hawaga.org.uk>
synopsis: Smuggle arbitrary values in arbitrary types
test-bench-deps:
  acme-smuggler: '>=0'
  base: '>=0'
  hspec: '>=0'
