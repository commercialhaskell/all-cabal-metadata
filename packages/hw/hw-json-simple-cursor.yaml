homepage: http://github.com/haskell-works/hw-json-simple-cursor#readme
changelog-type: ''
hash: 88976c7e4eceba203f3e1429edf5b6503484c89e777af86f2504ab3285c6240a
test-bench-deps:
  bytestring: '>=0.10.6 && <0.12'
  base: '>=4.11 && <5'
  hspec: '>=2.4 && <3'
  criterion: '>=1.4 && <1.6'
  hw-balancedparens: '>=0.3.0.0 && <0.5'
  hedgehog: '>=0.6 && <1.2'
  doctest: '>=0.16.2 && <0.21'
  mmap: '>=0.5 && <0.6'
  hw-prim: '>=0.6.2.28 && <0.7'
  hw-rankselect: '>=0.13 && <0.14'
  hw-rankselect-base: '>=0.3.2.1 && <0.4'
  doctest-discover: '>=0.2 && <0.3'
  hw-bits: '>=0.7.0.5 && <0.8'
  hw-json-simple-cursor: -any
  vector: '>=0.12 && <0.13'
  hw-hspec-hedgehog: '>=0.1.0.4 && <0.2'
  directory: '>=1.3 && <1.4'
maintainer: newhoggy@gmail.com
synopsis: Memory efficient JSON parser
changelog: ''
basic-deps:
  bytestring: '>=0.10.6 && <0.12'
  base: '>=4.11 && <5'
  text: '>=1.2 && <2.1'
  hw-balancedparens: '>=0.3.0.0 && <0.5'
  word8: '>=0.1 && <0.2'
  mmap: '>=0.5 && <0.6'
  hw-prim: '>=0.6.2.28 && <0.7'
  hw-json-simd: '>=0.1.0.2 && <0.2'
  lens: '>=4 && <6'
  hw-rankselect: ==0.13.*
  hw-rankselect-base: '>=0.3.2.1 && <0.4'
  generic-lens: '>=2.2.0.0 && <2.3'
  optparse-applicative: '>=0.14 && <0.18'
  hw-bits: '>=0.7.0.5 && <0.8'
  hw-json-simple-cursor: -any
  vector: ==0.12.*
all-versions:
- 0.1.0.0
- 0.1.0.1
- 0.1.0.2
- 0.1.1.0
- 0.1.1.1
author: John Ky
latest: 0.1.1.1
description-type: markdown
description: |
  # hw-json-simple-cursor
  [![master](https://circleci.com/gh/haskell-works/hw-json-simple-cursor/tree/master.svg?style=svg)](https://circleci.com/gh/haskell-works/hw-json-simple-cursor/tree/master)

  `hw-json-simple-cursor` is support library for `hw-json`, a succinct JSON parsing library.

  It uses succinct data-structures to allow traversal of large JSON strings with minimal memory overhead.

  For more information see [`hw-json`](https://github.com/haskell-works/hw-json).

  ## References

  * [Semi-Indexing Semi-Structured Data in Tiny Space](http://www.di.unipi.it/~ottavian/files/semi_index_cikm.pdf)
  * [Succinct Data Structures talk by Edward Kmett](https://www.youtube.com/watch?v=uA0Z7_4J7u8)
  * [Typed Tagless Final Interpreters](http://okmij.org/ftp/tagless-final/course/lecture.pdf)

  ## Special mentions

  * [Sydney Paper Club](http://www.meetup.com/Sydney-Paper-Club/)
license-name: BSD-3-Clause
