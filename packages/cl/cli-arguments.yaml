homepage: ''
changelog-type: markdown
hash: 6e1770bb265690f01308d29d85e4e1bf12257e4582796a925cb054a7ea9ea940
test-bench-deps: {}
maintainer: olexandr543@yahoo.com
synopsis: A library to process command line arguments in some more convenient way.
changelog: "# Revision history for cli-arguments\n\n## 0.1.0.0 -- 2021-12-27\n\n*
  First version. Released on an unsuspecting world.\n\n## 0.1.0.1 -- 2021-12-27\n\n*
  First version revised A. Improved the cabal file so that the description is correct.\n\n##
  0.2.0.0 -- 2021-12-28\n\n* Second version. Fixed issues with the partially defined
  function. Added new\nfunctionality related to sorting and arrays.\n\n## 0.3.0.0
  -- 2021-12-29\n\n* Third version. Added new functions with the 1 in their names
  to deal with apropos (in some way) framed by two delimiters\nvariants of the groups.
  Some code improvements, reduced duplications, changed pragmas INLINE to INLINABLE.\n\n##
  0.3.1.0 -- 2021-12-30\n\n* Third version revised A. Added some more general functions
  to process arrays,\ntype synonyms to improve code readability, reduced code duplication.\n\n##
  0.4.0.0 -- 2022-01-10\n\n* Fourth version. Added new functions. Changed the dependency
  boundaries.\n\n## 0.5.0.0 -- 2022-01-11\n\n* Fifth version. Added 3 new modules
  CLI.Arguments.Parsing, CLI.Arguments.Arr, CLI.Arguments.Get and the new functionality
  to\nthe first one, splitted the previous one between the last two. This should improve
  importing opportunities.\n\n## 0.6.0.0 -- 2022-01-12\n\n* Sixth version. Removed
  the functionality from the CLI.Arguments module that \nhas a bug in it and non-consistent
  logics. Splitted the functionality between \nmodules further, added a new module
  CLI.Arguments.Sorted with the corresponding\nfunctionality. Please, use the CLI.Arguments.Parsing
  module as logic and \nconsistent one.\n\n"
basic-deps:
  base: '>=4.8 && <5'
all-versions:
- 0.6.0.0
author: OleksandrZhabenko
latest: 0.6.0.0
description-type: haddock
description: Uses three types of the command line arguments and order of their parsing.
  All groups usually are not nested one into the others (but using the sequence of
  parsing functions, you can parse also nested structures as well).
license-name: MIT
