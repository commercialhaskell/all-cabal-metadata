homepage: https://gitlab.com/morley-framework/morley
changelog-type: markdown
hash: 0083c125319f5edf3f1b642ac94de962a20d14cca957721e0f34542c570e5956
test-bench-deps:
  first-class-families: -any
  bimap: -any
  fmt: -any
  either: -any
  bytestring: -any
  o-clock: -any
  morley-prelude: -any
  time: -any
  tasty-hedgehog: -any
  aeson-pretty: -any
  servant-client: -any
  unordered-containers: -any
  hspec: -any
  text: -any
  morley: -any
  with-utf8: -any
  type-spec: -any
  megaparsec: '>=7.0.0'
  syb: -any
  tasty-hspec: -any
  filepath: -any
  hedgehog: '>=1.0.3'
  constraints: -any
  base-noprelude: '>=4.7 && <5'
  cleveland: -any
  data-default: -any
  HUnit: -any
  gauge: -any
  containers: -any
  singletons: -any
  morley-client: -any
  lorentz: -any
  silently: -any
  vinyl: -any
  lens: -any
  cryptonite: -any
  spoon: -any
  mtl: -any
  hex-text: -any
  temporary: -any
  tasty: -any
  named: -any
  aeson-qq: -any
  aeson: -any
  template-haskell: -any
  tasty-hunit-compat: -any
  hspec-expectations: -any
  directory: -any
maintainer: Serokell <hi@serokell.io>
synopsis: Testing framework for Morley.
changelog: |
  <!-- Unreleased: append new entries here -->


  0.1.1
  =====
  * [!1113](https://gitlab.com/morley-framework/morley/-/merge_requests/1113)
    Remove uses of `Parser LetEnv` due to redundant constraint.
  * [!1094](https://gitlab.com/morley-framework/morley/-/merge_requests/1094)
    Deprecate morley language extensions
    + Functions for importing and testing Morley contracts are added: `Test.Cleveland.Michelson.Import.testTreesWithUntypedContractExt`, `Test.Cleveland.Michelson.Import.testTreesWithTypedContractExt`, `Test.Cleveland.Lorentz.Import.importContractExt`. All these functions are considered deprecated.
  * [!965](https://gitlab.com/morley-framework/morley/-/merge_requests/965)
    Use Morley's fixed-size lists
    + Add Hedgehog generators for sized lists.
    + Introduce `enumAliasHints` for generating a sized list of similarly named alias hints.
  * [!1072](https://gitlab.com/morley-framework/morley/-/merge_requests/1072)
    Add `runCode` to Cleveland
  * [!1070](https://gitlab.com/morley-framework/morley/-/merge_requests/1070)
    Simplify cleveland's internals & public api
    + Relaced the `NiceUnpackedValue (AsRPC st)` constraint in `getStorage`
    + Removed the `NicePackedValue k` constraint from `getAllBigMapValuesMaybe`,
      `getAllBigMapValues`, `getBigMapSizeMaybe`, and `getBigMapSize`.
  * [!1025](https://gitlab.com/morley-framework/morley/-/merge_requests/1025)
    Reduce the number of unsafe functions at the call site
    + Remove `unsafeFromHex` converter that is used as counter-part of safe `fromHex` and replaced with `unsafe . fromHex`.
    + Refactor `fromHex` to return `Either` instead of `Maybe`.
    + Add `parseAddressFromHex` helper to get rid of duplicated usages of `parseAddressRaw . unsafe . fromHex`.
  * [!978](https://gitlab.com/morley-framework/morley/-/merge_requests/978)
    Make it difficult to misuse 'Show'
    + Use `Buildable` and `pretty` preferrentially.
    + Add `Buildable` instances for `FaluireReason`, `Either a b`.
    + Add `PrettyShow` instances for `TypeSpec` (in lorentz-test) and `Time _` (in cleveland itself)./
    + Avoid using `(+||)` and `(||+)`.
    + Use `Debug.show` when defining `Show` instances.
  * [!1058](https://gitlab.com/morley-framework/morley/-/merge_requests/1058)
    Add `Buildable` instances for Unit, tuples up to 8 elements & bytestrings
  * [!1057](https://gitlab.com/morley-framework/morley/-/merge_requests/1057)
    Test `Show` and `RenderDoc` instances of `Annotation t`, `AnnotationSet`, `Notes t`, `InstrAbstract op`
  * [!997](https://gitlab.com/morley-framework/morley/-/merge_requests/997)
    Check necessity in initial `cast` automatically in Lorentz contracts
  * [!1044](https://gitlab.com/morley-framework/morley/-/merge_requests/1044)
    Fix `getRunMode` and `whenEmulated`
    + `getRunMode` is replaced by `ifEmulation` helper.
    + A new helper `whenNetwork` is added.
    + One caveat is that functions passed to `ifEmulation` are universally quantified over the outer monad, so if additional constraints are required beyond `MonadCleveland` or `MonadEmulated`, those constraints have to go on the base monad, e.g. `(MonadCleveland caps m, MonadFail (ClevelandBaseMonad caps)) => m ()`.
  ifEmulation.
  * [!1043](https://gitlab.com/morley-framework/morley/-/merge_requests/1043)
    Extract actual + expected pattern into a datatype and show diff in type mismatch
  * [!1037](https://gitlab.com/morley-framework/morley/-/merge_requests/1037)
    Add synonyms for `SomeConstrainedValue`
    + Reimplement `SomeConstant`, `SomeValue`, `SomeStorage` via `SomeConstrainedValue`.

  0.1.0
  =====
  Initial release extracted from the [morley](https://hackage.haskell.org/package/morley)
  and [lorentz](https://hackage.haskell.org/package/lorentz) packages.
  Tezos testing framework for contract developed with Michelson, Morley or Lorentz.
basic-deps:
  exceptions: -any
  fmt: -any
  either: -any
  bytestring: -any
  o-clock: -any
  MonadRandom: -any
  morley-prelude: -any
  time: -any
  tasty-hedgehog: -any
  hspec: -any
  text: -any
  morley: -any
  with-utf8: -any
  safe-exceptions: -any
  servant-client-core: -any
  criterion: -any
  hedgehog: '>=1.0.3'
  constraints: '>=0.11'
  base-noprelude: '>=4.7 && <5'
  data-default: -any
  HUnit: -any
  tagged: -any
  containers: -any
  singletons: -any
  morley-client: -any
  lorentz: -any
  lens: -any
  cryptonite: -any
  mtl: -any
  hex-text: -any
  statistics: -any
  file-embed: -any
  optparse-applicative: -any
  tasty: '>=1.4'
  named: -any
  aeson: -any
  template-haskell: -any
  tasty-hunit-compat: -any
  hspec-expectations: -any
  tasty-ant-xml: -any
  directory: -any
all-versions:
- 0.1.0
- 0.1.1
author: Serokell, Tocqueville Group
latest: 0.1.1
description-type: markdown
description: |
  # Cleveland: A testing framework for Morley

  This package provides an eDSL for testing contracts written in Michelson, Morley or Lorentz.

  These tests can be run using the `Test.Cleveland` module:
  * on an emulated environment
  * on a real network (e.g. testnet).
    In addition to a testnet, one can also use a [local-chain](https://gitlab.com/morley-framework/local-chain)
    with short block periods in order to speed up testing process.

  This interface is documented in detail [here](https://gitlab.com/morley-framework/morley/-/blob/master/code/cleveland/testingEDSL.md).

  We also provide several Hedgehog generators for most of `morley`'s data types
  in the `Hedgehog.Gen.*` modules.
license-name: MIT
