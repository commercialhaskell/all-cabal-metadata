all-versions:
- '0.1'
- 0.1.1
- 0.1.2
- 0.1.5
author: Ketil Malde
basic-deps:
  QuickCheck: '>=0'
  base: '>=4 && <5'
  bio: '>=0.4'
  bytestring: '>=0'
  containers: '>=0'
  regex-compat: '>=0'
  simpleargs: '>=0.1'
changelog: ''
changelog-type: ''
description: "This contains the following tools:\n\nTo build these, you will need
  a Haskell compiler (the most likely\ncandidate begin GHC), and my bioinformatics
  library and the SimpleArgs\nmodule installed (Downloadable from: <http://malde.org/~ketil/biohaskell/>).\n\nfilter
  - remove unwanted sequences from a clustering\n         usage: filter seq.list <
  cluster.L > cluster2.L\n         cluster2.L will only contain sequence labels found
  in seq.list\n\nhist   - produce a histogram of cluster sizes from a \"label\"-formatted\n
  \        clustering.\n\nclusc  - compare clusterings, calculating numerous pair-based
  and\n         entropy based indices.\n\nxcerpt - given a file containing a list
  of sequence labels (e.g. a\n         \"label\" formatted clustering), extract matching
  sequences\n         from a FASTA file.  Like \"agrep -d '^>'\" without the bugs.\n\n
  \        Usage: xcerpt list.txt fasta.seq\n         creates \"fasta.seq.match\"
  and \"fasta.seq.rest\"\n\nadd_single - add singletons to a clustering.\n        Usage:
  add_single all.L clustering.L\n        creates clustering.L_s listing all sequences
  in all.L but not in\n        clustering.L, one per line.\n\nace2contigs - parse
  an ACE assembly file, and output the contigs in a\n        FASTA file (named by
  tacking on .fasta to the ACE file name),\n        and the corresponding quality
  information (.qual).\n\nace2fasta - parse an ACE assembly, and output each assembly
  in a separate\n        FASTA formatted file, with the necessary gaps inserted to
  align the\n        sequences (suitable for import into e.g. Seaview)\n\nace2clusters
  - parse an ACE assembly, and output clusters composed of the\n \tsequences used
  for each contig.  The format is similar to TGICL's, \n\twith cluster output as one
  line consisting of a '>' and the contig name,\n\tand the next line containing the
  names of the sequences that comprise\n\tthe cluster.\n\nclusterlibs - given a table
  of regular expressions and library names,\n        along with a clustering (TGICL-format),
  output a table of clusters\n        with the library name prepended to the sequences.\n"
description-type: text
hash: 3cc6da0cca354c986172ad076003f61a1f60e4041af97391c6883248f530ca53
homepage: http://malde.org/~ketil/
latest: 0.1.5
license-name: LicenseRef-GPL
maintainer: Ketil Malde <ketil@malde.org>
synopsis: Tools for manipulating sequence clusters
test-bench-deps: {}
