all-versions:
- 0.1.0
author: uecmma
basic-deps:
  base: '>=4.7 && <5'
  either: '>=0'
  exceptions: '>=0.8.0.2'
  optparse-applicative: '>=0.12 && <0.14'
  transformers: '>=0.3.0.0 && <0.6'
changelog: ''
changelog-type: ''
description: |
  # CLI Builder

  This packages contains builders to make cli application easily based `optparse-applicative`.

  ## Getting Started

  Here is a simple example:

  ```haskell
  {-# LANGUAGE RecordWildCards #-}

  import System.CLI.Builder

  data Options = Options
    { isSampleOption :: Bool
    } deriving (Eq, Show)

  optionsParser :: OptionParser Options
  optionsParser = Options
    <$> switch (long "sample" <> help "Sample switch")

  cliInfo :: CLIInfo
  cliInfo = baseCLIInfo "Simple CLI" "Example for simple CLI"

  run :: Options -> IO ()
  run Options{..} = do
    putStrLn "Sample application"
    putStrLn $ "Is sample: " ++ show isSampleOption

  main :: IO ()
  main = buildSimpleCLI cliInfo optionsParser run
  ```

  This action is such as:

  ```bash
  $ sampleApp
  Sample application
  Is sample: False
  $ sampleApp --sample
  Sample application
  Is sample: True
  $ sampleApp --help
  Simple CLI

  Usage: <interactive> [--help]
    Example for simple CLI

  Available options:
    --help                   Show this help text
    --sample                 Sample switch
  ```

  For more examples, see [examples](examples).
description-type: markdown
hash: a1340027c964640a2ef70a4e94bcb1d6a523b3b3e9af5d080a3afc3352af68ee
homepage: https://github.com/uecmma/haskell-library-collections/tree/master/cli-builder
latest: 0.1.0
license-name: MIT
maintainer: developer@mma.club.uec.ac.jp
synopsis: Simple project template from stack
test-bench-deps:
  QuickCheck: '>=0'
  base: '>=0'
  cli-builder: '>=0'
  doctest: '>=0'
  filemanip: '>=0'
  hspec: '>=0'
