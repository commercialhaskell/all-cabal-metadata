homepage: https://github.com/snoyberg/mono-traversable#readme
changelog-type: markdown
hash: 43d00adaf19d33f55b3a0d2a5e1f52658cfac6cbb4ce0fee703112d7b3dcc2fd
test-bench-deps:
  base: '>=4.13 && <5'
  unordered-containers: -any
  hspec: '>=1.3'
  containers: -any
  classy-prelude: -any
  transformers: -any
  QuickCheck: -any
maintainer: michael@snoyman.com
synopsis: A typeclass-based Prelude.
changelog: |
  # ChangeLog for classy-prelude

  ## 1.5.0.2
  * Fix building with time >= 1.10 [#207](https://github.com/snoyberg/mono-traversable/pull/207).

  ## 1.5.0.1

  * Export a compatiblity shim for `parseTime` as it has been removed in `time-1.10`.
    See <https://hackage.haskell.org/package/time-1.12/changelog>

  ## 1.5.0

  * Removed `alwaysSTM` and `alwaysSucceedsSTM`. See
    <https://github.com/ghc-proposals/ghc-proposals/pull/77>

  ## 1.4.0

  * Switch to `MonadUnliftIO`

  ## 1.3.1

  * Add terminal IO functions

  ## 1.3.0

  * Tracing functions leave warnings when used

  ## 1.2.0.1

  * Use `HasCallStack` in `undefined`

  ## 1.2.0

  * Don't generalize I/O functions to `IOData`, instead specialize to
    `ByteString`. See:
    http://www.snoyman.com/blog/2016/12/beware-of-readfile#real-world-failures

  ## 1.0.2

  * Export `parseTimeM` for `time >= 1.5`

  ## 1.0.1

  * Add the `say` package reexports
  * Add the `stm-chans` package reexports

  ## 1.0.0.2

  * Allow basic-prelude 0.6

  ## 1.0.0.1

  * Support for safe-exceptions-0.1.4.0

  ## 1.0.0

  * Support for mono-traversable-1.0.0
  * Switch to safe-exceptions
  * Add monad-unlift and lifted-async

  ## 0.12.8

  * Add (<&&>),(<||>) [#125](https://github.com/snoyberg/classy-prelude/pull/125)

  ## 0.12.7

  * Concurrency: reexport `Control.Concurrent.Lifted` and provide `yieldThread`

  ## 0.12.6

  * Regeneralize intercalate [#119](https://github.com/snoyberg/classy-prelude/pull/119)
  * Add missing exports for `traverse_` and `for_`
  * Generalize `mapM_` and `forM_` for GHC 7.10

  ## 0.12.5.1

  * Support for QuickCheck 2.8.2

  ## 0.12.5

  * Expose `Alternative` and `optional`

  ## 0.12.4

  * Expose `traverse_` and `for_`

  ## 0.12.3

  * mono-traversable-0.9.3 support

  ## 0.12.2

  add `errorM`, `terrorM`, and `terror`

  ## 0.12.0

  * Drop system-filepath

  ## 0.11.1.1

  * Compatibility with time >= 1.5 [#100](https://github.com/snoyberg/classy-prelude/pull/100)

  ## 0.11.1

  * Fix deprecation warnings for `elem`

  ## 0.11.0

  * Upgrade to mutable-containers 0.3
  * Include dlist support

  ## 0.10.5

  * Export `Data.Mutable`

  ## 0.10.4

  * Expose all of Data.Functor

  ## 0.10.3

  * Expose `liftA` functions and `<**>` [#94](https://github.com/snoyberg/classy-prelude/pull/94)

  ## 0.10.2

  * Provide `foldMap` and `fold` as synonyms for `concatMap` and `concat`.
  * Switch to more general `Traversable`-based functions (`sequence_` in particular).
basic-deps:
  bytestring: -any
  unliftio: '>=0.2.1.0'
  stm: -any
  base: '>=4.13 && <5'
  time: '>=1.5'
  unordered-containers: -any
  text: -any
  basic-prelude: '>=0.7'
  async: -any
  mono-traversable-instances: -any
  dlist: '>=0.7'
  vector-instances: -any
  containers: '>=0.4.2'
  bifunctors: -any
  mutable-containers: ==0.3.*
  chunked-data: '>=0.3'
  ghc-prim: -any
  mtl: -any
  hashable: -any
  stm-chans: '>=3'
  transformers: -any
  deepseq: -any
  say: -any
  mono-traversable: '>=1.0'
  primitive: -any
  vector: -any
all-versions:
- 0.1.0.0
- 0.2.0.0
- 0.2.0.1
- 0.3.0
- 0.3.1
- 0.4.0
- 0.4.0.1
- 0.4.1
- 0.4.2
- 0.4.3
- 0.4.4
- 0.5.0
- 0.5.1
- 0.5.2
- 0.5.3
- 0.5.4
- 0.5.6
- 0.5.7
- 0.5.8
- 0.5.9
- 0.5.10
- 0.6.0
- 0.6.0.1
- 0.7.0
- 0.8.0
- 0.8.0.1
- 0.8.1
- 0.8.1.1
- 0.8.2
- 0.8.3
- 0.8.3.1
- 0.9.0
- 0.9.1
- 0.9.2
- 0.9.3
- 0.9.4
- 0.9.5
- 0.10.0
- 0.10.1
- 0.10.2
- 0.10.3
- 0.10.4
- 0.10.5
- 0.11.0
- 0.11.1
- 0.11.1.1
- 0.12.0
- 0.12.0.1
- 0.12.1
- 0.12.1.1
- 0.12.3
- 0.12.4
- 0.12.5
- 0.12.5.1
- 0.12.6
- 0.12.7
- 0.12.8
- 1.0.0
- 1.0.0.1
- 1.0.0.2
- 1.0.1
- 1.0.2
- 1.2.0
- 1.2.0.1
- 1.3.0
- 1.3.1
- 1.4.0
- 1.5.0
- 1.5.0.1
- 1.5.0.2
author: Michael Snoyman
latest: 1.5.0.2
description-type: markdown
description: |+
  classy-prelude
  ==============

  A better Prelude. Haskell's Prelude needs to maintain backwards compatibility and has many aspects that no longer represents best practice. The goals of classy-prelude are:

  * remove all partial functions
  * modernize data structures
    * generally use Text instead of String
    * encourage the use of appropriate data structures such as Vectors or HashMaps instead of always using lists and associated lists
  * reduce import lists and the need for qualified imports

  classy-prelude [should only be used by application developers](http://www.yesodweb.com/blog/2013/10/prelude-replacements-libraries). Library authors should consider using [mono-traversable](https://github.com/snoyberg/mono-traversable/blob/master/README.md), which classy-prelude builds upon.

  It is worth noting that classy-prelude [largely front-ran changes that the community made to the base Prelude in GHC 7.10](http://www.yesodweb.com/blog/2014/10/classy-base-prelude).

  mono-traversable
  ================

  Most of this functionality is provided by [mono-traversable](https://github.com/snoyberg/mono-traversable). Please read the README over there. classy-prelude gets rid of the `o` prefix from mono-traversable functions.


  Text
  ====

  Lots of things use `Text` instead of `String`.
  Note that `show` returns a `String`.
  To get back `Text`, use `tshow`.


  other functionality
  ===================

  * exceptions package
  * system-filepath convenience functions
  * whenM, unlessM
  * hashNub and ordNub (efficient nub implementations).


  Using classy-prelude
  ====================

  * use the NoImplicitPrelude extension (you can place this in your cabal file) and `import ClassyPrelude`
  * use [base-noprelude](https://github.com/hvr/base-noprelude) in your project and define a Prelude module that re-exports `ClassyPrelude`.


  Appendix
  ========

  * The [mono-traversable](https://github.com/snoyberg/mono-traversable) README.
  * [The transition to the modern design of classy-prelude](http://www.yesodweb.com/blog/2013/09/classy-mono).

  These blog posts contain some out-dated information but might be helpful
  * [So many preludes!](http://www.yesodweb.com/blog/2013/01/so-many-preludes) (January 2013)
  * [ClassyPrelude: The good, the bad, and the ugly](http://www.yesodweb.com/blog/2012/08/classy-prelude-good-bad-ugly) (August 2012)



license-name: MIT
