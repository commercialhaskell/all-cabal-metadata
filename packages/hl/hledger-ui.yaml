homepage: http://hledger.org
changelog-type: markdown
hash: 6e59fbd4523cd37c6f8131927959525f112f851720132b431c577aeb6ef979e0
test-bench-deps: {}
maintainer: Simon Michael <simon@joyful.com>
synopsis: Curses-style terminal interface for the hledger accounting system
changelog: "<!--\n       _ \n _   _(_)\n| | | | |\n| |_| | |\n \\__,_|_|\n         \n-->\nUser-visible
  changes in hledger-ui.\nSee also the hledger changelog.\n\n# 1.27 2022-09-01\n\nImprovements\n\n-
  At --debug=2 and up, log debug output to ./debug.log.\n\n- Use/require brick 1.0+.
  (#1889)\n\n- Use hledger 1.27\n\n# 1.26.1 2022-07-11\n\n- support doclayout 0.4,
  brick 0.72+\n\n- require safe 0.3.19+ to avoid deprecation warning\n\n# 1.26 2022-06-04\n\n-
  Uses hledger 1.26.\n\n# 1.25 2022-03-04\n\n- Uses hledger 1.25.\n\n# 1.24.1 2021-12-10\n\nFixes\n\n-
  An extra \"root\" account is no longer shown (a regression in 1.24).\n  (#1782)\n\n-
  Declared accounts are now filtered correctly by a not:ACCT query.\n  (#1783)\n\n-
  More reliable --version output, with commit date and without patch level.\n\n# 1.24
  2021-12-01\n\nFeatures\n\n- hledger-ui can now be controlled with mouse or touchpad.\n
  \ Click to enter things, click left margin or bottom blank area to return to\n  previous
  screen, and use mouse wheel / swipe to scroll.\n\n- In addition to accounts with
  postings, hledger-ui now also shows\n  declared accounts, even if they are empty
  (just leaf accounts, not\n  parents). The idea is to show a useful list of accounts
  out of the\n  box, when all you have is a starter file with account declarations.\n\nImprovements\n\n-
  The `Z` key for toggling display of zeroes is now the easier lower-case `z`.\n\n-
  The `--watch` feature now has a convenient short flag, `-w`.\n\n- Drop the base-compat-batteries
  dependency. (Stephen Morgan)\n\n- Allow megaparsec 9.2\n\nFixes\n\n- When an invalid
  regular expression is entered at the `/` (filter) prompt,\n  we now display an error
  instead of silently ignoring it.\n  (#1394, Stephen Morgan)\n\n- Entering the register
  screen now always positions the selection mid-screen.\n  Previously it would be
  at bottom of screen on the first entry.\n\n- Report layout in the terminal is now
  robust with more kinds of wide\n  characters, such as emoji.\n  (#895, Stephen Morgan)\n
  \ \n  \n  \n\n\n# 1.23 2021-09-21\n\nImprovements\n\n- Require base >=4.11, prevent
  red squares on Hackage's build matrix.\n\nAPI changes\n\n- Lenses are now available
  for UIState etc., saving a lot of boilerplate. (Stephen Morgan)\n\n- Renamed:\n
  \ ```\n  version -> packageversion\n  versiondescription -> versionStringFor\n  UIOpts
  fields\n  ```\n\n# 1.22.2 2021-08-07\n\n- Use hledger 1.22.2.\n\n# 1.22.1 2021-08-02\n\nImprovements\n\n-
  Document watch mode and its limitations. (#1617, #911, #836)\n\n- Allow megaparsec
  9.1.\n\nFixes\n\n- Up/down keys work on the transaction screen again (broken since
  1.22). \n  (#1607, Stephen Morgan)\n\n- Fix a possible off-by-one bug with valuation
  date when using `V` key on\n  the transaction screen. (If it ever needs to use the
  journal's last day\n  as valuation date, use that day, not the day after.)\n\n#
  1.22 2021-07-03\n\nImprovements\n\n- Don't reset the `B`/`V` (cost, value) state
  when reloading with `g`\n  or `--watch`. (Stephen Morgan)\n\n- The accounts screen
  is a little smarter at allocating space to\n  columns. (Stephen Morgan)\n\n- Add
  support for the kakoune editor, and improve the invocations of\n  some other editors.
  (crocket)\n\n- The `--version` flag shows more detail (git tag/patchlevel/commit\n
  \ hash, platform/architecture). (Stephen Morgan)\n\n- GHC 9.0 is now officially
  supported, and GHC 8.0, 8.2, 8.4 are not;\n  building hledger now requires GHC 8.6
  or greater.\n\n- Added a now-required lower bound on containers. (#1514)\n\nFixes\n\n-
  Queries in the register screen work again (broken in 1.21). (#1523)\n  (Stephen
  Morgan)\n\n- Don't write to `./debug.log` when toggling value with `V`, or when\n
  \ reloading with `g` or `--watch` in the Transaction screen. (#1556)\n  (Simon Michael,
  Stephen Morgan)\n\n# 1.21 2021-03-10\n\n- Register screen: also show transactions
  below the depth limit, as in\n  1.19, keeping the register balance in agreement
  with the balance\n  shown on the accounts screen. This regressed in 1.20. (#1468)\n\n-
  Transaction screen: all decimal places are now shown. On the\n  accounts screen
  and register screen we round amounts according to\n  commodity display styles, but
  when you drill down to a transaction\n  you probably want to see the unrounded amounts.
  (Like print, #cf\n  931.)\n\n- New flags `--man` and `--info` open the man page
  or info manual.\n  (See hledger changelog)\n\n# 1.20.4 2021-01-29\n\n- ui: register:
  show all txns in/under an account at the depth limit (#1468).\n  In 1.20-1.20.3,
  the register screen had stopped showing transactions \n  in accounts below a depth
  limit. Now it properly shows all subaccount transactions,\n  even when there is
  a depth limit, ensuring that the register's final total \n  matches the balance
  shown on the account screen.\n\n# 1.20.3 2021-01-14\n\n- Use hledger 1.20.3.\n\n#
  1.20.2 2020-12-28\n\n- Fix loss of capitalisation in part of the manual. \n\n- Fix
  the info manual's node structure.\n\n- Use hledger 1.20.2.\n\n# 1.20.1 2020-12-15\n\n-
  Fix the F key (toggle future/forecast transactions), which in 1.20 \n  would only
  work twice. (#1411)\n\n- Fix loss of forecasted transactions when the journal was
  reloaded\n  while they were hidden. (#1204)\n\n# 1.20 2020-12-05\n\n- When entering
  a query with `/`, malformed queries/regular expressions\n  no longer cause the program
  to exit. (Stephen Morgan)\n\n- Eliding of multicommodity amounts now makes better
  use of available space. (Stephen Morgan)\n\n- `E` now parses the `HLEDGER_UI_EDITOR`
  or `EDITOR` environment variable\n  correctly on Windows (ignoring the file extension),
  so if you have that set\n  it should be better at opening your editor at the correct
  line.\n\n- `E` now supports positioning when `HLEDGER_UI_EDITOR` or `EDITOR` \n
  \ is VS Code (\"`code`\") (#1359)\n\n- hledger-ui now has a (human-powered) test
  suite.\n\n\n# 1.19.1 2020-09-07\n\n- Allow megaparsec 9\n\n# 1.19 2020-09-01\n\n-
  The --color/--colour=WHEN command line option, support for the\n  NO_COLOR environment
  variable, and smarter autodetection of colour\n  terminals have been added (#1296)\n\n-
  -t and -l command line flags have been added as short forms of\n  --tree and --flat
  (#1286)\n\n- Flat (AKA list) mode is now the default\n\n- t now toggles tree mode,
  while T sets the \"today\" period (#1286)\n\n- register: multicommodity amounts
  containing more than two\n  commodities are now elided\n\n- register: a transaction
  dated outside the report period now is not\n  shown even if it has postings dated
  inside the report period.\n\n- ESC now restores exactly the app's state at startup,
  which includes\n  clearing any report period limit (#1286)\n\n- DEL/BS no longer
  changes the tree/list mode\n\n- q now exits help before exiting the app (#1286)\n\n-
  The help dialog's layout is improved\n\n# 1.18.1 2020-06-21\n\n- Fix regression
  in 'F' (#1255) (Dmitry Astapov)\n\n# 1.18 2020-06-07\n\n- builds with hledger 1.18\n\n#
  1.17.1.1 2020-03-19\n\n- update bounds after some belated hledger-* version bumps\n\n#
  1.17.1 2020-03-19\n\n- fix a regression, empty register of depth-limited account
  (fix #1208)\n\n- require newer Decimal, math-functions libs to ensure consistent\n
  \ rounding behaviour, even when built with old GHCs/snapshots. \n  hledger uses
  banker's rounding (rounds to nearest even number, eg\n  0.5 displayed with zero
  decimal places is \"0\").\n\n# 1.17 2020-03-01\n\n- don't enable --auto by default\n\n-
  don't enable --forecast by default; drop the --future flag (#1193)\n\n  Previously,
  periodic transactions occurring today were always shown,\n  in both \"present\"
  and \"future\" modes.\n\n  Now, generation of periodic transactions and display
  of future\n  transactions (all kinds) are combined as \"forecast mode\", which can\n
  \ be enabled with --forecast and/or the F key.  The --future flag is\n  now a hidden
  alias for --forecast, and deprecated.\n\n# 1.16.2 2020-01-14\n\n- add support for
  megaparsec 8 (#1175)\n\n# 1.16.1 2019-12-03\n\n- use hledger 1.16.1, fixing GHC
  8.0/8.2 build\n\n# 1.16 2019-12-01\n\n- add support for GHC 8.8, base-compat 0.11
  (#1090)\n\n- drop support for GHC 7.10\n\n- the B and V keys toggle cost or value
  display (like the -B and -V\n  command line flags)\n\n# 1.15 2019-09-01\n\n- allow
  brick >=0.47\n\n- use hledger 1.15\n\n# 1.14.2 2019-03-20\n\n- support brick 0.47+
  as well, to get into stackage nightly.\n\n# 1.14.1 2019-03-20\n\n- require brick
  <0.47 to fix build (#995)\n\n- use hledger 1.14.2\n\n# 1.14 2019-03-01\n\n- use
  hledger 1.14\n\n# 1.13.1 (2019/02/02)\n\n- fix build issues with older brick/stack
  resolvers; require brick 0.23+\n\n# 1.13 (2019/02/01)\n\n- on posix systems, control-z
  suspends the program\n\n- control-l now works everywhere and redraws more reliably\n\n-
  the top status info is clearer\n\n- use hledger 1.13\n\n# 1.12.1 (2018/12/10)\n\n-
  \  avoid build issue with brick 0.44+ (#935)\n\n# 1.12 (2018/12/02)\n\n-   fix \"Any\"
  build error with GHC < 8.4\n\n-   error screen: always show error position properly
  (#904) (Mykola Orliuk)\n\n-   accounts screen: show correct balances when there's
  only periodic transactions\n\n-   drop the --status-toggles flag\n\n-   periodic
  transactions and transaction modifiers are always enabled.\n    Rule-based transactions
  and postings are always generated\n    (--forecast and --auto are always on).\n
  \   Experimental.\n\n-   escape key resets to flat mode.\n    Flat mode is the default
  at startup. Probably it should reset to tree\n    mode if --tree was used at startup.\n\n-
  \  tree mode tweaks: add --tree/-T/-F flags, make flat mode the default,\\\n    toggle
  tree mode with T, ensure a visible effect on register screen\n\n-   hide future
  txns by default, add --future flag, toggle with F.\n    You may have transactions
  dated later than today, perhaps piped from\n    print --forecast or recorded in
  the journal, which you don't want to\n    see except when forecasting.\n\n    By
  default, we now hide future transactions, showing \"today's balance\".\n    This
  can be toggled with the F key, which is easier than setting a\n    date query. --present
  and --future flags have been added to set the\n    initial mode.\n\n    (Experimental.
  Interactions with date queries have not been explored.)\n\n-   quick help tweaks;
  try to show most useful info first\n\n-   reorganise help dialog, fit content into
  80x25 again\n\n-   styling tweaks; cyan/blue -> white/yellow\n\n-   less noisy styling
  in horizontal borders (#838)\n\n-   register screen: positive amounts: green ->
  black\n    The green/red scheme helped distinguish the changes column from the\n
  \   black/red balance column, but the default green is hard to read on\n    the
  pale background in some terminals. Also the changes column is\n    non-bold now.\n\n-
  \  use hledger 1.12\n\n# 1.11.1 (2018/10/06)\n\n-   use hledger 1.11.1\n\n# 1.11
  (2018/9/30)\n\n-   use hledger 1.11\n\n# 1.10.1 (2018/7/3)\n\n-   restore support
  for fsnotify 0.2.1.2, as well as 0.3.x (#833)\n\n-   fix a vty version bound & possibly
  build failures with old vty (#494)\n\n# 1.10 (2018/6/30)\n\n-   the effect of --value,
  --forecast, and --anon flags is now preserved on reload (#753)\n\n-   edit-at-transaction-position
  is now also supported when $EDITOR is neovim\n\n-   support/require fsnotify 0.3.0.1+\n\n-
  \  use hledger-lib 1.10\n\n# 1.9.1 (2018/4/30)\n\n-   use hledger-lib 1.9.1\n\n#
  1.9 (2018/3/31)\n\n-   support ghc 8.4, latest deps\n\n-   when the system text
  encoding is UTF-8, ignore any UTF-8 BOM prefix\n    found when reading files\n\n-
  \  -E/--empty toggles zeroes at startup (with opposite default to cli)\n\n# 1.5
  (2017/12/31)\n\n-   fix help -> view manual (on posix platforms) #623\n\n-   support
  -V/--value, --forecast, --auto\n\n-   remove upper bounds on all but hledger* and
  base (experimental)\n\n# 1.4 (2017/9/30)\n\n-   a @FILE argument reads flags & args
  from FILE, one per line\n\n-   enable --pivot and --anon options, like hledger CLI
  (#474) (Jakub Zárybnický)\n\n-   accept -NUM as a shortcut for --depth NUM\n\n-
  \  deps: allow ansi-terminal 0.7\n\n-   deps: drop oldtime flag, require time 1.5+\n\n#
  1.3.1 (2017/8/25)\n\n-   allow megaparsec 6 (#594, Simon Michael, Hans-Peter Deifel)\n\n-
  \  allow megaparsec-6.1 (Hans-Peter Deifel)\n\n-   allow vty 5.17 (Felix Yan)\n\n-
  \  allow brick 0.24\n\n-   restore upper bounds on hledger packages\n\n# 1.3 (2017/6/30)\n\nThe
  register screen now shows transaction status marks.\n\nThe \"uncleared\" status,
  and associated UI flags and keys, have been\nrenamed to \"unmarked\" to remove ambiguity
  and confusion. This means\nthat we have dropped the `--uncleared` flag, and our
  `-U` flag now\nmatches only unmarked things and not pending ones. See the issue
  and\nlinked mail list discussion for more background. (#564)\n\nThe P key toggles
  pending mode, consistent with U (unmarked) and C\n(cleared). There is also a temporary
  --status-toggles flag for testing\nother toggle styles; see `hledger-ui -h`. (#564)\n\nThere
  is now less \"warping\" of selection when lists change:\n\n-   When the selected
  account disappears, eg when toggling zero\n    accounts, the selection moves to
  the alphabetically preceding item,\n    instead of the first one.\n\n-   When the
  selected transaction disappears, eg when toggling status\n    filters, the selection
  moves to the nearest transaction by date (and\n    if several have the same date,
  by journal order), instead of the\n    last one.\n\nIn the accounts and register
  screens, you can now scroll down further\nso that the last item need not always
  be shown at the bottom of the\nscreen. And we now try to show the selected item
  centered in the\nfollowing situations:\n\n-   after moving to the end with Page
  down/End\n-   after toggling filters (status, real, historical..)\n-   on pressing
  the control-l key (should force a screen redraw, also)\n-   on entering the register
  screen from the accounts screen (there's a\n    known problem with this: it doesn't
  work the first time).\n\n(Items near the top can't be centered, as we don't scroll
  higher than\nthe top of the list.)\n\nEmacs movement keys are now supported, as
  well as VI keys.\nhjkl and CTRL-bfnp should work wherever unmodified arrow keys
  work.\n\nIn the transaction screen, amounts are now better aligned, eg when\nthere
  are posting status marks or virtual postings.\n\nDeps: allow brick 0.19 (#575, Felix
  Yan, Simon Michael)\n\n# 1.2 (2017/3/31)\n\nFix a pattern match failure when pressing
  E on the transaction screen (fixes #508)\n\nAccounts with ? in name had empty registers
  (fixes #498) (Bryan Richter)\n\nAllow brick 0.16 (Joshua Chia) and brick 0.17/vty
  0.15 (Peter Simons)\n\nAllow megaparsec 5.2 (fixes #503)\n\nAllow text-zipper 0.10\n\n#
  1.1.1 (2017/1/20)\n\n-   allow brick 0.16 (Joshua Chia)\n\n-   drop obsolete --no-elide
  flag\n\n# 1.1 (2016/12/31)\n\n-   with --watch, the display updates automatically
  to show file or date changes\n\n    hledger-ui --watch will reload data when the
  journal file (or any included file) changes.\n    Also, when viewing a current standard
  period (ie this day/week/month/quarter/year),\n    the period will move as needed
  to track the current system date.\n\n-   the --change flag shows period changes
  at startup instead of historical ending balances\n\n-   the A key runs the hledger-iadd
  tool, if installed\n\n-   always reload when g is pressed\n\n    Previously it would
  check the modification time and reload only if\n    it looked newer than the last
  reload.\n\n-   mark hledger-ui as \"stable\"\n\n-   allow brick 0.15, vty 5.14,
  text-zipper 0.9\n\n# 1.0.4 (2016/11/2)\n\n-   allow brick 0.13\n\n# 1.0.3 (2016/10/31)\n\n-
  \  use brick 0.12\n\n# 1.0.2 (2016/10/27)\n\n-   use latest brick 0.11\n\n# 1.0.1
  (2016/10/27)\n\n-   allow megaparsec 5.0 or 5.1\n\n# 1.0 (2016/10/26)\n\n## accounts
  screen\n\n-   at depth 0, show accounts on one \"All\" line and show all transactions
  in the register\n\n-   0 now sets depth limit to 0 instead of clearing it\n\n-   always
  use --no-elide for a more regular accounts tree\n\n## register screen\n\n-   registers
  can now include/exclude subaccount transactions.\n\n    The register screen now
  includes subaccounts' transactions if the\n    accounts screen was in tree mode,
  or when showing an account\n    which was at the depth limit. Ie, it always shows
  the\n    transactions contributing to the balance displayed on the\n    accounts
  screen. As on the accounts screen, F toggles between\n    tree mode/subaccount txns
  included by default and flat\n    mode/subaccount txns excluded by default. (At
  least, it does when\n    it would make a difference.)\n\n-   register transactions
  are filtered by realness and status (#354).\n\n    Two fixes for the account transactions
  report when --real/--cleared/real:/status:\n    are in effect, affecting hledger-ui
  and hledger-web:\n\n    1.  exclude transactions which affect the current account
  via an excluded posting type.\n        Eg when --real is in effect, a transaction
  posting to the current account with only\n        virtual postings will not appear
  in the report.\n\n    2.  when showing historical balances, don't count excluded
  posting types in the\n        starting balance. Eg with --real, the starting balance
  will be the sum of only the\n        non-virtual prior postings.\n\n        This
  is complicated and there might be some ways to confuse it still, causing\n        wrongly
  included/excluded transactions or wrong historical balances/running totals\n        (transactions
  with both real and virtual postings to the current account, perhaps ?)\n\n-   show
  more accurate dates when postings have their own dates.\n\n    If postings to the
  register account matched by the register's\n    filter query have their own dates,
  we show the earliest of these\n    as the transaction date.\n\n## misc\n\n-   H
  toggles between showing \"historical\" or \"period\" balances (#392).\n\n    By
  default hledger-ui now shows historical balances, which\n    include transactions
  before the report start date (like hledger\n    balance --historical). Use the H
  key to toggle to \"period\" mode,\n    where balances start from 0 on the report
  start date.\n\n-   shift arrow keys allow quick period browsing\n\n    -   shift-down
  narrows to the next smaller standard period\n        (year/quarter/month/week/day),
  shift-up does the reverse\n    -   when narrowed to a standard period, shift-right/left
  moves to\n        the next/previous period\n    -   \\`t\\` sets the period to today.\n\n-
  \  a runs the add command\n\n-   E runs $HLEDGER_UI_EDITOR or $EDITOR or a default
  editor (vi) on the journal file.\n\n    When using emacs or vi, if a transaction
  is selected the cursor will be positioned at its journal entry.\n\n-   / key sets
  the filter query; BACKSPACE/DELETE clears it\n\n-   Z toggles display of zero items
  (like --empty), and they are shown by default.\n\n    -E/--empty is now the default
  for hledger-ui, so accounts with 0 balance\n    and transactions posting 0 change
  are shown by default. The Z key\n    toggles this, entering \"nonzero\" mode which
  hides zero items.\n\n-   R toggles inclusion of only real (non-virtual) postings\n\n-
  \  U toggles inclusion of only uncleared transactions/postings\n\n-   I toggles
  balance assertions checking, useful for troubleshooting\n\n-   vi-style movement
  keys are now supported (for help, you must now use ? not h) (#357)\n\n-   ESC cancels
  minibuffer/help or clears the filter query and jumps to top screen\n\n-   ENTER
  has been reserved for later use\n\n-   reloading now preserves any options and modes
  in effect\n\n-   reloading on the error screen now updates the message rather than
  entering a new error screen\n\n-   the help dialog is more detailed, includes the
  hledger-ui manual, and uses the full terminal width if needed\n\n-   the header/footer
  content is more efficient; historical/period and tree/flat modes are now indicated
  in the footer\n\n-   date: query args on the command line now affect the report
  period.\n\n    A date2: arg or --date2 flag might also affect it (untested).\n\n-
  \  hledger-ui now uses the quicker-building microlens\n\n0.27.3 (2016/1/12)\n\n-
  \  allow brick 0.4\n\n0.27.2 (2016/1/11)\n\n-   allow brick 0.3.x\n\n0.27.1 (2015/12/3)\n\n-
  \  allow lens 4.13\n-   make reloading work on the transaction screen\n\n0.27 (2015/10/30)\n\n-
  \  hledger-ui is a new curses-style UI, intended to be a standard part\n    of the
  hledger toolset for all users (except on native MS Windows,\n    where the vty lib
  is not yet supported).\n\n    The UI is quite simple, allowing just browsing of
  accounts and\n    transactions, but it has a number of improvements over the old\n
  \   hledger-vty, which it replaces:\n\n    -   adapts to screen size\n    -   handles
  wide characters\n    -   shows multi-commodity amounts on one line\n    -   manages
  cursor and scroll position better\n    -   allows depth adjustment\n    -   allows
  --flat toggle\n    -   allows --cleared toggle\n    -   allows journal reloading\n
  \   -   shows a more useful transaction register, like hledger-web\n    -   offers
  multiple color themes\n    -   includes some built-in help\n\n    hledger-ui is
  built with brick, a new higher-level UI library based\n    on vty, making it relatively
  easy to grow and maintain.\n"
basic-deps:
  microlens-platform: '>=0.2.3.1'
  hledger-lib: '>=1.27.1 && <1.28'
  doclayout: '>=0.3 && <0.5'
  extra: '>=1.6.3'
  unix: -any
  split: '>=0.1'
  hledger: '>=1.27.1 && <1.28'
  base: '>=4.14 && <4.17'
  time: '>=1.5'
  text: '>=1.2'
  megaparsec: '>=7.0.0 && <9.3'
  breakpoint: -any
  vty: '>=5.15'
  filepath: -any
  process: '>=1.2'
  async: -any
  data-default: -any
  text-zipper: '>=0.4'
  containers: '>=0.5.9'
  ansi-terminal: '>=0.9'
  mtl: '>=2.2.1'
  cmdargs: '>=0.8'
  transformers: -any
  fsnotify: '>=0.2.1.2 && <0.4'
  microlens: '>=0.4'
  brick: '>=1.0'
  safe: '>=0.3.19'
  vector: -any
  directory: -any
all-versions:
- '0.27'
- 0.27.1
- 0.27.2
- 0.27.3
- 0.27.4
- 0.27.5
- '1.0'
- 1.0.1
- 1.0.2
- 1.0.3
- 1.0.4
- 1.0.5
- '1.1'
- 1.1.1
- 1.1.2
- '1.2'
- '1.3'
- 1.3.1
- '1.4'
- '1.5'
- '1.9'
- 1.9.1
- '1.10'
- 1.10.1
- '1.11'
- 1.11.1
- '1.12'
- 1.12.1
- '1.13'
- 1.13.1
- '1.14'
- 1.14.1
- 1.14.2
- '1.15'
- '1.16'
- 1.16.1
- 1.16.2
- '1.17'
- 1.17.1
- 1.17.1.1
- '1.18'
- 1.18.1
- '1.19'
- 1.19.1
- '1.20'
- 1.20.1
- 1.20.2
- 1.20.3
- 1.20.4
- '1.21'
- '1.22'
- 1.22.1
- 1.22.2
- '1.23'
- '1.24'
- 1.24.1
- '1.25'
- '1.26'
- 1.26.1
- '1.27'
- 1.27.1
author: Simon Michael <simon@joyful.com>
latest: 1.27.1
description-type: markdown
description: |
  # hledger-ui

  A simple curses-style text user interface for the hledger accounting system.
  It can be a more convenient way to browse your accounts than the CLI.
  This package currently does not support Microsoft Windows, except in WSL.

  See also:
  the [project README](https://hledger.org/README.html)
  and [home page](https://hledger.org).
license-name: GPL-3.0-only
