all-versions:
- '0.1'
- '0.2'
- '0.3'
- '0.4'
- '0.5'
- 0.5.1
- '0.6'
- 0.6.1
- 0.7.0
- '0.8'
- '0.9'
- '0.10'
- '0.11'
- 0.11.1
- '0.12'
- 0.12.1
- '0.13'
- '0.14'
- '0.15'
- 0.15.1
- 0.15.2
- '0.16'
- 0.16.1
- '0.17'
- '0.18'
- 0.18.1
- 0.18.2
- '0.19'
- 0.19.1
- 0.19.2
- 0.19.3
- '0.20'
- 0.20.0.1
- '0.21'
- 0.21.1
- 0.21.2
- 0.21.3
- '0.22'
- 0.22.1
- 0.22.2
- '0.23'
- 0.23.1
- 0.23.2
- 0.23.3
- '0.24'
- 0.24.1
- '0.25'
- 0.25.1
- '0.26'
- '0.27'
- 0.27.1
- '1.0'
- 1.0.1
- '1.1'
- '1.2'
- '1.3'
- 1.3.1
- '1.4'
- '1.5'
- '1.9'
- 1.9.1
- '1.10'
- '1.11'
- 1.11.1
- '1.12'
- 1.12.1
- '1.13'
- 1.13.1
- 1.13.2
- '1.14'
- 1.14.1
- 1.14.2
- '1.15'
- 1.15.1
- 1.15.2
- '1.16'
- 1.16.1
- 1.16.2
- '1.17'
- 1.17.1
- 1.17.1.1
- '1.18'
- 1.18.1
- '1.19'
- 1.19.1
- '1.20'
- 1.20.1
- 1.20.2
- 1.20.3
- 1.20.4
- '1.21'
- '1.22'
- 1.22.1
- 1.22.2
- '1.23'
- '1.24'
- 1.24.1
- '1.25'
- '1.26'
- 1.26.1
- '1.27'
- 1.27.1
- '1.28'
- '1.29'
- 1.29.1
- 1.29.2
- '1.30'
- 1.30.1
- '1.31'
- '1.32'
- 1.32.1
- 1.32.2
- 1.32.3
- '1.33'
- 1.33.1
- '1.34'
- '1.40'
- '1.41'
- '1.42'
- 1.42.1
- 1.42.2
- '1.43'
- 1.43.1
- 1.43.2
- '1.50'
- 1.50.1
author: Simon Michael <simon@joyful.com>
basic-deps:
  Decimal: '>=0.5.1'
  Diff: '>=0.2'
  aeson: '>=1 && <2.3'
  ansi-terminal: '>=0.9'
  base: '>=4.18 && <4.22'
  bytestring: '>=0'
  cmdargs: '>=0.10'
  containers: '>=0.5.9'
  data-default: '>=0.5'
  directory: '>=0'
  extra: '>=1.7.11'
  filepath: '>=0'
  githash: '>=0.1.6.2'
  hashable: '>=1.2.4'
  haskeline: '>=0.6'
  hledger: '>=0'
  hledger-lib: '>=1.50.1 && <1.51'
  http-client: '>=0'
  http-types: '>=0'
  lucid: '>=0'
  math-functions: '>=0.3.3.0'
  megaparsec: '>=7.0.0 && <9.8'
  microlens: '>=0.4'
  modern-uri: '>=0.3'
  mtl: '>=2.2.1'
  process: '>=0'
  regex-tdfa: '>=0'
  req: '>=0'
  safe: '>=0.3.20'
  shakespeare: '>=2.0.2.2'
  split: '>=0.1'
  tabular: '>=0.2'
  tasty: '>=1.2.3'
  temporary: '>=0'
  text: '>=1.2.4.1'
  text-ansi: '>=0.2.1'
  time: '>=1.5'
  timeit: '>=0'
  transformers: '>=0'
  unordered-containers: '>=0'
  utf8-string: '>=0.3.5'
  utility-ht: '>=0.0.13'
  wizards: '>=1.0'
changelog: "<!--\n      _ _\n  ___| (_)\n / __| | |\n| (__| | |\n \\___|_|_|\n\nBreaking
  changes\n\nFixes\n\nFeatures\n\nImprovements\n\nDoc updates\n\nExamples\n\nScripts/addons\n\nAPI\n\n-->\n\nUser-visible
  changes in the hledger command line tool and library.\n\n\n# 1.50.1 2025-09-16\n\nFixes\n\n-
  Balance commands now show an empty report instead of an error when\n  no transactions
  are matched, fixing a regression in 1.50.\n  (Stephen Morgan, [#2452])\n\n- The
  `print` command's help no longer shows an unused --show-costs flag.\n  And the command-specific
  flags are now mostly ordered alphabetically.\n\n- Whitespace in the `setup` command's
  \"undeclared commodities\" output has been fixed.\n\nDoc updates\n\n- Text encoding\n-
  bin/README: paypal\\*, simplefin\\* usage examples, doc link\n\nAPI\n\n- Hledger.Cli.Utils:\n
  \ add withJournal alias for withJournalDo,\n  pivotByOpts -> maybePivot,\n  anonymiseByOpts
  -> maybeWarnAboutAnon,\n  stop exporting pivotByOpts, anonymiseByOpts\n\n- Hledger.UI.ErrorScreen:\n
  \ uiReloadJournal -> uiReload,\n  uiReloadJournalIfChanged -> uiReloadIfFileChanged\n\n\n#
  1.50 2025-09-03\n\n## Breaking changes\n\n- Transaction balancing is now done in
  a more robust way, using local precisions only (like Ledger) [#2402].\n  Until now,
  a transaction was required to balance using its commodities's global display precisions.\n
  \ Small imbalances were tolerated by configuring display precisions for the whole
  journal (with `commodity` directives).\n\n  Now, a transaction is required to balance
  using the precisions in its journal entry only.\n  This means each entry can use
  the precision it needs, and balancing precision and display precision are independent.\n
  \ (So eg, increasing the display precision with `-c` no longer breaks the journal.)\n\n
  \ In practice this requires journal entries to be more accurate, and you will probably
  need to fix some old entries.\n  There are three main ways to fix an entry:\n  -
  reduce the amounts' precision (use fewer decimal digits, so a lower balancing precision
  is inferred)\n  - make the amounts more accurate (use better decimal digits, so
  the amounts sum to zero more closely)\n  - or (easiest) add an amountless \"expenses:rounding\"
  posting (this is not a cheat, it's a more accurate record of what your bank/broker
  is doing).\n\n  You can also keep the old transaction-balancing behaviour with `--txn-balancing=old`,
  for now.\n  But updating your entries is recommended. \n\n  The old behaviour could
  allow small remainders to accumulate over time, \n  in accounts that often have
  an inexact posting amount or cost amount and are never reconciled -\n  typically
  equity, revenues, and expenses.\n  You can check for this in your old journals with
  a command like\n\n      hledger bal cur:\\\\$ -c '$1.000000000000' | grep -E '\\...0*[1-9]'\n\n
  \ (show $ account balances, with many decimals, which have a non-zero decimal in
  the 3rd place or beyond)\n  \n- Timeclock format has had various changes:\n  - Timeclock
  syntax and parsing is now more robust (when not using --old-timeclock):\n    - Semicolon
  always starts a comment (and timeclock account names may not include semicolons).\n
  \   - Trailing spaces are ignored.\n    - Clock-ins now require an account name.\n
  \   - Clock-outs now can have a comment and tags.\n    - Timeclock entries are processed
  in parse order.\n  - Some order-related bugs in 1.43 have been fixed.\n  - Concurrent/overlapping
  sessions are now fully supported, even if they have the same account name.\n  -
  The timeclock doc has been rewritten.\n  - The --old-timeclock hidden flag has been
  renamed, documented, and now also affects included files.\n  [#2141], [#2365], [#2400],
  [#2417]\n\n- The `import` command now shows info messages (such as the dry run \";
  would import ..\" message)\n  on stderr, not stdout.\n  Also the \"no new transactions\"
  output is more compact, showing file names not file paths;\n  and it no longer prints
  an extra newline.\n\n- Some edge cases in balance report behaviour were changed
  for internal consistency:\n  - --declared now treats parent accounts consistently.\n
  \ - --flat --empty now ensures that implied accounts with no postings are not displayed,\n
  \     but accounts with zero balance and actual postings are.\n  (Stephen Morgan,
  [#2360], [#2395])\n\n- hledger now requires at least GHC 9.6 (and base 4.18), to
  ease maintenance.\n\n## Fixes\n\n- Paging long output no longer gives an error when
  `LESS` is undefined and\n  `less` does not have mouse support (as on some FreeBSD
  systems).\n\n- The `all:` query now requires at least one posting to match.\n  (Previously,
  matching no postings at all was also considered a success.)\n\n- When using journal
  format's `include` directive, several kinds of\n  error (read failure, cyclic include..)
  could show an off-by-one line\n  number or excerpt, confusingly. This has been fixed.\n
  \ Also, attempting to include a rules file now gives a better error message.\n\n-
  In CSV `if` rules, match group references like `\\1` no longer get confused\n  by
  differing case.\n  (Jay Neubrand, [#2419])\n\n- `add`, `commodities`, and `diff`
  now support the --conf and -n/--no-conf flags,\n  like other commands.\n  [#2446]\n\n-
  On Windows machines, the `add` command now properly shows green prompts instead
  of ANSI codes.\n  [#2410]\n\n- Balance reports now properly show the historical
  balance even when the report period is empty.\n  [#2403]\n\n- Balance reports' csv
  output, and the `balance --budget` report, now respect the --summary-only flag.\n
  \ (Stephen Morgan, [#2411], [#2443])\n\n- The `demo` command no longer mentions
  `-- ASCIINEMAOPTS` in help (that longer works).\n  Also it shows a better error
  message when asciinema is not installed.\n\n- `hledger help -m TOPIC` or `hledger
  help -i TOPIC` now show the help for TOPIC, as intended.\n  [#2399]\n\n- Since hledger
  1.32.1, the `import` command, when importing multiple files at once,\n  would write
  an empty .latest file for data files with no new transactions\n  (causing all transactions
  in those data files to appear new on next import).\n  This is now fixed.\n  [#2444]\n\n##
  Features\n\n- CSV rules files can now run a shell command to clean the data:\n\n
  \     # read the latest foo*.csv file, and replace \"USD\" with \"$\"\n      source
  foo*.csv | sed -e 's/USD/$/g'\n\n  or to generate the data:\n\n      # fetch JSON
  from simplefin.org, then transform it to CSV\n      source | simplefinjson | simplefincsv\n\n
  \ Whenever hledger runs one of these commands, it will echo the command on stderr.\n\n-
  The `import` command can now automatically archive imported CSV data files,\n  saving
  a dated copy in a `data/` directory. This can be useful for troubleshooting,\n  or
  for regenerating entries later with improved rules.\n  To enable it, add `archive`
  to the rules file.\n\n  This and the previous feature can simplify file management
  and reduce the need for support scripts.\n\n## Improvements\n\n- In command line
  help, flag group headings have been simplified.\n  And the help for -f/--file, `add`,
  and `import` is now clearer.\n\n- When given both an unknown command and an unknown
  flag, hledger now gives\n  a clearer error message (about the command, not the flag).\n
  \ [#2388]\n\n- A long standing awkwardness with addon commands has been solved:\n
  \ you can now use addon options freely in a hledger command line;\n  you don't need
  to write a `--` argument first.\n  [#458]\n \n- In smart dates and period expressions,
  quarter syntax like `2025q1` or `Q2` is now fully supported.\n\n- In end-value reports
  where the end date is unspecified, market prices\n  in the future can no longer
  influence the report end date and valuation date.\n  (Market prices on or before
  today, still can.)\n  [#2445]\n\n- A `tag:` query with the `accounts` command now
  only matches account tags, not posting tags.\n  Eg, `hledger accounts tag:t` now
  lists only account a from this journal:\n\n      account a  ; t:\n\n      2025-01-01\n
  \         a          1\n          b         -1  ; t:\n\n- Journal format's `include`
  directive now has more robust and convenient glob patterns:\n  - `**` can match
  both directories and filenames\n  - `**` now automatically ignores anything under
  dotted directories, like .git/, foo/.secret/, etc.\n    (If you do want it to search
  dotted directories, \n    you can use the --old-glob flag for now to restore the
  old behaviour. See also Glob#49.)\n  - Glob patterns with wildcards now automatically
  exclude the current file.\n    Eg `include **.journal` will include all other .journal
  files in this directory and below.\n\n- `include`'s error messages and debug messages
  have been improved.\n  Eg, the including file paths are also shown.\n\n- Journal
  format's auto posting rules can now use `%account` to insert the account name\n
  \ from the matched posting.\n  (Stephen Morgan, [#1975], [#2412])\n\n- The `aregister`
  command no longer abbreviates account names\n  when producing `csv`, `html`, or
  `fods` output.\n  (savanto, [#1995], [#2416])\n\n- The `commodities`, `payees` and
  `tags` commands now have --used/--declared/--undeclared/--unused flags, like `accounts`.\n
  \ And there has been a general cleanup of options and help across these four commands.\n\n-
  The `setup` command's output has been improved.\n  Lack of a pager is now reported
  as info, not warning (there's no default pager on Windows).\n  Shell completions
  are ignored for now.\n\n## Docs\n\n- add: clarify that add is for journal format
  only\n- addon commands: edits, drop `--` argument from all examples [#458]\n- areg:
  clarification\n- bin: README updates\n- COMMANDS: mention general options\n- completions:
  README updates\n- config files: no longer experimental\n- csv: date-format: mention
  lack of support for local time formats [#1874]\n- csv: source, archive: rewrite,
  add examples\n- Depth: fix typo\n- github release docs: simplify install commands\n-
  import: use windows-compatible quotes in watchexec example\n- include directive:
  update docs; clarify effect, glob limitations\n- note fish LEDGER_FILE setup\n-
  options: mention that flag+value can't combine with other flags [#2059]\n- print:
  improve --location help\n- smart dates: fix typo\n\n## Examples\n\n- CSV rules for
  Eternl cryptocurrency wallet\n- VAT example\n\n## Scripts/addons\n\n- renamed paypaljson2csv
  to paypaljson\n- simplefinjson, simplefincsv: new helpers for downloading/converting
  data from simplefin.org bank aggregator\n\n\n# 1.43.2 2025-06-13\n\n- hledger no
  longer shows an error message or exits with error status\n  when its output is truncated
  in a piped command. (This broke in 1.43.) [#2405]\n\n- The `add` command's doc now
  describes how it interacts with balance assertions\n  and balance assignments. [#2406]\n\n-
  `aregister` now consistently rounds amounts to display precision again.\n  (This
  broke in 1.32.) [#2407]\n\n- Changelog, release notes: mention improved decoding
  errors [#73];\n  add missing issue numbers\n\n\n# 1.43.1 2025-06-04\n\nFixes\n\n-
  `cur:` in posting-based reports like `balance` and `register` once again\n  filters
  multicommodity amounts as it should. [#2396]\n- More error messages were made consistent,
  hiding call stack etc. [#2367]\n\nDocs\n\n- Query types: clarify that amt: filters
  postings [#2396]\n- More text encoding corrections/cleanups [#2394]\n\n\n# 1.43
  2025-06-01\n\n## Breaking changes\n\n- Timeclock format now supports multiple simultaneous
  clocked-in sessions.\n  A clockout entry can reference the account name of the clockin
  it is ending,\n  otherwise it will end the most recent clockin.\n\n  This is a potentially
  breaking change, because we previously ignored\n  the description on clockout entries.
  \ For now, you can restore the\n  old behaviour by adding the `--timeclock-old`
  flag.  This may be\n  removed later, so if you needed it, please let us know!\n
  \ (Michael Rees, [#2141])\n\n## Fixes\n\n- For a long time, hledger docs stated
  that hledger's input and output had to be UTF-8 encoded.\n  In fact this was wrong;
  hledger has always used the system locale's encoding for both.\n  Docs like [Install:
  Text encoding](install.md#text-encoding)\n  and       [hledger: Text encoding](hledger.md#text-encoding)\n
  \ have been updated.\n  [#2394]\n\n- Some boolean queries involving `amt:` or `cur:`
  did not match correctly; now they do.\n  (Simon Michael, Stephen Morgan, [#2371],
  [#2373], [#2387])\n\n- The `roi` command has fixed a bug with PnL attributed to
  the wrong period.\n  (Dmitry Astapov, [#2391])\n\n- CLI error messages now have
  consistent format independent of the GHC\n  version hledger was compiled with. [#2367]\n\n##
  Features\n\n- A new `setup` command checks your hledger installation and shows information\n
  \ useful for troubleshooting. It will do more in future.\n  For now, `setup` should
  be reliable and accurate;\n  please test it on all your machines and share the results
  with us.\n  Experimental.\n\n  When you run this command, hledger attempts one HTTP
  request, with a 10s timeout,\n  to hledger.org, to detect the current release version.\n\n-
  New `any:\"BOOLEANQUERY\"` and `all:\"BOOLEANQUERY\"` queries can be\n  used with
  transaction-matching commands like `print` and `import`.\n\n  Unlike `expr:\"BOOLEANQUERY\"`,
  where the parts of the boolean query\n  are allowed to match different postings
  in the transaction,\n  with `any:` and `all:` the entire boolean query must match
  a single posting.\n  `any:` matches the transaction if any posting is matched,\n
  \ `all:` matches the transaction if all postings are matched.\n\n- The `add` command
  now allows balance assertions to be added, after an amount.\n  Also, whenever you
  enter an amount, it now checks the journal's balance assertions\n  and will not
  allow adding an amount that would cause assertion failure\n  (unless you use the
  `-I/--ignore-assertions` flag).\n  (Michael Rees, [#2355], [#2356])\n\n- The hledger-print-location
  script, which shows transactions' file positions, \n  is now built in to `print`
  as the `--location` flag.\n  (Sam Salmahri, [#2368])\n\n## Improvements\n\n- Core
  data types are now more strict, which in some cases reduces memory and time usage
  by up to 15%.\n  (Stephen Morgan, [#2381], [#2385], [#2387])\n\n- Config files (and
  maybe timedot files) no longer require a final newline.\n\n- In journal format,
  `include` directives can now have same-line comments.\n\n- CSV `if` rules now produce
  more `--debug=2` output, useful for troubleshooting.\n\n- CSV debug output now displays
  records as the `if` matchers see them.\n  (Comma separated and with quotes and outer
  whitespace removed.)\n\n- A number of error messages have been updated to show a
  consistent format.\n  (reading a nonexistent data file,\n  reading an unsafe dotted
  file name on Windows,\n  demo not found,\n  demo asciinema error,\n  diff bad arguments,\n
  \ print --match with no match,\n  register --match with no match,\n  roi with no
  investment transactions).\n  [#2367]\n\n- When unicode/non-ascii text can't be decoded
  by the system locale's text encoding,\n  we now show a consistent informative error
  message explaining it. [#73]\n\n- Support GHC 9.12.\n\n## Docs\n\n- Account types:
  rewrite\n- Assertions and multiple files: edits\n- Balance assertions and multiple
  files\n- balance: edits\n- Beancount output: edits\n- check: edits\n- Config file:
  drop the s\n- CSV: clarify that CSV means delimiter-separated values, link to wikipedia
  DSV page\n- CSV:description field: fix link [hledger_site#133]\n- Fix broken hledger-iadd
  link\n- Fix various broken \"Commodity display style\" links (JB Rainsberger, Simon
  Michael, [hledger_site/#132])\n- How CSV rules are evaluated: clarify\n- Journal:
  cheatsheet edits\n- print: simplify [#2368]\n- Queries: discuss transaction vs posting
  queries; cleanups\n- Queries: fix the explanation of boolean queries and space-separated
  terms\n\n## Examples\n\n- examples/csv/nps.csv.sh updated (Pranesh Prakash)\n- examples/forecast-budget*
  -> examples/goal-budget*\n- examples/i18n/\\*.journal: top level account declarations
  in several languages.\n- examples/quickstart.journal: the quickstart journal from
  the home page\n\n## Scripts/addons\n\n- bin/balance-as-budget-multi.hs (Dmitry Astapov)\n-
  bin/bashrc: command alias updates\n- bin/hledger-sankeymatic\n\n## API\n\n- Hledger.Cli.Conf:
  make getConf total, add getConf'\n- Hledger.Cli.Version: add more version helpers,
  rename HledgerBinaryInfo\n\n\n# 1.42.2 2025-05-16\n\nFixes\n\n- The test command
  can pass options to tasty again (this broke in 1.42).\n  Also, any arguments before
  -- are now passed to tasty as test-selecting -p options.\n  [#2386]\n\n- Require
  extra >= 1.7.11, fixing the stack8.10.yaml build. (Thomas Miedema)\n\nDocs\n\n-
  CSV encoding: fix inaccurate list of encoding names. [#2354]\n- Fix broken links
  to \"Commodity display style\". (Simon Michael, J.B. Rainsberger [hledger_site#132])\n-
  Misc. edits/fixes: beancount output, commands list, balance command, hledger-iadd
  link, csv tutorial link\n\n\n# 1.42.1 2025-03-12\n\nFixes\n\n- Fix a regression
  in the parsing of single ampersands (&) in csv rules.\n  (Thomas Miedema, [#2352])\n\n-
  The run and repl commands no longer cache data wrongly when using the --forecast
  option.\n  (Dmitry Astapov, [#2345])\n\n- The run and repl commands no longer miss
  a caching opportunity when using --forecast with a period argument.\n  (Stephen
  Morgan)\n\nDocs\n\n- run, repl: doc fixes (Pranesh Prakash, Simon Michael)\n\n\n#
  1.42 2025-03-07\n\nFixes\n\n- hledger's default options for the `less` pager no
  longer include --use-color,\n  which caused older less versions (eg 551) to break.
  [#2335]\n\n- In balance --budget reports, costs no longer prevent display of percentages.
  [#2327]\n\n- In the balance command's HTML output, -H/--historical now suppresses
  the total heading.\n\n- print --help now shows the correct default for --round.
  [#2318]\n\n- close --infer-costs no longer implies the -x/--explicit flag. [#1826]\n\n-
  add: Account names provided on the command line are no longer ignored. [#2305]\n\n-
  bs/bse/cf/is no longer show the unsupported --budget option in their help. [#2302]\n\n-
  The print command now ignores --depth entirely. Previously, a depth\n  limit caused
  it to show only transactions referencing accounts as\n  deep or deeper than that.\n\n-
  Week periods beginning in the previous year are now shown correctly.\n  Eg the week
  beginning 2024-12-30 (which is week 1 of 2025 because the\n  thursday falls in 2025)
  was previously shown as 2024-W01, and is now shown as 2025-W01.\n  [#2304]\n\nFeatures\n\n-
  `run` and `repl` are new commands which run multiple commands\n  without re-parsing
  data files, so they run faster.\n  `run` runs a sequence of commands from files
  or command line arguments,\n  and `repl` provides an interactive prompt with readline-style
  history.\n  (Dmitry Astapov, Simon Michael, [#2323], [#2328])\n\n- `commands` is
  a new explicit command for showing the commands list; it's useful in the REPL.\n
  \ With --builtin, it shows only the builtin commands.\n\n- hledger can now read
  CSV/SSV/TSV data in encodings other than UTF8,\n  using the new `encoding` CSV rule.
  (Joschua Kesper,  [#2319])\n\n- `if` matchers in CSV rules can now be combined on
  the same line,\n  separated by `&&` (AND) or `&& !` (AND NOT).  This makes `if`
  tables more expressive.\n  Examples:\n\n      if %description amazon && %date 2025-02-22\n
  \         account2 expenses:books\n\n      if,account2\n      %description amazon
  && %date 2025-02-22, expenses:books\n\n  The next-line `&` operator also may now
  be written as `&&`, for consistency.\n  (Thomas Miedema, [#2333])\n\nImprovements\n\n-
  Terminal width is now detected more robustly, using the POSIX API.\n  This means
  that register commands will more reliably use the proper terminal width,\n  eg when
  $TERM or $COLUMNS do not have a correct value, and on Windows.\n  hledger no longer
  uses $COLUMNS.\n  (gesh, [#2332], [#2340])\n\n- Error messages (first line) in the
  terminal are now shown in red (and bold),\n  and warning messages are shown in yellow,\n
  \ when ANSI codes are supported and permitted.\n\n- --pivot can now also pivot on
  amount quantity (`amt`),\n  amount cost (`cost`), and/or commodity symbol (`comm`
  or `cur`).\n\n- The close command's --migrate flag has been renamed to `--clopen`.\n
  \ The start: tag has been renamed to `clopen:`,\n  and its default value now excludes
  the new file's extension.\n  And close --assign's tag has been renamed to `assign:`.\n\n-
  The print command now supports the --invert flag. [#2314]\n\n- The roi command is
  now faster:\n  it no longer checks every day with P directive,\n  and the \"one
  period per report interval\" case has been optimised.\n  (Dmitry Astapov)\n\n- Two
  more file extensions are now recognised as possible hledger addon\n  commands: `.osh`
  and `.ysh`.\n\nDocs\n\n- aregister: Drop an inconsistent newline from options help.\n-
  balance: improve --layout option help.\n- close: doc rewrites\n- shell completions:
  mention zsh; cleanups\n- cost/lot notations: clarify\n- cost, value reporting: edits\n-
  Directive effects: fix account types link [#126]\n- commodity styles: fix typo [hledger_site#123]\n-
  commodity directive: clarify\n- close: mention the balance assertions\n- pager:
  mention --pager=no\n- Aliases and account types: better troubleshooting command\n-
  Beancount output: mention limitations: P and balance assignments\n- Balance report
  output: drop outdated note about --tree and HTML [#1846]\n- new/updated: ACHIEVEMENTS,
  CREDITS, FINANCE, MOCKUPS, REGRESSIONS, RELEASING, Scripts\n- examples/csv: pooltool-rewards.csv.rule
  cleanup\n- examples: some sample hledger run scripts\n- examples: test files for
  CSV encoding [#2319]\n\nScripts/addons\n\n- hledger-balance-as-budget properly applies
  commodity styles now. (Dmitry Astapov)\n\n- hledger-git now runs pass-through git
  commands in the right repo.\n\n- hledger-git now checks for a git repo more robustly.
  (Lars Kellogg-Stedman)\n\n- hledger-jj is another easy CLI for keeping hledger files
  in version control,\n  using newer tech (jujutsu and oil shell's ysh).\n\n- hledger-script-example.hs
  has had some cleanup.\n\n\n# 1.41 2024-12-09\n\nBreaking changes\n\n- Accounts named
  \"equity:conversion\", \"equity:trading\", or \"equity:trade(s)\",\n  which are
  detected as type `V`/`Conversion`, will now revert to type `E`/`Equity` instead\n
  \ if any other account has been declared as type `V`/`Conversion`.\n\n- When built
  with ghc 9.10.1, hledger shows two extra newlines after any error message.\n\nFixes\n\n-
  A somewhat severe, though hopefully rare, valuation bug has been fixed.\n  In certain
  circumstances, values could be calculated inaccurately,\n  because of display-rounding
  occurring inappropriately during calculations. [#2254]\n\n  Specifically:\n  when
  there was no direct P price for the target commodity,\n  so that hledger had to
  convert via a chain of prices,\n  and if all of those price amounts had too few
  decimal places,\n  then the result could be inaccurate.\n  An example:\n\n      P
  2000-01-01 A   10.5 B\n      P 2000-01-01 B  100.5 C\n\n      2000-01-01\n          (a)
  \   100 A\n      \n      $ hledger-1.40 print -X C\n      2000-01-01\n          (a)
  \       105520 C   ; wrong\n\n      $ hledger-1.41 print -X C\n      2000-01-01\n
  \         (a)        105525 C   ; right\n \n- `bs`/`bse`/`cf`/`is`'s HTML output
  no longer includes excess heading cells,\n  and `bs`/`bse`'s HTML output no longer
  shows an inappropriate Total heading with `-T`.\n  (`balancesheet` does not support
  `-T`.)\n  (Henning Thielemann)\n\n- Balance commands' HTML, CSV and FODS output
  now show tree mode properly indented\n  (using no-break spaces).\n  (Henning Thielemann)\n\n-
  In the HTML output of `bs`/`bse`/`cf`/`is` reports, Net amounts in the Net row are
  now formatted like the others.\n  (Bas van Dijk)\n\n- In `bs`/`bse`/`cf`/`is` HTML
  output, some unnecessary TH cells have been fixed.\n  [#2225] (Henning Thielemann)\n\n-
  The `print` command now ignores a depth limit entirely.\n  Previously, a depth limit
  caused it to show only transactions referencing accounts as deep or deeper than
  that.\n\n- In the `roi` command, a division by zero error (when all assets were
  sold) has been fixed.\n  [#2281] (Dmitry Astapov) \n\n- In a multi-line comment
  generated by CSV rules, tags on all lines now work (ie, can be matched).\n  Posting
  dates in comments generated from CSV also now [work](https://hledger.org/hledger.html#comment-field).\n
  \ [#2241]\n\n- hledger's bash shell completions are now up to date with the latest
  CLI.\n  [#986]\n\n- When showing output with a pager, if `$PAGER` is set to something
  not found in PATH,\n  we now ignore it instead of raising an error.\n\n- `hledger
  --color=yes | less -R` now shows bold headings as you'd expect.\n\nFeatures\n\n-
  The `print`, `register` and `aregister` commands now support HTML and FODS output,\n
  \ and the `bs`/`bse`/`cf`/`is` commands now support FODS output.\n  This means all
  of the \"STANDARD REPORTS\" commands, and the `balance` command, now support text,
  HTML, CSV, TSV, or FODS output.\n  (Henning Thielemann)\n\n- When generating HTML
  output with the register or balance commands,\n  the `--base-url` option will add
  hyperlinks to hledger-web,\n  allowing you to view the detailed transactions if
  you have hledger-web running.\n  (Henning Thielemann)\n\n- Reports can now specify
  different display depths for certain accounts,\n  rather than showing all accounts
  with the same depth limit.\n  Multiple `--depth=ACCTREGEX=DEPTH` options (or `depth:ACCTREGEX=DEPTH`
  arguments can be used.\n  For example, this will clip all accounts matching \"assets\"
  to depth 3,\n  all accounts matching \"expenses\" to depth 2, and all other accounts
  to depth 1:\n  `--depth assets=3 --depth expenses=2 --depth 1`\n  (Stephen Morgan,
  #2292)\n\n- In unix-like environments, hledger now uses a pager (`$PAGER`, `less`,
  or `more`)\n  for all large terminal output, not just for help.\n  You can override
  this with the new `--pager` option.\n  The pager is expected to handle hledger's
  ANSI colour output (unless you disable that).\n  If `less` is used, it will be configured
  automatically,\n  or you can override this by setting options in a `HLEDGER_LESS`
  environment variable.\n\n- The `print` command's `beancount` output is now much
  more Beancount-compatible [#2295].\n  Other than using `--alias` to provide the
  top-level account names Beancount requires,\n  you should rarely have to do anything
  special to produce a journal that `bean-check` accepts.\n  hledger will automatically
  adjust problematic names, encode unsupported characters, and so on.\n  See [hledger:
  Beancount output](https://hledger.org/dev/hledger.html#beancount-output) for the
  full details.\n\n  This supersedes the `ledger2beancount` tool, and makes using
  Beancount tools,\n  especially Fava, practical for hledger users. In many cases
  this should just work:\n  ```\n  hledger [ALIASES] print -o tmp.beancount; fava
  tmp.beancount\n  ```\n\nImprovements\n\n- `if` blocks in CSV rules now allow `&
  !` (AND NOT) on the same line.\n\n- When reading `.latest` files, whitespace is
  now ignored, and any date parse failure\n  is reported with the file and line number.\n\n-
  In journal format, P directives now require a space after the first symbol,\n  preventing
  surprises like `P 2024-10-31 a0 1` parsed as `P 2024-10-31 a 01`.\n  [#2280]\n\n-
  `aregister` has a new `--heading=YN` option, for disabling the report heading. (Henning
  Thielemann)\n\n- `aregister` now supports the `--invert` and `--cumulative` flags,
  like the `register` command. (Henning Thielemann)\n\n- The balance commands' HTML
  and FODS output now shows table borders consistently.\n  (Henning Thielemann)\n\n-
  In the balance commands' HTML output, row headings now span multiple rows when appropriate,
  rather than being repeated.\n  (Henning Thielemann)\n\n- Balance commands now support
  `--transpose` when generating HTML output.\n  (Henning Thielemann)\n\n- The `balance`
  command's `--layout=tidy` now affects HTML and FODS output at least to some extent
  (not just CSV output).\n  And it always disables the totals row. (Henning Thielemann)\n\n-
  The `balance` command's FODS output now picks a report title based on the report
  mode:\n  \"Balance Report\", \"Multi-period Balance Report\", or \"Budget Report\".
  (Henning Thielemann)\n\n- `balance` and `aregister`'s HTML output will now use a
  hledger.css file if present, like `bs`/`bse`/`cf`/`is`.\n\n- `bs`/`bse`/`cf`/`is`
  now support the `--count` (postings count) report type, like `balance`.\n\n- The
  balance commands' options help has had some cleanup.\n\n- The error messages from
  `check accounts` and `check recentassertions` are now clearer.\n\n- The `check commodities`
  command now also checks commodities used in P directives. [#2280]\n\n- The `commodities`
  command now also list commodities mentioned in P directives. [#2280]\n\n- All of
  hledger's internal hidden (but searchable) tags can now be made visible \n  by `print
  --verbose-tags`,  which is useful for troubleshooting `--infer-equity`,\n  `--infer-costs`,
  and the detection of redundant costs and conversion postings.\n  Also,\n\n  - Some
  hidden tags have been renamed for clarity:\n    `_modified` is now `_modified-transaction`,\n
  \   `_cost-matched` is now `_cost-posting`,\n    `_conversion-matched` is now `_conversion-posting`.\n
  \ - The `generated-posting:` tag added by `--infer-equity` is now valueless.\n  -
  The `modified-transaction:` tag added by `--auto` now appears on its own line.\n\n-
  Using the `-NUM` shortcut (for `--depth NUM`) in a config file now works.\n\n- Setting
  the `--color` option in a config file now works\n  (except it does not affect `--debug`
  output, currently).\n\n- The `--color` option's suggested values are now `yes`/`y`,
  `no`/`n`, or `auto`/`a`.\n  `always` and `never` are no longer documented, though
  still supported.\n\n- More compact and informative `--debug=2` output during valuation.\n
  \ Market prices are now shown using one line each, the known prices\n  are listed,
  and the status of `--infer-market-prices` is shown.\n  [#2287]\n\n- More informative
  `--debug=7` output from CSV rules.\n\n- The hledger packages have a new `debug`
  build flag. Builds made with ghc 9.10+ and this flag\n  will show some kind of stack
  trace if the program exits with an error.\n  (These will improve in future ghc versions.)\n\n-
  Disabled the unused `ghcdebug` build flag and ghc-debug support, for now.\n\n- Allow
  megaparsec 9.7.\n\n- ghc 9.10 / base 4.20 are now supported.\n\nDocs\n\n- Windows:
  added tips for setting `LEDGER_FILE` (Amadeusz Wieczorek, hledger_site#119)\n- csv:
  if blocks: explain matchers and field names better [#2289]\n- import: rewrite; rename
  \"date skipping\" to \"overlap detection\"\n- import: added tips for first import\n-
  assertions: mention their behaviour with posting status\n- journal: rewrite the
  Tags section\n- pager: note that `help -p TOPIC` uses less; link to less FAQ\n-
  query types: updates, add headings, mention tag:'s infix matching\n- Regular expressions:
  note possible RTL/bidi limitation (?)\n- Special characters: rewrite, more precision,
  mention some Windows differences\n- Output formats: expand, document beancount and
  FODS output\n- Text output: expand/consolidate terminal topics\n- FODS output: describe
  the advantages over CSV (Henning Thielemann)\n- Debug output: note that the --debug
  option doesn't work in config files.\n- bal: improve --layout doc\n- bal: also mention
  hledger.css and text encoding in balance doc\n- html: note safari text encoding
  issue\n- timedot: mention the common journal+timedot file setup [#2238]\n- Install,
  manual: new shell completions doc. [#986]\n- Config files: rewrite [#2231]\n- examples/csv:
  an example of YNAB 4 data, and RTL text, with a workaround\n- examples: hledger2beancount.conf\n\nScripts/addons\n\n-
  bin/*: remove obsolete _FLAGS markers from --help\n- examples/csv/csv-hledger-1.py:
  a python-based CSV converter script\n\nAPI\n\n- Hledger.Utils.IO's ansi color helpers
  now respect the --color option.\n- Hledger.Utils.IO.rgb' now takes Float arguments
  instead of Word8.\n- Hledger.Cli.Commands.Balance: export budgetReportAs* functions,
  for use in scripts.\n  (Dmitry Astapov)\n\n\n# 1.40 2024-09-09\n\nFixes\n\n- Account
  tags (and type declarations) declared in multiple files are now combined correctly.
  [#2202]\n\n- Several kinds of report interval now choose a better start date:\n
  \ - `every Nth day of month from DATE` with periodic transactions [#2218]\n  - `every
  M/D from DATE`\n  - `every Nth WEEKDAY from DATE`\n\n- The balance commands' HTML
  output no longer repeats the \"Total\" and\n  \"Net\" headings when the totals row
  has multiple lines.\n  And the layout has been improved and made more consistent
  with the\n  text output.\n\n- The `--tldr` flag now also works with the `tealdeer`
  tldr client.\n  \n- `hledger check tags` no longer warns about the internal `_price-matched`
  tag\n  being undeclared (and that tag has been renamed to `_cost-matched`).\n  [#2247]\n\n-
  `hledger check accounts` no longer warns about the special `equity:conversion` account\n
  \ being undeclared (the default account used by `--infer-equity`).\n\nFeatures\n\n-
  You can now save command line options in a [config file](https://hledger.org/hledger.html#config-file),\n
  \ to be added to your hledger commands either on demand or automatically.\n  (This
  supersedes the older arguments files feature.)\n\n  This much-requested new feature
  has pros and cons, and is experimental;\n  your testing and feedback is welcome.\n
  \ It changes the nature of hledger somewhat, which I have marked by\n  giving this
  release a more memorable version number (1.40).\n\n- The balance commands can now
  output in FODS format, an XML spreadsheet\n  file format readable by LibreOffice.
  (Henning Thielemann)\n\n- The `register` report can now be sorted by date, account,
  amount,\n  absolute amount, description, or a combination of these. (Michael Rees,
  [#2211])\n\nImprovements\n\n- All the balance-like commands now support FODS output,
  not just `balance`.\n  (Henning Thielemann)\n\n- Config files can now also provide
  the command name.\n  If the first thing in a config file's general section is a
  non-flag argument,\n  that will be used as the command name argument,\n  taking
  precedence over any command line arguments.\n  This makes config files strictly
  more powerful than the older argument files.\n\n- Improved debug output for command
  line and config file processing.\n\n- The print command's beancount output is now
  better at producing Beancount-ready data,\n  converting hledger account names and
  commodity names to Beancount-compatible ones.\n\n- Command line processing has been
  overhauled and should be more robust\n  in certain cases, with tweaked error messages
  and debug output.\n  Command-specific flags can now optionally appear before the
  command name.\n  (Though writing them afterward is usually more readable.\n   Addon-specific
  flags must still come last, after `--`.)\n\n- The `--rules-file` option has been
  renamed to `--rules`.\n  The old spelling is still supported as a hidden option.\n\n-
  Weekly reports' week headings are now more compact, especially in\n  single-year
  balance reports. ([#2204], Victor Mihalache)\n\n- The `balance` command with no
  report interval, and also `balance --budget`,\n  now support html output. (Henning
  Thielemann)\n\n- In balance commands' html and csv output, \"Total:\" and \"Net:\"
  headings\n  are now capitalised consistently.\n\n- `bs`/`cf`/`is` reports now show
  the report interval in their title.\n\n- The balance commands' text output with
  the `--pretty` flag now shows\n  an outer table border and inter-column borders.\n\n-
  The `check recentassertions` error message is now more readable.\n\n- Timedot format
  now allows comment lines to be indented.\n\n- When running the `tldr-node-client`
  client, auto-update of the tldr\n  database is now suppressed.\n\n- When running
  a tldr client fails, the warning now mentions the required\n  `--render` flag. [#2201]\n\n-
  The error message for unsupported regular expressions like `(?:foo)` has\n  been
  improved.\n\n- `--debug` has moved to \"General help flags\", making it available
  in\n  more situations.\n\n- Some verbose debug output from command line processing
  has been demoted to level 2.\n\n- Parsing timedot files now gives debug output at
  level 9.\n\n- Allow doclayout 0.5.\n\nDocs\n\n- The hledger/hledger-ui/hledger-web
  manuals now list all command options as shown by `--help`.\n- Added an example config
  file, `hledger.conf.sample`.\n- The `diff` and `prices` commands' help layout has
  been improved.\n- `add`'s doc described the effect of `D` wrongly, now fixed.\n-
  Date adjustments: rewrites and corrections\n- Period headings: added\n- Input: clarify
  that multiple -f options are allowed\n- Scripts and add-ons: edits, list add-ons
  again\n- Timeclock: edits, fix `ti`/`to` scripts\n- Fixed \"hledger and Ledger\"
  links [hledger_site#112]\n- examples/csv: Monzo CSV rules added\n- examples/csv:
  Tiller CSV rules added\n- examples/csv: Nordea CSV rules added (Arto Jonsson)\n\nScripts/addons\n\n-
  `bin/bashrc` updates; add years, eachyear scripts\n- `bin/hledger-simplebal`: ignore
  config files\n- `bin/hledger-script-example`: explain shebang commands better\n-
  `bin/hledger-register-max`: update/fix\n\n\n\n# 1.34 2024-06-01\n\nBreaking changes\n\n-
  `check ordereddates` no longer supports `--date2`.\n  Also (not a breaking change):
  `--date2` and secondary dates are now officially\n  [deprecated](https://hledger.org/1.34/hledger.html#secondary-dates)
  in hledger,\n  though kept for compatibility.\n\nFeatures\n\n- You can now get a
  quick list of example command lines for hledger or\n  its most useful subcommands
  by adding the `--tldr` flag (or just\n  `--tl`).  For best appearance you should
  install the [`tldr`][tldr] client,\n  though it's not required.\n\n  These short
  \"tldr pages\" are a great counterbalance to verbose PTA docs.\n  You can also use
  `tldr` without hledger to view the latest versions, or translations:\\\n  `tldr
  hledger[-COMMAND]`.\n  Or you can [browse tldr pages online](https://tldr.inbrowser.app/search?query=hledger+).\n
  \ Consider contributing translations!\n  More tips at <https://github.com/simonmichael/hledger/tree/master/doc/tldr>.\n\n[tldr]:
  https://tldr.sh\n\nImprovements\n\n- The `hledger` commands list has been reorganised,\n
  \ with commands listed roughly in the order you'll need them.\n\n- The general flags
  descriptions in `--help` have been updated and grouped.\n\n- Correctness checks
  now run in a documented order.  `commodities` are\n  now checked before `accounts`,
  and `tags` before `recentassertions`.\n  When both `ordereddates` and `assertions`
  checks are enabled,\n  `ordereddates` now runs first, giving more useful error messages.\n\n-
  `-I`/`--ignore-assertions` is now overridden by `-s`/`--strict`\n  (or `check assertions`),
  enabling more flexible workflows.\n  Eg you can `alias hl=\"hledger -I\"` to delay
  balance assertions\n  checking until you add `-s` to commands.\n\n- `--color` and
  `--pretty` now also accept `y` or `n` as argument.\n\n- When built with the `ghcdebug`
  flag and started with `--debug=-1`,\n  hledger can be controlled by [ghc-debug]
  clients like\n  ghc-debug-brick or a ghc-debug query script, for analysing\n  memory/profile
  info.\n\n[ghc-debug]: https://gitlab.haskell.org/ghc/ghc-debug\n\nFixes\n\n- `hledger
  COMMAND --man` and `hledger help TOPIC --man` now properly scroll\n  the man page
  to the TOPIC or COMMAND heading.\n  The exact/prefix matching behaviour has been
  clarified in `help --help`.\n\n- In journal files, `include` directives with trailing
  whitespace are now parsed correctly.\n\n- The help command's help flags are now
  consistent with other commands\n  (and it has `--debug` as a hidden flag).\n\n-
  Build errors with GHC 8.10 have been fixed. [#2198]\n\nDocs\n\n- The tables of contents
  on hledger.org pages now just list top-level headings,\n  (and the hledger manual
  structure has been adjusted for this).\n  This makes the hledger manual on hledger.org
  more scannable and less scary.\n- add: drop lengthy transcript, add simpler example
  commands (from tldr)\n- Amount formatting: move down, it's not the best first topic\n-
  balance: mention the `--summary-only` flag\n- check: expand check descriptions\n-
  examples: CSV rules: vanguard, fidelity, paypal updates\n- Generating data: rewrite\n-
  JSON output: link to OpenAPI spec\n- manuals: synopsis, options cleanup/consistency\n-
  Options: correction, NO_COLOR does not override --color\n- PART 4: COMMANDS: reorganise
  into groups, like the CLI commands list.\n- Period expressions: mention last day
  of month adjusting [#2005]\n- Secondary dates: expand, and declare them deprecated.\n-
  Time periods cleanup, simplify markup\n- Unicode characters: mention UTF-8 on windows\n\nScripts/addons\n\n-
  Added `hledger-pricehist`, an alias for the `pricehist` market price\n  fetcher
  so that it can appear in hledger's commands list.\n\n[#2005]: https://github.com/simonmichael/hledger/issues/2005\n[#2198]:
  https://github.com/simonmichael/hledger/issues/2198\n\n\n# 1.33.1 2024-05-02\n\n-
  process >=1.6.19.0 seems not strictly needed and is no longer required,\n  improving
  installability.\n  [#2149]\n\n- `print` and `close` now show a trailing decimal
  mark on cost amounts also,\n  when needed to disambiguate a digit group mark.\n\n-
  The balance commands' HTML output now includes digit group marks when\n  appropriate
  (fixes a regression in 1.25).\n  [#2196]\n\n- The add command no longer shows ANSI
  escape codes in terminals that\n  don't support them.\n\n- Doc updates:\n  - import:
  Skipping -> Date skipping, discuss commodity styles more\n  - csv: Amount decimal
  places: expand, note import behaviour\n\n[#2149]: https://github.com/simonmichael/hledger/issues/2149\n[#2196]:
  https://github.com/simonmichael/hledger/issues/2196\n\n\n# 1.33 2024-04-18\n\n\nBreaking
  changes\n\n- `expr:` boolean queries, introduced in hledger 1.30 (2023),\n  no longer
  allow `date:` to be used within an `OR` expression,\n  avoiding unclear semantics
  which confuse our reports.\n  If you'd like to improve this, see #2178. [#2177]
  [#2178]\n\n- Some error messages (date parse errors, balance assertion failures)
  have changed,\n  which might affect error-parsing add-ons like flycheck-hledger.\n\n\n\nFixes\n\n-
  `add`, `import`, `web`:\n  On MS Windows, don't allow writing to files whose name
  ends with a period,\n  since it can cause data loss; raise an error instead.\n  I
  made this change in hledger 1.15 (2019), but it never worked; now it does.\n  [#1056]\n\n-
  `balance --budget`:\n  The budget report in tree mode was omitting parent accounts
  with no actual or goal amounts\n  and a single child, instead of showing them as
  a prefix of the child's name.\n  Now it always shows them, on a line of their own
  (a bit like `--no-elide`).\n  It's not a perfect fix, but the budget report code
  is twisty.\n  [#2071]\n\n- `check tags`:\n  The special `date` and `date2` tags,\n
  \ and the `modified` and `_modified` tags generated by `--auto`,\n  are now also
  implicitly declared.\n  [#2148], [#2119]\n\n- Regular expression match group references
  in CSV `if` rules,\n  added in hledger 1.32, did not work right when multiple if
  conditions matched a CSV record.\n  This is now fixed; match group references are
  now scoped to their local `if` block.\n  [#2158] (Jonathan Dowland)\n\n- `roi` now
  correctly interacts with `--value`.\n  [#2190] (Dmitry Astapov)\n\n- hledger now
  requires process-1.6.19.0+ to avoid any vulnerabilities on Windows from\n  [HSEC-2024-0003](https://haskell.github.io/security-advisories/advisory/HSEC-2024-0003.html).\n\n\n\nFeatures\n\n-
  `close` has had some enhancements for usability ([#2151]):\n\n  - It now excludes
  equity accounts by default; and always excludes the balancing account.\n\n  - It
  has new `--assert` and `--assign` modes, for generating transactions which\n    make
  balance assertions or balance assignments.\n    There is also a `--assertion-type`
  option for changing the assertion/assignment type.\n\n  - It adds a tag to generated
  transactions, named `start`, `assert` or `retain`\n    depending on the mode.\n\n
  \ - The `start` tag's value will be a guess of the new file's name,\n    inferred
  by incrementing a year number in the current file name.\n    Eg, `hledger close
  --migrate` on `2024.journal` will add the tag\n    `start:2025.journal` to both
  transactions.\n    Tags like this can be helpful when reading multiple files,\n
  \   for excluding closing and opening balances transactions\n    (eg with `not:tag:start=2025`).\n\n
  \ - You can set different tag values by writing the mode option with an argument.\n
  \   Eg: `hledger close --migrate=NEWFILENAME`.\n\n  - `close` now supports `--round`
  for controlling display of decimal places, like `print`.\n\n  - `examples/multi-year/`
  is examples/tutorial for managing multiple files with the `close` command.\n\n\n\nImprovements\n\n-
  `stats` has had some improvements:\n\n  - It now also shows some information about
  memory usage, when hledger is built or is running\n    with the GHC Run Time System
  available. (Try `hledger stats +RTS -T`.)\n\n  - The default output is now more
  private, hiding file paths and commodity symbols.\n    Those can be added by the
  new `-v/--verbose` flag.\n\n  - Output is now more compact and more likely to fit
  in 80-character lines.\n\n  - When generating multiple outputs with a report interval,
  reports are now\n    separated by an empty line.\n\n- Several more kinds of Unicode
  space are allowed for separating digit groups in numbers.\n  We now support (my
  guess of the ones that might show up in real world CSV files):\n  space,\n  no-break
  space,\n  en space,\n  em space,\n  punctuation space,\n  thin space,\n  narrow
  no-break space,\n  medium mathematical space.\n\n- Glob patterns in `$LEDGER_FILE`
  are now respected.\n  Eg, setting it to `*.journal'` or `2???.journal` now works
  as expected.\n\n- When hledger is reading a symbolically-linked journal file,\n
  \ relative paths in include directives are now evaluated\n  relative to the directory
  of the real linked file,\n  not the directory containing the symbolic link.\n\n-
  Date parse errors are now simpler and clearer.\n  They no longer try to repeat (a
  reconstruction of) the problem date,\n  since the actual problem date is already
  visible in the highlighted file excerpt.\n\n- Balance assertion error messages are
  clearer,\n  and show the difference between expected and actual balance again.\n
  \ With --debug=2 they also show costs.\n\n- `tsv:` and `ssv:` file name prefixes
  are now supported in addition to `csv:`.\n  They force the file to be read as a
  .tsv (tab separated values) or .ssv (semicolon-separated values) file.\n  [#2164]
  (Michael Rees)\n\n- In CSV rules files, commented lines are now allowed within \"if
  tables\". (Dmitry Astapov)\n\n- `balance --budget`'s CSV and TSV output now shows
  zeroes instead of nothing when there's no amount.\n\n- `bs`,`bse`,`cf`,`is`:\n  Report
  sections which are empty now show zero as their subtotal. (aragaer)\n\n- `print`
  and `close` add a trailing decimal mark when needed to disambiguate a single digit
  group mark.\n  They now also do this for balance assertion and balance assignment
  amounts.\n  [#2176]\n\n- hledger can now be built with GHC 9.8.\n\n- hledger now
  requires safe >=0.3.20.\n\n\n\nDocs\n\n- add version annotations for features added
  in 1.32 (hamzashezad)\n- add Text encoding section, mention UTF-8 BOM support [#2189]\n-
  journal: note that `payee` and `tag` directives can't have tags in comments, unlike
  `account`.\n- journal: clarify how auto postings work.\n- journal: list built-in
  special tag names\n- journal: description/payee/note: clarify\n- journal: amounts/commodities/numbers:
  cleanups\n- journal: move intro before cheatsheet\n- journal: transactions: explain
  transaction balancing [#2135]\n- journal: transactions: mention debits, credits
  and sign\n- journal: commodity directive: clarify & fix scope of effects [#2135]\n-
  journal: D directive: clarify scope [#2191]\n- journal: split Decimal marks, Digit
  group marks\n- journal: move complex commodity styles, lot notation topics later\n-
  journal: drop redundant/wrong Querying with cost or value section\n- journal: cheatsheet:
  cleanups\n- journal: assertions and ordering/commodities/subaccounts: cleanups\n-
  csv: matchers: clarify, mention !/& limitation [#2088]\n- csv: if tables: explain
  comments and order of application (Dmitry Astapov)\n- add: document the effect of
  D default commodity directive [#815]\n- balance: cleanups\n- balance: budget report:
  moved \"Budgets and subaccounts\" to the Cookbook.\n- bs,bse,cf,is: update sample
  output\n- bse: note requirements for checking the accounting equation\n- close:
  rewrite, give a better technique for excluding opening/closing balance txns [#2151]\n-
  import: rename \"deduplication\" to \"skipping\", and rewrite\n- examples: expand
  READMEs, clarify status for examples\n- examples: invoicing: cleanups, renames\n-
  examples: invoicing: pandoc-make-invoice: don't write to $LEDGER_FILE; remove the
  REMOVE THIS LINE line\n- examples: csv: daedalus-transactions: update for current
  daedalus [#2171]\n- examples: shared-finances/\n\n\n\nScripts/addons\n\n- hledger-bar,
  hledger-simplebal: shellcheck fixes, cleanups (Colin Dean)\n\n- hledger-bar: Fix
  an error when NO_COLOR is not defined [#2159].\n  Also, it's now more compliant
  with the no-color.org spec:\n\n    Command-line software which adds ANSI color to
  its output by default\n    should check for a NO_COLOR environment variable that,
  when present\n    and not an empty string (regardless of its value), prevents the\n
  \   addition of ANSI color.\n\n  so one can now temporarily override $NO_COLOR=1
  in the environment by\n  setting it empty: NO_COLOR= hledger ...\n\n- hledger-txnsbycat:
  added\n\n\n\nAPI\n\n- move readFileStrictly to hledger-lib:Hledger.Utils.IO\n\n\n\n[#815]:
  \ https://github.com/simonmichael/hledger/issues/815\n[#1056]: https://github.com/simonmichael/hledger/issues/1056\n[#2071]:
  https://github.com/simonmichael/hledger/issues/2071\n[#2088]: https://github.com/simonmichael/hledger/issues/2088\n[#2119]:
  https://github.com/simonmichael/hledger/issues/2119\n[#2135]: https://github.com/simonmichael/hledger/issues/2135\n[#2135]:
  https://github.com/simonmichael/hledger/issues/2135\n[#2148]: https://github.com/simonmichael/hledger/issues/2148\n[#2151]:
  https://github.com/simonmichael/hledger/issues/2151\n[#2151]: https://github.com/simonmichael/hledger/issues/2151\n[#2158]:
  https://github.com/simonmichael/hledger/issues/2158\n[#2159]: https://github.com/simonmichael/hledger/issues/2159\n[#2164]:
  https://github.com/simonmichael/hledger/issues/2164\n[#2171]: https://github.com/simonmichael/hledger/issues/2171\n[#2176]:
  https://github.com/simonmichael/hledger/issues/2176\n[#2177]: https://github.com/simonmichael/hledger/issues/2177\n[#2178]:
  https://github.com/simonmichael/hledger/issues/2178\n[#2189]: https://github.com/simonmichael/hledger/issues/2189\n[#2190]:
  https://github.com/simonmichael/hledger/issues/2190\n[#2191]: https://github.com/simonmichael/hledger/issues/2191\n\n\n#
  1.32.3 2024-01-28\n\nFixes\n\n- A performance slowdown since 1.29, especially noticeable
  with many\n  accounts and transactions, has been fixed. [#2153]\n\n- Balance assertions
  involving mixed-cost balances are checked correctly again\n  (a regression in 1.30).
  [#2072], [#2137], [#2150]\n\n- import --catchup works again (a regression in 1.32).
  [#2156]\n\n- --anon is now a deprecated hidden flag that raises an error,\n  but
  is still usable as --obfuscate (also hidden). [#2133]\n\n- Balance assertion error
  messages are clearer, and show the diff again.\n\n\n\n[#2156]: https://github.com/simonmichael/issue/2156\n\n\n\n#
  1.32.2 2023-12-31\n\nFixes\n\n- In CSV field assignments,  %FIELD interpolation
  and `\\n` can be used together again. [#2134]\n\n- In timedot data, numbers beginning
  with a decimal point are accepted again. [#2130]\n\n- In a `balance --budget` report,
  `--layout=tall` no longer hides commodity symbols.\n\n- Value reports seeing a pathological
  price chain with 1000 or more\n  steps now write their warning to the console, not
  a debug log file.\n\nImprovements\n\n- Allow megaparsec 9.6\n\nDocs\n\n- Updated:
  \n  Queries,\n  Periodic transactions,\n  Auto postings,\n  Assertions and costs,\n
  \ Budget report\n\n# 1.32.1 2023-12-07\n\n- Fixed: `import` with multiple files
  now updates .latest files correctly. (#2125)\n\n- Fixed: `print --round=hard` now
  properly pads/rounds amounts with inferred costs. (#2123)\n\n- CSV matcher syntax:
  mention that ! and & can't be used in the same line yet. (#2088)\n\n- Drop the \"a
  difference of ...\" line from balance assertion failure output.\n  I feel it made
  the message harder to read and isn't really necessary.\n\n- Declaring the empty
  payee name with `payee \"\"` now works,\n  to let `hledger check payees` accept
  payee-less transactions.\n  (#2119)\n\n- Built-in tags with special meaning like
  `type:` and `t:` are now implicitly declared,\n  so using type: in account declarations
  or generating t: with timedot letters \n  won't cause `hledger check tags` to fail.\n
  \ (#2119)\n\n# 1.32 2023-12-01\n\nBreaking changes\n\n- Display styles and display
  precision are now managed more carefully\n  during calculations and output, fixing
  a number of issues (#2111,\n  \"Precisiongeddon\").  In brief:\n\n  - Cost and value
  reports, such as `print -V`, now (1) consistently\n    apply commodity display styles,
  and (2) do not add or discard\n    decimal digits unnecessarily.  (#2105)\n  \n
  \ - When \"infinite decimals\" arise during calculations (eg in value\n    reports,
  or in `prices` or `roi` output), these are now shown\n    limited to 8 decimal digits
  rather than 255.\n  \n  - Non-print-like reports no longer add trailing decimal
  marks to\n    disambiguate digit group marks (this was an unintended regression\n
  \   in 1.31). (#2115)\n    \n  - We now document number formatting adjustments made
  in certain\n    reports and output formats (hledger manual > REPORTING CONCEPTS
  >\n    Amount formatting, parseability).\n\n\nFeatures\n\n- Timedot format supports
  a new letters syntax for easier tagged time logging.\n  (#2116)\n\n- `print` has
  a new `beancount` output format for exporting to Beancount.\n  This prints journal
  output more likely (though not guaranteed) to\n  be readable by Beancount.\n\n-
  In CSV rules, matchers using regular expressions can now interpolate\n  their matched
  texts into the values they assign to fields (field\n  assignment values can reference
  match groups).\n  (#2009) (Jonathan Dowland)\n  \n- In CSV rules, matchers can be
  negated by prepending `!`.\n  (#2088) (bobobo1618)\n\n- Multi-column balance reports
  (from `bal`, `bs`, `is` etc.) can use\n  the new `--summary-only` flag (`--summary`
  also works) to display\n  just the Total and Average columns (if enabled by `--row-total`
  and\n  `-A/--average`) and hide the rest.\n  (#1012) (Stephen Morgan)\n\n- All commands
  that suport csv output now also support `tsv`\n  (tab-separated values) output.
  The data is identical, but the fields\n  are separated by tab characters and there
  is no quoting or\n  escaping. Tab, carriage return, and newline characters in data
  are\n  converted to spaces (this should rarely if ever happen in practice).\n  (#869)
  (Peter Sagerson).\n\n\nImprovements\n\n- Journal format no longer fails to parse
  Ledger-style lot costs with spaces\n  after the `{`, improving Ledger compatibility.\n\n-
  `import` now does not update any .latest files until it has run\n  without error
  (no failing strict checks, no failure while writing\n  the journal file). This makes
  it more idempotent, so you can run it\n  again after fixing problems.\n\n- `print`
  now shows zeros with a commodity symbol and decimal digits\n  when possible, preserving
  more information.\n\n- `print` has a new option for controlling amount rounding
  (#2085):\n  \n  - `--round=none` - show amounts with original precisions (default;\n
  \   like 1.31; avoids implying less or more precision than was\n    recorded)\n\n
  \ - `--round=soft` - add/remove decimal zeros in non-cost amounts\n    (like 1.30
  but also affects balance assertion amounts)\n\n  - `--round=hard` - round non-cost
  amounts (can hide significant digits)\n\n  - `--round=all`  - round all amounts
  and costs\n\n  For the record:\n  `print` shows four kinds of amount: posting amounts,\n
  \ balance assertion amounts, and costs for each of those.\n  Past hledger versions
  styled and rounded these inconsistently.\n  Since 1.31 they are all styled, and
  since 1.32 they are rounded as follows:\n  \n  | hledger-1.32 print | amt  | cost
  | bal  | balcost |\n  |--------------------|------|------|------|---------|\n  |
  (default)          | none | none | none | none    |\n  | --round=soft       | soft
  | none | soft | none    |\n  | --round=hard       | hard | none | hard | none    |\n
  \ | --round=all        | hard | hard | hard | hard    |\n\n- The `prices` command
  has had a number of fixes and improvements (#2111):\n\n  - It now more accurately
  lists the prices that hledger would use\n    when calculating value reports (similar
  to what you'd see with\n    `hledger bal -V --debug=2`).\n    \n  - The --infer-reverse-prices
  flag was confusing, since we always\n    infer and use reverse prices; it has been
  renamed to `--show-reverse`.\n    \n  - `--show-reverse` and `--infer-market-prices`
  flags now combine properly.\n    \n  - `--show-reverse` now ignores zero prices
  rather than giving an error.\n    \n  - Price amounts are now shown styled.\n  \n
  \ - Price amounts are now shown with all their decimal digits; or with\n    8 decimal
  digits if they appear to be infinite decimals (which can\n    arise with reverse
  prices).\n    \n  - Filtering prices with `cur:` or `amt:` now works properly.\n
  \   \n\nFixes\n\n- `print` now styles balance assertion costs consistently, like
  other\n  amounts.\n\n- `import` now works with `-s/--strict`.\n  And more generally,
  when reading multiple input files, eg with\n  multiple `-f` options, strict checks
  are done only for the overall\n  combined journal (not for each individual file).\n
  \ (#2113)\n\n- `tag:` queries now work when reading CSV files. (#2114)\n\n- Using
  a `.json` or `.sql` file extension with `-o`/`--outputfile`\n  now properly selects
  those output formats.\n\n- Auto postings no longer break redundant equity/cost detection
  and\n  transaction balancing. (#2110)\n  \n- Amounts set by balance assignment now
  affect commodity styles again.\n  (#2091, a regression in 1.30)\n\n- Timedot quantities
  with units are parsed more accurately.\n  Eg a quantity like \"15m\" was evaluated
  as 0.249999999 not 0.25,\n  and since hledger 1.21, it was printed that way also.\n
  \ Now we round such quantities to two places during parsing to get\n  exact quarter-hour
  amounts. (#2096)\n\n- The `demo` command no longer triggers a JSON decode error
  in asciinema\n  2.3.0. It now also shows a better error message if asciinema fails\n
  \ (#2094).\n\n- Failing balance assertions with a cost now show correct markers
  in\n  the error message. (#2083)\n\n\nDocs\n\n- New:\n  \n  - Amount formatting,
  parseability\n  - Started new code docs for developers, based in the Hledger module's
  haddock\n\n- Updated:\n  \n  - aregister\n  - commodity directive\n  - Commodity
  display style\n  - if table\n  - Decimal marks, digit group marks\n  - Regular expressions\n
  \ - Timedot\n\n  \n# 1.31 2023-09-03\n\nFeatures\n\n- Multi-pivot: the --pivot option
  now accepts multiple arguments,\n  colon-delimited, to construct account names from
  multiple fields.\n  (#2050, Eric Mertens)\n\nImprovements\n\n- The `print` command
  now more closely replicates the original journal\n   amount styles, which is helpful
  when round-tripping / cleaning up\n   journal files:\n\n  - Amounts in conversion
  transactions could be displayed rounded to a\n    lower precision; this no longer
  happens.\n    (#2079)\n\n  - Amounts could be displayed with extra zeros after the
  decimal mark;\n    this no longer happens.\n\n  - Amounts could display with a different
  precision if the journal\n    included a timedot file; this no longer happens.\n\n
  \ - Costs in balance assertions were not displayed with standard\n    styles like
  other amounts; now they are.\n\n  - Zero amounts were always shown as just \"0\";
  now they are shown\n    with their original commodity symbol and style.  (And if
  an\n    inferred amount has multiple zeros in different commodities, a\n    posting
  is displayed for each of these.)\n  \n- `print` no longer displays numbers with
  a single digit group mark\n  and no decimal mark, which are ambiguous and hard to
  re-parse.  Now\n  if a number has digit group marks the decimal mark will always
  be\n  shown also.  Eg `1,000` (where the comma is a thousands separator)\n  is now
  shown as `1,000.`.\n\n- The check command's \n  `balancedwithautoconversion` and
  `balancednoautoconversion` checks\n  have been renamed to `autobalanced` and `balanced`.\n\n-
  `hledger check recentassertions` now reports failures at the first\n  posting that's
  more than 7 days later than the latest balance\n  assertion (rather than at the
  balance assertion).  This is the thing\n  actually triggering the error, and it
  is more likely to be visible\n  or at least closer when you are working at the end
  of a journal\n  file.\n\n  Also, the suggested sample balance assertion now uses
  the same\n  commodity symbol as in the failing posting (the first, if there are\n
  \ more than one); and, no longer includes a cleared mark.\n\n- The import command
  now shows the file path being imported to.\n\n- With --pivot, `desc` is now the
  preferred spelling for pivoting on\n  description.\n\n- The demo command now ignores
  an invalid journal file, like the other\n  HELP commands.\n\n- Debug output for
  equity conversion postings has been improved,\n  making troubleshooting easier.\n\n-
  Allow aeson 2.2, megaparsec 9.5.\n\nFixes\n\n- In journal files, valid multicommodity
  transactions where the\n  matching non-equity postings can't be auto-detected are
  no longer\n  considered an error (as they were in hledger 1.29 and 1.30).  Now,\n
  \ such transactions are accepted, and --infer-cost has no effect on\n  them. This
  is similar to the behaviour of --cost, --infer-equity,\n  and --infer-market-prices.
  \ (#2045)\n\n- In journal files, equity conversion postings are now detected more\n
  \ tolerantly, using the same precision as the conversion posting's\n  amount (#2041).
  Eg, the following transaction is now accepted:\n\n      2023-01-01\n          Assets
  \              -8401USD  @  2.495 GEL\n\t\t    ; ^ 209.60495 GEL, recognised as
  a match for the 209.60 below\n          Equity:Conversion     84.01 USD\n          Equity:Conversion
  \  -209.60 GEL\n          Assets               209.60 GEL\n\n- The roi command now
  reports TWR per period and overall TWR for\n  multi-period reports.\n  (#2068, Dmitry
  Astapov)\n\n- The commands list no longer shows bar when hledger-bar is not installed
  (#2065),\n  and had a few other cleanups.\n\n# 1.30.1 2023-06-02\n\nFixes\n\n- Add
  missing files to Hackage release, making it buildable.\n\nDocs\n\n- Replace note
  about repeated options.\n\n# 1.30 2023-06-01\n\nBreaking changes\n\n- The CSV reader
  now properly skips all empty lines, as specified by docs.\n  Previously, inner empty
  lines were not being skipped automatically.\n  You might need to adjust the `skip`
  count in some CSV rules files.\n  (#2024)\n\n- Timedot format now generates a single
  multi-posting transaction per\n  date line, and supports comments and tags on all
  lines.\n  (#1754)\n\n- Timeclock format now supports comments and tags.\n  Descriptions
  can no longer contain semicolons.\n  (#1220)\n\nFeatures\n\n- CSV rules files can
  now be read directly, as in\n  `hledger -f foo.csv.rules CMD`. By default this will
  read data\n  from foo.csv in the same directory.\n  \n- CSV rules files can use
  a new `source FILE` rule to specify the data file,\n  with some convenience features:\n\n
  \ - If the data file does not exist, it is treated as empty, not an\n    error.\n\n
  \ - If FILE is a relative path, it is relative to the rules file's\n    directory.
  If it is just a file name with no path, it is relative\n    to `~/Downloads/`.\n\n
  \ - If FILE is a glob pattern, the most recently modified matched file\n    is used.\n\n
  \ This helps remove some of the busywork of managing CSV downloads.\n  Most of your
  financial institutions's default CSV filenames are\n  different and can be recognised
  by a glob pattern.  So you can put a\n  rule like `source Checking1*.csv` in foo-checking.csv.rules,\n
  \ periodically download CSV from Foo's website accepting your browser's\n  defaults,
  and then run `hledger import checking.csv.rules` to import\n  any new transactions.
  The next time, if you have done no cleanup, your\n  browser will probably save it
  as something like Checking1-2.csv, and\n  hledger will still see that because of
  the * wild card. You can choose\n  whether to delete CSVs after import, or keep
  them for a while as\n  temporary backups, or archive them somewhere.\n  (Experimental)\n\n-
  The balance command has a new --count report type\n  which reports posting counts
  instead of amounts.\n\n- Full boolean queries, allowing arbitrary use of AND, OR,
  NOT\n  (case insensitive) and parentheses for grouping, are now supported.\n  For
  backward compatibility, these require an `expr:` prefix.\n  Existing queries work
  as before, and you can mix and match the\n  old and new styles if you like.\n  (Chris
  Lemaire)\n \n- demo: This new command plays brief asciinema screencasts explaining\n
  \ various features and use cases. We will add more of these over time.\n  (Experimental)\n\nImprovements\n\n-
  Add-on commands can now have `.js`, `.lua`, or `.php` file extensions.\n\n- Generated
  and modified transactions and postings have the same hidden\n  tags (beginning with
  underscore) as before, but no longer have visible\n  tags added by default. Use
  `--verbose-tags` if you want them added.\n\n- We now try harder to ensure `less`
  (and its `more` mode) show our\n  ANSI formatting properly in help output.\n  If
  you use some other $PAGER, you may have to configure it yourself\n  to show ANSI
  (or disable ANSI entirely, eg by setting NO_COLOR=1).\n  This is now documented
  in hledger manual > Paging.\n  (#2015)\n\n- The print command's `--match` mode has
  been refined.\n  Previously, similarity completely outweighed recency, so a\n  slightly-more-similar
  transaction would always be selected no matter\n  how old it was. Now similarity
  and recency are more balanced,\n  and it should produce the desired transaction
  more often.\n  There is also new debug output (at debug level 1) for troubleshooting.\n\n-
  Miscellaneous commands list updates.\n  Help has been added for all published add-on
  commands (like hledger-lots).\n\n- The help command's documentation now mentions
  an issue caused by\n  a too-old `info` program, as on mac.\n  (#1770)\n\nFixes\n\n-
  Unbalanced virtual postings with no amount always infer a zero amount.\n  This is
  fixing and clarifying the status quo; they always did this,\n  but print always
  showed them with no amount, even with -x, and\n  the behaviour was undocumented.\n\n-
  On windows systems with multiple drive letters, the commands list\n  could fail
  to show all installed add-ons.\n  (#2040)\n\n- Balancing a transaction with a balance
  assignment now properly respects costs.\n  (#2039)\n\n- The commands list no longer
  lists non-installed addons.\n  (#2034)\n\n- Since hledger 1.25, \"every Nth day
  of month\" period rules with N > 28 could\n  be calculated wrongly by a couple of
  days when given certain forecast start dates.\n  Eg `~ every 31st day of month`
  with `--forecast='2023-03-30..'`.\n  This is now fixed.\n  (#2032)\n\n- Postings
  are now processed in correct date order when inferring balance assignments.\n  (#2025)\n\n-
  Posting comment lines no longer disrupt the underline position in error messages.\n
  \ (#1927)\n\n- Debug output is now formatted to fit the terminal width.\n\nDocs\n\n-
  Miscellaneous manual cleanups.\n\n- Rewrite introductory sections,\n  Date adjustment,\n
  \ Directives,\n  Forecasting,\n  etc.\n\n- Add Paging section.\n\n- Remove archaic
  mentions of `setenv`.\n\nAPI\n\n- Renamed: Hledger.Cli.Commands: findCommand ->
  findBuiltinCommand\n\n# 1.29.2 2023-04-07\n\nBreaking changes\n\n- 1.29's cleanup
  of the `close` command has been continued.\n  Here are all the changes to `close`
  since hledger 1.28:\n\n  - The default behaviour is now to print only one transaction:
  a closing transaction.\n\n  - To print both closing and opening transactions as
  before,\n    use the new `--migrate` flag.\n\n  - The accounts closed by default
  are now just the ALE accounts\n    (accounts declared or inferred as type `Asset`,
  `Liability`, or `Equity`).\n    If you don't have account types configured, or\n\t
  \ to close some other set of accounts, provide query arguments that match them.\n
  \   To close all accounts as before, use a `.` argument to match them all.\n\n  -
  To print a retain earnings transaction for RX accounts (accounts\n    of type `Revenue`
  or `Expense`), use the new `--retain` flag.\n\n  - The `equity` command alias, removed
  in 1.29, has been restored.\n\n  - The `--open-acct` option, removed in 1.29, has
  been restored.\n\n  - The `--closing` and `--opening` flags have been renamed to
  `--close` and `--open`.\n    (`--close` had been removed in 1.29 and is now restored.)\n\n
  \ - The docs have been rewritten. Also the 1.29 release notes now mention\n    the
  breaking change.\n\n  - The command is marked experimental again.\n\n  (#2020)\n\nFixes\n\n-
  `type:` queries now \"see through\" account aliases and pivots,\n  as they did in
  hledger <1.27, and as `acct:` queries do.\n  (#2018)\n\n- The corruption in 1.29's
  info manual is fixed. (#2023)\n\n- The 1.29 release notes for periodic reports'/periodic
  transactions' start dates\n  have been improved. Also the hledger manual's \"Date
  adjustment\" section\n  has been corrected and clarified.\n\n\n# 1.29.1 2023-03-16\n\nImprovements\n\n-
  Hledger.Cli.Script now also exports\n\n       Control.Applicative\n       Control.Concurrent\n
  \      Data.Char\n       Data.Functor\n       System.IO\n       System.IO.Error\n\n
  \  and new string helpers\n\n       strip1Char\n       stripBy\n       strip1By\n\n-
  Allow building with GHC 9.6.1 (#2011)\n\nFixes\n\n- The stats report no longer displays
  \"Exact\" in front of dates. (#2012)\n\nDocs\n\n- remove duplicate in `hledger close`
  docs (Yehoshua Pesach Wallach)\n\n# 1.29 2023-03-11\n\nBreaking changes\n\n- Periodic
  reports will now start exactly at the start date you have specified,\n  rather than
  being adjusted to a natural period boundary; see below.\n\n- The `close` command's
  CLI and default behaviour was changed; see below\n  (and fixes in hledger 1.29.2+).\n\nFeatures\n\n-
  Periodic transactions and periodic reports can now start on any date.\n  Eg, `hledger
  reg -M -b 1/15` now starts exactly on jan 15th, and a periodic rule\n  like `~ monthly
  from 2023-01-15` now works as you'd expect instead of raising an error.\n  This
  also improves our ability to read Ledger files.\n  Inferred start/end dates, eg
  obtained from the journal instead of the command line,\n  are still automatically
  adjusted to period boundaries, as before.\n\n  Upgrade notes: in report commands
  which specify a start date, you might need to\n  adjust that date to see the same
  periods as before. Eg:\n  \n  - `-p 'weekly from 202304'` (equivalent to `-p 'weekly
  from 20230401'`)\n    now gives periods like `2023-04-01..2023-04-07`.\n    Change
  it to start on a monday (eg `-p 'weekly from 20230403`) to restore\n    simple week
  periods like `2023-04-03W14`.\n\n  - `-M -b 2023/1/15` now gives periods like `2023-01-15..2023-02-14
  \ 2023-02-15..2023-03-14`.\n    Change it to start on a first of month (eg `-M -b
  2023/1`) to restore\n    simple month periods like `Jan  Feb  Mar`.\n\n  (#1982)\n\n-
  You can now freely combine @/@@ notation and conversion postings\n  in a single
  transaction. This can help readability, and also allows\n  more flexibility when
  recording cost.  hledger will check that the\n  two notations are in agreement,
  and ignore the redundancy if they are.\n  (Conversion postings are postings to accounts
  with type `V`/`Conversion`\n  or name `equity:conversion`/`equity:trade`/`equity:trading`,\n
  \ or subaccounts of these. See also COST.)\n\n- In journal format there is now a
  `tag` directive for declaring tag names,\n  and the check command now has a `tags`
  check to enforce use of declared tag names.\n\nImprovements\n\n- hledger's commands
  list has been reorganised for clarity.\n  More add-on commands are now recognised
  and categorised,\n  and unrecognised add-on commands are listed in a more compact\n
  \ multi-column layout.\n  (Simon Michael, Michael Grünewald)\n\n- hledger's commands
  list and command line help now use ANSI (bold\n  headings) when supported.\n  \n-
  hledger's commands list and command line help now use a pager\n  (respecting $PAGER)
  for long output except on MS Windows.\n\n- hledger's `--version` output no longer
  shows `+` for dev builds made\n  in dirty repos (it was buggy).\n\n- The add command's
  Description completions now also include payee names\n  (declared with `payee` or
  recorded in transactions with `|`),\n  not just full descriptions.\n\n- aregister
  now supports HTML output.\n  (#1996) (Jonathan Dowland)\n\n- aregister now shows
  a \" (matching query)\" hint in report title \n  when extra query args (other than
  date: or depth:) are used,\n  to reduce confusion.\n\n- The `close` command's CLI
  and default behaviour were changed,\n  attempting to make it easier to understand
  and use.  Some of its\n  legacy flags and aliases were also dropped, without sufficient\n
  \ warning. For the full details, including subsequent cleanups,\n  see hledger 1.29.2's
  change notes.\n\n- register-match is now the `--match` mode of the register command.\n
  \ (This command was used by ledger-autosync at one point; if you still\n  need it,
  hopefully `register --match` works similarly.)\n\n- print-unique has been dropped,
  because it doesn't\n  support print's options, it disorders same-day transactions,
  I don't\n  know of any users or use cases, and it could easily be recreated as\n
  \ an addon script.\n\n- print's JSON output now also includes source positions for
  `--forecast` transactions.\n  (Chris Lemaire)\n\n- Journal format now allows the
  empty commodity symbol to be written\n  as `\"\"`, so it's now possible to declare
  market prices for it:\n  `P 2022-01-01 \"\" $100`.  This can be useful for timedot
  data.\n\n- Inferring costs from equity now happens after transaction balancing,\n
  \ not before.  As a result, `--infer-costs` now works in transactions\n  where an
  amount is left blank.\n\n- `account` declarations now reject parenthesised account
  names,\n  reducing confusion.\n  (Chris Lemaire)\n\n- Our journal reader now accepts
  more Ledger syntax, improving Ledger\n  file compatibility (#1962).  We now test
  our ability to at least\n  read the sample journals from Ledger's baseline functional
  tests,\n  and our success rate has improved from 80% to 90% since 1.28.\n  \n  -
  `since` is accepted as synonym of `from` in period expressions\n  - `apply year`
  and `year` are accepted as synonyms of `Y`\n  - `(lot notes)` in amounts and `((valuation
  expressions))` after amounts are now ignored\n  - directives \n    `A`, `assert`,
  `bucket`, `capture`, `check`, `define`,\n    `expr`, `eval`, `python`, `value`,\n
  \   `apply fixed`, `apply tag`,\n    `end apply fixed`, `end apply tag`, `end apply
  year`\n\tare now ignored\n  - subdirectives of `payee`, `tag`, and `commodity` (other
  than `format`) are now ignored\n  - `pop` directive is no longer supported\n\n-
  When reading CSV, we now check that assigned account names are valid (parseable).\n
  \ (#1978)\n\nFixes\n\n- aregister now handles an extra account query correctly.
  (#2007)\n\n- balance's `--help` now mentions `--layout=tidy`\n\n- Balance commands
  with `--layout=bare` now generate proper table\n  layout in HTML output.\n\n- register's
  `-w`/`--width` option no longer gives ugly parse error messages.\n\n- stats's `--help`
  no longer wrongly claims to support -O/--output-format.\n\n- Balance assignments
  with a cost now generate a correct balance assertion. (#1965)\n\n- The CSV reader
  now properly skips header lines before attempting to parse records. (#1967)\n\nScripts/addons\n\n-
  Scripts can now use Hledger.Cli.Script, a convenient new prelude which\n  helps
  reduce import boilerplate. It currently re-exports:\n\n\t  Control.Monad\n\t  Data.Either\n\t
  \ Data.List\n\t  Data.Maybe\n\t  Data.Ord\n\t  Data.Time\n\t  Text.Printf hiding
  (formatString)\n\t  Data.Text (Text, pack, unpack)\n\t  Safe hiding (at)\n\t  System.Directory\n\t
  \ System.Environment\n\t  System.Exit\n\t  System.FilePath\n\t  System.Process\n\t
  \ Hledger\n\t  Hledger.Cli\n\t  Hledger.Cli.Main (argsToCliOpts)\n\n  (Not much
  of Data.Text/Data.Text.IO because those need to be qualified.)\n\nDocs\n\n- chunk
  the hledger manual into parts, rename and rearrange sections for better structure/flow\n-
  add a cheatsheet demonstrating all the main journal features that I recommend\n-
  move a number of my not-so-recommended journal features into a less visible \"Other
  syntax\" section\n- add: payees/descriptions completion\n- areg: more advice on
  account-matching\n- bal: --budget: clarify use of print --forecast\n- bal: budget:
  compare with forecasting; add some tips\n- balance cleanups/reorder\n- check: adjacentconversionpostings
  was dropped\n- cli: balance: fix link to Budgeting page\n- cli: fix all links to
  Journal > Tags / Commands > tags\n- codes: improve example suggested by Rob Nielsen\n-
  csv, timeclock, timedot: clarify comment lines (#1953)\n- csv: add new coinbase
  example\n- csv: clarify amount-in/amount-out docs (#1970)\n- csv: clarify skip/valid
  csv semantics (#1967)\n- csv: clarify valid CSV requirements and issues (fix #1966)\n-
  csv: cleanup, reorder, CSV rules tips -> Working with CSV\n- csv: fix wrong if tables
  doc; rewrite several sections (#1977)\n- csv: flatten, clean up CSV sections\n-
  csv: improve Amount field / Setting amounts\n- csv: note -in and -out are used together
  for one posting (#1970)\n- csv: rules factoring tips\n- csv: try to clarify how
  CSV fields and hledger fields work\n- document --infer-market-prices with signed
  costs (#1870)\n- fix duplicate market prices heading breaking info navigation\n-
  import: note a pitfall with multifile import\n- improve Directives summaries\n-
  introduction/input/output improvements\n- journal: cheatsheet: clarify date tag\n-
  journal: rewrite Account names, mention brackets/parentheses (#1915)\n- mention
  pivoting on a tag with multiple values (#1950)\n- more cost notation docs; describe
  Ledger and Beancount cost notation\n- more mention of posting order effect on inferring
  cost (#1959)\n- period expressions doc updates\n- Removed redundant paragraph in
  documentation. (J. B. Rainsberger)\n- rename directive sections, fix many links\n-
  reorganise commands list, like the CLI\n- reorganise bin/README & the Scripts page,
  add entries for recent scripts\n- replace \"transaction prices\" terminology with
  \"costs\"\n- tags: discuss multi-values/overriding (#1950)\n- update market price
  inference docs per sol\n- Updated section on pivoting. Used synonyms for \"member\"
  in cases where there could be confusion with the tag named \"member.\" (Robert Nielsen)\n-
  use more standard and consistent boilerplate in hledger, ui, web man pages\n- virtual
  postings: improve wording per Robert Nielsen\n\n\n# 1.28 2022-12-01\n\nFeatures\n\n-
  The `accounts` command has new flags: `--undeclared` (show accounts used but not
  declared), `--unused` (show accounts declared but not used),  and `--find` (find
  the first account matched by the first command argument, a convenience for scripts).
  Also `-u` and `-d` short flags have been added for `--used` and `--declared`.\n\n-
  A new CSV rule `intra-day-reversed` helps generate transactions in correct order
  with CSVs where records are reversed within each day.\n\n- CSV rules can now correctly
  convert CSV date-times with a implicit or explicit timezone to dates in your local
  timezone. Previously, CSV date-times with a different time zone from yours could
  convert to off-by-one\n  dates, because the CSV's timezone was ignored.\n  Now,\n\n
  \ 1. When a CSV has date-times with an implicit timezone different from yours, you
  can use the `timezone` rule to declare it.\n\n  2. CSV date-times with a known timezone
  (either declared by `timezone` or parsed with `%Z`) will be localised to the system
  timezone\n     (or to the timezone set with the `TZ` environment variable).\n\n
  \ (#1936)\n  \nImprovements\n\n- print --match now respects -o and -O.\n\n- print
  --match now returns a non-zero exit code when there is no acceptable match.\n\n-
  Support megaparsec 9.3. (Felix Yan)\n\n- Support GHC 9.4.\n\nFixes\n\n- In CSV rules,
  when assigning a parenthesised account name to   `accountN`, extra whitespace is
  now ignored, allowing unbalanced postings to be detected correctly.\n\nScripts/addons\n\n-
  bin/hledger-move helps record transfers involving subaccounts and costs,\n  eg when
  withdrawing some or all of an investment balance containing many lots and costs.\n\n-
  bin/hledger-git no longer uses the non-existent git record command.\n  (#1942) (Patrick
  Fiaux)\n\n- bin/watchaccounts is a small shell script for watching the account tree
  as you make changes.\n\n# 1.27.1 2022-09-18\n\nFixes\n\n- Balance commands using
  `-T -O html` no longer fail with an error\n  when there is no data to report.\n
  \ (#1933)\n\n# 1.27 2022-09-01\n\nFeatures\n\n- `hledger check recentassertions`
  (and flycheck-hledger in Emacs if\n  you enable this check) requires that all balance-asserted
  accounts\n  have a balance assertion within 7 days before their latest posting.\n\n
  \ This helps remind you to not only record transactions, but also to\n  regularly
  check account balances against the real world, to catch\n  errors sooner and avoid
  a time-consuming hunt.\n\n- The --infer-costs general flag has been added, as the
  inverse\n  operation to --infer-equity.  --infer-costs detects commodity\n  conversion
  transactions which have been written with equity\n  conversion postings (the traditional
  accounting notation) and adds\n  PTA cost notation (@@) to them (allowing cost reporting).\n
  \ See https://hledger.org/hledger.html#equity-conversion-postings .\n  (Stephen
  Morgan)\n\nImprovements\n\n- Many error messages have been improved. Most error
  messages now use\n  a consistent, more informative format. \n  (#1436)\n\n- The
  accounts command has a new --directives flag which makes it\n  show valid account
  directives which you can paste into a journal.\n\n- The accounts command has a new
  --positions flag which shows where\n  accounts were declared, useful for troubleshooting.\n
  \ (#1909)\n\n- Bump lower bounds for Diff and githash. (Andrew Lelechenko)\n\n-
  GHC 8.6 and 8.8 are no longer supported. Building hledger now\n  requires GHC 8.10
  or greater.\n\nFixes\n\n- Account display order is now calculated correctly even
  when accounts\n  are declared in multiple files.\n  (#1909)\n\n- At --debug 5 and
  up, account declarations info is logged.\n  (#1909)\n\n- hledger aregister and hledger-ui
  now show transactions correctly\n  when there is a type: query.\n  (#1905)\n\n-
  bal: Allow cumulative gain and valuechange reports.\n  Previously, --cumulative
  with --gain or --valuechange would produce an\n  empty report. This fixes this issue
  to produce a reasonable report.\n  (Stephen Morgan)\n\n- bal: budget goal amounts
  now respect -c styles (fixes #1907)\n\n- bal: budget goals now respect -H (#1879)\n\n-
  bal: budget goals were ignoring rule-specified start date\n\n- cf/bs/is: Fixed non-display
  of child accounts when there is an\n  intervening account of another type.\n  (#1921)
  (Stephen Morgan)\n\n- roi: make sure empty cashflows are skipped when determining
  first cashflow (Charlotte Van Petegem)\n  Empty cashflows are added when the begin
  date of the report is before the first\n  transaction.\n\nScripts/addons\n\n- https://hledger.org/scripts.html
  - an overview of scripts and addons in bin/.\n\n- paypaljson, paypaljson2csv - download
  txns from paypal API\n\n- hledger-check-postable.hs - check that no postings are
  made to accounts with a postable:(n|no) tag\n\n- hledger-addon-example.hs - script
  template\n\n\n# 1.26.1 2022-07-11\n\n- require safe 0.3.19+ to avoid deprecation
  warning\n\n# 1.26 2022-06-04\n\nImprovements\n\n- `register` and `aregister` have
  been made faster, by \n\n  - considering only the first 1000 items for choosing
  column\n    widths. You can restore the old behaviour (guaranteed alignment\n    across
  all items) with the new `--align-all` flag.\n    ([#1839](https://github.com/simonmichael/hledger/issues/1839),
  Stephen Morgan)\n\n  - discarding cost data more aggressively, giving big speedups
  for\n    large journals with many costs.\n  \t([#1828](https://github.com/simonmichael/hledger/issues/1828),
  Stephen Morgan)\n\n- Most error messages from the journal reader and the `check`
  command now use\n  a consistent layout, with an \"Error:\" prefix, line and column
  numbers,\n  and an excerpt highlighting the problem. Work in progress.\n  ([#1436](https://github.com/simonmichael/hledger/issues/1436))
  (Simon Michael, Stephen Morgan)\n\n- `hledger check ordereddates` now always checks
  all transactions\n  (previously it could be restricted by query arguments).\n\n-
  The `--pivot` option now supports a `status` argument, to pivot on transaction status.\n\n-
  Update bash completions (Jakob Schöttl)\n\nFixes\n\n- Value reports with `--date2`
  and a report interval (like `hledger bal -VM --date2`)\n  were failing with a \"expected
  all spans to have an end date\" error since 1.22;\n  this is now fixed.\n  ([#1851](https://github.com/simonmichael/hledger/issues/1851),
  Stephen Morgan)\n\n- In CSV rules, interpolation of a non-existent field like `%999`
  or `%nosuchfield`\n  is now ignored (previously it inserted that literal text).\n
  \ Note this means such an error will not be reported; \n  Simon chose this as the
  more convenient behaviour when converting CSV.\n  Experimental.\n  ([#1803](https://github.com/simonmichael/hledger/issues/1803),
  [#1814](https://github.com/simonmichael/hledger/issues/1814)) (Stephen Morgan)\n\n-
  `--infer-market-price` was inferring a negative price when selling.\n  ([#1813](https://github.com/simonmichael/hledger/issues/1813),
  Stephen Morgan)\n\n- Allow an escaped forward slash in regular expression account
  aliases.\n  ([#982](https://github.com/simonmichael/hledger/issues/982), Stephen
  Morgan)\n\n- The `tags` command now also lists tags from unused account declarations.\n
  \ It also has improved command-line help layout.\n  ([#1857](https://github.com/simonmichael/hledger/issues/1857))\n\n-
  `hledger accounts` now shows its debug output at a more appropriate level (4).\n\n#
  1.25 2022-03-04\n\nBreaking changes\n\n- Journal format's `account NAME  TYPECODE`
  syntax, deprecated in 1.13, has been dropped.\n  Please use `account NAME  ; type:TYPECODE`
  instead.\n  (Stephen Morgan)\n\n- The rule for auto-detecting \"cash\" (liquid asset)
  accounts in the `cashflow` report  \n  has changed: it's now \"all accounts under
  a top-level `asset` account, with \n  `cash`, `bank`, `checking` or `saving` in
  their name\" (case insensitive, variations allowed).  \n  So if you see a change
  in your `cashflow` reports, you might need to add\n  `account` directives with `type:C`
  tags, declaring your top-most cash accounts.\n\nFeatures\n\n- The new `type:TYPECODES`
  query matches accounts by their accounting type.\n  Account types are declared with
  a `type:` tag in account directives,\n  or inferred from common english account
  names, or inherited from parent accounts,\n  as described at [Declaring accounts
  > Account types].\n  This generalises the account type detection of `balancesheet`,
  `incomestatement` etc.,\n  so you can now select accounts by type without needing
  fragile account name regexps.\n  Also, the `accounts` command has a new `--types`
  flag to show account types.\n  Eg:\n\n      hledger bal type:AL  # balance report
  showing assets and liabilities\n      hledger reg type:x   # register of all expenses\n
  \     hledger acc --types  # list accounts and their types\n\n  ([#1820](https://github.com/simonmichael/hledger/issues/1820),
  \n  [#1822](https://github.com/simonmichael/hledger/issues/1822)) \n  (Simon Michael,
  Stephen Morgan)\n\n- The `tag:` query can now also match account tags, as defined
  in account directives.\n  Subaccounts inherit tags from their parents.\n  Accounts,
  postings and transactions can be filtered by account tag.\n  ([#1817](https://github.com/simonmichael/hledger/issues/1817))\n\n-
  The new `--infer-equity` flag replaces the `@`/`@@` price notation in commodity\n
  \ conversion transactions with more correct equity postings (when not using `-B/--cost`).\n
  \ This makes these transactions fully balanced, and preserves the accounting equation.\n
  \ For example:\n\n      2000-01-01\n        a             1 AAA @@ 2 BBB\n        b
  \           -2 BBB\n\n      $ hledger print --infer-equity\n      2000-01-01\n        a
  \                              1 AAA\n        equity:conversion:AAA-BBB:AAA  -1
  AAA\n        equity:conversion:AAA-BBB:BBB   2 BBB\n        b                              -2
  BBB\n\n  \n  `equity:conversion` is the account used by default. To use a different
  account,\n  declare it with an account directive and the new `V` (`Conversion`)
  account type.\n  Eg:\n  \n      account Equity:Trading    ; type:V\n\n  ([#1554](https://github.com/simonmichael/hledger/issues/1554))
  (Stephen Morgan, Simon Michael)\n\n- Balance commands (`bal`, `bs` etc.) can now
  generate easy-to-process \"tidy\" CSV data \n  with `-O csv --layout tidy`.\n  In
  tidy data, every variable is a column and each row represents a single data point
  \n  (cf <https://vita.had.co.nz/papers/tidy-data.html>).\n  ([#1768](https://github.com/simonmichael/hledger/issues/1768),
  \n  [#1773](https://github.com/simonmichael/hledger/issues/1773), \n  [#1775](https://github.com/simonmichael/hledger/issues/1775))
  \n  (Stephen Morgan)\n\nImprovements\n\n- Strict mode (`-s/--strict`) now also checks
  periodic transactions (`--forecast`) \n  and auto postings (`--auto`). \n  ([#1810](https://github.com/simonmichael/hledger/issues/1810))
  (Stephen Morgan)\n\n- `hledger check commodities` now always accepts zero amounts
  which have no commodity symbol. \n  ([#1767](https://github.com/simonmichael/hledger/issues/1767))
  (Stephen Morgan)\n\n- Relative [smart dates](hledger.html#smart-dates) may now specify
  an arbitrary number of some period into the future or past).\n  Some examples:\n
  \ - `in 5 days`\n  - `in -6 months`\n  - `5 weeks ahead`\n  - `2 quarters ago`\n
  \ \n  (Stephen Morgan)\n\n- CSV output now always disables digit group marks (eg,
  thousands separators),\n  making it more machine readable by default. \n  ([#1771](https://github.com/simonmichael/hledger/issues/1771))
  (Stephen Morgan)\n\n- Unicode may now be used in field names/references in CSV rules
  files.\n  ([#1809](https://github.com/simonmichael/hledger/issues/1809)) (Stephen
  Morgan)\n\n- Error messages improved:\n  - Balance assignments\n  - aregister\n
  \ - Command line parsing (less \"user error\")\n\nFixes\n\n- `--layout=bare` no
  longer shows a commodity symbol for zero amounts. \n  ([#1789](https://github.com/simonmichael/hledger/issues/1789))
  (Stephen Morgan)\n\n- `balance --budget` no longer elides boring parents of unbudgeted
  accounts \n  if they have a budget. \n  ([#1800](https://github.com/simonmichael/hledger/issues/1800))
  (Stephen Morgan)\n\n- `roi` now reports TWR correctly\n\n  - when there are several
  PnL changes occurring on a single day\n  - and also when investment is fully sold/withdrawn/discounted
  at the end of a particular reporting period.\n\n  ([#1791](https://github.com/simonmichael/hledger/issues/1791))
  (Dmitry Astapov)\n\nDocumentation\n\n- There is a new CONVERSION & COST section,
  replacing COSTING. \n  ([#1554](https://github.com/simonmichael/hledger/issues/1554))\n\n-
  Some problematic interactions of account aliases with other features have been noted.
  \n  ([#1788](https://github.com/simonmichael/hledger/issues/1788))\n\n- Updated:
  [Declaring accounts > Account types](https://hledger.org/hledger.html#account-types)\n\n#
  1.24.1 2021-12-10\n\nFixes\n\n- `balance --declared` is now filtered correctly by
  a `not:ACCT` query.\n  (#1783)\n\n- More reliable --version output, with commit
  date and without patch level.\n\nAPI changes:\n\n- new type synonyms ProgramName,
  PackageVersion, VersionString\n- versionStringForProgname -> versionString with
  extra argument\n- versionStringFor -> versionStringWith with extra argument\n\n#
  1.24 2021-12-01\n\nFeatures\n\n- balance commands provide more control over how
  multicommodity amounts\n  are displayed. (And they no longer elide too-wide amounts
  by default.)\n  The --commodity-column flag has been deprecated and replaced by
  a new\n  --layout option, with three values:\n  \n  - wide (the default, shows amounts
  on one line unelided, like older hledger versions)\n  - tall (a new display mode,
  shows one amount per line)\n  - bare (like the old --commodity-columm, shows one
  commodity per line with symbols in their own column)\n  \n  (Stephen Morgan)\n\n-
  The balance commands have a new `--declared` flag, causing them to\n  include leaf
  (ie, non-parent) accounts declared by account directives,\n  even if they contain
  no transactions yet. Together with `-E`, this shows\n  a balance for both used and
  declared accounts.\n  The idea is to be able to see a useful \"complete\" balance
  report, even\n  when you don't have transactions in all of your declared accounts
  yet.\n  (#1765)\n\n- journal files now support a `decimal-mark` directive as a more\n
  \ principled way (than `commodity` directives) to specify the decimal character\n
  \ in use in that file, to ensure accurate number parsing.\n  (#1670, Lawrence Wu)\n\nImprovements\n\n-
  The stats command now shows rough but useful performance stats: run\n  time and
  processing speed in transactions per second.\n\n- balance: support the --related
  flag, like register, showing the\n  other postings from the transactions. (#1469,
  Stephen Morgan)\n\n- roi now uses posting dates when available, and honors the --date2\n
  \ flag. This will not change the results computed for the typical\n  use-case, it
  just makes \"roi\" more thorough/consistent.\n  (Dmitry Astapov)\n\n- aregister
  now shows transactions' secondary date if the --date2 flag is used.\n  (#1731)\n\n-
  timedot: a D default commodity (and style) declared in a parent\n  journal file
  will now be applied to timedot amounts. This means they\n  can be priced and valued/converted.\n\n-
  cli: The --pretty and --forecast options can now be written after the\n  command
  name, like other general options.\n  (Stephen Morgan)\n\n- register -V -H with no
  interval now values at report end date, like balance.\n  (#1718, Stephen Morgan)\n\n-
  Allow megaparsec 9.2.\n\n- Drop the base-compat-batteries dependency. (Stephen Morgan)\n\nFixes\n\n-
  prices: Do not include zero amounts when calculating amounts for balance assignments.
  (#1736) (Stephen Morgan)\n  This is not usually a problem, but can get in the way
  of auto-inferring prices.\n\n- csv: Successfully parse an empty csv file. (#1183)
  (Stephen Morgan)\n\n- balance: Balance reports with --depth=0 properly report aggregated\n
  \ values, not zero everywhere. (#1761) (Stephen Morgan)\n\n- prices: Do not try
  to generate prices when there would be a zero\n  denominator. Also correctly generate
  reverse prices for zero\n  amounts. (Stephen Morgan)\n\n- csv: Allow both amount-in
  and amount-out fields to contain a zero.\n  (#1733, Stephen Morgan)\n\n- balance:
  Balance reports should consider date: queries when\n  calculating report span with
  --date2. (#1745, Stephen Morgan)\n\n- print: auto: The print command should always
  display inferred\n  amounts for --auto generated postings. (#1276, Stephen Morgan)\n
  \ \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n
  \ \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n\n# 1.23 2021-09-21\n\nFeatures\n\n-
  The balance command has a new `--gain` report type, showing\n  unrealised capital
  gains/losses. Essentially, this is the difference\n  between the amounts' costs
  and their total present value. More\n  precisely, between the value of the amounts'
  costs and the value of\n  the amounts on the valuation date(s). (Ie, you can report
  gain in a\n  different currency.)\n  ([#1623](https://github.com/simonmichael/hledger/issues/1623),\n
  \ [#1432](https://github.com/simonmichael/hledger/issues/1432),\n  Stephen Morgan,
  Charlotte Van Petegem)\n\n- The new `-c/--commodity-style` option makes it easy
  to override\n  commodity display styles at runtime, eg to adjust the number of\n
  \ decimal places or change the position of the symbol.\n  ([#1593](https://github.com/simonmichael/hledger/issues/1593),
  Arjen Langebaerd)\n\n- The balance commands have a new `--commodity-column` flag
  that\n  displays commodity symbols in a dedicated column, showing one line\n  per
  commodity and all amounts as bare numbers.\n  ([#1559](https://github.com/simonmichael/hledger/issues/1559),\n
  \ [#1626](https://github.com/simonmichael/hledger/issues/1626),\n  [#1654](https://github.com/simonmichael/hledger/issues/1654),\n
  \ Lawrence Wu, Simon Michael, Stephen Morgan)\n\n- The `balance --budget` option
  can now take an argument,\n  a case insensitive description substring which selects
  a subset of\n  the journal's periodic transactions for setting budget goals. \n
  \ This makes it possible to keep multiple named budgets in one journal, \n  and
  select the one you want with --budget's argument. \n  ([#1612](https://github.com/simonmichael/hledger/issues/1612))\n\n-
  Period expressions now support `every weekday`, `every weekendday` and\n  `every
  mon,wed,...` (multiple days of the week).\n  This is intended for periodic transaction
  rules used with\n  `--forecast` (or `bal --budget`).\n  ([#1632](https://github.com/simonmichael/hledger/issues/1632),
  Lawrence Wu)\n\n- The new `--today=DATE` option allows overriding today's date.
  This\n  can be useful in tests and examples using relative dates, to make\n  them
  reproducible.\n  ([#1674](https://github.com/simonmichael/hledger/issues/1674),
  Stephen Morgan)\n\n- In CSV rules, multi-line comments are now supported. Newlines
  in CSV\n  data are preserved, or newlines can be added by writing `\\n` when\n  assigning
  to `comment`, `comment1` etc. \n  (Malte Brandy)\n\nImprovements\n\n- Incremental
  performance improvements; hledger 1.23 is the fastest\n  hledger yet, about 10%
  faster than 1.22. \n  (Stephen Morgan)\n\n- `register` no longer slows down when
  there are many report intervals.\n  ([#1683](https://github.com/simonmichael/hledger/issues/1683),
  Stephen Morgan)\n\n- Numbers in SQL output now always use decimal period (`.`),\n
  \ independent of commodity display styles. \n  (Stephen Morgan)\n\n- `--sort` now
  gives a more intuitive sort oder when there are\n   multiple commodities. Negative
  numbers in one commodity are always\n   less than positive numbers in another commodity.\n
  \  ([#1563](https://github.com/simonmichael/hledger/issues/1563), Stephen Morgan)\n\n-
  `--infer-market-price` has been renamed to `--infer-market-prices`.\n  (The old
  spelling still works, since we accept flag prefixes.)\n\n- Our pretty-printed JSON
  now orders object attributes alphabetically,\n  across all GHC and haskell lib versions.\n\n-
  register with a report interval starting on custom dates\n  (eg: `hledger reg -p
  \"every 15th day of month\") now makes the \n  date column wide enough to show the
  start and end dates.\n  It also wastes less whitespace after the column.\n  ([#1655](https://github.com/simonmichael/hledger/issues/1655),
  Stephen Morgan)\n\n- The --forecast option will now reject a report interval in
  its\n  argument, instead of silently ignoring it.\n\n- In JSON output, object attributes
  are now ordered alphabetically,\n  consistently for all GHC and haskell lib versions.
  \n  ([#1618](https://github.com/simonmichael/hledger/issues/1618), Stephen Morgan)\n\n-
  JSON output now indents with 2 spaces rather than 4. \n  (Stephen Morgan)\n\n- The
  balance commands' `-S/--sort-amount` flag now behaves more\n  predictably and intuitively
  with multiple commodities.\n  Multi-commodity amounts are sorted by comparing their
  amounts in\n  each commodity, with alphabetically-first commodity symbols being\n
  \ most significant, and assuming zero with alphabetically-first commodity symbols
  being\n  most significant, and assuming zero when a commodity is missing.\n  ([#1563](https://github.com/simonmichael/hledger/issues/1563),
  \n  [#1564](https://github.com/simonmichael/hledger/issues/1564), Stephen Morgan)\n
  \ \n- The close command now uses the later of today or journal's last day\n  as
  default closing date, providing more intuitive behaviour when\n  closing a journal
  with future transactions. Docs have been improved.\n  ([#1604](https://github.com/simonmichael/hledger/issues/1604))\n\n-
  Rules for selecting the forecast period (within with --forecast\n  generates transactions)
  have been tweaked slightly, and\n  some disagreement between docs and implementation
  has been fixed.\n  Now, the forecast period begins on:\n  - the start date supplied
  to the `--forecast` argument, if any\n  - otherwise, the later of\n    - the report
  start date if specified with -b/-p/date:\n    - the day after the latest normal
  (non-periodic) transaction in the journal, if any\n  - otherwise today.\n\n  It
  ends on:\n  - the end date supplied to the `--forecast` argument, if any\n  - otherwise
  the report end date if specified with -e/-p/date:\n  - otherwise 180 days (6 months)
  from today.\n\n  This is more intuitive in some cases. (Eg:\n  `hledger reg --forecast
  -b 2020-01-01` on a journal containing \n  only periodic transaction rules now shows
  forecast transactions \n  starting from 2020-01-01, rather than from today.)\n  ([#1648](https://github.com/simonmichael/hledger/issues/1648),
  \n  [#1665](https://github.com/simonmichael/hledger/issues/1665),\n  [#1667](https://github.com/simonmichael/hledger/issues/1667),
  \n  Stephen Morgan, Simon Michael)\n\n- Require base >=4.11, prevent red squares
  on Hackage's build matrix.\n  (We officially support GHC 8.6+, which means base
  4.12, \n  but Hackage shows all packages building successfully with \n  base 4.11/GHC
  8.4+ somehow, so it's still allowed..)\n\nFixes\n\n- A rare bug causing incorrect
  balances to be reported by the\n  cf/bs/bse/is commands, since hledger 1.19, has
  been fixed.\n  (cf/bs/bse/is with --tree --no-elide --begin DATE and certain\n  account
  directives could show wrong balances).\n  ([#1698](https://github.com/simonmichael/hledger/issues/1698),
  Stephen Morgan)\n\n- aregister now aligns multicommodity amounts properly (broken
  since 1.21).\n  ([#1656](https://github.com/simonmichael/hledger/issues/1656), Stephen
  Morgan)\n\n- `balance -E` (and hledger-ui Z) now correctly show zero parent accounts,\n
  \ fixing a bug introduced in hledger 1.19.\n  ([#1688](https://github.com/simonmichael/hledger/issues/1688),
  Stephen Morgan)\n\n- The `roi` command no longer gives an ugly error in a certain
  case\n  with PnL applied on the first day of investment. (Dmitry Astapov)\n\n- `--forecast`
  now generates transactions up to the day before the\n  specified report end date
  (instead of two days before).\n  ([#1633](https://github.com/simonmichael/hledger/issues/1633),
  Stephen Morgan)\n\n- Certain errors in CSV conversion, such as a failing balance
  assertion,\n  were always being reported as line 2.\n\n# 1.22.2 2021-08-07\n\nBreaking
  changes\n\n- aregister no longer hides future transactions by default.\n  This is
  a consequence of the fix for \n  [#1638](https://github.com/simonmichael/hledger/issues/1638).
  \n  It makes aregister consistent, so we think it's a reasonable change.\n  So if
  you have future-dated transactions in your journal which you\n  don't want reported,
  you now must exclude them with `-e tomorrow` or\n  `date:-tomorrow` in the command,
  as with other reports.\n  (Stephen Morgan)\n\nImprovements\n\n- Timedot format's
  doc has been rewritten.\n\nFixes\n\n- Make balance assignments in forecasted transactions
  work again\n  (broken in 1.22.1).\n  Forecast transactions are now generated early
  and processed\n  in the same way as other transactions.\n  ([#1638](https://github.com/simonmichael/hledger/issues/1638),
  Stephen Morgan)\n\n- aregister preserves the order of same-day transactions again\n
  \ (broken in 1.22.1).\n  ([#1642](https://github.com/simonmichael/hledger/issues/1642),
  Stephen Morgan)\n\n# 1.22.1 2021-08-02\n\nImprovements\n\n- Bash shell completions
  (for hledger, hledger-ui, hledger-web) are\n  now included in the hledger package's
  release tarballs, making them\n  more likely to be installed by system packages.
  (Jakob Schöttl)\n\n- roi docs now discuss how to quote multi-word queries. (#1609,
  Dmitry\n  Astapov)\n\n- Allow megaparsec 9.1\n\nFixes\n\n- `cur:` and `amt:` queries
  now match the original amounts before\n  valuation and cost conversion, as they
  did before hledger 1.22. We\n  believe this is the more useful behaviour in practice.
  (#1625)\n  (Stephen Morgan)\n\n- Queries now work better with `register --related`,
  no longer showing\n  duplicate postings when more than one posting in a transaction
  is\n  matched. (#1629) (Stephen Morgan)\n\n- Valuation now works with `register
  --related`. (#1630) (Stephen\n  Morgan)\n\n- Auto posting rules now also see inferred
  amounts,\n  not just explicit amounts. (#1412) (Stephen Morgan)\n\n- Our info manuals
  now have more robust directory metadata (no\n  subdirectory path), making them more
  likely to be linked in your\n  top-level Info directory by system packages. (#1594)
  (Simon Michael,\n  Damien Cassou)\n\n- The error message for a non-existent input
  file no longer shows\n  excess double quotes. (#1601, Stephen Morgan)\n\n- Journal
  format docs: The commodity directive's scope is now\n  correctly described (lasts
  until end of current file).\n\n- The aregister command now properly ignores a `depth:`
  argument. \n  It might now also behave more correctly with valuation or `--txn-dates`.\n
  \ (#1634, Stephen Morgan)\n\n# 1.22 2021-07-03\n\nFeatures\n\n- check: A new `balancednoautoconversion`
  check requires transactions\n  to balance without the use of inferred transaction
  prices. (Explicit\n  transaction prices are allowed.) This check is included in
  `--strict`\n  mode. The old `autobalanced` check has been renamed to\n  `balancedwithautoconversion`.
  (Stephen Morgan)\n\nImprovements\n\n- Many internal optimisations have been applied
  (cf hledger-lib\n  changelog). Overall, you can expect most reports to be about
  20%\n  faster. The register report is more than 2x faster and uses 4x less\n  memory.
  (Stephen Morgan)\n\n      ~/src/hledger$ quickbench -w hledger-1.21,hledger\n      Running
  5 tests 1 times with 2 executables at 2021-06-29 13:13:26 HST:\n    \n      Best
  times:\n      +----------------------------------------------------++--------------+---------+\n
  \     |                                                    || hledger-1.21 | hledger
  |\n      +====================================================++==============+=========+\n
  \     | -f examples/10000x1000x10.journal print            ||         1.18 |    0.90
  |\n      | -f examples/10000x1000x10.journal register         ||        12.82 |
  \   5.95 |\n      | -f examples/10000x1000x10.journal balance          ||         1.38
  |    0.86 |\n      | -f examples/1000x1000x10.journal balance --weekly  ||         0.96
  |    0.78 |\n      | -f examples/10000x1000x10.journal balance --weekly ||        13.07
  |   10.79 |\n      +----------------------------------------------------++--------------+---------+\n\n-
  ANSI color is now disabled automatically (on stdout) when the\n  `-o/--output-file`
  option is used (with a value other than `-`).\n  (#1533)\n\n- ANSI color is now
  also available in debug output, determined in the\n  usual way by `--color`, `NO_COLOR`,
  and whether the output (stderr)\n  is interactive.\n  \n- The --version flag shows
  more details of the build, when known: git\n  tag, number of commits since the tag,
  commit hash, platform and\n  architecture. (Stephen Morgan)\n\n- balance: Capitalisation
  of \"account\" and \"total\" (and lack of a\n  colon in the latter) in CSV output
  is now consistent for single- and\n  multi-period reports.\n\n- balance reports'
  CSV output now includes full account names. (#1566)\n  (Stephen Morgan)\n\n- csv:
  We now accept spaces when parsing amounts from CSV. (Eric\n  Mertens)\n\n- json:
  Avoid adding unnecessary decimal places in JSON output. (Don't\n  increase them
  all to 10 decimal places.) (Stephen Morgan)\n  \n- json: Simplify amount precision
  (asprecision) in JSON output.\n  It is now just the number of decimal places, rather
  than an object.\n  (Stephen Morgan)\n\n- GHC 9.0 is now officially supported, and
  GHC 8.0, 8.2, 8.4 are not;\n  building hledger now requires GHC 8.6 or greater.\n\n-
  Added a now-required lower bound on containers. (#1514)\n\nFixes\n\n- Auto posting
  rules now match postings more precisely, respecting\n  `cur:` and `amt:` queries.
  (#1582) (Stephen Morgan)\n\n- balance reports: Fix empty cells when amounts are
  too wide to fit\n  (broken since 1.20) (#1526). (Stephen Morgan)\n\n- csv: Fix the
  escaping of double quotes in CSV output (broken in\n  1.21). (Stephen Morgan, #1508)\n\n-
  register: Fix the running total when there is a report interval\n  (broken since
  1.19) (#1568). (Stephen Morgan)\n\n- stats: No longer gets confused by posting dates.
  (#772) (Stephen Morgan)\n\n- timeclock: `hledger print` shows timeclock amounts
  with just 2\n  decimal places again (broken in 1.21). (#1527)\n\n- When all transaction
  amounts have the same sign, the error message\n  no longer adds an inferred price.
  (#1551) (Stephen Morgan)\n\n- Cleaned up some references to old man pages. (Felix
  Yan)\n\n# 1.21 2021-03-10\n\n## general\n\n- hledger is now generally about 10%
  more memory- and time-efficient,\n  and significantly more so in certain cases,
  eg journals with many\n  total transaction prices. (Stephen Morgan)\n\n- The `--help/-h`
  and `--version` flags are no longer position-sensitive;\n  if there is a command
  argument, they now always refer to the command\n  (where applicable).\n\n- The new
  `--info` flag opens the hledger info manual, if \"info\" is in $PATH.\n  `hledger
  COMMAND --info` will open COMMAND's info node.\n\n- The `--man` flag opens the hledger
  man page, if \"man\" is in $PATH.\n  `hledger COMMAND --man` will scroll the page
  to CMD's section, if \"less\"\n  is in $PATH. (We force the use of \"less\" in this
  case, overriding any\n  $PAGER or $MAN_PAGER setting.)\n\n- Some command aliases,
  considered deprecated, have been removed:\n  `txns`, `equity`, and the single-letter
  command aliases `a`, `b`,\n  `p`, and `r`. This was discussed at\n  https://github.com/simonmichael/hledger/pull/1423
  and on the hledger\n  mail list. It might annoy some folks; please read the issue
  and do\n  follow up there if needed.\n  \n- Notable documentation updates:\n  the
  separate file format manuals have been merged into the hledger manual,\n  the topic
  hierarchy has been simplified,\n  the `balance` command docs and \"commands\" section
  have been rewritten.\n\n## valuation\n\n- Costing and valuation are now independent,
  and can be combined.\n  `--value=cost` and `--value=cost,COMM` are still supported\n
  \ (equivalent to `--cost` and `--cost --value=then,COMM` respectively), \n  but
  deprecated. (Stephen Morgan)\n\n- `-V` is now always equivalent to `--value=end`.
  (Stephen Morgan)\n\n- `--value=end` now includes market price directives as well
  as\n  transactions when choosing a valuation date for single-period\n  reports.
  (#1405, Stephen Morgan)\n\n- `--value=end` now picks a consistent valuation date
  for single- and\n  and multi-period reports. (#1424, Stephen Morgan)\n\n- `--value=then`
  is now supported with all reports, not just register. (Stephen Morgan)\n\n- The
  too-vague `--infer-value` flag has been renamed to `--infer-market-price`.\n  Tip:
  typing `--infer-market` or even `--infer` is sufficient.\n  The old spelling still
  works, but is now deprecated.\n\n## commands\n\n- add: Infix matches are now scored
  higher. If the search pattern\n  occurs in full within the other description, that
  match gets a +0.5\n  score boost.\n\n- add: `--debug` now shows transaction matching
  results, useful when\n  troubleshooting.\n\n- balance: To accomodate new report
  types, the\n  `--change|--cumulative|--historical|--budget` flags have been split\n
  \ into two groups: report type (`--sum|--budget|...`) and accumulation\n  type (`--change|--cumulative|--historical`).
  `--sum` and `--change`\n  are the defaults, and your balance commands should still
  work as\n  before. (Stephen Morgan et al, #1353)\n\n- balance: The `--valuechange`
  report type has been added, showing the\n  changes in period-end values. (Stephen
  Morgan, #1353)\n\n- balance: With `--budget`, the first and last subperiods are
  enlarged\n  to whole intervals for calculating the budget goals also. (Stephen\n
  \ Morgan)\n\n- balance: In multi-period balance reports, specifying a report period\n
  \ now also forces leading/trailing empty columns to be displayed,\n  without having
  to add `-E`. This is consistent with `balancesheet`\n  etc. (#1396, Stephen Morgan)\n\n-
  balancesheet, cashflow: declaring just a Cash account no longer\n  hides other Asset
  accounts.\n\n- check: Various improvements:\n\n  - check name arguments may be given
  as case-insensitive prefixes\n  - `accounts` and `commodities` may also be specified
  as arguments\n  - `ordereddates` now checks each file separately (#1493)\n  - `ordereddates`
  no longer supports the `--unique` flag or query arguments\n  - `payees` is a new
  check requiring payee declarations\n  - `uniqueleafnames` now gives a fancy error
  message like the others\n  - the old `checkdates`/`checkdupes` commands have been
  dropped\n\n- help: The `help` command now shows only the hledger (CLI) manual,\n
  \ its `--info/--man/--pager` flags have been renamed to `-i/-m/-p`,\n  and `--cat`
  has been dropped.\n\n- help: With a TOPIC argument (any heading or heading prefix,
  case\n  insensitive), it will open the manual positioned at this topic if\n  possible.
  (Similar to the new `--man` and `--info` flags described above.)\n  <!-- `hledger
  help print` will show `print`'s doc with the best available viewer (usually info).
  -->\n  <!-- `hledger help print -m` is equivalent to `hledger print --man`.) -->\n\n-
  payees: Add `--used`/`--declared` flags, like the `accounts` command.\n\n- print:
  Now always shows amounts with all decimal places,\n  unconstrained by commodity
  display style. This ensures more\n  parseable and sensible-looking output in more
  cases, and behaves\n  more like Ledger's print. (There may be a cosmetic issue with\n
  \ trailing zeroes.) (#931, #1465)\n\n- print: With `--match`, infix matches are
  now scored higher, as with\n  the add command.\n\n- print: `--match` now provides
  debug output useful for troubleshooting.\n\n  If you forget to give `--match` an
  argument, it can confusingly\n  consume a following flag. Eg if you write:\n\n      hledger
  print --match -x somebank   # should be: hledger print --match=somebank -x\n\n  it
  gets quietly parsed as:\n\n      hledger print --match=\"-x\"\n\n  Now you can at
  least use --debug to figure it out:\n\n      hledger print --match -x somebank --debug\n
  \     finding best match for description: \"-x\"\n      similar transactions:\n
  \     ...\n\n- roi: Now supports the valuation options (#1417), and uses commodity
  display styles.\n  Also the manual has been simplified, with some content moved
  to the Cookbook.\n  (Dmitry Astapov):\n\n## journal format\n\n- The `commodity`
  directive now properly sets the display style of the\n  no-symbol commodity. (#1461)\n\n##
  csv format\n\n- More kinds of malformed signed numbers are now ignored, in\n  particular
  just a sign without a number, which simplifies sign\n  flipping with amount-in/amount-out.\n\n##
  API\n\n- API changes include:\n  ```\n  Hledger.Cli.Utils:\n  +journalSimilarTransaction\n
  \ \n  Hledger.Cli.Commands.Add:\n   transactionsSimilarTo -> Hledger.Data.Journal.journalTransactionsSimilarTo\n
  \   and now takes a number-of-results argument\n  ```\n\n\n# 1.20.4 2021-01-29\n\n-
  aregister: ignore a depth limit, as in 1.19 (#1468).\n  In 1.20-1.20.3, aregister
  had stopped showing transactions in subaccounts \n  below a depth limit. Now it
  properly shows all subaccount transactions, \n  ensuring that the register's final
  total matches a balance report with \n  similar arguments.\n\n# 1.20.3 2021-01-14\n\n-
  When searching for price chains during valuation/currency conversion:\n\n  - It
  no longer hangs when there are price loops. (And in case of\n    future bugs, it
  will give up rather than search forever.) (#1439)\n  - It now really finds the shortest
  path. (#1443)\n  - Useful progress info is displayed with `--debug=1` or `--debug=2`.\n\n-
  balance, incomestatement: End-valued multi-period balance change\n  reports (eg:
  `bal -MV`) have been reverted to show value-of-change,\n  as in previous hledger
  versions, rather than change-of-value, for\n  now. (#1353, #1428) (Stephen Morgan)\n\n-
  balance: End-valued balance change reports now choose the same final\n  valuation
  date and show consistent results whether single-period or\n  multi-period. (#1424)
  (Stephen Morgan)\n\n- balance: the `--drop` option now works with `csv` and `html`
  output.\n  (#1456) (Ilya Konovalov)\n\n- check: the `commodities` check, and `-s`/`--strict`
  mode, now ignore\n  the \"AUTO\" internal pseudo-commodity. (#1419) (Ilya Konovalov)\n\n-
  register: Then-valued multi-period register reports\n  (eg: `register -M --value=then`)
  now calculate the correct values.\n  (#1449) (Stephen Morgan)\n\n- roi: now shows
  a better error message when required prices are\n  missing. (#1446) (Dmitry Astapov)\n\n-
  The no-symbol commodity's input number format can now be set by a\n  `commodity`
  directive, like other commodities. (#1461)\n\n# 1.20.2 2020-12-28\n\n- help: Fix
  loss of capitalisation in part of the hledger-ui manual. \n\n- Fix the info manuals'
  node structure.\n\n- Drop unused parsec dependency.\n\n# 1.20.1 2020-12-15\n\n-
  bal, bs, cf, is: In amount-sorted balance reports, equal-balance accounts \n  are
  now reliably sorted by name. (Simon Michael, Stephen Morgan)\n\n- help: Fix the
  topic hierarchy in Info manuals.\n\n# 1.20 2020-12-05\n\n## general\n\n- strict
  mode: with -s/--strict, hledger requires that\n  all accounts and commodities are
  declared with directives.\n\n- Reverted a stripAnsi change in 1.19.1 that caused
  a 3x slowdown of amount rendering\n  in terminal reports. (#1350)\n\n- Amount and
  table rendering has been improved, so that stripAnsi is no longer needed.\n  This
  speeds up amount rendering in the terminal, speeding up some reports by 10% or more
  since 1.19.\n  (Stephen Morgan)\n\n- Amount eliding no longer displays corrupted
  ANSI codes (#1352, Stephen Morgan)\n\n- Eliding of multicommodity amounts now makes
  better use of available space,\n  avoiding unnecessary eliding (showing as many
  amounts as possible within\n  32 characters). (Stephen Morgan)\n\n- Command line
  help for --no-elide now mentions that it also disables eliding of\n  multicommodity
  amounts.\n\n- Query terms containing quotes (eg to match account names containing
  quotes)\n  now work properly. (#1368, Stephen Morgan)\n\n- cli, journal: Date range
  parsing is more robust, fixing failing/incorrect cases such as: (Stephen Morgan)\n\n
  \ - a hyphenated range with just years (`2017-2018`)\n  - a hyphenated date with
  no day in a hyphenated range (`2017-07-2018`)\n  - a dotted date with no day in
  a dotted range (`2017.07..2018.02`)\n \n- Debug output is prettier (eg, in colour),
  using pretty-simple instead of pretty-show.\n\n- csv, timedot, timeclock files now
  respect command line --alias options,\n  like journal files.  (#859)\n\n- Market
  price lookup for value reports is now more robust, fixing several bugs\n  (and debug
  output is more informative).\n  There has been a slight change in functionality:
  when chaining prices,\n  we now prefer chains of all \"forward\" prices, even if
  longer, with chains\n  involving reverse prices being the last resort.\n  (#1402)\n\n##
  commands\n\n- add: number style (eg thousands separators) no longer disturbs the
  value\n  that is offered as default. (#1378)\n\n- bal: --invert now affects -S/--sort-amount,
  reversing the order. (#1283, #1379) (Stephen Morgan)\n\n- bal: --budget reports
  no longer insert an extra space inside the brackets. (Stephen Morgan)\n\n- bal:
  --budget reports now support CSV output (#1155)\n\n- bal, is, bs --change: \n  Valued
  multiperiod balance change reports now show changes of value, \n  rather than the
  value of changes. (#1353, Stephen Morgan)\n\n- bal: clearer debug output, following
  debug levels policy\n\n- check: A new command which consolidating the various check-*
  commands.\n  It runs the default, strict, or specified checks and produces\n  no
  output and a zero exit code if all is well.\n\n- check-dates: this command is deprecated
  and will be removed\n  in next release; use \"hledger check ordereddates\" instead.\n\n-
  check-dupes: this command is deprecated and will be removed\n  in next release;
  use \"hledger check uniqueleafnames\" instead.\n\n- import: The journal's commodity
  styles (declared or inferred) are now applied\n  to imported amounts, overriding
  their original number format.\n\n- roi: TWR now handles same-day pnl changes and
  cashflows,\n  calculation failure messages have been improved, and\n  the documentation
  includes more detail and examples.\n  (#1398) (Dmitry Astapov)\n\n## journal format\n\n-
  The journal's commodity styles are now applied to forecasted transactions. (#1371)\n\n-
  journal, csv: commodity style is now inferred from the first amount, as documented,\n
  \ not the last. This was \"working wrongly\" since hledger 1.12..\n\n- A zero market
  price no longer causes \"Ratio has zero denominator\" error\n  in valued reports.
  (#1373)\n\n## csv format\n\n- The new `decimal-mark` rule allows reliable number
  parsing\n  when CSV numbers contain digit group marks (eg thousands separators).\n\n-
  The CSV reader's verbose \"assignment\" debug output is now at level 9.\n\n\n# 1.19.1
  2020-09-07\n\n- Fix alignment of coloured numbers (#1345, #1349, Stephen Morgan)\n\n-
  Fix a regression in account type autodetection for accounts with\n  capitalised
  names. (#1341)\n\n- Allow megaparsec 9\n\n# 1.19 2020-09-01\n\n## general\n\n- When
  parsing dates, the year is now required to have at least four\n  digits. So eg we
  no longer accept `200/1/1` as a valid date, it\n  would need to be written `0200/1/1`.
  This was done for.. reasons,\n  and is experimental; let us know if it causes you
  trouble.\n\n- The --color/--colour=WHEN command line option, support for the\n  NO_COLOR
  environment variable, and smarter autodetection of colour\n  terminals have been
  added (#1296)\n\n- Command line options taking a numeric argument are now validated\n
  \ more carefully, preventing issues with unexpected negatives or Int\n  overflow.
  (Stephen Morgan)\n\n- In queries, you can now specify a quarter like `2020q1` or
  `q4`\n  (the q is case-insensitive). (#1247, Henning Thieleman, Stephen Morgan)\n\n-
  In report intervals, `fortnightly` has been added as a synonym for\n  `biweekly`.
  (Stephen Morgan)\n\n- -t and -l command line flags have been added as short forms
  of\n  --tree and --flat (#1286)\n\n- All reports displaying accounts now choose
  flat mode by default\n  (Stephen Morgan)\n\n- Reports now show at most 2 commodities
  of multicommodity amounts,\n  unless the --no-elide flag is used. This helps keep
  them readable by\n  default, since multicolumn, multicommodity balance reports otherwise\n
  \ tend to become very wide, especially in tree mode.\n\n- Numbers with more than
  255 decimal places, which we do not support,\n  now give an error instead of silently
  misparsing. (#1326)\n\n- Digit groups are now limited to at most 255 digits each.
  (#1326)\n\n- Account aliases (on command line or in journal) containing a bad\n
  \ regular expression now give a more detailed error message.\n\n- A tab character
  could get parsed as part of a commodity symbol, with\n  confusing results. This
  no longer happens. (#1301, Dmitry Astapov)\n\n- Debug output is now organised better
  by debug level.\n  The levels are:\n\n  0. normal command output only (no warnings)\n
  \ 1. useful warnings & most common troubleshooting info (valuation, eg)\n  2. common
  troubleshooting info, more detail\n  3. report options selection\n  4. report generation\n
  \ 5. report generation, more detail\n  6. input file reading\n  7. input file reading,
  more detail\n  8. command line parsing\n  9. any other rarely needed or more in-depth
  info\n\n- Added a missing lower bound for aeson, making cabal installs more\n  reliable.
  (#1268)\n\n- lib: parseAmountQueryTerm: allow whitespace around arg parts (#1312)\n
  \ Whitespace around the operator, sign, or number is now tolerated.\n\n## commands\n\n-
  account,bal,bs,cf,is: --drop now also works in tree mode (Stephen Morgan)\n\n- add:
  fix an error in the command line help (arguments are inputs,\n  not a query)\n\n-
  aregister: a new command showing a transaction-oriented account\n  register, like
  hledger-ui, hledger-web, or your bank statement. \n  Each line represents a whole
  transaction in one account, unlike\n  the register command which shows individual
  postings possibly from\n  multiple accounts. You might prefer aregister when reconciling\n
  \ real-world asset/liability accounts, and register when reviewing\n  detailed revenues/expenses.
  (#1294)\n\n- bal,bs,cf,is: boring parents are now elided by default in tabular\n
  \ balance reports too, like single-column reports. (Stephen Morgan)\n\n- bal,bs,cf,is:
  monthly column headings are no longer elided to just\n  the short month name, if
  multiple years are being displayed.\n\n- bal --budget's column headings are now
  end dates rather than\n  periods when appropriate (ie with --cumulative or --historical).\n\n-
  bs,cf,is: -%/--no-total no longer forces --no-total (Stephen Morgan)\n\n- bs,cf,is:
  --no-total now hides subtotals as well as the grand total\n  (Stephen Morgan)\n\n-
  codes: a new command for listing transaction codes\n\n- print: a new `sql` output
  format has been added (Dmitry Astapov)\n\n- roi: errors are now shown without a
  call stack\n\n- tags: add --parsed flag, hide empties without --empty. With the\n
  \ --parsed flag, all tags or values are shown in the order they are\n  parsed from
  the input data, including duplicates. With -E/--empty,\n  any blank/empty values
  will also be shown, otherwise they are\n  omitted.\n\n## journal format\n\n- account
  directives can specify a new `Cash` account type. This is a\n  subtype of `Asset`,
  denoting accounts which should be displayed\n  in `cashflow` reports. \n  \n- The
  built-in regular expressions for choosing default account types\n  have been tweaked,
  and documentation for account types has been\n  improved.\n\n## csv format\n\n-
  Inferring the appropriate default field separator based on file\n  extension (,
  for .csv, ; for .ssv, \\t for .tsv) now works as\n  documented.\n\n- Conditional
  rule patterns can now be grouped with the `&` (AND) operator,\n  allowing more powerful
  matching. (Michael Sanders)\n\n- Invalid csv rules files now give clearer parse
  error messages.\n  (Dmitry Astapov)\n\n- \"If tables\", a compact bulk format for
  conditional rules, have been\n  added. (Dmitry Astapov)\n\n- csv conversion with
  a lot of conditional rules is now faster (Dmitry Astapov)\n\n\n# 1.18.1 2020-06-21\n\n-
  journal: document recursive wildcards\n\n- by default, value reports work as in
  1.17; to infer market prices from\n  transactions, add the new --infer-value flag.
  (#1239, #1253)\n\n- organise debug output better\n\n- print: amounts in csv output
  now have commodity symbol, digit group\n  separators and prices removed (Dmitry
  Astapov)\n\n\n# 1.18 2020-06-07\n\n## General\n\n- The --forecast flag now takes
  an optional argument\n  (--forecast=PERIODICEXPR), allowing periodic transactions
  to\n  start/end on any date and to overlap recorded transactions.\n  (#835, #1236)
  (Dmitry Astapov)\n\n- An upper case file extension no longer confuses file format\n
  \ detection. (#1225)\n\n- In the commands list, redundant source scripts are now
  hidden\n  properly when a corresponding .com/.exe file exists. (#1225)\n\n- We now
  show `..` instead of `-` to indicate date ranges, eg in\n  report titles, to stand
  out more from hyphenated dates. \n  (Stephen Morgan)\n  \n- Period expressions (eg
  in -p, date:, and periodic rules) now accept\n  `to`, `until`, `-`, or `..` as synonyms.
  (Stephen Morgan)\n\n- When parsing amounts, whitespace between sign and number is
  now allowed.\n\n- A clearer error message is shown on encountering a malformed regular\n
  \ expression.\n\n## commands\n\n- commands allowing different output formats now
  list their supported\n  formats accurately in --help (#689)\n\n- commands allowing
  JSON output now actually produce JSON (#689)\n\n- bal, bs: show .. (not ,,) in report
  titles, like other reports\n\n## journal format\n\n- We now also infer market prices
  from transactions, like Ledger.\n  See https://hledger.org/hledger.html#market-prices
  (#1239). \n  \n  Upgrade note: this means value reports (-V, -X etc.) can give\n
  \ different output compared to hledger 1.17. If needed, you can\n  prevent this
  by adding a P directive declaring the old price, on or\n  after the date of the
  transaction causing the issue.\n\n- The include directive now accepts a file format
  prefix, like the\n  -f/--file option. This works with glob patterns too, applying
  the\n  prefix to each path. This can be useful when included files don't\n  have
  the standard file extension, eg:\n\n      include timedot:2020*.md\n\n- We now accept
  (and ignore) Ledger-style lot dates\n  (`[DATE]`) and four lot price forms (`{PRICE}`,
  `{{PRICE}}`,\n  `{=PRICE}`, `{{=PRICE}}`), anywhere after the posting amount but\n
  \ before any balance assertion.\n\n- We now accept Ledger-style parenthesised \"virtual
  posting\n  costs\" (`(@)`, `(@@)`). In hledger these are equivalent to the\n  unparenthesised
  form.\n\n- The unbalanced transaction error message is clearer, especially when\n
  \ postings all have the same sign, and is split into multiple lines\n  for readability.\n\n##
  csv format\n\n- You can now generate up to 99 postings in a transaction. (Vladimir
  Sorokin)\n\n- You can now generate postings with an explicit 0 amount. (#1112)\n\n-
  For each posting, when both numbered and unnumbered amount\n  assignments are active
  (eg: both `amount` and `amount1`), we ignore\n  the unnumbered ones. This makes
  it easier to override old `amount`\n  rules.\n  \n- Fix a 1.17.1 regression involving
  amount-in/amount-out. (#1226)\n\n- Assigning too many non-zero or zero values to
  a posting amount now\n  gives a clearer error. (#1226)\n\n\n# 1.17.1.1 2020-03-19\n\n-
  update bounds after some belated hledger-* version bumps\n\n# 1.17.1 2020-03-19\n\n-
  csv: amount1 no longer forces a second posting or second posting amount.\n  The
  \"special handling for pre 1.17 rules\" should now be less\n  noticeable. amount1/amount2
  no longer force a second posting or\n  explicit amounts on both postings. (Only
  amount/amount-in/amount-out\n  do that.) Error messages and handling of corner cases
  may be more\n  robust, also.\n\n- journal: a commodity directive without decimal
  mark now gives a more\n  verbose error message with examples\n\n- journal: inclusive
  balance assignments now work (#1207)\n\n- require newer Decimal, math-functions
  libs to ensure consistent\n  rounding behaviour, even when built with old GHCs/snapshots.
  \n  hledger uses banker's rounding (rounds to nearest even number, eg\n  0.5 displayed
  with zero decimal places is \"0\").\n\n# 1.17 2020-03-01\n\n## General\n\n- hledger's
  default date format is now YYYY-MM-DD (ISO-8601 dates).\n  (Brian Wignall, Jakob
  Schöttl, Simon Michael)\n\n- Drop the file format auto-detection feature.\n\n  For
  a long time hledger has auto-detected the file format when it's\n  not known, eg
  when reading from a file with unusual extension (like\n  .dat or .txt), or from
  standard input (-f-), or when using the\n  include directive (which currently ignores
  file extensions).  This\n  was done by trying all readers until one succeeded.  This
  worked\n  well in practice. But recent changes to timedot format have made\n  this
  kind of auto-detection unreliable. (timedot and journal formats\n  overlap).\n\n
  \ For predictability and to minimise confusion, hledger will no longer\n  guess;
  when there's no file extension or reader prefix available, it\n  always assumes
  journal format.\n\n  To specify one of the other formats, you must use its standard
  file\n  extension (`.timeclock`, `.timedot`, `.csv`, `.ssv`, `.tsv`), or a\n  reader
  prefix (`-f csv:foo.txt`, `-f timedot:-`).\n\n  Experimental, feedback welcome.\n\n-
  Fix extra $ symbol (Mateus Furquim)\n\n- --output-format now rejects invalid formats\n\n-
  Numbers in JSON output now provide a floating point Number\n  representation as
  well as our native Decimal object representation,\n  since the later can sometimes
  contain 255-digit integers. The\n  floating point numbers can have up to 10 decimal
  digits (and an\n  unbounded number of integer digits.)\n  Experimental, suggestions
  needed. (#1195)\n\n- Fix finding latest date in queryEndDate Or queries and simplify\n
  \ date comparison code. (Stephen Morgan)\n\n- Fix issue 457. (Jacek Generowicz)\n
  \ Issue #457 pointed out that commands such as\n\n      hledger ui 'amt:>200'\n\n
  \ failed. This was because the process of dispatching from `hledger ui`\n  to `hledger-ui`
  (note addition of `-`) lost the quotes around\n  `amt:>20` and the `>` character
  was interpreted as a shell redirection\n  operator, rather than as part of the argument.\n\n
  \ The machinery for quoting or escaping arguments which contain\n  characters which
  require quoting or escaping (thus far whitespace and\n  quotes) already existed.
  This solution simply adds shell stdio\n  redirection characters to this set.\n\n##
  commands\n\n- add: you can use `<` to undo and redo previous inputs (Gaith Hallak)\n\n-
  bs, cf, is, bal, print, reg: support json output\n\n- bs, cf, is: fix excess subreport
  columns in csv output\n\n- bs, cf, is, bal: fix an issue with border intersections
  in\n  --pretty-tables output. (Eric Mertens)\n\n- close: fix a rounding bug that
  could generate unbalanced transactions. (#1164)\n\n- close: hide cost prices by
  default, show them with --show-costs.\n  close no longer preserves costs (transaction
  prices) unless you ask\n  it to, since that can generate huge entries when there
  are many\n  foreign currency/investment transactions. (#1165)\n\n- close: equity
  amounts are omitted by default, for simpler entries;\n  -x/--explicit shows them
  (usually causing more postings). (#1165)\n\n- close: --interleaved generates equity
  postings alongside each closed\n  account, making troubleshooting easier.\n\n- close:
  \"equity:opening/closing balances\" is now the default\n  closing and opening account.\n\n-
  close: --close-desc/--open-desc customise the closing/opening\n  transaction descriptions.
  (#1165)\n\n- close: some --open*/--close* flags have been simplified for memorability:\n\n
  \ --closing -> --close\n  --opening -> --open\n  --close-to -> --close-acct\n  --open-from
  -> --open-acct\n\n  The old flags are accepted as hidden aliases, and deprecated.
  (#1165)\n\n- print, register: a new valuation type, --value=then, shows the\n  market
  value at each posting's date.\n\n- print: -V/-X/--value now imply -x/--explicit,
  as -B/--cost does.\n  This avoids a bug where print -V of a transaction with an
  implicit\n  commodity conversion would convert only some of its postings to value.\n\n##
  journal format\n\n- The include directive no longer tries all readers.  It now picks\n
  \ just one, based on the included file's extension, defaulting to\n  journal.  (It
  doesn't yet handle a reader prefix.)\n\n- The default commodity (D) directive now
  limits display precision too. (#1187)\n  D directives are now fully equivalent to
  commodity directives for\n  setting a commodity's display style. (Previously it
  couldn't limit\n  the number of decimal places.)  When both kinds of directive exist,\n
  \ commodity directives take precedence.  When there are multiple D\n  directives
  in the journal, only the last one affects display style.\n\n## csv format\n\n- Conditional
  blocks can now match single fields. \\o/\n\n- The experimental --separator command
  line option has been dropped,\n  replaced a new `separator` directive in CSV rule
  files. (Aleksandar Dimitrov)\n  Also the `.tsv` and `.ssv` file extensions are now
  recognised,\n  and set the default `separator` to TAB and semicolon respectively.\n
  \ (#1179)\n\n- Allow manual assignment of the \"expenses:unknown\" account name.
  (#1192)\n\n- CSV rule keywords are now case insensitive. (Aleksandar Dimitrov)\n\n##
  timeclock format\n\n- Misc. fixes making parsing more robust. (Jakob Schöttl)\n\n##
  timedot format\n\n- More support for org mode: org headlines can now be used for
  date\n  lines and timelog items (the stars are ignored). Also, any org\n  headlines
  before the first date line are ignored.\n\n- You can now write a description after
  a date, which will be used in\n  all of that day's transactions.\n\n\n# 1.16.2 2020-01-14\n\n-
  add support for megaparsec 8 (#1175)\n \n- close: mention --close-to/--open-from
  in docs\n \n# 1.16.1 2019-12-03\n\n- Drop unnecessary mtl-compat dependency\n\n-
  Fix building with GHC 8.0, 8.2\n\n# 1.16 2019-12-01\n\n## General\n\n- add support
  for GHC 8.8, base-compat 0.11 (#1090)\n\n- drop support for GHC 7.10\n\n- The benchmark
  suite has been disabled.\n\n- The --anon flag now also anonymises transaction codes
  and account\n  names declared with account directives. (Mykola Orliuk) (#901)\n\n##
  commands\n\n- balance/bs/cf/is: balance commands now support the -%/--percent flag\n
  \ to show amounts as percentages of the column's total. (Michael Kainer)\n\n  If
  there are multiple commodities involved in a report hledger bails\n  with an error
  message. This can be avoided by using -B/--cost. Also note\n  that if one uses -%
  with the balance command the chances are high that\n  all numbers are 0. This is
  due to the fact that by default balance sums\n  up to zero. If one wants to use
  -% in a meaningful way with balance one\n  has to add a query.\n\n  In order to
  keep the implementation as simple as possible --tree has no\n  influence over how
  the percentages are calculated, i.e., the percentages\n  always represent the fraction
  of the columns total. If one wants to know\n  the percentages relative to a parent
  account, one has to use a query to\n  narrow down the accounts.\n\n- balance: --budget
  no longer errors when there is neither budget nor\n  transactions in the report
  period (Dmitry Astapov)\n\n- balance: --budget has improved debug output (shows
  budget txns)\n  (Dmitry Astapov)\n\n- check-dates: now sets the exit status code
  (Amitai Burstein)\n\n- close: no longer strips zeroes after the decimal mark, and
  preserves\n  parseable output (#1137)\n\n- close: the --close-to, --open-from options
  allow closing/opening\n  account names to be chosen\n\n- import: create the journal
  if missing, like the add command\n  Streamlines import/migration instructions.\n\n-
  import: --catchup marks all transactions imported, without importing\n\n- import:
  more informative output: mention the input files, also show\n  a message when nothing
  was imported\n\n- prices: show price amounts with proper display style; always show\n
  \ full precision\n\n- roi: don't give an error with empty input data (Dmitry Astapov)\n\n-
  tests: unit tests are now run by tasty, and show coloured output by default (#1090).\n
  \ Test running options have changed, see the command help. \n  Some unit tests have
  been collapsed, so the reported test count has\n  dropped a little.\n\n## journal
  format\n\n- Fixed: wrong dates generated by certain periodic transaction rules,\n
  \ eg \"~ every 12 months from 2019/04\". (Dmitry Astapov) (#1085)\n\n## csv format\n\nCSV
  conversion is now more powerful (#1095, Dmitry Astapov, Simon Michael):\n\n- A variable
  number of postings can be generated, from zero to nine. (#627, #1095)\n\n- In conditional
  blocks, `skip` can be used to skip one or more\n  records after a pattern match,
  or the new `end` rule can be used to\n  skip all remaining records. (#1076)\n\n-
  The new `balance-type` CSV rule controls which kind of balance\n  assertions are
  generated (=, ==, =*, ==*)\n\n- Postings with balance assignments can be generated.
  (#1000)\n\n- Both the amount-in/amount-out fields having a non-empty value is now\n
  \ accepted, as long as one of them is zero. (#570)\n\n- Line feeds/carriage returns
  in (quoted) CSV values are now converted\n  to spaces during conversion. (#416,
  #841)\n\n- Field assignments can now unset a field (eg a posting can be\n  suppressed
  by assigning no value to its account).\n\n- CSV records with varying lengths are
  now allowed; short records will\n  be padded with empty fields as needed. This allows
  us to handle eg\n  exported Google spreadsheets, where trailing empty fields are
  omitted.\n\n- Journals generated from CSV are now finalised and checked like\n  ordinary
  journals (#1000). So invalid transactions generated from\n  CSV will be rejected,
  amount styles will be standardised etc.\n\n- Fixed: we no longer add an extra (third)
  space between description and comment.\n\n- Fixed: whitespace on the line after
  an if block no longer causes misparsing. (#1120)\n\n- Fixed: an empty field assignment
  no longer consumes the next line. (#1001)\n\n- Fixed: interpolation of field names
  containing punctuation now works.\n\n- Docs have been rewritten and clarified.\n\nMigration
  notes:\n\n- When `print`ing from CSV, there is now one less space between\n  transaction
  descriptions and comments, which may generate noisy\n  diffs if you are comparing
  old and new reports. diff -w\n  (--ignore-all-space) will filter these out.\n\n-
  CSV rules now give you more freedom to generate any journal\n  entries you want,
  including malformed or unbalanced ones. \n  The csv reader now checks the journal
  after conversion,\n  so it will report any problems with the generated entries.\n\n-
  Balance assertions generated from CSV are not checked, currently.\n  This is appropriate
  when you are downloading partial CSV data to\n  be merged into your main journal.
  If you do need to check balance\n  assertions right away, you can pipe through hledger
  again:\n\n      $ hledger -f a.csv print | hledger -f- print\n\n\n\n# 1.15.2 2019-09-05\n\n-
  -V and -X now respect a report end date (set with -e or -p or date:)\n  when choosing
  the valuation date (which determines the market prices\n  used). This is how -V
  works in hledger 1.14 and Ledger, and it means\n  that -V isn't exactly equivalent
  to either --value=end or\n  --value=now. Possibly some other corner cases in valuation
  have been\n  fixed as well. \"Effect of --value on reports\" in the hledger manual\n
  \ has been updated and is more accurate.\n\n# 1.15.1 2019-09-02\n\n- add commodities,
  descriptions, diff, notes, payees commands to manual\n\n# 1.15 2019-09-01\n\n##
  General\n\n- There is a new valuation option `--value=TYPE[,COMM]`, with\n  backwards-compatible
  `-B/--cost`, `-V/--market`, `-X/--exchange=COMM`\n  variants. These provide control
  over valuation date (#329), and\n  inference of indirect market prices (similar
  to Ledger's -X) (#131).\n  Experimental.\n  \n- Market valuation (-V/-X/--value)
  is now much faster (#999):\n\n      +-------------------------------------------++--------------+--------------+\n
  \     |                                           || hledger-1.14 | hledger-1.15
  |\n      +===========================================++==============+==============+\n
  \     | -f examples/10000x1000x10.journal bal -Y  ||         2.43 |         2.44
  |\n      | -f examples/10000x1000x10.journal bal -YV ||        44.91 |         6.48
  |\n      | -f examples/10000x1000x10.journal reg -Y  ||         4.60 |         4.15
  |\n      | -f examples/10000x1000x10.journal reg -YV ||        61.09 |         7.21
  |\n      +-------------------------------------------++--------------+--------------+\n\n-
  How date options like `-M` and `-p` interact has been updated and clarified.\n  (Jakob
  Schöttl) (#1008, #1009, #1011)\n\n- Restore `--aux-date` and `--effective` as `--date2`
  aliases (#1034).\n  These Ledger-ish spellings were dropped over the years, to improve\n
  \ `--help`'s layout. Now we support them again, as semi-hidden flags\n  (`--help`
  doesn't list them, but they are mentioned in `--date2`'s help).\n\n## commands\n\n-
  add, web: on Windows, trying to add transactions to a file path\n  containing trailing
  periods (eg `hledger add -f  Documents.\\.hledger.journal`) \n  now gives an error,
  since this could cause data loss otherwise (#1056).\n  This affects the add command
  and hledger-web's add form.\n\n- bal: --budget: don't always convert to cost.\n\n-
  bal: --budget: don't show a percentage when budgeted and actual\n  amounts are in
  different commodities.\n\n- bal/bs/bse: `-H/--historical` or `--cumulative` now
  disables `-T/--row-total` (#329).\n  Multiperiod balance reports which show end
  balances (eg, `bal -MH` or `bs -M`)\n  no longer show a Totals column, since summing
  end balances generally\n  doesn't make sense.\n\n- bs: show end date(s) in title,
  not transactions date span (#1078)\n  Compound balance reports showing ending balances
  (eg balancesheet),\n  now show the ending date (single column) or range of ending\n
  \ dates (multi column) in their title. ,, (double comma) is used\n  rather than
  - (hyphen) to suggest a sequence of discrete dates\n  rather than a continuous span.\n\n-
  close: preserve transaction prices (costs) accurately (#1035).\n  The generated
  closing/opening transactions were collapsing/misreporting\n  the costs in balances
  involving multiple costs.\n  Now, each separately-priced amount gets its own posting.\n
  \ (And only the last of these (for each commodity) gets a balance assertion.)\n
  \ Also the equity posting's amount is now always shown explicitly, \n  which in
  multicommodity situations means that multiple equity postings are shown. \n  The
  upshot is that a balance -B report will be unchanged after\n  the closing & opening
  transactions generated by the close command.\n\n- descriptions, payees, notes commands
  added (Caleb Maclennan)\n\n- diff: Gabriel Ebner's hledger-diff is now a built in
  command,\n  and https://github.com/gebner/hledger-diff is deprecated.\n\n- help:
  don't require a journal file\n\n- print: now also canonicalises the display style
  of balance assertion amounts (#1042)\n\n- reg: show negative amounts in red, like
  balance and Ledger\n\n- reg: fix `--average`, broken since 1.12 (#1003)\n\n- stats:
  show count of market prices (P directives), and the commodities covered\n\n- tags:
  add --values flag to list tag values.\n\n- tags: now runs much faster when there
  many tags\n\n## journal format\n\n- Transactions and postings generated/modified
  by periodic transaction\n  rules and/or transaction modifier rules are now marked
  with tags\n  (`generated-transaction`, `generated-posting`, `modified`) for\n  easier
  troubleshooting and filtering.\n\n## csv format\n\n- When interpolating CSV values,
  outer whitespace is now stripped.\n  This removes a potential snag in amount field
  assignments (#1051),\n  and hopefully is harmless and acceptable otherwise.\n\n-
  We no longer add inter-field spaces in CSV error messages.\n  Some CSV errors would
  show the problem record, eg:\n\n      2000-01-01,a,\"1\"\n  \n  with extra spaces
  added, eg:\n\n      the CSV record is: \"2000-01-01\", \"a\", \"1\"\n\n  which was
  inaccurate and not valid RFC-4180 CSV format.\n\n- CSV parse errors are human-readable
  again (broken since 1.11) (#1038)\n\n- CSV rules now allow the amount to be unassigned,
  if there is an\n  assignment to \"balance\" (generating a balance assignment in
  this\n  case). (#1000)\n\n\n# 1.14.2 2019-03-20\n\n- require easytest <0.3 to fix
  build issue\n\n- fix some CSV parse errors which weren't in human readable format\n\n#
  1.14.1 2019-03-01\n\n- fix missing Commodities.txt build error\n\n# 1.14 2019-03-01\n\n-
  journal: subaccount-including balance assertions have been\n  added, with syntax
  =* and ==* (experimental) (#290)\n\n- new commodities command lists commodity symbols\n\n-
  new --invert option flips sign of amounts in reports\n\n# 1.13.2 2019-02-04\n\n-
  print, register: restore the accidentally dropped -o, -O flags (#967)\n\n# 1.13.1
  2019-02-02\n\n- stop depending on here to avoid haskell-src-meta/stackage blockage.\n\n#
  1.13 2019-02-01\n\n- cli: reorganised commands list. Addons now have a + prefix.\n\n-
  cli: the command line help and manual section for all hledger's\n  commands are
  now consistent, and generated from the same source.\n\n- cli: comprehensive bash
  completion support is now provided (in\n  shell-completion/). See how-to in the
  Cookbook. (Jakob Schöttl)\n\n- balance --budget: budget amounts now aggregate hierarchically,
  like\n  account balances. Unbudgeted accounts can be shown with -E/--empty\n  (along
  with zero-balance accounts), and the --show-budgeted flag has\n  been dropped.  (Dmitry
  Astapov)\n\n- balance: new --transpose flag switches the rows and columns of\n  tabular
  balance reports (in txt and csv output formats). (Dmitry\n  Astapov)\n\n- close:
  generated balance assertions now have exact amounts with all\n  decimal digits,
  ignoring display precision. Also, balance assertion\n  amounts will no longer contain
  prices. (#941, #824, #958)\n\n- files: now shows up in the commands list\n\n- import:
  be silent when there's nothing to import\n\n- roi: percentages smaller than 0.01%
  are displayed as zero (Dmitry\n  Astapov)\n\n- stats, ui: correct file order is
  preserved when using --auto (#949)\n\n- journal: account directive: the account
  name can now be followed by\n  a comment on the same line\n\n- journal: account
  directive: account types for the bs/bse/cf/is\n  commands can now be set with a
  `type:` tag, whose value is `Asset`,\n  `Liability`, `Equity`, `Revenue`, `Expense`,
  `A`, `L`, `E`, `R` or\n  `X` (case-insensitive).  The previous syntax (`account
  assets A`) is\n  now deprecated.\n\n- journal: account directive: account sort codes
  like `account 1000`\n  (introduced in 1.9, deprecated in 1.11) are no longer supported.\n\n-
  journal: transaction modifiers (auto postings) can affect periodic\n  transactions
  (--auto can add postings to transactions generated with\n  --forecast). (Dmitry
  Astapov)\n\n- journal: balance assertion errors now show exact amounts with all\n
  \ decimal digits.  Previously it was possible, in case of a commodity\n  directive
  limiting the display precision, to have a balance\n  assertion error with asserted
  and actual amounts looking the\n  same. (#941)\n\n- journal: fixed a periodic transaction
  parsing failure (#942) (Dmitry\n  Astapov)\n\n# 1.12.1 2018-12-03\n\n-   roi: use
  math-functions lib instead of statistics,\n    be more stackage nightly compatible\n\n#
  1.12 2018-12-02\n\n-   install script: ensure a new-enough version of stack; more
  informative output\n\n-   build with GHC 8.6/base-4.12 (Peter Simons)\n\n-   add
  required upper bound for statistics (Samuel May)\n\n-   --anon anonymises more thoroughly
  (including linked original postings) (Moritz Kiefer)\n\n-   unbalanced transaction
  errors now include location info (Mykola Orliuk)\n\n-   accounts command: --drop
  also affects the default flat output, without needing an explicit --flat flag\n\n-
  \  accounts command: the --codes flag has been dropped\n\n-   accounts command:
  filtering by non-account-name queries now works\n\n-   add command: fix transaction
  rendering regression during data entry and in journal file\n\n-   balance command:
  fix wrongful eliding of zero-balance parent accounts in tree mode (Dmitry Astapov)\n\n-
  \  journal format, bs/bse/cf/is commands: account directives can declare account
  types (#877)\n    Previously you had to use one of the standard english account
  names\n    (assets, liabilities..) for top-level accounts, if you wanted them to\n
  \   appear in the right place in the balancesheet, balancesheetequity,\n    cashflow
  or incomestatement reports.\n\n    Now you can use your preferred account names,
  and use account directives\n    to declare which accounting class (Asset, Liability,
  Equity, Revenue or\n    eXpense) an account (and its subaccounts) belongs to, by
  writing one of\n    the letters A, L, E, R, X after the account name, after two
  or more\n    spaces. This syntax may change (see issue). Experimental.\n\n    Currently
  we allow unlimited account type declarations anywhere in the\n    account tree.
  So you could declare a liability account somewhere under\n    assets, and maybe
  a revenue account under that, and another asset account\n    even further down.
  In such cases you start to see oddities like accounts\n    appearing in multiple
  places in a tree-mode report. I have left it this\n    way for now in case it helps
  with, eg, modelling contra accounts, or\n    combining multiple files each with
  their own account type\n    declarations. (In that scenario, if we only allowed
  type declarations on\n    top-level accounts, or only allowed a single account of
  each type,\n    complications seem likely.)\n\n-   journal format: periodic transaction
  rules now require a double space separator.\n    In periodic transaction rules which
  specify a transaction description or\n    same-line transaction comment, this must
  be separated from the period\n    expression by two or more spaces, to prevent ambiguous
  parsing. Eg\n    this will parse correctly as \"monthly\" thanks to the double space:\n\n
  \       ~ monthly  In 2020 we'll end this monthly transaction.\n\n-   journal format:
  exact/complete balance assertions (Samuel May).\n    A stronger kind of balance
  assertion, written with a double equals sign,\n    asserts an account's complete
  account balance, not just the balance in\n    one commodity. (But only if it is
  a single-commodity balance, for now.)\n    Eg:\n\n        1/1\n          (a)  A
  1\n          (a)  B 1\n          (a)  0   =  A 1   ; commodity A balance assertion,
  succeeds\n          (a)  0   == A 1   ; complete balance assertion, fails\n\n-   journal
  format: account directives now allow whitespace or a comment after the account name\n\n-
  \  journal format: using \\~ for home directory in include directives now works
  (#896) (Mykola Orliuk)\n\n-   journal format: prevent misleading parse error messages
  with cyclic include directives (#853) (Alex Chen)\n\n-   journal format: transaction
  modifier multipliers handle total-priced amounts correctly (#928).\n    Multipliers
  (*N) in transaction modifier rules did not multiply\n    total-priced amounts properly.
  Now the total prices are also multiplied,\n    keeping the transaction balanced.\n\n-
  \  journal format: do amount inference/balance assignments/assertions before transaction
  modifiers (#893, #908) (Jesse Rosenthal)\n    Previously, transaction modifier (auto
  postings) rules were applied\n    before missing amounts were inferred. This meant
  amount multipliers could\n    generate too many missing-amount postings, making
  the transaction\n    unbalanceable (#893).\n\n    Now, missing amount inference
  (and balance assignments, and balance\n    assertions, which are interdependent)
  are done earlier, before\n    transaction modifier rules are applied (#900, #903).\n\n
  \   Also, we now disallow the combination of balance assignments and\n    transaction
  modifier rules which both affect the same account, which\n    could otherwise cause
  confusing balance assertion failures (#912).\n    (Because assignments now generate
  amounts to satisfy balance assertions\n    before transaction modifier rules are
  applied (#908).)\n\n-   journal format: periodic transaction rules are now aware
  of Y default year directives. (#892)\n    Ie when a default year Y is in effect,
  they resolve partial or relative\n    dates using Y/1/1 as the reference date, rather
  than today's date.\n\n# 1.11.1 2018-10-06\n\n-   fix wrong transaction rendering
  in balance assertion errors and when\n    using the add command\n\n# 1.11 2018-09-30\n\n-
  \  The default display order of accounts is now influenced by\n    the order of
  account directives. Accounts declared by account\n    directives are displayed first
  (top-most), in declaration order,\n    followed by undeclared accounts in alphabetical
  order. Numeric\n    account codes are no longer used, and are ignored and considered\n
  \   deprecated.\n\n    So if your accounts are displaying in a weird order after
  upgrading,\n    and you want them alphabetical like before, just sort your account\n
  \   directives alphabetically.\n\n-   Account sorting (by name, by declaration,
  by amount) is now more\n    robust and supported consistently by all commands (accounts,\n
  \   balance, bs..) in all modes (tree & flat, tabular & non-tabular).\n\n-   close:
  new --opening/--closing flags to print only the opening or\n    closing transaction\n\n-
  \  files: a new command to list included files\n\n-   prices: query arguments are
  now supported. Prices can be filtered by\n    date, and postings providing transaction
  prices can also be filtered.\n\n-   rewrite: help clarifies relation to print --auto
  (#745)\n\n-   roi: a new command to compute return on investment, based on hledger-irr\n\n-
  \  test: has more verbose output, more informative failure messages,\n    and no
  longer tries to read the journal\n\n-   csv: We use a more robust CSV lib (cassava)
  and now support\n    non-comma separators, eg --separator ';' (experimental, this
  flag\n    will probably become a CSV rule) (#829)\n\n-   csv: interpolated field
  names in values are now properly case insensitive, so\n    this works:\n\n        fields
  \ ...,Transaction_Date,...\n        date %Transaction_Date\n\n-   journal: D (default
  commodity) directives no longer break multiplier\n    amounts in transaction modifiers
  (AKA automated postings) (#860)\n\n-   journal: \"Automated Postings\" have been
  renamed to \"Transaction Modifiers\".\n\n-   journal: transaction comments in transaction
  modifier rules are now parsed correctly. (#745)\n\n-   journal: when include files
  form a cycle, we give an error instead\n    of hanging.\n\n-   upper-case day/month
  names in period expressions no longer give an error (#847, #852)\n\n# 1.10 2018-06-30\n\n-
  \  journal: many parse error messages have become more informative, and\n    some
  now show the source line and error location.\n\n-   journal: ;tag: is no longer
  parsed as a tag named \";tag\" (#655)\n\n-   journal: transaction price amounts
  having their own price amounts is\n    now a parse error\n\n-   journal: amounts
  with space as digit group separator and trailing whitespace\n    now parse correctly
  (#780)\n\n-   journal: in amounts containing digits and a single space, the space\n
  \   is now interpreted as a digit group separator, not a decimal separator (#749)\n\n-
  \  journal: in commodity/format/D directives, the amount must now include a decimal
  separator.\n\n    When more precise control is needed over number parsing, our\n
  \   recommended solution is commodity directives. Commodity directives\n    that
  don't specify the decimal separator leave things ambiguous,\n    increasing the
  chance of misparsing numbers. In some cases it could\n    cause amounts with a decimal
  point to be parsed as if with a digit\n    group separator, so 1.234 became 1234.\n\n
  \   It seems the simple and really only way to do this reliably is to require\n
  \   an explicit decimal point character. Most folks probably do this already.\n
  \   Unfortunately, it makes another potential incompatibility with ledger and\n
  \   beancount journals. But the error message will be clear and easy to\n    work
  around.\n\n-   journal: directives currently have diverse and somewhat tricky\n
  \   semantics, especially with multiple files. The manual now describes\n    their
  behaviour precisely.\n\n-   journal: `alias` and `apply account` directives now
  affect `account` directives (#825)\n\n-   journal: periodic transactions can now
  have all the usual transaction fields\n    (status mark, code, description, comment),
  for generating more expressive\n    forecast transactions.\n\n-   journal: forecast
  transactions now have the generating period\n    expression attached as a tag named
  \"recur\".\n\n-   journal: periodic transactions now start on the first instance
  of the\n    recurring date, rather than the day after the last regular transaction
  (#750)\n\n-   journal: periodic transaction rules now allow period expressions relative
  to today's date\n\n-   csv: amount-in/amount-out errors are more detailed\n\n-   balance:
  --drop is now ignored when not in flat mode,\n    rather than producing a corrupted
  report (#754)\n\n-   budget: --drop now preserves the <unbudgeted> top-level account
  in --budget reports\n\n-   register: in CSV output, the code field is now included
  (#746)\n\n-   smart dates now allow the YYYYMM format, and are better documented\n\n-
  \  use hledger-lib 1.10\n\n# 1.9.1 2018-04-30\n\n-   use hledger-lib 1.9.1\n\n-
  \  budget (balance --budget): monthly columns are displayed in the\n    proper order.
  This fixes a regression in 1.9.\n\n-   budget: budgets can be built from periodic
  transactions with\n    different intervals again. In 1.9, budgets were restricted
  to a\n    single interval, but this was a mistake. This restores the 1.5\n    behaviour.\n\n-
  \  budget: budget reports are more intuitive and much less likely to\n    produce
  no output.\n\n-   budget: when no report interval is specified, a budget report
  for\n    the whole journal period is shown.\n\n-   budget: periodic transactions
  and the requested report period can\n    each have their own start/end dates, and
  the resulting report will\n    span the union of those periods, showing zeroes where
  data is\n    missing.\n\n-   budget: total row and total/average columns are now
  calculated correctly\n\n-   budget: actual, percentage, and goal amounts are now
  aligned in\n    columns for better readability (usually, unless numbers get huge).\n\n-
  \  budget: combining --budget and --sort-amount is not yet supported\n    and now
  gives an error.\n\n-   csv: handle \"-%amount\" in a rule when the CSV amount is
  parenthesised (#736)\n\n-   journal: automated postings are now generated early,
  before journal finalisation,\n    so they are present for amount inference, transaction
  balancing, and balance assertions\n    (#729)\n\n-   journal: automated postings
  are now inserted right after the posting that triggered them\n    (#729)\n\n-   cli:
  command-line account aliases are now applied early, before journal finalisation,\n
  \   so they are equivalent to alias directives in the journal (#730)\n\n-   journal:
  inferred amounts now have the appropriate standard amount style applied\n    (setting
  the precision correctly, eg). (#737)\n\n-   journal: when checking for balanced
  transactions, amount styles declared with\n    commodity directives are also used
  (previously only inferred amount styles were).\n\n# 1.9 2018-03-31\n\n-   support
  ghc 8.4, latest deps\n\n-   journal: account directives can define a numeric account
  code to\n    customize sorting. bal/bs/cf/is will sort accounts by account code,\n
  \   if any, then account name.\n\n-   journal: support scientific number notation
  (#704, #706)\n\n-   csv: reading a CSV file containing no records is no longer an
  error\n\n-   cli: when the system text encoding is UTF-8, ignore any UTF-8 BOM\n
  \   prefix found when reading files. (Paypal's new CSV has this BOM\n    prefix,
  causing a confusing parse error.)\n\n-   cli: tabular reports no longer have a trailing
  blank line added.\n    (This allows omitting the \">=0\" delimiters in our functional
  tests,\n    making them easier to read and maintain.)\n\n-   acc: the accounts command
  now has --declared and --used flags\n\n-   bal: the --invert flag flips all signs\n\n-
  \  bal: --drop now works with CSV output\n\n-   bal/bs/bse/cf/is: show overall report
  span in title\n\n-   bal/bs/bse/cf/is: show short month names as headings in monthly
  reports\n\n-   bal/bs/bse/cf/is: these commands can now generate HTML output\n\n-
  \  bal/bs/is/cf: drop short name and indent fields from multicolumn CSV\n\n-   bs/bse/cf/is:
  these, the \"financial statement\" commands, now show\n    normal income, liability
  and equity balances as positive numbers.\n    Negative numbers now indicate a contra-balance
  (eg an overdrawn\n    checking account), a net loss, or a negative net worth. This
  makes\n    these reports more like conventional financial statements, and easier\n
  \   to read and share with others. (Other commands, like balance, have not\n    changed.)
  (experimental)\n\n-   bs/cf/is: always show a tabular report, even with no report\n
  \   interval. Previously you would get a simple borderless report like\n    the
  original balance command. Less code, fewer bugs.\n\n-   bs/bse/cf/is: in CSV output,
  don't repeat the headings row for each subreport\n\n-   budget: warn that CSV output
  with bal --budget is unimplemented\n\n-   budget: bal --budget shows budget goals
  even with no or zero actual amounts.\n    Makes budget reports more intuitive, at
  the cost of a temporary hack\n    which may misorder columns in some cases (if actual
  and budget\n    activity occur in a different range of columns).\n\n-   budget:
  --budget uses only periodic txns with the selected interval.\\\n    Budgets with
  different interval, eg a daily and weekly budget, are independent.\n\n-   budget:
  show mostly fixed-width columns for readability\n\n-   budget: fix bug where a budget
  report could include budget goals\n    ending on the day before the report start
  date (splitSpan issue)\n\n-   close: the equity command has been renamed to close.
  It now ignores\n    any begin date (it always closes historical end balances). It
  also\n    ignores --date2.\n\n# 1.5 2017-12-31\n\n-   --auto adds Ledger-style automated
  postings to transactions (Dmitry Astapov, Mykola Orliuk)\n\n-   --forecast generates
  Ledger-style periodic transactions in the future (Dmitry Astapov, Mykola Orliuk)\n\n-
  \  -V/--value uses today's market prices by default, not those of last transaction
  date. #683, #648\n\n-   add: suggest implied (parent) and declared (by account directives)
  account names also\n\n-   bal: --budget shows performance compared to budget goals
  defined\n    with periodic transactions. Accounts with budget goals are\n    displayed
  folded (depth-clipped) at a depth matching the budget\n    specification. Unbudgeted
  accounts are hidden, or with\n    --show-unbudgeted, shown at their usual depth.
  (Dmitry Astapov)\n\n-   import: the output of --dry-run is now valid journal format\n\n-
  \  print: -B shows converted amounts again, as in 1.1, even without\n    -x. #551
  (Mykola Orliuk, Simon Michael)\n\n-   tag: the first argument now filters tag names,
  additional arguments\n    filter transactions (#261)\n\n-   remove upper bounds
  on all but hledger* and base (experimental)\n\n# 1.4 2017-09-30\n\n-   cli: a @FILE
  argument reads flags & args from FILE, one per line\n\n-   cli: reorganized commands
  list, added some new command aliases:\n\n    -   accounts: a\n    -   balance: b\n
  \   -   print: p, txns\n    -   register: r\n\n-   cli: accept -NUM as a shortcut
  for --depth=NUM (eg: -2)\n\n-   cli: improve command-line help for --date2 (#604)\n\n-
  \  cli: make --help and -h the same, drop --man and --info for now (#579)\n\n-   help:
  offers multiple formats, accepts topic substrings.\n    The separate info/man commands
  have been dropped. help now\n    chooses an appropriate documentation format as
  follows:\n\n    -   it uses info if available,\n    -   otherwise man if available,\n
  \   -   otherwise $PAGER if defined,\n    -   otherwise less if available,\n    -
  \  otherwise it prints on stdout\n    -   (and it always prints on stdout when piped).\n\n
  \   You can override this with the `--info`/`--man`/`--pager`/`--cat` flags.\n    (#579)\n\n-
  \  bal/bs/cf/is: --sort-amount/-S sorts by largest amount instead of\n    account
  name\n\n-   bs/cf/is: support --output-file and --output-format=txt\\|csv\n    The
  CSV output should be reasonably ok for dragging into a\n    spreadsheet and reformatting.\n\n-
  \  bal/bs/cf/is: consistent double space between columns, consistent\n    single
  final blank line. Previously, amounts wider than the column\n    headings would
  be separated by only a single space.\n\n-   bs/is: don't let an empty subreport
  disable the grand totals (fixes #588)\n\n-   cf: exclude asset accounts with \":fixed\"
  in their name (Christian G. Warden, Simon Michael, #584)\n\n-   new balancesheetequity
  command: like balancesheet but also shows\n    equity accounts (Nicholas Niro)\n\n-
  \  new import command: adds new transactions seen in one or more input\n    files
  to the main journal file\n\n-   print: --new shows only transactions added since
  last time\n    (saves state in .latest.JOURNALFILE file)\n\n-   new tags command:
  lists tags in matched transactions\n\n-   most addons formerly shipped in bin/ are
  now builtin commands. These\n    include: check-dates, check-dupes, equity, prices,
  print-unique,\n    register-match, rewrite.\n\n-   refactor: new Commands module
  and subdirectory.\n    Builtin commands are now gathered more tightly in a single
  module,\n    Hledger.Cli.Commands, facilitating change. The legacy \"convert\"\n
  \   command has been dropped.\n\n-   refactor: BalanceView -> CompoundBalanceCommand\n\n-
  \  deps: drop support for directory < 1.2\n\n-   deps: allow ansi-terminal 0.7\n\n-
  \  deps: drop oldtime flag, require time 1.5+\n\n-   deps: simplify shakespeare
  bounds\n\n-   deps: remove ghc < 7.6 support\n\n# 1.3.1 2017-08-25\n\n-   bs/is:
  don't let an empty subreport disable the grand totals (#588)\n\n-   allow megaparsec
  6 (#594)\n\n-   allow megaparsec-6.1 (Hans-Peter Deifel)\n\n-   restore upper bounds
  on hledger packages\n\n# 1.3 2017-06-30\n\nThe \"uncleared\" transaction/posting
  status, and associated UI flags\nand keys, have been renamed to \"unmarked\" to
  remove ambiguity and\nconfusion. This means that we have dropped the `--uncleared`
  flag,\nand our `-U` flag now matches only unmarked things and not pending\nones.
  See the issue and linked mail list discussion for more\nbackground. (#564)\n\nAlso
  the -P short flag has been added for --pending, and the -U/-P/-C\nflags can be combined.\n\nbs/is:
  fix \"Ratio has zero denominator\" error (#535)\n\nbs/is/cf: fix --flat (#552) (Justin
  Le, Simon Michael)\n\nbal/bs/is/cf: show negative amounts in red (Simon Michael,
  Justin Le).\nThese commands now shows negative amounts in red, when hledger detects\nthat
  ANSI codes are supported, (ie when TERM is not \"dumb\" and stdout\nis not being
  redirected or piped).\n\nprint: show pending mark on postings (fixes #563).\nA pending
  mark on postings is now displayed, just like a cleared mark.\nAlso there will now
  be a space between the mark and account name.\n\nprint: amounts are now better aligned,
  eg when there are posting\nstatus marks or virtual postings\n\n# 1.2 2017-03-31\n\n##
  CLI\n\n\"hledger\" and \"hledger -h\" now print a better organised commands list\nand
  general usage message respectively (#297).\n\nThe common reporting flags can now
  be used anywhere on the command line.\n\nFixed deduplication of addons in commands
  list.\n\nFixed ugly stack traces in command line parse error messages.\n\nThe -V/--value
  flag is now a global report flag, so it works with\nbalance, print, register, balancesheet,
  incomestatement, cashflow,\netc. (Justin Le)\n\nThe `--pivot` global reporting option
  replaces all account names with\nthe value of some other field or tag. It has been
  improved, eg:\n\n-   we don't add the field/tag name name as a prefix\n-   when
  pivoting on a tag, if the tag is missing we show a blank\n    (rather than showing
  mixed tag values and account names)\n-   a pipe character delimiter may be used
  in descriptions to get a more accurate\n    and useful payee report (`hledger balance
  --pivot payee`)\n\noptions cleanups\n\n## Addons\n\nEasier installation:\nmove add-ons
  and example scripts to bin/,\nconvert to stack scripts,\nadd a build script to install
  all deps,\nadd some functional tests,\ntest add-ons with Travis CI,\nadd installation
  docs to download page.\n\nImproved docs:\nall addons now contain their own documentation.
  Most of them (all but\nhledger-budget) use a new reduced-boilerplate declaration
  format\nand can show short (-h) and long (--help) command line help.\n(Long help
  is declared with pre and postambles to the generated\noptions help, short help is
  that truncated at the start of the hledger\ncommon flags.)\n\n`hledger` now shows
  a cleaner list of addon commands, showing only the\ncompiled version of an addon
  when both source and compiled versions\nare in $PATH. (Addons with .exe extension
  or no extension are\nconsidered compiled. Modification time is not checked, ie,
  an old\ncompiled addon will override a newer source version. If there are\nthree
  or more versions of an addon, all are shown. )\n\nNew addons added/included:\n\n-
  \  autosync - example symlink to ledger-autosync\n-   budget - experimental budget
  reporting command supporting Ledger-like periodic transactions and automated transactions
  (Mykola Orliuk)\n-   chart - pie-chart-generating prototype, a repackaging of the
  old hledger-chart tool\n-   check - more powerful balance assertions (Michael Walker)\n-
  \  check-dupes - find accounts sharing the same leaf name (Stefano Rodighiero)\n-
  \  prices - show all market price records (Mykola Orliuk)\n-   register-match -
  a helper for ledger-autosync's deduplication, finds best match for a transaction
  description\n\nThe equity command now always generates a valid journal transaction,\nhandles
  prices better, and adds balance assertions (Mykola Orliuk).\n\nThe rewrite command
  is more robust and powerful (Mykola Orliuk):\n\n-   in addition to command-line
  rewrite options, it understands rewrite rules\n    defined in the journal, similar
  to Ledger's automated transactions (#99).\n    Eg:\n\n        = ^income\n            (liabilities:tax)
  \ *.33\n\n        = expenses:gifts\n            budget:gifts  *-1\n            assets:budget
  \ *1\n\n-   it can generate diff output, allowing easier review of the proposed\n
  \   changes, and safe modification of original journal files (preserving\n    file-level
  comments and directives). Eg:\n\n        hledger-rewrite --diff Agency --add-posting
  'Expenses:Taxes  *0.17' | patch\n\n-   rewrites can affect multiple postings in
  a transaction, not just one.\n\n-   posting-specific dates are handled better\n\n##
  balance\n\nA new --pretty-tables option uses unicode characters for rendering\ntable
  borders in multicolumn reports (#522) (Moritz Kiefer)\n\n## balancesheet/cashflow/incomestatement\n\nThese
  commands are now more powerful, able to show multicolumn reports\nand generally
  having the same features as the balance command. (Justin Le)\n\nbalancesheet has
  always ignored a begin date specified with a `-b` or\n`-p` option; now it also ignores
  a begin date specified with a `date:`\nquery. (Related discussion at #531)\n\n##
  print\n\nThe output of print is now always a valid journal (fixes #465) (Mykola
  Orliuk).\n\nprint now tries to preserves the format of implicit/explicit balancing\namounts
  and prices, by default. To print with all amounts explicit,\nuse the new `--explicit/-x`
  flag (fixes #442). (Mykola Orliuk)\n\nDon't lose the commodity of zero amounts/zero
  balance assertions (fixes #475) (Mykola Orliuk)\n\n## Misc\n\nFix a regression in
  the readability of option parsing errors (#478) (Hans-Peter Deifel)\n\nFix an example
  in Cli/Main.hs (Steven R. Baker)\n\nAllow megaparsec 5.2 (#503)\n\n# 1.1 2016-12-31\n\n##
  balance\n\n-   with -V, don't ignore market prices in the future (#453, #403)\n\n-
  \  with -V and multiple same-date market prices, use the last parsed not the highest
  price (#403)\n\n## misc\n\n-   fix non-existent \"oldtime\" dependency (#431)\n\n-
  \  extra/hledger-equity.hs now generates valid journal format when there are multiple
  commodities\n\n# 1.0.1 2016-10-27\n\n-   allow megaparsec 5.0 or 5.1\n\n-   fix
  benchmark build failure (#423)\n\n# 1.0 2016-10-26\n\n## add\n\n-   suggest only
  one commodity at a time as default amount (#383)\n\n    (since we currently can't
  input more than one at a time)\n\n## balance\n\n-   added --change flag for consistency\n\n-
  \  -H/--historical now also affects single-column balance reports with a start date
  (#392).\n\n    This has the same effect as just omitting the start date, but adds
  consistency.\n\n-   in CSV output, render amounts in one-line format (#336)\n\n##
  balancesheet\n\n-   fix an infinite loop (#393)\n\n## print\n\n-   in CSV output,
  fix and rename the transaction id field\n\n## register\n\n-   fix a sorting regression
  with --date2 (#326)\n\n-   --average/-A is now affected by --historical/-H\n\n-
  \  added --cumulative flag for consistency\n\n-   in CSV output, include the transaction
  id and rename the total field (#391)\n\n## stats\n\n-   fixed an issue with ordering
  of include files\n\n## misc\n\n-   --pivot option added, groups postings by tag
  instead of account (#323) (Malte Brandy)\n\n-   --anon option added, obfuscates
  account names and descriptions (#265) (Brian Scott)\n\n    (Only affects the hledger
  tool, for now.)\n\n-   try to clarify balance/register's various report modes,\n\n
  \   kinds of \"balance\" displayed, and related options and language.\n\n-   with
  multiple --change/--cumulative/--historical flags, use the last one instead of complaining\n\n-
  \  don't add the \"d\" suffix when displaying day periods\n\n-   stack-ify extra/hledger-rewrite.hs\n\n##
  misc\n\n-   added GHC 8 support, dropped GHC 7.6 and 7.8 support.\n\n    GHC 7.8
  support could be restored with small code changes and a maintainer.\n\n-   a cabal.project
  file has been added (Moritz Kiefer)\n\n-   use hpack for maintaining cabal files
  (#371).\n\n    Instead of editing cabal files directly, we now edit the less\n    verbose
  and less redundant package.yaml files and let stack (or\n    hpack) update the cabal
  files. We commit both the .yaml and\n    .cabal files.\n\n-   clean up some old
  cabal flags\n\n-   tools/simplebench has been spun off as the quickbench package.\n\n-
  \  add Appveyor CI builds, provide up-to-date binaries for Windows\n\n-   extra:
  add a bunch of CSV rules examples\n\n## docs\n\n-   the website is simpler, clearer,
  and more mobile-friendly.\n\n    Docs are now collected on a single page and organised
  by type: getting started, reference, more.\n\n-   reference docs have been split
  into one manual for each executable and file format.\n\n    This helps with maintenance
  and packaging and also should make it\n    easier to see what's available and to
  read just what you need.\n\n-   manuals are now provided in html, plain text, man
  and info formats\n\n    generated from the same source by a new Shake-based docs
  build system. (#292)\n\n-   versioned manuals are provided on the website, covering
  recent releases and the latest dev version (#385, #387)\n\n-   manuals are built
  in to the hledger executables, allowing easy offline reading on all platforms.\n\n
  \       PROG -h              shows PROG's command-line usage\n        PROG --help
  \         shows PROG's manual (fixed width)\n        PROG --man           shows
  PROG's manual with man (formatted/paged)\n        PROG --info          shows PROG's
  manual with info (hypertext)\n        hledger help [TOPIC] shows any manual\n        hledger
  man  [TOPIC] shows any manual with man\n        hledger info [TOPIC] shows any manual
  with info\n\n-   the general and reporting options are now listed in all executable
  manuals.\n\n    We assume any of them which are unsupported are harmlessly ignored.\n\n-
  \  demo.hledger.org is using beancount's example journal.\n\n    This is the somewhat
  realistic example journal from the beancount\n    project, tweaked for hledger.\n\n-
  \  minor copyedits (jungle-boogie)\n\n## cli\n\n-   parsing multiple input files
  is now robust.\n\n    When multiple -f options are provided, we now parse each file\n
  \   individually rather than just concatenating them, so they can\n    have different
  formats (#320). Note this also means that\n    directives (like \\`Y\\` or \\`alias\\`)
  no longer carry over from one\n    file to the next.\n\n-   -I has been added as
  the short flag for --ignore-assertions\n\n    (this is different from Ledger's CLI,
  but useful for hledger-ui).\n\n-   parsing an argument-less --debug option is more
  robust\n\n# 0.27 2015-10-30\n\nAccount aliases:\n\n-   Regular expression account
  aliases are now fast enough that you can\n    use lots of them without slowing things
  down. They now take\n    O(aliases x accounts) time, instead of O(aliases x transactions);\n
  \   also, regular expressions are no longer recompiled unnecessarily.\n\nDocumentation:\n\n-
  \  Each hledger package now includes one or more man pages, generated\n    from
  markdown by the mighty pandoc. Currently there are six: one\n    for each main executable
  and each input file format. Currently these\n    somewhat duplicate the manual on
  the website; this will be resolved\n    somehow. (#282).\n\n-   The site is now
  built with hakyll-std, a generic hakyll script.\n\n-   hledger once again has a
  HCAR entry.\n\nTools:\n\n-   The hledger cabal files are now generated from package.yaml
  files by\n    hpack, in principle, removing a lot of error-prone duplication and\n
  \   boilerplate. (In practice, both files are being updated manually\n    for the
  moment, until hpack supports flags and conditional blocks.)\n\n-   Time/allocation
  and heap profiling is working again, and easier:\n\n    -   `make quickprof-CMD`
  generates a profile for CMD, which runs\n        against one of the sample journals.
  (CMD must be one word,\n        enclosing in double quotes isn't working here for
  some reason).\n\n    -   `make quickheap-CMD` generates a heap profile for CMD,
  in\n        hledgerprof.ps, and tries to open it in a viewer (currently the\n        mac-friendly
  \"open\" executable, so you may need to adjust this in\n        the makefile). As
  with quickprof, CMD must be one word and runs\n        against one of the sample
  journals.\n\n    -   `make hledgerprof` builds the hledgerprof executable used for\n
  \       time/allocation profiling. `make hledgercov` builds the hledgercov\n        executable
  used for coverage reports.\n\n-   Travis CI now tests the build on each github push
  and announces\n    status changes by email and on #hledger.\n\nJournal format:\n\n-
  \  Dates must now begin with a digit (not /, eg).\n\n-   The comment directive longer
  requires an end comment, and will\n    extend to the end of the file(s) without
  it.\n\nCommand-line interface:\n\n-   Output (balance reports, register reports,
  print output etc.)\n    containing wide characters, eg chinese/japanese/korean characters,\n
  \   should now align correctly, when viewed in apps and fonts that show\n    wide
  characters as double width (#242).\n\n-   The argument for --depth or depth: must
  now be positive.\n\nadd:\n\n-   Journal entries are now written with all amounts
  explicit, to avoid\n    losing price info (#283).\n\n-   Fixed a bug which sometimes
  (when the same letter pair was repeated)\n    caused it not to pick the most similar
  past transaction for defaults.\n\nbalance:\n\n-   There is now a -V/--value flag
  to report current market value (as in Ledger).\n    It converts all reported amounts
  using their \"default market price\".\n    \"Market price\" is the new name for
  \"historical prices\", defined with the P directive.\n    The default market price
  for a commodity is the most recent one found in the journal on or before the report
  end date.\n\n    Unlike Ledger, hledger's -V uses only the market prices recorded\n
  \   with P directives; it does not use the \"transaction prices\"\n    recorded
  as part of posting amounts (which are used by -B/--cost).\n    Also, using both
  -B and -V at the same time is supported.\n\n-   Fixed a bug in amount normalization
  which caused amount styles\n    (commodity symbol placement, decimal point character,
  etc.) to be\n    lost in certain cases (#230, #276).\n\n-   The balance command's
  --format option can now adjust the rendering\n    style of multi-commodity amounts,
  if you begin the format string\n    with one of:\n\n        %_  - renders amounts
  on multiple lines, bottom-aligned (the default)\n        %^  - renders amounts on
  multiple lines, top-aligned\n        %,  - renders amounts on one line, comma-separated\n\n-
  \  The balance report's final total (and the line above it) now adapt\n    themselves
  to a custom --format.\n\nprint:\n\n-   The --match option prints the journal entry
  that best matches a\n    description (ie whose description field is most similar
  to the value\n    given, and if there are several equally similar, the most recent).\n
  \   This was originally an add-on I used to guess account names for\n    ledger-autosync.
  It's nice for quickly looking up a recent\n    transaction from a guessed or partial
  description.\n\n-   print now always right-aligns the amounts in an entry, even
  when\n    they are wider than 12 characters. (If there is a price, it's\n    considered
  part of the amount for right-alignment.)\n\nregister:\n\n-   Amount columns now
  resize automatically, using more space if it's\n    needed and available.\n\n# 0.26
  2015-07-12\n\nAccount aliases:\n\n-   Account aliases are once again non-regular-expression-based,
  by default. (#252)\n\n    The regex account aliases added in 0.24 trip up people
  switching between\n    hledger and Ledger. (Also they are currently slow).\n\n    This
  change makes the old non-regex aliases the default; they are\n    unsurprising,
  useful, and pretty close in functionality to Ledger's.\n\n    The new regex aliases
  are still available; they must be enclosed\n    in forward slashes. (Ledger effectively
  ignores these.)\n\nJournal format:\n\n-   We now parse, and also print, journal
  entries with no postings, as\n    proposed on the mail lists. These are not well-formed
  General\n    Journal entries/transactions, but here is my rationale:\n\n    -   Ledger
  and beancount parse them\n    -   if they are parsed, they should be printed\n    -
  \  they provide a convenient way to record (and report) non-transaction events\n
  \   -   they permit more gradual introduction and learning of the concepts.\n        So
  eg a beginner can keep a simple journal before learning about accounts and postings.\n\n-
  \  Trailing whitespace after a `comment` directive is now ignored.\n\nCommand-line
  interface:\n\n-   The -f/file option may now be used multiple times.\n    This is
  equivalent to concatenating the input files before running hledger.\n    The add
  command adds entries to the first file specified.\n\nQueries:\n\n-   real: (no argument)
  is now a synonym for real:1\n\n-   tag: now matches tag names with a regular expression,
  like most other queries\n\n-   empty: is no longer supported, as it overlaps a bit
  confusingly with\n    amt:0. The --empty flag is still available.\n\n-   You can
  now match on pending status (#250)\n\n    A transaction/posting status of ! (pending)
  was effectively equivalent\n    to * (cleared). Now it's a separate state, not matched
  by --cleared.\n    The new Ledger-compatible --pending flag matches it, and so does\n
  \   --uncleared.\n\n    The relevant search query terms are now status:*, status:!
  and\n    status: (the old status:1 and status:0 spellings are deprecated).\n\n    Since
  we interpret --uncleared and status: as \"any state except cleared\",\n    it's
  not currently possible to match things which are neither cleared\n    nor pending.\n\nactivity:\n\n-
  \  activity no longer excludes 0-amount postings by default.\n\nadd:\n\n-   Don't
  show quotes around the journal file path in the \"Creating...\"\n    message, for
  consistency with the subsequent \"Adding...\" message.\n\nbalancesheet:\n\n-   Accounts
  beginning with \"debt\" or now also recognised as liabilities.\n\nprint:\n\n-   We
  now limit the display precision of inferred prices. (#262)\n\n    When a transaction
  posts to two commodities without specifying the\n    conversion price, we generate
  a price which makes it balance (cf\n    https://hledger.org/hledger.html#prices).
  The print command showed\n    this with full precision (so that manual calculations
  with the\n    displayed numbers would look right), but this sometimes meant we\n
  \   showed 255 digits (when there are multiple postings in the\n    commodity being
  priced, and the averaged unit price is an\n    irrational number). In this case
  we now set the price's display\n    precision to the sum of the (max) display precisions
  of the\n    commodities involved. An example:\n\n          hledgerdev -f- print\n
  \         <<<\n          1/1\n              c    C 10.00\n              c    C 11.00\n
  \             d  D -320.00\n          >>>\n          2015/01/01\n              c
  \ C 10.00 @ D 15.2381\n              c  C 11.00 @ D 15.2381\n              d     D
  -320.00\n\n          >>>=0\n\n    There might still be cases where this will show
  more price decimal\n    places than necessary.\n\n-   We now show inferred unit
  prices with at least 2 decimal places.\n\n    When inferring prices, if the commodities
  involved have low\n    display precisions, we don't do a good job of rendering\n
  \   accurate-looking unit prices. Eg if the journal doesn't use any\n    decimal
  places, any inferred unit prices are also displayed with\n    no decimal places,
  which makes them look wrong to the user. Now,\n    we always give inferred unit
  prices a minimum display precision of\n    2, which helps a bit.\n\nregister:\n\n-
  \  Postings with no amounts could give a runtime error in some obscure case, now
  fixed.\n\nstats:\n\n-   stats now supports -o/--outputfile, like register/balance/print.\n-
  \  An O(n\\^2) performance slowdown has been fixed, it's now much faster on large
  journals.\n\n        +--------------------------------------++--------+--------+\n
  \       |                                      ||   0.25 |   0.26 |\n        +======================================++========+========+\n
  \       | -f data/100x100x10.journal     stats ||   0.10 |   0.16 |\n        | -f
  data/1000x1000x10.journal   stats ||   0.45 |   0.21 |\n        | -f data/10000x1000x10.journal
  \ stats ||  58.92 |   2.16 |\n        +--------------------------------------++--------+--------+\n\nMiscellaneous:\n\n-
  \  The June 30 day span was not being rendered correctly; fixed. (#272)\n\n-   The
  bench script invoked by \"cabal bench\" or \"stack bench\" now runs\n    some simple
  benchmarks.\n\n    You can get more accurate benchmark times by running with --criterion.\n
  \   This will usually give much the same numbers and takes much longer.\n\n    Or
  with --simplebench, it benchmarks whatever commands are\n    configured in bench/default.bench.
  This mode uses the first\n    \"hledger\" executable in $PATH.\n\n-   The deprecated
  shakespeare-text dependency has been removed more thoroughly.\n\n# 0.25.1 2015-04-29\n\n-
  \  timelog: support the description field (#247)\n\n# 0.25 2015-04-07\n\n-   GHC
  7.10 compatibility (#239)\n\n-   build with terminfo support on POSIX systems by
  default\n\n    On non-windows systems, we now build with terminfo support by\n    default,
  useful for detecting terminal width and other things.\n\n    This requires the C
  curses dev libraries, which makes POSIX\n    installation slightly harder; if it
  causes problems you can\n    disable terminfo support with the new `curses` cabal
  flag, eg:\n    cabal install -f-curses ... (or cabal might try this\n    automatically,
  I'm not sure).\n\n-   register: use the full terminal width, respect COLUMNS, allow
  column width adjustment\n\n    On POSIX systems, register now uses the full terminal
  width by\n    default. Specifically, the output width is set from:\n\n    1.  a
  --width option\n    2.  or a COLUMNS environment variable (NB: not the same as a
  bash shell var)\n    3.  or on POSIX (non-windows) systems, the current terminal
  width\n    4.  or the default, 80 characters.\n\n    Also, register's --width option
  now accepts an optional\n    description column width following the overall width
  (--width\n    WIDTH\\[,DESCWIDTH\\]). This also sets the account column width, since\n
  \   the available space (WIDTH-41) is divided up between these two\n    columns.
  Here's a diagram:\n\n          <--------------------------------- width (W) ---------------------------------->\n
  \         date (10)  description (D)       account (W-41-D)     amount (12)   balance
  (12)\n          DDDDDDDDDD dddddddddddddddddddd  aaaaaaaaaaaaaaaaaaa  AAAAAAAAAAAA
  \ AAAAAAAAAAAA\n\n    Examples:\n\n          $ hledger reg                 # use
  terminal width on posix\n          $ hledger reg -w 100          # width 100, equal
  description/account widths\n          $ hledger reg -w 100,40       # width 100,
  wider description\n          $ hledger reg -w $COLUMNS,100 # terminal width and
  set description width\n\n-   balance: new -T/--row-total and -A/--average options\n\n
  \   In multicolumn balance reports, -T/--row-total now shows a row totals\n    column
  and -A/--average shows a row averages column.\n    This helps eg to see monthly
  average expenses (hledger bal \\^expenses -MA).\n\n    NB our use of -T deviates
  from Ledger's UI, where -T sets a custom\n    final total expression.\n\n-   balance:
  -N is now short for --no-total\n-   balance: fix partially-visible totals row with
  --no-total\n\n    A periodic (not using --cumulative or --historical) balance report\n
  \   with --no-total now hides the totals row properly.\n\n-   journal, csv: comment
  lines can also start with *\n\n    As in Ledger. This means you can embed emacs
  org/outline-mode nodes in\n    your journal file and manipulate it like an outline.\n\n#
  0.24.1 2015-03-15\n\n-   journal: fix balance accumulation across assertions (#195)\n\n
  \   A sequence of balance assertions asserting first one commodity, then\n    another,
  then the first again, was not working.\n\n-   timelog: show hours with two decimal
  places instead of one (#237)\n-   in weekly reports, simplify week 52's heading
  like the others\n-   disallow trailing garbage in a number of parsers\n\n    Trailing
  garbage is no longer ignored when parsing the following:\n    balance --format option,
  register --width option, hledger-rewrite\n    options, hledger add's inputs, CSV
  amounts, posting amounts,\n    posting dates in tags.\n\n-   allow utf8-string-1
  (fpco/stackage/#426)\n\n# 0.24 2014-12-25\n\nGeneral:\n\n-   fix redundant compilation
  when cabal installing the hledger packages\n-   switch to Decimal for representing
  amounts (#118)\n-   report interval headings (eg in balance, register reports) are
  shown\n    compactly when possible\n-   general speedups\n\nJournal format:\n\n-
  \  detect decimal point and digit groups more robustly (#196)\n-   check that transaction
  dates are followed by whitespace or newline\n-   check that dates use a consistent
  separator character\n-   balance assertions now are specific to a single commodity,
  like\n    Ledger (#195)\n-   support multi-line comments using \"comment\", \"end
  comment\"\n    directives, like Ledger\n\nCSV format:\n\n-   reading CSV data from
  stdin now works better\n-   the rules file include directive is now relative to
  the current\n    file's directory (#198)\n-   the original order of same-day transactions
  is now usually preserved\n    (if the records appear to be in reverse date order,
  we reverse them\n    before finally sorting by transaction date)\n-   CSV output
  is now built in to the balance, print, and register\n    commands, controlled by
  -O/--output-format (and -o/--output-file,\n    see below)\n\nCLI:\n\n-   the --width
  and --debug options now require their argument (#149)\n-   when an option is repeated,
  the last value takes precedence (#219).\n    This is helpful eg for customising
  your reporting command aliases on\n    the fly.\n-   smart dates (used in -p/-b/-e/date:/date2:)
  now must use a\n    consistent separator character, and must be parseable to the
  end\n-   output destination and format selection is now built in to the\n    balance,
  print and register commands, controlled by -o/--output-file\n    and -O/--output-format
  options. Notes:\n    -   -o - means stdout\n    -   an output file name suffix matching
  a supported format will also\n        set the output format, unless overridden by
  --output-format\n    -   commands' supported output formats are listed in their\n
  \       command-line help. Two formats are currently available:\n        txt (the
  default) and csv.\n-   balance assertions can be disabled with --ignore-assertions\n\nAccount
  aliases:\n\n-   all matching account aliases are now applied, not just one directive\n
  \   and one option\n-   account aliases now match by case insensitive regular expressions\n
  \   matching anywhere in the account name\n-   account aliases can replace multiple
  occurrences of the pattern\n    within an account name\n-   an account alias replacement
  pattern can reference matched groups\n    with \\N\n\nQueries:\n\n-   date:/date2:
  with a malformed date now reports an error instead of\n    being ignored\n-   amt:
  now supports >= or <=\n-   clarify status: docs and behaviour; \\\"*\\\" is no longer
  a synonym for\n    \"1\" (fixes #227)\n\nbalance:\n\n-   fix: in tree mode, --drop
  is ignored instead of showing empty account names\n-   a depth limit of 0 now shows
  summary items with account name \"...\",\n    instead of an empty report (#206)\n-
  \  in multicolumn balance reports, -E now also shows posting-less\n    accounts
  with a non-zero balance during the period (in addition to\n    showing leading &
  trailing empty columns)\n-   in multicolumn reports, multi-commodity amounts are
  rendered on one\n    line for better layout (#186)\n-   multicolumn reports' title
  now includes the report span\n\nregister:\n\n-   runs faster with large output\n-
  \  supports date2:, and date:/date2: combined with --date2, better (fixes\n    #201,
  #221, #222)\n-   a depth limit of 0 now shows summary items (see balance)\n-   -A/--average
  now implies -E/--empty\n-   postings with multi-commodity amounts are now top-aligned,
  like\n    Ledger\n\nExtra commands:\n\n-   hledger-equity: fix end date in title;
  print closing entry too\n-   hledger-check-dates: added\n\n# 0.23.3 2014-09-12\n\n-
  \  allow text 1.2+ (#207)\n\n# 0.23.2 2014-05-08\n\n-   register: also fix date
  sorting of postings (#184)\n\n# 0.23.1 2014-05-07\n\n-   register: fix a refactoring-related
  regression that the tests\n    missed: if transactions were not ordered by date
  in the journal,\n    register could include postings before the report start date
  in the\n    output. (#184)\n-   add: don't apply a default commodity to amounts
  on entry (#138)\n-   cli: options before the add-on command name are now also passed
  to it (#182)\n-   csv: allow the first name in a fields list to be empty (#178)\n-
  \  csv: don't validate fields count in skipped lines (#177)\n\n# 0.23 2014-05-01\n\nJournal
  format:\n\n-   A # (hash) in column 0 is now also supported for starting a top-level
  journal comment, like Ledger.\n-   The \"too many missing amounts\" error now reminds
  about the 2-space rule.\n-   Fix: . (period) is no longer parsed as a valid amount.\n-
  \  Fix: default commodity directives no longer limit the maximum display precision
  (#169).\n-   Fix: + before an amount is no longer parsed as part of the commodity
  (#181).\n\nCLI:\n\n-   Command-line help cleanups, layout improvements.\n-   Descriptions
  are shown for known add-ons in the command list.\n-   Command aliases have been
  simplified.\n-   Add-ons can now have any of these file extensions:\n    none, hs,
  lhs, pl, py, rb, rkt, sh, bat, com, exe.\n-   Add-ons are displayed without their
  file extensions when possible.\n-   Add-ons with the same name as a built-in command
  or alias are ignored.\n-   Fix: add-on detection and invocation now works on windows.\n-
  \  Fix: add-ons with digits in the name are now found.\n-   Fix: add-on arguments
  containing a single quote now work.\n-   Fix: when -- is used to hide add-on options
  from the main program,\n    it is no longer passed through as an add-on argument.\n\nQueries:\n\n-
  \  The currency/commodity query prefix (sym:) has been renamed to cur:.\n-   Currency/commodity
  queries are applied more strongly in register and\n    balance reports, filtering
  out unwanted currencies entirely. Eg\n    hledger balance cur:'$' now reports only
  the dollar amounts even if\n    there are multi-currency transactions or postings.\n-
  \  Amount queries like amt:N, amt:<N and amt:>N, where N is not 0, now do an unsigned\n
  \   comparison of the amount and N. That is, they compare the absolute magnitude.\n
  \   To do a signed comparison instead, write N with its sign (eg amt:+N, amt:<+N,
  amt:>-N).\n-   Fix: amount queries no longer give false positives on multi-commodity
  amounts.\n\naccounts:\n\n-   An accounts command has been added, similar to Ledger's,
  for listing account names\n    in flat or hierarchical mode.\n\nadd:\n\n-   Tab
  completion now works at all prompts, and will insert the default if the input area
  is empty.\n-   Account and amount defaults are more robust and useful.\n-   Transactions
  may also be completed by the enter key, when there are no more default postings.\n-
  \  Input prompts are displayed in a different colour when supported.\n\nbalance:\n\n-
  \  Balance reports in flat mode now always show exclusive (subaccount-excluding)
  balances.\n-   Balance reports in flat mode with --depth now aggregate deeper accounts
  at the depth limit instead of excluding them.\n-   Multicolumn reports in flat mode
  now support --drop.\n-   Multicolumn balance reports can now show the account hierarchy
  with --tree.\n-   Multicolumn report start/end dates are adjusted to encompass the
  displayed\n    report periods, so the first and last periods are \"full\" and comparable
  to the others.\n-   Fix: zero-balance leaf accounts below a non-zero-balance parent
  are no longer always shown (#170).\n-   Fix: multicolumn reports now support --date2
  (cf #174).\n\nbalancesheet, cashflow, incomestatement:\n\n-   These commands now
  support --flat and --drop.\n\nprint:\n\n-   Tag queries (tag:) will now match a
  transaction if any of its postings match.\n\nregister:\n\n-   The --display option
  has been dropped. To see an accurate running total which\n    includes the prior
  starting balance, use --historical/-H (like balance).\n-   With a report interval,
  report start/end dates are adjusted to encompass the displayed\n    periods, so
  the first and last periods are \"full\" and comparable to the others.\n-   Fix:
  --date2 now works with report intervals (fixes #174).\n\nMiscellaneous:\n\n-   Default
  report dates now derive from the secondary dates when --date2 is in effect.\n-   Default
  report dates now notice any posting dates outside the transaction dates' span.\n-
  \  Debug output improvements.\n-   New add-on example: extra/hledger-rewrite.hs,
  adds postings to matched entries.\n-   Compatible with GHC 7.2 (#155) - GHC 7.8,
  shakespeare 2\n\n# 0.22.2 2014-04-16\n\n-   display years before 1000 with four
  digits, not three\n-   avoid pretty-show to build with GHC < 7.4\n-   allow text
  1.1, drop data-pprint to build with GHC 7.8.x\n\n# 0.22.1 2014-01-06 and older\n\nSee
  <https://hledger.org/relnotes.html> (or doc/relnotes.md).\n"
changelog-type: markdown
description: |
  # hledger

  The command-line interface for the hledger accounting system.
  Its basic function is to read a plain text file describing
  financial transactions and produce useful reports.

  See also:
  the [project README](https://hledger.org/README.html)
  and [home page](https://hledger.org).
description-type: markdown
hash: c8778019d102dafc2983881ca71733c9ef18b4d8915c8d463d5930eb6aa5bae2
homepage: http://hledger.org
latest: 1.50.1
license-name: GPL-3.0-or-later
maintainer: Simon Michael <simon@joyful.com>
synopsis: Command-line interface for the hledger accounting system
test-bench-deps:
  Decimal: '>=0.5.1'
  aeson: '>=1 && <2.3'
  ansi-terminal: '>=0.9'
  base: '>=4.18 && <4.22'
  bytestring: '>=0'
  cmdargs: '>=0.10'
  containers: '>=0.5.9'
  criterion: '>=0'
  data-default: '>=0.5'
  directory: '>=0'
  extra: '>=1.7.11'
  filepath: '>=0'
  githash: '>=0.1.6.2'
  haskeline: '>=0.6'
  hledger: '>=0'
  hledger-lib: '>=1.50.1 && <1.51'
  html: '>=0'
  http-client: '>=0'
  http-types: '>=0'
  math-functions: '>=0.3.3.0'
  megaparsec: '>=7.0.0 && <9.8'
  microlens: '>=0.4'
  mtl: '>=2.2.1'
  process: '>=0'
  regex-tdfa: '>=0'
  req: '>=0'
  safe: '>=0.3.20'
  shakespeare: '>=2.0.2.2'
  split: '>=0.1'
  tabular: '>=0.2'
  tasty: '>=1.2.3'
  temporary: '>=0'
  text: '>=1.2.4.1'
  text-ansi: '>=0.2.1'
  time: '>=1.5'
  timeit: '>=0'
  transformers: '>=0'
  unordered-containers: '>=0'
  utf8-string: '>=0.3.5'
  utility-ht: '>=0.0.13'
  wizards: '>=1.0'
