all-versions:
- 0.1.0.0
author: Tomáš Janoušek <tomi@nomi.cz>, Jan Šipr <sipr.jan@gmail.com>
basic-deps:
  base: '>=4.7 && <5'
  hlint: '>=2.0'
  hlint-test: '>=0'
changelog: |
  ## 0.1.0.0 released 2017-12-28

  Start of changelog
changelog-type: markdown
description: "# hlint-test\n\n[![Build Status](https://travis-ci.org/Siprj/hlint-test.svg?branch=master)](https://travis-ci.org/Siprj/hlint-test)\n[![Hackage](https://img.shields.io/hackage/v/hlint-test.svg?style=flat)](https://hackage.haskell.org/package/hlint-test)\n[![Hackage
  Dependencies](https://img.shields.io/hackage-deps/v/hlint-test.svg?style=flat)](http://packdeps.haskellers.com/reverse/hlint-test)\n[![Stackage
  LTS](http://stackage.org/package/hlint-test/badge/lts)](http://stackage.org/lts/package/hlint-test)\n[![Stackage
  Nightly](http://stackage.org/package/hlint-test/badge/nightly)](http://stackage.org/nightly/package/hlint-test)\n[![BSD3
  License](http://img.shields.io/badge/license-BSD3-brightgreen.svg?style=flat)](https://tldrlegal.com/license/bsd-3-clause-license-(revised))\n\nThis
  package aims to make easy to automatically run hlint as part of unit tests.\nThat
  means hlint will be run when you execute `cabal test` or `stack test`.\n\n## How
  to make it work\n\nHlint-test package contains GHC preprocessor which will generate
  the code\ncontaining hlint runner. To invoke the preprocessor, create new test and
  put\nfollowing line into it:\n\n```\n{-# OPTIONS_GHC -F -pgmF hlint-test #-}\n```\n\nDon't
  forget to add the test into cabal file (or package.yaml respectively) as\nseparated
  test runner ;).\n\nNow you can run the test simply by `stack test` or `cabal test`.\n\n##
  Hlint options\n\nIf you need to you can use the preprocessor macro to pass some
  additional\narguments to the hlint. As it's shown on following line:\n\n```\n{-#
  OPTIONS_GHC -F -pgmF hlint-test -optF src -optF -r #-}\n```\n\nThis will tell hlint
  to look for source codes only in `src` directory and to \ngenerate html report if
  some suggestions are found.\n\nAlso you can use hlint configuration file too ;).\n\n##
  Example\n\nSimple example of the use can be seen in this package.\n"
description-type: markdown
hash: e427c0593433205fc629fb05b74c6b1deb1de72d1571f26142de008f0d5ee7a9
homepage: https://github.com/Siprj/hlint-test#readme
latest: 0.1.0.0
license-name: BSD-3-Clause
maintainer: Jan Šipr <sipr.jan@gmail.com>
synopsis: Run hlint in test suite
test-bench-deps: {}
