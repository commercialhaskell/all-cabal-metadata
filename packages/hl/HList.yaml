homepage: ''
changelog-type: text
hash: dd74c6f463e3e871b73923243ae09b40293207886d23e2212d713ef208bb77c9
test-bench-deps:
  base: -any
  hspec: '>=1.7'
  syb: -any
  filepath: -any
  process: -any
  semigroups: -any
  array: -any
  lens: -any
  HList: -any
  mtl: -any
  cmdargs: -any
  QuickCheck: -any
  template-haskell: -any
  hspec-expectations: -any
  directory: -any
maintainer: oleg@pobox.com
synopsis: Heterogeneous lists
changelog: "18 Feb 2022\n0.5.2 Release\nRemove custom Setup.lhs which was for ghc-7.6\n\nChange
  to pun quasiquote improves error messages:\n  For `f [pun| x y |] = ()`\n  f ::
  _ => r (a ': b ': c) -> ()  -- old\n  f :: _ => r as -> ()             -- new\nPreviously
  if you supplied a 9 element record to a function\nneeding 10 elements, the error
  would not name the missing field.\nIt is possible but unlikely that the old code
  will need to a type\nannotation like\n(id :: HLengthGE x (HSucc (HSucc HZero)) =>
  r x -> r x)\n\n23 Oct 2021\n0.5.1 Release\nBuild & pass tests with ghc-8.4.4 through
  9.2.0.20210821,\nthough with 9.2.0.20210821 dependencies for tests need\ncabal flags
  --allow-newer=base --allow-newer=template-haskell,\nand also invariant-functors
  and lens from git (as specified in `cabal.project`)\n\nAdd examples/HListExample/OverloadedLabels.hs\n\n19
  Feb 2018\n0.5.0 Release\nBuild & pass tests with ghc-7.6 through 8.4.0.20180209\n\nAdd
  Dredge.hs (ghc>=7.8): access nested records/variants given only the last\nlabel
  along a path\n\nMove toLabel to another class to allow it to return Labels with\nkinds
  other than Symbol.\n\ntipyLens can now change the element type\n\nAdd hTake and
  hDrop\n\nUse TypeError for prettier error messages in ghc-8.0 (still backwards\ncompatible)\n\nImprove
  HFind and HUpdateAtHNat error messages by mentioning the whole\nrecord being changed\n\n22
  Dec 2015\n0.4.2 Release\n\nDepend on base-orphans to avoid multiple definitions
  of Typeable '[],\nTypeable '(:)\n\n3 Aug 2015\n0.4.1 Release\n\nAdd RecordU.hs,
  a record type with elements stored in unboxed arrays\n\nDocumentation fixes (Thor
  Michael StÃ¸re)\n\n5 May 2015\n0.4 Release\n\n16 Apr 2015\nMake tests run (and pass)
  when called by \"runghc Setup test\"\n\nAdd hNot, and add HNotFD which is injective
  (unlike the type family)\n\nReplace uses of `HLength xs ~ n` with `HLengthEq xs
  n`.\n\n15 Mar 2015\nAdd HCurry.hs.\n\nRedefine Arity such that `Arity f (HSucc HZero)`
  will refine the\ntype of `f` to `x -> y`.\n\nSameLabels is generalized so that functions
  like 'asLabelsOf' do\nnot need to explicitly convert a that specifies the ordering
  of\nlabels. Additional constraints might be needed to restore the old\nbehavior:\n\n>
  type SameLabelsOld x y = (HAllTaggedLV x, HAllTaggedLV y, SameLabels x y)\n\nSimilarly
  HExtend instances Proxy intended for making Proxies\nused to disambiguate labels
  (see 'asLabelsOf' again).\n\nAdd hMapOutV, zipVR, extendsVariant. Rename the previous\nsplitVariant
  to splitVariant1, and use the name splitVariant for\na function that splits a Variant
  into two Variants.\n\nAdd projected to Labelable.hs which allows working on a smaller\nRecord
  or Variant.\n\nAdd HasFieldM for lookups that return a default value if the\nfield
  is missing.\n\nSplit HZip into two classes: class HUnzip r x y xy => HZip r x y
  xy.\nThis allows instance HUnzip Variant x y xy.\n\nAdd Data,Typeable,Enum,Bounded,Ord,Monoid
  instances for Variant and TIC\n\nImplement HRLabelSet in terms of HLabelSet, which
  simplifies\ninferred types that would otherwise have redundancy (HLabelSet\n(LabelsOf
  r), HRLabelSet r)\n\nMove definitions into FakePrelude, and split up\nexamples/Properties.hs
  into separate modules to help with\ncompilation times when adding new tests.\n\n15
  Feb 2015\nChange HList to a data family (see comments in HList.hs).\n\nChange the
  Show instance for TIP and HList to use \",\" not \", \" as the\nseparator for consistency
  with Record and ordinary lists.\n\nParameterize HZip over the collection type to
  work on Record, TIP as well as\nHList.\n\nAdd and use HProxies for building the
  spine of a HList from the type, to avoid\nhaving HLists of undefined/error values
  somewhere.\n\nBuild with ghc-7.10 RC1. RecordU/RecordUS is moved to broken/ instead
  of\nupdating it.\n\n9 Sep 2014\nChange the ordering of the list produced by HLeftUnion
  / (.<++.)\nto better match hAppend / ++ suggested by the name.\n\n25 Aug 2014\nAdd
  HSort, which provides a merge sort and a quick sort.\n\nSupport _ (wildcard) with
  the pun quasiquoter, and make\npatterns such as [pun| x y _ |] constrain the Record
  or Variant\nto have at least 3 elements.\n\nReduce the number of parameters for
  Labelable\n\nAllow operations with different label kinds (ie.\nRecord [Tagged 1
  x, Tagged \"y\" Int]) to proceed as expected.\n\n13 Jul 2014\nStart RecordU and
  RecordUS, a variation on Record where the values\nare stored in unboxed array(s).\n\nAdd
  Partition, GroupBy and Span.\n\nAdd list2HList and isos sameLength and sameLabels.\n\n23
  Jun 2014\nTIPTransform and TIPTransformM become part of the distribution,\nand missing
  fields are reported with the Fail superclass\ntechnique.\n\nProjection of a TIP
  to a tuple is reimplemented without an explicit\ntype signature. The functions are
  exported as tipyTuple,\ntipyTuple3 etc.\n\nConversion between HLists and up to 6-tuples
  done with HTuple.\n\nAdd ZipVariant, Unvariant, splitVariant, extendVariant,\nan
  instance Eq (Variant v) and an instance Labelable TIC.\n\nAdd quickcheck in examples/Properties.hs.
  Coverage measured with\nHPC is about 40%.\n\n5 Jun 2014\nStart to parameterize operations
  on the collection type. This\nmeans that where we previously had HMapCxt f x y another\ntype
  parameter with kind [*] -> * is added. This means\nprevious uses of HMapCxt f x
  y become HMap HList f x y.\nThis allows hMap to be used with Record and Variant.\nHUpdateAtLabel
  is similarly generalized.\n\nRework Variant: the implementation is now similar to
  Dynamic\nand TIC. Likewise, TIP is implemented in terms of Record.\n\n28 May 2014\nAdd
  tipyLens and ticPrism.\n\nAdd a HExtend instance for Variant.\n\nAdd functional
  dependencies to Labelable (and corresponding\nsuperclasses) to avoid ambiguous types.\n\n26
  May 2014\nAdd prisms for Variant. This adds a dependency on \"profunctors\".\n\nParameterize
  Labelable on the collection type. This allows\nlabelable labels to be used with
  RecordS or VariantS, where\nthe resulting Optic is a Lens or Prism respectively.\n\nRemove
  recordLabels in favor of labelsOf: a kind variable which\nonly appears on the RHS
  required a lengthy type annotation to fix\nthat variable. Pattern matching to convert
  a `Label (a :: k)` to\n`a :: k` happens later on when another value with kind `k`
  is a\navailable on the LHS.\n\nImprove type errors when accessing missing fields
  when using\nLabelable labels. Except for HPrism, the error message contains\n`Fail
  (FieldNotFound \"x\")`. This involved adding a HUpdateAtLabel\nclass and HTPupdateAtLabel
  type which hides the `n` type\nvariable.\n\nReduce the number of parameters to HMapCxt.
  The old version could\nbe defined in terms of the new version as:\n\n\ttype HMapCxt_old
  f a b ha hb = (HMapCxt f a b,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tHList a ~ ha,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tHList
  b ~ hb)\n\nReimplement RecordValues in terms of HMap. The original\nimplementation
  is kept because it avoids the need for\n-XAllowAmbiguousTypes.\n\nAdd hMapR and
  hMapV to map over the values in a Record or the\nvalue in a Variant respectively.
  These functions are defined in\nterms of HFmap which may be useful on it's own.\n\nAdd
  a typeable instance for Label3, and change examples/cmdargs.hs\nto use this label
  kind. This allows the example to work with\nghc-7.8.2 which lacks an instance Typeable
  (x :: Symbol).\n\n28 Mar 2014\n\tRelease 0.3.4.1\n\tFix build with ghc-7.8 broken
  by changes in HList 0.3.4\n\n20 Feb 2014\n\tRelease 0.3.4\n\tRecordPuns add ( )
  syntax\n\tUse the tagged package: this removes LVPair and lowercase proxy.\n\n03
  Feb 2014\n    Release 0.3.2.0\n\tRelax hspec dependency\n\n29 Jan 2014\n\tRelease
  0.3.1.0\n\tWork with newer GHC.TypeLits (SingI and similar were moved out)\n\n05
  Nov 2013\n\tRelease 0.3.0.1\n\tfix `cabal test'\n\n01 Nov 2013\n\tRelease 0.3\n\tpun
  quasiquote supports nested records\n\tremove HStagedEq\n\n30 Oct 2013\n\tAnother
  large patch from Adam Vogt\n\tConnect HList with Lens. The Data instance for HList\n\ttreats
  HList as a list; a Data instance for HListFlat\n\ttreats HList as a tuple.\n\n24
  Oct 2013\n\tAnother large patch from Adam Vogt\n\tAdded HFoldl, HScanr, Data instances
  for HList, finished the\n\tupdate of Record, the Keyword example\n\tbecomes full-fledged
  part of HList\n\n17 Sep 2013\n\tAnother large patch from Adam Vogt\n\tAdded HReplicate,
  SameLength constraint (used by HSequence and HMap),\n\tFunCxt for interpreting context
  applications,\n\tconvenient syntax for record patterns,\n\tclean-up of ApplyAB and
  general clean-up\n\n31 Aug 2013\n\tLarge patch from Adam Vogt\n\t Improving the
  Apply class (ApplyAB) to help type inference\n\t and avoid specifying many type
  sigatures.\n\t Fix a few of broken code files, in particular RecordAdv.\n\n28 Aug
  2013\n\tLarge patch from Adam Vogt\n\t moved files that need attention to broken/\n\t
  put HSequence in with HList.HList: fixed the function\n\t added Label6 with GHC
  Symbols\n\t fix HZip, Variant, examples/TIPTransformM.hs\n\t Many Haddoc changes
  and beautifications\n\t format some examples for doctest\n\n27 Aug 2013\n\tAdam
  Vogt's patch greatly simplifying makeLabels.\n\tUpdated TIC.hs\n\n15 Nov 2012\n\tPorted
  basic Records.\n\n31 Oct 2012\n\tNew file HList/HList.hs contains the implementation
  of\n\theterogeneous lists. HListPrelude.hs defines operations\n\tthat work across
  all heterogeneous collections (lists, TIP,\n\tRecords, etc).\n\tGeneral clean-up,
  removing obsolete code.\n\tCode re-written up to Records.\n\n25 Oct 2012\n\thUnfold\n\thProjectByHNats
  and hProjectAwayByHNats now take type-level\n\tlist of naturals as the argument.
  They are implemented in terms\n\tof Unfold. More computation is made purely type-level.\n\n24
  Oct 2012\n\tNat, Bool and [*] kinds\n\tHList is now GADT\n\tRewriting FakePrelude,
  HListPrelude, HArray using type families\n\tto a large extent, and getting rid of
  functional dependencies\n\n\n12 Oct 2011\n\tGetting rid of overlapping instances
  in HOccurs\n\tUsing only one TypeEq. This is the only place with overlapping instances\n\tUsing
  ~ operator instead of TypeCast. Deprecating TypeCast\n\tRearrangements of code,
  removing obsolete code\n\tMaking sure everything works under GHC 7.0.4\n\n\n19 May
  2010\n\tBeautification, release and tag 0.2.3 by Adam Vogt\n\n26 April 2010\n\tPatches
  from Adam Vogt to format documentation for Haddoc and\n\tto expose MakeLabels\n\tRelease
  0.2.1 by Gwern Branwen\n\n29 March 2010\n\texamples/TIPTransformM.hs, the monadic
  version of\n\tTIPTransform.hs\n\n17 February 2010\n\tTwo patches from Adam Vogt
  to get the code compile on ghc-6.12\n\tand to make Record Typeable instances nonstrict\n\n10-14
  January 2010\n        Reverse parameter order for .@.\n\tChanged fixity <++\n\tPushed
  uses of LANGUAGE pragmas further for OOHaskell examples\n\n16 September 2009\n\tAdded
  TypeCastGeneric3, TypeEqGeneric3 -- the instances of\n\ttypeCast and TypeEq that
  don't require separate compilation.\n\tThey are like TypeCastGeneric2, TypeEqGeneric2,
  but integrated\n\twith the FakePrelude.\n\tAdded the example file TIPTransform.hs,
  a variation on the\n\tkeyword argument problem posed by Andrew U. Frank.\n\tAdjusted
  the LANGUAGE pragmas, made the examples run without\n\tthe global -fglasgow-exts\n\n15
  September 2009\n\tRelease 0.2 by Gwern Branwen\n\n11 August 2009\n\tMade the regression
  tests run again.\n\tPlease do \"cd examples; make test-ghc\"\n\tafter any changes.\n\t\n11
  August 2009\n\tApplied a patch from Justin Bailey:\n\tUpdated fixity declarations
  for record operators for\n\tusability and to better match familiar list and \n\tarithmetic
  operators.\n\tAdded Haddock comments for these operators\n\n1 July 2009\n\tApplied
  a set of four patches by Brian Bloniarz:\n\tImprove error messages from Record functions
  using the Fail\n\ttype class trick\n\tAdd hRearrange, to permute a Record by labels\n\tExpose
  a few hidden modules, needed for HaskellDB\n\tMake hMap, hMapOut & recordLabels
  maximally lazy\n\tAdd recordValues, analogous to recordLabels\n\t\n29 June 2008\n\tApply
  the set of patches by gwern0@gmail.com: moving a few\n\tfiles around, cleaning up
  hlist.cabal\n\t\n3 February 2008\n\tFifteen patches by gwern0@gmail.com: Data.HList
  hierarchy,\n\tuse of LANGUAGE, -Wall, changes to Cabal files\n\t\n19 September 2007\n\tAdded
  HMemberM\n\tOptimized record projection in Record.hs. The optimization\n\tshould
  be especially noticeable for record narrowing.\n\tAdded NarrowM, which reports both
  success and failure of narrowing\n\tAdded equivR, record equivalence modulo field
  order, with\n\twitnessing conversions\n\tConsUnion.hs now checks for record types
  and treat the latter\n\tequivalent modulo the order of fields. This gives optimized,\n\tshallower
  unions.\n\t\n13 September 2007\n\tAdded UnionSymRec, the symmetric union of two
  records. The code\n\tis not very optimal though.\n  \n12 September 2007\n\tAdded
  MakeLabels -- Template Haskell code for automatically\n\tgenerating Labels (as in
  Label4.hs).\n\tRenaming of (data) types in Records, to more meaningful names.\n\t\n05
  September 2007\n\tAdded ConsUnion.hs -- building homogeneous lists of heterogeneous\n\tcomponents
  by constructing the union on-the-fly.\n\t\n12 February 2007\n\tAdded patches by
  Einar Karttunen:\n\tMove files to subdirectories\n\tAdd Cabal infrastructure and
  HList.hs\n\tMake it compile with GHC 6.6\n\t\n31 October 2006\n\tAdded HSequence.hs:
  (monadic) `sequence' for heterogeneous lists.\n\tIt is also the illustration of
  TypeCast.\n\t\n26 October 2006\n\tAdded CHList.hs: Potentially infinite, open, statically\n\tconstrained
  HLists.\n\t\n30 August 2006\n\tRecord.hs: Labels now are exclusively type-level
  entities with no\n\trun-time representation. The Record API remains the same (although\n\tthe
  implementation had to be adjusted).\n\t\n31 July\t2006\n\tTAG Release-2.0. The HList
  DARCS repository announced.\n\t\n22 June\t2006\n\tVariantP.hs: Our extensible (variant)
  list supports the regular\n\tlist API.\n\t\n20 June\t2006\n\tAdded VariantP.hs --
  polymorphic variants as dual of records.\n\tThe extensibility problem solved? We
  can re-use as much as old\n\tcode as possible, when extending the variant and extending\n\tthe
  functions to the extended variant (and get the subtyping for\n\tfree).\n\t\n19 June\t2006\n\tAdded
  RecordP.hs -- records with unzipped and fully phantom\n\tlabels. Added tests as
  well.\n\t\n08 May\t2006\n\tMainPatternMatch.hs -- example of pattern-matching on
  HList's\n\tRecords\n\t\n08 February 2006\n\tPrimed hMap/HMap as to enable a new
  native definition\n\tStarted ChangeLog, finally.\n"
basic-deps:
  base: '>=4.6 && <4.17'
  semigroups: -any
  array: -any
  base-orphans: -any
  tagged: -any
  ghc-prim: -any
  mtl: -any
  template-haskell: -any
  profunctors: -any
all-versions:
- '0.1'
- 0.1.1
- '0.2'
- 0.2.1
- 0.2.2
- 0.2.3
- 0.3.0
- 0.3.0.1
- 0.3.1.0
- 0.3.2.0
- 0.3.4.0
- 0.3.4.1
- 0.4.0.0
- 0.4.1.0
- 0.4.2.0
- 0.5.0.0
- 0.5.1.0
- 0.5.2.0
author: |-
  2004 Oleg Kiselyov (FNMOC, Monterey), Ralf Laemmel (CWI/VU, Amsterdam),
  Keean Schupke (London)
latest: 0.5.2.0
description-type: text
description: "(C) 2004--2010, Oleg Kiselyov, Ralf Laemmel, Keean Schupke\n\nContributors:\n\tJustin
  Bailey, Brian Bloniarz, Gwern Branwen, Einar Karttunen,\n\tand Adam Vogt\n\n\nThe
  HList library and samples\n\n----------------------------------------------------------------------\n\nGetting
  the code\n\n> git clone https://bitbucket.org/HList/hlist HList\n\n----------------------------------------------------------------------\n\nPushing
  changes\n\nYou need an account at bitbucket.org\n\n> cd HList\n> git clone git@bitbucket.org:HList/hlist.git\n>
  git pull\n> git commit --interactive\n> git push\n\n----------------------------------------------------------------------\n\nThis
  distribution covers all essential issues discussed in the HList paper,\nthough the
  implementation has been adapted to ghc features implemented\nafter the paper's writing.\n\nAdditional
  examples and HList operations are provided.\nThe code from the database section
  of the HList paper is not included\nsince doing so would have implied inclusion
  of substantial packages,\nnamely the underlying infrastructure for database access
  library.\n\nYou can get HList from Hackage or from bitbucket:\n\n$ cabal update
  && cabal install HList\n\nOr:\n\n$ git clone https://bitbucket.org/HList/hlist HList\n$
  cd HList; cabal install\n\nThe code was tested --- within the limits exercised in
  the source files ---\nwith GHC:\n\n  - 9.2.0.20210821\n  - 9.0.1\n  - 8.10.6\n  -
  8.8.4\n  - 8.6.5\n  - 8.4.4\n\nand may still work with GHC-7.6, 7.8, 7.10, 8.2\n\nOlder
  compilers are not supported.\n\nOne may run \"cabal test\" to check the distribution.\n\nSee
  ChangeLog for updates.\n\n"
license-name: MIT
