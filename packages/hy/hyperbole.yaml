all-versions:
- 0.1.1
- 0.1.2
- 0.2.0
- 0.3.5
- 0.3.6
- 0.4.2
- 0.4.3
author: Sean Hess
basic-deps:
  base: '>=4.16 && <5'
  bytestring: '>=0.11 && <0.13'
  casing: '>0.1 && <0.2'
  containers: '>=0.6 && <1'
  cookie: '>=0.4 && <0.6'
  data-default: '>0.8 && <0.9'
  effectful: '>=2.4 && <3'
  file-embed: '>=0.0.10 && <0.1'
  http-api-data: '>=0.6 && <0.7'
  http-types: '>=0.12 && <0.13'
  network: '>=3.1 && <4'
  string-conversions: '>=0.4 && <0.5'
  string-interpolate: '>=0.3 && <0.4'
  text: '>=1.2 && <3'
  time: '>=1.12 && <2'
  wai: '>=3.2 && <4'
  wai-websockets: '>=3.0 && <4'
  warp: '>=3.3 && <4'
  web-view: '>=0.7 && <=1.0'
  websockets: '>=0.12 && <0.14'
changelog: |
  # Revision history for hyperbole

  ## 0.4.3 -- 2024-01-31

  * Bug fixes and improvements

  ## 0.4.2 -- 2024-01-21

  * Cleaner HyperView class [(@cgeorgii)](https://github.com/cgeorgii)
    * data family Action
    * update
  * Type-safe resolution of HyperViews
  * Record-based Forms
    * textarea [(@tusharad)](https://github.com/tusharad)
  * High-level sessions and query params
  * Events: onLoad, onClick onInput, onSubmit, onDblClick, onKeyDown, onKeyUp
  * Major refactoring
  * Nix build and CI [(@Skyfold)](https://github.com/Skyfold)
  * New Examples Live: https://docs.hyperbole.live
  * New Examples Added:
    * TodoMVC
    * Forms - Simple
    * DataTable
    * Search - Filters
    * Search - Autocomplete

  ## 0.3.6 -- 2024-05-21

  * First version. Released on an unsuspecting world.
changelog-type: markdown
description: "![Hyperbole](https://github.com/seanhess/hyperbole/raw/main/example/static/logo-robot.png)\n\n[![Hackage](https://img.shields.io/hackage/v/hyperbole.svg?color=success)](https://hackage.haskell.org/package/hyperbole)\n\nCreate
  interactive HTML applications with type-safe serverside Haskell. Inspired by [HTMX](https://htmx.org/),
  [Elm](https://elm-lang.org/), and [Phoenix LiveView](https://www.phoenixframework.org/)\n\n[Learn
  more about Hyperbole on Hackage](https://hackage.haskell.org/package/hyperbole/docs/Web-Hyperbole.html)\n\n```haskell\n{-#
  LANGUAGE DeriveAnyClass #-}\n{-# LANGUAGE OverloadedStrings #-}\n{-# LANGUAGE TypeFamilies
  #-}\nmodule Main where\n\nimport Data.Text (Text)\nimport Web.Hyperbole\n\nmain
  :: IO ()\nmain = do\n  run 3000 $ do\n    liveApp (basicDocument \"Example\") (runPage
  page)\n\n\npage :: (Hyperbole :> es) => Eff es (Page '[Message])\npage = do\n  pure
  $ col id $ do\n    hyper Message1 $ messageView \"Hello\"\n    hyper Message2 $
  messageView \"World!\"\n\n\ndata Message = Message1 | Message2\n  deriving (Show,
  Read, ViewId)\n\n\ninstance HyperView Message es where\n  data Action Message =
  Louder Text\n    deriving (Show, Read, ViewAction)\n\n  update (Louder msg) = do\n
  \   let new = msg <> \"!\"\n    pure $ messageView new\n\n\nmessageView :: Text
  -> View Message ()\nmessageView msg = do\n  row id $ do\n    button (Louder msg)
  id \"Louder\"\n    el_ $ text msg\n```\n\nGetting Started with Cabal\n--------------------------\n\nCreate
  a new application:\n\n    $ mkdir myapp\n    $ cd myapp\n    $ cabal init\n\nAdd
  hyperbole and text to your build-depends:\n\n```\n    build-depends:\n        base\n
  \     , hyperbole\n      , text\n```\n\nPaste the above example into Main.hs, and
  run\n\n    $ cabal run\n\nVisit http://localhost:3000 to view the application\n\n\nExamples\n---------\n\nThe
  example directory contains an app demonstrating various features. See it in action
  at https://docs.hyperbole.live\n\n<a href=\"https://docs.hyperbole.live\">\n  <img
  alt=\"Hyperbole Examples\" src=\"example/static/examples.png\"/>\n</a>\n\n### Try
  Example Project Locally\n\nThese will run the examples webserver\n\n#### With Nix\n\n`nix
  run github:seanhess/hyperbole`\n\n#### With Docker\n\n`docker run -it -p 3000:3000
  ghcr.io/seanhess/hyperbole:latest`\n\nLearn More\n----------\n\nView Documentation
  on Hackage\n* https://hackage.haskell.org/package/hyperbole/docs/Web-Hyperbole.html\n\nView
  on Github\n* https://github.com/seanhess/hyperbole\n\n\nFull Production Example\n-----------------------\n\n<a
  href=\"https://nso.edu\">\n  <img alt=\"National Solar Observatory\" src=\"https://nso1.b-cdn.net/wp-content/uploads/2020/03/NSO-logo-orange-text.png\"
  width=\"400\"/>\n</a>\n\nThe NSO uses Hyperbole for the Level 2 Data creation tool
  for the [DKIST telescope](https://nso.edu/telescopes/dki-solar-telescope/). It is
  completely [open source](https://github.com/DKISTDC/level2/). This production application
  contains complex interfaces, workers, databases, and more.\n\nHow to Import Flake\n------------\n\nYou
  can import this flake's overlay to add `hyperbole` to all package sets and override
  ghc966 and ghc982 with the packages to satisfy `hyperbole`'s dependencies.\n\n```nix\n{\n
  \ inputs = {\n    nixpkgs.url = \"github:nixos/nixpkgs/nixpkgs-unstable\";\n    hyperbole.url
  = \"github:seanhess/hyperbole\"; # or \"path:/path/to/cloned/hyperbole\";\n    flake-utils.url
  = \"github:numtide/flake-utils\";\n  };\n\n  outputs = { self, nixpkgs, hyperbole,
  flake-utils, ... }:\n    flake-utils.lib.eachDefaultSystem (\n      system:\n      let\n
  \       pkgs = import nixpkgs {\n          inherit system;\n          overlays =
  [ hyperbole.overlays.default ];\n        };\n        haskellPackagesOverride = pkgs.overriddenHaskellPackages.ghc966.override
  (old: {\n          overrides = pkgs.lib.composeExtensions (old.overrides or (_:
  _: { })) (hfinal: hprev: {\n            # your overrides here\n          });\n        });\n
  \     in\n      {\n        devShells.default = haskellPackagesOverride.shellFor
  {\n          packages = p: [ p.hyperbole ];\n        };\n      }\n    );\n}\n```\n\n\nLocal
  Development\n-----------------\n\n### Recommended ghcid command\n\nIf you want to
  work on both the hyperbole library and example code, this `ghcid` command will run
  (and hot reload) the examples server as you change any non-testing code.\n\n```\nghcid
  --setup=Main.update --command=\"cabal repl exe:examples lib:hyperbole\" --run=Main.update
  --warnings --reload=./client/dist/hyperbole.js\n```\n\nIf you want to work on the
  test suite, this will run the tests each time any library code is changed.\n\n```\nghcid
  --command=\"cabal repl test lib:hyperbole\" --run=Main.main --warnings --reload=./client/dist/hyperbole.js\n```\n\n###
  Nix\n\n- `nix flake check` will build the library, example executable and devShell
  with ghc-9.8.2 and ghc-9.6.6\n    - This is what the CI on GitHub runs\n- `nix run`
  or `nix run .#ghc982-example` to start the example project with GHC 9.8.2\n    -
  `nix run .#ghc966-example` to start the example project with GHC 9.6.6\n- `nix develop`
  or `nix develop .#ghc982-shell` to get a shell with all dependencies installed for
  GHC 9.8.2. \n    - `nix develop .#ghc966-shell` to get a shell with all dependencies
  installed for GHC 9.6.6. \n- `nix build`, `nix build .#ghc982-hyperbole` and `nix
  build .#ghc966-hyperbole` builds the library with the `overriddenHaskellPackages`\n
  \   - If you want to import this flake, use the overlay\n- `nix flake update web-view`
  will update the `web-view` input\n\nNote: You can always run `cachix use hyperbole`
  to use the GitHub CI populated cache if you didn't allow adding 'extra-substituters'
  when first using this flake.\n\n### Common Nix Issues\n\n#### Not Allowed to Refer
  to GHC\n\nIf you get an error like:\n\n```\nerror: output '/nix/store/64k8iw0ryz76qpijsnl9v87fb26v28z8-my-haskell-package-1.0.0.0'
  is not allowed to refer to the following paths:\n         /nix/store/5q5s4a07gaz50h04zpfbda8xjs8wrnhg-ghc-9.6.3\n```\n\nFollow
  these [instructions](https://nixos.org/manual/nixpkgs/unstable/#haskell-packaging-helpers)\n\n####
  Dependencies Incorrect\n\nIf you need to update `web-view` run `nix flake update
  web-view`, otherwise:\n\nYou will need to update the overlay, look for where it
  says `\"${packageName}\" = hfinal.callCabal2nix packageName src { };` and add a
  line like `Diff = hfinal.callHackage \"Diff\" \"0.5\" { };` with the package and
  version you need.\n\n#### Missing Files\n\nCheck the `include` inside the `nix-filter.lib`
  to see if all files needed by cabal are there.\n\n### Manual dependency installation\n\n\nDownload
  and install [NPM](https://nodejs.org/en/download). On a mac, can be installed via
  homebrew:\n\n```\nbrew install npm\n```\n\nInstall client dependencies\n\n```\ncd
  client\nnpm install\n```\n\nRecommended: Use `direnv` to automatically load environment
  from .env\n\n```\nbrew install direnv\ndirenv allow\n```\n\n\n### Building\n\nBuild
  JavaScript client\n\n```\ncd client\nnpx webpack\n```\n\nRun examples\n\n```\ncd
  example\ncabal run\n```\n\n### Tests\n\n```\ncabal test\n```\n\n### File watching\n\nRun
  tests, then recompile everything on file change and restart examples\n\n```\nbin/dev\n```\n\n\nContributors\n------------\n\n*
  [Sean Hess](seanhess)\n* [Kamil Figiela](https://github.com/kfigiela)\n* [Christian
  Georgii](https://github.com/cgeorgii)\n* [Pfalzgraf Martin](https://github.com/Skyfold)\n*
  [Tushar Adhatrao](https://github.com/tusharad)\n"
description-type: markdown
hash: ffc331b6740c9ee123846cb5d0f9c9a48957918d1e403b0eb946d73a2d6de5ff
homepage: https://github.com/seanhess/hyperbole
latest: 0.4.3
license-name: BSD-3-Clause
maintainer: seanhess@gmail.com
synopsis: Interactive HTML apps using type-safe serverside Haskell
test-bench-deps:
  base: '>=4.16 && <5'
  bytestring: '>=0.11 && <0.13'
  casing: '>0.1 && <0.2'
  containers: '>=0.6 && <1'
  cookie: '>=0.4 && <0.6'
  data-default: '>0.8 && <0.9'
  effectful: '>=2.4 && <3'
  file-embed: '>=0.0.10 && <0.1'
  http-api-data: '>=0.6 && <0.7'
  http-types: '>=0.12 && <0.13'
  hyperbole: '>=0'
  network: '>=3.1 && <4'
  skeletest: '>=0'
  string-conversions: '>=0.4 && <0.5'
  string-interpolate: '>=0.3 && <0.4'
  text: '>=1.2 && <3'
  time: '>=1.12 && <2'
  wai: '>=3.2 && <4'
  wai-websockets: '>=3.0 && <4'
  warp: '>=3.3 && <4'
  web-view: '>=0.7 && <=1.0'
  websockets: '>=0.12 && <0.14'
