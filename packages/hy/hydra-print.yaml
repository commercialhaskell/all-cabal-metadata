all-versions:
- 0.1.0.0
- 0.1.0.2
- 0.1.0.3
author: Ryan Newton
basic-deps:
  async: '>=0'
  base: '>=4.5 && <=4.7'
  bytestring: '>=0'
  containers: '>=0'
  directory: '>=0'
  filepath: '>=0'
  io-streams: '>=0'
  mtl: '>=0'
  ncurses: '>=0.2.3'
  process: '>=0'
  random: '>=0'
  semigroups: '>=0'
  text: '>=0'
  time: '>=0'
  transformers: '>=0'
  unix: '>=0'
changelog: ''
changelog-type: ''
description: |-
  Output from parallel subprocesses is an ugly, many-headed beast.
  Piping though hydra-print provides an NCurses interface to a dynamic
  set output streams, displayed without interleaving.  This is a
  common problem, for example, with parallel compiles, or
  data-processing scripts.

  Specifically, this small library will split the screen when
  parallelism occurs, and unsplit it when the parallelism is
  finished (i.e. dynamically growing and losing \"heads\").
  The @io-streams@ library is used for all stream inputs.
description-type: haddock
hash: a15b6cb74216a3ac7589ca96097c5b67f3995235cceb6494778eeb5ecfe5b3f8
homepage: https://github.com/rrnewton/hydra-print
latest: 0.1.0.3
license-name: BSD-3-Clause
maintainer: Ryan Newton <rrnewton@gmail.com>
synopsis: NCurses interface to view multiple ByteString streams in parallel.
test-bench-deps:
  HUnit: '>=1.2 && <1.3'
  QuickCheck: '>=2.5 && <2.6'
  async: '>=0'
  base: '>=4.5 && <=4.7'
  bytestring: '>=0'
  containers: '>=0'
  directory: '>=0'
  io-streams: '>=0'
  mtl: '>=0'
  ncurses: '>=0.2.3'
  process: '>=0'
  random: '>=0'
  semigroups: '>=0'
  test-framework: '>=0.8 && <0.9'
  test-framework-hunit: '>=0.3 && <0.4'
  test-framework-quickcheck2: '>=0.3 && <0.4'
  test-framework-th: '>=0.2 && <0.3'
  text: '>=0'
  time: '>=0'
  transformers: '>=0'
  unix: '>=0'
