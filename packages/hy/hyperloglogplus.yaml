all-versions:
- 0.1.0.0
author: Eugene Zhulenev
basic-deps:
  base: '>=4.7 && <5'
  bits: '>=0.2 && <1'
  containers: '>=0.5 && <0.6'
  murmur-hash: '>=0.1 && <0.2'
  semigroups: '>=0.18 && <1'
  vector: '>=0.11 && <0.12'
changelog: ''
changelog-type: ''
description: |
  # HyperLogLogPlus

  [![Build Status](https://secure.travis-ci.org/ezhulenev/hyperloglogplus.png?branch=master)](http://travis-ci.org/ezhulenev/hyperloglogplus)

  Haskell implementation of HyperLogLog++ with MinHash for efficient cardinality and intersection estimation
  using constant space.

  See original AdRoll paper for details: [HyperLogLog and MinHash](http://tech.adroll.com/media/hllminhash.pdf)

  ```Haskell
  -- Example:
  :set -XDataKinds
  :load Data.HyperLogLogPlus

  type HLL = HyperLogLogPlus 12 8192

  mempty :: HLL

  size (foldr insert mempty [1 .. 75000] :: HLL)

  size $ (foldr insert mempty [1 .. 5000] ::  HLL) <> (foldr insert mempty [3000 .. 10000] :: HLL)

  intersection $ [ (foldr insert mempty [1 .. 15000] ::  HLL)
                 , (foldr insert mempty [12000 .. 20000] :: HLL) ]
  ```

  ## Testing

  ```
  stack test
  ```
description-type: markdown
hash: 765453b916e2fa44ca6e392fd27ff3f4f75ce03c0b46529abc5c17001a3b1147
homepage: https://github.com/ezhulenev/hyperloglogplus#readme
latest: 0.1.0.0
license-name: BSD-3-Clause
maintainer: eugene.zhulenev@gmail.com
synopsis: Approximate cardinality estimation using constant space
test-bench-deps:
  HUnit: '>=1.3 && <1.4'
  base: '>=4.7 && <5'
  hyperloglogplus: '>=0'
  semigroups: '>=0.18 && <1'
  tasty: '>=0.11 && <0.12'
  tasty-hunit: '>=0.9 && <0.10'
