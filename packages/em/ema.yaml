homepage: https://ema.srid.ca/
changelog-type: markdown
hash: 5d3113b7b1b5ba09e0589b8d8acb340ecd57def9d8aba9dffadea30012dd887a
test-bench-deps: {}
maintainer: srid@srid.ca
synopsis: Static site generator library with hot reload
changelog: "# Revision history for ema\n\n## 0.10.0.0 (2022-11-20)\n\n- Split Ema
  into multiple packages:\n- `ema-extra`: New API\n  - Expose `StringRoute` from examples
  to ema-extra\n  - Add `MapRoute` and `PaginatedRoute`\n\n## 0.8.2.0 (2022-08-28)\n\n-
  Bug fixes\n  - Fix live server redirecting static assets to wrong links [\\#138](https://github.com/EmaApps/ema/issues/138)\n\n##
  0.8.0.0 (2022-08-19)\n\nThis releases brings a significant rewrite of Ema. If you
  choose to upgrade your apps from 0.6, see https://ema.srid.ca/start/upgrade for
  guidance.\n\n- GHC 9.x support\n- Better handling of URL anchors (#83; #87)\n- `routeUrl`
  uses `UrlDirect` by default. Use `routeUrlWith` if you want to change that.\n- Ema
  status indicator now works independently (requires no Tailwind)\n- Multisite rewrite
  (Ema has been mostly rewritten for better composability) ([\\#82](https://github.com/EmaApps/ema/pull/81))\n
  \ - Represent route encoding using `Prism'` from optics-core; add `IsRoute` class
  to define them.\n    - Optional generic deriving of route prisms, so you do not
  have to hand-write them.\n    - Automatic isomorphism checks ensures that encoding
  and decoding are isomorphic (route prisms are lawful)\n  - Composable Ema apps \n
  \   - There are two ways of composing Ema apps. Using heterogenous lists (see `Ema.Route.Lib.Multi`),
  or by defining a top-level route type (see `Ex04_Multi.hs`).\n  - Replace `LVar`
  with `Dynamic`.\n    - Ema still uses `LVar` internally (for live server updates),
  but on the user-side one only needs to provide a `Dynamic` which is a tuple of initial
  value and an updating function. The [unionmount](https://github.com/srid/unionmount/pull/1)
  library was changed to provide this tuple.\n  - Add `EmaSite` typeclass to \"connect
  them all\"\n    - `SiteArg`: Type of value to pass from the environment.\n    -
  `siteInput`: Define the `Dynamic` model for the site.\n    - `siteOutput`: Asset
  (eg: HTML) to produce for each route.\n\n## 0.6.0.0 -- 2022-02-05\n\n- Websocket
  API: Add `ema.switchRoute` to switch to other routes in live server.\n- Smaller
  core: remove helpers and examples (examples can be enabled by a flag)\n  - Helpers\n
  \   - `Ema.Helpers.PathTree` moved to separate package *pathtree*.\n    - `Ema.Helpers.FileSystem`
  moved to separate package *unionmount*.\n    - `Ema.Helpers.Markdown` moved to separate
  package *commonmark-simple*.\n    - `Ema.Helpers.Blaze` is no more. See `ema-template`
  if you need a ready made template using blaze HTML and TailwindCSS.\n  - Examples
  `with-examples` cabal flag is made False by default. Examples are not exposed modules.\n
  \ - `Ema.Route.Slug` moved to separate package *url-slug*\n\n## 0.4.0.0 -- 2022-01-19\n\n-
  Pin TailwindCSS to 2.x, because the 3.x broke our CDN url\n- Remove unused Cabal
  deps (#61)\n- `Tailwind.layoutWith`: don't hardcode `<body>` attrs\n- Tailwind:
  module revamped and renamed to `Tailwind.Helper.Blaze`\n- `runEma` and friends:
  \n  - return the monadic's action's return value or generated files (dependent type)\n-
  CLI: add `run` subcommand that takes `--host` and `--port` (and remove environment
  hacks of $HOST and $PORT)\n\n## 0.2.0.0 -- 2021-11-21\n\n- TODO(doc) runEma's action
  gets the `CLI.Action` as argument, to prevent the `gen` command from needing to
  monitoring files.\n- Live Server\n  - Avoid unncessary DOM patch on page load\n
  \ - Handle invalid routes gracefully without breaking websocket\n  - Re-add `<script>`
  tags on hot reload\n  - Scroll to top on route switches\n  - Use secure websockets
  when on HTTPS\n  - Bind to loopback (127.0.0.1) for security reasons\n  - Do not
  handle target=_blank links in websocket route switch\n- `Asset` type\n  - Introduce
  the `Asset` type to distinguishing between static files and generated files. The
  later can be one of `Html` or `Other`, allowing the live server to handle them sensibly.\n
  \ - `Ema` typeclass: \n    - Drop `staticAssets` in favour of `allRoutes` (renamed
  from `staticRoutes`) returning all routes including both generated and static routes.\n
  \   - Drop `Slug` and use plain `FilePath`. Route encoder and decoder deal directly
  with the on-disk path of the generated (or static) files.\n  - Make the render function
  (which `runEma` takes) return a `Asset LByteString` instead of `LByteString` such
  that it can handle all routes, and handle static files as well as generation of
  non-HTML content (eg: RSS)\n  - Allow copying static files anywhere on the filesystem\n-
  `routeUrl`: \n  - Unicode normalize as well URI encode route URLs\n  - now returns
  relative URLs (ie. without the leading `/`)\n    - Use the `<base>` tag to specify
  an explicit prefix for relative URLs in generated HTML. This way hosting on GitHub
  Pages without CNAME will continue to have functional links.\n  - Fix: prevent encoding
  of non-HTML paths\n  - Now takes the `model` type as argument, inasmuch as `encodeRoute`
  takes it as as well (to accomodate scenarios where route path can only be computed
  depending on model state; storing slug aliases for instance)\n  - Add `routeUrlWith`
  for non-pretty URLs\n- `Ema.Slug`\n  - Add `Ord`, `Generic`, `Data` and Aeson instances
  to `Slug`\n  - Unicode normalize slugs using NFC\n  - Add `decodeSlug` and `encodeSlug`\n-
  Add default implementation based on Enum for `allRoutes`\n- Warn, without failing,
  on missing static assets during static generation\n- Static generation\n  - Use
  block buffering to prevent logging from slowing down site generation\n  - Write
  .nojekyll\n- CLI\n  - Removed `-C` argument (orthogonal to Ema)\n- Helpers\n  -
  Helpers.FileSystem\n    - Add Union mount support; re-exported from `unionmount`
  library\n    - enrich FileAction type to distinguish between existance and new and
  update states\n  - Helpers.Tailwind\n    - add overflow-y-scroll to body\n    -
  Add twind shim *before* application's head\n    - CDN: Use latest version always.\n
  \ - Helpers.Markdown\n    - add helpers to parse markdown; `parseMarkdownWithFrontMatter`
  and `parseMarkdown`\n- Examples\n  - ~~Remove Ex03_Documentation.hs (moved to separate
  repo, `ema-docs`)~~ Back to ./docs, but using Emanote.\n  - Add Ex03_Basic.hs example\n\n##
  0.1.0.0 -- 2021-04-26\n\n* First version. Released on an unsuspecting world.\n"
basic-deps:
  warp: -any
  monad-logger-extras: -any
  wai-websockets: -any
  optics-core: -any
  dependent-sum: -any
  wai: -any
  constraints-extras: -any
  sop-core: -any
  unliftio: -any
  dependent-sum-template: -any
  base: '>=4.13.0.0 && <4.17.0.0.0'
  text: -any
  filepath: -any
  async: -any
  websockets: -any
  data-default: -any
  lvar: -any
  relude: '>=1.0'
  mtl: -any
  monad-logger: -any
  file-embed: -any
  optparse-applicative: -any
  wai-middleware-static: -any
  url-slug: -any
  http-types: -any
  aeson: -any
  filepattern: -any
  neat-interpolation: -any
  directory: -any
all-versions:
- 0.1.0.0
- 0.2.0.0
- 0.4.0.0
- 0.6.0.0
- 0.8.0.0
- 0.8.2.0
- 0.10.0.0
author: Sridhar Ratnakumar
latest: 0.10.0.0
description-type: markdown
description: |
  # ema

  <img width="10%" src="https://ema.srid.ca/favicon.svg">

  [![Hackage](https://img.shields.io/hackage/v/ema.svg?logo=haskell)](https://hackage.haskell.org/package/ema)

  Ema is a next-gen **Haskell** library toolkit for building [jamstack-style](https://jamstack.org/) static sites, with fast hot reload. See [ema.srid.ca](https://ema.srid.ca/) for further information.

  https://user-images.githubusercontent.com/3998/116333460-789c1400-a7a1-11eb-8d28-297c349e42c6.mp4

  ## Hacking

  *NOTE: `flake.nix` uses GHC 9.2 which is not yet the default in `nixpkgs`, so you may want to use the [garnix cache](https://garnix.io/docs/caching) to avoid long compilation times.*

  Run `bin/run`. This runs the Ex04_Multi example.

  To run the docs, run `nix run github:EmaApps/emanote -- -L ./docs`.

  ## Getting Started

  https://ema.srid.ca/start

  ## Discussion

  To discuss the Ema project, [join Matrix][matrix] or post in [GitHub Discussions][ghdiscuss].

  [matrix]: https://matrix.to/#/#ema:matrix.org
  [ghdiscuss]: https://github.com/EmaApps/ema/discussions
license-name: AGPL-3.0-only
