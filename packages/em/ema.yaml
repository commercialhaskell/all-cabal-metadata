homepage: https://ema.srid.ca/
changelog-type: markdown
hash: acbc153ad411665361b36c5cfaee5ca5e9cc285b8caf324bd62c08a600d6b207
test-bench-deps: {}
maintainer: srid@srid.ca
synopsis: Static site generator library with hot reload
changelog: "# Revision history for ema\n\n## 0.2.0.0 -- 2021-11-21\n\n- TODO(doc)
  runEma's action gets the `CLI.Action` as argument, to prevent the `gen` command
  from needing to monitoring files.\n- Live Server\n  - Avoid unncessary DOM patch
  on page load\n  - Handle invalid routes gracefully without breaking websocket\n
  \ - Re-add `<script>` tags on hot reload\n  - Scroll to top on route switches\n
  \ - Use secure websockets when on HTTPS\n  - Bind to loopback (127.0.0.1) for security
  reasons\n  - Do not handle target=_blank links in websocket route switch\n- `Asset`
  type\n  - Introduce the `Asset` type to distinguishing between static files and
  generated files. The later can be one of `Html` or `Other`, allowing the live server
  to handle them sensibly.\n  - `Ema` typeclass: \n    - Drop `staticAssets` in favour
  of `allRoutes` (renamed from `staticRoutes`) returning all routes including both
  generated and static routes.\n    - Drop `Slug` and use plain `FilePath`. Route
  encoder and decoder deal directly with the on-disk path of the generated (or static)
  files.\n  - Make the render function (which `runEma` takes) return a `Asset LByteString`
  instead of `LByteString` such that it can handle all routes, and handle static files
  as well as generation of non-HTML content (eg: RSS)\n  - Allow copying static files
  anywhere on the filesystem\n- `routeUrl`: \n  - Unicode normalize as well URI encode
  route URLs\n  - now returns relative URLs (ie. without the leading `/`)\n    - Use
  the `<base>` tag to specify an explicit prefix for relative URLs in generated HTML.
  This way hosting on GitHub Pages without CNAME will continue to have functional
  links.\n  - Fix: prevent encoding of non-HTML paths\n  - Now takes the `model` type
  as argument, inasmuch as `encodeRoute` takes it as as well (to accomodate scenarios
  where route path can only be computed depending on model state; storing slug aliases
  for instance)\n  - Add `routeUrlWith` for non-pretty URLs\n- `Ema.Slug`\n  - Add
  `Ord`, `Generic`, `Data` and Aeson instances to `Slug`\n  - Unicode normalize slugs
  using NFC\n  - Add `decodeSlug` and `encodeSlug`\n- Add default implementation based
  on Enum for `allRoutes`\n- Warn, without failing, on missing static assets during
  static generation\n- Static generation\n  - Use block buffering to prevent logging
  from slowing down site generation\n  - Write .nojekyll\n- CLI\n  - Removed `-C`
  argument (orthogonal to Ema)\n- Helpers\n  - Helpers.FileSystem\n    - Add Union
  mount support; re-exported from `unionmount` library\n    - enrich FileAction type
  to distinguish between existance and new and update states\n  - Helpers.Tailwind\n
  \   - add overflow-y-scroll to body\n    - Add twind shim *before* application's
  head\n    - CDN: Use latest version always.\n  - Helpers.Markdown\n    - add helpers
  to parse markdown; `parseMarkdownWithFrontMatter` and `parseMarkdown`\n- Examples\n
  \ - ~~Remove Ex03_Documentation.hs (moved to separate repo, `ema-docs`)~~ Back to
  ./docs, but using Emanote.\n  - Add Ex03_Basic.hs example\n\n## 0.1.0.0 -- 2021-04-26\n\n*
  First version. Released on an unsuspecting world.\n"
basic-deps:
  warp: -any
  monad-logger-extras: -any
  wai-websockets: -any
  wai: -any
  commonmark-pandoc: -any
  unliftio: -any
  stm: -any
  base: '>=4.13.0.0 && <=4.17.0.0'
  time: -any
  blaze-markup: -any
  parser-combinators: -any
  unicode-transforms: -any
  text: -any
  safe-exceptions: -any
  megaparsec: -any
  filepath: -any
  async: -any
  websockets: -any
  parsec: -any
  data-default: -any
  pandoc-types: -any
  lvar: -any
  containers: -any
  relude: '>=0.7 && <1.0'
  commonmark-extensions: -any
  uri-encode: -any
  blaze-html: -any
  monad-logger: -any
  commonmark: -any
  optparse-applicative: -any
  wai-middleware-static: -any
  fsnotify: ^>=0.3
  http-types: -any
  unionmount: -any
  aeson: -any
  filepattern: -any
  yaml: -any
  neat-interpolation: -any
  directory: -any
all-versions:
- 0.1.0.0
- 0.2.0.0
author: Sridhar Ratnakumar
latest: 0.2.0.0
description-type: markdown
description: "# ema\n\n<img width=\"10%\" src=\"https://ema.srid.ca/favicon.svg\">\n\n[![Hackage](https://img.shields.io/hackage/v/ema.svg?logo=haskell)](https://hackage.haskell.org/package/ema)\n[![FAIR](https://img.shields.io/badge/FAIR-pledge-blue)](https://www.fairforall.org/about/)\n\nEma
  is a next-gen **Haskell** library toolkit for building [jamstack-style](https://jamstack.org/)
  static sites, with fast hot reload. See [ema.srid.ca](https://ema.srid.ca/) for
  further information.\n\nhttps://user-images.githubusercontent.com/3998/116333460-789c1400-a7a1-11eb-8d28-297c349e42c6.mp4\n\n##
  Hacking\n\nRun `bin/run` (or <kbd>Ctrl+Shift+B</kbd> in VSCode). This runs the clock
  example (which updates every second, only to demonstrate hot reload); modify `./.ghcid`
  to run a different example. \n\n## Getting Started\n\nhttps://ema.srid.ca/start\n"
license-name: AGPL-3.0-only
