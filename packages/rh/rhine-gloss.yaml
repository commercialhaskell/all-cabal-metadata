homepage: ''
changelog-type: markdown
hash: 3f71025a911e31d8795db80ae38e9ca0c732500f19acbe0953ee28a4ff7c9803
test-bench-deps: {}
maintainer: programming@manuelbaerenz.de
synopsis: Gloss backend for Rhine
changelog: |
  # Revision history for rhine-gloss

  ## 0.7.0

  * Reworked `gloss` backends.
    There are now two pure backends and an `IO` backend.

  ## 0.4.0.0 -- 2017.12.04

  * Version bump

  ## 0.3.0.0  -- 2017-11-30

  * Added simple example.

  ## 0.2.0.0  -- 2017-11-29

  * First version. Version numbers follow rhine.
basic-deps:
  gloss: '>=1.12'
  dunai: ^>=0.9
  base: '>=4.14 && <4.18'
  rhine-gloss: -any
  mmorph: '>=1.1'
  rhine: ==0.9
  transformers: '>=0.5'
all-versions:
- 0.3.0.0
- 0.4.0.0
- 0.4.0.1
- 0.4.0.4
- 0.5.0.0
- 0.5.0.1
- 0.5.1.0
- 0.6.0
- 0.6.0.1
- 0.7.0
- 0.7.1
- 0.8.0.0
- 0.8.0.1
- 0.8.1
- 0.8.1.1
- '0.9'
author: Manuel BÃ¤renz
latest: '0.9'
description-type: markdown
description: |
  # README

  This package provides a simple wrapper for the `gloss` library,
  or rather the function `Graphics.Gloss.play`,
  enabling you to write `gloss` applications as signal functions.
  An example "gears" program, which you can run as `cabal run rhine-gloss-gears`
  or `stack build && stack exec rhine-gloss-gears`,
  now becomes as simple as:

  ```haskell
  module README where

  import FRP.Rhine.Gloss


  -- | Calculate a gear wheel rotated by a certain angle.
  gears :: Float -> Picture
  gears angle = color green $ pictures
    $ circleSolid 60
    : map (rotate angle) [ rotate (45 * n) $ rectangleSolid 20 150 | n <- [0..3] ]

  -- | Rotate the gear with a constant angular velocity.
  mainClSF :: GlossClSF
  mainClSF = timeInfoOf sinceInit >>> arr (* 50) >>> arr gears

  main :: IO ()
  main = flowGloss defaultSettings mainClSF
  ```

  ## Installation

  Since `gloss` is based on `OpenGL`,
  you will need to install the same dependencies as for that.
  Typically, this are the `GL`, `GLU` and `GLUT` libraries.
  (On Debian-like systems, `sudo apt-get install libgl1-mesa-dev libglu1-mesa-dev freeglut3-dev` should suffice.)

  When building with `stack`, it is assumed that you have `nix-shell` installed,
  which will automatically get these dependencies for you.
license-name: BSD-3-Clause
