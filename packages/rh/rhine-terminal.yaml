homepage: ''
changelog-type: markdown
hash: 07dec65dd9a31e2f089a51d27e48097b4b47cadc7e3f5ea7060839b9ece3d2e6
test-bench-deps:
  exceptions: '>=0.10.4'
  stm: '>=2.5.0'
  base: '>=4.14 && <4.18'
  time: '>=1.9.3'
  hspec: -any
  text: '>=1.2.5.0'
  rhine-terminal: -any
  terminal: '>=0.2.0.0'
  rhine: ==1.1
  transformers: '>=0.5'
maintainer: programming@manuelbaerenz.de, jun@iilab.org
synopsis: Terminal backend for Rhine
changelog: |
  # Revision history for rhine-terminal

  ## 1.1

  * dunai-0.11 compatibility

  ## 1.0

  * Removed schedules. See the [page about changes in version 1](/version1.md).

  ## 0.8.1 -- 2022-05-21

  * First version. Version numbers follow rhine.
basic-deps:
  exceptions: '>=0.10.4'
  dunai: ^>=0.11
  base: '>=4.14 && <4.18'
  time: '>=1.9.3'
  text: '>=1.2.5.0'
  rhine-terminal: -any
  monad-schedule: '>=0.1.2'
  terminal: '>=0.2.0.0'
  rhine: ==1.1
  transformers: '>=0.5'
all-versions:
- 0.8.1
- 0.8.1.1
- '0.9'
- '1.0'
- '1.1'
author: Manuel BÃ¤renz, Jun Matsushita
latest: '1.1'
description-type: markdown
description: |
  # README

  This package provides an interface for the [`haskell-terminal` library](https://github.com/lpeterse/haskell-terminal), enabling you to write `terminal` applications as signal functions.

  It consists of a `TerminalEventClock` which provides terminal events, a `flowTerminal` allowing you to run `Rhine`s which can receive terminal events and display to a terminal, as well as a `terminalConcurrently` schedule to coordinate multiple `Rhine`s.

  It also probides a simple example program,
  which you can run as `cabal run rhine-terminal-simple`
  or `nix build .#rhine-terminal && result/bin/rhine-terminal-simple`.
license-name: BSD-3-Clause
