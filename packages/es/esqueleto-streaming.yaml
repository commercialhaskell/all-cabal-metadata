homepage: https://github.com/SupercedeTech/persistent-postgresql-streaming#readme
changelog-type: markdown
hash: 6ceeee8d1103f55b8a0907f12a09a35c7a81a9e8113f43d60089dae025086667
test-bench-deps: {}
maintainer: support@supercede.com
synopsis: Memory-constant streaming of Esqueleto results from PostgreSQL
changelog: |
  # Changelog for esqueleto-streaming

  # 0.1.0.0

    * Exposed `Database.Esqueleto.PostgreSQL.Streaming`
      * Added `selectCursor`
basic-deps:
  persistent-postgresql-streaming: '>=0.1 && <0.2'
  base: '>=4.7 && <5'
  persistent-postgresql: '>=2.13.2 && <2.14'
  conduit: '>=1 && <1.4'
  esqueleto: '>=3.5 && <3.6'
  transformers: '>=0.5 && <0.6'
  resourcet: '>=0.3 && <2'
all-versions:
- 0.1.0.0
author: Isaac van Bakel
latest: 0.1.0.0
description-type: markdown
description: |
  # esqueleto-streaming

  This library allows for memory-constant streaming of the results of [`esqueleto`](https://hackage.haskell.org/package/esqueleto) queries from PostgreSQL databases.

  This code makes use of the PostgreSQL-only [cursors](https://www.postgresql.org/docs/current/plpgsql-cursors.html), which allow for batched access to the result set of a query at speeds comparable to loading all the results into memory at once.

  See the [main project README](https://github.com/SupercedeTech/persistent-postgresql-streaming/blob/main/README.md) for more.

  ## Streaming results from Esqueleto queries

  The main function of this library is `selectCursor`, which can be used in place of [`select`](https://hackage.haskell.org/package/esqueleto-3.5.3.0/docs/Database-Esqueleto.html#v:select) to run an Esqueleto query. `selectCursor` runs in a `ConduitT` - consuming the conduit will pull results from the database in constant memory.

  ## FAQ

  ### Why is `selectCursor` so slow?

  Have you configured PostgreSQL correctly? See the section in the [README](https://github.com/SupercedeTech/persistent-postgresql-streaming/blob/main/README.md) about it.
license-name: BSD-3-Clause
