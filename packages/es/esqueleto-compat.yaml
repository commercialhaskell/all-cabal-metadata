homepage: https://github.com/parsonsmatt/esqueleto-compat#readme
changelog-type: markdown
hash: 3af0dea729342baa343670f544938d9b6f73b33a0249a679a09eaacff48d2161
test-bench-deps:
  esqueleto-compat: -any
  base: '>=4.7 && <5'
  hspec: -any
maintainer: parsonsmatt@gmail.com
synopsis: Compatibility operators for Persistent and Esqueleto
changelog: "# Changelog for esqueleto-compat\n\n## 0.0.2.0\n\n- [#2](https://github.com/parsonsmatt/esqueleto-compat/pull/2)\n
  \   - Add `tabulateRecordA` to `Record` class. `tabulate` and `allFields` are now
  normal functions.\n    - Provide a default implementation of `recordFieldLabel`
  for `Show`able fields.\n    \n## 0.0.1.1\n\n* [#4](https://github.com/parsonsmatt/esqueleto-compat/pull/4)\n
  \   * Compatibility with `template-haskell-2.18` and above\n"
basic-deps:
  base: '>=4.13 && <5'
  persistent: -any
  conduit: -any
  esqueleto: -any
  transformers: -any
  resourcet: -any
all-versions:
- 0.0.2.0
author: Matt von Hagen
latest: 0.0.2.0
description-type: markdown
description: |
  # esqueleto-compat

  This library aims to provide compatibility operators that can allow esqueleto and persistent to be imported together.

  Operators like `==.` and `>=.` are defined as class members, and you can use them in the same module.
  Functions like `update` that are shared in both libraries are given an `E` suffix for the `esqueleto` version.
  And functions for operating on `SqlExpr` are given an `_` suffix when the name would otherwise be a conflict.

  ## Example:

  ```haskell
  import Database.Esqueleto.Compat

  foo :: MonadIO m => TableId -> SqlPersistT m ()
  foo tableKey = do
      -- Esqueleto:
      updateE $ \table -> do
          set [table ^. TableField =. val "Hello"] table
          where_ $ table ^. TableId ==. val tableKey

      -- Persistent
      update tableKey [TableField =. "Goodbye"]

      -- Esqueleto:
      select $ do
          pure $ exists_ $ do
              t <- from $ table @Table
              where_ $ t ^. TableField ==. val "Hello"

      -- Persistent
      exists [TableField ==. val "Hello"]
  ```
license-name: BSD-3-Clause
