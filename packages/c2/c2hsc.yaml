all-versions:
- 0.1.0
- 0.2.0
- 0.3.0
- 0.3.1
- 0.3.2
- 0.3.3
- 0.4.0
- 0.5.0
- 0.5.1
- 0.6.2
- 0.6.3
- 0.6.4
- 0.6.5
- 0.7.1
author: John Wiegley
basic-deps:
  HStringTemplate: '>=0.7.1'
  base: '>=4 && <5'
  c2hsc: '>=0'
  cmdargs: '>=0.9'
  containers: '>=0.4'
  data-default: '>=0.5.3'
  directory: '>=1.1'
  filepath: '>=1.3'
  language-c: '>=0.4'
  logging: '>=1.3.0'
  mtl: '>=2.0'
  pretty: '>=1.1'
  split: '>=0.2'
  temporary: '>=1.1.2.5'
  text: '>=0.11.3.1'
  transformers: '>=0.2'
changelog: ''
changelog-type: ''
description: |
  Converts C API header files to `.hsc` and `.hsc.helper.c` files

      Usage: c2hsc --prefix=<Lib Prefix> <FILE>.h

  This will create `<FILE>.hsc`, and `<FILE>.hsc.helper.c` if the header file
  contains inline functions.

  For example, in `hlibgit2` on the Mac I'm using:

      c2hsc --prefix=Bindings.Libgit2 --cppopts=-U__BLOCKS__ \
          libgit2/include/git2/tree.h

  Known issues:

   - Need to output vararg functions with a comment mentioning they are not
     translatable to the Haskell FFI

  Also, please note that this tool will never be 100% accurate.  It cannot
  translate macros, or anything related to the preprocessor, for example.  It
  often misses necessary `#include` files, and will get them wrong in any case
  if preprocessor conditionals are involved.

  The goal of `c2hsc` is to solve the hardest 80% of the problem of creating an
  FFI library.  The remaining 20%, plus validation of the results, is an
  exercise necessarily left to the user.
description-type: markdown
hash: f4e9261569a5ddb39d20dcd2fbd20405204436a18b6081db550c77e42c4c4849
homepage: https://github.com/jwiegley/c2hsc
latest: 0.7.1
license-name: BSD-3-Clause
maintainer: John Wiegley <johnw@newartisans.com>
synopsis: Convert C API header files to .hsc and .hsc.helper.c files
test-bench-deps:
  base: '>=4 && <5'
  c2hsc: '>=0'
  here: '>=1.2.3'
  hspec: '>=1.8.3'
  logging: '>=1.3.0'
  monad-logger: '>=0.3.4.1'
  text: '>=0.11.3.1'
