all-versions:
- 0.9.0
- 0.9.0.1
- 0.9.0.2
- 0.9.0.3
- 0.9.0.4
- 0.9.0.5
- 0.9.0.6
- 0.9.0.7
- 0.9.0.8
- 0.9.0.9
- 0.9.0.10
- 0.9.0.11
- 0.10.0
- 0.10.0.1
author: Duncan Coutts, Mikolaj Konarski, Edsko de Vries
basic-deps:
  Cabal-ide-backend: '>=1.23'
  aeson: '>=0.6.2 && <0.12'
  async: '>=2.0 && <2.2'
  attoparsec: '>=0.10 && <0.14'
  base: '>=4 && <5'
  binary: '>=0.7.1.0 && <0.8'
  bytestring: '>=0.9.2 && <1'
  bytestring-trie: '>=0.2 && <0.3'
  containers: '>=0.4.1 && <1'
  crypto-api: '>=0.12 && <0.14'
  data-accessor: '>=0.2 && <0.3'
  data-accessor-mtl: '>=0.2 && <0.3'
  directory: '>=1.1 && <1.3'
  executable-path: '>=0.0 && <0.1'
  filemanip: '>=0.3.6.2 && <0.4'
  filepath: '>=1.3 && <1.5'
  fingertree: '>=0.0.1 && <0.2'
  ghc-prim: '>=0'
  ide-backend: '>=0'
  ide-backend-common: '>=0.10 && <0.11'
  mtl: '>=2.1 && <2.3'
  network: '>=0'
  pretty-show: '>=0'
  process: '>=1.1 && <1.3'
  pureMD5: '>=2.1 && <2.2'
  random: '>=1.0.1 && <2'
  tagged: '>=0.4 && <0.9'
  template-haskell: '>=0'
  temporary: '>=1.1.2.4 && <1.3'
  text: '>=0.11 && <1.3'
  time: '>=1.4 && <1.6'
  transformers: '>=0.3 && <0.5'
  unix: '>=2.5 && <2.8'
  unix-compat: '>=0.4.1.1 && <0.4.2'
  unordered-containers: '>=0.2.3 && <0.3'
  utf8-string: '>=0.3 && <1.1'
changelog: ''
changelog-type: ''
description: |
  ide-backend
  ===========

  [![Build Status](https://travis-ci.org/fpco/ide-backend.svg?branch=master)](https://travis-ci.org/fpco/ide-backend)

  In order to use this package, you must have the `ide-backend`, `ide-backend-server`, and `ide-backend-rts` packages installed.

  Hello World
  -----------

  The following simple example demonstrates basic usage of ide-backend.

  ```haskell
  {-# LANGUAGE OverloadedStrings #-}
  import qualified Data.ByteString.Char8 as S8
  import           Data.Monoid           ((<>))
  import           IdeSession

  main :: IO ()
  main = do
      -- Initialization and providing some code
      sess <- initSession defaultSessionInitParams defaultSessionConfig
      let upd = updateSourceFile "Main.hs" "main = putStrLn \"Hello World\""
             <> updateCodeGeneration True
             <> updateGhcOpts ["-Wall"]
      updateSession sess upd print -- print is used for progress updates

      -- Print errors and warnings
      errs <- getSourceErrors sess
      mapM_ print errs

      -- Run the code
      ra <- runStmt sess "Main" "main"
      let loop = do
              res <- runWait ra
              case res of
                  Left bs -> S8.putStr bs >> loop
                  Right rr -> putStrLn $ "Run result: " ++ show rr
      loop

      -- Get some type information
      expTypes <- getExpTypes sess
      print $ expTypes "Main" SourceSpan
          { spanFilePath = "Main.hs"
          , spanFromLine = 1
          , spanFromColumn = 8
          , spanToLine = 1
          , spanToColumn = 9
          }

      -- Autocompletion
      autoCompletion <- getAutocompletion sess
      print $ autoCompletion "Main" "putS"
  ```

  Sample output for this run:

  ```
  [1 of 1] Compiling Main
  SourceError {errorKind = KindWarning, errorSpan = Main.hs@1:1-1:30, errorMsg = "Top-level binding with no type signature: main :: IO ()"}
  Hello World
  Run result: RunOk
  [(Main.hs@1:8-1:16,"String -> IO ()"),(Main.hs@1:8-1:30,"IO ()")]
  [putStr (VarName) defined in base-4.8.0.0:System.IO at <no location info> (home base-4.8.0.0:System.IO) (imported from base-4.8.0.0:Prelude at Main.hs@1:1-1:1),putStrLn (VarName) :: String -> IO () defined in base-4.8.0.0:System.IO at <no location info> (home base-4.8.0.0:System.IO) (imported from base-4.8.0.0:Prelude at Main.hs@1:1-1:1)]
  ```

  Versions and releases
  ---------------------

  The ide-backend component now uses versioned releases (following the normal
  package version policy). While we do not make tarballs, we will always tag
  versions.

  Please *only* use tagged versions and not intermediate git hashes. Instead,
  please request new tagged releases (either from head or based on old versions).

  Please consult the changelog below when integrating a new version of
  ide-backend. The changelog is the place where we will point out:

   * new features;
   * interface changes;
   * and other relevant information such as which areas may need particular
     attention and testing during integration.
description-type: markdown
hash: cf76e099362742622e03b1463e55eb77e4488755afbc768fe2aca9e8c163662d
homepage: ''
latest: 0.10.0.1
license-name: MIT
maintainer: Duncan Coutts <duncan@well-typed.com>
synopsis: An IDE backend library
test-bench-deps:
  Cabal-ide-backend: '>=0'
  HUnit: '>=1.2 && <1.3'
  aeson: '>=0.6 && <0.12'
  async: '>=2.0 && <2.2'
  base: '>=4 && <5'
  binary: '>=0.7.1.0 && <0.8'
  bytestring: '>=0.9.2 && <1'
  containers: '>=0.4.1 && <1'
  deepseq: '>=0'
  directory: '>=1 && <2'
  executable-path: '>=0.0 && <0.1'
  filemanip: '>=0.3.6.2 && <0.4'
  filepath: '>=1 && <2'
  ide-backend: '>=0'
  ide-backend-common: '>=0'
  monads-tf: '>=0'
  network: '>=0'
  parallel: '>=0'
  process: '>=1 && <2'
  random: '>=1.0.1 && <2'
  regex-compat: '>=0'
  stm: '>=0'
  tagged: '>=0'
  tasty: '>=0'
  template-haskell: '>=0'
  temporary: '>=1.1.2.4 && <1.3'
  test-framework: '>=0.6 && <0.9'
  test-framework-hunit: '>=0.2 && <0.4'
  text: '>=0'
  unix: '>=2.5 && <2.8'
  utf8-string: '>=0'
