all-versions:
- 0.1.0.0
- 0.2.0.0
- 0.3.0.0
- 0.3.1.0
- 0.3.1.1
- 0.3.1.2
- 0.4.0.0
- 0.5.0.0
- 0.6.0.0
- 0.6.1.0
- 0.6.1.1
author: Aleksey Khudyakov <alexey.skladnoy@gmail.com>
basic-deps:
  base: '>=4.9 && <5'
  deepseq: '>=0'
  fixed-vector: '>=1.0.0.0'
  primitive: '>=0.6.2'
changelog: "Changes in 0.6.1.1\n\n  * doctests are marked as non-buildable on GHC9.0
  & 9.2\n\n\nChanges in 0.6.1.0\n\n  * `foldMap`, `foldMapF`, `foldMapNatF` is added\n\n
  \ * GHC 9.0.1 compatibility\n\n\nChanges in 0.6.0.0\n\n  * Type class `TyLookup`
  and `tyLookup` & `tyLookupF` added for lookup up field\n    by its type.\n\n  *
  `:&&:` type class for composing constraints added\n\n  * `Data.Vector.HFixed.fold`
  removed since it was completely unusable\n  \n  * `index` and `set` from `Data.Vector.HFixed`
  use GHC's Nats for indexing\n\n  * Documentation improvements and doctests test
  suite\n\n\nChanges in 0.5.0.0\n\n  * GHC8.4 compatibility release. Semigroup instance
  is added for HVec\n  \n  * Classes `Arity`, `ArityC`, and `HVectorF` are now polykinded\n\nChanges
  in 0.4.0.0\n\n  * Major rework of API. `Fun` and `TFun` are unified. `Fun ~ TFun
  Identity`.\n    Type class `ArityC` now contain special variants of `accum` and\n
  \   `arity` instead of building data structure containing all necessary dictionaries.\n\n
  \ * `Monad` constraints now relaxed to `Applicative` where appropriate\n\n  * Most
  functions now have 3 variants: typeclass-based for `HVector`,\n    typeclass-based
  for `HVectorF` and ones that use natural transformations for\n    `HVectorF`. Some
  have been renamed to get consistent naming.\n\n  * Support for GHC 7.10 is dropped\n\n
  \ * `HVecF` definition is moved to `Data.Vector.HFixed.HVec`\n\nChanges in 0.3.1.2\n\n
  \ * Fix build for GHC 8.2\n\nChanges in 0.3.1.0\n\n  * Fix build for GHC 8.0\n\n\nChanges
  in 0.3.1.0\n\n  * replicateF added\n\n  * type signature of zipMonoF generalized\n\n\nChanges
  in 0.3.0.0\n\n  * HVector instances up to 32-element tuples\n\n  * `asCVec` function
  added\n\n  * `ContVec` reexported from Data.Vector.HFixed\n\n\nChanges in 0.2.0.0\n\n
  \ * Type changing lenses added\n\n  * zipMonoF added\n\n  * types of monomorphize
  and monomorphizeF corrected\n"
changelog-type: markdown
description: |-
  Library allow to work with arbitrary product types in generic
  manner. They could be constructed, destucted, converted provided
  they are product of identical types.
description-type: haddock
hash: 9b3a05fac4fff2a9f451eb00fe2e952a1ab1bf7344234541bf3225ec3b3c4546
homepage: http://github.org/Shimuuar/fixed-vector-hetero
latest: 0.6.1.1
license-name: BSD-3-Clause
maintainer: Aleksey Khudyakov <alexey.skladnoy@gmail.com>
synopsis: Library for working with product types generically
test-bench-deps:
  base: '>=4.9 && <5'
  doctest: '>=0.15 && <0.20'
  fixed-vector: '>=1.0'
  fixed-vector-hetero: '>=0'
