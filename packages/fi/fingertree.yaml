all-versions:
- '0.0'
- 0.0.1.0
- 0.0.1.1
- 0.1.0.0
- 0.1.0.1
- 0.1.0.2
- 0.1.1.0
- 0.1.2.1
- 0.1.3.1
- 0.1.4.0
- 0.1.4.1
- 0.1.4.2
- 0.1.5.0
- 0.1.6.1
- 0.1.6.2
author: ''
basic-deps:
  base: <6
  deepseq: '>=1.3 && <1.6'
changelog: "-*-change-log-*-\n\n0.1.6.2 Ross Paterson <R.Paterson@city.ac.uk> Jul
  2025\n\t* Change http links in docs to https\n\n0.1.6.1 Ross Paterson <R.Paterson@city.ac.uk>
  May 2025\n\t* Added NFData instances\n\n0.1.5.0 Ross Paterson <R.Paterson@city.ac.uk>
  Jan 2022\n\t* Added foldlWithPos, foldrWithPos, foldlWithContext, foldrWithContext
  (James Cranch)\n\t* Fixed bug in traverseWithContext\n\t* Made split and search
  stricter\n\n0.1.4.2 Ross Paterson <R.Paterson@city.ac.uk> Dec 2018\n\t* Fixed bug
  in search\n\n0.1.4.1 Ross Paterson <R.Paterson@city.ac.uk> Mar 2018\n\t* Disabled
  Generic instances for GHC <= 7.6\n\n0.1.4.0 Ross Paterson <R.Paterson@city.ac.uk>
  Mar 2018\n\t* Added Generic instances\n\n0.1.3.1 Ross Paterson <R.Paterson@city.ac.uk>
  Dec 2017\n\t* Fixed Data.IntervalMap.FingerTree.bounds\n\n0.1.3.0 Ross Paterson
  <R.Paterson@city.ac.uk> Nov 2017\n\t* Fixed Show instance for IntervalMap\n\t* Added
  bounds, leastView and splitAfter to IntervalMap\n\n0.1.2.1 Ross Paterson <R.Paterson@city.ac.uk>
  Oct 2017\n\t* Fix for GHC <= 7.8\n\n0.1.2.0 Ross Paterson <R.Paterson@city.ac.uk>
  Oct 2017\n\t* Removed constraint on the type of null\n\t* Added versions of fmap
  and traverse passing the measures of both sides\n\t* Added new search function,
  a symmetrical generalization of split\n\t* Added Eq, Ord and Show instances for
  IntervalMap and PriorityQueue\n\t* Made low and high into separate functions\n\t*
  Updated for Monoid, Foldable, Traversable in Prelude\n\t* Made compatible with Semigroup/Monoid
  proposal\n\n0.1.1.0 Ross Paterson <R.Paterson@city.ac.uk> Jun 2015\n\t* Added Safe
  for GHC >= 7.2\n\t* Added AutoDeriveTypeable for GHC >= 7.10\n\n0.1.0.2 Ross Paterson
  <ross@soi.city.ac.uk> Mar 2015\n\t* Cabal file updates\n\n0.1.0.1 Ross Paterson
  <ross@soi.city.ac.uk> Feb 2015\n\t* fix warnings\n\n0.1.0.0 Ross Paterson <ross@soi.city.ac.uk>
  Jun 2013\n\t* Added Monoid instance for IntervalMap\n\t* Removed unnecessary Measured
  v a constraints on Eq, Ord, and Show instances\n\n0.0.1.1 Ross Paterson <ross@soi.city.ac.uk>
  Sep 2012\n\t* Cabal file updates\n\n0.0.1.0 Ross Paterson <ross@soi.city.ac.uk>
  Jul 2009\n\t* Added Data.IntervalMap.FingerTree and Data.PriorityQueue.FingerTree\n\n0.0
  Ross Paterson <ross@soi.city.ac.uk> May 2007\n\t* Initial revision\n"
changelog-type: text
description: |-
  A general sequence representation with arbitrary
  annotations, for use as a base for implementations of
  various collection types, with examples, as described
  in section 4 of

  * Ralf Hinze and Ross Paterson,
  \"Finger trees: a simple general-purpose data structure\",
  /Journal of Functional Programming/ 16:2 (2006) pp 197-217.
  <https://staff.city.ac.uk/~ross/papers/FingerTree.html>

  For a tuned sequence type, see @Data.Sequence@ in the
  @containers@ package, which is a specialization of
  this structure.
description-type: haddock
hash: e4f181c26c7f88ce480a600d1d412ef997d048b719cace6d21bf9b6329fa6227
homepage: ''
latest: 0.1.6.2
license-name: BSD-3-Clause
maintainer: Ross Paterson <R.Paterson@city.ac.uk>
synopsis: Generic finger-tree structure, with example instances
test-bench-deps:
  HUnit: '>=0'
  QuickCheck: '>=0'
  base: '>=4.2 && <6'
  deepseq: '>=1.3 && <1.6'
  test-framework: '>=0'
  test-framework-hunit: '>=0'
  test-framework-quickcheck2: '>=0'
