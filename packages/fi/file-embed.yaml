homepage: https://github.com/snoyberg/file-embed
changelog-type: markdown
hash: 18beed8999dff37bcffd0d1d8a59dcd406be8e517c10213afefc941091985c06
test-bench-deps:
  bytestring: -any
  base: -any
  filepath: -any
  file-embed: -any
maintainer: Michael Snoyman <michael@snoyman.com>
synopsis: Use Template Haskell to embed file contents directly.
changelog: |
  # ChangeLog for file-embed

  ## 0.0.15.0

  * Add `makeRelativeToLocationPredicate`

  ## 0.0.14.0

  * Add `embedFileIfExists`

  ## 0.0.13.0

  * Ensure that directory listings are returned in sorted order for reproducibility [yesodweb/yesod#1684](https://github.com/yesodweb/yesod/issues/1684)

  ## 0.0.12.0

  * Use the `Bytes` literal on newer GHCs to reduce memory usage during compilation [#36](https://github.com/snoyberg/file-embed/pull/36)

  ## 0.0.11.2

  * Haddock markup fix

  ## 0.0.11.1

  * Support GHC 8.10

  ## 0.0.11

  * embedDirListing [#26](https://github.com/snoyberg/file-embed/pull/26)

  ## 0.0.10.1

  * Minor doc improvements

  ## 0.0.10

  * `makeRelativeToProject`

  ## 0.0.9

  * embedStringFile [#14](https://github.com/snoyberg/file-embed/pull/14)

  ## 0.0.8.2

  * Improve inject documentation [#11](https://github.com/snoyberg/file-embed/issues/11)

  ## 0.0.8.1

  Minor cleanup

  ## 0.0.8

  * Custom postfix for magic string [#7](https://github.com/snoyberg/file-embed/issues/7)

  ## 0.0.7.1

  Minor cleanup
basic-deps:
  bytestring: '>=0.9.1.4'
  base: '>=4.9.1 && <5'
  filepath: -any
  template-haskell: -any
  directory: '>=1.0.0.3'
all-versions:
- 0.0.0
- 0.0.1
- 0.0.2
- 0.0.3
- 0.0.3.1
- 0.0.4
- 0.0.4.1
- 0.0.4.2
- 0.0.4.3
- 0.0.4.4
- 0.0.4.5
- 0.0.4.6
- 0.0.4.7
- 0.0.4.8
- 0.0.4.9
- 0.0.5
- 0.0.6
- 0.0.7
- 0.0.7.1
- 0.0.8
- 0.0.8.1
- 0.0.8.2
- 0.0.9
- 0.0.9.1
- 0.0.10
- 0.0.10.1
- 0.0.11
- 0.0.11.1
- 0.0.11.2
- 0.0.12.0
- 0.0.13.0
- 0.0.14.0
- 0.0.15.0
author: Michael Snoyman <michael@snoyman.com>
latest: 0.0.15.0
description-type: markdown
description: |
  ## file-embed

  ![Tests](https://github.com/snoyberg/file-embed/workflows/Tests/badge.svg)

  Use Template Haskell to read a file or all the files in a directory, and turn
  them into (path, bytestring) pairs embedded in your haskell code.
license-name: BSD-2-Clause
