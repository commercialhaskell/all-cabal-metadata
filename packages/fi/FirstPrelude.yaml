homepage: https://github.com/dorchard/FirstPrelude
changelog-type: markdown
hash: 087834b1700ce69e042444cdbda18d8a9ab8c8afa09f90c53bb9a4585f7a20ec
test-bench-deps: {}
maintainer: dom.orchard@gmail.com
synopsis: A version of Prelude suitable for teaching.
changelog: |
  # Revision history for FirstPrelude

  ## 0.1.2.0
  * Include standard definition of `ifThenElse` to allow RebindableSyntax
  to be used.

  ## 0.1.1.0
  * Added in (^) :: Integer -> Integer -> Integer

  ## 0.1.0.0

  * First version. Released on an unsuspecting world.
basic-deps:
  base: '>=4.0.0.0 && <4.16.5.0'
all-versions:
- 0.1.1.0
- 0.1.2.0
author: dorchard
latest: 0.1.2.0
description-type: haddock
description: The design goals are to simplify considerably the Prelude library so
  that basic functional programming can be taught without having to explain type classes.  I
  have observed in several years of teaching Haskell that many beginner mistakes which
  in a language like ML would result in a clear error message instead result in an
  error message about a lack of type class instances. This is unfortunate as type
  classes cannot easily be taught immediately and so beginners are left without as
  much support until they learn more topics. FirstPrelude is designed to simplify
  away as much of this as possible by using very few type classes and making a few
  other simplifying choices. The goal is then for students to switch to regular Prelude
  later in the course. A synposis of the changes can be found on the project homepage.
license-name: BSD-3-Clause
