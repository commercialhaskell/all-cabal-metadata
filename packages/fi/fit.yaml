all-versions:
- '0.5'
- 0.5.1
- 0.5.2
author: Matt Giles
basic-deps:
  attoparsec: '>=0.10.3'
  base: '>=4.7 && <4.9'
  bytestring: '>=0'
  containers: '>=0.5'
  contravariant: '>=0'
  mtl: '>=1.1'
  text: '>=0'
changelog: ''
changelog-type: ''
description: |-
  The FIT protocol is used by many sport and fitness devices made by companies
  like Garmin, for example running watches and bike computers. `fit` provides an
  API for parsing these files for analysis or conversion.

  Currently this package is a pretty low-level effort, and you'll need to be familiar
  with FIT to get much value from it. Specifically, the notion of the FIT \"profile\" is
  ignored entirely, so to make use of the decoded file you'll need to reference the
  \"Profile.xls\" spreadsheet in the <http://www.thisisant.com/resources/fit FIT SDK>.

  The "Fit" module exports a convenient set of data types for examining FIT files, as
  well as some lenses for extracting specific data. It's intended that the API in the
  "Fit" module should be sufficient and convenient for most uses, but if you need access
  to the exact structure of the file you can use the data types in "Fit.Internal.FitFile"
  and parsers in "Fit.Internal.Parse".

  Feel free to contact me if you have any questions, suggestions, or requests.
description-type: haddock
hash: b5d9fb7826e4acbea0eb2ef0c4e894fb99730d64cc9f21493f896f19aecb182d
homepage: ''
latest: 0.5.2
license-name: BSD-3-Clause
maintainer: matt.w.giles@gmail.com
synopsis: FIT file decoder
test-bench-deps:
  QuickCheck: '>=0'
  attoparsec: '>=0'
  base: '>=4.7 && <4.9'
  bytestring: '>=0'
  containers: '>=0'
  fit: '>=0'
  hspec: '>=0'
  hspec-attoparsec: '>=0'
  mtl: '>=0'
  text: '>=0'
