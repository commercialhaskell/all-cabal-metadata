all-versions:
- 0.1.0.0
- 0.1.0.1
- 0.1.0.2
author: comp
basic-deps:
  base: '>=4.12 && <4.21'
changelog: |
  # Changelog for reorder-expression

  ## 0.1.0.2

  * Updated for GHC 9.10.

  ## 0.1.0.1

  * Updated for GHC 9.4, 9.6, 9.8.

  ## 0.1.0.0

  * Initial release.
changelog-type: markdown
description: |
  # reorder-expression

  [![License MIT](https://img.shields.io/badge/license-MIT-blue.svg)](./LICENSE)
  [![Hackage](https://img.shields.io/hackage/v/reorder-expression.svg)](https://hackage.haskell.org/package/reorder-expression)

  A library for reordering expressions in a syntax tree generically according to operator associativity and precedence. This is useful for languages with custom operators which require reordering expressions after collecting their fixities.

  Supports:

  - Any syntax tree data type, e.g. source position-annotated ones.
  - Postfix, prefix, and infix operators, with any arity.
  - Left, right, and non-associative operators and precedence with doubles.

  See documentation for an example.
description-type: markdown
hash: aee0898723246420c713bf0806d63e4b067169289cb595a2e186cda4da970cf9
homepage: https://github.com/1Computer1/reorder-expression
latest: 0.1.0.2
license-name: MIT
maintainer: onecomputer00@gmail.com
synopsis: Reorder expressions in a syntax tree according to operator fixities.
test-bench-deps:
  base: '>=4.12 && <4.21'
  hspec: '>=2.7 && <3'
  optics: '>=0.4 && <0.5'
  parsec: '>=3.1 && <3.2'
  reorder-expression: '>=0'
