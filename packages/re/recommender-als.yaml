all-versions:
- 0.1.0.0
- 0.2.0.0
- 0.2.1.0
- 0.2.1.1
- 0.2.2.0
author: Kari Pahula
basic-deps:
  base: '>=4.11 && <5'
  bytestring: '>=0'
  cassava: '>=0'
  containers: '>=0.5 && <1'
  data-default-class: '>=0.1.2 && <1'
  hmatrix: '>=0.20 && <1'
  optparse-applicative: '>=0'
  parallel: '>=3.2 && <4'
  random: '>=1.1 && <2'
  recommender-als: '>=0'
  text: '>=0'
  vector: '>=0.11 && <1'
changelog: |
  # Revision history for recommender-als

  ## 0.2.2.0 -- 2024-10-13

  * Add an example based on MovieLens data.
  * Add functions related and byDimensions.
  * Optimizations to data initialization and loss minimization.

  ## 0.2.1.1 -- 2020-08-26

  * Add missing enum to mIni construction.

  ## 0.2.1.0 -- 2020-08-26

  * Add buildModelRated.

  ## 0.2.0.0 -- 2020-07-21

  * Expose user and item feature matrices in the model.
  * Use parListChunk and parametrize its use for better parallelization.

  ## 0.1.0.0 -- 2020-07-09

  * First version.
changelog-type: markdown
description: |-
  This package provides a recommendation algorithm based on alternating
  least squares algorithm, as made famous by the Netflix Prize.
  .
  It takes as its input a list of user-item pairs and returns a list of
  recommendations for each user.  The current implementation is limited
  to using unrated pairs.
  .
  The algorithm is parallelized and should be quick enough to train the
  model within seconds for a few thousand users and items.  Getting
  recommendations from a computed model happens nearly instantly.
  .
  For implementation details, see "Large-scale Parallel Collaborative
  Filtering for the Netflix Prize" by Yunhong Zhou, Dennis Wilkinson,
  Robert Schreiber and Rong Pan.
description-type: haddock
hash: 366dbcb920aba00a690e6177b5a4f5eea0d8dce8073d1a566436442d2191b869
homepage: https://gitlab.com/kaol/recommender-als
latest: 0.2.2.0
license-name: BSD-3-Clause
maintainer: kaol@iki.fi
synopsis: Recommendations using alternating least squares algorithm
test-bench-deps: {}
