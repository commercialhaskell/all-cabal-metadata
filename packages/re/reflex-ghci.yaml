homepage: ''
changelog-type: markdown
hash: 6ffbde9436c7782a9035fa12e06dcd16eb7cf9767c58de4bfb80540291c25c10
test-bench-deps:
  bytestring: -any
  base: -any
  reflex-ghci: -any
  filepath: -any
  process: -any
  containers: -any
  reflex: -any
  temporary: '>=1.3 && <1.4'
  reflex-process: -any
  directory: -any
maintainer: maintainer@obsidian.systems
synopsis: A GHCi widget library for use in reflex applications
changelog: |
  # Revision history for reflex-ghci

  ## 0.2.0.1

  * Support reflex-vty 0.5

  ## 0.2.0.0

  * Support ghc 9.6 and reflex-vty 0.4
  * *Breaking change*: Expose a new interface that more robustly represents the state of the child ghci process.
  * Show the most recently run commands and allow user to select from them to see their output

  ## 0.1.5.4

  * Support ghc 8.10 and reflex-vty 0.3

  ## 0.1.5.3

  * Loosen version bounds on optparse-applicative and vty

  ## 0.1.5.2

  * Use reflex-vty 0.2

  ## 0.1.5.1

  * Extend version bounds to support reflex 0.8

  ## 0.1.5.0

  * Fix various circumstances under which reflex-ghci would hang due to failure to properly parse GHCi output or failure to detect filesystem changes (the latter particularly on macOS)

  ## 0.1.4.2

  * Tests: Ensure proper shutdown.
  * Tests: Fix tests for GHC 8.8.4

  ## 0.1.4.1

  * Library: Require at least version 0.7.1 of `reflex`.
  * Library: Require at least version 0.3 of `reflex-process`.
  * Library: Expand version bounds for `regex-tdfa` and `vty`.
  * Tests: Include test fixtures in sdist.
  * Tests: Fix some bugs.

  ## 0.1.4.0

  * Library: Export `shutdown` and `getExitEvent` to make it easier for library users to cleanly exit
  * Library: Fix regex to capture "Failed, one module loaded"
  * Tests: Add basic test suite, covering module loading, expression execution, exceptions, and filesystem notification-based reloading.
  * Library: Reset module output pane scroll position on reload events (like we do with the expression output pane).
  * Executable: Show executable version number (taken from cabal file) in help output

  ## 0.1.3.1

  * Update for compatibility with `reflex-process`-0.2.0.0.

  ## 0.1.3.0

  * Library: Fix parsing of "Failed, n modules loaded." message
  * Library: Properly initialize when GHCi version message is the first output line
  * Executable: Terminate ghci process when ctrl-c is received
  * Library: Don't use a separate process group. Send termination signal to process, not group
  * Library: Use `watchDirectoryTree` from `Reflex.FSNotify` to avoid symlink cycles when enumerating directories

  ## 0.1.2.0

  * Extract console GHCi widgets from the executable into a library module
  * Executable: Run with -Wall when repl command is unspecified

  ## 0.1.1.0

  * Executable: Fix option parser so that there is no expression to evaluate by default

  ## 0.1.0.0

  * Initial release. A reflex-process wrapper for GHCi and cabal repl commands and a reflex-vty-based executable.
basic-deps:
  semialign: '>1 && <2'
  bytestring: '>=0.10 && <0.12'
  these: '>1 && <2'
  unix: '>=2.7 && <2.9'
  base: '>=4.12 && <4.19'
  text: '>=1.2 && <2.1'
  reflex-ghci: -any
  vty: '>=5.21 && <5.39'
  filepath: '>=1.4 && <1.5'
  process: ==1.6.*
  containers: '>=0.6 && <0.7'
  regex-tdfa: '>=1.2.3 && <1.4'
  reflex: '>=0.7.1.0 && <1'
  optparse-applicative: '>=0.14.0 && <0.19'
  reflex-fsnotify: '>=0.3 && <0.4'
  reflex-process: '>=0.3.2 && <0.4'
  fsnotify: '>=0.4 && <0.5'
  reflex-vty: '>=0.3 && <0.6'
  directory: '>=1.3 && <1.4'
all-versions:
- 0.1.0.0
- 0.1.1.0
- 0.1.2.0
- 0.1.3.0
- 0.1.3.1
- 0.1.4.0
- 0.1.4.1
- 0.1.4.2
- 0.1.5.0
- 0.1.5.1
- 0.1.5.2
- 0.1.5.4
- 0.2.0.0
- 0.2.0.1
author: Obsidian Systems LLC
latest: 0.2.0.1
description-type: markdown
description: |
  # reflex-ghci

  [![Haskell](https://img.shields.io/badge/language-Haskell-orange.svg)](https://haskell.org) [![Hackage](https://img.shields.io/hackage/v/reflex-ghci.svg)](https://hackage.haskell.org/package/reflex-ghci) [![BSD3 License](https://img.shields.io/badge/license-BSD3-blue.svg)](https://github.com/reflex-frp/reflex-ghci/blob/master/LICENSE)

  Run GHCi from within a [Reflex FRP](https://reflex-frp.org) application and interact with it using a functional reactive interface.

  ![Screenshot](https://i.imgur.com/5y61Qx7.png)

  ## Library

  A functional-reactive wrapper around GHCi that uses filesystem notifications to automatically reload haskell source files.

  `Reflex.Process.GHCi` provides the core GHCi process-running infrastructure. If you want to run your own GHCi, directly control when it reloads, or build your own custom interface, look there.

  `Reflex.Vty.GHCi` provides a few widgets that are useful when building a console GHCi interface. Use these components to assemble your own vty GHCi runner.

  ## Executable

  This package includes a [reflex-vty](https://github.com/reflex-frp/reflex-vty)-based executable, shown above. Module information (errors, warnings, etc) is shown in a scrollable pane on the top half of the screen and the output of any expression you (optionally) choose to evaluate is shown in a scrollable pane on the bottom half. The panes are resizable using the mouse.

  ```bash
  $ reflex-ghci -h
  Welcome to reflex-ghci 0.1.4.0

  Usage: reflex-ghci [-c|--command COMMAND] [-e|--expression EXPR]
    Run a Haskell REPL that automatically reloads when source files change.

  Available options:
    -c,--command COMMAND     The ghci/cabal repl command to
                             run (default: "cabal repl --repl-options=-Wall")
    -e,--expression EXPR     The optional expression to evaluate once modules have
                             successfully loaded
    -h,--help                Show this help text

  ```

  ## Acknowledgements
  Inspired by the fantastic [ghcid](https://github.com/ndmitchell/ghcid) project.
license-name: BSD-3-Clause
