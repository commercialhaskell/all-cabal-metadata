all-versions:
- 0.1.0.0
- 0.2.0.0
- 0.2.0.1
- 0.2.1.0
- 0.2.2.0
- 0.2.2.1
- 0.2.3.0
- 0.3.0.2
- 0.3.1.0
- 0.4.0.0
- 0.4.0.1
- 0.4.1.0
- 0.5.0.0
- 0.6.0.0
- 0.7.0.0
author: Alexander Thiemann <mail@athiemann.net>, Tim Baumann <tim@timbaumann.info>
basic-deps:
  base: '>=4.7 && <5'
  deepseq: '>=1.1.0.2'
  hashable: '>=1.2'
  http-api-data: '>=0.2'
  hvect: '>=0.4'
  mtl: '>=2.1'
  text: '>=0.11.3.1'
  unordered-containers: '>=0.2'
changelog: ''
changelog-type: ''
description: |
  reroute
  =====

  [![Build Status](https://travis-ci.org/agrafix/Spock.svg)](https://travis-ci.org/agrafix/Spock)

  [![Hackage Deps](https://img.shields.io/hackage-deps/v/reroute.svg)](http://packdeps.haskellers.com/reverse/reroute)

  # Intro

  Hackage: http://hackage.haskell.org/package/reroute

  An abstract implementation of typesafe and untyped routing for web applications. The web framework
  [Spock](https://github.com/agrafix/Spock) is implemented with it. The basic idea is you have a
  registry storing a mapping betwenn abstract routes and actions. Then you define two methods for
  adding a route and it's action to the registry and a second method for efficiently matching a
  provided path to a route and multiple actions.

  # Install

  * Using cabal: `cabal install reroute`
  * From Source: `git clone https://github.com/agrafix/Spock.git && cd Spock/reroute && cabal install`
description-type: markdown
hash: ca982d6c747bee4e089f733cd000b8ccf62fb4312cfb0c5de9c8a33f26e02437
homepage: http://github.com/agrafix/Spock
latest: 0.7.0.0
license-name: MIT
maintainer: Alexander Thiemann <mail@athiemann.net>
synopsis: abstract implementation of typed and untyped web routing
test-bench-deps:
  base: '>=0'
  criterion: '>=0'
  deepseq: '>=0'
  graph-core: '>=0'
  hashable: '>=0'
  hspec: '>=0'
  http-api-data: '>=0'
  hvect: '>=0'
  mtl: '>=0'
  random: '>=0'
  regex-compat: '>=0'
  reroute: '>=0'
  text: '>=0'
  unordered-containers: '>=0'
  vector: '>=0'
