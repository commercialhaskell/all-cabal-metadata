all-versions:
- 0.1.0.0
- 0.1.0.1
- 0.1.0.2
- 0.1.0.3
- 0.1.0.4
- 0.1.0.5
- 0.1.0.6
- 0.1.0.7
- 0.1.0.8
- 0.1.0.9
author: Tim Emiola
basic-deps:
  ascii-char: '>=1.0.1 && <1.1'
  base: '>=4.11 && <5.0'
  bytestring: '>=0.10.8.2 && <0.11 || >=0.11.3 && <0.13'
  megaparsec: '>=9.2.1 && <9.8'
changelog: "# Revision history for redis-glob\n\n`redis-glob` uses [PVP Versioning][1].\n\n##
  0.1.0.9 -- 2025-01-06\n\n* Expand upper bounds for megaparsec \n\n## 0.1.0.8 --
  2024-02-28\n\n* Expand upper bounds for bytestring \n\n## 0.1.0.7 -- 2024-01-03\n\n*
  Expand upper bounds for megaparsec\n\n## 0.1.0.6 -- 2023-09-01\n\n* Expand upper
  bounds for megaparsec\n\n## 0.1.0.5 -- 2023-07-12\n\n* Expand dependency upper bounds
  for bytestring and megaparsec\n\n## 0.1.0.4 -- 2023-01-07\n\n* Remove dependency
  on ascii-superset\n\n## 0.1.0.3 -- 2023-01-05\n\n* Relax dependencies\n\n## 0.1.0.2
  -- 2022-11-21\n\n* Tweak package metadata\n\n## 0.1.0.1 -- 2022-11-21\n\n* Tweak
  developer tools, CI and package metadata\n\n\n## 0.1.0.0 -- 2022-11-21\n\n* Initial
  version.\n\n[1]: https://pvp.haskell.org\n"
changelog-type: markdown
description: |
  # redis-glob

  [![GitHub CI](https://github.com/adetokunbo/redis-glob/actions/workflows/ci.yml/badge.svg)](https://github.com/adetokunbo/redis-glob/actions)
  [![Stackage Nightly](http://stackage.org/package/redis-glob/badge/nightly)](http://stackage.org/nightly/package/redis-glob)
  [![Hackage][hackage-badge]][hackage]
  [![Hackage Dependencies][hackage-deps-badge]][hackage-deps]
  [![BSD3](https://img.shields.io/badge/license-BSD3-green.svg?dummy)](https://github.com/adetokunbo/redis-glob/blob/master/LICENSE)

  `redis-glob` checks that glob expressions for use with Redis are valid.
  Redis commands like [KEYS] use glob expressions to match keys in redis.

  If the glob expression is invalid, the command returns an empty result, which
  unfortunately is the same as if the expression was valid but had no results.

  Use `validate` to confirm if a glob expression is valid. It parses the
  expression in the same way as the actual [redis glob] implementation, returning
  `Nothing` for invalid expressions.

  `matches` can be used to confirm that a bytestring matches a glob expression if
  the the glob expression is valid.

  ## Example

  ```haskell
  {-# LANGUAGE OverloadedStrings #-}

  import Redis.Glob
  import qualified Data.ByteString.Lazy.Char8 as CL


  isOK :: CL.ByteString -> IO ()
  isOk b = do
    CL.putStrLn $ "Is " <> b <> " ok? " <> maybe "n" (const "y") (validate b)
    CL.putStrLn $ "Does it match hello? " <> if (b `matches` "hello") then "y" else "n"

  main :: IO()
  main = do
    isOK "h?llo"     -- Is h?llo ok? y
                     -- Does it match hello? y
    isOK "y[a-b]llo" -- Is y[a-b]llo ok? y"
                     -- Does it match hello? n
    isOK "h[a-]llo"  -- Is h[a-]llo ok? n
                     -- Does it match hello? n
  ```

  [1]: https://hackage.haskell.org/package/wai
  [hackage-deps-badge]: <https://img.shields.io/hackage-deps/v/redis-glob.svg>
  [hackage-deps]:       <http://packdeps.haskellers.com/feed?needle=redis-glob>
  [hackage-badge]:      <https://img.shields.io/hackage/v/redis-glob.svg>
  [hackage]:            <https://hackage.haskell.org/package/redis-glob>
  [KEYS]:               <https://redis.io/commands/keys>
  [redis glob]:         <https://github.com/redis/redis/blob/203b12e41ff7981f0fae5b23819f072d61594813/src/util.c#L54>
description-type: markdown
hash: 14e68fd4ad7b59e25e9f752391a474bface2dd8950c4a185a580df5b21a32fdc
homepage: https://github.com/adetokunbo/redis-glob#readme
latest: 0.1.0.9
license-name: BSD-3-Clause
maintainer: adetokunbo@emio.la
synopsis: Specify valid redis globs
test-bench-deps:
  QuickCheck: '>=0'
  ascii-char: '>=0'
  ascii-superset: '>=0'
  base: '>=0'
  bytestring: '>=0'
  doctest: '>=0.8'
  hspec: '>=2.1'
  redis-glob: '>=0'
