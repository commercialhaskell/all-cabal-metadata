homepage: ''
changelog-type: markdown
hash: 40e1b79018d1469cdedf884e89b33f944ce9230651511a05f3fe5dadab8cc9d8
test-bench-deps:
  bytestring: -any
  reflex-dom-th: -any
  stm: '>=2.5.0.2'
  base: '>=4 && <5'
  tasty-golden: -any
  hspec: -any
  megaparsec: -any
  tasty-hspec: -any
  filepath: -any
  tasty: -any
maintainer: mail@christoph-bauer.net
synopsis: reflex-dom-th transpiles HTML templates to haskell code for @reflex-dom@
changelog: |
  # Revision history for reflex-dom-th

  ## 0.1.0.0 -- YYYY-mm-dd

  * First version. Released on an unsuspecting world.
basic-deps:
  base: ==4.*
  text: -any
  megaparsec: -any
  array: -any
  containers: -any
  reflex-dom-core: -any
  template-haskell: -any
all-versions:
- 0.1.0.0
author: Christoph Bauer
latest: 0.1.0.0
description-type: markdown
description: "# reflex-dom-th\nDo you develop for the web? And you know functional
  reactive programming is the way to go. So you must use Reflex-DOM.\nBut how can
  you integrate all these HTML snippet, which you found. You are tired in converting
  everything to to el, elAttr' etc, right?\n\nFrom this day on this reflex-dom-th
  library will automate the task of converting your HTML templates to Reflex-Dom.\n\n#
  Examples\n\nThe basic example\n\n    [dom|<div>hello</div>|]\n\nis equivalent to\n\n
  \   el \"div\" $ text \"hello\"\n\nYou can also put the html in a external file
  and include it with\n\n    $(domFile \"template.html\")\n\nIt it possible to have
  multiple elements and attributes\n\n    [dom|<ul class=\"list\">\n          <li>Item1</div>\n\t
  \ <li>Item1</div>\n\t</ul> |]\n\nDynamic content can be injected two curly braces\n\n
  \       [dom|<ul class=\"list\">\n          <li>{{item1}}</div>\n\t  <li>{{item2}}</div>\n\t</ul>
  |]\n\t   where item1, item2 :: MonadWidget t m =>  m ()\n\t         item1 = text
  \"Item1\"\n\t\t item2 = text \"Item2\"\n\n\nTo bind events to the elements it is
  possible to extract get the elements as a result. The reference number is the position
  in the result tuple.\n\n    (li1, li2, ul) <- [dom|<ul #2 class=\"list\">\n    \t
  \      \t             <li #0>Item1</div>\n\t  \t\t     <li #1>Item1</div>\n\t\t\t
  \  </ul> |]\n"
license-name: BSD-3-Clause
