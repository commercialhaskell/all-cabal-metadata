all-versions:
- 0.2.0.0
- 0.2.0.1
author: Dave Laing
basic-deps:
  base: '>=4.12 && <4.16'
  bytestring: '>=0.10 && <0.12'
  containers: '>=0.5 && <0.7'
  lens: '>=4.15.4 && <4.20 || >=5 && <5.2'
  mtl: '>=2.2 && <2.4'
  network: '>=2.6 && <3.2'
  reflex: '>=0.7.1.0 && <0.9'
  reflex-backend-socket: '>=0'
  semialign: '>=1 && <1.3'
  semigroupoids: '>=5.2.2 && <5.4'
  stm: '>=2.4 && <2.6'
  these: '>=1 && <1.2'
  witherable: '>=0.4 && <0.5'
changelog: |
  # Revision history for reflex-backend-socket

  ## 0.2.0.1  -- 2022-05-21

  * Raised some upper bounds
  * Examples now use `Reflex.Host.Headless` from `reflex` instead of
    `reflex-basic-host`.

  ## 0.2.0.0  -- 2019-10-29 (first hackage release)

  * Decoupled reflex-binary from this library. If you want incremental
    decoding, you can feed the `ByteString`s into reflex-binary
    yourself.

  * Simplified, rewrote and documented almost all of the library.

  ## 0.1.0.0  -- YYYY-mm-dd

  * First version. Released on an unsuspecting world.
changelog-type: markdown
description: |-
  <<https://raw.githubusercontent.com/qfpl/assets/master/data61-transparent-bg.png>>

  reflex-backend-socket provides functions to handle sockets using
  Reflex @Event@s. Sending\/receiving\/waiting\/accepting are all
  performed on background threads.

  The most important function in this library is
  @Reflex.Backend.Socket.socket@, which wraps a @Socket@ to process
  @Event t ByteString@s.

  That @Socket@ can come from:

  1. @Reflex.Backend.Socket.Accept.accept@, if you're making a server;
  2. @Reflex.Backend.Socket.Connect.connect@, if you're making a client; or
  3. Your favourite networking library.
description-type: haddock
hash: f3379188b3dd03529ac805fe97d583932d4d729901637fdcd051ba6e29c688f5
homepage: https://github.com/qfpl/reflex-backend-socket/
latest: 0.2.0.1
license-name: BSD-3-Clause
maintainer: dave.laing.80@gmail.com, jack@jackkelly.name
synopsis: Reflex bindings for TCP sockets
test-bench-deps: {}
