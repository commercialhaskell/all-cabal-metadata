homepage: http://www.haskell.org/haskellwiki/Reactive-balsa
changelog-type: ''
hash: 8a9308be1e30c1d478f9c51f4c4ea27e5102d8cf5b918920f32b10fc1c41d8d1
test-bench-deps: {}
maintainer: Henning Thielemann <haskell@henning-thielemann.de>
synopsis: Programmatically edit MIDI events via ALSA and reactive-banana
changelog: ''
basic-deps:
  extensible-exceptions: '>=0.1 && <0.2'
  base: '>=2 && <5'
  midi-alsa: '>=0.2 && <0.3'
  event-list: '>=0.1 && <0.2'
  reactive-midyim: '>=0.4 && <0.5'
  data-accessor-transformers: '>=0.2.1 && <0.3'
  midi: '>=0.2 && <0.3'
  utility-ht: '>=0.0.8 && <0.1'
  containers: '>=0.2 && <0.7'
  data-accessor: '>=0.2.1 && <0.3'
  non-empty: '>=0.2.1 && <0.4'
  reactive-banana-bunch: '>=1.0 && <1.1'
  alsa-seq: '>=0.6 && <0.7'
  transformers: '>=0.2 && <0.7'
  random: '>=1 && <2'
  alsa-core: '>=0.5 && <0.6'
  non-negative: '>=0.1 && <0.2'
all-versions:
- '0.0'
- '0.1'
- 0.1.1
- '0.2'
- 0.2.0.1
- '0.3'
- '0.4'
- 0.4.0.1
author: Henning Thielemann <haskell@henning-thielemann.de>
latest: 0.4.0.1
description-type: haddock
description: |-
  MIDI is the Musical Instrument Digital Interface,
  ALSA is the Advanced Linux Sound Architecture.
  This package allows to manipulate a sequence of MIDI events via ALSA.
  It is intended to be plugged as a playing assistant
  between a MIDI input device
  (e.g. a keyboard or a controller bank)
  and a MIDI controlled synthesizer
  (e.g. a software synthesizer or an external synthesizer).
  For software synthesizers see the Haskell packages
  @synthesizer-alsa@, @synthesizer-llvm@, @supercollider-midi@,
  @hsc3@, @YampaSynth@
  or the C packages @fluidsynth@ and @Timidity@.

  Applications include:
  Remapping of channels, controller, instruments, keys,
  Keyboard splitting, Conversion from notes to controllers, Latch mode,
  Convert parallel chords to serial patterns,
  Automated change of MIDI controllers,
  Delay and echo.

  It is intended that you write programs for MIDI stream manipulation.
  It is not intended to provide an executable program
  with all the functionality available
  in a custom programming interface.
  It is most fun to play with the stream editors in GHCi.
  However we provide an example module that demonstrates various effects.
license-name: BSD-3-Clause
