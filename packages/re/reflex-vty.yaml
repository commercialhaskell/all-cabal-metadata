homepage: ''
changelog-type: markdown
hash: c4d07a448f76ad441ad2fdd10b49907c2573a84fa2cf1ab12ce4cc02da1c7f03
test-bench-deps:
  extra: -any
  base: -any
  hspec: '>=2.7 && <2.11'
  text: -any
  containers: -any
  reflex: -any
  reflex-vty: -any
maintainer: maintainer@obsidian.systems
synopsis: Reflex FRP host and widgets for VTY applications
changelog: "# Revision history for reflex-vty\n\n## 0.4.1.0\n\n* Loosen version bounds
  and support GHC 9.4.4\n* Add `MonadHold t (Performable m)` and `MonadFix (Performable
  m)` instances to `MonadVtyApp`\n\n## 0.4.0.0\n\n* _Breaking Changes_:\n  * Added
  mouse tracking to the behavior of `pane` such that\n    * Mouse actions that start
  outside of the region are not tracked\n    * Mouse drag sequences that start OFF
  the region are NOT reported\n    * Mouse drag sequences that start ON the region
  and drag off ARE reported\n    * Introduce `MonadHold` constraint to `pane`\n  *
  Added `MonadHold` constraint to several methods that use `pane`\n  \n## 0.3.1.1\n\n*
  Loosen version bounds and support GHC 9.4\n\n## 0.3.1.0\n\n* Replace `mempty` with
  `defAttr` for Attr from Graphics.Vty to make it compatible with vty-5.34\n\n## 0.3.0.0\n\n*
  Re-design `textInput`, `TextInput` and `TextInputConfig`.\n  * Allows users to implement
  more complex behavior.\n  * `_textInputConfig_modify` is now applied to the text-value
  of `textInput`\n    after user input events such as mouse clicks and keyboard input.\n
  \   This may change the observable behavior.\n\n## 0.2.0.1\n\n* Loosen version bounds
  on ref-tf and vty\n\n## 0.2.0.0\n\n* _Module Reorganization_: The following modules
  have been added (and are all re-exported by Reflex.Vty):\n  * Reflex.Vty.Widget.Box
  for all the box functions and datatypes\n  * Reflex.Vty.Widget.Input.Mouse for clicking,
  dragging, and scrolling\n  * Reflex.Vty.Widget.Split contains `splitV`, `splitH`,
  etc\n  * Reflex.Vty.Widget.Text contains text rendering functions like `text` and
  `display`\n* _Bugfixes_:\n  * Remove text-icu dependency and switch to `wcwidth`
  from vty package to compute character width in `Data.Text.Zipper`.\n  * `goToDisplayLinePosition`
  in `Data.Text.Zipper` correctly accounts for character width now.\n  * [#37](https://github.com/reflex-frp/reflex-vty/issues/37)
  `Layout` should support focus changes through nested layouts (thanks @pdlla for
  getting this started -- see entry on Layout and Focus below).\n  * Fix distribution
  of available space when it cannot be evenly distributed. Previously, all leftover
  space would be allocated to the first stretchable widget.\n* _Breaking Changes_:\n
  \ * Layout and focus have been substantially refactored to fix [#37](https://github.com/reflex-frp/reflex-vty/issues/37)
  and support a wider variety of layouts and focus switching requirements.\n    *
  Added a new `HasFocus` class (the old one is now `HasFocusReader`) to produce focusable
  elements, and manage focus state. See the \"Focus\" section of the Reflex.Vty.Widget.Layout
  module documentation.\n    * `Layout` no longer has any focus-tracking responsibility.
  See the \"Layout\" section of the Reflex.Vty.Widget.Layout module documentation.\n
  \   * `tile` no longer takes a configuration record and no longer requires that
  its child widget return a focus request event. Focus requests are instead handled
  using calls to `requestFocus` in the child widget.\n    * Calls to `fixed` and `stretch`
  must now be replaced with `tile . fixed` and `tile . stretch`\n    * `stretch` now
  takes a minimum size argument\n    * Added `flex` which is equivalent to `stretch
  0`\n    * `tabNavigation` no longer returns an `Event`. Instead it calls `requestFocus`
  directly with the appropriate `Refocus_Shift` value.\n    * Added `axis` (in `HasLayout`),
  a lower-level primitive which is used to implement `row` and `col`.\n    * Added
  `region` (in `HasLayout`), which is used to claim screen real estate and used to
  implement `tile` and `grout`\n    * Added `grout`, a container element that is not
  itself focusable (though its children can be)\n  * Removed `VtyWidget` and replaced
  it with a number of separate classes and monad transformers\n    * Replace `HasDisplaySize`
  with `HasDisplayRegion` which carries around a region instead of just a width and
  height. `displayWidth` and `displayHeight` are now functions implemented in terms
  of `askRegion` instead of class methods.\n    * Add a `DisplayRegion` monad transformer\n
  \   * Rename `ImageWriter` to `HasImageWriter`\n    * Introduce an `ImageWriter`
  monad transformer\n    * Rename `HasFocus` to `HasFocusReader`\n    * Introduce
  a `FocusReader` monad transformer\n    * Replace `HasVtyInput` with `HasInput`\n
  \   * Introduce an `Input` monad transformer\n    * Introduce `HasTheme` reader
  class to allow setting Vty attributes of all built-in widgets\n    * Introduce `ThemeReader`
  monad transformer\n  * Remove `DynRegion` and `currentRegion`. Use `Dynamic t Region`
  \ and `current` instead. This also changes the type of `pane`'s argument.\n  * `CheckboxConfig`
  now has a field taking an `Event` to set the value of the checkbox.\n  * `checkbox`
  now accepts keyboard input (spacebar to check and uncheck) and is displayed in bold
  when focused.\n  * `HasInput` (formerly `HasVtyInput`) now has a method `localInput`
  for filtering the input a child widget may receive\n  * `HasImageWriter` now has
  a method `mapImages` for transforming the images emitted by a child widget\n  *
  `boxTitle` now takes a `Behavior t Text` as its title, instead of a plain `Text`\n
  \ * `fill` now takes a `Behavior t Char` instead of a `Char`\n  * The following
  functions are no longer specialized to `VtyWidget`:\n    * `pane`: Now requires
  `HasInput t m, HasImageWriter t m, HasDisplayRegion t m, HasFocusReader t m`\n    *
  `drag`: Now requires `HasInput`\n    * `mouseDown`: Now requires `HasInput`\n    *
  `mouseUp`: Now requires `HasInput`\n    * `mouseScroll`: Now requires `HasInput`\n
  \   * `key`: Now requires `HasInput`\n    * `keys`: Now requires `HasInput`\n    *
  `keyCombo`: Now requires `HasInput`\n    * `keyCombos`: Now requires `HasInput`\n
  \   * `splitV`: Now requires `HasDisplayRegion t m, HasInput t m, HasImageWriter
  t m, HasFocusReader t m`\n    * `splitH`: Now requires `HasDisplayRegion t m, HasInput
  t m, HasImageWriter t m, HasFocusReader t m`\n    * `splitVDrag`: Now requires `HasDisplayRegion
  t m, HasInput t m, HasImageWriter t m, HasFocusReader t m`\n    * `fill`: Now requires
  `HasImageWriter` and `HasDisplayRegion`\n    * `boxTitle`: Now requires `HasDisplayRegion
  t m, HasImageWriter t m, HasInput t m, HasFocusReader t m, HasTheme t m`\n    *
  `box`: Now requires `HasDisplayRegion t m, HasImageWriter t m, HasInput t m, HasFocusReader
  t m, HasTheme t m`\n    * `boxStatic`: Now requires `HasDisplayRegion t m, HasImageWriter
  t m, HasInput t m, HasFocusReader t m, HasTheme t m`\n    * `richText`: Now requires
  `HasImageWriter`, and `HasDisplayRegion`\n    * `scrollableText`: Now requires `HasInput`,
  `HasImageWriter`, `HasTheme`, and `HasDisplayRegion`\n    * `blank`: Now requires
  `Monad`\n    * `button`: Now requires `HasFocusReader`, `HasInput`, `HasImageWriter`,
  `HasTheme`, and `HasDisplayRegion`\n    * `textButton`: Now requires `HasFocusReader`,
  `HasInput`, `HasImageWriter`, `HasTheme`, and `HasDisplayRegion`\n    * `textButtonStatic`:
  Now requires `HasFocusReader`, `HasInput`, `HasImageWriter`, `HasTheme`, and `HasDisplayRegion`\n
  \   * `link`: Now requires `HasInput`, `HasImageWriter`, `HasTheme`, and `HasDisplayRegion`\n
  \   * `checkbox`: Now requires `HasFocusReader`, `HasInput`, `HasImageWriter`, and
  `HasDisplayRegion`\n  * TextZipper interface changes\n    * `_displayLines_offsetMap`
  type changed to `OffsetMapWithAlignment`\n    * `_displayLines_cursorY` replaced
  with `_displayLines_cursorPos` which include X position\n    * some exposed methods
  intended for internal use only have been removed\n    * `textInput`: Now requires
  `HasFocusReader`, `HasInput`, `HasImageWriter`, `HasTheme`, and `HasDisplayRegion`\n
  \   * `multilineTextInput`: Now requires `HasFocusReader`, `HasInput`, `HasImageWriter`,
  `HasTheme`, and `HasDisplayRegion`\n    * `textInputTile`: Now requires `HasFocusReader`,
  `HasInput`, `HasLayout`, `HasTheme`, and `HasFocus`\n* _Misc_:\n  * (#40 Add alignment
  support to TextZipper)[https://github.com/reflex-frp/reflex-vty/pull/40]\n    *
  Add alignment (left/center/right) support to TextZipper\n    * Add basic unit tests
  for newly created alignment methods in TextZipper\n  * Add default instances for
  `HasInput`, `HasFocus`, and `HasImageWriter`\n  * Export `withinImage` and add `imagesInRegion`
  to crop images to a region\n  * Add `anyChildFocused`, which provides information
  about whether subwidgets are focused\n  * Add `filterKeys`, which is the same as
  `localInput` but only cares about keyboard events\n  * Add `hoistRunLayout` to apply
  a transformation to the context of a `Layout` action and run that action\n  * Add
  various `MFunctor` instances\n  * Add a CPU usage indicator to the example executable\n\n##
  0.1.4.2\n\n* Wider bounds for GHC 8.10 support\n\n## 0.1.4.1\n\n## 0.1.4.1\n* Migrate
  to new dependent-sum / dependent-map (after the \"some\" package split)\n\n## 0.1.4.0\n*
  ([#15](https://github.com/reflex-frp/reflex-vty/pull/15)) Add `PostBuild` instance
  for `Layout`.\n* ([#17](https://github.com/reflex-frp/reflex-vty/pull/17)) Add `splitH`
  to implement horizontal functionality of `splitV`.\n* ([#19](https://github.com/reflex-frp/reflex-vty/pull/19))
  Add `boxTitle`: a box with a title.\n* ([#19](https://github.com/reflex-frp/reflex-vty/pull/19))
  Update the text editing example to use `boxTitle`.\n* ([#21](https://github.com/reflex-frp/reflex-vty/pull/21))
  Fix bug in `drag` that caused dragging with different mouse button to trigger the
  click event.\n* ([#22](https://github.com/reflex-frp/reflex-vty/pull/22)) Add support
  for GHC 8.8.\n\n## 0.1.3.0\n* Add `mouseScroll` to capture scroll wheel events.\n*
  Add `scrollableText`: a text display widget that can be scrolled using the mouse
  or keyboard.\n* Add widget to the example executable that displays scrollable text.\n\n##
  0.1.2.1\n* Add `keyCombo` function (single-key-combination version of `keyCombos`).\n*
  Use upstream `NotReady` instances instead of orphans defined in this package if
  reflex-0.6.3 is available.\n\n## 0.1.2.0\n* Allow `TextZipper` contents to be transformed
  before being displayed.\n* Fix bug in `row` orientation.\n* Handle wrapping of lines
  containing full-width unicode characters in `textInput`.\n\n## 0.1.1.1\n* Bump minimum
  version of reflex.\n\n## 0.1.1.0\n* Set version bounds in cabal file.\n* Add travis
  CI config.\n\n## 0.1.0.0\n* Initial release\n"
basic-deps:
  bimap: '>=0.3.3 && <0.6'
  dependent-sum: '>=0.7 && <0.8'
  stm: '>=2.4 && <2.6'
  exception-transformers: '>=0.4.0 && <0.5'
  base: '>=4.10.0 && <4.18'
  time: '>=1.8.0 && <1.13'
  text: '>=1.2.3 && <2.1'
  dependent-map: '>=0.4 && <0.5'
  vty: '>=5.28 && <5.38'
  ref-tf: '>=0.4.0 && <0.6'
  ordered-containers: '>=0.2.2 && <0.3'
  data-default: '>=0.7.1 && <0.8'
  containers: '>=0.5.0 && <0.7'
  mtl: '>=2.2.2 && <2.3'
  mmorph: '>=1.1 && <1.3'
  reflex: '>=0.8 && <1'
  transformers: '>=0.5.5 && <0.6'
  reflex-vty: -any
  primitive: '>=0.6.3 && <0.8'
all-versions:
- 0.1.0.0
- 0.1.1.0
- 0.1.1.1
- 0.1.2.0
- 0.1.2.1
- 0.1.3.0
- 0.1.4.0
- 0.1.4.1
- 0.1.4.2
- 0.2.0.0
- 0.2.0.1
- 0.3.0.0
- 0.3.1.0
- 0.3.1.1
- 0.4.0.0
- 0.4.1.0
author: Obsidian Systems LLC
latest: 0.4.1.0
description-type: markdown
description: |
  # reflex-vty

  [![Haskell](https://img.shields.io/badge/language-Haskell-orange.svg)](https://haskell.org) [![Hackage](https://img.shields.io/hackage/v/reflex-vty.svg)](https://hackage.haskell.org/package/reflex-vty) [![Travis CI](https://api.travis-ci.org/reflex-frp/reflex-vty.svg?branch=develop)](https://travis-ci.org/reflex-frp/reflex-vty) [![BSD3 License](https://img.shields.io/badge/license-BSD3-blue.svg)](https://github.com/reflex-frp/reflex-vty/blob/master/LICENSE)

  Build terminal applications using functional reactive programming (FRP) with [Reflex FRP](https://reflex-frp.org).

  ![Example Animation](https://i.imgur.com/FULQNtu.gif)

  Feature requests, pull requests, and other feedback are welcome and appreciated (see the [contribution guide](CONTRIBUTING.md)). This library
  is still experimental, so big changes are possible!
  ### How to Build

  #### With reflex-platform

  Enter a nix-shell for the project:
  ```bash
  git clone https://github.com/reflex-frp/reflex-vty.git
  cd reflex-vty
  nix-shell
  ```

  From within the nix-shell you can:
  * Run the example: `cabal repl example`
  * Load the library in the repl: `cabal repl reflex-vty`
  * Build the example executable: `cabal build example`
  * Build the docs: `cabal haddock`
  * Run ghcid for immediate compiler feedback when you save a .hs file: `ghcid -c "cabal repl reflex-vty --ghc-options=-Wall"`
  * etc.

  ##### Selecting a compiler

  When entering the nix-shell, you can select from the following compilers: ghc-8.10.7 and ghc-9.4.3. By default, ghc-8.10.7 is selected. To enter a shell with ghc-9.4.3, run:

  ```bash
  nix-shell --argstr compiler ghc943
  ```

  You may need to run `cabal clean` and `cabal configure -w ghc-9.4.3` if you were previously working on the project with a different compiler.


  #### With cabal

  Please see the `tested-with` field of the cabal file for known-compatible versions of GHC.

  From the reflex-vty project directory:

  ```bash
  # nix-shell -p cabal-install binutils icu # for nix users
  cabal new-configure
  cabal new-build # to build the library and example
  cabal new-repl # to enter a repl for the library
  cabal new-repl example # to enter a repl for the example executable
  ```
license-name: BSD-3-Clause
