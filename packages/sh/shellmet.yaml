all-versions:
- 0.0.0
- 0.0.1
- 0.0.2.0
- 0.0.3.0
- 0.0.3.1
- 0.0.4.0
- 0.0.4.1
- 0.0.5.0
author: Dmitrii Kovanikov
basic-deps:
  base: '>=4.11.1.0 && <4.21'
  process: ^>=1.6.1
  shellmet: '>=0'
  text: '>=1.2.3 && <2.2'
changelog: |
  # Changelog

  `shellmet` uses [PVP Versioning][1].
  The changelog is available [on GitHub][2].

  ## 0.0.5.0 — Oct 20, 2024

  * Support GHC 9.2.8. 9.4.7, 9.6.6, 9.8.2, 9.10.1.
  * Upgrade `text` from `1.2.3` to `2.0.0`.
  * Remove support of GHC 8.2.2.

  ## 0.0.4.1 — Jun 13, 2022

  * [#28](https://github.com/kowainik/shellmet/issues/28):
    Support GHC 9.2.

  ## 0.0.4.0 — Mar 23, 2021

  * [#20](https://github.com/kowainik/shellmet/issues/20):
    Add `isSuccess` function to show if the command succeded.
  * [#25](https://github.com/kowainik/shellmet/issues/25):
    Support GHC-9.0.
  * Upgrade GHC from `8.8.3` to `8.8.4`, `8.10.1` to `8.10.4`.

  ## 0.0.3.1 — May 7, 2020

  * [#18](https://github.com/kowainik/shellmet/issues/18):
    Support GHC-8.10. Move from GHC-8.8.1 support to GHC-8.8.3.

  ## 0.0.3.0 — Sep 28, 2019

  * [#10](https://github.com/kowainik/shellmet/issues/10):
    Add doctest.
    (by [@vrom911](https://github.com/vrom911))
  * [#13](https://github.com/kowainik/shellmet/issues/13):
    Support GHC-8.8.1.
    (by [@chshersh](https://github.com/chshersh))

  ## 0.0.2.0 — Jul 4, 2019

  * [#8](https://github.com/kowainik/shellmet/issues/8):
    Implement `$^` operator that doesn't print the command to terminal.

  ## 0.0.1 — Apr 9, 2019

  * Generalise the type of the `$?` operator to allow returning values on
    shell-command failuires.

  ## 0.0.0

  * Initially created.

  [1]: https://pvp.haskell.org
  [2]: https://github.com/kowainik/shellmet/releases
changelog-type: markdown
description: |
  # shellmet

  [![GitHub CI](https://github.com/kowainik/shellmet/workflows/CI/badge.svg)](https://github.com/kowainik/shellmet/actions)
  [![Hackage](https://img.shields.io/hackage/v/shellmet.svg?logo=haskell)](https://hackage.haskell.org/package/shellmet)
  [![Stackage Lts](http://stackage.org/package/shellmet/badge/lts)](http://stackage.org/lts/package/shellmet)
  [![Stackage Nightly](http://stackage.org/package/shellmet/badge/nightly)](http://stackage.org/nightly/package/shellmet)
  [![MPL-2.0 license](https://img.shields.io/badge/license-MPL--2.0-blue.svg)](LICENSE)

  Out of the shell solution for scripting in Haskell. Shellmet provides an easy and
  convenient way to call shell commands from Haskell programs.

  ## Usage example

  This README contains the usage example of the `shellmet` library. The example is
  runnable. You can build and execute with the following command:

  ```shell
  cabal run readme
  ```

  ### Setting up

  Since this tutorial is written using Literate Haskell, first, let's write all
  necessary pragmas and imports.

  ```haskell
  {-# LANGUAGE OverloadedStrings #-}

  import Data.Semigroup ((<>))

  import Shellmet (($|))

  import qualified Data.Text as T
  ```

  ### Simple scripting example

  Below you can see how easy it is to interact with shell commands in Haskell:

  ```haskell
  main :: IO ()
  main = do
      "echo" ["Starting shellmet readme..."]
      text <- "cat" $| ["README.md"]
      let cnt = T.pack $ show $ length $ T.lines text
      "echo" ["Number of lines in this README: " <> cnt]
  ```

  And the output is:

  ```
  ⚙  echo 'Starting shellmet readme...'
  Starting shellmet readme...
  ⚙  echo 'Number of lines in this README: 54'
  Number of lines in this README: 54
  ```
description-type: markdown
hash: 7916d49c2cb3507c08775bb9ffafe41d4ada82438ceac93bf6d841873b23a5ea
homepage: https://github.com/kowainik/shellmet
latest: 0.0.5.0
license-name: MPL-2.0
maintainer: Kowainik <xrom.xkov@gmail.com>
synopsis: Out of the shell solution for scripting in Haskell
test-bench-deps:
  Glob: '>=0'
  base: '>=4.11.1.0 && <4.21'
  doctest: '>=0'
