all-versions:
- 0.1.0.0
- 0.1.1.0
- 0.2.0.0
author: Li-yao Xia
basic-deps:
  base: '>=4.8 && <5'
changelog: |
  # 0.2.0.0

  - Fix a bug where `showRecord` would not parenthesize the output if a high
    enough precedence were supplied.

  # 0.1.1.0

  - Added `showInfixl`, `showInfixr`, `showInfixl'`, `showInfixr'`.

  # 0.1.0.0

  Initial version
changelog-type: markdown
description: |
  # Show combinators [![Hackage](https://img.shields.io/hackage/v/show-combinators.svg)](https://hackage.haskell.org/package/show-combinators) [![Build Status](https://travis-ci.org/Lysxia/show-combinators.svg)](https://travis-ci.org/Lysxia/show-combinators)

  A minimal set of convenient combinators to write `Show` instances.

  ```haskell
  data MyType a
    = C a a                   -- a regular constructor
    | a :+: a                 -- an infix constructor
    | R { f1 :: a, f2 :: a }  -- a record

  infixl 4 :+:

  instance Show a => Show (MyType a) where
    showsPrec = flip precShows where
      precShows (C a b) = showCon "C" @| a @| b
      precShows (c :+: d) = showInfix ":+:" 4 c d
      precShows (R {f1 = e, f2 = f}) =
        showRecord "R" ("f1" .=. e &| "f2" .=. f)
  ```
description-type: markdown
hash: 5d7a36c6383c9eff1dc15970da3206a05b50c2d1e93155970ffcf240eaa57d58
homepage: https://github.com/Lysxia/show-combinators#readme
latest: 0.2.0.0
license-name: MIT
maintainer: lysxia@gmail.com
synopsis: Combinators to write Show instances
test-bench-deps:
  base: '>=0'
  show-combinators: '>=0'
