homepage: ''
changelog-type: ''
hash: 78574843e42fb5b8a72c647943c098dc6113fda0ca4b36657047e5010ec4b2dd
test-bench-deps: {}
maintainer: isaac.shapira@platonic.systems
synopsis: A Virtual Dom in pure Haskell, based on Html as an Alignable Functor.
changelog: ''
basic-deps:
  exceptions: -any
  unliftio: '>=0.2.12 && <0.3'
  base: '>=4.12.0 && <4.16'
  text: '>=1.2.3 && <1.3'
  monad-control: '>=1.0.2 && <1.1'
  ghcjs-dom: '>=0.9.4 && <0.20'
  containers: '>=0.6.0 && <0.7'
  Shpadoinkle: -any
  compactable: '>=0.1.2 && <0.2'
  mtl: '>=2.2.2 && <2.3'
  transformers-base: '>=0.4.5 && <0.5'
  file-embed: '>=0.0.11 && <0.1'
  random: '>=1.1 && <1.3'
  jsaddle: '>=0.9.7 && <0.20'
all-versions:
- 0.0.0.1
- 0.1.0.0
- 0.1.0.1
- 0.2.0.0
- 0.3.0.0
- 0.3.0.1
author: Isaac Shapira
latest: 0.3.0.1
description-type: markdown
description: |
  # Shpadoinkle Backend ParDiff

  [![Goldwater](https://gitlab.com/platonic/shpadoinkle/badges/master/pipeline.svg)](https://gitlab.com/platonic/shpadoinkle)
  [![Haddock](https://img.shields.io/badge/haddock-master-informational)](https://shpadoinkle.org/backend-pardiff)
  [![BSD-3](https://img.shields.io/badge/License-BSD%203--Clause-blue.svg)](https://opensource.org/licenses/BSD-3-Clause)
  [![built with nix](https://img.shields.io/badge/built%20with-nix-41439a)](https://builtwithnix.org)
  [![Hackage](https://img.shields.io/hackage/v/Shpadoinkle-backend-pardiff.svg)](https://hackage.haskell.org/package/Shpadoinkle-backend-pardiff)
  [![Hackage Deps](https://img.shields.io/hackage-deps/v/Shpadoinkle-backend-pardiff.svg)](http://packdeps.haskellers.com/reverse/Shpadoinkle-backend-pardiff)
  [![Hackage CI](https://matrix.hackage.haskell.org/api/v2/packages/Shpadoinkle-backend-pardiff/badge)](https://matrix.hackage.haskell.org/#/package/Shpadoinkle-backend-pardiff)


  Shpadoinkle's ParDiff backend is a virtual dom diffing system written in pure Haskell.
  It currently serves as the canonical backend for Shpadoinkle, such that the behavior of
  other backends should conform.

  The virtual tree in ParDiff contains a reference to the `RawNode` for each element. Merging
  unkeyed and keyed virtual dom techniques together. This allows for rendering to be performed
  in a keyed fashion for all nodes, while not requiring additional memory or developer overhead.

  The diffing itself is a lawful usage of `alignWith` from the `Data.These` package. By modeling
  Html as an Alignable Functor, you get principled diffing with clear separation of concerns.

  IO is done using JSaddle, and works with both GHC and GHCjs.
license-name: BSD-3-Clause
