all-versions:
- 0.4.0.7
- 0.5.0.0
- 0.5.0.1
- 0.5.1.0
- 0.5.1.2
- 0.5.2.0
- 0.5.3.0
- 0.5.3.2
- 0.5.3.3
- 0.5.3.4
- 0.5.3.5
- 0.5.3.6
- 0.5.3.7
- 0.5.3.8
- 0.5.3.9
- 0.5.3.10
- 0.5.3.11
- 0.5.3.12
- 0.5.3.13
- 0.6.0.0
- 0.6.0.1
- 0.6.1.2
- 0.6.1.3
- 1.0.0.0
- 1.0.0.1
- 1.0.1.0
- 1.0.1.1
- 1.0.1.2
- 1.0.1.3
- 1.0.1.4
- 1.0.1.5
- 1.0.1.6
- 1.0.1.7
- 1.0.1.8
- 1.0.1.9
- 1.0.1.21
- 1.0.1.27
- 1.0.1.33
- 1.0.1.35
- 1.0.1.36
- 1.0.1.37
- 1.0.1.38
- 1.0.1.39
- 1.0.1.40
- 1.0.1.41
- 1.0.1.42
- 1.0.1.43
- 1.0.2.1
- 1.0.2.2
- 1.0.2.3
author: Vanessa McHale
basic-deps:
  ansi-wl-pprint: <1.0
  authenticate-oauth: <1.8
  base: '>=4.11 && <5'
  bytestring: <0.12
  composition-prelude: '>=3.0.0.0 && <3.1'
  containers: '>=0.6.0.0 && <0.7'
  directory: <1.4
  extra: <1.8
  htoml-megaparsec: '>=2.1.0.0 && <2.2'
  http-client: <0.8
  http-client-tls: <0.4
  http-types: <0.13
  megaparsec: '>=7.0 && <9.4'
  microlens: <0.5
  optparse-applicative: <1.9
  split: <0.3
  text: <2.1
  tweet-hs: '>=0'
  unordered-containers: <0.3
changelog: ''
changelog-type: ''
description: "# Command Line Interface Tweeter\n\n[![Windows build status](https://ci.appveyor.com/api/projects/status/github/vmchale/command-line-tweeter?svg=true)](https://ci.appveyor.com/project/vmchale/command-line-tweeter)\n[![Build
  Status](https://travis-ci.org/vmchale/command-line-tweeter.svg?branch=master)](https://travis-ci.org/vmchale/command-line-tweeter)\n[![Hackage](https://img.shields.io/hackage/v/tweet-hs.svg)](http://hackage.haskell.org/package/tweet-hs)\n\n![Displaying
  a user timeline in a terminal.](https://raw.githubusercontent.com/vmchale/command-line-tweeter/master/screenshot.png)\n\n`tweet-hs`
  is a command-line tool for twitter. It has more features than\nits [rust counterpart](https://github.com/vmchale/clit-rs)
  and it's a bit\nslower. \n\nReasons to use tweeth-hs:\n  - Faster than other tools
  ([t](https://github.com/sferik/t),\n  [oysttyer](https://github.com/oysttyer/oysttyer))\n
  \ - Support for colored output. \n  - Can be used in scripts\n  - You know haskell
  and like being able to extend your tools. \n  - You want something that can be called
  from\n    [vim](https://github.com/vmchale/vim-twitter)\n  - You want a twitter
  library for haskell. \n  - BSD3 licensed \n\nReasons not to use tweet-hs:\n  - You
  want \"twitter in a terminal\" that [rainbowtools](https://github.com/DTVD/rainbowstream)\n
  \   or [oysttyer](https://github.com/oysttyer/oysttyer) provides. \n  - You want
  to be able to easily tweet emoji\n\n## Comparison to other command-line clients\n\n|
  Tool | Language | Color output | Interactive | Vim plugin support | Scriptable |
  Send emoji |\n| ---- | -------- | ------------ | ----------- | ------------------
  | ---------- | ---------- |\n| tw | Rust | x |   | x | x |  |\n| rainbowstream |
  Python | x | x |  |  | x |\n| oysttyer | Perl |  | x |  | ½ |  |\n| tweet-hs | Haskell
  | x |  | x | x |  |\n| t | Ruby | ½ |  |  | x |  |\n\n## Config\nGenerate a token
  to authorize access to your twitter account by following the guide [here](https://dev.twitter.com/oauth/overview/application-owner-access-tokens)\n\nThen
  place your API keys and OAuth tokens in a file `~/.cred.toml`, as in the\nfollowing
  example:\n\n```\napi-key = \"API_KEY_HERE\"\napi-sec = \"API_SECRET_HERE\"\ntok
  = \"OAUTH_TOKEN_HERE\"\ntok-sec = \"TOKEN_SECRET_HERE\"\n```\n\n## Installation\n\nIf
  you're on Linux/Windows the best way is probably to download the binaries\nfrom
  the releases page [here](https://github.com/vmchale/command-line-tweeter/releases).\n\nTo
  build from source, install [haskell stack](https://docs.haskellstack.org/en/stable/README/#how-to-install);
  on unix systems this is as simple as\n\n```\nwget -qO- https://get.haskellstack.org/
  | sh\n```\n\nThen type `stack install tweet-hs` it will put an executable called
  `tweet` on your path.\n\n## Use\n\n### View Profiles and timelines\n\nTo get your
  timeline, simply type:\n\n```\ntweet view\n```\n\nTo view a user's profile, type
  e.g.\n\n```\ntweet user NateSilver538 --color\n```\n\n### Sending tweets\n\nTo send
  a tweet:\n\n```\ntweet send \"This is my tweet\"\n```\n\n#### Input from stdin\nTo
  tweet from stderr, run a command that pipes stderr to stdin, i.e.\n\n```\nstack
  build &>/dev/null | tweet input\n```\n\nThe `tweet` executable reads from stdin
  only, but you can view the options (replies, number of tweets to thread, etc.) with\n\n```\ntweet
  --help\n```\n\nThis script powers the twitter account [@my\\_build\\_errors](https://twitter.com/my_build_errors)
  for instance. There's an example bash script for in `bash/example`\n\n### Viewing
  your timeline\n\nYou can also use\n\n```\ntweet view\n```\n\nor \n\n```\ntweet view
  --color\n```\n\nto view your own timeline.\n\n### GHCi integration\n\nYou can define
  the following in your `~/.ghci`\n\n```haskell\n:def tweet (\\str -> pure $ \":!
  tweet send \\\"\" ++ str ++ \"\\\"\")\n```\n\n### Completions\n\nThe directory `bash/`
  has a `mkCompletions` script to allow command completions for your convenience.\n\n##
  Library\n\nA haskell package is included. It's fairly easy to use once you have
  the credentials set up, with two main functions: `thread` and `basicTweet`: the
  first for threading your own tweets or replying to someone else's and the second
  for just tweeting.\n"
description-type: markdown
hash: e15a50b2fc5de06cae2b4485dbb157b8942114dd9f9e483a0b6cb0216b8ce91b
homepage: ''
latest: 1.0.2.3
license-name: BSD-3-Clause
maintainer: vamchale@gmail.com
synopsis: Command-line tool for twitter
test-bench-deps:
  base: '>=0'
  bytestring: '>=0'
  criterion: <1.7
  megaparsec: '>=0'
  tweet-hs: '>=0'
