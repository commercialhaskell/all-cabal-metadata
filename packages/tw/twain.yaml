all-versions:
- 1.0.0.0
- 2.0.0.0
- 2.0.1.0
- 2.1.0.0
- 2.1.2.0
- 2.2.0.0
author: Alex Mingoia
basic-deps:
  aeson: '>=2 && <3'
  base: '>=4.7 && <5'
  bytestring: '>=0.10 && <0.12'
  case-insensitive: '>=1.2 && <1.3'
  cookie: '>=0.4 && <0.6'
  either: '>=5.0 && <5.1'
  exceptions: '>=0.10 && <0.11'
  http-types: '>=0.12 && <0.13'
  http2: '>=5.0 && <5.4'
  text: '>=1.2.3 && <3'
  time: '>=1.8 && <2'
  transformers: '>=0.5.6 && <0.7'
  vault: '>=0.3 && <0.4'
  wai: '>=3.2 && <3.3'
  wai-extra: '>=3.0 && <3.2'
changelog: |
  # Change Log

  ## 2.2.0.0 [2024-10-12]

  Bump version bounds for http2 to >=5.0 && <5.4

  ## 2.1.2.0 [2023-04-10]

  Bump version bounds for transformers so Twain can be built with GHC 9.6.1

  ## 2.1.1.0 [2022-08-14]

  Add getters for query, path, and cookie params.

  ## 2.1.0.0 [2022-04-22]

  - Remove ghc flag and add default-language.
  - Add tests
  - Add CSS response

  ## 2.0.0.0 [2022-01-09]

  Simplify API to decompose routes into WAI middleware.

  ### Breaking changes

  - Removed `TwainM` monad in favor of composing WAI middleware.
  - Replace `RouteM` with `ResponderM`, no longer parametized by environment in
    preference for middleware utilizing request vault.
  - Replace string errors with new `HttpError`.
  - Rename param and file functions to be consistent.
    - Renamed `param'` to `paramEither`.
    - Renamed `file` to `fileMaybe`.
    - Added `file` which matches `param` functionality.
    - Changed behavior of `paramMaybe` to throw `HttpError`.
  - Set default cookie path and http-only.

  ### Added

  - Add additional helpers `withMaxBodySize` and `withParseBodyOpts` for limiting
    request body parsing.

  ## 1.0.1.0 [2021-09-15]

  - Export `parseBody` to allow custom `ParseRequestBodyOptions`.

  ## 1.0.0.0 [2021-05-11]

  - Initial release.
changelog-type: markdown
description: |
  # Twain

  [![Hackage](https://img.shields.io/hackage/v/twain.svg?style=flat)](http://hackage.haskell.org/package/twain)
  ![BSD3 License](http://img.shields.io/badge/license-BSD3-brightgreen.svg)

  Twain is a tiny web application framework for
  [WAI](http://hackage.haskell.org/package/wai).

  - `ResponderM` for composing responses with do notation.
  - Routing with path captures that decompose `ResponderM` into middleware.
  - Parameter parsing from cookies, path, query, and body.
  - Helpers for redirects, headers, status codes, and errors.

  ```haskell
  {-# language OverloadedStrings #-}

  import Network.Wai.Handler.Warp (run)
  import Web.Twain

  main :: IO ()
  main = do
    run 8080 $
      foldr ($) (notFound missing) routes

  routes :: [Middleware]
  routes =
    [ get "/" index
    , post "/echo/:name" echoName
    ]

  index :: ResponderM a
  index = send $ html "Hello World!"

  echoName :: ResponderM a
  echoName = do
    name <- param "name"
    send $ html $ "Hello, " <> name

  missing :: ResponderM a
  missing = send $ html "Not found..."
  ```
description-type: markdown
hash: 693e2053e6baeef995e034347df045676b33ced6981fed7a90038e669bc2bae6
homepage: https://github.com/alexmingoia/twain#readme
latest: 2.2.0.0
license-name: BSD-3-Clause
maintainer: alex@alexmingoia.com
synopsis: Tiny web application framework for WAI.
test-bench-deps:
  base: '>=0'
  hspec: '>=0'
  hspec-discover: '>=0'
  hspec-wai: '>=0'
  twain: '>=0'
