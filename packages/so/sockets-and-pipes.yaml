homepage: ''
changelog-type: ''
hash: 6875d33e67c4242fb205f719f6580784bfb2b186a02daa26632d3e1634e8d205
test-bench-deps: {}
maintainer: Joy of Haskell <hello@joyofhaskell.com>
synopsis: Support for the Sockets and Pipes book
changelog: ''
basic-deps:
  bytestring: ^>=0.10 || ^>=0.11
  stm: ^>=2.5
  base: ^>=4.12 || ^>=4.13 || ^>=4.14 || ^>=4.15
  time: ^>=1.9 || ^>=1.10 || ^>=1.11
  text: ^>=1.2.3
  safe-exceptions: ^>=0.1.7.0
  network: ^>=3.1.2
  async: ^>=2.2
  ascii: ^>=1.0
  containers: ^>=0.5.7 || ^>=0.6
  pipes: ^>=4.3.9
  blaze-html: ^>=0.9
  aeson: ^>=1.3 || ^>=1.4 || ^>=1.5
all-versions:
- '0.1'
- '0.2'
author: Chris Martin, Julie Moronuki
latest: '0.2'
description-type: haddock
description: |-
  This package contains some utilities that support /Sockets and Pipes/
  (available on <https://leanpub.com/sockets-and-pipes Leanpub>),
  as well as re-exports from all the libraries mentioned in the book.

  == Code in this package

  Original contributions from this package:

  * "SocketsAndPipes.Serve"

  == Chapters

  List of modules that make a significant appearance in each chapter:

  +----+----------------------+----------------------------------+---------------------------------------+
  |    |   Chapter            |          Module                  |               Purpose                 |
  +====+======================+==================================+=======================================+
  |  1 | __Handles__          | "System.IO"                      | Writing to a file                     |
  |    |                      +----------------------------------+---------------------------------------+
  |    |                      | "Control.Exception.Safe"         | Using `bracket` to ensure             |
  |    |                      |                                  | the file handle is closed             |
  +----+----------------------+----------------------------------+---------------------------------------+
  |  2 | __Chunks__           | "Data.Text"                      | `Text` is a chunk of characters       |
  |    |                      +----------------------------------+---------------------------------------+
  |    |                      | "Data.Text.IO"                   | Reading and writing files using       |
  |    |                      |                                  | `Text` instead of `String`            |
  +----+----------------------+----------------------------------+---------------------------------------+
  |  3 | __Bytes__            | "Data.Word"                      | What a byte is                        |
  |    |                      +----------------------------------+---------------------------------------+
  |    |                      | "Data.ByteString"                | `ByteString` is a chunk of bytes      |
  |    |                      +----------------------------------+---------------------------------------+
  |    |                      | "Data.Text.Encoding"             | Conversions between `ByteString`      |
  |    |                      |                                  | and `Text`                            |
  |    |                      +----------------------------------+---------------------------------------+
  |    |                      | "Data.String"                    | How `ByteString` works with           |
  |    |                      +----------------------------------+ `OverloadedStrings`                   |
  |    |                      | "Data.ByteString.Char8"          |                                       |
  |    |                      +----------------------------------+---------------------------------------+
  |    |                      | "System.IO"                      | Putting `Handle`s into binary mode    |
  +----+----------------------+----------------------------------+---------------------------------------+
  |  4 | __Sockets__          | "Network.Socket"                 | Opening and closing sockets           |
  |    |                      +----------------------------------+---------------------------------------+
  |    |                      | "Network.Socket.ByteString"      | Writing to and reading from sockets   |
  |    |                      +----------------------------------+---------------------------------------+
  |    |                      | "System.Timeout"                 | Giving up quickly when a service      |
  |    |                      |                                  | does not respond                      |
  +----+----------------------+----------------------------------+---------------------------------------+
  |  5 | __HTTP__             | "ASCII"                          | Expressing HTTP messages as strings   |
  |    |                      +----------------------------------+                                       |
  |    |                      | "ASCII.Char"                     |                                       |
  |    |                      +----------------------------------+---------------------------------------+
  |    |                      | "SocketsAndPipes.Serve"          | Our first rudimentary web server      |
  +----+----------------------+----------------------------------+---------------------------------------+
  |  6 | __HTTP types__       | "Data.ByteString"                | Defining datatypes for the            |
  |    |                      +----------------------------------+ parts of an HTTP message              |
  |    |                      | "Data.ByteString.Lazy"           |                                       |
  +----+----------------------+----------------------------------+---------------------------------------+
  |  7 | __Encoding__         | "Data.Text.Lazy"                 | Efficient string concatenations       |
  |    |                      +----------------------------------+                                       |
  |    |                      | "Data.Text.Lazy.Builder"         |                                       |
  |    |                      +----------------------------------+                                       |
  |    |                      | "Data.ByteString.Builder"        |                                       |
  |    |                      +----------------------------------+---------------------------------------+
  |    |                      | "Data.Time"                      | Simple performance testing            |
  |    |                      +----------------------------------+---------------------------------------+
  |    |                      | "Data.Foldable"                  | Encoding repetitions with `foldMap`   |
  +----+----------------------+----------------------------------+---------------------------------------+
  |  8 | __Responding__       | "Network.Socket.ByteString.Lazy" | Sending responses constructed by      |
  |    |                      |                                  | bytestring `Builder`                  |
  |    |                      +----------------------------------+---------------------------------------+
  |    |                      | "SocketsAndPipes.Serve"          | New web server using the              |
  |    |                      |                                  | encoding functions                    |
  |    |                      +----------------------------------+---------------------------------------+
  |    |                      | "Data.Int"                       | Contrasting `Integer`, `Int`,         |
  |    |                      |                                  | and `Int64`                           |
  +----+----------------------+----------------------------------+---------------------------------------+
  |  9 | __Content types__    | "Data.Text.Lazy.Builder.Int"     | Building a text response body         |
  |    |                      +----------------------------------+---------------------------------------+
  |    |                      | "Text.Blaze.Html"                | Building an HTML response body        |
  |    |                      +----------------------------------+                                       |
  |    |                      | "Text.Blaze.Html5"               |                                       |
  |    |                      +----------------------------------+                                       |
  |    |                      | "Text.Blaze.Html.Renderer.Utf8"  |                                       |
  |    |                      +----------------------------------+---------------------------------------+
  |    |                      | "Data.Aeson"                     | Building a JSON response body         |
  +----+----------------------+----------------------------------+---------------------------------------+
  | 10 | __Change__           | "Control.Concurrent.STM.TVar"    | Shared state for request-handling     |
  |    |                      +----------------------------------+ threads                               |
  |    |                      | "Control.Monad.STM"              |                                       |
  +----+----------------------+----------------------------------+---------------------------------------+
  | 11 | __Streaming__        | "Data.ByteString.Builder"        | Chunked HTTP message encoding         |
  +----+----------------------+----------------------------------+---------------------------------------+
  | 12 | __ListT IO__         | "Pipes"                          | Representing files and chunked HTTP   |
  |    |                      |                                  | message bodies as I/O streams         |
  +----+----------------------+----------------------------------+---------------------------------------+
  | 13 | __Request parsing__  |                                                                          |
  +----+----------------------+                                                                          |
  | 14 | __Reading headers__  |                                                                          |
  +----+----------------------+                                                                          |
  | 15 | __Body parsing__     |                                                                          |
  +----+----------------------+                 The remaining chapters are in progress.                  |
  | 16 | __Connection reuse__ |                                                                          |
  +----+----------------------+                                                                          |
  | 17 | __Producers and__    |                                                                          |
  |    | __Consumers__        |                                                                          |
  +----+----------------------+--------------------------------------------------------------------------+

  == Libraries

  Re-exported modules, grouped by the package that each module originally comes from:

  __ascii__ - "ASCII", "ASCII.Char"

  __aeson__ - "Data.Aeson"

  __async__ - "Control.Concurrent.Async"

  __base__

  * File handles - "System.IO"
  * Fundamental data types - "Data.Word", "Data.Int", "Data.Char"
  * Integer conversions - "Data.Bits"
  * Miscellania - "System.Timeout", "Control.Monad",
  "Data.Foldable", "Data.List"

  __blaze-html__ - "Text.Blaze.Html", "Text.Blaze.Html5",
  "Text.Blaze.Html5.Attributes", "Text.Blaze.Html.Renderer.Utf8"

  __bytestring__

  * Strict - "Data.ByteString"
  * Lazy - "Data.ByteString.Lazy"
  * Builder - "Data.ByteString.Builder"
  * "Data.ByteString.Char8" -
  This is included mostly to discuss why we don't use it.

  __network__

  * "Network.Socket" -
  The Socket type, operations for opening and closing sockets
  * "Network.Socket.ByteString" -
  Socket read/write operations with strict byte strings
  * "Network.Socket.ByteString.Lazy" -
  Socket read/write operations with lazy byte strings

  __pipes__

  * "Pipes" - ListT

  __safe-exceptions__ - "Control.Exception.Safe"

  __stm__ - "Control.Monad.STM", "Control.Concurrent.STM.TVar"

  __text__

  * Strict - "Data.Text", "Data.Text.Encoding", "Data.Text.IO"
  * Lazy - "Data.Text.Lazy", "Data.Text.Lazy.Encoding", "Data.Text.Lazy.IO"
  * Builder - "Data.Text.Lazy.Builder", "Data.Text.Lazy.Builder.Int"

  __time__ - "Data.Time"
license-name: Apache-2.0
