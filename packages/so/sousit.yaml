all-versions:
- '0.3'
- '0.4'
author: Mario Siegenthaler
basic-deps:
  base: '>4 && <5'
  bytestring: '>=0'
  cereal: '>=0'
  mtl: '>=0'
  resourcet: '>=0'
  stm: '>=0'
  transformers: '>=0'
changelog: ''
changelog-type: ''
description: |
  SouSiT
  ======

  Haskell library for *Sources*, *Sinks* and *Transformers*.
  The data is pushed from the source through the transfomers into the sink. The sink or a transfomer can decide at any time to end the transfer (see Iteratees).
  The transformers are very reusable since they can not depend on side effects, so they can be used with files as well as with simple lists.

  Allows you to build pipelines such as:

      ghci> listSource [1..10] $$ T.map(+1) =$= T.buffer 3 0 (+) =$ listSink
      [9,18,27,11]

  its possible to mix various type of sources and sinks, such as in:

      ghci> fileSourceLine "myfile.txt" $$ T.drop 1 =$= T.map (++ "!") =$ listSink
      ["Hello Mario!", "How're you doing?!"]

  Available Sources
  -----------------
  * List
  * Handle (IO)
  * File

  More types of sources can be added by users of the library. Consider using actionSource or bracketActionSource as a help if you do so.



  Available Sinks
  ---------------
  * List
  * Handle (IO)
  * File
  * monadic sink

  More types of sinks can be added by users of the library. Consider using either actionSink or the monadic sink interface if implementing your own sinks.

  ### Monadic Sink
  You can write sink in monad style

  Example that reads the first input, then skips the next three values and then reads two values and terminates. It outputs a tuple with the three values read.

      mySink = do v1 <- input
                  skip 3
                  v2 <- input
                  v3 <- input
                  return (v1, v2, v3)
description-type: markdown
hash: 262c31ffc60911f5cf6c7b0779b47d8d86687434e7c40e0d16c24cbca1e8bed2
homepage: https://github.com/msiegenthaler/SouSiT
latest: '0.4'
license-name: BSD-3-Clause
maintainer: msiegenthaler@inventsoft.ch
synopsis: 'Source/Sink/Transform: An alternative to lazy IO and iteratees.'
test-bench-deps:
  QuickCheck: '>2'
  base: '>4 && <5'
  mtl: '>=0'
  sousit: '>=0'
  test-framework: '>=0.3.3'
  test-framework-quickcheck2: '>=0.2.9'
