all-versions:
- '1.0'
- '1.1'
- '1.2'
- '1.3'
- '1.4'
- '1.5'
- '1.6'
- '1.7'
- '1.8'
- '1.9'
- '1.10'
- '1.11'
- '1.12'
author: ''
basic-deps:
  array: '>=0'
  base: '>=4.13 && <5'
  containers: '>=0.3'
changelog: "2019-10-15  John D. Ramsdell  <ramsdell@mitre.org>\n\n\t* cmu.cabal (Version):
  Released as version 1.12\n\n\t* src/Algebra/CommutativeMonoid/Main.hs (AnsErr):
  Updated code\n\tto support the MonadFail proposal as implemented in base-4.13.0.0.\n\n2018-01-06
  \ John D. Ramsdell  <ramsdell@mitre.org>\n\n\t* src/Algebra/CommutativeMonad/Main.hs
  (readM): Adapted the code\n\tto work when Monad no longer has a fail method.\n\n2015-04-27
  \ John D. Ramsdell  <ramsdell@mitre.org>\n\n\t* src/Algebra/CommutativeMonad/Main.hs
  (AnsErr): Added Functor and\n\tApplicative instance so that the code compiles with
  GHC 7.10.\n\tThanks go to Douglas McClean.\n\n\t* cmu.cabal (Version): Released
  as version 1.10\n\n2013-02-21  John D. Ramsdell  <ramsdell@mitre.org>\n\n\t* cmu.cabal
  (Location): Added repository location.\n\n\t* cmu.cabal (Version): Released as version
  1.9.\n\n2012-05-12  John D. Ramsdell  <ramsdell@mitre.org>\n\n\t* cmu.cabal (Version):
  Released as version 1.8.\n\n\t* src/Algebra/CommutativeMonoid/LinDiophEq.hs: Used
  the method in\n\tthe paper by Contejean and Devie for solving an inhomogeneous\n\tequation
  using the algorithm for the homogeneous equation solver.\n\tThe previous version
  buggy.\n\n2012-05-02  John D. Ramsdell  <ramsdell@mitre.org>\n\n\t* cmu.cabal (Version):
  Released as version 1.7.\n\n2012-04-27  John D. Ramsdell  <ramsdell@mitre.org>\n\n
  \       * src/Algebra/CommutativeMonoid/LinDiophEq.hs: Corrected spelling\n\terror
  by replacing Diaphantine with Diophantine.\n\n2012-04-25  John D. Ramsdell  <ramsdell@mitre.org>\n\n\t*
  cmu.cabal (Version): Released as version 1.6.\n\n\t* src/Algebra/CommutativeMonoid/LinDiaphEq.hs:
  Added code that\n\tsolves inhomogeneous equations.\n\n2012-02-29  John D. Ramsdell
  \ <ramsdell@mitre.org>\n\n\t* cmu.cabal (Version): Released as version 1.5.\n\n\t*
  src/Algebra/CommutativeMonoid/{Main.hs,Unification.hs}:\n\tCorrected spelling of
  monoid in several places.\n\n2012-02-29  John D. Ramsdell  <ramsdell@mitre.org>\n\n\t*
  cmu.cabal (Version): Released as version 1.4.  Also, constrained\n\tthe containers
  package to be 0.3 or greater.\n\n\t* src/Algebra/CommutativeMonoid/Unification.hs:
  Replaced\n\toccurrences of Data.Map.foldWithKey by Data.Map.foldrWithKey as\n\tthe
  former has been deprecated.\n\n2010-06-21  John D. Ramsdell  <ramsdell@mitre.org>\n\n\t*
  cmu.cabal (Version): Released as version 1.3.\n\n\t* cmu.cabal (Build-Depends):
  changes dependency to\n\tbase >= 3 && <5, containers\n\n2009-09-18  John D. Ramsdell
  \ <ramsdell@mitre.org>\n\n\t* src/Algebra/CommutativeMonoid/Unification.hs: Changed\n\toccurrences
  of group to monoid in comments.\n\n\t* cmu.cabal (Version): Released as version
  1.2.\n\n2009-09-17  John D. Ramsdell  <ramsdell@mitre.org>\n\n\t* cmu.cabal (Version):
  Released as version 1.0.\n\n\t* cmu.cabal (Synopsis): Fixed spelling error.\n\n\t*
  cmu.cabal (Version): Released as version 1.1 after fixing the\n\tembarrassing spelling
  error.\n"
changelog-type: text
description: |
  This package contains a library for unification in
  commutative monoid and a program that exercises the library.

  $ cmu
  Commutative monoid unification -- :? for help
  cmu> 2x+y=3z
  Problem:   2x + y = 3z
  Unifier:   [x : g0 + 3g2,y : g0 + 3g1,z : g0 + g1 + 2g2]

  cmu> 2x=x+y
  Problem:   2x = x + y
  Unifier:   [x : g0,y : g0]

  cmu> 64x=41y+a
  Problem:   64x = a + 41y
  Unifier:   [a : 5g0 + 2g1 + 23g2 + g3 + 64g4,x : 2g0 + 9g1 + g2 + 25g3 + g4 + 41g5,y : 3g0 + 14g1 + g2 + 39g3 + 64g5]

  cmu> :quit
description-type: text
hash: 6f5a8e94f9c4f10ed6b2851ab597b137f5bad8310016de240ca24ff6b36d837c
homepage: ''
latest: '1.12'
license-name: LicenseRef-GPL
maintainer: ramsdell@mitre.org
synopsis: Unification in a Commutative Monoid
test-bench-deps: {}
