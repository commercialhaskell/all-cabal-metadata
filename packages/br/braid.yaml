all-versions:
- 0.1.0.0
author: Adam Saltz
basic-deps:
  base: '>=4.7 && <5'
  containers: '>=0'
  diagrams-contrib: '>=0'
  diagrams-core: '>=0'
  diagrams-lib: '>=0'
  diagrams-svg: '>=0'
  split: '>=0'
changelog: ''
changelog-type: ''
description: |-
  A library to work with [braids](https://en.wikipedia.org/wiki/Braid_theory) and [Khovanov homology](https://en.wikipedia.org/wiki/Khovanov_homology).  The main focus of the package is computing (the braid invariant \kappa)[http://arxiv.org/abs/1507.06263] defined by (the package author)[adamsaltz.com] and (Diana Hubbard)[https://sites.google.com/site/dianadhubbard/].
  Braids are encoded by their index/width and a word in the standard [Artin generators](https://en.wikipedia.org/wiki/Braid_group#Generators_and_relations).  To represent the 4-strand braid \sigma_1\sigma_2\sigma^(-1)_3 use

  > Braid [1,2,-3] 4

  The function 'computeKappa' in the module `Kappa` returns 'Just kappa' if kappa is finite and 'Nothing' otherwise.  More helper functions for working with Khovanov homology and reduced Khovanov homology will be included soon.

  The module 'Braiddiagrams' creates diagrams for braids, their closures, and their resolutions.  E.g. to dra

  The executable 'KappaView' draws the pre-images of the (transverse invariant \psi)[http://arxiv.org/abs/math/0412184] with lowest k-grading.  The minus-labeled components are indicated by dots.
description-type: haddock
hash: 79371127a7904fa4702add75479ec85112767ebc0a3bdbe56317ac603e5e8590
homepage: http://github.com/githubuser/braid#readme
latest: 0.1.0.0
license-name: BSD-3-Clause
maintainer: saltz.adam@gmail.com
synopsis: Types and functions to work with braids and Khovanov homology.
test-bench-deps: {}
