homepage: https://github.com/stla/vertexenum#readme
changelog-type: markdown
hash: eb96d4dffbe95e316774a3907afcd7d4434b78f4d4d4fe1bd0e3752cf586a419
test-bench-deps:
  base: '>=4.7 && <5'
  tasty-hunit: '>=0.10 && <0.11'
  vertexenum: -any
  tasty: '>=1.4 && <1.5'
maintainer: laurent_step@outlook.fr
synopsis: Vertex enumeration
changelog: "# Changelog for `vertexenum`\r\n\r\n## 0.1.1.0 - 2023-11-20\r\n\r\nThe
  types `LinearCombination` and `Constraint` are parametric now. \r\n\r\n\r\n## 0.1.0.0
  - 2023-11-18\r\n\r\nFirst release.\r\n"
basic-deps:
  base: '>=4.7 && <5'
  vector-space: '>=0.15 && <0.17'
  hmatrix-glpk: '>=0.19.0.0 && <0.20'
  containers: '>=0.6.2.1 && <0.8'
all-versions:
- 0.1.0.0
- 0.1.1.0
author: StÃ©phane Laurent
latest: 0.1.1.0
description-type: markdown
description: "# vertexenum\r\n\r\n<!-- badges: start -->\r\n[![Stack](https://github.com/stla/vertexenum/actions/workflows/Stack.yml/badge.svg)](https://github.com/stla/vertexenum/actions/workflows/Stack.yml)\r\n<!--
  badges: end -->\r\n\r\n*Get the vertices of an intersection of halfspaces.*\r\n\r\n____\r\n\r\nThis
  package depends on the packages **hmatrix** and **hmatrix-glpk**; follow \r\n[this
  link](https://github.com/haskell-numerics/hmatrix/blob/master/INSTALL.md) \r\nfor
  installation instructions.\r\n\r\nConsider the following system of linear inequalities:\r\n\r\n$$\\left\\{\\begin{matrix}
  -5 & \\leqslant & x & \\leqslant & 4 \\\\ -5 & \\leqslant & y & \\leqslant & 3-x
  \\\\ -10 & \\leqslant & z & \\leqslant & 6-2x-y \\end{matrix}.\\right.$$\r\n\r\nEach
  inequality defines a halfspace. The intersection of the six halfspaces is\r\na convex
  polytope. The `vertexenum` function can calculate the vertices of this \r\npolytope:\r\n\r\n```haskell\r\nimport
  Data.VectorSpace     ( AdditiveGroup((^+^), (^-^))\r\n                            ,
  VectorSpace((*^)) )\r\nimport Geometry.VertexEnum\r\n\r\nconstraints :: [Constraint
  Double]\r\nconstraints =\r\n  [ x .>= (-5)         -- shortcut for `x .>=. cst (-5)`\r\n
  \ , x .<=  4\r\n  , y .>= (-5)\r\n  , y .<=. cst 3 ^-^ x -- we need `cst` here\r\n
  \ , z .>= (-10)\r\n  , z .<=. cst 6 ^-^ 2*^x ^-^ y ]\r\n  where\r\n    x = newVar
  1\r\n    y = newVar 2\r\n    z = newVar 3\r\n\r\nvertexenum constraints Nothing\r\n```\r\n\r\nThe
  type of the second argument of `vertexenum` is `Maybe [Double]`. If this \r\nargument
  is `Just point`, then `point` must be the coordinates of a point \r\ninterior to
  the polytope. If this argument is `Nothing`, an interior point \r\nis automatically
  calculated. You can get it with the `interiorPoint` function. \r\nIt is easy to
  mentally get an interior point for the above example, but in \r\ngeneral this is
  not an easy problem."
license-name: GPL-3.0-only
