all-versions:
- 0.1.0.0
- 0.1.1.0
- 1.0.0.0
author: StÃ©phane Laurent
basic-deps:
  base: '>=4.7 && <5'
  containers: '>=0.6.5.1 && <0.7'
  extra: '>=1.7 && <1.8'
  monad-logger: '>=0.3.40 && <0.4'
  simplex-method: '>=0.2.0.0 && <0.3'
  vector-space: '>=0.15 && <0.17'
changelog: "# Changelog for `vertexenum`\r\n\r\n\r\n## 1.0.0.0 - 2024-05-08\r\n\r\nThe
  package does no longer depend on the 'hmatrix-glpk' package.\r\n\r\n\r\n## 0.1.1.0
  - 2023-11-20\r\n\r\nThe types `LinearCombination` and `Constraint` are parametric
  now. \r\n\r\n\r\n## 0.1.0.0 - 2023-11-18\r\n\r\nFirst release.\r\n"
changelog-type: markdown
description: "# vertexenum\r\n\r\n<!-- badges: start -->\r\n[![Stack-lts](https://github.com/stla/vertexenum/actions/workflows/Stack-lts.yml/badge.svg)](https://github.com/stla/vertexenum/actions/workflows/Stack-lts.yml)\r\n[![Stack-nightly](https://github.com/stla/vertexenum/actions/workflows/Stack-nightly.yml/badge.svg)](https://github.com/stla/vertexenum/actions/workflows/Stack-nightly.yml)\r\n<!--
  badges: end -->\r\n\r\n***Get the vertices of an intersection of halfspaces.***\r\n\r\n____\r\n\r\nConsider
  the following system of linear inequalities:\r\n\r\n$$\\left\\{\\begin{matrix} -5
  & \\leqslant & x & \\leqslant & 4 \\\\ -5 & \\leqslant & y & \\leqslant & 3-x \\\\
  -10 & \\leqslant & z & \\leqslant & 6-2x-y \\end{matrix}.\\right.$$\r\n\r\nEach
  inequality defines a halfspace. The intersection of the six halfspaces is\r\na convex
  polytope. The `vertexenum` function can calculate the vertices of this \r\npolytope:\r\n\r\n```haskell\r\nimport
  Data.VectorSpace     ( \r\n                              AdditiveGroup( (^+^), (^-^)
  )\r\n                            , VectorSpace( (*^) ) \r\n                            )\r\nimport
  Geometry.VertexEnum\r\n\r\ninequalities :: [Constraint Rational]\r\ninequalities
  =\r\n  [ x .>= (-5)         -- shortcut for `x .>=. cst (-5)`\r\n  , x .<=  4\r\n
  \ , y .>= (-5)\r\n  , y .<=. cst 3 ^-^ x -- we need `cst` here\r\n  , z .>= (-10)\r\n
  \ , z .<=. cst 6 ^-^ 2*^x ^-^ y ]\r\n  where\r\n    x = newVar 1\r\n    y = newVar
  2\r\n    z = newVar 3\r\n\r\nvertexenum constraints Nothing\r\n```\r\n\r\nThe type
  of the second argument of `vertexenum` is `Maybe [Double]`. If this \r\nargument
  is `Just point`, then `point` must be the coordinates of a point \r\ninterior to
  the polytope. If this argument is `Nothing`, an interior point \r\nis automatically
  calculated. You can get it with the `interiorPoint` function. \r\nIt is easy to
  mentally get an interior point for the above example, but in \r\ngeneral this is
  not an easy problem.\r\n"
description-type: markdown
hash: 0238d856ff1c1458536a6804f42e83c208d3d3f6470f0b46da8e73f7f48f5e50
homepage: https://github.com/stla/vertexenum#readme
latest: 1.0.0.0
license-name: GPL-3.0-only
maintainer: laurent_step@outlook.fr
synopsis: Vertex enumeration
test-bench-deps:
  base: '>=4.7 && <5'
  tasty: '>=1.4 && <1.5'
  tasty-hunit: '>=0.10 && <0.11'
  vertexenum: '>=0'
