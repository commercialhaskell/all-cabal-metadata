homepage: https://github.com/stla/vertexenum#readme
changelog-type: markdown
hash: c1fd96665b505563acf3343b52c7f7c98014b55c5e93a73a565ab53be4226f34
test-bench-deps:
  base: '>=4.7 && <5'
  tasty-hunit: '>=0.10 && <0.11'
  vertexenum: -any
  tasty: '>=1.4 && <1.5'
maintainer: laurent_step@outlook.fr
synopsis: Vertex enumeration
changelog: |
  # Changelog for `vertexenum`

  ## 0.1.0.0 - 2023-11-18

  First release.
basic-deps:
  base: '>=4.7 && <5'
  vector-space: '>=0.15 && <0.17'
  hmatrix-glpk: '>=0.19.0.0 && <0.20'
  containers: '>=0.6.2.1 && <0.8'
all-versions:
- 0.1.0.0
author: StÃ©phane Laurent
latest: 0.1.0.0
description-type: markdown
description: "# vertexenum\n\n<!-- badges: start -->\n[![Stack](https://github.com/stla/vertexenum/actions/workflows/Stack.yml/badge.svg)](https://github.com/stla/vertexenum/actions/workflows/Stack.yml)\n<!--
  badges: end -->\n\n*Get the vertices of an intersection of halfspaces.*\n\n____\n\nConsider
  the following system of linear inequalities:\n\n$$\\left\\{\\begin{matrix} -5 &
  \\leqslant & x & \\leqslant & 4 \\\\\\\\ -5 & \\leqslant & y & \\leqslant & 3-x
  \\\\\\\\ -10 & \\leqslant & z & \\leqslant & 6-2x-y \\end{matrix}.\\right.$$\n\nEach
  inequality defines a halfspace. The intersection of the six halfspaces is\na convex
  polytope. The `vertexenum` function can calculate the vertices of this \npolytope:\n\n```haskell\nimport
  Data.Ratio           ( (%) )\nimport Data.VectorSpace     ( AdditiveGroup((^+^),
  (^-^))\n                            , VectorSpace((*^)) )\nimport Geometry.VertexEnum\n\nconstraints
  :: [Constraint]\nconstraints =\n  [ x .>= (-5)         -- shortcut for `x .>=. cst
  (-5)`\n  , x .<=  4\n  , y .>= (-5)\n  , y .<=. cst 3 ^-^ x -- we need `cst` here\n
  \ , z .>= (-10)\n  , z .<=. cst 6 ^-^ 2*^x ^-^ y ]\n  where\n    x = newVar 1\n
  \   y = newVar 2\n    z = newVar 3\n\nvertexenum constraints Nothing\n```\n\nThe
  type of the second argument of `vertexenum` is `Maybe [Double]`. If this \nargument
  is `Just point`, then `point` must be the coordinates of a point \ninterior to the
  polytope. If this argument is `Nothing`, an interior point \nis automatically calculated.
  You can get it with the `interiorPoint` function. \nIt is easy to mentally get an
  interior point for the above example, but in \ngeneral this is not an easy problem."
license-name: GPL-3.0-only
