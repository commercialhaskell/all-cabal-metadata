homepage: https://github.com/cdepillabout/password/tree/master/password#readme
changelog-type: markdown
hash: ca275439b26f9886f8833801f0a2ece9e7c5d18f219e50ae37cfa7bdec711cf7
test-bench-deps:
  scrypt: -any
  bytestring: -any
  base: '>=4.9 && <5'
  text: -any
  doctest: -any
  memory: -any
  quickcheck-instances: -any
  base-compat: -any
  password: -any
  cryptonite: -any
  tasty-quickcheck: -any
  tasty-hunit: -any
  tasty: -any
  QuickCheck: -any
  template-haskell: -any
maintainer: cdep.illabout@gmail.com, felix.paulusma@gmail.com
synopsis: Hashing and checking of passwords
changelog: |
  # Changelog for `password`

  ## 2.1.1.0

  -   Fixed `homepage` links in the `.cabal` files.
      [#34](https://github.com/cdepillabout/password/pull/34)
      Thanks to [@Radicalautistt](https://github.com/Radicalautistt)
  -   Updated the `defaultPasswordPolicy` and documentation of the
      `Data.Password.Validate` module using information about research done on
      "memorized secrets" (i.e. passwords) by the NIST.
      [#31] https://github.com/cdepillabout/password/pull/31
      Thanks to [@agentultra](https://github.com/agentultra) for pointing out
      the research and starting the PR.
      [#39](https://github.com/cdepillabout/password/pull/39)
      Thanks to [@Vlix](https://github.com/Vlix) for updating the rest of the
      documentation.
  -   Small spelling and other documentation fixes.

  ## 2.1.0.0

  -   A new `Validate` module has been added to dictate policies that passwords
      should adhere to and the necessary API to verify that they do.
      [#26](https://github.com/cdepillabout/password/pull/26)
      Huge thanks to [@HirotoShioi](https://github.com/HirotoShioi) for picking
      up the task of adding this functionality and doing most of the groundwork.
      [#27](https://github.com/cdepillabout/password/pull/27)
      Thanks to [@Vlix](https://github.com/Vlix) for finishing up the API and
      documentation.

  ## 2.0.1.1

  -   Fixed cross-module links in the haddocks.
      [#19](https://github.com/cdepillabout/password/pull/19) Thanks to
      [@TristanCacqueray](https://github.com/TristanCacqueray) for fixing this.

  ## 2.0.1.0

  -   Switched checking hashes to using `Data.ByteArray.constEq`, instead of
      the default `(==)` method of `ByteString`. This is to make it more secure
      against timing attacks. [#16](https://github.com/cdepillabout/password/pull/16)
      Thanks to [@maralorn](https://github.com/maralorn) for bringing this up.

  ## 2.0.0.1

  -   Fixed README markdown for hackage.

  ## 2.0.0.0

  -   Complete overhaul of the library to include hashing and checking
      passwords with not just `scrypt`, but also `PBKDF2`, `bcrypt` and
      `Argon2`.
      [#8](https://github.com/cdepillabout/password/pull/8)
  -   `cryptonite` is now used as a dependency, instead of the `scrypt` package.
      [#8](https://github.com/cdepillabout/password/pull/8)
  -   Done away with abbreviating "password" (`Pass/pass` -> `Password/password`)
      [#8](https://github.com/cdepillabout/password/pull/8)
  -   Removed `unsafeShowPasswordText` and changed `unsafeShowPassword` to be
      `Password -> Text`. (Anyone who needs it to be a `String` knows where to
      find `Data.Text.unpack`)
      [#8](https://github.com/cdepillabout/password/pull/8)
  -   GHC versions < 8.2 are no longer actively supported.
      (Tested to work for GHC 8.2.2)

  ## 1.0.0.0

  -   `hashPassWithSalt` has switched function arguments for better currying.
      [#6](https://github.com/cdepillabout/password/pull/6)
      Although be warned that multiple passwords
      [should not be hashed with the same salt](https://github.com/cdepillabout/password/pull/6#discussion_r370455681).
  -   Removed `Read` instance from `Pass` and added `Show` instance.
      [#6](https://github.com/cdepillabout/password/pull/6)
      See [#5](https://github.com/cdepillabout/password/issues/5#issuecomment-576958351)
      for justification of this.
  -   `newSalt` is now `MonadIO m` instead of `IO`.
      [#6](https://github.com/cdepillabout/password/pull/6)
  -   `PassCheckSucc` has been renamed to `PassCheckSuccess`.
      [#6](https://github.com/cdepillabout/password/pull/6)
  -   Hide data constructor from `Pass` and add the `mkPass` function to construct a `Pass`.
      [#6](https://github.com/cdepillabout/password/pull/6)
  -   Thanks to Felix Paulusma ([@Vlix](https://github.com/Vlix)) for the above
      changes!

  ## 0.1.0.1

  -   Small fix to make sure the doctests build with stack.
      [#3](https://github.com/cdepillabout/password/pull/3)

  ## 0.1.0.0

  - Initial version.
basic-deps:
  bytestring: '>=0.10.8.1 && <0.11'
  base: '>=4.9 && <5'
  text: '>=1.2.2 && <1.3'
  memory: '>=0.14 && <0.16'
  base64: '>=0.3 && <0.5'
  cryptonite: '>=0.15.1 && <0.28'
  template-haskell: -any
all-versions:
- 0.1.0.0
- 0.1.0.1
- 1.0.0.0
- 2.0.0.0
- 2.0.0.1
- 2.0.1.0
- 2.0.1.1
- 2.1.0.0
- 2.1.1.0
author: Dennis Gosnell, Felix Paulusma
latest: 2.1.1.0
description-type: markdown
description: |
  # password

  [![Build Status](https://secure.travis-ci.org/cdepillabout/password.svg)](http://travis-ci.org/cdepillabout/password)
  [![Hackage](https://img.shields.io/hackage/v/password.svg)](https://hackage.haskell.org/package/password)
  [![Stackage LTS](http://stackage.org/package/password/badge/lts)](http://stackage.org/lts/package/password)
  [![Stackage Nightly](http://stackage.org/package/password/badge/nightly)](http://stackage.org/nightly/package/password)
  [![BSD3 license](https://img.shields.io/badge/license-BSD3-blue.svg)](./LICENSE)

  This library provides datatypes and functions for working with passwords and
  password hashes in Haskell.

  Currently supports the following algorithms:

  * `PBKDF2`
  * `bcrypt`
  * `scrypt`
  * `Argon2`

  Also, see the [password-instances](https://hackage.haskell.org/package/password-instances)
  package for instances for common typeclasses.
license-name: BSD-3-Clause
