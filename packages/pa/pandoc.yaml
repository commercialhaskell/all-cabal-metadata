homepage: https://pandoc.org
changelog-type: markdown
hash: 4a875537c0f3ed51959a6685626d75d218631dab2ea2b5fc1801d6b2139bd1fc
test-bench-deps:
  zip-archive: '>=0.4.3 && <0.5'
  bytestring: '>=0.9 && <0.13'
  base: '>=4.12 && <5'
  tasty-golden: '>=2.3 && <2.4'
  time: '>=1.5 && <1.14'
  Diff: '>=0.2 && <0.6'
  text: '>=1.1.1.0 && <2.2'
  doctemplates: '>=0.11 && <0.12'
  filepath: '>=1.1 && <1.5'
  process: '>=1.2.3 && <1.7'
  pandoc-types: '>=1.23.1 && <1.24'
  xml: '>=1.3.12 && <1.4'
  containers: '>=0.4.2.1 && <0.7'
  tasty-bench: '>=0.2 && <=0.4'
  pandoc: -any
  tasty-quickcheck: '>=0.8 && <0.11'
  mtl: '>=2.2 && <2.4'
  tasty-hunit: '>=0.9 && <0.11'
  temporary: '>=1.1 && <1.4'
  tasty: '>=0.11 && <1.6'
  deepseq: -any
  Glob: '>=0.7 && <0.11'
  directory: '>=1.2.3 && <1.4'
maintainer: John MacFarlane <jgm@berkeley.edu>
synopsis: Conversion between markup formats
changelog: "# Revision history for pandoc\n\n## pandoc 3.1.9 (2023-10-27)\n\n  * Make
  `reference-section-title` work with `jats+element_citations`\n    (#9021).\n\n  *
  Add `bits` as synonym of `jats` as input format.\n\n  * JATS reader:\n\n    + Modify
  JATS reader to handle BITS too (#9138, Julia Diaz).\n      Add provision for title-group,
  book, book-part-wrapper, book-meta,\n      book-part-meta, book-title, book-title-group,
  index, toc, legend,\n      title, collection-meta\n    + Fix handling of alt-text
  (#9130, Julia Diaz). Previously we were\n      looking for an attribute that doesn't
  exist in JATS; alt-text is\n      provided by a child element.\n\n  * CommonMark
  reader:\n\n    + Handle `Ext_tex_math_gfm` (#9121). Parse GFM-specific math\n      constructions
  when `tex_math_gfm` enabled.\n\n  * DokuWiki reader:\n\n    + Allow autolinks to
  be avoided using e.g. `https:%%//%%...` (#9153).\n    + Parse `<code>` and `<file>`
  as block-level code (#9154).\n      Previously we treated them as inline code in
  some contexts,\n      but that is not how DokuWiki works.\n\n  * LaTeX reader:\n\n
  \   + Better handle spacing commands `\\hfill`, `\\vfill`, `\\hskip`,\n      `\\vskip`,
  etc. (#9150).\n    + Fix incorrect abbreviation for astronomical unit (#9125,\n
  \     Michael McClurg).\n\n  * Markdown reader:\n\n    + Fix blindspot with superscript
  in links (#8981).\n      Previously `[^super^](#ref)` wasn't parsed as a link, due
  to\n      code that was meant to prevent footnote markers from being\n      recognized
  as reference links.  This commit tightens up that\n      code to avoid this bad
  effect. We have also added a new\n      restriction on footnote labels: they cannot
  contain the characters\n      `^`, `[`, or `]`. Though this is technically a breaking
  change, we\n      suspect that the impact will be minimal, as it's very unlikely\n
  \     people would be using these characters in their note labels.\n    + Don't
  apply `--default-image-extension` to data URIs (#9118).\n    + More accurate check
  that a normalCite is not a link,\n      bracketed span, or reference (#9080).\n\n
  \ * HTML reader:\n\n    + Allow th to close td and vice versa (#9090).\n    + Parse
  task lists using input elements (#9047, Seth Speaks).\n\n  * Creole reader:\n\n
  \   + Handle empty cells correctly (#9141, Sascha Wilde).\n\n  * Org writer:\n\n
  \   + Escape literal `*`, `|`, `#` at beginning of line with ZWS (#9159).\n\n  *
  ICML writer:\n\n    + Prevent doubled attributes (#9158).\n\n  * Powerpoint writer:\n\n
  \   + Fix a corruption error caused when the document used both a\n      regular
  png and a png in a data URI (#9113). (Similarly for any\n      other image format.)
  The problem was that duplicate entries in\n      `[Content Types].xml` were being
  created, one for the mime type\n      `image/png`, one for `image/png;base64`.\n\n
  \ * LaTeX writer:\n\n    + Fix rowspans in tables so they use the width of\n      the
  column (`=` as the width parameter) (#9140).\n    + Don't treat table as \"simple\"
  if they have col widths.\n      This should help fix a problem wherein some grid
  tables with\n      colspans were overly wide (#9140).\n    + Fix uneven indents
  in line block output (#9088).\n\n  * JATS writer: fix 3.1.4 regression in handling
  block-level metadata\n    (#9092).\n\n  * Ms writer: improvements in image handling
  (#4475).\n\n    + PDFPIC is now used for PDF images in figures.\n    + Inline images
  that are postscript or PDF are rendered using\n      PSPIC or PDFPIC. This isn't
  ideal, because they will still be\n      rendered as if in a separate paragraph,
  but it's probably\n      better than just printing the image name.\n    + Units
  are included in height.\n\n  * HTML writer:\n\n    + If raw format is an HTML side
  deck format, emit it (James J Balamuta).\n\n  * Typst writer:\n\n    + Add `#box`
  around image to make it inline. (#9104)\n      An `#image` by itself in typst is
  a block-level element.\n      To force images to be inline (as they are in pandoc),
  we need\n      to add a box with an explicit width. When a width is not given\n
  \     in image attributes, we compute one from the image itself, when\n      possible.\n
  \   + Don't allow long heading to wrap (#9132).\n    + Escape `(` (#9137). If unescaped
  `(` occurs in\n      certain contexts, it can be parsed as function application.\n\n
  \ * Man writer:\n\n    + Fix some spacing issues around links (#9120).\n      We
  need to use `\\c` before a `.UR` or `.MT`, to avoid\n      an extra space, and also
  after.  To ensure that a space\n      at the beginning of the following line doesn't
  get swallowed\n      up, we escape it with `\\`.\n    + Use UR, MT macros for URLs,
  emails (#9120).\n\n  * Text.Pandoc.Extensions:\n\n    + Add `Ext_tex_math_gfm` constructor
  to Extension (#9121).\n      [API change]. This handles two GitHub-specific syntaxes
  for math.\n      This is now default for `gfm`, in addition to `tex_math_dollars`.\n
  \   + Remove duplicates for `Ext_raw_html` and `Ext_pipe_tables`\n      in some
  of the lists (Tim Stewart).\n\n  * Text.Pandoc.Metadata: Add helpful message on
  some metadata\n    YAML errors (#9155).\n\n  * Text.Pandoc.Shared:\n\n    + `splitSentences`:
  don't split after initials.\n      This improves the man and ms writer output, preventing\n
  \     sentence breaks after initials.\n    + Add `addPandocAttributes` function
  [API change].\n      This is meant to simplify addition of attributes to Pandoc\n
  \     elements: for elements that don't have a slot for attributes, an\n      enclosing
  Div or Span is added to hold the attributes.\n\n  * MANUAL.txt:\n\n    + Clarify
  that formatting can't cross line boundaries\n      in line blocks (#9119).\n    +
  Fix legacy option for citation (#8737, 3w36zj6)\n\n  * Update `et` translations
  (priiduonu).\n\n  * Updated `no` translations (Stephan Daus).\n    Renamed no.yaml
  (macrolanguage Norwegian) to nb.yaml (Norwegian Bokm√•l).\n    Created soft symbolic
  link from no.yaml pointing to nb.yaml.\n\n  * Lua subsystem: Use the newest LPeg
  version (lpeg-1.1.*) (#9107,\n    Albert Krewinkel).\n\n  * Default `epub.css`:
  Apply style to h6, format styles, and\n    combine identical styles under shared
  selectors (samuel-weinhardt).\n\n  * Update nix flake with dependencies (piq9117).\n\n
  \ * LaTeX template: fix `\\CSLBlock` vertical space (John Purnell).\n\n  * Allow
  tasty 1.5 and Diff 0.5.\n\n  * Require commonmark-extensions 0.2.4, commonmark 0.2.4.\n\n
  \ * Require texmath 0.12.8.4. This should improve math in\n    powerpoint, fixing
  empty boxes around roots in some cases.\n\n  * Require typst 0.3.2.1\n\n## pandoc
  3.1.8 (2023-09-08)\n\n  * JATS reader:\n\n    + Ignore `<processing-meta>` element
  (#9057, Julia Diaz).\n    + Fix conversion of date to ISO 8601 format (#8865).\n\n
  \ * LaTeX template:\n\n    + Add code allow `\\cite` to break across lines (#9050).\n
  \   + Fix regression with CSL `display=\"block\"` (#7363).\n      This restores
  the line break before the block.\n    + Rewrite `CSLReferences` environment to avoid
  depending on\n      `enumitem`, which plays badly with beamer.  Instead we use\n
  \     a regular list environment. Thanks to @jpcirrus for the\n      concept (#9053).\n
  \   + Restore the pre-3.1.7 format of the `CSLReferences`\n      environment, which
  again has two parameters. The first\n      determines whether a hanging indent is
  used (1 = yes, 0 = no),\n      and the second is the entry line spacing (0 = none).\n
  \   + Add a strut to avoid inconsistencies in spacing (#9058).\n    - Remove a break
  at the end of `CSLRightInline` to avoid\n      inconsistencies in spacing. It shouldn't
  be necessary\n      because the paragraph should extend to the right margin (#9058).\n\n
  \ * LaTeX writer:\n\n    + Fix regression with figure labels (#9045). In 3.1.7,
  pandoc\n      added two labels to LaTeX figure environments, one with a\n      phantomsection.\n
  \   + Fix default citeproc entry-spacing. According to the CSL manual,\n      the
  default entry spacing is 1. We were treating it as 0 (#9058).\n\n  * HTML writer:\n\n
  \   + Use the ID prefix in the ID for the footnotes section (#9044,\n      Benjamin
  Esham).\n    + Fix CSL entry-spacing default (#9058).\n\n  * Text.Pandoc.Citeproc:
  \ always include an `entry-spacing` attribute\n    in the Div if the bibliography
  element contains an entry-spacing\n    attribute (previously we omitted it when
  it was 0) (#9058).\n\n  * Clean up pandoc's own man pages by regenerating with pandoc
  3.1.7.\n\n  * pandoc-lua-engine: bump lower bound for pandoc (#9046).\n\n  * Depend
  on texmath 0.12.8.2, fixing binom in typst writer (#9063).\n\n## pandoc 3.1.7 (2023-08-31)\n\n
  \ * Org reader:\n\n    + Don't parse alphabetical lists unless the `fancy_lists`
  extension is\n      enabled (#9042).\n    + Allow escaping commas in macro arguments
  (Amneesh Singh).\n\n  * JATS reader:\n\n    + Support for `<permissions>` metadata
  (#9037, Julia Diaz).\n      metadata objects with multiple fields are created, matching
  the\n      structure in JATS.\n    + Correct name of JATS element `attrib`.\n\n
  \ * Markdown reader:\n\n    + Support images with wikilink syntax, e.g. `![[foo|bar]]`,
  when\n      one of the `wikilinks` extension is enabled (#8853).\n    + Allow a
  citation or reference link to be parsed after a `!` (#8254).\n    + Fix dropped
  `!` before nonexistent reference (#9038).\n\n  * LaTeX writer:\n\n    + Fix regression
  in escaping URLs (#9043).\n    + Use `\\cite` and `\\bibitem` to link up citations,
  even with citeproc.\n      (#9031). This will give us better accessibility; when
  tagging is\n      enabled, the citation can be linked to the bibliography entry.\n
  \     This changes some of the details of the layout and the default\n      template.
  We now make `CSLReferences` a special enumitem list\n      that will contain `\\bibitem`s.
  Internal links inside citations to\n      ids beginning in `ref-` are creating using
  `\\cite` instead of\n      `\\hyperref`.\n    + Use `\\phantomsection` and `\\label`
  instead of `\\hypertarget` (#9022).\n    + Use `\\hyperref` for LaTeX internal links,
  `\\hyperlink` for\n      beamer (since `\\hyperref` doesn't seem to work) (#9022).\n
  \   + Backslash-escape `%` and `#` in URLs (#9014).\n\n  * JATS writer:\n\n    +
  Fix placement of ref-list when no title is specified for the\n      reference section
  (#9017). (In this case we place it in `back`\n      with an empty title.)\n\n  *
  Man writer:\n\n    + Avoid a `.PP` right after a section heading (#9020).\n      This
  is at best a no-op (in groff man and mandoc) and at worst\n      (in some formatters)
  may create extra whitespace.\n    + We revert the fanciness introduced in #7506,
  which employs a\n      custom font name `V` and a macro that makes this act like
  boldface\n      in a terminal and monospace in other formats.  Unfortunately,\n
  \     this code uses a mechanism that is not portable (and does not\n      work
  in mandoc) (#9020).\n    + Instead of using `V` for inline code, we simply use `CR`.\n
  \     Note that `\\f[CR]` is emitted instead of plain `\\f[C]`,\n      because there
  is no `C` font in man.  (This produces warnings\n      in recent versions of groff,
  #9020.)\n    + For code blocks, we now use the `.EX` and `.EE` macros,\n      together
  with `.IP` for spacing and indentation.  This gives\n      more standard code that
  can be better interpreted e.g. by mandoc\n      (#9020).\n\n  * Man template: don't
  emit `.hy`, regardless of setting of\n    `hyphenate` variable (#9020).\n\n  * LaTeX
  template: special redefinition of `\\st` for CJK (#9019).\n    soul's version raises
  on error on CJK text.\n\n  * Use latest skylighting-format-blaze-html (#7248).\n
  \   This works around a longstanding iOS Safari bug that caused long\n    lines
  to be displayed in a different font size in highlighted code.\n\n  * Allow skylighting
  0.14 (and require it in pandoc core).\n\n  * Allow text 2.1.\n\n## pandoc 3.1.6.2
  (2023-08-22)\n\n  * Org reader: allow example lines to end immediately after the
  colon\n    (Brian Leung).\n\n  * Docx reader:\n\n    + Omit \"Table NN\" from caption
  (#9002).\n    + Avoid spurious block quotes in list items (#8836).\n\n  * JATS reader:
  Fix display of block elements (#8889, Julia Diaz).\n    A number of block elements,
  like disp-quote, list, and disp-formula, were\n    always treated as inlines if
  appearing inside paragraphs, even if their\n    usage granted a separate block.\n\n
  \ * HTML reader: avoid duplicate id on header and div (#8991).\n\n  * Typst writer:\n\n
  \   + Use `~` for nonbreaking space, and escape literal `~` (#9010).\n    + Put
  the label in right place for Div, use `#block` (#8991).\n      Previously we were
  putting the label at the beginning of\n      the Div's contents, but according to
  the documentation such a\n      label gets attached to the *preceding* element.
  \ We now use an\n      explicit `#block` and add the label at the end.\n\n  * LaTeX
  writer:\n\n    + Improve escaping of URIs in href, url (#8992).\n    + Improve internal
  links and targets (#8744). We no longer\n      wrap section headings in a `\\hypertarget`.
  This is unnecessary\n      (hyperref creates an anchor based on the label) and it
  interferes with\n      tagging. In addition, we now use `\\hyperref` rather than
  `\\hyperlink`\n      for internal links. Currently `\\hypertarget` is still being
  used for\n      link anchors not on headings. Thanks to @u-fischer.\n\n  * HTML
  format templates (style.html): Fix typo in clause for svg\n    (Jackson Schuster).\n\n
  \ * Use lastest texmath, typst-symbols, typst. Targets typst 0.7.\n\n\n## pandoc
  3.1.6.1 (2023-08-11)\n\n * HTML reader: properly calculate RowHeadColumns (#8984).
  This fixes a\n   bug in the calculation of the number of header columns in table
  row.\n   It also changes the algorithm for determining the table body's\n   RowHeadColumns
  based on the numbers of head columns in each row.\n   Previously we used the max,
  and #8634 switched to the min, which\n   led to bad results. Now we only set RowHeadColumns
  to a non-zero value\n   if *all* rows have the same number of head columns.\n\n
  \ * OpenDocument writer:\n\n    + Implement syntax highlighting for inline and block
  code (#6710).\n    + Support highlighted text in ODT/OpenDocument writers for Span\n
  \     with class `mark` (#8960). The color can be adjusted by\n      modifying the
  Highlighted style.\n\n  * Typst writer: escape `//` so it doesn't get interpreted
  as a comment\n    (#8966).\n\n  * ChunkedHTML writer: Fix regression including MathJax
  script (#8967).\n    The fix for #8620 caused the script to be included when the
  table of\n    contents but not the body text of a page contains math.  But it broke
  the\n    case where the table of contents doesn't contain math but the page does.\n
  \   This patch fixes the issue.\n\n  * Text.Pandoc.SelfContained:\n\n    + Retain
  attributes in SVG tag when referring to another\n      SVG's content using `<use>`
  (#8969).\n    + Allow units in width and height for SVG. Units are optional but
  allowed.\n    + Don't coerce calculated SVG dimensions to Int.\n    + fix calculation
  of SVG width and height. We were computing width and\n      height from viewBox
  incorrectly (#8969).\n    + Add clause for SVG to default CSS for HTML (#8969).\n
  \   + Ensure that width and height attributes don't get specified\n      twice is
  both the img tag and the svg include them (#8965).\n    + Omit unnecessary attributes
  xmlns, xmlns:xlink, and version on\n      SVG element (#8965).\n    + Use 20 character
  rather than 40 character hashes for generated IDs\n      (#8965).\n\n  * Use pandoc-types
  1.23.1. This fixes a regression with toJSONFilter (#8976),\n    which in 1.23.0.1
  no longer worked on pure values of type `a -> [a]`.\n\n  * Use ghc 9.6 for release
  builds (#8947).\n\n  * Fix some links in FAQs (Diogo Almiro).\n\n\n## pandoc 3.1.6
  (2023-07-20)\n\n  * Fix CVE-2023-38745, a variant of the vulnerability in CVE-2023-35936.\n
  \   Guilhem Moulin noticed that the fix to CVE-2023-35936 was incomplete.\n    An
  attacker could get around it by double-encoding the malicious\n    extension to
  create or override arbitrary files.\n\n  * `--embed-resources`: Use inline SVG instead
  of data uris for SVG\n    images in HTML5 (#8948). Note that SelfContained does
  not have\n    access to the writer name, so we check for HTML5 by determining\n
  \   whether the document starts with `<DOCTYPE! html>`. This means\n    that inline
  SVG won't be used when generating document fragments.\n\n  * Fix regression on short
  boolean arguments (#8956).\n    In 3.1.5 boolean arguments were allowed an optional
  argument\n    (`true|false`).  This created a regression for uses of fused\n    short
  arguments, e.g. `-somyfile.html`, which was equivalent\n    to `-s -omyfile.html`,
  but now raised an error because\n    pandoc attempted to parse `o` as a boolean
  `true` or `false`.\n    This change allows the fused short arguments to be used
  again.\n    Note that `-strue` will be interpreted as `-s` with an\n    argument
  `true`, not as `-s -t -rue`.  It is best to\n    use long option names with the
  optional boolean values,\n    to avoid confusion.\n\n  * Make `--epub-title-page`'s
  argument optional. It takes a boolean\n    argument, and now that all of our boolean
  flags take such an\n    argument, we can make this one optional for consistency.\n\n
  \ * Improve errors for illegal output formats. Previously if you did\n    `pandoc
  -s -t bbb`, it would give you an error about the missing\n    `bbb` template instead
  of saying that `bbb` is not a\n    supported output format.\n\n  * Improve errors
  for incorrect command-line option values (#8879).\n    Always give the name of the
  relevant argument.\n\n  * Fix typo on error message for incorrect `--preserve-tabs`
  argument.\n    Thanks @fsoedjede\n\n  * Docx reader: use SVG version of image if
  present (#7244).\n    Previously the backup PNG was exported even if an SVG was\n
  \   present, but the SVG should be preferred.\n\n  * Typst reader: fix regression
  in recognition of display math (#8949).\n    The last release caused all math to
  be parsed as inline math.\n\n  * JATS writer: don't use `<code>` for inline code
  (#8889).\n    It is intended for block-level code.\n\n  * HTML writer: don't make
  line blocks sensitive to `--wrap` (#8952).\n\n  * RST writer: fix figure handling
  (#8930, #8871).\n    This fixes a number of regressions from pandoc 2.x.\n    Properly
  handle caption, alt attribute in figures.\n    No longer treat a paragraph with
  a single image in it as a figure\n    (we have a dedicated Figure element now).\n\n
  \ * Docx writer: Copy \"mirror margins\" property from reference.docx (#8946).\n\n
  \ * Text.Pandoc.UTF8: Deprecate `decodeArg` which is now a no-op.\n    This was
  needed for old base versions which we no longer support.\n\n  * Use released skylighting,
  typst.\n\n  * Allow latest commonmark-extensions. This allows entities in wikilinks.\n\n
  \ * Switch back to using ghc 9.2 for linux and Windows binary releases\n    (#8947,
  #8955). With ghc 9.4+, we were getting AVX instructions\n    in the amd64 binary,
  which aren't supported on older hardware.\n    For maximum compatibility we switch
  back to ghc 9.2, which doesn't\n    cause the problem. (As documented, ghc should
  not be emitting these\n    instructions, so we aren't clear on the diagnosis, but
  the cure\n    has been tested.)\n\n  * Change Windows release build to use cabal
  instead of stack.\n\n## pandoc 3.1.5 (2023-07-07)\n\n  * Allow all boolean flags
  to take an optional `true` or `false` value\n    (#8788, Sam S. Almahri). The default
  is true if no value is specified,\n    so this is fully backwards-compatible.\n\n
  \ * Support `--id-prefix` for markdown output (#8878)\n\n  * Markdown reader:\n\n
  \   + Add strictness annotations to fix a memory leak (#8762).\n\n  * Typst reader:\n\n
  \   + Use typst-hs 0.3.0.0, which is more robust, fixes many bugs, and\n      targets
  typst 0.6.\n    + Package loading is now supported, as long as the package has been\n
  \     cached or is local.\n    + Rewrite Typst reader in a way that makes it easier
  to extend.\n    + Filter out CR in raw.\n    + Handle block content for link element.\n
  \   + Handle block-level content in text element.\n    + Handle style, align, place
  in inline contexts too.\n    + Improve info message for skipped elements.\n\n  *
  Add typst reader tests (#8942).\n\n  * MediaWiki reader:\n\n    + Revise treatment
  of \"link trail.\" Previously we only included ASCII\n      letters. That is correct
  for English but not for, e.g., Spanish (see\n      comment in #8525). A safer approach
  is to include all letters except\n      those in the CJK unified ideograph ranges.\n\n
  \ * AsciiDoc writer:\n\n    + Make modern AsciiDoc the target for `asciidoc` (#8936).\n
  \     The AsciiDoc community now regards the dialect parsed by `asciidoctor`\n      as
  the official AsciiDoc syntax, so it should be the target of our\n      `asciidoc`
  format. The `asciidoc` output format now behaves like\n      `asciidoctor` used
  to. `asciidoctor` is a deprecated synonym. For\n      the old `asciidoc` behavior
  (targeting the Python script),\n      use `asciidoc_legacy`. The templates have
  been consolidated. Instead of\n      separate `default.asciidoctor` and `default.asciidoc`
  templates, there\n      is just `default.asciidoc`.\n    + Text.Pandoc.Writers.AsciiDoc
  API changes:\n      - `writeAsciiDoc` now behaves like `writeAsciiDoctor` used to.\n
  \     - `writeAsciiDoctor` is now a deprecated synonym for `writeAsciiDoc`.\n      -
  New exported function `writeAsciiDocLegacy` behaves like\n        `writeAsciDoc`
  used to.\n    + Update line-through for asciidoc writer to custom inline style (#8933,\n
  \     Kevin Broch).\n\n  * Typst writer:\n\n    + Support `unlisted` class in headings
  (#8941).\n    + Consolidate bibliography files into one `#bibliography` command
  (#8937).\n    + Improve handling of autolinks (#8931).\n\n  * Docx writer:\n\n    +
  Make relative widths work in tables. This didn't work before because we\n      were
  missing an attribute that tells Word to used fixed widths rather\n      than computing
  optimal ones.\n\n  * DokuWiki writer: fix lists with Div elements (#8920).\n    The
  DokuWiki writer doesn't render Divs specially, so their presence in\n    a list
  (e.g. because of custom-styles) need not prevent a regular\n    DokuWiki list from
  being used. (Falling back to raw HTML in this case is\n    pointless because no
  new information is given.)\n\n  * LaTeX writer:\n\n    + Fix babel name for `fa`
  (should be `persian`).\n    + Prevent babel language from being imported twice (#8925).\n\n
  \ * Text.Pandoc.Class:\n\n    + Add `toTextM` [API change]. This is like `Text.Pandoc.UTF8.toText`,\n
  \     except:\n\n      - it takes a file path as first argument, in addition to\n
  \       bytestring contents\n      - it raises an informative error with source
  position if\n        the contents are not UTF8-encoded\n\n    This replaces `utf8ToText`
  whenever we have the filename and are\n    in a PandocMonad instance. This will
  lead to more informative error\n    messages for UTF8-encoding, indicating the file
  path and byte offset\n    where the error occurs (#8884).\n\n  * Remove invalid
  term \"Subject\" from Turkish translations (#8921).\n\n  * stack.yaml: add pkg-config
  to nix packages (#8927, pacien).\n\n  * Allow aeson 2.2.\n\n  * MANUAL: Add clarification
  on --section-divs. Closes #8882.\n\n\n## pandoc 3.1.4 (2023-06-24)\n\n  * Fix a
  security vulnerability in MediaBag and T.P.Class.IO.writeMedia.\n    This vulnerability,
  discovered by Entroy C, allows users to write\n    arbitrary files to any location
  by feeding pandoc a specially crafted\n    URL in an image element.  The vulnerability
  is serious for anyone\n    using pandoc to process untrusted input.  The vulnerability
  does\n    not affect pandoc when run with the `--sandbox` flag. [CVE-2023-35936]\n\n
  \ * Allow `epub-title-page` to be used in defaults files (#8908).\n\n  * Issue `Extracting`
  info message (in `--verbose` mode) when using\n    `--extract-media` or extracting
  media temporarily in PDF production.\n\n  * HTML reader: Update TableBody RowHeadColumns
  caculation (#8634,\n    Ruqi). This change sets RowHeadColumns to the minimum value
  of each row,\n    which gives better results in cases where rows have different
  numbers\n    of leading th tags.\n\n  * Dokuwiki reader: retain image query parameters
  as attributes (#8887, echo0).\n\n  * Textile reader: Add support for link references
  (#8706, Stephen Altamirano).\n    Textile supports what it calls \"link alias\",
  which are analogous to\n    Markdown's reference-style links.\n\n  * LaTeX reader:
  support alt text on images (#8743, Albert Krewinkel).\n\n  * Commonmark reader:
  Make `implicit_figures` work again.\n    Support for this (introduced in #6350)
  disappeared when we made an\n    architectural change.\n\n  * JATS reader:\n\n    +
  Add footer and multiple body parsing to table reader (#8765, Noah Malmed).\n    +
  Parse references title from ref-list (#8365).\n\n  * JATS writer:\n\n     + Make
  `--number-sections` work.\n     + Include title in ref-list (#8364). Previously
  the reference title ended\n       up in a separate section at the back of the body
  instead of in the ref-list\n       in the back matter.\n\n  * Mediawiki writer:
  allow highlighting to work for F# language\n    (Adelar da Silva Queir√≥z).\n\n  *
  LaTeX writer: Fix escaping of `&` in `\\href` and `\\url` (#8903).\n\n  * Docx writer:\n\n
  \   + Fix localization of \"Abstract\" title (#8702).\n    + Allow `abstract-title`
  to be specified in docx metadata (#8794).\n\n  * ChunkedHTML writer: Make math work
  in top-level page (#8915).\n\n  * Text.Pandoc.Logging: add new log message type
  `ScriptingWarning`\n    [API change] (Albert Krewinkel).\n\n  * Lua: report warnings
  from Lua scripts (Albert Krewinkel).\n    Lua's warning system is plugged into pandoc's
  reporting architecture.\n    Warnings that are raised with the Lua `warn` function
  are now reported\n    together with other messages.\n\n  * Use crypton-connection
  instead of connection (#8896, Felix Yan).\n    Follows the change introduced in
  tls 1.7.0.\n\n  * Bump versions for skylighting-core, skylighting.\n\n  * Include
  lua/module/sample.svg in cabal extra-source-files (Felix Yan).\n\n  * Add Nynorsk
  (New Norwegian) translations (Per Christian Gaustad).\n\n  * Add tests for `fillMediaBag`/`extractMedia`.\n\n
  \ * INSTALL.md:\n\n    + Mention alternatives to LaTeX to generate PDF (Norwid Behrnd).\n
  \   + Update Linux install links (harabat).\n\n  * pandoc-extras.md: add to \"Academic
  publishing workflows\" (#8696,\n    Vladimir Alexiev).\n\n## pandoc 3.1.3 (2023-06-07)\n\n
  \ * New output format: `typst`.\n\n  * New module: Text.Pandoc.Readers.Typst [API
  change].\n\n  * DocBook reader:\n\n    + Support more emphasis roles (Albert Krewinkel).\n
  \     The role \"bf\" is taken to indicate \"bold face\", i.e.,\n      \"strongly
  emphasized\" text, while \"underline\" leads to\n      underlined text.\n\n  * JATS
  reader:\n\n    + Improve title and label parsing in the JATS reader (#8718,\n      Noah
  Malmed.)\n    + Add rowspan, colspan and alignment to cells in jats table\n      reader
  (#8408, Noah Malmed)\n\n  * Org reader (Albert Krewinkel):\n\n    + Require abstract
  environment to use lowercase.\n    + Treat `#+NAME` as synonym for `#+LABEL` (#8578).\n\n
  \ * ODT reader:\n\n    + Allow lists in table cells (#8892).\n    + Allow frames
  inside spans (#8886).\n\n  * RST reader:\n\n    + Fix sorting on anonymous keys
  (#8877). This fixes a link\n      resolution bug bug affecting RST documents with
  anonymous links.\n\n  * HTML reader:\n\n    + Fix iframe with data URI of an image
  (#8856).\n      In this case we don't want to try to parse the data at the URL.\n
  \     Instead, create an image inside a div.\n\n  * RTF reader:\n\n    + Fix bug
  in table parsing (#8767). In certain cases, text before a\n      table was being
  incorporated into the table itself.\n\n  * Docx reader:\n\n    + Introduce support
  for Intense Quote (Stephan Meijer).\n\n  * Markdown reader:\n\n    + Disallow escaping
  of `~` and `\"` in `markdown_strict` (#8777,\n      Albert Krewinkel). This matches
  the behavior of the legacy\n      `Markdown.pl` as well as what is described in
  the manual.\n\n  * LaTeX reader: ignore args to column type in `\\multicolumn` (#8789).\n\n
  \ * HTML writer:\n\n    + Use first paragraph in task item as checkbox label (#8729,
  Albert\n      Krewinkel).\n\n  * Ms writer:\n\n    + Coerce titles to inlines (#8835).
  Block-level formatting is not\n      allowed inside `.TL`.\n\n  * LaTeX writer:\n\n
  \   + Fix width for multicolumn simple table (#8831).\n\n  * Jira writer:\n\n    +
  Use first code block class as highlighting language (#8814, Albert\n      Krewinkel).
  The writer no longer searches the list of\n      classes for a known programming
  language but always uses\n      the first class in that list as the language identifier.\n\n
  \ * OpenDocument writer:\n\n    + Handle row header column cells as header cells
  (#8764, Michael Stahl).\n    + Fix invalid `text:p` inside `text:p` from meta (#8256).\n\n
  \ * ODT writer:\n\n    + Don't add settings.xml (Michael Stahl). This will cause
  defaults\n      to be used, which is what we want.\n    + Don't add unnecessary
  Configurations2 directory (Michael Stahl).\n    + Don't add thumbnail (Michael Stahl).\n
  \   + Put `manifest.version` on directory file-entry (Michael Stahl).\n      See
  ODF 1.3 part 2, 4.16.14.1.\n    + Stop validator complaints by producing ODF 1.3
  (Michael Stahl).\n\n  * MediaWiki writer:\n\n    + Remove links from inside links
  in mediawiki writer (#8739,\n      Wout Gevaert).\n\n  * Typst writer:\n\n     +
  Omit bibliography if `citations` not enabled (#8763).\n      With this change, the
  typst writer will omit the `#bibliography`\n      command when `citations` is not
  enabled.  (If you want to use\n      pandoc's own `--citeproc`, you should combine
  it with\n      `-t typst-citations` to disable native typst citations.\n    + Use
  `<..>` for labels, create internal links.\n    + Use `#footnote` for notes (#8893).\n
  \   + Fix alignment issue in lists.  It's an aesthetic issue\n      only; the first
  line had an extra space indent after the\n      list marker.\n\n  * Commonmark writer:\n\n
  \   + Use shortcut reference links: commonmark supports these.\n\n  * EPUB template:
  add `lang` attribute to `<html>` (Gabriel Lewertoski).\n\n  * Template styles.html:
  fix task-list styling in reveal.js\n    (#8731, Albert Krewinkel).\n\n  * LaTeX
  template: Fix `\\babelfont` (#8728).\n\n  * Text.Pandoc.Parsing:\n\n    + Remove
  unnecessary 'spaces' in `parseFromString`.\n\n  * Text.Pandoc.ImageSize: Drop BOM
  at start of SVG if present.\n    Otherwise our code can fail to determine image
  size.\n\n  * Lua subsystem:\n\n    + Fix value of PANDOC_SCRIPT_FILE for custom
  readers & writers\n      (#8781, Albert Krewinkel). The value did not hold the actual\n
  \     file path for scripts in the *custom* folder of the datadir.\n\n  * Fix YAML
  in translation files for `cs` and `pl` (#8787).\n\n  * Fix pdf output via typst
  (#8754).  One must now use `typst\n    compile` rather than `typst`.\n\n  * MANUAL.txt:\n\n
  \   + Added note that the user will need to create the user data\n      dir (#8727).\n
  \   + Add `wikilinks` to non-default extensions (Ilona).\n    + Update link to custom
  djot writer (Albert Krewinkel).\n    + Better link to citation syntax.\n    + Fix
  typo (sdhoward).\n    + Note that `#` fancy list markers don't work with commonmark
  (#8772,\n      William Lupton).\n    + Add commonmark `fenced_div` note (#8773,
  William Lupton).\n    + Move highlighting documentation, with minor adjustments\n
  \     (William Lupton).\n    + Fix inaccurate statement about spaces and tabs in
  template\n      syntax\n      (Frank Seifferth).\n\n  * Update documentation for
  org-mode (Christian Christiansen, #8716).\n\n  * doc/lua-filter.md:\n\n    + Fix
  typos (#8734, perro tuerto).\n    + Fix anchor (Toni Dietze).\n    + Use full field
  name in example (#8857, Matt Dodson).\n    + Fix copy-paste error (#8798, thron7).\n\n
  \ * CONTRIBUTING.md: update info on ghc versions.\n\n  * INSTALL.md:\n\n    + Fix
  cabal install instructions (Albert Krewinkel).\n    + Use more relevant link to
  NetBSD/pkgsrc entry (Charlotte Koch).\n    + Fix Windows install instructions for
  winget (#8799).\n\n  * Tests: Rename test/docx/block_quotes_parse_indent.native
  for\n    consistency (Stephan Meijer).\n\n  * Add `tls` constraint on cabal.project.
  This is needed to\n    avoid problems caused by the transition to `crypton`.\n\n
  \ * Require texmath 0.12.8.\n\n\n## pandoc 3.1.2 (2023-03-26)\n\n  * Add a Lua REPL
  (Albert Krewinkel). This can be started\n    with `pandoc lua -i`.  It is also possible
  to instruct a filter to\n    open the REPL at a certain point, for debugging (see
  `pandoc.cli.repl`).\n\n  * Support `typst` as a `--pdf-engine`.\n\n  * Add typst
  writer (#8713).  New module Text.Pandoc.Writers.Typst,\n    exporting `writeTypst`
  [API change].\n\n  * Org reader:\n\n    + Allow zero width space as an escape character
  (#8716,\n      Christian Christiansen). Allow the character U+200B to be used as\n
  \     an escape character as described in the Org-mode documentation\n      (<https://orgmode.org/manual/Escape-Character.html>).\n\n
  \ * DocBook reader:\n\n    + Handle \"book\" for xref references (#8712, Andres
  Freund)\n      This also adds a test xref to book and part.\n    + Handle `<part>`
  (#8712).\n\n  * HTML reader:\n\n    + Fix behavior with `-native_spans-raw_html`
  (#8711). Previously with\n      this configuration, `<span>`s were not treated as
  inline elements at all.\n\n  * HTML writer:\n\n    + Avoid duplicate classes (#8705).\n
  \   + Use img element instead of embed for `.svg.gz` and `.png.gz` etc. (#8699).\n
  \   + HTML writer footnotes changes (#8695): when `--reference-location=section`\n
  \     or `=block`, use an `aside` element for the notes rather than a `section`.\n
  \     When `--reference-location=section`, include the `aside` element inside\n
  \     the section element, rather than outside. (In slide shows, this option\n      causes
  footnotes on a slide to be displayed at the bottom of the slide.)\n\n  * EPUB writer:\n\n
  \   + Use different structure for epub footnotes (#8676, see #8672, #5583).\n      Many
  EPUB readers are thrown off by pandoc's current footnote\n      output.  Both the
  ol and the fact that the footnote backlink is\n      at the end of the note seem
  to pose problems.\n      With this commit, we now create a list of aside (or div)
  elements,\n      instead of an ordered list. Each element begins with a note number\n
  \     that is linked back to the note reference.  (So, the backlink occurs\n      at
  the beginning rather than the end.) Thanks to @Porges and @lewer.\n\n  * Docx writer:\n\n
  \   + Include abstract title (#8702). Uses localized term for abstract.\n\n  * Markdown
  writer:\n\n    + Use implicit figures if there's a caption but no alt (#8689,\n
  \     Albert Krewinkel).\n\n  * Jira reader (Albert Krewinkel):\n\n    + Add panel
  title as nested div (#8681).\n    + Require jira-wiki-markup 1.5.1 (#8680). This
  fixes a bug in the parser\n      that caused text between two exclamation marks
  to be parsed as an\n      image. The first `!` of image markup must now be followed
  by a\n      non-space character; otherwise, the enclosed text is parsed as\n      normal
  content.\n    \n  * Ms writer:\n\n    + Fix handling of Figure (#8660).\n\n  * ICML
  writer:\n\n    + Fix images with data (#8675). The Contents element\n      should
  be inside Properties.\n\n  * LaTeX writer:\n\n    + Add Chinese to Babel languages.\n
  \   + Fix background image in Beamer when there are figure environments (#8671,\n
  \     Mart√≠n Pozo).\n\n  * LaTeX template:\n\n    + Add `babelfonts` variable to
  default LaTeX template.\n      This allows specifying certain fonts to be used with\n
  \     certain babel languages. Thanks to Frederik Elwert.\n    + Fix highlight/underline
  with lualatex (#8707). We need the lua-ul package\n      instead of soul, which
  doesn't work with lualatex.\n\n  * Lua (Albert Krewinkel):\n\n    + Add `pandoc.cli.repl`
  function\n    + Fix `json.encode` for nested AST elements. Ensures that objects
  with\n      nested AST elements can be encoded as JSON.\n    + Auto-generate docs
  for pandoc modules.\n    + Load text module as `pandoc.text`. This only affects
  the name in the\n      Lua-internal documentation. It is still possible to load
  the modules\n      via `require 'text'`, although this is deprecated.\n    + Move
  docs from module `text` to `pandoc.text`\n      The latter is easier to use and
  more consistent with the other modules.\n    + Keep the Lua stack clean A metatable
  used during initialization was\n      not properly removed from the stack. Likewise,
  accessing the\n      CommonState from Lua previously led to the pollution of the\n
  \     Lua stack with a left-over value.\n    * Add function `pandoc.format.from_path`.\n
  \   + Allow to get the JSON encoding of log messages.\n\n  * Text.Pandoc.Format:
  Add new function `formatFromFilePaths` [API change]\n    (#8710, Albert Krewinkel).\n\n
  \ * The old Text.Pandoc.App.FormatHeuristics module has been removed.\n\n  * In
  `--version`, use Windows `%APPDATA%` variable to describe\n    user data dir (#8686,
  Pablo Rodr√≠guez).\n\n  * Text.Pandoc.App.CommandLineOptions: don't lowercase arg
  to `--from`/`--read`\n    (Albert Krewinkel). This prevented users to use custom
  writers with\n    uppercase characters in their filenames. Format-normalization,\n
  \   including lower-casing of format identifiers, happens during\n    format parsing.\n\n
  \ * Documentation:\n\n    + Add `doc/nix.md`.\n    + Add `doc/extras.md`. This was
  formally in the website repo.\n    + `doc/lua-filters.md`: improve docs for `pandoc.zip`.\n\n
  \ * Factor out `make_macos_release.sh` from the release candidate workflow.\n    Use
  cabal instead of stack to build the macos binary.\n\n  * Modify linux/make_artifacts.sh
  so it will work on cirrus.\n\n  * Switch to hslua-2.3\n\n  * Depend on latest releases
  of texmath, doclayout.\n\n## pandoc 3.1.1 (2023-03-05)\n\n  * EPUB reader: Give
  additional information in error if the epub\n    zip container can't be unpacked.\n\n
  \ * TSV reader: don't gobble tabs as whitespace (#8661).\n\n  * Org reader: accept
  empty tables (#8659).\n\n  * LaTeX reader: fix multiplication syntax for tabular
  (#8658).\n    We recognized `*{6}{...}` but not `*6{...}` or `*6c`.\n\n  * Docx
  reader: parse image alt texts in LibreOffice generated files.\n    LibreOffice tags
  images slightly differently than Word; this change lets\n    the parses take that
  difference into account when looking for an image\n    description (alt text).\n\n
  \ * DocBook reader:\n\n    + Fix `<xref>` references to tables in DocBook files\n
  \     (#8626, Pavol Otto).\n    + Parse `figure` as a Figure element in the AST
  (#8668).\n\n  * JATS reader: avoid generating duplicate figure captions (#8669).\n\n
  \ * RST reader: align with spec in syntax for role names (#8653).\n    In particular,
  we now allow colons in row names.\n\n  * Add note on converting from .doc format
  to FAQs (#8654).\n\n  * Trap error in getAppUserDataDirectory (#8648).\n    This
  can raise an error if pandoc is run in a non-user environment.\n\n  * LaTeX writer:
  do not use longtable foot with Beamer (#8638, Albert\n    Krewinkel). The table
  foot is made part of the table body, as\n    otherwise it won't show up in the output.
  The root cause for\n    this is that longtable cannot detect page breaks in Beamer.\n
  \   \n  * LaTeX template: Add CJKsansfont and CJKmonofont for XeLaTeX\n    (#8656,
  Yudong Jin). `CJKsansfont` and `CJKmonofont` will be\n    set for xelatex only if
  `CJKmainfont` is also provided.\n\n  * URL style in ConTeXt (#8612, Thomas Hodgson).
  Previously, a\n    URL like this would be in monospace text:\n    `\\useURL[url1][https://example.com]`.
  \ Now, it will match the\n    main text unless the `linkstyle` variable is set,
  which\n    controls the styling of all links.  Closes #8602.\n\n  * Asciidoc writer:
  Properly escape `|` in table cells (#8665).\n\n  * asciidoc{,tor} template: fix
  revision date when author is unset\n    (#8637, arcnmx). Revision line syntax is
  only valid in\n    combination with an author line, so the date attribute must be\n
  \   set explicitly when the author is missing\n\n  * HTML writer: allow \"track\"
  element to be treated as block-level HTML\n    (#8629).\n\n  * Include needed polyfill
  when MathJaX is used (#8625).\n\n  * JATS writer: include alt-text in `<graphic>`,\n
  \   `<inline-graphic>` elements (#8631, Albert Krewinkel).\n\n  * Chunked HTML writer:
  \ Retain metadata in processing sections\n    for chunked HTML (#8620).  Previously
  we suppressed metadata\n    in all but the top page, in order to prevent the title
  block\n    from being printed on every page. This prevented use of\n    custom variables
  set by metadata fields.  This commit moves\n    to a better solution: a conditional
  in the default template\n    restricts the title block to the top page.\n\n  * Lua
  API:\n\n    + Add new function `pandoc.system.cputime` (Albert\n      Krewinkel).
  \ The function returns the CPU time consumed by\n      pandoc and can be used to
  benchmark Lua computations.\n    + Add module `pandoc.json` to handle JSON encoding
  (#8605,\n      Albert Krewinkel).\n\n  * Use pandoc-lua-marshal 0.2.1 (Albert Krewinkel).\n
  \   All major AST elements now have `__tojson` metamethods that return the\n    JSON
  representation of an element. This allows to JSON-encode these\n    elements with
  libraries that respect the `__tojson` metamethod,\n    including dkjson.\n\n  *
  Use latest zip-archive.  This allows pandoc to open certain\n    epubs that it could
  not open before.\n\n  * Use commonmark-extensions 0.2.3.4. This fixes some bugs
  involving\n    definition lists and inline formatting.\n\n  * Use latest skylighting-format-context\n\n
  \ * MANUAL.txt:\n\n    + Document chunk-template in defaults file.\n    + Remove
  obsolete \"raw content in a style\" section.\n    + Revise documentation for `--mathml`
  to reflect support in all major\n      browsers (#8667).\n\n  * docs/custom-readers.md:
  Update JSON parsing example. The example now\n    uses the built-in `pandoc.json`
  library to parse the API output.\n\n  * doc/press.md: Add article on CiTO in J Cheminform
  by @egonw.\n\n  * doc/lua-filters.md: fix typo in `run_json_filter` (Morgan Willcock).\n\n\n##
  pandoc 3.1 (2023-02-09)\n\n  * Fix regression with `--print-highlight-style` option
  (#8586).\n\n  * Add new `--chunk-template` option (#8581), allowing more control\n
  \   over the filenames in chunked HTML output.\n\n  * Text.Pandoc.App: Add `optChunkTemplate`
  constructor to Opt [API change].\n\n  * Text.Pandoc.Options: add `writerChunkTemplate`
  constructor to\n    `WriterOptions` [API change].\n\n  * Text.Pandoc.Chunks: add
  Data, Typeable, Generic, ToJSON, FromJSON\n    instances for `PathTemplate` [API
  change].\n\n  * Text.Pandoc.Citeproc: Fix bug in `metaValueToReference` (#8611).\n
  \   This bug caused us to get some repeated content when converting\n    MetaBlock
  to Inlines.\n\n  * Textile reader:\n\n    + Support footnote backlinks (#8585, Stephen
  Altamirano).\n    + Don't allow brackets in URLs (#8582).\n\n  * ODT reader: fix
  blockquote indent detection (#3437, Daniel Kessler).\n\n  * LaTeX writer: include
  short figure/table caption if one is given\n    (Albert Krewinkel). Short captions
  are used by LaTeX when generating\n    the list of figures or list of tables. Adding
  a short caption will\n    now overwrite the full caption in these lists.\n\n  *
  Powerpoint writer: fix handling of simple figures (#8565,\n    Albert Krewinkel).
  This ensures that simple figures are displayed\n    in the same way as before the
  introduction of a dedicated `Figure`\n    constructor in the AST.\n\n  * Improve
  handling of `%` in bib(la)tex parsing (#8597, #8595).\n\n  * Use released skylighting
  0.13.2.1\n\n  * INSTALL.md: direct people to cabal install pandoc-cli.\n\n  * doc/lua-filters.md:
  document 'Figure' type and constructor (Albert\n    Krewinkel). Fix typos (Martin
  Joerg).\n\n  * Fix link in manual (#8583, Salim B).\n\n## pandoc 3.0.1 (2023-01-25)\n\n
  \ * Fix use of extensions with custom readers (#8571).\n\n  * Text.Pandoc.Writers.Shared:
  export `setupTranslations` [API change].\n    Use this in HTML and OpenDocument
  writers, to ensure that\n    translations are set up properly even when we don't
  go through\n    `convertWithOpts`.\n\n  * LaTeX reader: fix regression in macro
  resolution for environments (#8573).\n\n  * Chunked HTML writer: Fix handling of
  images with absolute URLs (#8567).\n\n  * HTML writer:\n\n    + Don't omit newlines
  in task lists.\n    + Don't disable checkboxes in task lists (#8562).\n\n  * Ensure
  that automatically set variables `pandoc-version`, `outputfile`,\n    `title-prefix`,
  `epub-cover-image`, `curdir`, `dzslides-core` can be\n    overridden by `--variable`
  on the command line. Previously they would\n    create lists in the template Context,
  which is not desirable.\n\n  * Fix man page copying in `linux/make_artifacts.sh`
  (#8566).\n    Previously we were copying the pandoc-server.1 pandoc page to pandoc-lua.1.\n\n
  \ * pandoc.cabal: remove pandoc.cabal, stack.cabal from extra-source-files\n    (#8560).
  The problem is that if these are in extra-source-files, then they\n    get put in
  the tarball, and then anyone trying to build the source\n    from an unpacked tarball
  will run into the problem that cabal.project\n    and stack.yaml refer to pandoc-server,
  pandoc-lua-engine, and\n    pandoc-cli, which aren't in the tarball.\n\n  * Require
  texmath 0.12.6 for better MathML output.\n\n  * Fix typo in Lua filter documentation
  (Carlos Scheidegger).\n\n  * Fix formatting of link in pandoc-server.md (James Scott-Brown).\n\n
  \ * Minor changelog fixups.\n\n## pandoc 3.0 (2023-01-18)\n\n  * Split pandoc-server,
  pandoc-cli, and pandoc-lua-engine\n    into separate packages (#8309). Note that
  installing\n    the `pandoc` package from Hackage will no longer give you the\n
  \   `pandoc` executable; for that you need to install `pandoc-cli`.\n\n  * Pandoc
  now behaves like a Lua interpreter when called as\n    `pandoc-lua` or when `pandoc
  lua` is used (#8311, Albert Krewinkel).\n    The Lua API that is available in filters
  is automatically\n    available to the interpreter. (See the `pandoc-lua` man page.)\n\n
  \ * Pandoc behaves like a server when called as `pandoc-server`\n    or when `pandoc
  server` is used. (See the `pandoc-server` man page.)\n\n  * A new command-line option
  `--list-tables`, causes tables to be\n    formatted as list tables in RST (#4564,
  with Francesco Occhipinti).\n\n  * New command line option: `--epub-title-page=true|false`
  allows\n    the EPUB title page to be omitted (#6097).\n\n  * `--reference-doc`
  can now accept a URL argument (#8535) and\n    load a remote reference doc.\n\n
  \ * `--version` output no longer contains version info for dependent\n    packages.
  Instead, it contains a \"Features\" line that indicates\n    whether the binary
  was compiled with support for acting as a server,\n    and for using Lua filters
  and Custom writers.\n\n  * A new option `--split-level` replaces `--epub-chapter-level`\n
  \   and affects both EPUB and chunked HTML output.  `--epub-chapter-level`\n    will
  still work but is deprecated.\n\n  * Multiple input files with `--file-scope`: fix
  case where the links\n    are URL-encoded, e.g. with `%20` (#8467).\n\n  * Produce
  error if `--csl` is used more than once (#8195, Prat).\n\n  * Remove deprecated
  `--atx-headers` option.\n\n  * Remove deprecated option `--strip-empty-paragraphs`.\n\n
  \ * In `--verbose` mode add message when running citeproc (as with\n    other filters).\n\n
  \ * Add new `mark` extension for highlighted text in Markdown,\n    using `==` delimiters
  (#7743).\n\n  * Add new extensions `wikilinks_title_after_pipe` and\n    `wikilinks_title_before_pipe`
  for `commonmark` and `markdown`.\n    (#2923, Albert Krewinkel). The former enables
  links of style\n    `[[Name of page|Title]]` and the latter `[[Title|Name of\n    page]]`.
  Titles are optional in both variants, so this works\n    for both: `[[https://example.org]]`,
  `[[Name of page]]`. The\n    writer is modified to render links with title `wikilink`
  as\n    a wikilink if a respective extension is enabled. Pandoc will\n    use `wikilinks_title_after_pipe`
  if both extensions are\n    enabled.\n\n  * Add prefixes to identifiers with `--file-scope`
  (#6384).\n    This change only affects the case where `--file-scope` is used\n    and
  more than one file is specified on the command line.\n    In this case, identifiers
  will be prefixed with a string\n    derived from the file path, to disambiguate
  them. For example,\n    an identifier `foo` in `contents/file1.txt` will become\n
  \   `contents__file1.txt__foo`.  Links will be adjusted accordingly:\n    if `file2.txt`
  links to `file1.txt#foo`, then the link will\n    be changed to point to `#file1.txt__foo`.
  \ Similarly, a link\n    to `file1.txt` will point to `#file1.txt`.  A Div with
  an\n    identifier derived from the file path will be added around\n    each file's
  content, so that links to files will still work.\n\n  * New output format: `chunkedhtml`.
  This creates a zip file\n    containing multiple HTML files, one for each section,\n
  \   linked with \"next,\" \"previous,\" \"up,\" and \"top\" links.\n    (If `-o`
  is used with an argument without an extension,\n    it is treated as a directory
  and the zip file is automatically\n    extracted there, unless it already exists.)
  The top page will\n    contain a table of contents if `--toc` is used.  A\n    `sitemap.json`
  file is also included. The option\n    `--split-level` determines the level at which
  sections are\n    to be split.\n\n  * Support complex figures (Albert Krewinkel,
  Aner Lucero).\n    There is now a dedicate Figure block constructor for\n    figures.
  \ The old hack of representing a figure as\n    `Para [Image attr [..alt..] (source,
  \"fig:title\")]`\n    has been dropped.  Here is a summary of figure support\n    in
  different formats:\n\n    + Markdown reader: paragraphs containing just an image
  are treated as\n      figures if the `implicit_figures` extension is enabled. The
  identifier\n      is used as the figure's identifier and the image description is
  also\n      used as figure caption; all other attributes are treated as belonging\n
  \     to the image.\n    + Markdown writer: figures are output as implicit figures
  if possible,\n      via HTML if the `raw_html` extension is enabled, and as Div
  elements\n      otherwise.\n    + HTML reader: `<figure>` elements are parsed as
  figures, with the\n      caption taken from the respective `<figcaption>` elements.\n
  \   + HTML writer: the alt text is no longer constructed from the caption,\n      as
  was the case with implicit figures. This reduces duplication, but\n      comes at
  the risk of images that are missing alt texts. Authors should\n      take care to
  provide alt texts for all images. Some readers, most\n      notably the Markdown
  reader with the `implicit_figures` extension,\n      add a caption that's identical
  to the image description. The writer\n      checks for this and adds an `aria-hidden`
  attribute to the\n      `<figcaption>` element in that case.\n    + JATS reader:
  The `<fig>` and `<caption>` elements are parsed into\n      figure elements, even
  if the contents is more complex.\n    + JATS writer: The `<fig>` and `<caption>`
  elements are used write\n      figures.\n    + LaTeX reader: support for figures
  with non-image contents and for\n      subfigures.\n    + LaTeX writer: complex
  figures, e.g. with non-image contents and\n      subfigures, are supported. The
  `subfigure` template variable is set if\n      the document contains subfigures,
  triggering the conditional loading\n      of the *subcaption* package. Contants
  of figures that contain tables\n      are become unwrapped, as longtable environments
  are not allowed within\n      figures.\n    + DokuWiki, Haddock, Jira, Man, MediaWiki,
  Ms, Muse, PPTX, RTF, TEI,\n      ZimWiki writers: Figures are rendered like Div
  elements.\n    + Asciidoc writer: The figure contents is unwrapped; each image in
  the\n      the figure becomes a separate figure.\n    + Classic custom writers:
  Figures are passed to the global function\n      `Figure(caption, contents, attr)`,
  where `caption` and `contents` are\n      strings and `attr` is a table of key-value
  pairs.\n    + ConTeXt writer: Figures are wrapped in a \"placefigure\" environment\n
  \     with `\\startplacefigure`/`\\endplacefigure`, adding the features\n      caption
  and listing title as properties. Subfigures are place in a\n      single row with
  the `\\startfloatcombination` environment.\n    + DocBook writer: Uses `mediaobject`
  elements, unless the figure contains\n      subfigures or tables, in which case
  the figure content is unwrapped.\n    - Docx writer: figures with multiple content
  blocks are rendered as\n      tables with style `FigureTable`; like before, single-image
  figures are\n      still output as paragraphs with style `Figure` or `Captioned
  Figure`,\n      depending on whether a caption is attached.\n    + DokuWiki writer:
  Caption and \"alt-text\" are no longer combined. The\n      alt text of a figure
  will now be lost in the conversion.\n    + FB2 writer: The figure caption is added
  as alt text to the images in\n      the figure; pre-existing alt texts are kept.\n
  \   + ICML writer: Only single-image figures are supported. The contents of\n      figures
  with additional elements gets unwrapped.\n    + OpenDocument writer: A separate
  paragraph is generated for each block\n      element in a figure, each with style
  `FigureWithCaption`. Behavior for\n      single-image figures therefore remains
  unchanged.\n    + Org writer: Only the first element in a figure is given a caption;\n
  \     additional block elements in the figure are appended without any\n      caption
  being added.\n    + RST writer: Single-image figures are supported as before; the
  contents\n      of more complex images become nested in a container of type `float`.\n
  \   + Texinfo writer: Figures are rendered as float with type `figure`.\n    + Textile
  writer: Figures are rendered with the help of HTML elements.\n    + XWiki: Figures
  are placed in a group.\n\n  * Changes in custom readers/writers:\n\n    + It is
  now possible to have a custom reader and a custom writer for\n      a format together
  in the same file.  The file may also define\n      a custom template for the writer.\n
  \   + Pandoc now checks the folder `custom` in the user's data directory\n      for
  a matching script if it can't find one in the local directory.\n      Previously,
  the `readers` and `writers` data directories were\n      searched for custom readers
  and writers, respectively. Scripts in\n      those directories must be moved to
  the `custom` folder.\n    + Custom readers used to implement a fallback behavior
  that allowed to\n      consume just a string value as input to the `Reader` function.
  This\n      has been removed, the first argument is now always a list of\n      sources.
  Use `tostring` on that argument to get a string.\n\n  * New module Text.Pandoc.Writers.ChunkedHTML,\n
  \   exporting `writeChunkedHtml` [API change].\n\n  * We now set the `pandoc-version`
  variable centrally rather\n    than in the writers.  One effect is the man writer
  now emits\n    a comment with the pandoc version.\n\n  * pandoc-server:\n\n    +
  Add simple CORS support to pandoc-server (#8427).\n    + Print message to stderr
  when starting the server.\n\n  * Docx reader:\n\n    + Mark unnumbered headings
  with class `unnumbered` (#8148,\n      Albert Krewinkel). This change ensures good
  conversion\n      results when converting with `--number-sections`.\n    + Support
  parsing of highlighted text.\n    + Fix handling of `oMathPara` in `w:p` with other
  content (#8483).\n\n  * ODT reader:\n\n    + Fix relative links. ODT adds a `../`
  to relative links\n      (see #3524); this needs to be removed when converting from
  ODT.\n    + Handle \"section\" elements (#8409).\n    + Rename Text.Pandoc.Readers.Odt
  -> Text.Pandoc.Readers.ODT,\n      for consistency with Writers.ODT. Rename `readOdt`
  -> `readODT`.\n      [API change]\n\n  * DocBook reader:\n\n    + Support href on
  link even in a fragment (#8437).\n      (We now just look for an `href` attribute
  without\n      worrying about the namespace.)\n    + Parse title from imageobject/objectinfo
  (#8437).\n\n  * JATS reader:\n\n    + Handle uri element in references (#8270).\n\n
  \ * Ipynb reader:\n\n    + Add cell id to attachment filename when storing in MediaBag
  (#8415).\n      Otherwise attachments with the same name can overwrite each other.\n\n
  \ * LaTeX reader:\n\n    + Skip parenthenized args of toprule, midrule, etc (#8242).\n
  \   + Handle `##` macro arguments properly (#8243).\n    + Remove unused function
  `toksToString` in Parsing module.\n    + Support more `soul` commands, including
  `\\hl`.\n    + Add `unnumbered` class for `\\part*` (#8447)\n    + Fix `TEXINPUTS`
  handling (#8392). If `TEXINPUTS` ends with `:`,\n      then the system default `TEXINPUTS`
  is added.  We handle this by\n      just adding the working directory in this case.\n
  \   + Parse short table caption (see jgm/pandoc-types#103).\n      This is not too
  useful yet, because writers don't do anything with\n      the short caption.\n\n
  \ * MediaWiki reader:\n\n    + Parse table cell with attributess, to support rowspan,
  colspan (#8231,\n      Ruqi).\n    + Refine \"blending\" rules for MediaWiki links
  (#8525, Ruqi).\n      The rules for \"blending\" characters outside a link into
  the link are\n      described here: https://en.wikipedia.org/wiki/Help:Wikitext#Blend_link\n
  \     These pose a problem for CJK languages, which generally don't have\n      spaces
  after links. However, it turns out that the blending behavior, as\n      implemented
  on Wikipedia, is (contrary to the documentation) only for\n      ASCII letters.
  This commit implements that restriction, which fixes\n      the problem for CJK.\n\n
  \ * HTML reader:\n\n    + Fix regression for `<tt>` (#8330). It was no longer being
  parsed as\n      Code (Justin Wood).\n\n  * RST reader:\n\n    + Support `mark`
  role for round-trip.\n\n  * Textile reader:\n\n    + Support linked images (#8541).\n
  \   + Fix strong emph ending with link (#8540).\n    + Adding a Parser to look for
  ordered list start attribute numbers\n      if any (#2465, vkraven).\n    + Handle
  empty paragraphs (#8487). Also, if attributes are added\n      explicitly to a paragraph,
  put it in a Div with the attributes.\n\n  * Markdown reader:\n\n    + Allow fenced
  code block \"bare\" language to be combined\n      with attributes (#8174, Siphalor),
  e.g.\n      ````\n      ```haskell {.class #id}\n      ```\n      ````\n    + Allow
  table caption labels to start with lowercase `t` (#8259).\n    + Grid tables: allow
  specifying a table foot by enclosing it with\n      part separator lines, i.e.,
  row separator lines consisting only\n      of `+` and `=` characters (#8257, Albert
  Krewinkel). E.g.:\n      ```\n      +------+-------+\n      | Item | Price |\n      +======+=======+\n
  \     | Eggs | 5¬£    |\n      +------+-------+\n      | Spam | 3¬£    |\n      +======+=======+\n
  \     | Sum  | 8¬£    |\n      +======+=======+\n      ```\n    + Fix `implicit_header_references`
  with duplicate headings (#8300).\n      Documentation says that when more than one
  heading has the same text,\n      an implicit reference `[Heading text][]` refers
  to the first one.\n      Previously pandoc linked to the last one instead. This
  patch\n      makes pandoc conform to the documented behavior.\n    + Parse highlighted
  text inside `==..==` if `mark` extension enabled.\n\n  * Org reader:\n\n    + Allow
  org-ref v2 citations with `&` prefix (#8302).\n    + Make `#+pandoc-emphasis-pre`
  work as expected (#8360, Amir Dekel).\n\n  * BibTeX reader:\n\n    + Fix handling
  of `%` in `url` field (#7678).\n      `%` does not function as a comment character
  inside `url`\n      (where URL-encoding is common).\n    + Allow `url` field in
  `bibtex` as well as `biblatex` (#8287).\n      This field is not officially supported
  for BibTeX, but many styles\n      can handle it (<https://www.bibtex.com/f/url-field/>),\n
  \     and others will ignore it.\n    + Support `software` type in biblatex <->
  CSL conversions (#8504).\n    + Make sure `version` field comes through in biblatex
  (#8504).\n\n  * BibTeX writer:\n\n    + Pass through `url` even for `bibtex` (#8287).\n\n
  \ * Org writer:\n\n    + Pass through unknown languages in code blocks (#8278),
  instead\n      of producing `begin_example`.\n    + Use span attributes `tag-name`
  in headers as tags (#8513, Albert\n      Krewinkel). This enables round-tripping
  of tags in Org headings.\n\n  * EndNote reader:\n\n    + Better error when parsing
  EndNote references fails.\n\n  * DocBook writer:\n\n    + Rename Text.Pandoc.Writers.Docbook
  -> Text.Pandoc.Writers.DocBook.\n      Rename `writeDocbook` -> `writeDocBook`,
  for consistency with\n      the DocBook reader's naming. [API change]\n    + Fix
  position of textobject (#8437). It is a child of\n      `inlinemediaobject`, not
  `imageobject`.\n    + Add regression tests for #8437.\n    + Render image alt text
  using textobject element (#8437).\n    + Don't indent contents of title element.\n
  \   + Store \"unnumbered\" class in DocBook role attribute (#1402, lifeunleaded).\n\n
  \ * ConTeXt writer (Albert Krewinkel):\n\n    + Support syntax highlighting for
  code.\n    + Always use `\\type` for inline code.\n      Inline codes that contained
  curly braces where previously rendered\n      with `\\mono`; this led to unexpected
  results when the presentation\n      of `\\type` was customized, as those changes
  would not have\n      been applied to code rendered with `\\mono`.\n    + Add support
  for unlisted, unnumbered headings (#8486).\n    + Support `tagging` extension (Albert
  Krewinkel). Paragraphs\n      are enclosed by `\\bpar` and `\\epar` commands, and
  `highlight` commands\n      are used for emphasis. This results in much better tagging
  in PDF output.\n\n  * LaTeX writer:\n\n    + Do not repeat caption on headless tables
  (Albert Krewinkel).\n      The caption of headless tables was repeated on each page
  that\n      contained part of the table. It is now made part of the\n      \"first
  head\", i.e. the table head that is printed only once.\n    + Add separator line
  between table's body and its foot\n      (Albert Krewinkel).\n    + Ignore languages
  with no babel equivalent, instead of generating an\n      invalid command in the
  preamble (#8325).\n    + Use `\\includesvg` for SVGs and include the `svg` package
  (#8334).\n    + Use `soul` instead of `ulem` for strikeout, underline (#8411).\n
  \     This handles things like hyphenation, line breaks, and nonbreaking\n      spaces
  better.\n    + Use `\\toprule\\noalign{}` instead of `\\toprule()` in tables,\n
  \     and similarly for `\\midrule` and `\\bottomrule` (#8223).\n      This facilitates
  redefining `\\toprule`, `\\midrule`, and `\\bottomrule`\n      without needing to
  gobble the ()s. (Those who redefine these macros\n      on the assumption that they
  will be followed by `()` may need to\n      change their definitions.)\n    + Support
  highlighted text for Span with class `mark`.\n\n  * JATS writer:\n\n    + Use `<break/>`
  for LineBreak in the limited contexts that accept it\n      (#8344).\n    + Officially
  deprecate `writeJATS` in favor of `writeJatsArchiving`.\n\n  * RTF writer:\n\n    +
  Add space after unicode escape commands (#8264).  This fixes\n      a bug that caused
  characters to disappear after unicode escapes.\n\n  * RST writer:\n\n    + Render
  tables as list tables when the `--list-tables` option is\n      specified (`writerListTables`)
  (#4564, Francesco Occhipinti).\n    + Improve inline escaping rules (#8380).\n    +
  Use special `mark` role for Span with class `mark`.\n\n  * Commonmark writer:\n\n
  \   + Ensure that we don't have blank lines in raw HTML (#8307).\n\n  * HTML writer:\n\n
  \   + Only add role attribute in HTML5 (#8241). It is not valid in HTML4.\n    +
  Avoid aria-hidden in code blocks for HTML4 (#8241).\n    + Only treat `. . .` as
  a slide pause in slides, and not in regular\n      HTML output (#8281).\n    + Properly
  merge classes for headings of level > 6 (#8363).\n    + Prevent `<a>` inside `<a>`
  (#7585). If a link text contains a link,\n      we replace it with a span.\n    +
  Replace deprecated aria roles for bibliography entries (#8354).\n      `doc-biblioentry`
  -> `listitem`, `doc-bibliography` -> `list`.\n    + Remove obsolete stuff about
  mathml-script.\n      This was a shim we used to include for mathml support.\n      We
  don't do anything with this any more, so this is dead code.\n    + Include math
  links if there are raw commands or environments that\n      can be interpreted as
  math e.g. by MathJax (#8469).\n    + Add prooftree to list of math environments
  (#8462). This will cause\n      raw LaTeX prooftree environments to be rendered
  appropriately when\n      `--mathjax` is used.\n\n  * HTML, Markdown writers: filter
  out empty class attributes (#8251).\n    These should not be generated by any pandoc
  readers, but they\n    might be produced programatically.\n\n  * Markdown writer:\n\n
  \   + Avoid HTML fallbacks in the generated TOC (Albert Krewinkel, #8131).\n      The
  generated table of contents usually has IDs for each TOC link,\n      allowing to
  link back to specific parts of the TOC. However, this\n      leads to unidiomatic
  markup in formats like gfm, which do not support\n      attributes on links and
  hence fall back to HTML. The IDs on TOC items\n      are now removed in that case,
  leading to more aesthetic TOCs.\n    + Escape `!` before `[` (#8254).\n    + Support
  `mark` extension.\n\n  * AsciiDoc writer:\n\n    + In link text, only replace commas
  with entities when they're in\n      Str elements.  If a link contains an image,
  it may have attributes,\n      and the commas there should not be converted (see
  #8437, #8070).\n\n  * ODT writer:\n\n    + Fix relative links (#3524).\n\n  * Docx
  writer:\n\n    + Better handling of tables in lists (#5947). Previously the content\n
  \     of each list cell was indented when the table belonged to a list\n      item.\n
  \   + Indent tables in list items (#5947).\n    + Adjust correct attribute on `lang`
  element (#7022). For East Asian\n      languages, we need to adjust `w:eastAsia`
  rather than `w:val`.\n      This allows normal fonts to be used for any Latin-font
  text.\n      Similarly, for bidi languages, we need to adjust `w:bidi`\n      rather
  than `w:val`. We treat `he` and `ar` as bidi languages,\n      `zh`, `ja`, `ko`
  as East Asian languages.\n    + Support relative image widths (Albert Krewinkel).\n
  \     Image widths given in percent are interpreted to be relative to\n      the
  text width. Previously, percent widths were taken relative to\n      the image's
  native size, inconsistently with other writers.\n    + Avoid using 'error' for unassigned
  table cells (#8468). Instead,\n      throw a regular pandoc error.\n    + Render
  a Span with class `mark` as highlighted. Currently\n      yellow is hardcoded.\n\n
  \ * MediaWiki writer:\n\n    + Use the 'new' table structure, so that colspan and
  rowspan are\n      supported (Wout Gevaert).\n\n  * Man writer:\n\n    + Use UTF-8
  by default for non-ascii characters (#8507).\n      Only use groff escapes if `--ascii`
  has been specified on the\n      command line (`writerPreferAscii`).\n\n  * ICML
  writer:\n\n    + Use Contents element for images with raw data instead of a link\n
  \     with a data: uri (#8398).\n\n  * EPUB writer:\n\n    + Refactor to use Text.Pandoc.Chunks.\n
  \   + Refactored and simplified code.\n    + Make title page optional (#6097).\n\n
  \ * Ms writer:\n\n    + Properly format display equations (#8308).\n    + Remove
  -C option on PSPIC. Some old versions don't support this\n      option, and since
  it's the default it shouldn't be necessary.\n\n  * XWiki writer:\n\n    + Use template
  if it is specified (#8296). Previously\n      templates were ignored.\n\n  * LaTeX
  template:\n\n    + Set fonts after Beamer theme (Jeremie Knuesel). Beamer themes\n
  \     such as metropolis and saintpetersburg change the default\n      fonts. This
  change gives precedence to the user font settings\n      by moving them after the
  loading of the Beamer theme.\n    + Set `\\babelfont` when `mainlang` and `lang`
  are specified and\n      `pdflatex` is not being used (#8538). This is needed for
  good\n      results in Arabic.\n    + Add variable `urlstyle` (#8429, Amar Al-Zubaidi).
  This is set to\n      `same` by default, so users should not experience any change.\n\n
  \ * HTML template:\n\n    + Remove default font size, line height and font family
  in\n      default inline css (#8423). `mainfont`, `fontsize`,\n      and `linestretch`
  can still be used as before; the only difference\n      is that we no longer provide
  opinionated defaults.\n      This commit also adds a `maxwidth` variable that sets
  `max-width`;\n      if not set, 36em is used as a default.\n    + Add `code { hyphens:
  manual; }`.\n    + Use `styles.citations.html` partial in `styles.html`.\n    +
  Fix class name `hanging` -> `hanging-indent` in\n      `styles.citations.html`.\n
  \   + Put Consolas before Lucida Console for code font (#8543).\n      This is to
  prevent Lucida Console from being used on Windows, where\n      it causes spacing
  issues in some applications, with boldface\n      glyphs wider than regular ones.\n\n
  \ * EPUB CSS changes: Reduce the amount of inline CSS used for EPUBs\n    (#8379).
  Almost everything is now in the default EPUB CSS\n    (`data/epub.css`), which can
  be overridden either by\n    putting `epub.css` in the user data directory or by
  using\n    `--css` on the command line.  Inline styles are only used\n    for syntax
  highlighting (which depends on the style\n    specified, and is only included on
  pages with highlighted\n    code) and for bibliography formatting (which can depend
  on\n    the CSL style, and is only used in the page containing the\n    bibliography).\n\n
  \   Note that, for compatibility with older readers, we don't\n    use flexbox to
  style `column/columns` divs by default, as\n    we do in HTML.  Instead, we use
  an older method which only\n    works when there are two `column` divs inside a
  `columns`\n    div.  If you need more than two columns and aren't worried\n    about
  support for older EPUB readers, you can modify the\n    default CSS (there is a
  comment in the CSS telling you what\n    to do).\n\n  * Reveal.js template: prevent
  line-wrapping of parallax options\n    (#8503, Albert Krewinkel).\n\n  * reference.pptx:
  Remove unsupported element (#8342, #6338, Link Swanson).\n    The default template
  contained text above the header, which can mislead\n    users into thinking there
  is a way to put text there using pandoc.\n\n  * Text.Pandoc.Readers.Metadata:\n\n
  \   + Fix metadata parsing corner case (#8465).\n    + Don't fail on inline metadata
  beginning with newline (#8358).\n\n  * Text.Pandoc.App:\n\n    + Move initial input-to-Pandoc
  code to internal submodule (Albert\n      Krewinkel).\n    + Change `parseOptionsFromArgs`
  and `parseOptions` (#8406)\n      They now return `Either OptInfo Opt`. [API change]\n
  \   + Add `OptInfo` type [API change].\n    + Add `handleOptInfo` function.  This
  performs the IO actions for\n      things like `--version` that were previously
  done in\n      `parseOptionsFromArgs` [API change].\n    + `convertWithOpts`: add
  argument for a `ScriptingEngine` [API change].\n    + Unify check for standalone
  output (Albert Krewinkel).\n    + New `optEpubTitlePage` field on `Opt` [API change]
  (#6097).\n    + Remove `optEpubChapterLevel`, add `optSplitLevel` [API change].\n
  \   + Export `IpynbOutput(..)` [API change].\n\n  * Text.Pandoc.App.OutputSettings:\n\n
  \   + Remove unused field `outputWriterName` in `OutputSettings`.\n\n  * Text.Pandoc.Citeproc:\n\n
  \   + Check both extension and mime type to determine bibliography type\n      when
  the bibliography is fetched remotely (#7151).\n    + CslJson: allow an object with
  `items` property in addition to\n      an array of references. This is what is returned
  by e.g.\n      `https://api.zotero.org/groups/904125/items?v=...&format=csljson`\n
  \   + Require a digit for an implicit \"page\" locator inside explicit\n      locator
  syntax `{...}` (#8288). Previously a locator specified as\n      `{}` would be rendered
  as `p.` with nothing after it.\n    + Update `sub verbo` to `sub-verbo` (#8315).
  This is a change in\n      the term's canonical name in citeproc. As a result of
  this change,\n      `sub verbo` locators have not worked in pandoc since citeproc
  0.7.\n    + Text.Pandoc.Citeproc.MetaValue: remove unused function\n      `metaValueToPath`.\n
  \   + Add internal module Text.Pandoc.Citeproc.Name (#8345). This exports\n      `toName`,
  which previously had been part of T.P.Citeproc.BibTeX,\n      and allows for cleaner
  module dependencies.\n\n  * Export module `Text.Pandoc.Slides` [API Change] (Albert
  Krewinkel).\n\n  * Add new module Text.Pandoc.Format [API change] (Albert Krewinkel).\n
  \   The module provides functions and types for format spec parsing and\n    processing.
  The function `parseFormatSpec` was moved from\n    Text.Pandoc.Extensions to the
  new module and renamed to\n    `parseFlavoredFormat`. It now operates in\n    a
  PandocMonad and is based on the updated types.\n\n  * Text.Pandoc.Sources:\n\n    +
  Add UpdateSourcePos instances for String and\n      strict and lazy ByteString [API
  change].\n\n  * Text.Pandoc.Extensions:\n\n    + Fix JSON decoding of Extensions
  (#8352, Albert Krewinkel).\n    + Add new exported function `readExtension` [API
  change].\n    + Remove `parseFormatSpec` [API change]. This has been moved\n      to
  Text.Pandoc.Format and renamed as `parseFlavoredFormat`\n      (Albert Krewinkel).\n
  \   + Simpler implementation of Extensions based on Set\n      (benchmarks show
  no performance penalty).\n    + Add `CustomExtension` constructor to `Extension`
  [API change].\n    + Remove `Bounded`, `Enum` instances for `Extension`.\n    +
  Add `extensionsToList` function.\n    + Revise `readExtension` so it can handle
  `CustomExtension`, and so\n      that it returns a Text rather than `Maybe Text`.\n
  \   + Add `showExtension` [API change].\n    + Add `Ext_mark` extension [API change].\n
  \   + Add `Ext_tagging` constructor [API change] (Albert Krewinkel).\n    + Add
  `Ext_wikilinks_title_after_pipe`, `Ext_wikilinks_title_before_pipe`\n      [API
  change] (Albert Krewinkel).\n\n  * Text.Pandoc.PDF:\n\n    + Fix `papersize` on
  PDF generation via ms (#8403).\n      We need to set an option in pdfroff in addition
  to including\n      a macro in the ms file. With this fix, `-Vpapersize=a4` should
  be\n      sufficient to produce A4 PDF via ms.\n    + Change default background
  color of PDFs generated via HTML (#8422,\n      Marcin Serwin).\n\n  * Text.Pandoc.MIME:\n\n
  \   + Base module on package `mime-types`, which\n      is already a transitive
  dependency (#8277, Albert Krewinkel).\n    + Remove deprecated overrides (#8292).\n\n
  \ * Text.Pandoc.XML:\n\n    + Re-export `lookupEntity` from commonmark-hs [API change].\n\n
  \ * Text.Pandoc.Parsing:\n\n    + Remove gratuitious renaming of Parsec types. We
  were exporting\n      Parser, ParserT as synonyms of Parsec, ParsecT.\n      There
  is no good reason for this and it can cause confusion.\n      Also, when possible,
  we replace imports of Text.Parsec with\n      Text.Pandoc.Parsing. The idea is to
  make it easier, at some point,\n      to switch to megaparsec or another parsing
  engine if we want to.\n      New (re-)exports: `Stream(..)`, `updatePosString`,
  `SourceName`,\n      `Parsec`, `ParsecT`. Removed exports: `Parser`, `ParserT`\n
  \     [API change].\n    + Export `errorMessages`, `messageString` [API change].\n
  \   + Export `fromParsecError`, which can be used to turn a parsec\n      ParseError
  into a regular PandocParseError (#8382) [API change].\n    + Remove `nested` [API
  change]. It was not being used, and in fact it\n      was a bad idea from the beginning,
  as it had no hope of solving\n      the problem it was introduced to solve.\n    +
  Change `characterReference`, `charsInBalanced`. `characterReference`\n      so they
  now return a Text (some named references don't correspond\n      to a single Char).
  Use the the `lookupEntity` function from\n      commonmark-hs instead of the slow
  one from tagsoup [API change].\n    + `charsInBalanced` now takes a Text parser
  rather than a Char parser\n      as argument [API change].\n\n  * Text.Pandoc.Shared:\n\n
  \   + Export `textToIdentifier` [API change].\n    + Remove deprecated `crFilter`.
  [API change]\n    + Remove deprecated `deLink`. [API change]\n    + Deprecate `notElemText`.\n
  \   + Deprecate `makeMeta`.\n    + Remove `pandocVersion` (now available in Text.Pandoc.Version\n
  \     as `pandocVersionText`).\n    + Remove `findM` [API change]. This was only
  used in one place, and\n      can be replaced with simpler code.\n    + Remove deprecated
  `makeMeta` [API change].\n    + Remove `ordNub` [API change]. This is just `nubOrd`
  from\n      Data.Containers.ListUtils.\n    + Remove `mapLeft` [API change]. This
  is just a synonym for\n      Bifunctor.first.\n    + Remove `elemText`, `notElemText`
  [API change].\n    + Drop export of `pandocVersion` and `pandocVersionText`,\n      which
  are now exported by Text.Pandoc.Version.\n    + Remove `escapeURI`, `isURI`. These
  are now exported by\n      Text.Pandoc.URI, and removing them from Shared helps
  make\n      the module structure more straightforward.\n    + Use LineBreak as default
  block sep in `blocksToInlines`.\n      (#8499, Albert Krewinkel). This change also
  affects the\n      `pandoc.utils.blocks_to_inlines` Lua function.\n    + `defaultUserDataDir`
  is no longer exported (it has been\n      moved to T.P.Data) [API change].\n    +
  New function `figureDiv`, offering offers a standardized way\n      to convert a
  figure into a Div element (Albert Krewinkel) [API change].\n\n  * Text.Pandoc.Writers.Shared:\n\n
  \   + Export `htmlAddStyle`, `htmlAlignmentToString` and `htmlAttrs`\n      [API
  change] (Wout Gevaert).\n    + Use 'literal tag' instead of 'text (T.unpack tag)'
  in `tagWithAttrs`\n      (Wout Gevaert).\n    + `toTableOfContents`: handle nested
  Divs better (#8402).\n\n  * Rename Text.Pandoc.Network.HTTP -> Text.Pandoc.URI.\n
  \   This is still an unexported internal module.\n    Export `urlEncode`, `escapeURI`,
  `isURI`, `schemes`, `uriPathToPath`.\n    Drop exports of `schemes` and `uriPathToPath`.\n\n
  \ * Text.Pandoc.URI `isURI`: don't require non-ASCII characters to be\n    escaped
  (#8508).\n\n  * Rename Text.Pandoc.Readers.LaTeX.Types -> Text.Pandoc.TeX (internal\n
  \   module).\n\n  * Text.Pandoc.Options:\n\n    + WriterOptions now has a field
  `writerListTables`,\n      specifying that list tables be used in RST output [API
  change].\n    + New `writerEpubTitlePage` field on `WriterOptions` (#6097)\n      [API
  change].\n    + Remove `writerEpubChapterLevel`, add `writerSplitLevel` [API change].\n\n
  \ * Text.Pandoc.Filter:\n\n    + Export `applyFilters` [API change].\n    + Export
  `applyJSONFilter` [API Change] (Albert Krewinkel).\n    + Parameterize `applyFilters`
  over scripting engine [API change] (Albert\n      Krewinkel).\n\n  * New exported
  module Text.Pandoc.Chunks [API change].  This\n    module provides functions to
  split Pandoc documents into\n    chunks to be rendered in separate files, e.g. one
  per\n    section.  Internal identifiers are rewritten appropriately to\n    point
  to the new locations (#6122).\n\n  * Text.Pandoc.Readers:\n\n    + Change argument
  type of `getReader`, so it takes a `FlavoredFormat`\n      instead of a `Text` [API
  change] (Albert Krewinkel).\n\n  * Text.Pandoc.Writers:\n\n    + Change argument
  type of `getWriter`, so it takes a `FlavoredFormat`\n      instead of a `Text` [API
  change] (Albert Krewinkel).\n\n  * Text.Pandoc.Templates:\n\n    + Do not try to
  normalize input to `getDefaultTemplate` (Albert\n      Krewinkel). The function
  `getDefaultTemplate` no longer splits off\n      extension modifers from the given
  format, as that conflicts with\n      using custom writers as formats. Haskell library
  users should use\n      `getDefaultTemplate <=< (fmap formatName . parseFlavoredFormat)`\n
  \     if the input format can still contain extensions. The same is true\n      for
  `compileDefaultTemplate`, which calls `getDefaultTemplate`\n      internally\n    +
  Add Wrapper type documentation (#8490, William Rusnack).\n\n  * New exported module
  Text.Pandoc.Scripting (Albert Krewinkel).\n    The module contains the central data
  structure for scripting engines\n    (e.g., Lua) [API change].\n\n  * Text.Pandoc.Error:\n\n
  \   + Add new PandocError constructor `PandocNoScriptingEngine` [API change]\n      (Albert
  Krewinkel).\n    + Add new PandocError constructor `PandocFormatError` [API change]\n
  \     (Albert Krewinkel). The new error is used to report problems with\n      input
  or output format specifications.\n    + Add new PandocError constructor `PandocNoTemplateError`\n
  \     (Albert Krewinkel).\n    + Remove `PandocParsecError` constructor from `PandocError`
  (#8385).\n      Henceforth we just use `PandocParseError`.\n\n  * New module Text.Pandoc.Version,
  exporting `pandocVersionText`\n    and `pandocVersion` [API change].  `pandocVersion`
  returns a `Version`\n    instead of a `Text`, which is consistent with `pandocTypesVersion`.\n\n
  \ * Text.Pandoc.Class:\n\n    + Make `getPOSIXTime`, `getZonedTime` sensitive to
  `SOURCE_DATE_EPOCH`\n      environment variable if set (#7093).  (`getTimestamp`
  was\n      already sensitive.)  This ensures that EPUB builds are reproducible.\n
  \   + Text.Pandoc.Class no longer exports `readDataFile`,\n      `readDefaultDataFile`,
  `setTranslations`, and `translateTerm`\n      [API change].\n    + Text.Pandoc.Class
  now exports `checkUserDataDir` [API change].\n\n  * T.P.Class.IO: export function
  `writeMedia` [API change] (Albert Krewinkel).\n    This is useful for the `pandoc.mediabag`
  module.\n\n  * Separate out Text.Pandoc.Data and Text.Pandoc.Translations from\n
  \   Text.Pandoc.Class (#8348). This makes Text.Pandoc.Class\n    more self-contained.\n\n
  \   + Text.Pandoc.Data is now an exported module, providing `readDataFile`\n      and
  `readDefaultDataFile` (both formerly provided by\n      Text.Pandoc.Class), and
  also `getDataFileNames` (formerly\n      unexported in Text.Pandoc.App.CommandLineOptions)\n
  \     and `defaultUSerDataDir` (formerly provided by\n      Text.Pandoc.Shared).
  [API change]\n    + Text.Pandoc.Translations is now an exported module (along with\n
  \     Text.Pandoc.Translations.Types), providing `readTranslations`,\n      `getTranslations`,
  `setTranslations`, `translateTerm`,\n      `lookupTerm`, `readTranslations`, `Term(..)`,
  and `Translations` [API\n      change].\n\n  * Text.Pandoc now exports Text.Pandoc.Data
  and `setTranslations`\n    and `translateTerm` {API change].\n\n  * Export module
  Text.Pandoc.Class.IO [API change].\n    The module is useful when defining instances
  of class PandocMonad for\n    types that are also instances of MonadIO.\n\n  * Remove
  modules Text.Pandoc.Writers.Custom and Text.Pandoc.Readers.Custom\n    [API Change]
  (Albert Krewinkel). The functions `writeCustom` and\n    `readCustom` are available
  from module Text.Pandoc.Lua.\n\n  * Text.Pandoc.Server:\n\n    + Split this module
  into a separate package, `pandoc-server`,\n      allowing the `pandoc` library to
  be compiled without server support.\n    + Return object if JSON is accepted. Previously
  we just returned\n      a JSON-encoded string. Now we return something like:\n      ```\n
  \     {\n          \"output\": \"<p>hello</p>\"\n          \"base64\": false,\n
  \         \"messages\": [\n              {\n                  \"message\": \"Not
  rendering RawInline (Format \\\"tex\\\") \\\"\\\\\\\\noe\\\"\",\n                  \"verbosity\":
  \"INFO\"\n              }\n          ],\n      }\n      ```\n      This is a change
  in the pandoc-server JSON API.\n    + Set translations in the writer based on `lang`
  metadata.\n    + Return error in JSON object if response is JSON.\n    + Remove
  `parseServerOpts`. [API change]\n\n  * Text.Pandoc.Lua:\n\n    + This module has
  been moved to a separate package,\n      `pandoc-lua-engine`.\n    + Export `applyFilter`,
  `readCustom`, and `writeCustom`.\n      No longer export the lower-level function
  `runFilterFile` [API\n      change].\n    + Change type of `applyFilter` [API Change]
  (Albert Krewinkel).\n      The module Text.Pandoc.Filter.Lua has been merged into\n
  \     Text.Pandoc.Lua. The function `applyFilter` now has type\n      ``` haskell\n
  \     applyFilter :: (PandocMonad m, MonadIO m)\n                  => Environment->
  [String]-> FilePath-> Pandoc-> m Pandoc\n      ```\n      where `Environment` is
  defined in Text.Pandoc.Filter.Environment.\n    + Export new function `getEngine`
  [API Change].\n      The function returns the Lua scripting engine.\n    + Add unexported
  modules T.P.Lua.Reader, T.P.Lua.Writer.\n      These contain the definitions of
  `readCustom` and `writeCustom`\n      that were previously in T.P.Readers.Custom
  and T.P.Writers.Custom.\n    + Cleanup module dependencies, for a cleaner module
  dependency graph.\n    + The `writeCustom` function has changed to return a Writer
  and\n      an ExtensionsConfig [API change].  This allows ByteString writers\n      to
  be defined.\n    + The `readCustom` function has changed to return a Reader and
  an\n      ExtensionsConfig [API change].\n\n  * Lua subsystem (Albert Krewinkel):\n\n
  \   + The whole Lua subsystem has been moved to a separate package,\n      `pandoc-lua-engine`.
  \ `pandoc` does not depend on it.\n      `convertWithOpts` has a new parameter that
  can be used to\n      pass in the scripting engine defined in `pandoc-lua-engine`\n
  \     (or a different one, in theory).\n    + Fix the behavior of Lua \"Version\"
  objects under equality\n      comparisons (#8267).\n    + Support running Lua with
  a GC-collected Lua state.\n    + Ensure that extensions marshaling is consistent.\n
  \   + Produce more informative error messages for pandoc errors.\n      Errors are
  reported in Lua in the same words in which they would be\n      reported in the
  terminal.\n    + Add new module `pandoc.format`. The module provides functions to\n
  \     query the set of extensions supported by formats and the set\n      of extension
  enabled per default.\n    + Add function `pandoc.template.apply`.\n    + Add function
  `pandoc.template.meta_to_context`.\n      The functions converts Meta values to
  template contexts; the intended\n      use is in combination with `pandoc.template.apply`.\n
  \   + Allow Doc values in `WriterOptions.variables`.\n      The specialized peeker
  and pusher function for `Context Text` values\n      does not go via JSON, and thus
  keeps Doc values unchanged during\n      round-tripping.\n    + Fix rendering of
  Lua errors in Lua, so that the\n      `Error running Lua` message is not prepended
  multiple times.\n    + Add new module `pandoc.zip`.\n    + Allow strings in place
  of compiled templates (#8321).\n      This allows to use a string as parameter to
  `pandoc.template.apply`\n      and in the WriterOptions `template` field.\n    +
  Rename `reader_extensions`/`writer_extensions` globals as `Extensions`\n      (#8390).\n
  \   + Add `pandoc.scaffolding.Writer` (#8377). This can be used to reduce\n      boilerplate
  in custom writers.\n    + Fix peeker for PandocError (Albert Krewinkel). String
  error messages\n      were incorrectly popped of the stack when retrieving a PandocError.\n
  \   + Add functions `pandoc.text.toencoding`, `pandoc.text.fromencoding`\n      (#8512,
  Albert Krewinkel).\n    + Add `pandoc.cli` module. Allow processing of CLI options
  in Lua.\n    + Support `-D` CLI option for custom writers.\n      A new error `PandocNoTemplateError`
  (code 87) is thrown if a template\n      is required but cannot be found.\n    +
  Allow table structure as format spec. This allows to pass structured\n      values
  as format specifiers to `pandoc.write` and `pandoc.read`.\n    + Add function `pandoc.mediabag.write`
  (Albert Krewinkel).\n    + Add module `pandoc.structure` (Albert Krewinkel). The
  function\n      `make_sections` has been given a friendlier interface and moved
  to the\n      new module; the old `pandoc.utils.make_sections` has been deprecated.\n\n
  \ * Custom writers:\n\n    + The global variables `PANDOC_DOCUMENT` and `PANDOC_WRITER_OPTIONS`\n
  \     are no longer set when the writer script is loaded. Both variables\n      are
  still set in classic writers before the conversion is started,\n      so they can
  be used when they are wrapped in functions.\n    + Deprecate classic custom writers.\n
  \   + Add function `pandoc.write_classic`. The function can be used to\n      convert
  a classic writer into a new-style writer by setting it as\n      the value of `Writer`:\n
  \     ``` lua\n      Writer = pandoc.write_classic\n      ```\n      or to fully
  restore the old behavior:\n      ``` lua\n      function Writer (doc, opts)\n        PANDOC_DOCUMENT
  = doc\n        PANDOC_WRITER_OPTIONS = opts\n        load(PANDOC_SCRIPT_FILE)()\n
  \       return pandoc.write_classic(doc, opts)\n      end\n      ```\n    + Support
  extensions in custom writers. Custom writers can define the\n      extensions that
  they support via the global `writer_extensions`.\n      The variable's value must
  be a table with all supported extensions\n      as keys, and their default status
  as values. For example,\n      the below specifies that the writer supports the
  extensions `smart`\n      and `sourcepos`, but only the `smart` extension is enabled
  by default:\n      ``` lua\n      writer_extensions = {\n        smart = true,\n
  \       sourcepos = false,\n      }\n      ```\n    + Custom writers can define
  a default template via a global `Template`\n      function; the data directory is
  no longer searched for a default\n      template. Writer authors can restore the
  old lookup behavior with\n      ``` lua\n      Template = function ()\n        local
  template\n        return template.compile(template.default(PANDOC_SCRIPT_FILE))\n
  \     end\n      ```\n\n  * Custom readers:\n\n    + Support extensions in custom
  readers.\n      Custom readers, like writers, can define the set of supported\n
  \     extensions by setting a global. E.g.:\n      ``` lua\n      reader_extensions
  = {\n        smart = true,\n        citations = false,\n      }\n      ```\n\n  *
  Use latest versions of `commonmark-extensions`, `texmath`,\n    `citeproc`, `gridtables`,
  and `skylighting`.\n\n  * Use pandoc-types 1.23.  This adds the `Figure` Block\n
  \   constructor and removes the `Null` Block constructor.\n\n  * Require aeson >=
  2.0.\n\n  * Use jira-wiki-markup 1.5.0 (#8511, Albert Krewinkel). Fixes issues with\n
  \   icon-like sequences at the beginning of words.\n\n  * Use doctemplates 0.11,
  avoiding a transitive dependency on HsYAML.\n\n  * Use skylighting 0.13.1.2.\n\n
  \ * Allow mtl 2.3.1 (Alexander Batischev).\n\n  * Use latest skylighting-format-context.\n\n
  \ * Allow building with mtl 2.3.\n\n  * Remove `lua53` flag.  We now only support
  Lua 5.4.\n\n  * Add hie.yaml for haskell language server.\n\n  * Add tools/latex-package-dependencies.lua.\n\n
  \ * Update default CSL with latest `chicago-author-date.csl`.\n\n  * make_artifacts.sh:
  various small improvements.\n\n  * Remove sample.lua from data files (#8356).\n\n
  \ * Documentation:\n\n    + Deprecate `PANDOC_WRITER_OPTIONS` in custom writers
  (Albert Krewinkel).\n    + Document `pandoc.write_classic` (Albert Krewinkel).\n
  \   + Document new table features (Albert Krewinkel).\n    + Clarify what background-image
  does in reveal.js (#6450).\n    + Documentation improvements for `blank_before_blockquote`\n
  \     (#8324, Pranesh Prakash).\n    + Update grid table documentation (#8346).\n
  \   + Add note about MathJax fonts to `--embed-resources`.\n    + Use cabal's --package-env
  more (#8317, Artem Pelenitsyn).\n    + Modify Zerobrane instructions to use Lua
  5.4 (#8353, Ian Max Andolina).\n    + Fix documentation for highlight-style in `pandoc-server.md`.\n
  \   + Fix link to fedora package site (#8246, Akos Marton).\n    + Rephrase paragraph
  on format extensions (#8375, Ilona Silverwood).\n    + Update README.template (#8496,
  Sven Wick).\n    + Fix a tiny typo in lua-filters.md (TomBen).\n    + Clarify that
  `--css` should be used with `-s`.\n    + Clarify font selection for pdf -t ms (#8421,
  nbehrnd).\n    + Clarify docs for `--metadata-file` (#8459).\n    + Fix typo in
  epub.md (Vladimir Alexiev).\n    + Add missing backtick in filters.md (R. N. West).\n
  \   + `doc/lua-filters.md`: add documentation for `pandoc.format`\n      (Albert
  Krewinkel).\n    + Fix epub-embed-font documentation (#8455, Terence Eden).\n    +
  Removed obsolete Templates section in CONTRIBUTING.md.\n    + Add manual section
  on accessible PDFs, archiving standards (#8312,\n      Albert Krewinkel).\n\n  *
  Tests.Command: remove unused `runTest`.\n\n  * Add pandoc-lua.1 man page.\n\n  *
  Improve `shell.nix`.\n\n  * Add `tools/moduledeps.lua` for inspecting the internal
  module\n    dependency tree.\n\n  * Fix macOS zip so pandoc-server is a symlink.
  This cuts its size by 2x.\n\n  * CI: Improve CI speed by caching more, eliminating
  macos builds,\n    and splitting benchmarks into a separate action, run by\n    manual
  dispatch. (We still test that benchmarks build in\n    the regular CI.) The cache
  can be expired manually by\n    modifying the secret `CACHE_VERSION`.\n\n  * Remove
  the unnecessary Setup.hs from pandoc.\n    Cabal does not need this with build-type
  'simple'.\n\n  * Add pandoc-lua and pandoc-server (symlinks) and their man pages\n
  \   to releases.\n\n  * Use hslua-cli package for pandoc-lua interface (Albert Krewinkel).\n\n
  \ * Add `server` flag to pandoc-cli, allowing it to be compiled without\n    server
  support.\n\n  * pandoc-cli: Allow building a binary without Lua support (Albert\n
  \   Krewinkel). Disabling the `lua` cabal flag will result in a\n    binary without
  Lua.\n\n  * Move `--version` handling to pandoc-cli. We need it here in order\n
  \   to print information about whether server and Lua support have been\n    compiled
  in.\n\n  * Move `nightly` flag from pandoc to pandoc-cli (#8339).\n\n  * Makefile
  changes:\n\n    - `make help` will now print all the targets and what they do.\n
  \   - Add targets: `coverage`, `weeder`, `moduledeps`, `prerelease`,\n      `ghcid`,
  `repl`, `linecounts`, `hie.yaml`, `binpath`.\n    - Note that you can `` alias pandoc=`make
  binpath` `` for\n      convenient local testing of a build.\n    - Rename `quick-cabal`
  -> `build`, `quick-test` -> `test`.\n    - Exclude tests from `SOURCEFILES`.\n\n
  \ * Factor out xml-light into an internal library.\n\n  * Add CITATION.cff (#8434).\n\n
  \ * Move trypandoc to a separate repository, jgm/trypandoc.\n\n## pandoc 2.19.2
  (2022-08-22)\n\n  * Fix regression with data uris in 2.19.1 (#8239).\n    In 2.19.1
  we used the base64URL encoding rather than base64.\n\n  * pandoc-server: handle
  `citeproc` parameter as documented (#8235).\n\n  * Org reader: treat *emacs-jupyter*
  src blocks as code cells (#8236,\n    Albert Krewinkel). This improves support for
  notebook-like org files\n    that are intended to be used with emacs-jupyter package.\n\n
  \ * HTML writer and templates: revert to using `width` property for column\n    widths
  (Albert Krewinkel). The default `flex` and `overflow-x` properties\n    of a column
  are set to `auto`. In combination, these changes allow to\n    get good results
  when using columns with or without explicit widths.\n\n  * Org writer (Albert Krewinkel):\n\n
  \   + Add support for jupyter nodebook cells (#6367).\n    + Prefix code language
  of ipynb code blocks with `jupyter-`.\n      This is the convention used by the
  *emacs-jupyter* package.\n    + Keep code block attributes as header args. This
  allows to keep more\n      information in the resulting `src` blocks, making it
  easier to\n      roundtrip from or through Org. Org babel ignores unknown header\n
  \     arguments.\n    + Add code block identifier as `#+name` to src blocks.\n\n
  \ * Fix some typos in the codebase (luz paz).\n\n  * Require hslua-module-path 1.0.3
  (#8228, Albert Krewinkel).\n\n## pandoc 2.19.1 (2022-08-18)\n\n  * Add server capabilities.\n\n
  \   + New exported module Text.Pandoc.Server [API change].\n    + The pandoc executable
  now starts up a web server when renamed or\n      symlinked as `pandoc-server`,
  and functions as a CGI program when\n      renamed or symlinked as `pandoc-server.cgi`.
  \ See the man page for\n      `pandoc-server` for full documentation.\n\n  * Text.Pandoc.App.Opts:
  Redo `FromJSON` for `Opt` so that optional\n    values can be omitted (in which
  case the values from\n    `defaultOptions` are used).\n\n  * Org reader: treat \"abstract\"
  block as metadata (Albert Krewinkel, #8204).\n    A block of type \"abstract\" is
  assumed to define the document's abstract.\n    It is transferred from the main
  text to the metadata.\n\n  * Org template: add abstract from metadata as block of
  type \"abstract\"\n    (#8204).\n\n  * HTML writer: use `flex` property for column
  widths\n    (Albert Krewinkel, #8232).\n\n  * LaTeX writer:\n\n    + Add label to
  tables that have an identifier (Albert Krewinkel, #8219).\n      Tables with an
  identifier are marked with a `\\label`. A caption is\n      always included in this
  case, even if the caption is empty.\n    + Use `\\textquotesingle` for straight
  quotes in text.\n    + Fix widths of multicolumn cells (#8218).\n\n  * LaTeX template:
  fix behavior of `colorlinks` variable (Albert\n    Krewinkel, #8226). Fixes a regression
  in 2.19 that required the\n    `boxlinks` variable to be set in addition to the
  usual link coloring\n    variables. Otherwise links were never colored in LaTeX
  PDF output.\n\n  * Text.Pandoc.Highlighting: Export `lookupHighlightingStyle`\n
  \   [API change]. Previously this lived in an unexported module\n    Text.Pandoc.App.CommandLineOptions,
  under the name\n    `lookupHighlightStyle`.\n\n  * Text.Pandoc.App:\n\n    + Remove
  unneeded MonadIO constraints in readSources.\n    + Factor out `convertWithOpts'`
  from `convertWithOpts`.\n      This runs in any PandocMonad, MonadIO, MonadMask
  instance.\n      So far it is not exported, but it might find a use later.\n\n  *
  Support `--strip-comments` in commonmark/gfm (#8222).\n    This change makes the
  commonmark reader sensitive to\n    `readerStripComments`.\n\n  * Lua: add function
  `pandoc.utils.citeproc` (Albert Krewinkel).\n    The function runs the *citeproc*
  processor on a Pandoc document.\n    Exposing this functionality to Lua allows to
  make citation processing\n    part of a filter or writer, simplifies the creation
  of multiple\n    bibliographies, and enables the use of varying citation styles
  in\n    different parts of a document.\n\n  * Refactor `linux/make_artifacts.sh`.\n\n
  \ * Update INSTALL.md installation from source instructions.\n\n  * Use base64 package
  instead of base64-bytestring. It is supposed to be\n    faster and more standards-compliant.\n\n
  \ * trypandoc improvements:\n\n    + Add dropdown with canned examples.\n    + Add
  citeproc support.\n    + Support csv, bibliographic and binary formats.\n    + Add
  load from file.\n    + Add permalink.  Don't always reload page.\n    + Use vanilla
  JS and CSS + the new `pandoc-server.cgi`.\n\n  * Allow haddock-library-1.11.0.\n\n
  \ * Convert `tool/extract-changes.hs` to a Lua filter.\n\n\n## pandoc 2.19 (2022-08-03)\n\n
  \ * Add `--embed-resources` flag (Elliot Bobrow, #7331).  This can be\n    used
  to embed resources without implying `--standalone`.\n    Deprecate `--self-contained`
  in favor of `--embed-resources --standalone`.\n\n  * Allow environment variable
  interpolation in `highlight-style`\n    and `pdf-engine` fields in defaults files\n
  \   (#8061; Jaehwang Jung, #8073).\n\n  * Allow placing custom readers and writers
  in user data directory\n    (Albert Krewinkel, #8112) (`readers` and `writers` subdirectories).\n\n
  \ * Add `tsv` (tab separated values) as an input format (#7974).\n    [API change]:
  Text.Pandoc.Readers.CSV now exports `readTSV`.\n    Internal change:  In Text.Pandoc.CSV,
  `CSVOptions` has changed\n    so that `csvQuote` takes a Maybe value.\n\n  * Add
  `tex_math_dollars` to `gfm` default extensions (reflecting\n    gfm's new support
  for math).\n\n  * RST, Org, Markdown readers: support rowspans and colspans in grid
  tables\n    (#8202, Albert Krewinkel). Note: the writers does not yet support these\n
  \   more complex grid table features, so these complex grid tables will\n    not
  round-trip.\n\n  * HTML, LaTeX, and MediaWiki readers: use `formatCode`\n    (#8162,
  #8129, Elliot Bobrow). This moves formatting from inside inline\n    code elements
  to the outside, since pandoc's Code element only takes string\n    content.\n\n
  \ * Markdown reader:\n\n    + Don't parse inline notes with blank lines inside (#8028).\n
  \   + Allow attributes in special spans (e.g. `smallcaps`, `underline`)\n      (Albert
  krewinkel, #4102). These spans are parsed as\n      SmallCaps or Underline elements,
  but any attributes are included\n      in a wrapping Span.\n\n  * HTML reader:\n\n
  \   + Allow sublists that are not marked as items (Albert\n      Krewinkel, #8150).
  This is technically invalid HTML, but it can\n      be found in the wild and browsers
  handle it.\n\n  * Org reader (Albert Krewinkel):\n\n    + Recognize absolute paths
  on Windows (Albert Krewinkel, #8201).\n    + Recognize {webp,jxl} files as images
  (YI).\n    + Allow attrs for Org tables (Albert Krewinkel, #8049). Tables with\n
  \     attributes are no longer wrapped in Div elements; attributes are added\n      directly
  to the table element.\n    + Support line selection in INCLUDE directives (Brian
  Leung, #8060).\n    + Fix Post / Pre mixup when setting emphasis chars (Amir Dekel,
  #8134).\n\n  * LaTeX reader:\n\n    + Support `\\includesvg` (#8027).\n    + Unescape
  characters in `\\lstinline` inside `\\passthrough` (#8179).\n    + Improve `mathEnvWith`
  (#8122). When converting e.g. an align\n      environment to an aligned environment
  inside a Math element, we need\n      to include a newline before the `\\end{aligned}`,
  since the previous\n      line might end in a comment.\n    + Fix treatment of extensions
  for `\\input` in LaTeX reader (#8092).\n      Previously we required a `.tex` extension,
  but TeX\n      allows any extension for `\\input` (as opposed to `\\include`).\n\n
  \ * RTF reader:\n\n    + support `\\nosupersub` (#8170).\n\n  * TikiWiki reader:\n\n
  \   + Support underlined text\n\n  * DocBook reader:\n\n    + Improved reading `<xref>`
  elements (Frerich Raabe, #8065).\n\n  * JATS reader:\n\n    + Strip `ref-` prefix
  from ref id in xref (#8007).\n    + Support edition in references (#8087).\n\n  *
  RIS reader:\n\n    + Make parser more forgiving (#8034). Allow blank lines after
  entries.\n      Allow entries with no space after the `-`, provided they\n      just
  have a newline, e.g. `DB -\\n`.\n    + Get right order of names (#8055).\n\n  *
  MediaWiki reader:\n\n    + Allow HTML comment after row start (#8110).\n\n  * DokuWiki
  reader:\n\n    + The `tex_math_dollars` extension is now supported for `dokuwiki`\n
  \     (but off by default) (#8178).\n    + Content inside `<latex>...</latex>` is
  parsed as raw LaTeX inline,\n      and inside `<LATEX>..</LATEX>` as raw LaTeX block
  (#8178).\n    + The behavior of `<php>...</php>` is changed, so that instead of\n
  \     producing a code block, it produces raw HTML with `<?php ... ?>`.\n\n  * LaTeX
  writer:\n\n    + Improve grouping with autocites (#8088).\n    + Extend list of
  book documentclasses (Wentau Han, #8053).\n    + Fix width of multicolumn cells
  (Albert Krewinkel, #8090).\n      Cells spanning multiple columns must be given
  an explicit width,\n      calculated from the table properties.\n    + Beamer: allow
  containsverbatim as alternative to fragile (#8080).\n\n  * HTML writer:\n\n    +
  Add 'footnotes' identifier to footnotes section (#8043).\n    + Fix bug with `--number-offset`.
  This formerly caused section divs\n      to be produced, even when `--section-divs`
  was not specified (#8097).\n    + Use CSS flexboxes for columns (Albert Krewinkel).
  This allows\n      an arbitrary number of columns, while the previous approach assumed\n
  \     exactly two columns.\n    + Allow \"spanlike\" classes to be combined (see
  #8194). Previously\n      classes like \"underline\" and \"marked\" had to be the
  first class\n      in a span in order for the span to be interpreted as a \"ul\"
  or\n      \"mark\" element.  This commit allows these special classes to be\n      \"stacked,\"
  e.g. `[test]{.mark .underline}`; in addition, the\n      special classes are no
  longer required to come first in the list\n      of classes.\n    + Avoid doubled
  style attribute when height and width are added to\n      style because of an image,
  but the image already has a style attribute\n      (#8047).\n    + Do not include
  the deprecated doc-endnote role (#8030).\n      doc-endnote was deprecated in DPUB-ARIA
  1.1.\n    + Remove extra soft break for tasklist (black-desk, #8142).\n      Browser
  will display the extra newline character between checkbox and\n      text as a space,
  which make tasklist items cannot be aligned.\n\n  * EPUB writer:\n\n    + Allow
  choice of math method for v3 (#8164). Previously we always\n      used MathML for
  math in EPUB3, because the spec includes MathML.\n      But this is not widely supported
  by readers, so it seems better\n      to allow users to choose their math method
  as they can with\n      EPUB2 or HTML. **NOTE:** Existing workflows that produce
  EPUBv3\n      documents including math will be affected by this change.  You\n      must
  add `--mathml` to your command line if you want to continue\n      producing MathML.\n\n
  \ * RST writer:\n\n    + Fix missing spaces with nested inlines (#8182).\n    +
  Always escape literal backslash (#8178).\n\n  * Ms writer:\n\n    + Add comment
  in preamble stating generator.\n    + Fix roff ms syntax highlighting definitions
  (#8175, thanks to\n      Branden Robinson).\n\n  * ConTeXt writer:\n\n    + Support
  complex table structures (Albert Krewinkel, #8116).\n      The following table feature
  are now supported in ConTeXt:\n\n      - colspans,\n      - rowspans,\n      - multiple
  bodies,\n      - row headers, and\n      - multi-row table head and foot.\n\n      The
  wrapping `placetable` environment is also given a `reference` option\n      with
  the table identifier, enabling referencing of the table from within\n      the document.\n
  \   + Unify link handling (Albert Krewinkel, #8096).\n      Autolinks, i.e. links
  with content that's the same as the linked URL,\n      are now marked with the `\\url`
  command. All other links, both internal\n      and external, are created with the
  `\\goto` command, leading to shorter,\n      slightly more idiomatic code. As before,
  autolinks can still be styled\n      via `\\setupurl`, other links via `\\setupinteraction`.\n
  \   + Use \"sectionlevel\" environment for headings (Albert Krewinkel, #5539).\n
  \     The document hierarchy is now conveyed using the\n      `\\startsectionlevel`/`\\stopsectionlevel`
  by default. This makes it easy\n      to include pandoc-generated snippets in documents
  at arbitrary levels.\n      The more semantic environments \"chapter\", \"section\",
  \"subsection\", etc.\n      are used if the `--top-level-division` command line
  parameter is set to\n      a non-default value.\n\n  * Docx writer:\n\n    + Add
  `w:lang` to `rPr` for Span and Div with lang attribute, so\n      that Word can
  know that \"Apfel\" is not a spelling error (#8026).\n    + Prevent crashing when
  handling invalid tables (Albert Krewinkel, #8102).\n      Tables with different
  numbers of cells per row would sometimes crash\n      pandoc. This fix prevents
  this by cutting off overlong rows.\n\n  * ICML writer:\n\n    + Support custom-style
  attribute on Table (#8079).\n\n  * AsciiDoc writer:\n\n    + Fix commas in link
  text (#8070). Commas in link text trigger\n      interpretation of attributes. To
  block this, we replace them with\n      numeric entities.\n    + Fix underline.
  We were rendering it as `+++text+++`; this is now\n      changed to `[.underline]#text#`.
  \ See comment at\n      <https://github.com/jgm/pandoc/issues/8070#issuecomment-1126883824>.\n\n
  \ * FB2 writer:\n\n    + Fix handling of non-section Divs (#8123).\n\n  * Markdown
  writer:\n\n    + Disable soft wrapping when `hard_line_breaks` enabled (#8035).\n
  \     We were already doing this for `markdown`; this commit does\n      the same
  thing for `markua` and `commonmark` and `gfm`.\n    + Avoid excessive indentation
  on bullet lists for `commonmark`,\n      `markua`, `gfm`.  They are now nested by
  2 spaces instead of 4 (#8011).\n\n  * Text.Pandoc.Class:\n\n    + Add new function
  `findFileWithDataFallback` [API Change]\n      (Albert Krewinkel).\n    + `fillMediaBag`:
  Keep attributes of original image on Span (Albert\n      Krewinkel, #8099). Images
  that cannot be fetched are replaced with a\n      Span that contains the image's
  description. The span now also retains\n      all original image attributes and
  inherits all attributes of the image.\n      Furthermore, the classes `image` and
  `placeholder` are added, and path\n      and title are store in attributes `original-image-src`
  and\n      `original-image-title`, respectively.\n\n  * Text.Pandoc.Shared:\n\n
  \   + `makeSections`: don't make a section for a div with class \"fragments\"\n
  \     (#8098).\n    + Ensure that Nulls are ignored by `makeSection` and in segmenting\n
  \     slides (#8155).\n    + Add `formatCode` function to Text.Pandoc.Shared [API
  change]\n      (Elliot Bobrow, #8129).\n    + `taskListItemToAscii`: handle asciidoctor's
  characters (#8011).\n      Asciidoctor uses different unicode characters for task\n
  \     lists; we should recognize them too and be able to convert\n      them to
  ascii task lists in formats like gfm.\n    + Deprecate `deLink` and mark for later
  removal.\n\n  * Text.Pandoc.Writers.Shared:\n\n    + `toTableOfContents`: Don't
  replace links with empty spans in TOC (#8020).\n\n  * Text.Pandoc.Readers.Metadata:\n\n
  \   + Ensure that metadata values w/o trailing newlines are\n      parsed as inlines,
  as the manual states.\n      Previously, they were parsed as inlines if they would\n
  \     otherwise have been a single Plain or Para, but otherwise\n      left unchanged.
  \ This led to some quirky results (e.g. #8143).\n      We now use the general function
  `blocksToInlines` from T.P.Shared.\n\n  * Text.Pandoc.Parsing:\n\n    + Simplify
  `gridTableWith'`, `gridTableWith` [API Change] (Albert\n      Krewinkel). The functions
  `gridTableWith` and `gridTableWith'` no\n      longer takes a boolean argument that
  toggles whether a table head\n      should be parsed: both, tables with heads and
  without heads, are\n      always accepted now.\n\n  * Lua subsystem (Albert Krewinkel):\n\n
  \   + Extend `pandoc.system` module (Albert Krewinkel, #8184).\n      The module
  now has the additional functions `list_directory`,\n      `make_directory`, and
  `remove_directory`. This makes it easier to write\n      cross-platform scripts
  that need to inspect or modify the file system.\n    + Require pandoc-lua-marshal
  0.1.7. Adds a `clone` methods to\n      Pandoc objects and allows to pass Blocks
  in instead of full\n      Caption elements.\n    + Add fields `pandoc.readers` and
  `pandoc.writers` (#8177).\n      The set of supported input and output formats is
  made available to Lua\n      users.\n    + Ensure that tables marshaled via JSON
  arrays behave like Lists.\n      This allows to invoke methods like `map` and `includes`
  on lists like\n      `PANDOC_WRITER_OPTIONS.extensions`.\n    + Require hslua-2.2.1,
  unless lua53 flag is set, and do not reset\n      foreign encoding before running
  Lua. This fixes a problem where\n      the encoding used for Lua filenames would
  sometimes mismatch the\n      encoding used by the OS.\n    + Simplify module loading
  code. Modules are now loaded directly;\n      the special pandoc Lua package searcher
  is no longer necessary and\n      has been removed.\n    + Add function pandoc.mediabag.fill
  (#8104). The function allows to\n      fill the mediabag with all images in a given
  document. Images that\n      cannot be fetched are replaced with a Span containing
  the\n      image description.\n\n  * Populate mediabag after filters have run (Albert
  Krewinkel, #8099).\n    The mediabag is filled with document resources after the
  filters have\n    run. This allows, for example, filter authors to modify image
  paths\n    before pandoc tries to fetch the images.\n    Lua filters that rely on
  a filled mediabag can use the new\n    `pandoc.mediabag.fill` function to perform
  that action in the filter.\n\n  * Ms template: redefine rather than removing .CH
  macro (#8175).\n\n  * JATS template (Albert Krewinkel, except as noted):\n\n    +
  Include particles, prefix, suffix in names.\n    + Mark authors with cor-id as corresponding
  authors.\n      Corresponding authors are marked by setting the attribute\n      `corresp=\"yes\"`
  in their respective `<contrib>` element.\n    + Unconditionally include permissions
  element (#8040).\n      Fixes a bug that caused license information to be omitted
  when no\n      copyright information was provided.\n    + Follow JATS4R recommendation
  and PudMed Central for license URI\n      (Castedo Ellerman, #8041).\n\n  * LaTeX
  template:\n\n    + Rename  `\\textormath` to `\\TextOrMath` (Hos Es, #8036).\n    +
  Fix links-as-notes (Albert Krewinkel, #8077).\n\n  * HTML template styles:\n\n    +
  Remove `span.underline` rule. This is superfluous now that we\n      render Underline
  as `<u>`.\n    + Improve CSS for task lists (#8151).\n\n  * LaTeX template: Add
  `boxlinks` variable for LaTeX/PDF output (#8198).\n    If `boxlinks` is set but
  `colorlinks` is not, then boxes will\n    be printed around links (`hidelinks` will
  not be set in `hypersetup`).\n\n  * `--self-contained`: Handle `url()` in `<style>`
  elements (#8193).\n\n  * Text.Pandoc.PDF: use SHA1 hash of filename when converting
  SVG.\n    The previous code threw away the directory component of\n    the filename
  in constructing a new one. This led to\n    surprising results if you had e.g. `foo/pic.svg`
  and `bar/pic.svg`;\n    in the final PDF they'd be the same image, because the latter\n
  \   would overwrite the former in the temp directory.\n\n  * Remove Muse reader
  round-trip tests. These are nondeterministic and have\n    repeatedly failed on
  strange edge cases.\n\n  * Update fonts MIME following IANA recommendation (Gabriel
  Lewertowski,\n    #8127).\n\n  * Future compat change for `liftA2` export from Prelude
  (Georgi Lyubenov,\n    #8132).\n\n  * Update `default.csl` from the latest chicago-author-date.csl.\n\n
  \ * Update manfilter.hs for greater portability (#8045).\n    The tables in our
  man pages were not rendering correctly\n    with mandoc, now used by default with
  macOS. mandoc doesn't\n    allow man formatting inside table cells. For maximum
  portability,\n    we now render the tables in plain format and include them as code\n
  \   blocks in the man page.\n\n  * CI: update macos container version (#8197, Sukka).\n\n
  \ * Add `nightly` flag. This causes a `-nightly-COMPILEDATE`\n    suffix to be added
  the the output of `--version` (#8016).\n    This is used in the nightly CI builds.\n\n
  \ * Update dependencies (aeson, skylighting, pandoc-lua-marshall,\n    citeproc,
  texmath).\n\n  * Documentation improvements (thanks to Ji≈ô√≠ Wolker,\n    Castedo
  Ellerman, Albert Krewinkel, Bastien Dumont, Cezar Dro≈ºak, Benjamin\n    Wuethrich,
  Ivan Panchenko, Sukil Etxenike, Masataka Ogawa).\n\n## pandoc 2.18 (2022-04-04)\n\n
  \ * New input formats: `endnotexml` (EndNote XML bibliography),\n    `ris` (RIS
  bibliography).\n\n  * A RIS bibliography file may now be used with `--citeproc`.\n\n
  \ * Citeproc: Allow a formatted bibliography to be placed in metadata fields\n    via
  a Div with class `refs` (#7969, #526).  Thus, one can include a\n    metadata field,
  say `refs`, whose content is an\n    empty div with id `refs`, and the formatted
  bibliography will be put into\n    this metadata field.  It may then be interpolated
  into a template using the\n    variable `refs`.\n\n  * Ensure that you don't get
  PDF output to terminal.  `-t pdf` now behaves\n    like `-t docx` and gives an error
  unless the output is redirected.\n\n  * `--version` now prints hslua version (#7929)
  and\n    Lua version (#7997, Albert Krewinkel).\n\n  * Change `--metadata-file`
  parsing so that, when the input format is not\n    markdown or a markdown variant,
  pandoc's markdown is used (#6832, #7926).\n    When the input format is a markdown
  variant, the same format is used.\n    Reason for the change: it doesn't make sense
  to run the markdown parser\n    with a set of extensions designed for a non-markdown
  format, and\n    this dramatically limits what people can do in metadata files.\n\n
  \ * Trim whitespace from math in `--webtex` (#7892).\n    This fixes problems with
  --webtex and markdown output,\n    when display math starts or ends with a newline.\n\n
  \ * `--self-contained`: issue warning rather than failing with an error\n    if
  a resource can't be found (#7904).\n\n  * New exported module Text.Pandoc.Readers.EndNote,
  exporting\n    `readEndNoteXML` and `readEndNoteXMLCitation` [API change].\n\n  *
  New exported module, Text.Pandoc.Readers.RIS, exporting `readRIS` (#7894)\n    [API
  change].\n\n  * LaTeX reader:\n\n    + Handle subequations as inline math environment
  (#7883).\n    + Rudimentary support for `vbox` (#7939).\n    + Support `\\today`
  (#7905).\n    + Handle `\\label` and `\\ref` for footnotes (#7930).\n    + Allow
  inline groups starting with `\\bgroup` (#7953).\n    + Use custom TokStream that
  keeps track of whether macros are expanded.\n      This allows us to improve performance
  a bit by avoiding unnecessary\n      runs of the macro expansion code (e.g. from
  24 ms to 20 ms on\n      our standard benchmark).\n    + Further optimizations for
  inline parsing.\n    + Better handling of `\\usepackage`.  If the package is local
  but\n      causes parse errors, parse everything up to the error and skip the\n
  \     rest.  Issue a `CouldNotParseIncludeFile` warning indicating that\n      parsing
  failed at that point.\n    + Text.Pandoc.Readers.LaTeX.Parsing: Monoid and Semigroup
  instances for\n      TokStream.\n\n  * HTML reader:\n\n    + Give warnings and emit
  empty note when parsing\n      `<a epub:type=\"noteref\">` and the identifier\n
  \     doesn't correspond to anything in the note table (#7884).\n      Previously
  we just silently skipped these cases.\n    + Fix parsing of epub footnotes (#7884).\n\n
  \ * DocBook reader:\n\n    + Handle complete set of entities as specified at\n      <https://www.w3.org/2003/entities/2007doc/byalpha.html>
  (#7938).\n    + Handle abstract in info section (#7747).\n    + Improve info parsing.\n
  \   + Simplify metadata parsing code (#7747).\n      Handle abstract as block-level
  content.\n      Report skipped info elements with `--verbose`.\n    + Handle address
  and coyright in metadata (#7747).\n\n  * DokuWiki reader:\n\n    + Add DokuWiki
  table alignment (#5202, damon-sava-stanley).\n\n  * RST reader:\n\n    + Fix treatment
  of headerless simple tables (#7902).\n    + Wrap math in Span to preserve attributes
  (#7998, Albert Krewinkel).\n      Math elements with a name, classes, or other fields
  are wrapped in a\n      `Span` with these attributes.\n\n  * JATS reader:\n\n    +
  Improve handling of fn-group elements (#6348, Albert Krewinkel).\n      Footnotes
  in `<fn-group>` elements are collected and re-inserted into\n      the document
  as proper footnotes in the place where they are referenced.\n    + Handle `pub-date`
  (#8000).\n    + Support PMID, DOI, issue in citations (#7995).\n    + Improve refs
  parsing.  Handle `issn` and `isbn`; use simpler form\n      for issued date.\n    +
  Strip 'ref-' from ref id in constructing CSL id.  This allows better\n      round-tripping,
  because the JATS writer adds the `ref-` prefix to\n      the citation id to get
  the ref element's id.\n\n  * Org reader:\n\n    + Allow \":\" in property drawer
  keys (Lucas V. R).\n      Any non-space character is allowed as property drawer
  key, including \":\"\n      itself (so it is not really a delimiter). The real delimiter
  is a space\n      character, so in a drawer like\n      ```\n      :PROPERTIES:\n
  \     ::k:ey:: value\n      :END:\n      ```\n      \":k:ey:\" is a key with value
  \"value\".\n\n    + Allow comments above property drawer.\n    + More flexible LaTeX
  environments (Lucas V. R).\n    + Handle `#+bibliography:` as metadata so that it
  can work with\n      `--citeproc`.\n    + Parse `#+print_bibliography:` as Div with
  id `refs`.\n    + Allow multiple `#+bibliography:`.\n\n  * Markdown reader:\n\n
  \   + Allow one-column pipe tables with pipe on right (#7919).\n    + Remove restriction
  on identifiers, so they no longer need to\n      begin with a letter (#7920).\n\n
  \ * Docx reader:\n\n    + Enable `citations` extension for docx reader (#7840).\n
  \     When enabled, Zotero, Mendeley, and EndNote citations embedded in\n      a
  docx are parsed as native pandoc citations.\n      (When disabled, the generated
  citation\n      text and bibliography are passed through as regular text.)\n      The
  bibliography generated by the plugin is suppressed.\n      Instead, bibliographic
  data embedded in citation items is added\n      to the `references` metadata field
  so that it can be used\n      with `--citeproc`.\n\n  * Docbook writer:\n\n    +
  Interpret links without contents as cross-references (#7360, Jan Tojnar).\n      Links
  without text contents are converted to `<xref>` elements. DocBook\n      processors
  will generate appropriate cross-reference text when presented\n      with an xref
  element.\n\n  * Docx writer:\n\n    + Single numbering ID for examples (#7895, mjfs).\n
  \     This change ensures that example list items all belong to a single\n      number
  sequence, so that if items are added or deleted in a word\n      processor, the
  other items will renumber automatically.\n    + Add bookmark with table id to table
  (#7989, Nikolai\n      Korobeinikov, #7285).  This allows tables with ids to be
  linked to.\n\n  * Ipynb writer:\n\n    + Handle metadata better (#7928).  Previously
  we used the markdown\n      writer to render metadata.  This had some undesirable
  consequences\n      (e.g. en dash expanded to `--` when `smart` enabled), so now
  we use\n      the plain writer.\n\n  * LaTeX writer:\n\n    + Avoid extra space
  before `\\CSLRightInline` (#7932).\n    + Add `scrreport` to `chaptersClasses` (#6168,
  ivardb).\n    + Support `page`,`trim`,`clip` attributes on images (#7181).\n    +
  Add `()` after booktabs rules (#8001).  These commands take optional\n      arguments
  with () and [], which can lead to problems if the content\n      of the table cell
  begins with these characters.\n\n  * RST writer:\n\n    + Support all standard metadata
  (\"bibliographic\") fields.\n\n  * HTML writer: performance improvements.\n\n  *
  Org writer:\n\n    + Stop indenting property drawers, quote blocks\n      (#3245,
  Albert Krewinkel).  This follows the current default org-mode\n      behavior.\n\n
  \ * Markdown writer:\n\n    + Move table-related code into submodule (Albert Krewinkel).\n
  \   + Don't produce redundant header identifier when the\n      `gfm_auto_identifiers`
  extension is set (#7941).\n    + Update escaping rules for `\\`.  We now escape
  `\\` only if `raw_tex`\n      is enabled or it is followed by a non-alphanumeric.\n\n
  \ * JATS writer:\n\n    + Encode author \"others\" as `<etal/>` (Albert Krewinkel).\n
  \     Citeproc adopted the BibTeX convention to use the author name \"others\"\n
  \     when there are additional authors that are not named. JATS uses the\n      `<etal>`
  element for this.\n    + Avoid doubled ref-list element (#7990).  Previously when
  generating JATS\n      with the `element_citations` extension enabled, the references
  were\n      put in a doubly-nested ref-list element (`<ref-list><ref-list>...`).\n
  \   + Keep edition info in element citations (#7993, Albert Krewinkel).\n    + Fix
  handling of CSL variable 'page' (not 'pages' as we had before).\n      It should
  go to 'lpage' and 'rpage', not 'page-range'.\n\n  * EPUB writer: refactor for clarity
  (#7991, Jonathan D√∂nszelmann,\n    Ola Wolska, Ivar de Bruin, Jaap de Jong).\n\n
  \ * Custom writer (Albert Krewinkel):\n\n    + Support new-style Writer function
  (Albert Krewinkel).\n      See the documentation for custom writers for details.\n
  \   + Produce stacktrace if Writer function fails\n\n  * Text.Pandoc.Logging: add
  `CouldNotParseIncludeFile` constructor\n    for `LogMessage` [API change].\n\n  *
  Text.Pandoc.Shared:\n\n    + Put id attributes on TOC entries (#7907, damon-sava-stanley).\n
  \     Naming scheme of id is \"toc-\" + id of linked to header/section.\n      Effects
  HTML, Markdown, Powerpoint, and RTF.\n    + Define `ordNub` as alias for `nubOrd`
  from containers package (#7963,\n      Albert Krewinkel).\n    + Export `ensureValidXmlIdentifiers`.
  \ This function changes identifiers\n      that don't start with letters, and internal
  links to these identifiers,\n      making them compatible with XML standards.  The
  change\n      is simple: we add `id_` to the front.  There is potential\n      for
  duplication if there are already `id_...` identifiers\n      defined, but this seems
  rare enough not to worry too much\n      about.\n\n  * Ensure that valid XML identifiers
  are used in Docbook, EPUB, FB2,\n    HTML4, S5, Slidy, Slideous, ICML, ODT, TEI
  writers.\n    Thus, if you convert `[anchor]{#1} and [link to](#1)`,\n    `id_1`
  will be used instead of `1` for the identifier.\n\n  * Lua (Albert Krewinkel).\n\n
  \   + Add module `pandoc.layout` to format and layout text.\n    + Move custom writer
  code into Lua hierarchy.\n    + Use pandoc-lua-marshal 0.1.5.\n    +  Allow any
  type of callable object as argument to List\n       functions `filter`, `map`, and
  `find_if`. These previously\n       required the argument to be of type `function`,
  which was too\n       restrictive.\n    + Inline: the type of Image captions is
  now `Inlines` instead of `List`.\n    + Allow passing `Sources` to `pandoc.read`
  (#8002).\n\n  * Text.Pandoc.PDF:\n\n    + Restore `wkhtmltopdf` as default pdf engine
  for HTML (Albert Krewinkel).\n    + Allow custom writer as format if engine is explicitly
  specified (#7898,\n      Albert Krewinkel).  Note that it may be necessary to explicitly\n
  \     specify a template on the command line.\n\n  * Text.Pandoc.MediaBag: improve
  detection of absolute paths (#7881).\n\n  * Text.Pandoc.Extensions:\n\n    + Remove
  `raw_tex` extension from list of commonmark extensions, and\n      from the `commonmark_x`
  defaults.  commonmark doesn't parse raw TeX,\n      and it doesn't make sense to
  write it if we don't parse it.\n    + Remove `native_divs` from allowed gfm extensions
  (#7965).  This allows\n      `<div>` to be suppressed using `-raw_html`.  Previously
  `native_divs`\n      was enabled but could not be suppressed, because it was not
  in the\n      list of available extensions for commonmark-based formats.\n\n  *
  Text.Pandoc.Parsing:\n\n    + Partition module into (internal) submodules (#7962,
  Albert Krewinkel).\n    + Unify grid table parsing (#7971, Albert Krewinkel).\n
  \     Grid table parsing in Markdown and RST are updated use the same\n      functions.
  Functions are generalized to meet requirements for both\n      formats.  This change
  also lays the ground for further generalizations\n      in table parsers, including
  support for advanced table features.\n      [API change] in Text.Pandoc.Parsing:\n\n
  \     - Parse results of functions `tableWith'` and `gridTableWith'` are now a\n
  \       `mf TableComponents` instead of a quadruple of alignments, column\n        widths,
  header rows and body rows.\n      - Additional exports from Text.Pandoc.Parsing:\n
  \       `tableWith'`, `TableComponents`, `TableNormalization`,\n        `toTableComponents`,
  `toTableComponents'`.\n\n  * Text.Pandoc.XML.Light: add versions of the parsers
  that allow\n    specifying a custom entity map.  Exports new functions:\n    `parseXMLElementWithEntities`,
  `parseXMLContentsWithEntities` [API change].\n\n  * Text.Pandoc.Writers.GridTable:
  improve module documentation (Albert\n    Krewinkel).\n\n  * Text.Pandoc.Parsing.GridTable:
  simplify column handling code (Albert\n    Krewinkel).\n\n  * Text.Pandoc.MIME:
  Add mime type for mkv extension (#7181).\n\n  * Text.Pandoc.Asciify: Fix regression
  with `ascii_identifiers` and Turkish\n    undotted i (#8003).\n\n  * Relax upper
  bound for hslua, allow hslua-2.2. (#7929)\n    Lua 5.4 is used by default after
  this is merged. Packagers may still\n    include Lua 5.3 instead by building pandoc
  with `--constraint='hslua <2.2'`.\n    Differences between 5.3 and 5.4 should not
  generally affect pandoc Lua\n    filters.  See list of incompatible changes here:\n
  \   <https://www.lua.org/manual/5.4/manual.html#8.1>\n\n  * JATS template: allow
  multiple licenses (Albert Krewinkel).\n\n  * LaTeX template:\n\n    + Skip `\\babelprovide`
  if `babel-lang` is empty (#7945) to avoid an error.\n    + Move hyperref near end
  of preamble (#5811).  It now comes after\n      header-includes and right before
  title, author, date, abstract.\n      Note:  Users who presuppose hyperref in their
  header-includes\n      will now have to add `\\usepackage{hyperref}` to their header-includes\n
  \     to make it available there.  (The redundant `\\usepackage` will\n      do
  no harm in this case.)\n    + Remove special redefinition of `\\sout`.  This used
  to be necessary to\n      avoid problems with hyperref, when headings contain strikeout
  text,\n      but it does not seem to be necessary any more (tested).\n\n  * Tests:
  improve location reporting of failing tests (Albert Krewinkel).\n\n  * Add tests
  for idempotency of `makeSections` (#7950).\n\n  * Add armhf support in linux build
  script (#7944, Tony).\n\n  * Use latest pandoc-types, so that toJSONFilter will
  work with\n    Meta and MetaValue.\n\n  * Use latest doclayout, texmath, commonmark,
  citeproc.\n\n  * INSTALL.md: add reference to install via winget (#7951, Guriy Samarin).\n\n
  \ * MANUAL.txt:\n\n    - Document way to get list in block quote in slide shows
  (#7916).\n    - Minor changes to security section.\n    - Note that `smart` works
  for html input.\n    - Fix typos (#7934, Dimitris Apostolou).\n    - Fix documentation
  for citations and org mode.\n    - Remove claim that `--self-contained` does not
  work with `--mathjax`\n      (#682).\n\n  * doc/org.md: remove obsolete citations
  section.\n    This mostly described citation formats we no longer support.\n\n  *
  doc/lua-filters.md: Fix typo (#7981, Mario Lang).\n\n  * Makefile: Use cabal for
  default build\n\n  * Add `lua53` cabal flag.  It is false by default.  If set to
  true, compile\n    with hslua 2.1 and Lua 5.3, otherwise hslua 2.2 and Lua 5.4.\n\n\n##
  pandoc 2.17.1.1 (2022-01-31)\n\n  * Fix regression in 2.17.1 which caused problems
  finding\n    default files in the default user data directory.  (Reverts\n    the
  item \"logic bug in `fullDefaultsPath`\", which was\n    misguided.)\n\n  * Sample
  custom writer: use single quotes for strings (#7487,\n    Albert Krewinkel).\n\n##
  pandoc 2.17.1 (2022-01-30)\n\n  * Support `pagedjs-cli` as pdf engine (#7838, Albert
  Krewinkel).\n    PagedJS is a polyfill and supports the Paged Media standards by
  the W3C.\n    <https://www.pagedjs.org/>\n\n  * CommonMark reader: fix source position
  after YAML metadata (#7863).\n\n  * LaTeX reader:\n\n    + Remove retokenizing in
  `rawLaTeXParser`.\n    + Ensure that `\\raggedright` doesn't gobble an argument
  (#7757).\n    + Improve `descItem`.  For some reason we were skipping\n      arbitrary
  blocks before `\\item`.  This is now changed to \"skip\n      whitespace and comments.\"\n
  \   + Improve handling of `\\newif`.  Adding a pair of braces around the\n      second
  argument of `\\def` prevents LaTeX from an emergency stop\n      on input like the
  following (#6096).\n      ```\n      \\newif\\ifepub\n      \\epubtrue\n      \\ifepub\n
  \     hi\n      \\fi\n      ```\n\n  * Docx reader: Parse both Zotero citation and
  bibliography as\n    `FieldInfo` (#7840).\n\n  * LaTeX writer:\n\n    + Allow arbitrary
  frameoptions to be passed to a beamer\n      frame, using the frameoptions attribute
  (#7869).\n    + Add s and squeeze to recognized beamer frameoptions (#7869).\n\n
  \ * Markdown writer: handle explicit column widths with pipe tables (#7847).\n    If
  a table has explicit column width information *and* the content\n    extends beyond
  the `--columns` width, we need to adjust the\n    widths of the pipe separators
  to encode this width information.\n\n  * Docx writer: Separate tables even with
  RawBlocks between (#7724,\n    Michael Hoffmann).  Adjacent docx tables need to
  be separated by an\n    empty paragraph. If there's a RawBlock between tables which
  renders\n    to nothing, be sure to still insert the empty paragraph so that\n    they
  will not collapse together.\n\n  * Man writer: use custom font V for inline code
  (#7506).\n    The V font is defined conditionally, so that it renders\n    like
  CB in output formats that support that, and like B\n    in those that don't (e.g.
  the terminal).\n    Aliases also defined for VI, VB, VBI.\n\n  * Asciidoc writer:
  Support checklists in asciidoctor writer (#7832,\n    Nikolai Korobeinikov, ricnorr).
  \ The checklist syntax (similar to\n    `task_list` in markdown) seems to be an
  asciidoctor-only addition.\n\n  * HTML writer:\n\n    + Avoid duplicate \"style\"
  attributes on table cells (#7871).\n    + Don't break lines inside code elements.
  \ With the new (default)\n      line wrapping of HTML, in conjunction with the default
  CSS which\n      includes `code { whitespace: pre-wrap; }`, spurious line\n      breaks
  could be introduced into inline code (#7858).\n\n  * Custom writer: preserve order
  of element attributes (#7489, Albert\n    Krewinkel).  Attribute key-value pairs
  are marshaled as AttributeList,\n    i.e., as a userdata type that behaves both
  like a list and a map. This\n    allows to preserve the order of key-value pairs.\n\n
  \ * Switch to hslua-2.1 (Albert Krewinkel). This allows for some code\n    simplification
  and improves stability.\n\n  * Don't read files outside of user data directory (Even
  Brenden).\n    If a file path does not exist relative to the working directory,
  and\n    it does exist relative to the user data directory, but outside of\n    of
  the user data directory, do not read it. This applies to\n    `readDataFile` and
  `readMetadataFile` in PandocMonad and, by\n    extension, any module that uses these
  by passing them relative paths.\n\n  * Text.Pandoc.Class.`makeCanonical`: Correctly
  handle consecutive \"..\"s\n    at the beginning of a path (Even Brenden).  Prior
  to this commit,\n    `../../file` would evaluate to `file`, when it should be unchanged.\n\n
  \ * Search for metadata files in `$DATADIR/metadata` (#7851, Even Brenden).\n    If
  files specified with `--metadata-file` are not found in the working\n    directory,
  look in `$DATADIR/metadata` (#5876).\n\n  * Text.Pandoc.Class: export `readMetadataFile`
  [API change] (#5876).\n\n  * Text.Pandoc.Error: export new `PandocCouldNotFindMetadataFileError`\n
  \   constructor for `PandocError` [API change] (#5876).\n\n  * Avoid putting a frame
  around speaker notes in beamer (#7857).\n    If speaker notes (a Div with class
  'notes') occur right\n    after a section heading, but above slide level, the\n
  \   resulting `\\note{..}` caommand should not be wrapped in\n    a frame, as that
  will cause a spurious blank slide.\n\n  * CSS in HTML template: adjust #TOC and
  h1 on mobile (#7835, Mauro Bieg).\n\n  * Text.Pandoc.Readers.LaTeX.Parsing: don't
  export `totoks`.\n    Make the first param of `tokenize` a SourcePos instead of\n
  \   SourceName, and use it instead of `totoks`.\n\n  * Text.Pandoc.Shared: Modify
  `stringify` so it ignores `[Citation]`\n    inside `Cite` (#7855).  Otherwise we'll
  sometimes get two copies of\n    things, one from the `citationPrefix` or `citationSuffix`
  and another\n    from the embedded fallback text.  When there is no fallback text,\n
  \   we'll get no content.  However, it really isn't an alternative to just\n    rely
  on the result of running `query` on the embedded `Citation`s;\n    this will result
  in a jumble of text rather than anything structured.\n\n  * Omit `--enable-doc`
  in the cabal haddock invocation in\n    `tools/build-and-upload-api-docs.sh`.\n\n
  \ * Text.Pandoc.App.Opt: fix logic bug in `fullDefaultsPath`.\n    Previously we
  would (also) search the default user data directory\n    for a defaults file, even
  if a different user data directory\n    was specified using `--data-dir`.  This
  was a mistake; if\n    `--data-dir` is used, the default user data directory should\n
  \   not be searched.\n\n  * Text.Pandoc.Shared: `defaultUserDataDir` behavior change
  (#7842).\n    If the XDG data directory is not defined (e.g. because\n    it's not
  supported in the OS or HOME isn't defined), we\n    return the empty string instead
  of raising an exception.\n\n  * Update command tests to distinguish stderr and test
  exit status.\n\n  * MANUAL: add that speaker notes can be used with beamer (#7856).\n\n
  \ * Update `build-and-upload-api-docs.sh`.\n\n  * Document `--trace` option.\n    Document
  `no-check-certificate` in defaults files.\n    Document 'sandbox' option for defaults
  files.  (#7873).\n\n  * Fix pattern syntax in sample readability custom reader.\n\n
  \ * doc/custom-readers.lua: add example for \"readable HTML.\"\n\n  * Fix message
  in man page about where code can be found.\n\n  * `manfilter.lua`:  remove extra
  indent in table cells with code blocks.\n\n  * Fix lua-filters documentation for
  table column widths (#7864).\n\n  * epub.doc: Update links to KindleGen (#7846,
  Benson Muite, Mauro Bieg).\n    KindleGen has been deprecated and we need to link
  to archived versions.\n\n  * Use tables in defaults files documentation, so each\n
  \   default option is paired with the corresponding command-line\n    option (Carsten
  Allefeld).\n\n  * Use skylighting 0.12.2.\n\n  * Add pandoc-lua-marshal to Nix shell
  (#7849, Even Brenden).\n\n\n## pandoc 2.17.0.1 (2022-01-14)\n\n  * Require pandoc-lua-marshal
  0.1.3.1 (#7831, Albert Krewinkel).\n    Fixes a problem with `List.includes` and
  `List.find` that caused a\n    Lua stackoverflow and subsequent program crash.\n\n
  \ * HTML template: load header-includes before math (#7833, Kolen Cheung).\n    MathJax
  expect the config comes before loading the MathJax script.\n    This change of order
  allows one to config MathJax via\n    header-includes, which loads before the MathJax
  script. Cf. #2750.\n\n  * When reading defaults file, stop at a line `...`.  This
  line signals\n    the end of a YAML document.  This restores the behavior we got
  with\n    HsYaml.  yaml complains about content past this line.  See\n    https://github.com/jgm/pandoc/issues/4627#issuecomment-1012438765\n\n
  \ * Text.Pandoc.Citeproc: allow `notes-after-punctuation` to work with\n    numerical
  styles that use superscripts (e.g.\n    american-medical-association.csl), as well
  as with note styles. The\n    default setting of `notes-after-punctuation` is true
  for note styles\n    and false otherwise.  This restores a behavior of pandoc-citeproc\n
  \   that wasn't properly carried over to Citeproc (#7826, cf.\n    jgm/pandoc-citeproc#384).\n\n
  \ * Use commonmark-pandoc 0.2.1.2 (#7769).\n\n  * Add FAQ on images in ipynb containers
  (#7749, Kolen Cheung).\n\n## pandoc 2.17 (2022-01-12)\n\n  * Support `markua` as
  an output format (#1871, Tim Wisotzki and\n    Saumel Lemmenmeier). Markua is a
  markdown variant used by Leanpub.\n\n  * Add text wrapping for HTML output (#7764).
  Previously the HTML writer\n    was exceptional in not being sensitive to the `--wrap`
  option.  With\n    this change `--wrap` now works for HTML. The default (as with
  other\n    formats) is automatic wrapping.  Note that the contents of `script`,\n
  \   `textarea`, and `pre` tags are always laid out with the `flush`\n    combinator,
  so that unwanted spaces won't be introduced if these occur\n    in an indented context
  in a template.\n\n  * Don't read sources until in/out format are verified (#7797).\n\n
  \ * Issue error with `--list-extensions` for invalid formats (#7797).\n\n  * Make
  `--citeproc` recognize `.yml` as well as `.yaml` extensions\n    as YAML bibliography
  files (#7707, J√∂rn Krenzer).\n\n  * Use latest version of KaTeX with `--katex`.\n\n
  \ * Fix parsing of footnotes in `--metadata-file` (#7813).  Previously\n    non-inline
  footnotes were not being parsed.\n\n  * ODT reader:\n\n    + Parse list-header as
  a list item (Tuong Nguyen Manh).\n\n  * Commonmark reader:\n\n    + Put sourcepos
  attribute on header, not enclosing div\n      with `-f commonmark+sourcepos` (#7769).\n\n
  \ * Markdown reader:\n\n    + Don't allow `^` at beginning of link or image label
  (#7723).\n      This is reserved for footnotes. Fixes regression from 0a93acf.\n
  \   + Fix parsing of \"bare locators\" after author-in-text citations.\n      Previously
  `@item [p. 12; @item2]` was incorrectly parsed as\n      three citations rather
  than two.  This is now fixed by ensuring\n      that `prefix` doesn't gobble any
  semicolons.\n    + Revert changes to `inlinesInBalancedBrackets` (commit fa83246),\n
  \     which caused regressions.\n    + Improve detection of pipe table line widths
  (#7713).  Fixed\n      calculation of maximum column widths in pipe tables.  It
  is\n      now based on the length of the markdown line, rather than a\n      \"stringified\"
  version of the parsed line.  This should be\n      more predictable for users. In
  addition, we take into account\n      double-wide characters such as emojis.\n\n
  \ * Custom (Lua) readers:\n\n    + First argument is now a list of sources instead
  of the\n      concatenated text (Albert Krewinkel).  The list\n      structure can
  easily be converted to a string by applying\n      `tostring`, but it is also possible
  to access the elements\n      (each with a `text` and `name`). A small example is
  added\n      to the custom reader documentation, showcasing its use in a\n      reader
  that creates a syntax-highlighted code block for\n      each source code file passed
  as input. Existing readers\n      will still work through a fallback mechanism,
  issuing a\n      deprecation notice.\n\n  * Org reader:\n\n    + Parse official
  org-cite citations (#7329). We also support the older\n      org-ref style as a
  fallback. We no longer support the\n      \"markdown style\" or \"Berkeley style\"
  citations.\n    + Support alphabetical (fancy) lists (Lucas Viana). When the\n      `fancy_lists`
  extension is enabled, alphabetical list markers are\n      allowed, mimicking the
  behaviour of Org Mode when\n      `org-list-allow-alphabetical` is enabled.\n    +
  Support counter cookies in lists (Lucas Viana). Such cookies are\n      used to
  override the item counter in ordered lists. In org it is\n      possible to set
  the counter at any list item, but since Pandoc AST\n      does not support this,
  we restrict the usage to setting an offset for\n      the entire ordered list, by
  using the cookie in the first list item.\n    + Allow trailing spaces after key/value
  pairs in directives (Albert\n      Krewinkel). Ensures that spaces at the end of
  attribute directives like\n      `#+ATTR_HTML: :width 100%` (note the trailing spaces)
  are accepted.\n\n  * LaTeX reader:\n\n    + Omit visible content for `\\label{...}`.
  Previously we\n      included the text of the label in square brackets, but this
  is\n      undesirable in many cases. See discussion in\n      <https://github.com/jgm/pandoc/issues/813#issuecomment-978232426>.\n
  \   + Improve references (#813). Resolve references to theorem environments.\n      Remove
  the Span caused by \"label\" in figure, table, and theorem\n      environments;
  this had an id that duplicated the environments' id.\n    + Fix semantics of `\\ref`.
  We were including the ams\n      environment type in addition to the number. This
  is proper\n      behavior for `\\cref` but not for `\\ref`.  To support `\\cref`\n
  \     we need to store the environment label separately.\n    + Add babel mappings
  for Guajati (gu) and Oriya (or) (#7815).\n    + Fix typo `panjabi` -> `punjabi`
  in babel mappings (#7814).\n\n  * HTML reader:\n\n    + Parse attributes on links
  and images (#6970).\n\n * Docx reader:\n\n    + Handle multiple pic elements inside
  a drawing (#7786).\n    + Change `elemToParPart` to return `[ParPart]` instead of
  `ParPart`.\n      Also remove `NullParPart `constructor, as it is no longer\n      needed.
  This will allow us to handle elements that contain\n      multiple ParParts, e.g.
  `w:drawing` elements with multiple `pic:pic`.\n\n  * DocBook reader:\n\n    + Collapse
  internal spaces in literal and other similar tags (#7821),\n      as the standard
  docbook toolchain does.\n    + Be sensitive to spacing=\"compact\" in lists (#7799).
  When\n      `spacing=\"compact\"` is set, Para elements are turned into Plain,\n
  \     so we get a \"tight\" list.\n\n  * Markdown writer:\n\n    + Add new exported
  function `writeMarkua` from Text.Pandoc.Writers.Markdown\n      [API change] (#1871,
  Tim Wisotzki and Saumel Lemmenmeier).\n    + Fix indentation issue in footnotes
  (#7801).\n    + Avoid extra space before citation suffix if it already starts\n
  \     with a space.\n    + Ensure semicolon between the locator and the next citation
  when an\n      author-in-text citation has a locator and following citations.\n
  \   + Improve escaping for `#` (#7726).\n\n  * Custom (Lua) writers:\n\n    + Allow
  variables to be set via second return value of `Doc`\n      (#6731, Albert Krewinkel).
  New templates variables can be added by\n      giving variable-value pairs as a
  second return value of the\n      global function `Doc`. Example:\n      ```\n      function
  Doc (body, meta, vars)\n        vars.date = vars.date or os.date '%B %e, %Y'\n        return
  body, vars\n      end\n      ```\n    + Provide global `PANDOC_WRITER_OPTIONS` (#6731,
  Albert Krewinkel).\n    + Assign default Pandoc object to global `PANDOC_DOCUMENT`
  (Albert\n      Krewinkel). The default Pandoc object is now non-strict, i.e., only\n
  \     the parts of the document that are accessed will be marshaled to Lua.\n      A
  special type is no longer necessary. This change also makes it\n      possible to
  use the global variable with library functions such as\n      `pandoc.utils.references`,
  or to inspect the document contents with\n      `walk()`.\n\n  * LaTeX writer:\n\n
  \   + Fix typo `panjabi` -> `punjabi` in babel mappings (#7814).\n\n  * MediaWiki
  writer:\n\n    + Remove redundant display text for wiki links (Jesse Hathaway).\n\n
  \ * Docx writer:\n\n    + Handle bullets correctly in lists by not reusing numIds\n
  \     (#7689, Michael Hoffmann).  This fixes a bug in which a Div in\n      a list
  item would receive bullets on its contained paragraphs.\n\n  * Org writer:\n\n    +
  Fix list items starting with a code block or other non-paragraph\n      content
  (#7810).\n    + Avoid blank lines after tight sublists (#7810).\n    + Fix extra
  blank line inserted after empty list item (#7810).\n    + Don't add blank line before
  lists (#7810).\n    + Support starting number cookies (Lucas Viana).  This is necessary\n
  \     for lists that start at a number other than 1.\n    + Support the new org-cite
  syntax (#7329).\n\n  * Haddock writer:\n\n    + Avoid blank lines after tight sublists
  (#7810).\n\n  * Ipynb writer:\n\n    + Ensure deterministic order of keys.\n    +
  Handle cell output with raw block of markdown (#7563, Kolen Cheung).\n      Write
  RawBlock of markdown in code-cell output. This is designed\n      to fit the behavior
  of #7561, which makes the ipynb reader parse\n      code-cell output with mime \"text/markdown\"
  to a RawBlock of markdown.\n      This commit makes the ipynb writer writes this
  RawBlock of markdown\n      back inside a code-cell output with the same mime, preserving
  this\n      information in round-trip.\n    + In choosing between multiple output
  options, always favor\n      those marked with the output format over images (Kolen
  Cheung).\n      Previously, both `fmt == f` case and Image have a rank of 1.\n\n
  \ * Ipynb reader & writer: properly handle cell \"id\" (#7728).\n    This is passed
  through if it exists (in Nb4); otherwise\n    the writer will add a random one so
  that all cells have an \"id\".\n\n  * Ms writer:\n\n    + Properly encode strings
  for PDF contents (#7731).\n\n  * JATS writer:\n\n    + Keep quotes in element-citations
  (Albert Krewinkel).\n      Fixed a bug that lead to quote characters being lost
  in\n      element-citations.\n\n  * RTF writer:\n\n    + Properly handle images
  in data URIs (#7771).\n\n  * Commonmark writer:\n\n    + Allow ')' delimiters on
  ordered lists.\n\n  * RST writer:\n\n    + Avoid extra blank line after empty list
  item (#7810).\n\n  * HTML writer:\n\n    + Make line breaks more consistent. With
  `--wrap=none`, we now\n      output line breaks between block-level elements. Previously
  they\n      were omitted entirely, so the whole document was on one line, unless\n
  \     there were literal line breaks in pre sections.  This makes\n      the HTML
  writer's behavior more consistent with that of\n      other writers. Also, regardless
  of wrap settings,\n      put newline after `<dd>` and after block-level elements
  in\n      the footnotes section. And add a line break between an `img` tag\n      and
  the associated `figcaption`.\n    + reveal.js: Make sure images with `r-stretch`
  are not in p tags.\n      They must be direct children of the section. There was
  previously\n      code to make this work with the older class name `stretch`, but\n
  \     the name has changed in reveal.js.\n    + reveal.js:  don't add `r-fit-text`
  class to section. It must go on\n      the header only.\n\n  * AsciiDoc writer:\n\n
  \   + Improve detection of intraword emphasis (#7803).\n\n  * OpenDocument writer:\n\n
  \   + Fix vertical alignment bug with display math (#7777).  Previously some\n      displayed
  formulas would be floated above a preceding text line.\n      This is fixed by setting
  `vertical-rel` to `text` rather than\n      `paragraph-content`.\n\n  * JATS template
  (Albert Krewinkel):\n\n    + Fix position of contrib affiliations in authoring set.
  Any\n      `<aff>` element must come before any `<email>` element.\n    + Fix affiliation
  tagging in `articleauthoring` output.\n      Affiliations were `xlink`ed even in
  the articleauthoring tag set, but\n      `<aff>` are not allowed as children of
  `contrib-group` elements in that\n      tag set. Each affiliation must be listed
  directly in the contrib\n      element.\n    + Add support for article subtitles.\n\n
  \ * EPUB template:\n\n    + Include abstract in default template.\n    + Ensure
  that the essential styles needed by pandoc (`styles.html`\n      partial) are included
  in the templates. This is important for correct\n      formatting of CSL bibliographies.
  Note that much of the styling in\n      `styles.html` will be ignored for EPUB,
  because of the conditional on\n      `document-css`.  Setting the `document-css`
  variable will cause it\n      not to be ignored.\n\n  * HTML template:  Add abstract
  (#7588, Jannik Buhr, John MacFarlane).\n    By default, a localized title (the word
  \"Abstract\") will be\n    used, unless the variable `abstract-title` is set.\n\n
  \ * ConTeXt template:  Make title appear in PDF title bar.  This is\n    recommended
  for accessibility reasons.  Note: doesn't work with macOS\n    Preview.app.\n\n
  \ * `reference.pptx`: change to use 16:9 aspect ratio, Powerpoint's default.\n\n
  \ * Text.Pandoc.Writers:\n\n    + Do not export `writeCustom` [API change]. This
  ensures that all\n      writers exported in T.P.Writers are parameterized and work
  with any\n      `PandocMonad` type. This is consistent with T.P.Readers, as\n      `readCustom`
  is not exported from that module either.\n\n  * Text.Pandoc.Writers.Shared:\n\n
  \   + `endsWithPlain` now returns True if the list ends with a list\n      that
  ends with a Plain, and so on recursively (#7810).\n\n  * Text.Pandoc.Class.IO:\n\n
  \   + `writeMedia`:  unescape percent-encoding in creating file path.\n      This
  addresses a problem with spaces in image filenames\n      when creating PDFs (#7819);
  it also affects `--extract-media`.\n\n  * New internal module Text.Pandoc.Writers.Blaze,
  exporting `layoutMarkup`.\n    This converts a blaze Html structure into a doclayout
  Doc Text.\n\n  * Text.Pandoc.Extensions:\n\n    + `parseFormatSpec`: cleaner error
  message for invalid extensions.\n\n  * Text.Pandoc.MediaBag:\n\n    + Fix bug in
  `extractMedia`, which caused the test for `..`\n      in paths to fail, with the
  result that images with `..`\n      in the path name could be extracted outside
  of the\n      directory specified by `extractMedia`. It also led a check for\n      `media`
  in resource paths to fail in the docx reader.\n\n  * Text.Pandoc.Citeproc:\n\n    +
  Avoid adding comma before an author-in-text citation in a note\n      if it begins
  with a title (no author) (#7761).\n    + Text.Pandoc.Citeproc.Locator now exports
  `toLocatorMap`,\n      `LocatorInfo`, and `LocatorMap`.  The type of `parseLocator`\n
  \     has changed, so it now takes a `LocatorMap` rather than a `Locale`\n      as
  parameter, and returns a `LocatorInfo` instead of a tuple.\n    + Fix citation locator
  detection for German.  `toLocatorMap` now\n      stores keys case-folded. We want
  to do a case-insensitive\n      comparison when parsing locators, so that e.g. both\n
  \     `Chap.` and `chap.` work. Previously we case-folded terms\n      when doing
  the lookup, but they weren't case-folded in the\n      map itself, which led to
  locator-detection breaking for\n      German (where the terms have uppercase letters).\n\n
  \ * Lua (Albert Krewinkel):\n\n    + Allow single elements as singleton MetaBlocks/MetaInlines.
  Single\n      elements should always be treated as singleton lists in the Lua\n
  \     subsystem.\n    + Add `pandoc.template` module. The module provides a `compile`\n
  \     function to use strings as templates.\n    + Add `pandoc.WriterOptions` constructor.\n
  \   + Add function `pandoc.write`.\n    + Provide global `PANDOC_WRITER_OPTIONS`
  (#5221).\n    + The function Text.Pandoc.Filter.applyFilters now takes a filter\n
  \     environment of type `Environment`, instead of a ReaderOptions value\n      [API
  change].\n    + The `Environment` type is exported from Text.Pandoc.Filter\n      and
  allows to combine ReaderOptions and WriterOptions in a single\n      value [API
  change].\n    + Global, exported from Text.Pandoc.Lua, has a new type constructor\n
  \     `PANDOC_WRITER_OPTIONS` [API change].\n    + Add constructors `pandoc.Blocks`
  and `pandoc.Inlines`.\n      The functions convert their argument into a list of
  Block and Inline\n      values, respectively. When applied to a string, they split
  the\n      string into `Str` elements separated by `Space` or `SoftBreak`\n      (#7712).\n
  \   + Support topdown traversals The traversal order of filters can now\n      be
  selected by setting the key `traverse` of the filter to either\n      `'topdown'`
  or `'typewise'`; the default remains `'typewise'`.\n      Topdown traversals can
  be cut short by returning `false` as a\n      second value from the filter function.
  No child-element of the\n      returned element is processed in that case.\n    +
  Marshal ReaderOptions field `extensions`, `track_changes` via JSON.\n      Extensions
  are now available as a list of strings; the track-changes\n      settings are given
  as the kebab-case representation used in JSON.\n    + Allow binary (byte string)
  readers to be used with `pandoc.read`.\n    + Use global state when parsing documents
  in `pandoc.read`.\n      The function `pandoc.read` is updated to use the same state
  that was\n      used while parsing the main input files. This ensures that log\n
  \     messages are preserved and that images embedded in the input are\n      added
  to the mediabag.\n    + Cleanup stack in `peekReadOptionsTable`. A ReaderOptions
  element was\n      left on top of the stack when the `peekReadOptionsTable` function\n
  \     was invoked.\n    + `walk` methods are added to `Pandoc`, `Block`, `Inline`,\n
  \     `Blocks`, `Inlines` values; the methods are similar to\n      `pandoc.utils.walk_block`
  and `pandoc.utils.walk_inline`, but\n      apply to filter to the element's contents.\n
  \   + Functions of name `Doc` are no longer accepted as alternatives for\n      `Pandoc`
  filter functions. This functionality was undocumented.\n    + Improve handling of
  empty caption, body by `from_simple_table`\n      #7776). Create truly empty table
  caption and body when these are\n      empty in the simple table.\n    + Change
  representation of `TableHead`, `TableFoot`, and `Row` values\n      (#7718).  The
  objects now also follow the principle that element\n      attributes are accessible
  through the `.attr` field. Rows in `TableHead`\n      and `TableFoot` are available
  via the `.rows` field. Row objects have a\n      `.cells` field, containing the
  list of table cells.\n    + [Simplify](Simplify) code of `pandoc.utils.stringify`.
  Minor behavior change:\n      plain strings nested in tables are now included in
  the result string.\n    + Simplify and deprecate function `pandoc.utils.equals`.
  The function\n      is no longer required for element comparisons; it is now an
  alias\n      for the `==` operator.\n    + Add function `pandoc.utils.references`
  (#7752).\n    + Add new library function `pandoc.utils.type`.  The function behaves\n
  \     like the default `type` function from Lua's standard library,\n      but is
  aware of pandoc userdata types. A typical use-case would be\n      to determine
  the type of a metadata value.\n    + Fix return types of `blocks_to_inlines`, `make_sections`.\n
  \     Ensures the returned lists have the correct type (`Inlines` and\n      `Blocks`,
  respectively).\n    + Use more natural representation for Reference values\n      Omit
  `false` boolean values, push integers as numbers.\n\n  * Lua: use package pandoc-lua-marshal
  (#7719, Albert Krewinkel).\n    The marshaling functions for pandoc's AST are extracted
  into a separate\n    package. The package comes with a number of changes:\n\n    +
  Pandoc's List module was rewritten in C, and error messages were\n      improved.\n
  \   + Lists of `Block` and `Inline` elements are marshaled using the new\n      list
  types `Blocks` and `Inlines`, respectively. These types\n      currently behave
  identical to the generic List type, but give better\n      error messages. This
  also opens up the possibility of adding\n      element-specific methods to these
  lists in the future.\n    + Elements of type `MetaValue` are no longer pushed as
  values which\n      have `.t` and `.tag` properties. This was already true for\n
  \     `MetaString` and `MetaBool` values, which are still marshaled as Lua\n      strings
  and booleans, respectively. Affected values:\n      - `MetaBlocks` values are marshaled
  as a `Blocks` list;\n      - `MetaInlines` values are marshaled as a `Inlines` list;\n
  \     - `MetaList` values are marshaled as a generic pandoc `List`s.\n      - `MetaMap`
  values are marshaled as plain tables and no longer\n        given any metatable.\n
  \   + `Cell` values are now marshaled as userdata objects; a constructor\n      function
  for table cells is provided as `pandoc.Cell`.\n    + The test suite for marshaled
  objects and their constructors has\n      been extended and improved.\n    + A bug
  in `Citation` objects, where setting a citation's suffix\n      modified it's prefix,
  has been fixed.\n    + Inlines, Blocks, and List objects now have an `__eq` metamethod,\n
  \     testing equality by comparing two lists element-wise.\n\n  * Powerpoint tests:
  shorten lines by grouping tests (Albert\n    Krewinkel). This makes the test output
  more pleasant to read\n    in narrow terminal windows.\n\n  * make check: check
  for unreleased dependencies.\n\n  * Add `tools/build-and-upload-api-docs.sh`.\n\n
  \ * Update cabal description.\n\n  * `MANUAL.txt`: Add section on EPUB styling.\n\n
  \ * `MANUAL.txt`: clarify \"standard Markdown\" as \"original Markdown\"\n    (#7802,
  Martin Fischer).\n\n  * `doc/custom-writers.md`: use filter to include source of
  example.\n\n  * Add an example to `doc/custom-readers.md`.\n\n  * Fix typo in `custom-readers.md`
  (#7722, Mauro Bieg).\n\n  * `doc/jats.md`: add link to JATS documentation (Martin
  Fischer).\n\n  * `doc/lua-filters.md`: many improvements (Albert Krewinkel,\n    John
  MacFarlane).\n\n  * Use commonmark-extensions 0.2.3. This allows a bare-word class
  attribute\n    on fenced divs.\n\n  * Use ipynb 0.2.\n\n  * Use citeproc 0.6.0.1.\n\n
  \ * Use texmath 0.12.4.\n\n  * Use doctemplates 0.10.0.1.\n\n## pandoc 2.16.2 (2021-11-21)\n\n
  \ * Add interface for custom readers written in Lua (#7669).\n    Users can now
  do `-f myreader.lua` and pandoc will treat the\n    script `myreader.lua` as a custom
  reader, which parses an input\n    string to a pandoc AST, using the pandoc module
  defined for\n    Lua filters.  A sample custom reader can be found in `data/creole.lua`.\n
  \   Also see documentation in `doc/custom-readers.md`.\n\n  * New module Text.Pandoc.Readers.Custom,
  exporting `readCustom` [API change].\n\n  * Allow `plain` to be used in raw attribute
  syntax.\n\n  * Accept empty `--metadata-file` (#7675).\n    This was a regression
  from 2.15 behavior.\n\n  * Markdown reader: Improve `inlinesInBalancedBrackets`.\n
  \   This is just a small improvement in terms of performance, but it's simpler\n
  \   and more direct code.  Also, we avoid parsing interparagraph spaces in\n    balanced
  brackets, as the original did.\n\n  * BibTeX reader: Properly handle commented lines
  in BibTeX/BibLaTeX (#7668).\n\n  * RST reader: handle class attribute for for custom
  roles (#7699,\n    willj-dev).  Previously the class attribute was ignored, and
  the name\n    of the role used as the class.\n\n  * DocBook reader:\n\n    + Add
  `<titleabbr>` support (Rowan Rodrik van der Molen).\n    + Support for `<indexterm>`
  (#7607, Rowan Rodrik van der Molen).\n\n  * LaTeX reader:\n\n    + Add rudimentary
  support for `\\autoref` (#7693).\n    + Add 'uri' class when parsing `\\url`, for
  consistency\n      with treatment of autolinks in other formats (#7672).\n\n  *
  JATS reader: Capture `alt-text` in figures (#7703, Aner Lucero).\n\n  * MediaWiki
  writer: use HTML spans for anchors when header has id (#7697).\n    We need to generate
  a span when the header's ID doesn't match\n    the one MediaWiki would generate
  automatically.  Note that MediaWiki's\n    generation scheme is different from pandoc's
  (it uses uppercase letters,\n    and `_` instead of `-`, for example).  This means
  that in going from\n    markdown to mediawiki, we'll now get spans before almost
  every heading,\n    unless explicit identifiers are used that correspond to the
  ones MediaWiki\n    auto-generates.  This is uglier output but it's necessary for
  internal\n    links to work properly.\n\n  * Markdown writer: don't create autolinks
  when this loses information\n    (#7692).  Previously we sometimes lost attributes
  when rendering links\n    as autolinks.\n\n  * Text.Pandoc.Readers.Metadata: allow
  multiple YAML documents when parsing\n    YAML for `yamlBsToRefs`.  Some people
  use `---` as the end delimiter in\n    YAML bibliography files, which causes the
  `yaml` library to emit an\n    error unless we explicitly allow multiple YAML documents
  (and just\n    consider the first).\n\n  * JATS writer:\n\n    + Ensure figures
  are wrapped with `<p>` in list items\n      (Albert Krewinkel).  This prevents the
  generation of invalid output.\n    + Add URL to element citation entries (Albert
  Krewinkel).\n      The URL of a reference, if present, is added in tag `<uri>` to\n
  \     element-citation entries.\n\n  * HTML writer: Don't create invalid `data-`
  attribute for empty\n    attribute key (#7546).\n\n  * LaTeX writer:\n\n    + Babel
  mappings: use `ancientgreek` for `grc`.\n    + With `-t latex-smart`, don't generate
  `\\ldots` from ellipsis (#7674).\n      Instead just use unicode ellipsis.\n\n  *
  JATS template: fix `equal-contrib` attribute (Albert Krewinkel).\n    The standard
  requires the value to be either `yes` or `no`, but is was\n    set to `true` for
  authors who contributed equally.\n\n  * reveal.js template: Add `disableLayout`
  variable (Christophe Dervieux).\n\n  * Text.Pandoc.Error: sort errors in `handleError`
  by exit code\n    (Albert Krewinkel).\n\n  * Text.Pandoc.Writers.Shared: Improve
  toLegacyTable (#7683,\n    Christian Despres).\n\n  * Lua subsystem:\n\n    + Include
  lpeg module (#7649, Albert Krewinkel).  Compiles the `lpeg`\n      library (Parsing
  Expression Grammars For Lua) into\n      the program.  Package maintainers may choose
  to rely on package\n      dependencies to make lpeg available, in which case they
  can compile\n      the with the constraint `lpeg +rely-on-shared-lpeg-library`.\n
  \     `lpeg` and `re` are always made available in global variables,\n      without
  the need for a `require`.\n\n    + Set `lpeg` and `re` as globals; allow shared
  lib access via `require`.\n      The `lpeg` and `re` modules are loaded into globals
  of the respective\n      name, but they are not necessarily registered as loaded
  packages. This\n      ensures that\n\n      - the built-in library versions are
  preferred when setting the globals,\n      - a shared library is used if pandoc
  has been compiled without `lpeg`,\n        and\n      - the `require` mechanism
  can be used to load the shared library if\n        available, falling back to the
  internal version if possible and\n        necessary.\n\n    + Fix argument order
  in constructor `pandoc.Cite` (Albert Krewinkel).\n      This restores the old behavior;
  argument order had been switched\n      accidentally in pandoc 2.15.\n\n    + Add
  Pushable instance for `ReaderOptions` (Albert Krewinkel).\n\n    + Allow to pass
  custom reader options to `pandoc.read` as an\n      optional third argument (#7656,
  Albert Krewinkel).\n      The object can either be a table or a ReaderOptions value\n
  \     like `PANDOC_READER_OPTIONS`. Creating new ReaderOptions objects is\n      possible
  through the new constructor `pandoc.ReaderOptions`.\n\n    + Display Pandoc values
  using their native Haskell representation\n      (Albert Krewinkel).\n\n    + Require
  latest hslua (2.0.1) (#7661, #7657, Albert Krewinkel).\n      This fixes issues
  with\n\n      - misleading error messages when a required function parameter is\n
  \       omitted;\n      - absent properties still being listed in the output of
  `pairs`; and\n      - alias accessing leading to errors instead of returning `nil`,
  e.g.\n        with `(pandoc.Str '').identifier`.\n\n    + Add missing space in \"package
  not found\" message (#7658, Albert\n      Krewinkel).\n\n  * Update build files
  (#7696, Fabi√°n Heredia Montiel).\n    Drop old windows 32-bit constraints.\n    Update
  cabal `tested-with` field to correspond to `ci.yml` matrix\n\n  * Remove unneeded
  package dependencies from benchmark target.\n\n  * Require ghc >= 8.6, base >= 4.12.\n
  \   This allows us to get rid of the old custom prelude and\n    some crufty cpp.
  \ But the primary reason for this is that\n    conduit has bumped its base lower
  bound to 4.12, making it\n    impossible for us to support lower base versions.\n\n
  \ * Require Cabal 2.4.  Use wildcards to ensure that all pptx tests are\n    included
  (#7677).\n\n  * Update `bash_completion.tpl` (S.P.H.).\n\n  * Add `data/creole.lua`
  as sample custom reader.\n\n  * Add `doc/custom-readers.md` and `doc/custom-writers.md`.\n\n
  \ * `doc/lua-filters.md`: add section on global modules, including lpeg\n    (Albert
  Krewinkel).\n\n  * `MANUAL.txt`: update table of exit codes and corresponding errors\n
  \   (Albert Krewinkel).\n\n  * Use latest texmath.\n\n## pandoc 2.16.1 (2021-11-02)\n\n\n
  \ * Docx reader:  don't let first line indents trigger block quotes (#7655).\n    This
  fixes a regression introduced in pandoc 2.15.\n\n  * Docx writer: use `getTimestamp`
  for modification times in\n    reference.docx (#7654).  This ensures that when `SOURCE_DATE_EPOCH`
  is\n    set, the modification times of files taken from the reference.docx will\n
  \   be set deterministically, allowing for reproducible builds.\n\n  * Lua subsystem
  (Albert Krewinkel):\n\n    + Load module `pandoc.path` on startup (#7524).  Previously
  the module\n      always had to be loaded via `require 'pandoc.path'`.\n    + Fix
  typo in SoftBreak constructor.\n    + Re-add `content` property to Strikeout elements.\n
  \     Fixes a regression introduced in 2.15.\n    + Be more forgiving when retrieving
  the Image `caption` property.\n      Fixes a regression introduced in 2.15.\n    +
  Display Attr values using their native Haskell representation.\n    + Allow omitting
  the 2nd parameter in pandoc.Code constructor.\n      Fixes a regression introduced
  in 2.15 which required users to always\n      specify an Attr value when constructing
  a Code element.\n    + Allow to compare, show Citation values.  Comparisons of Citation\n
  \     values are performed in Haskell; values are equal if they represent\n      the
  same Haskell value. Converting a Citation value to a string\n      now yields its
  native Haskell string representation.\n    + Restore List behavior of MetaList (#7650).
  \ Fixes a regression\n      introduced in 2.16 which had MetaList elements lose\n
  \     the `pandoc.List` properties.\n    + Restore `content` property on Header
  elements.\n    + Ensure Block elements have all expected properties.\n    + Ensure
  Inline elements have all expected properties.\n\n  * Allow tasty-bench 0.3.x.\n\n##
  pandoc 2.16 (2021-10-31)\n\n  * Switch back from HsYAML to yaml for parsing YAML
  metadata (#6084).\n    HsYAML is around 20 times slower in parsing large YAML bibliographies.\n
  \   In addition, HsYAML is not being actively maintained.  This sets us back\n    in
  our attempts to free ourselves from C dependencies (#4535).  But I\n    don't see
  a good alternative until a faster pure Haskell parser is available.\n    Notes:\n\n
  \   + We've removed the FromYAML instances for all types that had them, since\n
  \     this is a HsYAML-specific typeclass [API change].  (The yaml package just\n
  \     uses From/ToJSON instead of having a dedicated From/ToYAML class.)\n    +
  Unlike HsYAML (in the configuration we were using), yaml parses 'Y', 'N',\n      'Yes',
  'No', 'On', 'Off' as boolean values.  Users may need to quote these\n      when
  they are meant to be interpreted as strings.  Similarly, 'null' is\n      parsed
  as a YAML null value (and will be treated as an empty string by\n      pandoc rather
  than the string 'null').  Quoting it will force it to be\n      interpreted as a
  string.\n    + Some tests had to be adjusted accordingly.\n    + Pandoc now behaves
  in a more useful way when the YAML metadata contains\n      escaping errors: instead
  of just failng silently and falling back to\n      some other interpretation of
  the section, it raises a YAML parsing error.\n\n  * Markdown writer: Ensure that
  special values are quoted in YAML metadata.\n    These include \"Y\", \"yes\", \"on\",
  and \"off\", which are now (with yaml library)\n    considered boolean values, as
  well as \"null\".\n\n  * Change JSON encodings of some types.\n\n    + For LineEnding
  use lowercase constructors, e.g. `crlf`, `native`.\n    + For HTMLSlideVariant use
  lowercase constructors.\n    + For ReaderOptions use e.g. `default-image-extension`\n
  \     instead of `readerDefaultImageExtension` for field names.\n    + For Extension,
  use e.g. `tex_math_dollars` instead of\n      `Ext_tex_math_dollars` as constructor.\n
  \   + For Extensions, use an array of Extensions, instead of\n      an object wrapping
  the tag `Extensions` and an integer.\n      (The integer representation is not supposed
  to be part of the\n      public API.)\n    + For Opt, use field names like `tab-stop`
  instead of `optTabStop`.\n\n  * Docx writer:\n\n    + Add IDs to native_numbering
  test (Tristan Stenner).\n    + Move \": \" out of the caption bookmark (Tristan
  Stenner).\n      This is needed so that native references to the figure are included
  as\n      \"As seen in Figure X, it is...\" instead of \"As seen in [Figure: X,
  it is...\"\n\n  * Lua (Albert Krewinkel, except as noted):\n\n    + Use hslua module
  abstraction where possible.\n    + Fix placement of tests for Block elements in
  pandoc module tests\n    + Increase strictness when getting attribute keys\n    +
  Re-add `t` and `tag` property to Attr values.\n      Removal of these properties
  from Attr values was a regression.\n    + Fix `pandoc.utils.stringify` regression.
  \ The `pandoc.utils.stringify`\n      function returned empty strings when called
  with a string argument.\n    + Fix a copy/paste bug in Lua marshalling code (John
  MacFarlane, #7639).\n      This caused links to be changed to figures when Lua filters
  changed\n      link properties.\n    + Re-add `content` property to Link elements
  (#7647).\n      This was a regression introduced in version 2.15.\n    + Generate
  constants in module pandoc programmatically.\n    + Marshal SimpleTable, ListAttributes,
  Citation, and Block values as\n      userdata objects.  Properties of Block values
  are marshalled lazily,\n      which generally improves performance considerably.
  Script users may also\n      notice the following differences:\n\n      - Block
  element properties can no longer be accessed by numerical\n        indexing of the
  `.c` field. The `.c` property now serves as an alias\n        for `.content`, so
  some filter that used this undocumented method\n        for property access may
  continue to work, while others will need to\n        be updated and use proper property
  names.\n      - The marshalled Block elements now have a `show` method, and a\n
  \       `__tostring` metamethod. Both return the Haskell string\n        representation
  of the element.\n      - Block values now have the Lua type `userdata` instead of
  `table`.\n\n  * Add a short guide to pandoc's sources (Albert Krewinkel).\n\n  *
  Fix epub files in epub reader tests, so that they are valid\n    according to epubcheck
  (#7586).\n\n  * Allow time 1.13.\n\n  * Require latest skylighting (0.12.1).\n\n
  \ * Fix build on GHC 9.2 (Joseph C. Sible).\n\n  * Fix trypandoc so it builds with
  aeson > 2.\n\n\n## pandoc 2.15 (2021-10-23)\n\n  * Add `--sandbox` option  (#5045).\n\n
  \   + Add sandbox feature.  When this option is used, readers and writers\n      only
  have access to input files (and other files specified directly on\n      command
  line).  This restriction is enforced in the type system.\n    + Filters, PDF production,
  custom writers are unaffected.  This\n      feature only insulates the actual readers
  and writers, not\n      the pipeline around them in Text.Pandoc.App.\n    + Note
  that when `--sandboxed` is specified, readers won't have\n      access to the resource
  path, nor will anything have access to\n      the user data directory.\n\n  * `--self-contained`:
  Fix bug that caused everything to be made a data\n    URI (#7635, #7367).  We only
  need to use data URIs in certain cases, but\n    due to a bug they were being used
  always.\n\n  * Pandoc will now fall back to latin1 encoding for inputs that can't
  be\n    read as UTF-8.  This is what it did previously for content fetched\n    from
  the web and not marked as to content type. It makes sense to do\n    the same for
  local files.  In this case a `NotUTF8Encoded` warning\n    will be issued, indicating
  that pandoc is interpreting the input as latin1.\n\n  * Markdown reader:\n\n    +
  Don't parse links or bracketed spans as citations (#7632).\n      Previously pandoc
  would parse `[link to (@a)](url)` as a\n      citation; similarly `[(@a)]{#ident}`.
  \ This is undesirable.  One should\n      be able to use example references in citations,
  and even if `@a` is\n      not defined as an example reference, `[@a](url)` should
  be a link\n      containing an author-in-text citation rather than a normal citation\n
  \     followed by literal `(url)`.\n    + Fix interaction of `--strip-comments`
  and list parsing (#7521).\n      Use of `--strip-comments` was causing tight lists
  to be rendered as\n      loose (as if the comment were a blank line).\n    + Fix
  parsing bug for math in bracketed spans and links (#7623).\n      This affects math
  with unbalanced brackets (e.g. `$(0,1]$`)\n      inside links, images, bracketed
  spans.\n    + Fix code blocks using `--preserve-tabs` (#7573).  Previously they\n
  \     did not behave as the equivalent input with spaces would.\n\n  * DocBook reader:\n\n
  \   + Honor linenumbering attribute (Samuel Tardieu).\n    The attribute DocBook
  `linenumbering=\"numbered\"` on code blocks\n    maps to the `numberLines` class
  internally.\n\n  * LaTeX reader:\n\n    + Implement siunitx v3 commands (#7614).\n
  \     We support `\\unit`, `\\qty`, `\\qtyrange`, and `\\qtylist`\n      as synonyms
  of `\\si`, `\\SI`, `\\SIrange`, and `\\SIlist`.\n    + Properly handle `\\^` followed
  by group closing (#7615).\n    + Recognize that `\\vadjust` sometimes takes \"pre\"
  (#7531).\n    + Ignore (and gobble parameters of) CSLReferences environment (#7531).\n
  \     Otherwise we get the parameters as numbers in the output.\n    + Restrict
  `\\endinput` to current file (Simun Schuster).\n\n  * RST reader: handle escaped
  colons in reference definitions (#7568).\n\n  * HTML reader:\n\n    + Handle empty
  tbody element in table (#7589).\n\n  * Ipynb reader (Kolen Cheung):\n\n    + Get
  cell output mime from `raw_mimetype` in addition to `format`.\n      (`format` is
  what the spec calls for, but `raw_mimetype` is\n      often used in practice; see
  jupyter/nbformat#229).\n    + Add more formats that can be handled as \"raw\" cells.\n
  \   + Fix mime type for `rst`.\n    + Support `text/markdown`, which is now a supported
  mime type for raw\n      output (#7561).\n\n  * RTF reader:\n\n    + Support `\\binN`
  for binary image data.\n    + If doc begins with {\\rtf1 ... } only parse its contents.\n
  \     Some documents seem to have non-RTF (e.g. XML) material after the\n      `{\\rtf1
  ... }` group.\n    + Ignore `\\pgdsc` group.  Otherwise we get style names treated
  as test.\n    + Better handling of `\\*` and bookmarks.  We now ensure that groups\n
  \     starting with `\\*` never cause text to be added to the document.\n      In
  addition, bookmarks now create a span between the start\n      and end of the bookmark,
  rather than an empty span.\n\n  * Docx reader:\n\n    + Avoid blockquote when parent
  style has more indent (Milan Bracke).\n      When a paragraph has an indentation
  different from the parent (named)\n      style, it used to be considered a blockquote.
  But this only makes sense\n      when the paragraph has more indentation. So this
  commit adds a check\n      for the indentation of the parent style.\n    + Fix handling
  of empty fields (Milan Bracke).  Some fields only\n      have an `instrText` and
  no content, Pandoc didn't understand these,\n      causing other fields to be misunderstood
  because it seemed like\n      a field was still open when it wasn't.\n    + Implement
  PAGEREF fields (Milan Bracke).  These fields, often used\n      in tables of contents,
  can be a hyperlink.\n    + Fix handling of nested fields (Milan Bracke).  Fields
  delimited by\n      `fldChar` elements can contain other fields. Before, the nested\n
  \     fields would be ignored, except for the end, which would be\n      considered
  the end of the parent field.\n    + Add placeholder for word diagram instead of
  just omitting it (Ezwal).\n\n  * Org reader:\n\n    + Don't parse a list as first
  item in a list item (#7557).\n    + Allow an initial `:PROPERTIES:` drawer to add
  to metadata (#7520).\n\n  * Docx writer:\n\n    + Make id used in `native_numbering`
  predictable (#7551).\n    If the image has the id IMAGEID, then we use the id ref_IMAGEID\n
  \   for the figure number.  This allows one to create a filter that\n    adds a
  figure number with figure name, e.g.\n    `<w:fldSimple w:instr=\" REF ref_superfig
  \"><w:r><w:t>Figure X</w:t>\n    </w:r></w:fldSimple>`.\n    If an image lack an
  id, an id of the form `ref_fig1` is used.\n  + Ensure we have unique ids for `wp:docPr`
  and `pic:cNvPr` elements\n    (#7527, #7503).\n  + Handle SVG images (#4058).  This
  change has several parts:\n    - In Text.Pandoc.App, if the writer is docx, we fill
  the media\n      bag and attempt to convert any SVG images to PNG, adding these\n
  \     to the media bag.  The PNG backups have the same filenames as\n      the SVG
  images, but with an added .png extension.  If the conversion\n      cannot be done
  (e.g. because rsvg-convert is not present),\n      a warning is omitted.\n    -
  In Text.Pandoc.Writers.Docx, we now use Word 2016's syntax for\n      including
  SVG images. If a PNG fallback is present in the media bag,\n      we include a link
  to that too.\n\n  * Powerpoint writer (Emily Bourke):\n\n    + Add support for more
  layouts (#5097).  Up til now, four layouts\n      were supported: \"Title Slide\"
  (used for the automatically generated\n      metadata slide), \"Section Header\"
  (used for headings above slide\n      level), \"Two Column\" (used when there's
  a columns div), \"Title and\n      Content\" (used for all other slides).  We now
  support three\n      additional layouts: \"Comparison\", \"Content with Caption\",
  and\n      \"Blank\".  The manual describes the logic that determines which\n      layout
  is used for a slide.  Layouts may be customized in the\n      reference doc.\n    +
  Support specifying slide background images using a `background-image`\n      attribute
  on the slide's heading.  Only the \"stretch\" mode is supported,\n      and the
  background image is centred around the slide in the image's\n      larger axis,
  matching the observed default behaviour of PowerPoint.\n    + Add support for incremental
  lists (through same methods as in\n      other slide writers) (#5689).\n    + Copy
  embedded fonts from reference doc.\n    + Include all themes in output archive.\n
  \   + Fix list level numbering (#4828, #4663).  In PowerPoint,\n      the content
  of a top-level list is at the same level as the content\n      of a top-level paragraph:
  the only difference is that a list style\n      has been applied.  Previously, the
  writer incremented the paragrap\n      h level on each list, turning what should
  be top-level lists into\n      second-level lists.\n    + Line up list continuation
  paragraphs.  This commit\n      changes the `marL` and `indent` values used for
  plain paragraphs\n      and numbered lists, and changes the spacing defined in the\n
  \     reference doc master for bulleted lists.  For paragraphs, there is\n      now
  a left-indent taken from the `otherStyle` in the master.\n      For numbered lists,
  the number is positioned where the text would be\n      if this were a plain paragraph,
  and the text is indented to the next\n      level. This means that continuation
  paragraphs line up nicely with\n      numbered lists.  Existing reference docs may
  need to be modified so\n      that `otherStyle` and `bodyStyle` indent levels match,
  for this\n      feature to work with them.\n    + Consolidate text runs when possible
  (jgm).  This slims down the output\n      files by avoiding unnecessary text run
  elements.\n    + Support footers in the reference doc.\n      There is one behaviour
  which may not be immediately obvious: if the\n      reference doc specifies a fixed
  date (i.e. not automatically updating),\n      and there‚Äôs a date specified in the
  metadata for the document, the\n      footer date is replaced by the metadata date.\n
  \   + Fix presentation rel numbering.  Before now, the numbering of `rId`s\n      was
  inconsistent when making the presentation XML and when making\n      the presentation
  relationships XML.\n    + Don‚Äôt add relationships unnecessarily.  Before now, for
  any layouts\n      added to the output from the default reference doc, the relationships\n
  \     were unconditionally added to the output. However, if there was already\n
  \     a layout in slideMaster1 at the same index then that results in\n      duplicate
  relationships.\n    + If slide level is 0, don't insert a slide break between a
  heading\n      and a following table, \"columns\" div, or paragraph starting\n      with
  an image.\n    + Fix capitalisation of `notesMasterId`.\n    + Restructure tests.\n\n
  \ * Asciidoc writer:\n\n    + Translate numberLines attribute to `linesnum` switch
  (Samuel Tardieu).\n    + Improve escaping for `--` in URLs (#7529).\n\n  * LaTeX
  writer:\n\n    + Make babel use more idiomatic (#7604, hseg).  Use babel's\n      bidi
  implementation.  Import babel languages individually instead\n      of as package
  options.  Move `header-includes` to after\n      `babel` setup so it can be modified.\n
  \   + Use babel, not polyglossia, with xelatex.  Previously polyglossia\n      worked
  better with xelatex, but that is no longer the case, so\n      we simplify the code
  so that babel is used with all latex\n      engines.  This involves a change to
  the default LaTeX template.\n\n  * Markdown writer:\n\n    + Avoid bad wraps at
  the Doc Text level.  Previously we tried to\n      do this at the Inline list level,
  but it makes more sense to\n      intervene on breaking spaces at the Doc Text level.\n
  \   + Use `underline` class rather than `ul` for underline.\n      This only affects
  output with `bracketed_spans` enabled.\n      The markdown reader parses spans with
  either `.ul` or `.underline` as\n      Underline elements, but we're moving towards
  preferring the latter.\n\n  * RST writer:\n\n    + Properly handle anchors to ids
  with spaces or leading underscore\n      (#7593).  In this cases we need the quoted
  form, e.g.\n      ```\n      .. _`foo bar`:\n\n      .. _`_foo`:\n      ```\n      Side
  note: rST will \"normalize\" these identifiers anyway,\n      ignoring the underscore.\n\n
  \ * HTML writer:\n\n    + Render `\\ref` and `\\eqref` as inline math, not display
  (see #7589).\n    + Pass through `\\ref` and `\\eqref` if MathJax is used (#7587).\n
  \   + Pass through inline math environments with KaTeX.\n    + Support `--reference-location`
  for HTML output (#7461,\n      Francesco Mazzoli).\n    + Set \"hash\" to True by
  default (for reveal.js) (#7574).  See #6968\n      where the motivation for setting
  \"hash\" to True is explained.\n\n  * Native writer:  Use pretty-show to format
  native output (#7580).\n    Previously we used our own homespun formatting.  But
  this produces\n    over-long lines that aren't ideal for diffs in tests.\n    Performance
  is slower by about a factor of 10, but this isn't\n    really a problem because
  native isn't suitable as a serialization\n    format. (For serialization you should
  use json, because the reader\n    is so much faster than native.)\n\n  * Org writer:\n\n
  \   + Don't indent contents of code blocks.  We previously indented them\n      by
  two spaces, following a common convention.  Since the convention\n      is fading,
  and the indentation is inconvenient for copy/paste, we are\n      discontinuing
  this practice.\n    + Update list of supported source languages in org writer (#5440).\n\n
  \ * Ipynb writer (Kolen Cheung):\n\n    + Improve round trip identity for raw cell
  output.\n      See jupyter/nbformat#229.  The Jupyter ecosystem, including nbconvert,\n
  \     lab and notebook, deviated from their own spec in nbformat, where\n      they
  used the key `raw_mimetype` instead of `format`.  Moreover,\n      the mime-type
  of rst used in Jupyter deviated from that suggested by\n      https://docutils.sourceforge.io/FAQ.html
  and is defined as\n      `text/restructuredtext` when chosen from \"Raw NBConvert
  Format\" in\n      Jupyter.  The new behavior should matche the real world usage
  better,\n      hence improving the round-trip \"identity\" in raw-cell.\n    + Add
  more formats that can be handled as \"raw\" cells.\n\n  * EPUB writer:\n\n    +
  Add EPUB3 subject metadata (authority/term) (nuew).\n      This adds the ability
  to specify EPUB 3 `authority` and `term` specific\n      refinements to the `subject`
  tag. Specifying a plain `subject` tag in\n      metadata will function as before.\n
  \   + Treat epub:type \"frontispiece\" as front matter (#7600).\n\n  * reveal.js
  template: Fix line numbers in source code (#7634).\n    We need `overflow: visible`
  for these to work, and reveal's\n    default css disables this.  So we re-enable
  it in the default template.\n\n  * Text.Pandoc.Writers.Shared:\n\n    + Export `splitSentences`
  as a Doc Text transform [API change].\n      Use this in man/ms.  We used to attempt
  automatic sentence\n      splitting in man and ms output, since sentence-ending\n
  \     periods need to be followed by two spaces or a newline in\n      these formats.
  \ But it's difficult to do this reliably at\n      the level of `[Inline]`.\n\n
  \ * Text.Pandoc.Translations: small revisions for compatibility\n    with aeson
  2.\n\n  * Don't prepend `file://` to `--syntax-definition` on Windows (#6374).\n
  \   This was a fix for a problem in skylighting, but this\n    problem doesn't exist
  now that we've moved from HXT to xml-conduit.\n\n  * Text.Pandoc.Extensions:\n\n
  \   + Add `Ext_footnotes` to default `gfm` etxensions.  Now `gfm`\n      supports
  footnotes.\n    + Alphabetize Extension constructors (also affects `--list-extensions`).\n\n
  \ * Text.Pandoc.Citeproc.Util: Better implementation of `splitStrWhen`.\n    Previously
  the citeproc code had two less efficient\n    implementations.\n\n  * Update documentation
  for definition_list extension (#7594).\n    In 2015, we relaxed indentation requirements
  for the first\n    line of a definition (see commit d3544dc and issue #2087), but\n
  \   the documnentation wasn't updated to reflect the change.\n\n  * Text.Pandoc.Citeproc.BibTeX:
  Fix expansion of special strings in series\n    e.g. `newseries` or `library` (#7591).
  \ Expansion should not happen\n    when these strings are protected in braces, or
  when they're\n    capitalized.\n\n  * Text.Pandoc.Logging: add `NotUTF8Encoded`
  constructor to `LogMessage`\n    [API change].\n\n  * Text.Pandoc.App.FormatHeuristics:
  remove `.tei.xml` extension for TEI\n    (#7630).  This never worked, because `takeExtension`\n
  \   only returns `.xml`.  So it won't be missed if we remove it.\n\n  * Text.Pandoc.Image:\n\n
  \   + Generalize `svgToPng` to MonadIO.\n    + `svgToPng`, change first parameter
  from WriterOptions to Int.\n\n  * Text.Pandoc.Class:\n\n    + Add `readStdinStrict`
  method to PandocMonad [API change].\n    + Generalize type of `extractMedia` [API
  change].\n      It was uselessly  restricted to PandocIO, instead of any\n      instance
  of PandocMonad and MonadIO.\n\n  * Text.Pandoc.Class.PandocIO: derive MonadCatch,
  MonadThrow, MonadMask.\n    This allows us to use `withTempDir` [API change].\n\n
  \ * Add module Text.Pandoc.Class.Sandbox, defining\n   `sandbox`.  Exported via
  Text.Pandoc.Class. [API change]\n\n  * Text.Pandoc.Filter:  Generalize type of `applyFilters`\n
  \   from PandocIO to any instance of MonadIO and PandocMonad [API change].\n\n  *
  Text.Pandoc.PDF: generalize type of `makePDF`:\n    instead of PandocIO, it can
  be used in any instance of\n    PandocMonad, MonadIO, and MonadMask [API change].\n\n
  \ * Lua subsystem and custom writers: generalize types from PandocIO\n    to any
  instance of PandocMonad and MonadIO [API change].\n    The type of `runLua` is now\n\n
  \       (PandocMonad m, MonadIO m) =>\n        LuaE PandocError a -> m (Either PandocError
  a)\n\n    The change from `Lua` to `LuaE PandocError` is due to the switch to\n
  \   hslua-2.0; see next item.\n\n  * Lua modules (Albert Krewinkel):\n\n    + Switch
  to hslua-2.0.  The new HsLua version takes a somewhat different\n      approach
  to marshalling and unmarshalling, relying less on typeclasses\n      and more on
  specialized types. This allows for better performance and\n      improved error
  messages.  Furthermore, new abstractions allow to\n      document the code and exposed
  functions.\n    + Marshal Version values, Inline elements, Attr elements,\n      and
  Pandoc elements as userdata.\n    + Remove deprecated inline constructors `DoubleQuoted`,\n
  \     `SingleQuoted`, `DisplayMath`, and `InlineMath`.\n    + Attr values are no
  longer normalized when assigned to an Inline\n      element property.\n    + It's
  no longer possible to access parts of Inline elements via\n      numerical indexes.
  E.g., `pandoc.Span('test')[2]` used to give\n      `pandoc.Str 'test'`, but yields
  `nil` now. This was undocumented\n      behavior not intended to be used in user
  scripts. Use named properties\n      instead.\n    + Accessing `.c` to get a JSON-like
  tuple of all components no longer\n      works. This was undocumented behavior.\n
  \   + Only known properties can be set on an element value. Trying to set a\n      different
  property will now raise an error.\n    + Adds a new `pandoc.AttributeList()` constructor,
  which creates the\n      associative attribute list that is used as the third component
  of\n      `Attr` values. Values of this type can often be passed to constructors\n
  \     instead of `Attr` values.\n    + Convert IOErrors to PandocErrors in `pandoc.pipe`
  function (#7523).\n\n  * Text.Pandoc.PDF:  Previously we had to run `runIOorExplode`
  inside\n    `withTempDir`.  Now that PandocIO is an instance of MonadMask, this
  is\n    no longer necessary.\n\n  * Text.Pandoc.App:\n\n    + Reorganize to make
  it easier to limit IO in main loop.\n      Previously we used liftIO fairly liberally.
  \ The code has\n      been restructured to avoid this.\n    + Move output-file writing
  out of PandocMonad action.\n\n  * Text.Pandoc.App.OutputSettings: Generalize some
  types\n    so we can run this with any instance of PandocMonad and MonadIO,\n    not
  just PandocIO.\n\n  * Use `simpleFigure` builder in readers  and `SimpleFigure`\n
  \   pattern synonym in writers (Aner Lucero).\n\n  * Allow time 1.12.\n\n  * Use
  skylighting-0.12, skylighting-core-0.12.\n    This fixes highlighting issues with
  typescript, scala, and other\n    syntaxes that include keyword lists from different
  syntaxes.\n\n  * Use citeproc 0.6, commonmark 0.2.2.1, commonmark-extensions 0.2.2,\n
  \   texmath 0.12.3.2, ipynb 0.1.0.2.  (These changes also allow\n    building with
  aeson >= 2.)\n\n  * Require doclayout >= 0.3.1.1.  This fixes recognition of \"real
  widths\"\n    of emoji characters, which is important for tabular layout.\n\n  *
  Cut out over 100K of fat in epub test golden files.\n\n  * Make `test/epub/wasteland.epub`
  valid.\n\n  * Add missing `%` on some command tests.\n    This prevented `--accept`
  from working properly.\n\n  * Command tests: raise error if command doesn't begin
  with `%`.\n\n  * OOXML tests: use pretty-printed form to display diffs.\n    Otherwise
  everything is on one line and the diff is uninformative.\n\n  * Fix compareXML helper
  in Tests.Writers.OOXML.\n    Given how it is used, we were getting \"mine\" and
  \"good\"\n    flipped in the test results.\n\n  * MANUAL.txt:\n\n    + Clarify `attributes`
  extension support (William Lupton).\n    + Document formats affected by `--reference-location`.\n
  \   + Document error code 25\n    + Add some more info regarding `--slide-level=0`
  (Salim B).\n    + Add more to security section of manual.\n    + Mention support
  of `title-toc` (#7171, Christophe Dervieux).\n\n  * doc/lua-filters.md:\n\n    +
  Add missing type for Image title (Quinn).\n    + Improve order of Image fields (Quinn).\n
  \   + Rephrase pandoc.path docs (#7548, Quinn).\n    + Do not leak working directory
  in TikZ filter (Jeroen de Haas).\n\n## pandoc 2.14.2 (2021-08-21)\n\n  * Allow `--slide-level=0`
  (#7476). When the slide level is set\n    to 0, headings won't be used at all in
  splitting the document\n    into slides. Horizontal rules must be used to separate
  slides.\n\n  * Add RTF reader (#3982). `rtf` is now supported as an input\n    format
  as well as an output format. New module\n    Text.Pandoc.Readers.RTF (exporting
  `readRTF`). [API change]\n\n  * HTML reader:  treat comments as blank when parsing
  (#7482).\n\n  * Markdown reader:\n\n    + Fix raw LaTeX injection issue (#7497).
  Using a code block\n      containing `\\end{verbatim}`, one could inject raw TeX
  into a\n      LaTeX document even when `raw_tex` is disabled. Thanks to\n      Augustin
  Laville for noticing the bug.\n    + Multimarkdown sub- and superscripts (#5512,
  OCzarnecki).\n      Added an extension `short_subsuperscripts` which modifies\n
  \     the behavior of `subscript` and `superscript`, allowing\n      subscripts
  or superscripts containing only alphanumerics\n      to end with a space character
  (eg. `x^2 = 4` or `H~2 is\n      combustible`).  This improves support for multimarkdown.\n\n
  \ * RST reader: Fix `:literal:` includes (#7513).  These should create\n    code
  blocks, not insert raw RST.\n\n  * LaTeX reader:\n\n    + Proper implicit grouping
  around environment macros.\n    + Support `\\global` before `\\def`, `\\let`, etc.
  (#7494).\n    + Fix scope for LaTeX macros (#7494). They should by default\n      scope
  over the group in which they are defined (except `\\gdef`\n      and `\\xdef`, which
  are global). In addition, environments must\n      be treated as groups.\n    +
  Improve handling of plain TeX macro primitives (#7474).\n      Fixed semantics for
  `\\let`.\n    + Implement `\\edef`, `\\gdef`, and `\\xdef`.\n\n  * Docx reader:
  Improve docx reader's robustness in extracting\n    images (#7511). The docx reader
  made some assumptions about\n    how docx containers were laid out that were not
  always true, with\n    the result that some images in documents did not get\n    extracted.\n\n
  \ * LaTeX writer: Increase table column width precision (#7466,\n    Peter Fabinski).
  In some cases, the rounding performed by the\n    LaTeX table writer would introduce
  visible overrun outside\n    the text area. This adds two more decimal places to
  the width\n    values.\n\n  * Powerpoint writer:\n\n    + Include image title in
  description (#7352, Emily Bourke). The\n      image title (i.e. `![alt text](link
  \"title\")`) was previously\n      ignored when writing to pptx. This commit includes
  it in\n      PowerPoint's description of the image, along with the link.\n    +
  Select layouts from reference doc by name (Emily Bourke). Until\n      now, users
  had to make sure that their reference doc contains\n      layouts in a specific
  order: the first four layouts in the file\n      had to have a specific structure.
  Now the layout selection uses\n      the layout names rather than order: users must
  make sure their\n      reference doc contains four layouts with specific names,
  and if\n      a layout with the right name isn‚Äôt found pandoc will emit\n      a
  warning and use the corresponding layout from the default\n      reference doc as
  a fallback.\n\n  * Docx writer: be sensitive to the `native_numbering` extension\n
  \   (#7499).  Figure and table numbers are now only included if\n    `native_numbering`
  is enabled.  (By default it is disabled.)\n    This is a behavior change with respect
  to 2.14.1, but the\n    default behavior is now that of previous versions.  The\n
  \   change was necessary to avoid incompatibilities between\n    pandoc's native
  numbering and third-party cross reference\n    filters like pandoc-crossref.\n\n
  \ * RTF writer:\n\n    + Omit `\\bin` in `\\pict`. According to the spec, this is
  not\n      needed or wanted when the data is in hexadecimal format, as\n      here.\n
  \   + Emit `\\outlinelevel`` for section headings.\n\n  * RTF template: specify
  font family for fixed-width font f1.\n    According to the spec, this is mandatory.\n\n
  \ * LaTeX writer: Use ulem for underline (#7351). ulem is\n    conditionally included
  already when the `strikeout` variable\n    is set, so we set this when there is
  underlined text, and use\n    `\\uline` instead of `\\underline`. This fixes wrapping
  for\n    underlined text.\n\n  * Text.Pandoc.Citeproc:\n\n    + Revise citeproc
  code to fit new citeproc 0.5 API (thanks to\n      Benjamin Bray). Linkification
  of URLs in the bibliography\n      is now done in the citeproc library, depending
  on the\n      setting of an option.  We set that option depending on the\n      value
  of the metadata field `link-bibliography` (defaulting\n      to true, for consistency
  with earlier behavior). If a DOI,\n      PMID, PMCID, or URL field is present but
  not explicitly\n      rendered, the title (or if no title, the whole entry) is\n
  \     hyperlinked. These changes implement the recommendations\n      from the draft
  CSL v1.0.2 spec (Appendix VI):\n      <https://github.com/citation-style-language/documentation/blob/master/specification.rst#appendix-vi-links>\n
  \   + Avoid odd handling of quotes. Recent citeproc changes\n      allow us to ignore
  Quoted elements; citeproc now uses its own\n      method for represented quoted
  things, and only localizes and\n      flipflops quotes it adds itself. Convert Quoted
  in bib\n      entries to special Spans before passing them off to\n      citeproc.
  This ensures that we get proper localization and\n      flipflopping if, e.g., quotes
  are used in titles\n      (jgm/citeproc#87).\n    + Removed quote localization from
  citeproc processing.\n      This is now done in citeproc itself.\n\n  * Text.Pandoc.Logging:
  Add PowerpointTemplateWarning log message\n    type [API change] (Emily Bourke).\n\n
  \ * Text.Pandoc.Extension: Add `Ext_short_subsuperscripts`\n    constructor to `Extension`
  [API change] (OCzarnecki).\n\n  * Various sample.lua editorial fixes (#7493, #7487,
  William\n    Lupton).\n\n  * Bump base-compat version so we get compatibility with
  base 4.12.\n\n  * Use Prelude from base-compat for ghc 8.4 too.\n\n  * Add haskell-language-server
  to shell.nix (#7496, Emily Bourke).\n\n  * Tests.Helpers: export testGolden and
  use it in RTF reader.\n    This gives a diff output on failure.\n\n  * Remove obsolete
  and incorrect sentence in `--slide-level` docs.\n\n  * Add internal module Text.Pandoc.Network.HTTP,
  exporting\n    `urlEncode`.\n\n  * Text.Pandoc.Parsing: `parseFromString`: preserve
  at least\n    the source directory (#7464). Previously we just set the\n    source
  name to \"chunk\" when parsing from strings, to avoid\n    misleading source positions.
  This had the side effect that\n    `rebase_relative_paths` would break inside sections
  that\n    were parsed as strings. So, now we use\n    \"ORIGINAL_SOURCE_PATH_chunk\"
  instead of just \"chunk\".\n\n  * Text.Pandoc.MIME: use image/x-xcf instead of application/x-xcf\n
  \   (#7454).\n\n  * Don‚Äôt compare `cdLine` in OOXML golden tests (Emily Bourke).\n
  \   The `cdLine` field gives the line of the file some CData was\n    found on,
  which reflects irrelevant formatting differences.\n\n  * Provide more detailed XML
  diff in tests (Emily Bourke).\n\n  * OOXML tests: silence warnings. These can make
  the test output\n    confusing, making people think tests are failing when they're\n
  \   passing.\n\n  * INSTALL.md: Add GitLab CI/CD example (#7448, Veratyr).\n\n  *
  MANUAL.txt\n\n    - Clarifications (William Lupton).\n    - Add a note on security
  risks of include directives.\n\n  * Document use of the 'underline' class (#7492,
  #7484, William\n    Lupton).\n\n  * Add a FAQ about the \"Cannot allocate memory\"
  error on M1 macs.\n\n  * Use texmath 0.12.3.1.\n\n  * Use released citeproc 0.5.\n\n
  \ * Remove dependency on HTTP package (#7456, mt_caret).\n\n## pandoc 2.14.1 (2021-07-18)\n\n
  \ * Text.Pandoc.ImageSize: Add Tiff constructor for ImageType (#7405)\n    [Minor
  API change].  This allows pandoc to get size information from\n    tiff images.\n\n
  \ * Markdown reader:  don't try to read contents in self-closing HTML tag.\n    Previously
  we had problems parsing raw HTML with self-closing\n    tags like `<col/>`. The
  problem was that pandoc would look\n    for a closing tag to close the markdown
  contents, but the\n    closing tag had, in effect, already been parsed by `htmlTag`.\n\n
  \ * LaTeX reader:\n\n    + Avoid trailing hyphen in translating languages (#7447).\n
  \     Previously `\\foreignlanguage{english}` turned into `<span lang=\"en-\">`.\n
  \     The same issue affected Arabic.\n    + Support `\\cline` in LaTeX tables (#7442).\n
  \   + Improved parsing of raw LaTeX from Text streams (`rawLaTeXParser`,\n      used
  to read LaTeX in Markdown files, #7434).  We now use source\n      positions from
  the token stream to tell us how much of the text stream\n      to consume.  Getting
  this to work required a few other changes to\n      make token source positions
  accurate.\n\n  * DocBook reader:\n\n    + Handle images with imageobjectco elements
  (#7440).\n    + Add support for citerefentry (#7437, Jan Tojnar).\n\n  * RST reader:
  fix regression with code includes (#7436).\n    With the recent changes to include
  infrastructure,\n    included code blocks were getting an extra newline.\n\n  *
  HTML reader:\n\n    + Recognize data-external when reading HTML img tags (#7429,\n
  \     Michael Hoffmann).  Preserve all attributes in img tags.  If attributes\n
  \     have a `data-` prefix, it will be stripped.  In particular, this\n      preserves
  a `data-external` attribute as an `external` attribute in\n      the pandoc AST.\n
  \   + Add col, colgroup to 'closes' definitions\n\n  * HTML writer:\n\n    + Remove
  duplicated alt text in HTML output (Aner Lucero).\n    + Remove `aria-hidden` when
  explicit alt text is provided (Aner Lucero).\n    + Set boolean values for reveal.js
  variables.\n\n  * Docx writer:\n\n    + Add table numbering for captioned tables.\n
  \     The numbers are added using fields, so that Word can\n      create a list
  of tables that will update automatically.\n    + Support figure numbers.  These
  are set up in such a way that they\n      will work with Word's automatic table
  of figures (#7392).\n\n  * Markdown writer: put space between Plain and following
  fenced Div\n    (#4465).\n\n  * EPUB writer: Don't incorporate externally linked
  images in EPUB documents\n    (#7430, Michael Hoffmann).  Just as it is possible
  to avoid incorporating\n    an image in EPUB by passing `data-external=\"1\"` to
  a raw HTML snippet,\n    this makes the same possible for native Images, by looking
  for an\n    associated `external` attribute.\n\n  * Text.Pandoc.PDF:\n\n    + Fix
  `svgIn` path error (#7431).  We were duplicating\n      the temp directory; this
  didn't cause problems on macOS or linux\n      because there we use absolute paths
  for the temp directory.\n      But on Windows it caused errors converting SVG files.\n
  \   + `convertImage`: normalize paths (#7431).  This will avoid paths\n      on
  Windows with mixed path separators.\n\n  * Text.Pandoc.Class: Always use / when
  adding directory to image destination\n    with `extractMedia`, even on Windows.\n\n
  \ * Text.Pandoc.Citeproc:\n\n    + Allow `$` characters in bibtex keys (#7409).\n
  \   + Set proper initial source name in parsing BibTeX (for better error\n      messages.)\n
  \   + Revamp note citation handling (#7394).  Use latest\n      citeproc, which
  uses a Span with a class rather than a Note for notes.\n      This helps us distinguish
  between user notes and citation notes.  Don't\n      put citations at the beginning
  of a note in parentheses.  Fix small bug\n      in handling of citations in notes,
  which led to commas at the end of\n      sentences in some cases.\n    + Cleanup
  and efficiency improvement in `deNote`.\n    + Improve punctuation moving with `--citeproc`.
  \ Previously, using\n      `--citeproc` could cause punctuation to move in quotes
  even when\n      there aer no citations. This has been changed; punctuation moving\n
  \     is now limited to citations.  In addition, we only move footnotes\n      around
  punctuation if the style is a note style, even if\n      `notes-after-punctuation`
  is `true`.\n\n  * Use citeproc 0.10. This helps improve note citations (see above)\n
  \   and eliminates double hyperlinks in author-in-text citations.\n    Author-only
  citations are no longer hyperlinked.  See jgm/citeproc#77.\n    It also fixes moving
  of punctuation inside quotes to conform to\n    the CSL spec: only comma and period
  are moved, not question\n    mark or exclamation point.\n\n  * Text.Pandoc.Error:
  fix line calculations in reporting parsec errors.\n    Also remove a spurious initial
  newline in the error report.\n\n  * Use doctemplates 0.4.1, which gives us better
  support for boolean\n    variable values.  Previously `$if(foo)$` would evaluate
  to true\n    for variables with boolean `false` values, because it cared only\n
  \   about the string rendering (#7402).\n\n  * Require commonmark-pandoc >= 0.2.2.1.\n
  \   This fixes task lists with multiple paragraphs.\n\n  * Use skylighting 0.11.\n\n
  \ * CSS in HTML template: reset overflow-wrap on code blocks\n    (Mauro Bieg, #7423).\n\n
  \ * LaTeX template: Revert change in PR #7295: \"move title, author, date up\n    to
  top of preamble.\" The change caused problem for people who used\n    LaTeX commands
  defined defined later in the preamble in the title\n    or author fields (#7422).\n\n
  \ * Add `doc/faqs.md`.  This is imported from the website; in the future the\n    website
  version will be drawn from here.\n    Added a FAQ on the use of `\\AtEndPreamble`
  for cases when the contents of\n    `header-includes` need to refer to definitions
  that come later in the\n    preamble.  See #7422.\n\n  * Upgrade Debian 10 AMI for
  build-arm.sh.\n\n  * CircleCI: change to using xcode 11.1.0 (macOS 10.14.4).\n    We
  previously built on 10.13, but 10.13 no longer gets\n    security updates and CirclCI
  is deprecating.\n\n## pandoc 2.14.0.3 (2021-06-22)\n\n  * Text.Pandoc.MediaBag `insertMediaBag`:
  ensure we get a sane mediaPath\n    for URLs (#7391).  In earlier 2.14.x versions,
  we'd get\n    incorrect paths for resources downloaded from URLs when the\n    media
  are extracted (including in PDF production).\n  * Text.Pandoc.Parsing: improve `emailAddress`
  (#7398).\n    Previously the parser would accept characters in domains\n    that
  are illegal in domains, and this sometimes caused it\n    to gobble bits of the
  following text.\n  * txt2tags reader: modify the email address parser so\n    it
  still includes form parameters, even after the change to\n    `emailAddress` in
  Text.Pandoc.Parsing.\n  * Text.Pandoc.Readers.Metadata: Fix regression with comment-only
  YAML\n    metadata blocks (#7400).\n  * reveal.js writer and template: better handling
  of options.  Previously\n    it was impossible to specify false values for options
  that default to\n    true (e.g. `center`); setting the option to false just caused
  the portion\n    of the template setting the option to be omitted.  Now we prepopulate\n
  \   all the variables with their default values, including them all\n    unconditionally
  and allowing them to be overridden.\n  * Markdown writer: Fix regression in code
  blocks with attributes (#7397).\n    Code blocks with a single class but nonempty
  attributes\n    were having attributes drop as a result of #7242.\n  * LaTeX writer:\n
  \   + Add strut at end of minipage if it contains line breaks.\n      Without them,
  the last line is not as tall as it should be in\n      some cases.\n    + Always
  use a minipage for cells with line breaks, when\n      width information is available
  (#7393).  Otherwise the way we treat them\n      can lead to content that overflows
  a cell.\n    + Use `\\strut` instead of `~` before `\\\\` in empty line.\n  * Use
  lts-18.0 stack resolver.\n  * Require skylighting 0.10.5.2 (adding support for Swift).\n
  \ * Require commonmark 0.2.1.\n  * Rephrase section on unsafe HTML in manual.\n
  \ * Create SECURITY.md\n\n## pandoc 2.14.0.2 (2021-06-13)\n\n  * Fix MediaBag regressions
  (#7345). iIn the 2.14 release `--extract-media`\n    stopped working as before;
  there could be mismatches between the\n    paths in the rendered document and the
  extracted media.\n    This patch makes several changes that restore the earlier
  behavior\n    (while keeping the same API).  The `mediaPath` in 2.14 was always\n
  \   constructed from the SHA1 hash of the media contents.  Now, we\n    preserve
  the original path unless it's an absolute path or contains\n    `..` segments (in
  that case we use a path based on the SHA1 hash of\n    the contents).\n\n    In
  Text.Pandoc.MediaBag, `mediaDirectory` and `mediaItems` now use the\n    `mediaPath`,
  rather than the mediabag key, for the first component of the\n    tuple.  This makes
  more sense, I think, and fits with the documentation of\n    these functions; eventually,
  though, we should rework the API so that\n    `mediaItems` returns both the keys
  and the MediaItems.\n\n    In Text.Pandoc.Class.IO, rewriting of source paths in
  `extractMedia` has\n    been fixed.\n\n    In Text.Pandoc.Class.PandocMonad, `fillMediaBag`
  has been modified so that\n    it doesn't modify image paths (that was part of the
  problem in #7345).\n\n    We now do path normalization (e.g. `\\` separators on
  Windows) in\n    writing the media.\n\n  * Text.Pandoc.PDF:\n\n    + Text.Pandoc.PDF:
  Fix regression in 2.14 for generation of PDFs with\n      SVGs (#7344).\n    + Only
  print relevant part of environment on `--verbose`.  Since\n      `--verbose` output
  might be put in an issue, we want to avoid\n      spilling out secrets in environment
  variables.\n\n  * Markdown reader: fix pipe table regression in 2.11.4 (#7343).\n
  \   Previously pipe tables with empty headers (that is, a header\n    line with
  all empty cells) would be rendered as headerless\n    tables.  This broke in 2.11.4.
  \ The fix here is to produce an\n    AST with an empty table head when a pipe table
  has all empty\n    header cells.\n\n  * LaTeX reader: don't allow optional `*` on
  symbol control sequences\n    (#7340).  Generally we allow optional starred variants
  of LaTeX commands\n    (since many allow them, and if we don't accept these explicitly,\n
  \   ignoring the star usually gives acceptable results).  But we\n    don't want
  to do this for `\\(*\\)` and similar cases.\n\n  * Docx reader: handle absolute
  URIs in Relationship Target (#7374).\n\n  * Docx writer: fix handling of empty table
  headers (Albert Krewinkel,\n    #7369).  A table header which does not contain any
  cells is now treated as\n    an empty header.\n\n  * LaTeX writer: Fix regression
  in table header position (#7347).\n    In recent versions the table headers were
  no longer bottom-aligned\n    (if more than one line).  This patch fixes that by
  using minipages\n    for table headers in non-simple tables.\n\n  * CommonMark writer:\n\n
  \   + Do not use simple class for fenced-divs (Jan Tojnar, amends #7242.)\n    +
  Do not throw away attributes when `Ext_attributes` is enabled.\n      `Ext_attributes`
  covers at least the following:\n      `Ext_fenced_code_attributes`, `Ext_header_attributes`,\n
  \     `Ext_inline_code_attributes`, `Ext_link_attributes`.\n\n  * Markdown writer:\n\n
  \   + Allow `pipe_tables` to be disabled for commonmark formats\n      (`commonmark_x`,
  `gfm`) (#7375).\n    + Re-use functions from Text.Pandoc.Markdown.Inline (Jan Tojnar).\n\n
  \ * DocBook writer: Remove non-existent admonitions (Jan Tojnar).\n    `attention`,
  `error` and `hint` are reStructuredText specific.\n\n  * HTML writer: Don't omit
  width attribute on div (#7342).\n\n  * Text.Pandoc.MIME, `extensionFromMimeType`:
  add a few special cases.\n    When we do a reverse lookup in the MIME table, we
  just get the\n    last match, so when the same mime type is associated with several\n
  \   different extensions, we sometimes got weird results, e.g. `.vs`\n    for `text/plain`.
  \ These special cases help us get the most standard\n    extensions for mime types
  like `text/plain`.\n\n  * Lua utils: fix handling of table headers in `from_simple_table`
  (Albert\n    Krewinkel, #7369).  Passing an empty list of header cells now results\n
  \   in an empty table header.\n\n  * Text.Pandoc.Citeproc:\n\n    + Avoid duplicate
  classes and attributes on references div.\n    + Fix regression in citeproc processing
  (#7376).  If inline\n      references are used (in the metadata `references` field),
  we\n      should still only include in the bibliography items that are\n      actually
  cited (unless `nocite` is used).\n\n  * Require citeproc 0.4.0.1.  This fixes a
  bug which led to doubled\n    \"et al.\" in some (rare) circumstances.\n\n  * MANUAL.txt:\n\n
  \   + Mention GladTeX for EPUB export (Sebastian Humenda).\n      This updates the
  manual and the web site about the GladTeX usage.\n    + More details and a useful
  link for YAML syntax.\n\n  * CONTRIBUTING.md: update modules overview (Albert Krewinkel).\n\n
  \ * using-the-pandoc-api.md: switch from String to Text (Albert Krewinkel).\n\n\n##
  pandoc 2.14.0.1 (2021-06-01)\n\n  * Commonmark reader: Fix regression in 2.14 with
  YAML metdata block parsing,\n    which could cause the document body to be omitted
  after metadata (#7339).\n\n  * HTML reader: fix column width regression in 2.14
  (#7334).\n    Column widths specified with a style attribute were off by a factor
  of 100.\n\n  * Markdown reader: in `rebasePaths`, check for both Windows and Posix\n
  \   absolute paths.  Previously Windows pandoc was treating\n    `/foo/bar.jpg`
  as non-absolute.\n\n  * Text.Pandoc.Logging: In rendering `LoadedResource`, use
  relative paths.\n\n  * Docx writer: fix regression on captions (#7328).  The \"Table
  Caption\"\n    style was no longer getting applied.  (It was overwritten by \"Compact.\")\n\n
  \ * Use commonmark-extensions 0.2.1.2\n\n## pandoc 2.14 (2021-05-28)\n\n  * Change
  reader types, allowing better tracking of source positions\n    [API change].  Previously,
  when multiple file arguments were provided,\n    pandoc simply concatenated them
  and passed the contents to the readers,\n    which took a Text argument.  As a result,
  the readers had no way of knowing\n    which file was the source of any particular
  bit of text.  This meant that\n    we couldn't report accurate source positions
  on errors or include accurate\n    source positions as attributes in the AST.  More
  seriously, it meant that\n    we couldn't resolve resource paths relative to the
  files containing them\n    (see e.g. #5501, #6632, #6384, #3752).\n\n  * Add `rebase_relative_paths`
  extension (#3752).  When enabled, this\n    extension rewrites relative image and
  link paths by prepending\n    the (relative) directory of the containing file.  This\n
  \   behavior is useful when your input sources are split\n    into multiple files,
  across several directories, with files\n    referring to images stored in the same
  directory.  The\n    extension can be enabled for all markdown and commonmark-based
  formats.\n\n  * Add Text.Pandoc.Sources (exported module), with a `Sources` type
  and a\n    `ToSources` class.  A `Sources` wraps a list of `(SourcePos, Text)` pairs\n
  \   [API change]. A parsec `Stream` instance is provided for `Sources`.  The\n    module
  also exports versions of parsec's `satisfy` and other Char parsers\n    that track
  source positions accurately from a `Sources` stream (or any\n    instance of the
  new `UpdateSourcePos` class).\n\n  * Text.Pandoc.Parsing\n\n    + Export the modified
  Char parsers defined in Text.Pandoc.Sources\n      instead of the ones parsec provides.
  \ Modified parsers to use a\n      `Sources` as stream [API change].\n    + Improve
  include file functions [API change].  Remove old\n      `insertIncludedFileF`.  Give
  `insertIncludedFile` a more general type,\n      allowing it to be used where `insertIncludedFileF`
  was.\n    + Add parameter to the `citeKey` parser from\n      Text.Pandoc.Parsing,
  which controls whether the `@{..}`\n      syntax is allowed [API change].\n\n  *
  Text.Pandoc.Error: Modified the constructor `PandocParsecError` to take a\n    `Sources`
  rather than a `Text` as first argument, so parse error locations\n    can be accurately
  reported.\n\n  * Fix source position reporting for YAML bibliographies (#7273).\n\n
  \ * Issue error message when  reader or writer format is malformed\n    (#7231).
  \ Previously we exited with an error status but (due to a bug)\n    no message.\n\n
  \ * Smarter smart quotes (#7216, #2103).  Treat a leading `\"` with no\n    closing
  `\"` as a left curly quote.  This supports the practice, in\n    fiction, of continuing
  paragraphs quoting the same speaker without an\n    end quote.  It also helps with
  quotes that break over lines in line blocks.\n\n  * Markdown reader:\n\n    + Use
  MetaInlines not MetaBlocks for multimarkdown metadata fields.\n      This gives
  better results in converting to e.g.  pandoc markdown.\n    + Implement curly-brace
  syntax for Markdown citation keys (#6026).\n      The change provides a way to use
  citation keys that contain\n      special characters not usable with the standard
  citation key syntax.\n      Example: `@{foo_bar{x}'}` for the key `foo_bar{x}`.
  \ It also allows\n      separating citation keys from immediately following text,
  e.g. `@{foo}A`.\n\n  * RST reader:\n\n    + Seek include files in the directory
  of the file\n      containing the include directive, as RST requires (#6632).\n
  \   + Use `insertIncludedFile` from Text.Pandoc.Parsing\n      instead of reproducing
  much of its code.\n\n  * Org reader: Resolve org includes relative to the directory
  containing the\n    file containing the INCLUDE directive (#5501).\n\n  * ODT reader:
  Treat tabs as spaces (#7185, niszet).\n\n  * Docx reader:\n\n    + Add handling
  of vml image objects (#7257, mbrackeantidot).\n    + Support new table features
  (Emily Bourke, #6316):  column\n      spans, row spans, multiple header rows, table
  description\n      (parsed as a simple caption), captions, column widths.\n\n  *
  LaTeX reader:\n\n    + Improved siunitx support (#6658, #6620).\n    + Better support
  for `\\xspace` (#7299).\n    + Improve parsing of `\\def` macros.  We previously
  set \"verbatim mode\"\n      even for parsing the initial `\\def`; this caused problems\n
  \     for `\\def` nested inside another `\\def`.\n    + Implement `\\newif`.\n\n
  \ * ConTeXt writer: improve ordered lists (#5016, Denis Maier).\n    Change ordered
  list from itemize to enumerate.  Add new\n    itemgroup for ordered lists.  Remove
  manual insertion of\n    width attributes.  Use tabular figures in ordered list\n
  \   enumerators.\n\n  * HTML reader:\n\n    + Don't fail on unmatched closing \"script\"
  tag (Albert Krenkel, #7282).\n    + Keep h1 tags as normal headers (#2293, Albert
  Krewinkel).\n      The tags `<title>` and `<h1 class=\"title\">` often contain the
  same\n      information, so the latter was dropped from the document. However, as\n
  \     this can lead to loss of information, the heading is now always\n      retained.
  \ Use `--shift-heading-level-by=-1` to turn the `<h1>`\n      into the document
  title, or a filter to restore the previous behavior.\n    + Handle relative lengths
  (e.g. `2*`) in HTML column widths (#4063).\n      See <https://www.w3.org/TR/html4/types.html#h-6.6>.\n\n
  \ * DocBook/JATS readers:\n\n    + Fix mathml regression caused by the switch in
  XML libraries (#7173).\n    + Fix \"phrase\" in DocBook: take classes from \"role\"
  not \"class\" (#7195).\n\n  * DocBook reader: ensure that first and last names are
  separated (#6541).\n\n  * Jira reader (Albert Krewinkel, #7218):\n\n    + Support
  \"smart\" links: `[alias|https://example.com|smart-card]` syntax.\n    + Allow spaces
  and most unicode characters in attachment links.\n    + No longer require a newline
  character after `{noformat}`.\n    + Only allow URI path segment characters in bare
  links.\n    + The `file:` schema is no longer allowed in bare links; these\n      rarely
  make sense.\n\n  * Plain writer: handle superscript unicode minus (#7276).\n\n  *
  LaTeX writer:\n\n    + Better handling of line breaks in simple tables (#7272).\n
  \     Now we also handle the case where they're embedded in other elements,\n      e.g.
  spans.\n    + For beamer output, support `exampleblock` and `alertblock` (#7278).\n
  \     A block will be rendered as an `exampleblock` if the heading\n      has class
  `example` and an `alertblock` if it has class `alert`.\n    + Separate successive
  quote chars with thin space (#6958,\n      Albert Krewinkel).  Successive quote
  characters are separated with\n      a thin space to improve readability and to
  prevent unwanted ligatures.\n      Detection of these quotes sometimes had failed
  if the second quote\n      was nested in a span element.\n    + Separate successive
  quote chars with thin space (#6958, Albert\n      Krewinkel).\n\n  * EPUB Writer:
  Fix belongs-to-collection XML id choice (#7267, nuew).\n    The epub writer previously
  used the same XML id for both the book\n    identifier and the epub collection.
  This causes an error on epubcheck.\n\n  * BibTeX/BibLaTeX writer: Handle `annote`
  field (#7266).\n\n  * ZimWiki writer: allow links and emphasis in headers (#6605,\n
  \   Albert Krewinkel).\n\n  * ConTeXt writer:\n\n    + Support blank lines in line
  blocks (#6564, Albert Krewinkel,\n      thanks to @denismaier).\n    + Use span
  identifiers as reference anchors (#7246, Albert Krewinkel).\n\n  * HTML writer:\n\n
  \   + Keep attributes from code nested below `pre` tag (#7221,\n      Albert Krewinkel).
  \ If a code block is defined with `<pre><code\n      class=\"language-x\">‚Ä¶</code></pre>`,
  where the `<pre>` element has no\n      attributes, then the attributes from the
  `<code>` element are used\n      instead. Any leading `language-` prefix is dropped
  in the code's\n      `class` attribute are dropped to improve syntax highlighting.\n
  \   + Ensure headings only have valid attribs in HTML4 (#5944, Albert\n      Krewinkel).\n
  \   + Parse `<header>` as a Div (Albert Krewinkel).\n\n  * Org writer:\n\n    +
  Inline latex envs need newlines (#7252, tecosaur).\n      As specified in https://orgmode.org/manual/LaTeX-fragments.html,
  an\n      inline \\begin{}...\\end{} LaTeX block must start on a new line.\n    +
  Use LaTeX style maths deliminators (#7196, tecosaur).\n\n  * JATS writer (Albert
  Krewinkel):\n\n    + Use either styled-content or named-content for spans (#7211).\n
  \     If the element has a content-type attribute, or at least one class,\n      then
  that value is used as `content-type` and the span is put inside\n      a `<named-content>`
  element. Otherwise a `<styled-content>` element\n      is used instead.\n    + Reduce
  unnecessary use of `<p>` elements for wrapping (#7227).\n      The `<p>` element
  is used for wrapping in cases were the contents\n      would otherwise not be allowed
  in a certain context. Unnecessary\n      wrapping is avoided, especially around
  quotes (`<disp-quote>` elements).\n    + Convert spans to `<named-content>` elements
  (#7211).  Spans with\n      attributes are converted to `<named-content>` elements
  instead of\n      being wrapped with `<milestone-start/>` and `<milestone-end>`\n
  \     elements. Milestone elements are not allowed in documents using the\n      articleauthoring
  tag set, so this change ensures the creation of valid\n      documents.\n    + Add
  footnote number as label in backmatter (#7210).  Footnotes in the\n      backmatter
  are given the footnote's number as a label.  The\n      articleauthoring output
  is unaffected from this change, as footnotes\n      are placed inline there.\n    +
  Escape disallows chars in identifiers.  XML identifiers must start\n      with an
  underscore or letter, and can contain only a limited set\n      of punctuation characters.
  Any IDs not adhering to these rules are\n      rewritten by writing the offending
  characters as `Uxxxx`,\n      where `xxxx` is the character's hex code.\n\n  * Jira
  writer:  use `{color}` when span has a color attribute\n    (Albert Krewinkel, tarleb/jira-wiki-markup#10).\n\n
  \ * Docx writer:\n\n    + Autoset table width if no column has an explicit width
  (Albert\n      Krewinkel).\n    + Extract Table handling into separate module (Albert
  Krewinkel).\n    + Support colspans and rowspans in tables (Albert Krewinkel, #6315).\n
  \   + Support multirow table headers (Albert Krewinkel).\n    + Improve integration
  of settings from reference.docx (#1209).\n      This change allows users to create
  a reference.docx that\n      sets `w:proofState` for spelling or grammar to `dirty`,\n
  \     so that spell/grammar checking will be triggered on the\n      generated docx.\n
  \   + Copy over more settings from reference.docx (#7240).  From settings.xml\n
  \     in the reference-doc, we now include: `zoom`, `embedSystemFonts`,\n      `doNotTrackMoves`,
  `defaultTabStop`, `drawingGridHorizontalSpacing`,\n      `drawingGridVerticalSpacing`,
  `displayHorizontalDrawingGridEvery`,\n      `displayVerticalDrawingGridEvery`, `characterSpacingControl`,\n
  \     `savePreviewPicture`, `mathPr`, `themeFontLang`, `decimalSymbol`,\n      `listSeparator`,
  `autoHyphenation`, `compat`.\n    + Set zoom to 100% by default in settings.xml.\n
  \   + Align math options more with current Word defaults (e.g.  Cambria Math\n      font).\n
  \   + Remove `rsid`s from default settings.xml.  Word will add these\n      when
  revisions are made.\n\n  * Ms writer: Handle tables with multiple paragraphs (#7288).\n
  \   Previously they overflowed the table cell width.  We now set line lengths\n
  \   per-cell and restore them after the table has been written.\n\n  * Markdown
  writer:\n\n    + Use cleaner braceless syntax for code blocks with a\n      single
  class (#7242, Jan Tojnar).\n    + Add quotes properly in markdown YAML metadata
  fields (#7245).\n      This fixes a bug, which caused the writer to look at the
  *last*\n      rather than the *first* character in determining whether quotes\n
  \     were needed.  So we got spurious quotes in some cases and\n      didn't get
  necessary quotes in others.\n    + Use `@{..}` syntax for citations when needed.\n
  \   + Use fewer unneeded escapes for `#` (see #6259).\n    + Improve escaping of
  `@`.  We need to escape literal `@` before\n      `{` because of the new citation
  syntax.\n\n  * Commonmark writer: Use backslash escapes for `<` and `|`...\n    instead
  of entities (#7208).\n\n  * Powerpoint writer: allow `monofont` to be specified
  in metadata\n    (#7187).\n\n  * LaTeX template:\n\n    + Use non-starred names
  for xcolor color names (#6109).\n      This should make svgnames and x11names work
  properly.\n    + Fix bad vertical spacing after bibliography (#7234, badumont).\n
  \   + List of figures before list of tables (#7235, Julien Dutant).\n    + Move
  CSL macro definitions before header-includes so they can be\n      overridden (#7286).\n
  \   + Improve treatment of CSL `entry-spacing` (#7296).\n      Previously with the
  default template settings (`indent` variable\n      not set), we would get interparagraph
  spaces separating bib\n      entries even with `entry-spacing=\"0\"`.  On the other
  hand,\n      setting `entry-spacing=\"2\"` gave ridiculously large spacing.\n      This
  change makes the spacing caused by `entry-spacing` a multiple\n      of `\\parskip`
  by default, which gives aesthetically reasonable\n      output.  Those who want
  a larger or smaller unit (e.g. because\n      they use `indent` which sets `\\parskip`
  to 0) may\n      `\\setlength{\\cslentryspacingunit}{10pt}` in header-includes\n
  \     to override the defaults.\n    + Move title, author, date up to top of preamble
  (#7295).\n      This allows header-includes to use them, and puts them\n      in
  a position where you can see them immediately.\n    + Define commands for zero width
  non-joiner character\n      (#6639, Albert Krewinkel).  The zero-width non-joiner
  character\n      is used to avoid ligatures (e.g. in German).\n\n  * ConTeXt template:\n\n
  \   + Define `enumerate` itemgroup (#5016, Denis Maier).\n    + List of figures
  before list of tables (#7235, Julien Dutant).\n\n  * reveal.js template:\n\n    +
  Support `toc-title` (#7171, Florian Kohrt).\n    + Use `hash: true` by default rather
  than `history: true` (#6968).\n\n  * HTML-based slide shows: add support for `institute`
  (#7289, Thomas\n    Hodgson).\n\n  * Text.Pandoc.Extensions: Add constructor `Ext_rebase_relative_paths`
  to\n    `Extensions` [API change].\n\n  * Text.Pandoc.XML.Light: add Eq, Ord instances
  for Content,\n    Element, Attr, CDataKind [API change].\n\n  * Text.Pandoc.MediaBag:\n\n
  \   + Change type to use a `Text` key instead of `[FilePath]`.\n      We normalize
  the path and use `/` separators for consistency.\n    + Export `MediaItem` type
  [API change].\n    + Change `MediaBag` type to a map from Text to MediaItem [API
  change].\n    + `lookupMedia` now returns a `MediaItem` [API change].\n    + Change
  `insertMedia` so it sets the `mediaPath` to a filename based on\n      the SHA1
  hash of the contents.  This will be used when contents\n      are extracted.\n\n
  \ * Text.Pandoc.Class.PandocMonad:\n\n    + Remove `fetchMediaResource` [API change].
  \ Use `fetchItem` to get\n      resources in `fillMediaBag`.\n    + Add informational
  message in `downloadOrRead` indicating what path\n      local resources have been
  loaded from.\n\n  * Text.Pandoc.Logging:\n\n    + Remove single quotes around paths
  in messages.\n    + Add LoadedResource constructor to LogMessage [API change].\n
  \     This is for INFO-level messages telling where image data has been\n      loaded
  from.  (This can vary because of the resource path.)\n\n  * Text.Pandoc.Asciify:
  simplify code and export `toAsciiText` [API change].\n    Instead of encoding a
  giant (and incomplete) map, we now\n    just use unicode-transforms to normalize
  the text to\n    a canonical decomposition, and manipulate the result.\n\n  * App:
  allow tabs expansion even if file-scope is used (Albert Krewinkel,\n    #6709).
  \ Tabs in plain-text inputs  are now handled correctly, even if\n    the `--file-scope`
  flag is used.\n\n  * Add new internal module Text.Pandoc.Writers.GridTable (Albert
  Krewinkel).\n\n  * Text.Pandoc.Highlighting: Change type of `languagesByExtension`,
  adding\n    a parameter for a `SyntaxMap` [API change] (Jan Tojnar, #7241).\n    Languages
  defined using `--syntax-definition` were not recognized by\n    `languagesByExtension`.
  \ This patch corrects that, allowing the writers\n    to see all custom definitions.
  \ The LaTeX writer still uses the default\n    syntax map, but that's okay in that
  context, since\n    `--syntax-definition` won't create new listings styles.\n\n
  \ * Text.Pandoc.Citeproc:\n\n    + Ensure that CSL-related attributes are passed
  on to a Div with id\n      'refs'.  Otherwise things like `entry-spacing` won't
  work when\n      such Divs are used.\n    + Use metadata's `lang` for the lang parameter
  of citeproc, overriding\n      `localeLanguage`.\n    + Recognize locators spelled
  with a capital letter (#7323).\n    + Add a comma and a space in front of the suffix
  if it doesn't start\n      with space or punctuation (#7324).\n    + Don't detect
  math elements as locators (#7321).\n\n  * Remove Text.Pandoc.BCP47 module [API change].
  \ Use types and functions\n    from UnicodeCollation.Lang instead.  This is a richer
  implementation\n    of BCP 47.\n\n  * Text.Pandoc.Shared:\n\n    + Fix regression
  in grid tables for wide characters (#7214).\n      In the translation from String
  to Text, a char-width-sensitive\n      `splitAt'` was dropped.  This commit reinstates
  it and uses it to make\n      `splitTextByInstances` char-width sensitive.\n    +
  Add `getLang` (formerly in the now-removed BCP47) [API change].\n\n  * Text.Pandoc.SelfContained:
  use `application/octet-stream`\n    for unknown mime types instead of halting with
  an error (#7202).\n\n  * Lua filters: respect Inlines/Blocks filter functions in
  `pandoc.walk_*`\n    (Albert Krewinkel).\n\n  * Add text as build-depend for trypandoc
  (#7193, Roman Ber√°nek).\n\n  * Bump upper-bounds for network-uri, time, attoparsec.\n\n
  \ * Use citeproc 0.4.\n\n  * Use texmath 0.12.3.\n\n  * Use jira-wiki-markup 1.3.5
  (Albert Krewinkel).\n\n  * Require latest skylighting (fixes a bug in XML syntax
  highlighting).\n\n  * Use latest xml-conduit.\n\n  * Use latest commonmark, commonmark-extensions,
  commonmark-pandoc.\n\n  * Use haddock-library-1.10.0 (Albert Krewinkel).\n\n  *
  Allow compilation with base 4.15 (Albert Krewinkel).\n\n  * MANUAL:\n\n    + Add
  information about `lang` and bibliography sorting.\n    + Add info about YAML escape
  sequences, link to spec (#7152,\n      Albert Krewinkel).\n    + Note that `institute`
  variable works for HTML-based slides.\n    + Update documentation on citation syntax.\n
  \   + Add citation example for locators and suffixes (Tristan Stenner)\n\n  * Updated
  and fixed typos in documentation (Charanjit Singh,\n    Anti-Distinctlyminty, Tatiana
  Porras, obcat).\n\n  * Add instructions for installing pandoc-types before compiling
  filter.\n\n  * INSTALL: add note that parallel installations should be avoided\n
  \   (#6865).\n\n  * Remove `biblatex-nussbaum.md` test.  It is basically the same\n
  \   as `biblaetx-quotes.md`.\n\n  * Command tests: fail if a file contains no tests---and
  fix a\n    test that failed in that way!\n\n  * Use smaller images in tests, reducing
  the size of the source tarball by 8 MB.\n\n\n## pandoc 2.13 (2021-03-21)\n\n  *
  Support `yaml_metadata_block` extension for `commonmark`, `gfm` (#6537).\n    This
  supported is a bit more limited than with pandoc's\n    `markdown`.  The YAML block
  must be the first thing in the input,\n    and the leaf notes are parsed in isolation
  from the rest of\n    the document.  So, for example, you can't use reference\n
  \   links if the references are defined later in the document.\n\n  * Fix fallback
  to default partials when custom templates are used.\n    If the directory containing
  a template does not contain the partial,\n    it should be sought in the default
  templates, but this was not\n    working properly (#7164).\n\n  * Handle `nocite`
  better with `--biblatex` and `--natbib` (#4585).\n    Previously the nocite metadata
  field was ignored with these formats.\n    Now it populates a `nocite-ids` template
  variable and causes a\n    `\\nocite` command to be issued.\n\n  * Text.Pandoc.Citeproc:
  apply `fixLinks` correctly (#7130).  This is code\n    that incorporates a prefix
  like `https://doi.org/` into a following link\n    when appropriate.\n\n  * Text.Pandoc.Shared:\n\n
  \   + Remove `backslashEscapes`, `escapeStringUsing` [API change].  Replace\n      these
  inefficient association list lookups with more efficient escaping\n      functions
  in the writers that used them (for a 10-25% performance boost\n      in org, haddock,
  rtf, texinfo writers).\n    + Remove `ToString`, `ToText` typeclasses [API change].
  \ These were needed\n      for the transition from String to Text, but they are
  no longer used and\n      may clash with other things.\n    + Simplify `compactDL`.\n\n
  \ * Text.Pandoc.Parsing:\n\n    + Change type of `readWithM` so that it is no longer
  polymorphic\n      [API change].  The `ToText` class has been removed, and now that
  we've\n      completed the transition to Text we no longer need this to operate\n
  \     on Strings.\n    + Remove `F` type synonym [API change].  Muse and Org were
  defining their\n      own `F` anyway.\n\n  * Text.Pandoc.Readers.Metadata:\n\n    +
  Export `yamlMetaBlock` [API change].\n    + Make `yamlBsToMeta`, `yamlBsToRefs`
  polymorphic on the parser state\n      [API change].\n\n  * Markdown reader: Fix
  regression with `tex_math_backslash` (#7155).\n\n  * MediaWiki reader: Allow block-level
  content in notes (ref) (#7145).\n\n  * Jira reader (Albert Krewinkel):\n\n    +
  Fixed parsing of autolinks (i.e., of bare URLs in the text).\n      Previously an
  autolink would take up the rest of a line, as spaces\n      were allowed characters
  in these items.\n    + Emoji character sequences no longer cause parsing failures.
  This was\n      due to missing backtracking when emoji parsing fails.\n    + Mark
  divs created from panels with class \"panel\".\n\n  * RST reader: fix logic for
  ending comments (#7134).  Previously comments\n    sometimes got extended too far.\n\n
  \ * DocBook writer:  include Header attributes as XML attributes on\n    section
  (Erik Rask).  Attributes with key names that are not allowed\n    as XML attributes
  are dropped, as are attributes with invalid values\n    and `xml:id` (DocBook 5)
  and `id` (DocBook 4).\n\n  * Docx writer:\n\n    + Make `nsid` in `abstractNum`
  deterministic.  Previously we assigned\n      a random number, but we don't need
  random values, so now we just\n      assign a value based on the list marker.\n
  \   + Use integral values for `w:tblW` (#7141).\n\n  * Jira writer (Albert Krewinkel):\n\n
  \   + Block quotes are only rendered as `bq.` if they do not contain a\n      linebreak.\n
  \   + Jira writer: improve div/panel handling.  Include div attributes in\n      panels,
  always render divs with class `panel` as panels, and\n      avoid nesting of panels.\n\n
  \ * HTML writer: Add warnings on duplicate attribute values.\n    This prevents
  emitting invalid HTML.  Ultimately it would be good to\n    prevent this in the
  types themselves, but this is better for now.\n\n  * Org writer: Prevent unintended
  creation of ordered list items (#7132,\n    Albert Krewinkel).  Adjust line wrapping
  if default wrapping would cause\n    a line to be read as an ordered list item.\n\n
  \ * JATS templates: support 'equal-contrib' attrib for authors (Albert\n    Krewinkel).
  \ Authors who contributed equally to a paper may be marked\n    with `equal-contrib`.\n\n
  \ * reveal.js template: replace JS comment with HTML (#7154, Florian Kohrt).\n\n
  \ * Text.Pandoc.Logging: Add `DuplicateAttribute` constructor to `LogMessage`.\n
  \   [API change]\n\n  * Use `-j4` for linux release build.  This speeds up the build
  dramatically\n    on arm.\n\n  * cabal.project: remove ghcoptions.  Move flags to
  top level, so they can\n    be set differently on the command line.\n\n  * Require
  latest texmath, skylighting, citeproc, jira-wiki-markup.\n    (The latest skylighting
  fixes a bad bug with Haskell syntax highlighting.)\n    Narrow version bounds for
  texmath, skylighting, and citeproc, since\n    the test output depend on them.\n\n
  \ * Use doclayout 0.3.0.2.  This significantly reduces the time and memory\n    needed
  to compile pandoc.\n\n  * Use `foldl'` instead of `foldl` everywhere.\n\n  * Update
  bounds for random (#7156, Alexey Kuleshevich).\n\n  * Remove uses of some partial
  functions.\n\n  * Don't bake in a larger stack size for the executable.\n\n  * Test
  improvements:\n\n    + Use `getExecutablePath` from base, avoiding the dependency
  on\n      `executable-path`.\n    + Factor out `setupEnvironment` in Helpers, to
  avoid code duplication.\n    + Fix finding of data files by setting teh `pandoc_datadir`
  environment\n      variable when we shell out to pandoc. This avoids the need to
  use\n      `--data-dir` for the tests, which caused problems finding `pandoc.lua`\n
  \     when compiling without the `embed_data_files` flag (#7163).\n\n  * Benchmark
  improvements:\n\n    + Build `+RTS -A8m -RTS` into default ghc-options for benchmark.\n
  \     This is necessary to get accurate benchmark results; otherwise we\n      are
  largely measuring garbage collecting, some not related to the\n      current benchmark.\n
  \   + Allow specifying BASELINE file in 'make bench' for comparison\n      (otherwise
  the latest benchmark is chosen by default).\n    + Force `readFile` in benchmarks
  early (Bodigrim).\n\n  * CONTRIBUTING: suggest using a `cabal.project.local` file
  (#7153,\n    Albert Krewinkel).\n\n  * Add ghcid-test to Makefile.  This loads the
  test suite in ghcid.\n\n\n## pandoc 2.12 (2021-03-08)\n\n  * `--resource-path` now
  accumulates if specified multiple\n    times (#6152).  Resource paths specified
  later on the command line are\n    prepended to those specified earlier.  Thus,\n
  \   `--resource-path foo --resource-path bar:baz` is equivalent to\n    `--resource-path
  bar:bas:foo`.  (The previous behavior was\n    for the last `--resource-path` to
  replace all the rest.)\n    `resource-path` in defaults files behaves the same way:
  it\n    will be prepended to the resource path set by earlier\n    command line
  options or defaults files.  This change\n    facilitates the use of multiple defaults
  files: each can\n    specify a directory containing resources it refers to\n    without
  clobbering the resource paths set by the others.\n\n  * Allow defaults files to
  refer to the home directory, the\n    user data directory, and the directory containing
  the defaults file\n    itself (#5871, #5982, #5977).  In fields that expect file
  paths\n    (and only in these fields),\n\n    + `${VARIABLE}` will expand to the
  value of the environment variable\n      `VARIABLE` (and in particular `${HOME}`
  will expand to the path\n      of the home directory).  A warning will be raised
  for undefined\n      variables.\n    + `${USERDATA}` will expand to the path of
  the user data\n      directory in force when the defaults file is being processed.\n
  \   + `${.}` will expand to the directory containing the defaults file.\n      (This
  allows default files to be placed in a directory containing\n      resources they
  make use of.)\n\n  * When downloading content from URL arguments, be sensitive to\n
  \   the character encoding (#5600).  We can properly handle UTF-8 and latin1\n    (ISO-8859-1);
  for others we raise an error.  Fall back to latin1 if\n    no charset is given in
  the mime type and UTF-8 decoding fails.\n\n  * Allow abbreviations that don't end
  in a period to be\n    specified using `--abbreviations` (#7124).\n\n  * Add new
  unexported module Text.Pandoc.XML.Light, as well\n    as Text.Pandoc.XML.Light.Types,
  Text.Pantoc.XML.Light.Proc,\n    Text.Pandoc.XML.Light.Output.  (Closes #6001, #6565,
  #7091).\n\n    This module exports definitions of `Element` and `Content`\n    that
  are isomorphic to xml-light's, but with Text\n    instead of String.  This allows
  us to keep most of the code in existing\n    readers that use xml-light, but avoid
  lots of unnecessary allocation.\n\n    We also add versions of the functions from
  xml-light's\n    Text.XML.Light.Output and Text.XML.Light.Proc that operate on our\n
  \   modified XML types, and functions that convert xml-light types to our\n    types
  (since some of our dependencies, like texmath, use xml-light).\n\n    We export
  functions that use xml-conduit's parser to produce an\n    `Element` or `[Content]`.
  \ This allows existing pandoc code to use\n    a better parser without much modification.\n\n
  \   The new parser is used in all places where xml-light's parser was\n    previously
  used.  Benchmarks show a significant performance improvement\n    in parsing XML-based
  formats (with docbook, opml, jats, and docx\n    almost twice as fast, odt and fb2
  more than twice as fast).\n\n    In addition, the new parser gives us better error
  reporting than\n    xml-light.  We report XML errors, when possible, using the new\n
  \   `PandocXMLError` constructor in `PandocError`.\n\n    These changes revealed
  the need for some changes in the tests.  The\n    docbook-reader.docbook test lacked
  definitions for the entities it used;\n    these have been added. And the docx golden
  tests have been updated,\n    because the new parser does not preserve the order
  of attributes.\n\n  * DocBook reader:\n\n    + Avoid expensive tree normalization
  step, as it is not necessary\n      with the new XML parser.\n    + Support `informalfigure`
  (#7079) (Nils Carlson).\n\n  * Docx reader:\n\n    + Use Map instead of list for
  Namespaces.  This gives a speedup of\n      about 5-10%. With this and the XML parsing
  changes, the docx reader\n      is now about twice as fast as in the previous release.\n\n
  \ * HTML reader:\n\n    + Small performance tweaks.\n    + Also, remove exported
  class `NamedTag(..)` [API change]. This was just\n      intended to smooth over
  the transition from String to Text and is no\n      longer needed.\n    + As a result,
  the functions `isInlineTag` and `isBlockTag`\n      are no longer polymorphic; they
  apply to a `Tag Text` [API change].\n    + Do a lookahead to find the right parser
  to use.  This takes\n      benchmarks from 34ms to 23ms, with less allocation.\n
  \   + Fix bad handling of empty `src` attribute in `iframe` (#7099).\n      If `src`
  is empty, we simply skip the `iframe`.\n      If `src` is invalid or cannot be fetched,
  we issue a warning\n      nd skip instead of failing with an error.\n\n  * JATS
  reader:\n\n    + Avoid tree normalization, which is no longer necessary given the\n
  \     new XML parser.\n\n  * LaTeX reader:\n\n    + Don't export `tokenize`, `untokenize`
  [API change].  These are internal\n      implementation details, which were only
  exported for testing.\n      They don't belong in the public API.\n    + Improved
  efficiency of the parser.  With these changes the reader\n      is almost twice
  as fast as in the last release in our benchmarks.\n    + Code cleanup, removing
  some unnecessary things.\n    + Rewrite `withRaw` so it doesn't rely on fragile
  assumptions\n      about token positions (which break when macros are expanded)\n
  \     (#7092).  This requires the addition of `sEnableWithRaw` and\n      `sRawTokens`
  in `LaTeXState`, and a new combinator `disablingWithRaw`\n      to disable collecting
  of raw tokens in certain contexts.\n      Add `parseFromToks` to Text.Pandoc.Readers.LaTeX.Parsing.\n
  \     Fix parsing of single character tokens so it doesn't mess\n      up the new
  raw token collecting.  These changes slightly increase\n      allocations and have
  a small performance impact.\n    + Handle some bibtex/biblatex-specific commands
  that used to be\n      dealt with in pandoc-citeproc (#7049).\n    + Optimize `satisfyTok`,
  avoiding unnecessary macro expansion steps.\n      Benchmarks after this change
  show 2/3 of the run time and 2/3 of the\n      allocation of the Feb. 10 benchmarks.\n
  \   + Removed `sExpanded` in state.  This isn't actually needed and checking\n      it
  doesn't change anything.\n    + Improve `braced'`.  Remove the parameter, have it
  parse the\n      opening brace, and make it more efficient.\n    + Factor out pieces
  of the LaTeX reader to make the module smaller.\n      This reduces memory demands
  when compiling.  Created\n      Text.Pandoc.Readers.{LaTeX,Math,Citation,Table,Macro,Inline}.\n
  \     Changed Text.Pandoc.Readers.LaTeX.SIunitx to export a command map\n      instead
  of individual commands.\n    + Handle table cells containing `&` in `\\verb` (#7129).\n\n
  \ * Make Text.Pandoc.Readers.LaTeX.Types an unexported module [API change].\n\n
  \ * Markdown reader:\n\n    + Improved handling of mmd link attributes in references
  (#7080).\n      Previously they only worked for links that had titles.\n    + Improved
  efficiency of the parser (benchmarks show a 15% speedup).\n\n  * OPML reader:\n\n
  \   + Avoid tree normalization, which is no longer necessary with the\n      new
  XML parser.\n\n  * ODT reader:\n\n    + Finer-grained errors on parse failure (#7091).\n
  \   + Give more information if the zip container can't be unpacked.\n\n  * Org reader:\n\n
  \   + Support `task_lists` extension (Albert Krewinkel, #6336).\n    + Fix bug in
  org-ref citation parsing (Albert Krewinkel, #7101).\n      The org-ref syntax allows
  to list multiple citations separated by\n      comma.  Previously commas were accepted
  as part of the citation id,\n      so all citation lists were parsed as one single
  citation.\n\n  * RST reader:\n\n    + Use `getTimestamp` instead of `getCurrentTime`
  to fetch timestamp.\n      Setting `SOURCE_DATE_EPOCH` will allow reproducible builds.\n
  \   + RST reader: fix handling of header in CSV tables (#7064).\n      The interpretation
  of this line is not affected by the delim option.\n\n  * Jira reader:\n\n    + Modified
  the Doc parser to skip leading blank lines. This fixes\n      parsing of documents
  which start with multiple blank lines (Albert\n      Krewinkel, #7095).\n    + Prevent
  URLs within link aliases to be treated as autolinks (Albert\n      Krewinkel, #6944).\n\n
  \ * Text.Pandoc.Shared\n\n    + Remove formerly exported functions that are no longer
  used in the\n      code base: `splitByIndices`, `splitStringByIndicies`, `substitute`,\n
  \     and `underlineSpan` (which had been deprecated in April 2020)\n      [API
  change].\n    + Export `handleTaskListItem` (Albert Krewinkel) [API change].\n    +
  Change `defaultUserDataDirs` to `defaultUserDataDir` [API\n      change].  We determine
  what is the default user data directory\n      by seeing whether the XDG directory
  and/or legacy\n      directory exist.\n\n  * BibTeX writer:\n\n    + BibTeX writer:
  use doclayout and doctemplate.  This change allows\n      bibtex/biblatex output
  to wrap as other formats do,\n      depending on the settings of `--wrap` and `--columns`
  (#7068).\n\n  * CSL JSON writer:\n\n    + Output `[]` if no references in input,
  instead of raising a\n      PandocAppError as before.\n\n  * Docx writer:\n\n    +
  Use `getTimestamp` instead of `getCurrentTime` for timestamp.\n      Setting `SOURCE_DATE_EPOCH`
  will allow reproducible builds.\n\n  * EPUB writer:\n\n    + Use `getTimestamp`
  instead of `getCurrentTime` for timestamp.\n      Setting `SOURCE_DATE_EPOCH` will
  allow reproducible builds (#7093).\n      This does not suffice to fully enable
  reproducible in EPUB, since\n      a unique id is still being generated for each
  build.\n    + Support `belongs-to-collection` metadata (#7063) (Nick Berendsen).\n\n
  \ * JATS writer:\n\n    + Escape special chars in reference elements (Albert Krewinkel).\n
  \     Prevents the generation of invalid markup if a citation element\n      contains
  an ampersand or another character with a special meaning\n      in XML.\n\n  * Jira
  writer:\n\n    + Use Span identifiers as anchors (Albert Krewinkel).\n    + Use
  `{noformat}` instead of `{code}` for unknown languages (Albert\n      Krewinkel).
  Code blocks which are not marked as a language supported\n      by Jira are rendered
  as preformatted text via `{noformat}` blocks.\n\n  * LaTeX writer:\n\n    + Adjust
  hypertargets to beginnings of paragraphs (#7078).\n      Use `\\vadjust pre` so
  that the hypertarget takes you to the beginning\n      of the paragraph rather than
  one line down.\n      This makes a particular difference for links to citations
  using\n      `--citeproc` and `link-citations: true`.\n    + Change BCP47 lang tag
  from `jp` to `ja` (Mauro Bieg, #7047).\n    + Use function instead of map for accent
  lookup (should be\n      more efficient).\n    + Split the module to make it easier
  to compile on low-memory\n      systems:  added Text.Pandoc.Writers.LaTeX.{Util,Citation,Lang}.\n\n
  \ * Markdown writer:\n\n    + Handle math right before digit.  We insert an HTML
  comment to\n      avoid a `$` right before a digit, which pandoc will not recognize\n
  \     as a math delimiter.\n    + Split the module to make it easier to compile
  on low-memory\n      systems: added Text.Pandoc.Writers.Markdown.{Types,Inline}.\n\n
  \ * ODT writer:\n\n    + Use `getTimestamp` instead of `getCurrentTime` for timestamp.\n
  \     Setting `SOURCE_DATE_EPOCH` will allow reproducible builds.\n    + Update
  default ODT style (Lorenzo).  Previously, the \"First paragraph\"\n      style inherited
  from \"Standard\" but not from \"Text body.\" Now\n      it is adjusted to inherit
  from \"Text body\", to avoid some ugly\n      spacing issues. It may be necessary
  to update a custom `reference.odt`\n      in light of this change.\n\n  * Org writer:\n\n
  \   + Support `task_lists` extension (Albert Krewinkel, #6336).\n\n  * Pptx writer:\n\n
  \   + Use `getTimestamp` instead of `getCurrentTime` for timestamp.\n      Setting
  `SOURCE_DATE_EPOCH` will allow reproducible builds.\n\n  * JATS templates: tag `author.name`
  as `string-name` (Albert Krewinkel).\n    The partitioning the components of a name
  into surname, given names,\n    etc. is not always possible or not available. Using
  `author.name`\n    allows to give the full name as a fallback to be used when\n
  \   `author.surname` is not available.\n\n  * Add default templates for bibtex and
  biblatex, so that\n    the variables `header-include`, `include-before`, `include-after`\n
  \   (or alternatively the command line options\n    `--include-in-header`, `--include-before-body`,
  `--include-after-body`)\n    may be used.\n\n  * LaTeX template:\n\n    + Update
  to iftex package (#7073) (Andrew Dunning)\n    + Wrap url colours in braces (#7121)
  (Lo√Øc Grobol).\n\n  * revealjs template: Add 'center' option for vertical slide
  centering.\n    (maurerle, #7104).\n\n  * Text.Pandoc.XML: Improve efficiency of
  `fromEntities`.\n\n  * Text.Pandoc.MIME\n\n    + Add exported function `getCharset`
  [API change].\n\n  * Text.Pandoc.UTF8: change IO functions to return Text, not String\n
  \   [API change].  This affects `readFile`, `getContents`, `writeFileWith`,\n    `writeFile`,
  `putStrWith`, `putStr`, `putStrLnWith`, `putStrLn`.\n    `hPutStrWith`, `hPutStr`,
  `hPutStrLnWith`, `hPutStrLn`, `hGetContents`.\n    This avoids the need to uselessly
  create a linked list of characters\n    when emiting output.\n\n  * Text.Pandoc.App\n\n
  \   + Add `parseOptionsFromArgs` [API change, new exported function].\n    + Add
  fields for CSL options to `Opt` [API change]:\n      `optCSL`, `optbibliography`,
  `optCitationAbbreviations`.\n\n  * Text.Pandoc.Citeproc.BibTeX\n\n    + `Text.Pandoc.Citeproc.writeBibTeXString`
  now returns\n      `Doc Text` instead of `Text` (#7068).\n    + Correctly handle
  `pages` (= `page` in CSL) (#7067).\n    + Correctly handle BibLaTeX `langid` (=
  `language` in CSL, #7067).\n    + In BibTeX output, protect foreign titles since
  there's no language\n      field (#7067).\n    + Clean up BibTeX parsing (#7049).
  \ Previously there was a messy code\n      path that gave strange results in some
  cases, not passing through raw\n      tex but trying to extract a string content.
  \ This was an artefact of\n      trying to handle some special bibtex-specific commands
  in the BibTeX\n      reader. Now we just handle these in the LaTeX reader and simplify\n
  \     parsing in the BibTeX reader. This does mean that more raw tex will\n      be
  passed through (and currently this is not sensitive to the\n      `raw_tex` extension;
  this should be fixed).\n\n  * Text.Pandoc.Citeproc.MetaValue\n\n    + Correctly
  parse \"raw\" date value in markdown references metadata.\n      (See jgm/citeproc#53.)\n\n
  \ * Text.Pandoc.Citeproc\n\n    + Use https URLs for links (Salim B, #7122).\n\n
  \ * Text.Pandoc.Class\n\n    + Add `getTimestamp` [API change].  This attempts to
  read the\n      `SOURCE_DATE_EPOCH` environment variable and parse a UTC time\n
  \     from it (treating it as a unix date stamp, see\n      https://reproducible-builds.org/specs/source-date-epoch/).
  If the\n      variable is not set or can't be parsed as a unix date stamp, then
  the\n      function returns the current date.\n\n  * Text.Pandoc.Error\n\n    +
  Add `PandocUnsupportedCharsetError` constructor for\n      `PandocError` [API change].\n
  \   + Export `renderError` [API change].\n    + Refactor `handleError` to use `renderError`.
  This allows us render\n      error messages without exiting.\n\n  * Text.Pandoc.Extensions\n\n
  \   + `Ext_task_lists` is now supported by org (and turned\n      on by default)
  (Albert Krewinkel, #6336).\n    + Remove `Ext_fenced_code_attributes` from allowed
  commonmark attributes\n      (#7097).  This attribute was listed as allowed, but
  it didn't actually\n      do anything. Use `attributes` for code attributes and
  more.\n\n  * Lua subsystem:\n\n    + Always load built-in Lua scripts from default
  data-dir (Albert\n      Krewinkel).  The Lua modules `pandoc` and `pandoc.List`
  are now always\n      loaded from the system's default data directory. Loading from
  a\n      different directory by overriding the default path, e.g. via\n      `--data-dir`,
  is no longer supported to avoid unexpected behavior\n      and to address security
  concerns.\n    + Add module \"pandoc.path\" (Albert Krewinkel, #6001, #6565).\n
  \     The module allows to work with file paths in a convenient and\n      platform-independent
  manner.\n    + Use strict evaluation when retrieving AST value from the stack\n
  \     (Albert Krewinkel, #6674).\n\n  * Text.Pandoc.PDF\n\n    + Disable `smart`
  extension when building PDF via LaTeX.\n      This is to prevent accidental creation
  of ligatures like\n      `` ?` `` and `` !` `` (especially in languages with quotations
  like\n      German), and similar ligature issues.  (See jgm/citeproc#54.)\n\n  *
  Text.Pandoc.CSV:\n\n    + Fix parsing of unquoted values (#7112).  Previously we
  didn't allow\n      unescaped quotes in unquoted values, but they are allowed\n
  \     in CSV.\n\n  * Test suite:\n\n    + Use a more robust method for testing the
  executable.  Many\n      of our tests require running the pandoc executable. This\n
  \     is problematic for a few different reasons. First,\n      cabal-install will
  sometimes run the test suite after\n      building the library but before building
  the executable,\n      which means the executable isn't in place for the tests.\n
  \     One can work around that by first building, then building\n      and running
  the tests, but that's fragile.  Second, we\n      have to find the executable. So
  far, we've done that using\n      a function `findPandoc` that attempts to locate
  it\n      relative to the test executable (which can be located\n      using findExecutablePath).
  \ But the logic here is delicate\n      and work with every combination of options.
  \ To solve both\n      problems, we add an `--emulate` option to the\n      `test-pandoc`
  executable.  When `--emulate` occurs as the\n      first argument passed to `test-pandoc`,
  the program simply\n      emulates the regular pandoc executable, using the rest
  of\n      the arguments (after `--emulate`). Thus, `test-pandoc\n      --emulate
  -f markdown -t latex` is just like `pandoc -f\n      markdown -t latex`.  Since
  all the work is done by library\n      functions, implementing this emulation just
  takes a couple\n      lines of code and should be entirely reliable.  With this\n
  \     change, we can test the pandoc executable by running the\n      test program
  itself (locatable using `findExecutablePath`)\n      with the `--emulate` option.
  This removes the need for the\n      fragile `findPandoc` step, and it means we
  can run our\n      integration tests even when we're just building the\n      library,
  not the executable.  [Note: part of this change\n      involved simplifying some
  complex handling to set\n      environment variables for dynamic library paths.
  \ I have\n      tested a build with `--enable-dynamic-executable`, and it\n      works,
  but further testing may be needed.]\n    + Print accurate location if a test fails
  (Albert\n      Krewinkel).  Ensures that tasty-hunit reports the location\n      of
  the failing test instead of the location of the helper\n      `test` function.\n\n
  \ * Documentation: Update URLs and use `https` where possible (#7122,\n    Salim
  B).\n\n  * Add `doc/libraries.md`, a description of libraries that support pandoc.\n\n
  \ * MANUAL.txt\n\n    + MANUAL: block-level formatting is not allowed in line blocks
  (#7107).\n    + Clarify `tex_math_dollars` extension.  Note that no blank lines\n
  \     are allowed between the delimiters in display math.\n    + Add MANUAL section
  on reproducible builds.\n    + Document no template fallback for absolute path (#7077,
  Nixon\n      Enraght-Moony.)\n    + Improve docs for cite-method.\n    + Update
  README and man page.\n\n  * Makefile: in `make bench`, create CSV files for comparison
  and compare\n    against previous benchmark run.  Add timestamp to CSV filenames.\n\n
  \ * cabal.project: don't explicitly set -trypandoc.\n    If we do, this can't be
  overridden on the cabal command line.\n\n  * doc/lua-filters.md: improve documentation
  for\n    `pandoc.mediabag.insert`, `pandoc.mediabag.fetch`,\n    `directory`, `normalize`
  (Albert Krewinkel).\n\n  * Allow base64-bytestring-1.2.* (Dmitrii Kovanikov)\n\n
  \ * Require jira-wiki-markup 1.3.3 (Albert Krewinkel)\n\n  * Require citeproc 0.3.0.8,
  which correctly titlecases when titles\n    contain non-ASCII characters.\n\n  *
  Use skylighting 0.10.4.  This version of skylighting uses xml-conduit\n    rather
  than hxt. This speeds up parsing of XML syntax definitions\n    fourfold, and removes
  four packages from pandoc's dependency graph:\n    hxt-charproperties, hxt-unicode,
  hxt-regex-xmlschema, hxt.\n\n  * Add script `tools/parseTimings.pl` to help pin
  down which\n    modules take the most time and memory to compile.\n\n  * Avoid unnecessary
  use of NoImplicitPrelude pragma (#7089) (Albert\n    Krewinkel)\n\n  * Benchmarks\n\n
  \   + Use the lighter-weight tasty-bench instead of criterion.\n    + Run writer
  benchmarks for binary formats too.\n    + Alphabetize benchmarks.\n    + Don't run
  benchmarks for bibliography formats\n      (yet; we need a special input for them).\n
  \   + Show allocation data\n    + Clean up benchmark code.\n    + Allow specifying
  patterns using `-p blah'.\n\n  * trypandoc: add 2 second timeout.\n\n  * Use `-split-sections`
  in creating linux release binary.\n    This reduces executable size significantly
  (by about 30%).\n\n  * Remove `weigh-pandoc`.  It's not really useful any more,
  now that our\n    regular benchmarks include data on allocation.\n\n  * Improve
  linux package build process and add script to\n    automate building an arm64 binary
  package.\n\n\n## pandoc 2.11.4 (2021-01-22)\n\n  * Add `biblatex`, `bibtex` as output
  formats (closes #7040).\n\n  * Recognize more extensions as markdown by default
  (#7034):\n    `mkdn`, `mkd`, `mdwn`, `mdown`, `Rmd`.\n\n  * Implement defaults file
  inheritance (#6924, David Martschenko).\n    Allow defaults files to inherit options
  from other defaults files by\n    specifying them with the following syntax:\n    `defaults:
  [list of defaults files or single defaults file]`.\n\n  * Fix infinite HTTP requests
  when writing epubs from URL source (#7013).\n    Due to a bug in code added to avoid
  overwriting the cover image\n    if it had the form `fileX.YYY`, pandoc made an
  endless sequence\n    of HTTP requests when writing epub with input from a URL.\n\n
  \ * Org reader:\n\n    + Allow multiple pipe chars in todo sequences (Albert Krewinkel,
  #7014).\n      Additional pipe chars, used to separate \"action\" state from \"no
  further\n      action\" states, are ignored. E.g., for the following sequence, both\n
  \     `DONE` and `FINISHED` are states with no further action required:\n      `#+TODO:
  UNFINISHED | DONE | FINISHED`.\n    + Restructure output of captioned code blocks
  (Albert Krewinkel, #6977).\n      The Div wrapper of code blocks with captions now
  has the class\n      \"captioned-content\". The caption itself is added as a Plain
  block\n      inside a Div of class \"caption\". This makes it easier to write filters\n
  \     which match on captioned code blocks. Existing filters will need to be\n      updated.\n
  \   + Mark verbatim code with class `verbatim` (Dimitri Sabadie, #6998).\n\n  *
  LaTeX reader:\n\n    + Handle `filecontents` environment (#7003).\n    + Put contents
  of unknown environments in a Div when `raw_tex` is not\n      enabled (#6997). (When
  `raw_tex` is enabled, the whole environment is\n      parsed as a raw block.) The
  class name is the name of the environment.\n      Previously, we just included the
  contents without the surrounding Div,\n      but having a record of the environment's
  boundaries and name can be\n      useful.\n\n  * Mediawiki reader:\n\n    + Allow
  space around storng/emph delimiters (#6993).\n\n  * New module Text.Pandoc.Writers.BibTeX,
  exporting\n    writeBibTeX and writeBibLaTeX. [API change]\n\n  * LaTeX writer:\n\n
  \   + Revert table line height increase in 2.11.3 (#6996).\n      In 2.11.3 we started
  adding `\\addlinespace`, which produced less dense\n      tables.  This wasn't an
  intentional change; I misunderstood a comment in\n      the discussion leading up
  to the change. This commit restores the earlier\n      default table appearance.
  \ Note that if you want a less dense table, you\n      can use something like `\\def\\arraystretch{1.5}`
  in your header.\n\n  * EPUB writer:\n\n    + Adjust internal links to identifiers
  defined in raw HTML sections\n      after splitting into chapters (#7000).\n    +
  Recognize `Format \"html4\"`, `Format \"html5\"` as raw HTML.\n    + Adjust internal
  links to images, links, and tables after splitting into\n      chapters. Previously
  we only did this for Div and Span and Header\n      elements (see #7000).\n\n  *
  Ms writer:\n\n    + Don't justify text inside table cells.\n\n  * JATS writer:\n\n
  \   + Use `<element-citation>` if `element_citations`\n      extension is enabled
  (Albert Krewinkel).\n    + Fix citations (Albert Krewinkel, #7018).  By default\n
  \     we use formatted citations.\n    + Ensure that `<disp-quote>` is always wrapped
  in `<p>` (#7041).\n\n  * Markdown writer:\n\n    + Cleaned up raw formats.  We now
  react appropriately\n      to `gfm`, `commonmark`, and `commonmark_x` as raw formats.\n\n
  \ * RST writer:\n\n    + Fix bug with dropped content from inside spans with a class
  in\n      some cases (#7039).\n\n  * Docx writer:\n\n    + Handle table header using
  styles (#7008).  Instead of hard-coding\n      the border and header cell vertical
  alignment, we now let this\n      be determined by the Table style, making use of
  Word's\n      \"conditional formatting\" for the table's first row.  For\n      headerless
  tables, we use the tblLook element to tell Word\n      not to apply conditional
  first-row formatting.\n\n  * Commonmark writer:\n\n    + Implement start number
  on ordered lists (#7009).  Previously they always\n      started at 1, but according
  to the spec the start number is respected.\n\n  * HTML writer:\n\n    + Fix implicit_figure
  at end of footnotes (#7006).\n\n  * ConTeXt template: Remove `\\setupthinrules`
  from default template.\n    The width parameter this used is not actually supported,\n
  \   and the command didn't do anything.\n\n  * Text.Pandoc.Extensions:\n\n    +
  Add `Ext_element_citations` constructor (Albert Krewinkel).\n\n  * Text.Pandoc.Citeproc.BibTeX:
  New unexported function\n    `writeBibtexString`.\n\n  * Text.Pandoc.Citeproc:\n\n
  \   + Use finer grained imports (Albert Krewinkel).\n    + Factor out and export
  `getStyle` [API change].\n    + Export `getReferences` [API change, #7106].\n    +
  Factor out getLang.\n\n  * Text.Pandoc.Parsing: modify `gridTableWith'` for headerless
  tables.\n    If the table lacks a header, the header row should be an empty\n    list.
  Previously we got a list of empty cells, which caused\n    an empty header to be
  emitted instead of no header.  In LaTeX/PDF\n    output that meant we got a double
  top line with space between.\n\n  * ImageSize:  use `viewBox` for SVG if no length,
  width attributes (#7045).\n    This change allows pandoc to extract size information
  from more SVGs.\n\n  * Add simple default.nix.\n\n  * Use commonmark 0.1.1.3.\n\n
  \ * Use citeproc 0.3.0.5.\n\n  * Update default CSL to use latest chicago-author-date.csl.\n\n
  \ * CONTRIBUTING.md: add note on GNU xargs.\n\n  * MANUAL.txt:\n\n    + Update description
  of `-L`/`--lua-filter`.\n    + Document use of citations in note styles (#6828).\n\n##
  pandoc 2.11.3.2 (2020-12-29)\n\n  * HTML reader: use renderTags' from Text.Pandoc.Shared
  (Albert Krewinkel).\n    A side effect of this change is that empty `<col>` elements
  are written\n    as self-closing tags in raw HTML blocks.\n\n  * Asciidoc writer:
  Add support for writing nested tables (#6972, timo-a).\n    Asciidoc supports one
  level of nesting. If deeper tables are to be\n    written, they are omitted and
  a warning is issued.\n\n  * Docx writer: fix nested tables with captions (#6983).\n
  \   Previously we got unreadable content, because docx seems\n    to want a `<w:p>`
  element (even an empty one) at the end of\n    every table cell.\n\n  * Powerpoint
  writer: allow arbitrary OOXML in raw inline elements\n    (Albert Krewinkel).  The
  raw text is now included verbatim in the\n    output. Previously is was parsed into
  XML elements, which prevented\n    the inclusion of partial XML snippets.\n\n  *
  LaTeX writer: support colspans and rowspans in tables (#6950,\n    Albert Krewinkel).
  \ Note that the multirow package is needed for\n    rowspans.  It is included in
  the latex template under a variable,\n    so that it won't be used unless needed
  for a table.\n\n  * HTML writer: don't include p tags in CSL bibliography entries\n
  \   (#6966).  Fixes a regression in 2.11.3.\n\n  * Add `meta-description` variable
  to HTML templates (#6982). This\n    is populated by the writer by stringifying
  the `description`\n    field of metadata (Jerry Sky).  The `description` meta tag
  will\n    make the generated HTML documents more complete and SEO-friendly.\n\n
  \ * Citeproc: fix handling of empty URL variables (`DOI`, etc.).\n    The `linkifyVariables`
  function was changing these to links\n    which then got treated as non-empty by
  citeproc, leading\n    to wrong results (e.g. ignoring nonempty URL when empty DOI
  is present).\n    See jgm/citeproc#41.\n\n  * Use citeproc 0.3.0.3.  Fixes an issue
  in author-only citations when\n    both an author and translator are present, and
  an issue with\n    citation group delimiters.\n\n  * Require texmath 0.12.1.  This
  improves siunitx support in math,\n    fixes bugs with `\\*mod` family operators
  and arrays, and avoids\n    italicizing symbols and operator names in docx output.\n\n
  \ * Ensure that the perl interpreter used for filters with `.pl`\n    extension
  (wuffi).\n\n  * MANUAL: note that textarea content is never parsed as Markdown\n
  \   (Albert Krewinkel).\n\n\n## pandoc 2.11.3.1 (2020-12-18)\n\n  * Added some missing
  files to extra-source-files and data\n    files, so they are included in the sdist
  tarball.  Closes #6961.\n    Cleaned up some extraneous data and test files, and
  added\n    a CI check to ensure that the test and data files included\n    in the
  sdist match what is in the git repository.\n\n  * Use citeproc 0.3.0.1, which avoids
  removing nonbreaking\n    space at the end of the `initialize-with` attribute. (Some\n
  \   journals require nonbreaking space after initials, and this\n    makes that
  possible.)\n\n## pandoc 2.11.3 (2020-12-17)\n\n  * With `--bibliography` (or `bibliography`
  in metadata), a\n    URL may now be provided, and pandoc will fetch the resource.\n
  \   In addition, if a file path is provided and it is not\n    found relative to
  the working directory, the resource\n    path will be searched (#6940).\n\n  * Add
  `sourcepos` extension for `commonmark`, `gfm`, `commonmark_x`\n    (#4565).  With
  the `sourcepos` extension set set, `data-pos`\n    attributes are added to the AST
  by the commonmark reader. No other\n    readers are affected.  The `data-pos` attributes
  are put on elements\n    that accept attributes; for other elements, an enlosing
  Div or Span\n    is added to hold the attributes.\n\n  * Change extensions for `commonmark_x`:
  replace `auto_identifiers`\n    with `gfm_auto_identifiers` (#6863).  `commonmark_x`
  never actually\n    supported `auto_identifiers` (it didn't do anything), because
  the\n    underlying library implements gfm-style identifiers only.  Attempts\n    to
  add the `auto_identifiers` extension to `commonmark` will now\n    fail with an
  error.\n\n  * HTML reader:\n\n    + Split module into several submodules (Albert
  Krewinkel).  Reducing\n      module size should reduce memory use during compilation.\n
  \   + Support advanced table features (Albert Krewinkel):\n      block level content
  in captions, row and colspans,\n      body headers, row head columns, footers, attributes.\n
  \   + Disable round-trip testing for tables. Information for cell\n      alignment
  in a column is not preserved during round-trips (Albert\n      Krewinkel).\n    +
  Allow finer grained options for tag omission (Albert Krewinkel).\n    + Simplify
  list attribute handling (Albert Krewinkel).\n    + Pay attention to `lang` attributes
  on body element (#6938).\n      These (as well as `lang` attributes on the html
  element) should update\n      lang in metadata.\n    + Retain attribute prefixes
  and avoid duplicates (#6938).\n      Previously we stripped attribute prefixes,
  reading `xml:lang` as\n      `lang` for example. This resulted in two duplicate
  `lang`\n      attributes when `xml:lang` and `lang` were both used.  This commit\n
  \     causes the prefixes to be retained, and also avoids invald\n      duplicate
  attributes.\n\n  * Commonmark reader:\n\n    + Refactor `specFor`.\n    + Set input
  name to `\"\"` to avoid clutter in sourcepos output.\n\n  * Org reader:\n\n    +
  Parse `#+LANGUAGE` into `lang` metadata field (#6845, Albert\n      Krewinkel).\n
  \   + Preserve targets of spurious links (#6916, Albert\n      Krewinkel).  Links
  with (internal) targets that the reader doesn't\n      know about are converted
  into emphasized text. Information on the\n      link target is now preserved by
  wrapping the text in a Span of class\n      `spurious-link`, with an attribute `target`
  set to the link's\n      original target. This allows to recover and fix broken
  or unknown\n      links with filters.\n\n  * DocBook reader:\n\n    + Table text
  width support (#6791, Nils Carlson).\n      Table width in relation to text width
  is not natively supported\n      by docbook but is by the docbook `fo` stylesheets
  through an XML\n      processing instruction, `<?dbfo table-width=\"50%\"?>`.\n\n
  \ * LaTeX reader:\n\n    + Improve parsing of command options (#6869, #6873).\n
  \     In cases where we run into trouble parsing inlines til the\n      closing
  `]`, e.g. quotes, we return a plain string with the\n      option contents. Previously
  we mistakenly included the brackets\n      in this string.\n    + Preserve center
  environment (#6852, Igor Pashev).\n      The contents of the `center` environment
  are put in a `Div`\n      with class `center`.\n    + Don't parse `\\rule` with
  width 0 as horizontal rule. These are\n      sometimes used as spacers in LaTeX.\n
  \   + Don't apply theorem default styling to a figure inside (#6925).\n      If
  we put an image in italics, then when rendering to Markdown\n      we no longer
  get an implicit figure.\n\n  * Dokuwiki reader:\n\n    + Handle unknown interwiki
  links better (#6932).\n      DokuWiki lets the user define his own Interwiki links.
  \ Previously\n      pandoc reacted to these by emitting a google search link, which
  is\n      not helpful. Instead, we now just emit the full URL including the\n      wikilink
  prefix, e.g. `faquk>FAQ-mathml`.  This at least gives users\n      the ability to
  modify the links using filters.\n\n  * Markdown writer:\n\n    + Properly handle
  boolean values in writing YAML metadata (#6388).\n    + Ensure that a new csl-block
  begins on a new line (#6921).\n      This just looks better and doesn't affect the
  semantics.\n\n  * RST writer:\n\n    + Better image handling (#6948).  An image
  alone in its paragraph\n    (but not a figure) is now rendered as an independent
  image, with an\n    `alt` attribute if a description is supplied.  An inline image
  that\n    is not alone in its paragraph will be rendered, as before, using a\n    substitution.
  \ Such an image cannot have a \"center\", \"left\", or\n    \"right\" alignment,
  so the classes `align-center`, `align-left`, or\n    `align-right` are ignored.
  \ However, `align-top`, `align-middle`,\n    `align-bottom` will generate a corresponding
  `align` attribute.\n\n  * Docx writer:\n\n    + Keep raw openxml strings verbatim
  \ (#6933, Albert Krewinkel).\n    + Use Content instead of Element.  This allows
  us to inject\n      raw OpenXML into the document without reparsing it into an\n
  \     Element, which is necessary if you want to inject an open\n      tag or close
  tag.\n    + Fix bullets/lists indentation, so that the first level is slightly\n
  \     indented to the right instead of right on the margin (cholonam).\n    + Support
  bold and italic in \"complex script\" (#6911).\n      Previously bold and italics
  didn't work properly in LTR\n      text.  This commit causes the w:bCs and w:iCs
  attributes\n      to be used, in addition to w:b and w:i, for bold and\n      italics
  respectively.\n\n  * ICML writer:\n\n    + Fix image bounding box for custom widths/heighta
  (Mauro Bieg, #6936).\n\n  * LaTeX writer:\n\n    + Improve table spacing (#6842,
  #6860).\n      Remove the `\\strut` that was added at the end of minipage\n      environments
  in cells.  Replace `\\tabularnewline` with\n      `\\\\ \\addlinespace`.\n    +
  Improve calculation of column spacing (#6883).\n    + Extract table handling into
  separate module (Albert Krewinkel).\n    + Fix bug with nested `csl-` display Spans
  (#6921).\n    + Improve longtable output (#6883).  Don't create minipages for\n
  \     regular paragraphs.  Put width and alignment information in the\n      longtable
  column descriptors.\n\n  * OpenDocument writer:\n\n    + Support for table width
  as a percentage of text width\n      (#6792, Nils Carson).\n    + Implement Div
  and Span ident support (#6755, Nils Carson).\n      Spans and Divs containing an
  ident in the Attr will become bookmarks\n      or sections with idents in OpenDocument
  format.\n    + Add two extensions, `xrefs_name` and `xrefs_number` (#6774, Nils\n
  \     Carlson).  Links to headings, figures and tables inside the\n      document
  are substituted with cross-references that will use the\n      name or caption of
  the referenced item for `xrefs_name` or the\n      number for `xrefs_number`.  For
  the `xrefs_number` to be useful\n      heading numbers must be enabled in the generated
  document and\n      table and figure captions must be enabled using for example
  the\n      `native_numbering` extension.  In order for numbers and reference\n      text
  to be updated the generated document must be refreshed.\n\n  * JATS writer:\n\n
  \   + Support advanced table features (Albert Krewinkel).\n    + Support author
  affiliations (#6687, Albert Krewinkel).\n\n  * Docbook writer:\n\n    + Use correct
  id attribute consistently (Jan Tojnar).\n      DocBook5 should always use `xml:id`
  instead of `id`.\n    + Handle admonition titles better (Jan Tojnar).\n      Docbook
  reader produces a `Div` with `title` class for `<title>`\n      element within an
  ‚Äúadmonition‚Äù element. Markdown writer then turns\n      this into a fenced div with
  `title` class attribute. Since fenced\n      divs are block elements, their content
  is recognized as a\n      paragraph by the Markdown reader. This is an issue for
  Docbook\n      writer because it would produce an invalid DocBook document from\n
  \     such AST ‚Äì the `<title>` element can only contain ‚Äúinline‚Äù\n      elements.
  \ Handle this special case separately by unwrapping\n      the paragraph before
  creating the `<title>` element.\n    + Add XML namespaces to top-level elements
  (#6923, Jan Tojnar).\n      Previously, we only added `xmlns` attributes to chapter\n
  \     elements, even when running with `--top-level-division=section`.\n      These
  namespaces are now added to part and section elements too,\n      when they are
  the selected top-level divisions.\n      We do not need to add namespaces to documents
  produced with\n      `--standalone` flag, since those will already have xmlns attribute
  on\n      the root element in the template.\n\n  * HTML writer:\n\n    + Fix handling
  of nested `csl-` display spans (#6921).\n      Previously inner Spans used to represent
  CSL display attributes were\n      not rendered as div tags as intended.\n\n  *
  EPUB writer:\n\n    + Include title page in landmarks (#6919).\n      Note that
  the toc is also included if `--toc` is specified.\n    + Add frontmatter type on
  body element for nav.xhtml (#6918).\n\n  * EPUB templates: use preserveAspectRatio=\"xMidYMid\"
  for cover image (#6895,\n    Shin Sang-jae).  This change affects both the epub2
  and the epub3\n    templates.  It avoids distortion of the cover image by requiring
  that the\n    aspect ratio be preserved.\n\n  * LaTeX template:\n\n    + Include
  `csquotes` package if `csquotes` variable set.\n    + Put back `amssymb`.  We need
  it for checkboxes in todo lists,\n      and maybe for other things.  In this location
  it seems compatible\n      with the cases that prompted #6469 and PR #6762.\n    +
  Disable language-specific shorthands in babel (#6817, #6887).\n      Babel defines
  \"shorthands\" for some languages, and these can\n      produce unexpected results.
  For example, in Spanish, `1.22`\n      gets rendered as `122`, and `et~al.` as `etal`.\n
  \     One would think that babel's `shorthands=off` option (which\n      we were
  using) would disable these, but it doesn't.  So we\n      remove `shorthands=off`
  and add some code that redefines\n      the shorthands macro.  Eventually this will
  be fixed in babel,\n      I hope, and we can revert to something simpler.\n\n  *
  JATS template: allow array of persistent institute ids in `pid`\n    (Albert Krewinkel).\n\n
  \ * Text.Pandoc.Parsing:  minor code and efficiency improvements.\n\n  * Text.Pandoc.Extension:\n\n
  \   + Add `Ext_sourcepos` constructor for `Extension` [API change].\n    + Add `Ext_xrefs_name`
  and `Ext_xrefs_number` constructors for\n      `Extension` (Nils Carson) [API change].\n\n
  \ * Text.Pandoc.Citeproc:\n\n    + Fix truncation of `[Citation]` list in `Cite`
  inside footnotes (#6890).\n      This affected author-in-text citations in footnotes.
  \ It didn't cause\n      problems for the printed output, but for filters that expected
  the\n      citation id and other information.\n    + Allow the use of both inline
  and external references (#6951),\n      as with pandoc-citeproc.  References defined
  in the document's\n      metadata take priority over references with the same id
  defined in\n      an external bibliography.\n    + Use `fetchItem` to get external
  bibliography (#6940).\n    + Ensure that BCP47 lang codes can be used.  We ignore
  the variants\n      and just use the base lang code and country code when passing
  off\n      to citeproc.\n    + Citeproc BibTeX parser: revert change in `getRawField`\n
  \     which was made (for reasons forgotten) when transferring\n      this code
  from pandoc-citeproc.  The change led to `--` in\n      URLs being interpreted as
  en-dashes, which is unwanted (#6874).\n\n  * Text.Pandoc.ImageSize:\n\n    + Default
  to DPI 72 if the format specifies DPI of 0 (#6880).\n      This shouldn't happen,
  in general, but it can happen with\n      JPEGs that don't conform to the spec.
  \ Having a DPI of 0\n      will blow up size calculations (division by 0).\n    +
  ImageSize: use JuicyPixels to determine size for png, jpeg, and\n      gif, instead
  of doing our own binary parsing (#6936). This\n      gives more reliable results.\n\n
  \ * Text.Pandoc.CSS:\n\n    + Remove `foldOrElse` (internal module) (Albert Krewinkel).\n\n
  \ * Use skylighting 0.10.2 (#6625).\n\n  * Use citeproc 0.3. This fixes issues with
  references with\n    duplicate ids (jgm/citeproc#36).\n\n  * Use doctemplates 0.9.
  \ This fixes issues with boolean\n    metadata values in the Markdown writer (#6388)\n
  \   and in `meta-json` (#6650).  It also fixes\n    issues with nested for loops
  in templates.\n\n  * Add translations zh-Hans.yaml and zh-Hant.yaml (#6904, #6909,\n
  \   Kolen Cheung, taotieren).\n\n  * Add tests: True to cabal.project.\n    This
  fixes some CI failures for cabal.\n\n  * Normalize test/tables/*.native (#6888,
  Kolen Cheung).\n\n  * Move executable to `app` directory to avoid problems with
  cabal repl.\n\n  * CONTRIBUTING: add section \"How can I help?\" (#6892, Albert
  Krewinkel).\n    Also adds a paragraph aimed at highlighting the importance of feature\n
  \   maintenance.\n\n  * MANUAL: Document that --number-sections works in `ms` (#6935).\n\n\n##
  pandoc 2.11.2 (2020-11-19)\n\n  * Default to using ATX (`##`-style) headings for
  Markdown output\n    (#6662, Aner Lucero).  Previously we used Setext (underlined)
  headings\n    by default for levels 1--2.\n\n  * Add option `--markdown-headings=atx|setext`,
  and deprecate\n    `--atx-headers` (#6662, Aner Lucero).\n\n  * Support `markdown-headings`
  in defaults files.\n\n  * Fix corner case in YAML metadata parsing (#6823).  Previously
  YAML\n    metadata would sometimes not get recognized if a field ended with a\n
  \   newline followed by spaces.\n\n  * `--self-contained`: increase coverage (#6854).\n
  \   Previously we only self-contained attributes for certain tag names\n    (`img`,
  `embed`, `video`, `input`, `audio`, `source`, `track`,\n    `section`).  Now we
  self-contain any occurrence of `src`,\n    `data-src`, `poster`, or `data-background-image`,
  on any tag; and\n    also `href` on `link` tags.\n\n  * Markdown reader:\n\n    +
  Fix detection of locators following in-text citations.\n      Prevously, if we had
  `@foo [p. 33; @bar]`, the `p. 33` would be\n      incorrectly parsed as a prefix
  of `@bar` rather than a suffix of\n      `@foo`.\n    + Improve period suppression
  algorithm for citations in notes\n      in note citation styles (#6835).\n    +
  Don't increment `stateNoteNumber` for example list references.\n      This helps
  with #6836 (a bug in which example list references\n      disturb calculation of
  citation note number and affect when\n      `ibid` is triggered).\n\n  * LaTeX reader:\n\n
  \   + Move `getNextNumber` from Readers.LaTeX to Readers.LaTeX.Parsing.\n    + Fix
  negative numbers in siunitx commands.  A change in pandoc 2.11\n      broke negative
  numbers, e.g.  `\\SI{-33}{\\celcius}` or `\\num{-3}`.\n      This fixes the regression.\n\n
  \ * DocBook reader: drop period in formalpara title\n    and put it in a div with
  class `formalpara-title`, so that\n    people can reformat with filters (#6562).\n\n
  \ * Man reader: improve handling of `.IP` (#6858).  We now better handle\n    `.IP`
  when it is used with non-bullet, non-numbered lists, creating a\n    definition
  list.  We also skip blank lines like groff itself.\n\n  * Bibtex reader: fall back
  on `en-US` if locale for LANG not found.\n    This reproduces earlier pandoc-citeproc
  behavior (jgm/citeproc#26).\n\n  * JATS writer:\n\n    + Wrap all tables (Albert
  Krewinkel).\n      All `<table>` elements are put inside `<table-wrap>` elements,
  as the\n      former are not valid as immediate child elements of `<body>`.\n    +
  Move Table handling to separate module (Albert Krewinkel).\n      Adds two new unexported
  modules:\n      Text.Pandoc.Writers.JATS.Types, Text.Pandoc.Writers.JATS.Table.\n\n
  \ * Org writer:\n\n    + Replace org #+KEYWORDS with #+keywords (TEC).\n      As
  of ~2 years ago, lower case keywords became the standard (though\n      they are
  handled case insensitive, as always).\n    + Update org supported languages and
  identifiers according to the\n      current list contained in\n      <https://orgmode.org/worg/org-contrib/babel/languages/index.html>\n
  \     (TEC).\n\n  * Only use `filterIpynbOutput` if input format is ipynb (#6841).\n
  \   Before this change content could go missing from divs with class\n    `output`,
  even when non-ipynb was being converted.\n\n  * When checking reader/writer name,
  check base name now that we permit\n    extensions on formats other than markdown.\n\n
  \ * Text.Pandoc.PDF: Fix `changePathSeparators` for Windows (#6173).\n    Previously
  a path beginning with a drive, like `C:\\foo\\bar`, was\n    translated to `C:\\/foo/bar`,
  which caused problems.\n    With this fix, the backslashes are removed.\n\n  * Text.Pandoc.Logging:\n\n
  \   + Add constructor `ATXHeadingInLHS` to `LogMessage` [API change].\n    + Add
  constructor `EnvironmentVariableUndefined` to\n      `LogMessage` [API change].\n\n
  \ * Fix error that is given when people specify `doc` output (#6834,\n    gison93).\n\n
  \ * LaTeX template:  add a `\\break` after parbox in `CSLRightInline`.\n    This
  should fix spacing problems between entries with numeric styles.\n    Also fix number
  of params on `CSLReferences`.\n\n  * reveal.js template: Put quotes around `controlsLayout`,\n
  \   `controlsBackArrows`, and `display`, since these require strings.\n    Add `showSlideNumber`,
  `hashOneBasedIndex`, `pause`.\n\n  * Use citeproc 0.2.  This fixes a bug with title
  case around parentheses.\n\n  * pandoc.cabal: remove 'static' flag.\n    This isn't
  really necessary and can be misleading (e.g. on macOS,\n    where a fully static
  build isn't possible). cabal's new option\n    `--enable-executable-static` does
  the same. On stack you can add\n    something like this to the options for your
  executable in package.yaml:\n\n        ld-options: -static -pthread\n\n  * Remove
  obsolete bibutils flag setting in `linux/make_artifacts.sh`.\n\n  * Manual:\n\n
  \   + Correct `link-citation` -> `link-citations`.\n    + Add a sentence about `pagetitle`
  for HTML (#6843, Alex Toldaiev).\n\n  * INSTALL.md: Remove references to `pandoc-citeproc`
  (#6857).\n\n  * CONTRIBUTING: describe hlint and how it's used (#6840, Albert\n
  \   Krewinkel).\n\n## pandoc 2.11.1.1 (2020-11-07)\n\n  * Citeproc: improve punctuation
  in in-text note citations (#6813).\n    Previously in-text note citations inside
  a footnote would sometimes have\n    the final period stripped, even if it was needed
  (e.g. on the end of\n    'ibid').\n\n  * Use citeproc 0.1.1.1.  This improves the
  decision about when\n    to use `ibid` in cases where citations are used inside\n
  \   a footnote (#6813).\n\n  * Support `nocase` spans for `csljson` output.\n\n
  \ * Require latest commonmark, commonmark-extensions.\n    This fixes a bug with
  `autolink_bare_uris` and commonmark.\n\n  * LaTeX reader: better handling of `\\\\`
  inside math in table cells (#6811).\n\n  * DokuWiki writer:  translate language
  names for code elements\n    and improve whitespace (#6807).\n\n  * MediaWiki writer:
  use `syntaxhighlight` tag instead of deprecated\n    `source` for highlighted code
  (#6810).  Also support `startFrom`\n    attribute and `numberLines`.\n\n  * Lint
  code in PRs and when committing to master (#6790,\n    Albert Krewinkel).\n\n  *
  doc/filters.md: describe technical details of filter invocations (#6815,\n    Albert
  Krewinkel).\n\n\n## pandoc 2.11.1 (2020-11-03)\n\n  * DocBook Reader: fix duplicate
  bibliography bug (#6773, Nils Carlson).\n\n  * HTML reader:\n\n    + Parse contents
  of iframes (#6770).\n    + Parse inline svg as image unless `raw_html` is set in
  the reader (in\n      which case the svg is passed through as raw HTML) (#6770).\n\n
  \ * LaTeX reader:\n\n    + Fix bug parsing macro arguments (#6796).  If `\\cL` is\n
  \     defined as `\\mathcal{L}`, and `\\til` as `\\tilde{#1}`, then\n      `\\til\\cL`
  should expand to `\\tilde{\\mathcal{L}}`, but\n      pandoc was expanding it to
  `\\tilde\\mathcal{L}`.  This is\n      fixed by parsing the arguments in \"verbatim
  mode\" when the\n      macro expands arguments at the point of use.\n    + Properly
  support optional (cite) argument for\n      `\\blockquote` from `csquotes` (#6802).\n\n
  \ * LaTeX writer: Improved calculation of table column widths.\n    We now have
  LaTeX do the calculation, using `\\tabcolsep`.\n    So we should now have accurate
  relative column widths no\n    matter what the text width.  The default template
  has been modified to load\n    the calc package if tables are used.\n\n  * HTML
  writer: Fix duplicate \"class\" attribute for table\n    rows (Andy Morris).\n\n
  \ * Text.Pandoc.Filter: allow shorter YAML representation of Citeproc\n    (Albert
  Krewinkel).  The map-based YAML representation of filters expects\n    `type` and
  `path` fields. The path field had to be present for all filter\n    types, but is
  not used for citeproc filters. The field can now be omitted\n    when type is \"citeproc\",
  as described in the MANUAL.\n\n  * Text.Pandoc.Error: Add `PandocBibliographyError`
  constructor\n    for `PandocError` [API change].  This ensures that bibliography
  parsing\n    errors generate messages that include the bibliography file name --\n
  \   otherwise it can be quite mysterious where it is coming from.\n\n  * Citeproc:
  properly handle `csl` field with `data:` URI (#6783).\n    This is used with the
  JATS writer, so this fixes a regression\n    in pandoc 2.11 with JATS output and
  citeproc.\n\n  * Allow `citation-abbreviations` in defaults file.\n\n  * JATS templates:
  ensure `jats_publishing` output is valid\n    (Albert Krewinkel).\n\n  * LaTeX template:
  \ Fix `CSLRightInline`, so that it does not\n    run over the right margin.\n\n
  \ * HTML template: default CSS tweaks (Mauro Bieg and John\n    MacFarlane).\n\n
  \   - Fix margin before codeblock\n    - Add `monobackgroundcolor` variable, making
  the background color\n      and padding of code optional.\n    - Ensure that backgrounds
  from highlighting styles take precedence over\n      monobackgroundcolor\n    -
  Remove list markers from TOC\n    - Add margin-bottom where needed\n    - Remove
  italics from blockquote styling\n    - Change borders and spacing in tables to be
  more consistent with other\n       output formats\n    - Style h5, h6\n    - Set
  font-size for print media to 12pt.\n    - Reduce interline space.\n    - Reduce
  interparagraph space.\n    - Reduce line width.\n    - Remove the special `line-height:
  1` for table cells.\n    - Remove the special line-height for pre.\n    - Ensure
  that there is a bit more space before a heading\n      than after.\n    - Slightly
  reduced space after title header.\n    - Add CSS example to MANUAL\n\n  * man template:
  \ Change comment that triggers `tbl` from\n    `.\\\"t` to `'\\\" t`, as specified
  in groff_man(7) (#6803).\n\n  * Use latest commonmark, commonmark-extensions.\n
  \   This fixes a bug with nested blocks in footnotes with the\n    `footnote` extension
  to `commonmark`.  See jgm/commonmark-hs#63.\n\n  * Citeproc: use comma for in-text
  citations inside footnotes.\n    When an author-in-text citation like `@foo` occurs
  in a footnote,\n    we now render it with:  `AUTHOR NAME + COMMA + SPACE + REST`.\n
  \   Previously we rendered: `AUTHOR NAME + SPACE + \"(\" + REST + \")\"`.\n    This
  gives better results.  Note that normal citations are still\n    rendered in parentheses.\n\n
  \ * Use latest citeproc:\n\n    + citeproc no longer capitalizes notes, so we do
  it\n      in pandoc when appropriate.\n    + Closes #6783.\n\n  * Clarify manual
  on `--track-changes` (#6801).\n\n  * Add `doc/jats.md` to document pandoc's handling
  of JATS\n    (#6794, Albert Krewinkel).\n\n  * Fix code example in lua-filters.md
  (#6795).\n\n## pandoc 2.11.0.4 (2020-10-21)\n\n  * Commonmark writer: fix regression
  with fenced divs (#6768).\n    Starting with 2.10.1, fenced divs no longer render
  with\n    HTML div tags in commonmark output.  This is a regression\n    due to
  our transition from cmark-gfm.  This commit fixes it.\n\n  * Use released version
  of citeproc.  (This fixes a mis-step\n    in the 2.11.0.3 release, which is now
  deprecated.)\n\n  * Use latest sylighting, with support for `groovy`.\n\n  * Document
  that --html-q-tags requires the smart extension on the reader\n    (#6766).\n\n##
  pandoc 2.11.0.3 (2020-10-20)\n\n  * Use latest citeproc (closes #6765). This fixes
  a problem with\n    author-in-text citations for references including both an author\n
  \   and an editor. Previously, both were included in the text, but only\n    the
  author should be.\n\n  * With `--citeproc`, ensure that the final period is removed
  when\n    citations that occur in notes in note-based styles get put in\n    parentheses.
  \ See jgm/citeproc#20.\n\n  * Normalize rewritten image paths with `--extract-media`
  (#6761).\n    This change will avoid mixed paths like this one when\n    `--extract-media`
  is used with a Word file:\n    `![](C:\\Git\\TIJ4\\Markdown/media/image30.wmf)`.
  \ Instead we'll get\n    `![](C:\\Git\\TIJ4\\Markdown`media`image30.wmf)`.\n\n  *
  Modify `--version` output.  Use space more efficiently and report the\n    citeproc
  and ipynb versions, along with skylighting, texmath, and\n    pandoc-types.  Drop
  the word \"default\" before \"user data directory.\"\n\n  * DocBook reader: bibliomisc
  and anchor support (#6754, Nils Carlson).\n    Also ensure that bibliodiv without
  a title no longer results in\n    an empty Header.\n\n  * ConTeXt template: adds
  `\\setupinterlinespace` to fonts larger\n    than normal (#6763, Denis Maier).\n\n
  \ * LaTeX template: Do not load amssymb if not needed (#6469, Angelo Peronio).\n
  \   See <https://tex.stackexchange.com/a/549938>.\n\n  * Relax upper bound on hslua,
  allow hslua-1.3.* (Albert Krewinkel).\n\n  * MANUAL:\n\n    + Improve explanation
  of \"indent\" variable (#6767, Cyrus Yip).\n    + Remove org from list of input
  formats supporting raw_tex (#6753,\n      Nick Fleisher).\n\n\n## pandoc 2.11.0.2
  (2020-10-15)\n\n  * Fix handling of `xdata` in bibtex/biblatex bibliographies (#6752).\n\n
  \ * Fix some small typos in the API documentation (#6751, Michael Hoffmann).\n\n
  \ * Require citeproc 0.1.0.2.  This fixes a regression from pandoc-citeproc\n    involving
  spacing between components of a reference in certain styles\n    (e.g. `cell.csl`).\n\n
  \ * Fix typos in comments, doc strings, error messages, and tests\n    (Albert Krewinkel,
  #6738).\n\n## pandoc 2.11.0.1 (2020-10-13)\n\n  * LaTeX reader: support more acronym
  commands (#6746):\n    `\\acl`, `\\aclp`, and capitalized versions of already\n
  \   supported commands.\n\n  * Commonmark reader: add `pipe_table` extension *after*
  defaults (#6739).\n    Otherwise we get bad results for non-table, non-paragraph\n
  \   lines containing pipe characters.\n\n  * Markdown writer: Fix autolinks rendering
  for gfm (#6740).\n    Previously, autolinks rendered as raw HTML, due to the\n    `class=\"uri\"`
  added by pandoc's markdown reader.\n\n  * LaTeX writer:\n\n    + Escape option values
  in lstlistings environment (#6742).\n    + Fix handling of `lang` `pt-BR` (#2953).
  \ For polyglossia we now\n      use `\\setmainlanguage[variant=brazilian]{portuguese}`
  and for babel\n      `\\usepackage[shorthands=off,main=brazilian]{babel}`.\n\n  *
  Depend on latest citeproc (0.1.0.1).\n\n    + This fixes the citation number issue
  with ieee.csl and other\n      styles that do not explicitly sort bibliographies
  (#6741). (Pandoc\n      was numbering them by their order in the bibliography file,\n
  \     rather than the order cited, as required by the CSL spec.)\n    + Fixes groupin/collapsing
  with citation items with prefixes.\n\n  * default.latex: fix `CSLReference` macro
  definition.\n\n  * Fix MANUAL.txt CSL JSON conversion examples.\n\n  * Fix spelling
  errors in changelog, MANUAL.txt, `doc/org.md` (#6738).\n\n\n## pandoc 2.11 (2020-10-11)\n\n
  \ * Add `--citeproc` (`-C`) option to trigger built-in citation processing.\n    It
  is no longer necessary to use the external `pandoc-citeproc`\n    filter.  `--citeproc`
  behaves like a filter and can be positioned\n    relative to other filters as they
  appear on the command line.\n\n    The new built-in citation processing uses the
  citeproc library,\n    a reimplementation of CSL citation processing that fixes
  many\n    of the shortcomings of pandoc-citeproc.  In general, citation\n    processing
  should work much the same as it did with pandoc-citeproc,\n    but with greater
  fidelity to CSL styles and better performance.\n    (The tests from the pandoc-citeproc
  package have been carried\n    over to pandoc.) The following differences should
  be noted:\n\n    - At this point, only some of the writers (HTML, ms, LaTeX) properly\n
  \     interpret CSL display styles.  You should get decent output in\n      all
  formats (at least as good as with pandoc-citeproc), but\n      indentation and block-alignment
  may not be right.\n\n    - pandoc-citeproc searches the `~/.csl` directory for `.csl`\n
  \     styles.  Pandoc instead searches the `csl` subdirectory of\n      the pandoc
  user data directory (e.g., `~/.pandoc/csl` or\n      `~/.local/share/pandoc/csl`).
  \ Users who already keep\n      CSL styles in `~/.csl` may find it convenient to
  add a\n      symlink.\n\n    - Some of the bibliography formats supported by pandoc-citeproc
  (via\n      hs-bibutils) are no longer supported:  Copac, EndNote,\n      ISI, MEDLINE,
  MODS, and RIS.  If you use one of these formats,\n      you may use the `bibutils`
  utility to convert to BibLaTeX.\n      We now support only BibTeX, BibLaTeX, CSL
  JSON,\n      and pandoc's YAML/Markdown analogue of CSL JSON.\n\n    - pandoc-citeproc
  would always retrieve the independent parent\n      of a dependent style by doing
  an HTTP request.  pandoc will\n      now first seek the independent parent locally
  (in the resource\n      path or in the `csl` subdirectory of the pandoc user data\n
  \     directory) before resorting to HTTP.  In addition, you may\n      omit the
  `.csl` extension, e.g. `--csl zoology`.\n\n    - Using the `--bibliography` option
  (or including\n      `bibliography` in YAML metadata) no longer triggers\n      citation
  processing implicitly: one must always use the\n      `--citeproc` option if citation
  processing is wanted.\n\n  * Add `csljson` as and input and output format. This
  allows pandoc\n    to convert between `csljson` and other bibliography formats\n
  \   (e.g. `-f csljson -t markdown -s` or `-f bibtex -t csljson`),\n    and to generate
  formatted versions of CSL JSON bibliographies\n    (e.g., `pandoc -f csljson --citeproc
  pl.json -o pl.pdf`).\n\n  * Added `bibtex`, `biblatex` as input formats.  This allows
  pandoc\n    to convert between BibLaTeX and BibTeX and other bibliography formats,\n
  \   and to generated formatted versions of BibTeX/BibLaTeX bibliographies\n    (e.g.,
  `pandoc -f biblatex --citeproc pl.bib -o pl.pdf`).\n\n  * Raise informative errors
  when YAML metadata parsing fails (#6730).\n    Previously the command would succeed,
  returning empty metadata,\n    with no errors or warnings.\n\n  * Sort languages
  in `--list-highlight-languages` output (#6718,\n    Albert Krewinkel).  Languages
  were previously sorted by their\n    long name, which leads to unexpected results).\n\n
  \ * Add CSS to default HTML template (#6601, Mauro Bieg).  This\n    greatly improves
  the default typography in pandoc's HTML\n    output.  The CSS is sensitive to a
  number of variables\n    (e.g. `mainfont`, `fontsize`, `linestretch`): see the manual
  for\n    details. To restore the earlier, more spartan output, you can\n    disable
  this with `-M document-css=false`.\n\n  * Support `--toc-depth` option for ODT writer
  (#6696, niszet).\n\n  * Fix issues with Windows UNC paths with some options (#5127).\n\n
  \ * Remove `fenced_code_blocks` and `backtick_code_blocks` from allowed\n    `commonmark`
  and `gfm` extensions.  These shouldn't really be counted\n    as extensions, because
  they can't be disabled in commonmark.\n    Adjust markdown writer to check for the
  commonmark variant in addition\n    to extensions.\n\n  * Add these extensions to
  `gfm` and `commonmark`:\n    `fenced_code_blocks`, `backtick_code_blocks`, `fenced_code_attributes`.\n
  \   These can't really be disabled in the reader, but they need to be enabled\n
  \   in the writer or we just get indented code.\n\n  * Make sure proper set of extensions
  is recognized for `commonmark_x`.\n\n  * Allow `gfm_auto_identifiers`, `ascii_identifiers`
  extensions for `docx`.\n\n  * Markdown reader:\n\n    + Add `Maybe FilePath` parameter
  to `yamlToMeta` [API change].\n    + Export `yamlToRefs` [API change], a version
  of `yamlToMeta`\n      specialized to references.\n    + Set `citationNoteNum` accurately
  in citations.\n    + Revise abbreviation support.  Don't insert a nonbreaking space
  after a\n      potential abbreviation if it comes right before a note or citation.\n
  \     This causes problems for citeproc's moving of note citations.\n\n  * LaTeX
  reader:\n\n    + Support missing siunitx commands (#6658).\n    + Support `squared`,
  `cubed`, `tothe` in siunitx (#6657).\n    + Improved uncertainty handling in slunitx.\n
  \   + Factored out siunitx stuff into separate unexposed module.\n    + Fix improper
  empty cell filtering (#6689, Christian Despres).\n    + Fix parsing of \"show name\"
  in `\\newtheorem` (#6734).\n      Previously we were just treating it as a string
  and\n      ignoring  accents and formatting.\n    + Prevent wrong nesting of `\\multirow`
  and `\\multicolumn` table\n      cells (#6603, Laurent P. Ren√© de Cotret).\n    +
  Table cell parser not consuming spaces correctly (#6596,\n      Laurent P. Ren√©
  de Cotret).\n    + Change `SIRange` to `SIrange` (#6617, Emerson Harkin).\n    +
  Allow blank lines inside `\\author` (#6324).\n\n  * DocBook reader:\n\n    + Don't
  squelch space at end of emphasis and other inline elements;\n      instead, move
  it outside the element (#6719).\n    + Implement table cell alignment (#6698, Nils
  Carlson).\n    + Implement column span support for tables (#6492, Nils Carlson).\n
  \   + Update list of block level tags (#6610).\n\n\n  * JATS reader:\n\n    + Don't
  squelch space at end of emphasis and other inline elements;\n      instead, move
  it outside the element (#6719).\n\n  * RST reader:\n\n    + Apply `.. class::` directly
  to following Header rather than creating\n      a surrounding Div (#6699).\n\n  *
  Docx reader:\n\n    + Allow empty dates in comments and tracked changes (#6726,
  Diego\n      Balseiro).\n\n  * Markdown writer:\n\n    + Be less aggressive about
  using quotes for YAML values,\n      allowing e.g. a quotation mark or bracket as
  long as it's not at the\n      beginning of the line.\n    + Use double quotes for
  YAML metadata (#6727).\n    + Sort YAML metadata keys in Markdown output case-insensitive.\n\n\n
  \ * Asciidoc writer:\n\n    + Support asciidoctor's block figures (#6538, argent0).\n\n
  \ * LaTeX writer:\n\n    + Fix spacing issue with list in definition list.\n      When
  a list occurs at the beginning of a definition list definition,\n      it can start
  on the same line as the label, which looks bad.\n      Fix that by starting such
  lists with an `\\item[]`.\n\n  * HTML writer:\n\n    + Support intermediate table
  headers (#5314, Albert Krewinkel).\n    + Support attributes on all table elements
  (Albert Krewinkel).\n    + Render table footers if present (#6314, Albert Krewinkel).\n
  \   + Fix addition of `doc-biblioentry` role.\n    + Support colspans and rowspans
  in HTML tables (#6312, Albert Krewinkel).\n\n  * ICML writer:\n\n    + Support internal
  document links (#5541, Leonard Rosenthol).\n    + Changed default link state to
  invisible (#6676, Leonard Rosenthol).\n\n  * Docx writer:\n\n    + Better handle
  list items whose contents are lists (#5948, Michael\n      Hoffmann).  If the first
  element of a bulleted or ordered list is\n      another list, then that first item
  would previously disappear if the\n      target format is docx.\n    + Separate
  adjacent tables (#4315).  Word combines adjacent tables,\n      so to prevent this
  we insert an empty paragraph between two\n      adjacent tables.\n\n  * Org writer:\n\n
  \   + Don't force blank line after headings (#6554).\n\n  * OpenDocument writer:\n\n
  \   + Implement table cell alignment (#6700 Nils Carson, Mauro Bieg).\n    + New
  table cell support with row and column spans (#6682, Nils Carson).\n    + Syntax
  highlighting for inline code (#6711, niszet).\n\n  * Add Text.Pandoc.Citeproc module,
  exporting `processCitations`\n    [API change].  This depends on several other,
  unexported\n    modules under Text.Pandoc.Citeproc.\n\n  * Add module Text.Pandoc.Writers.CslJson,
  exporting `writeCslJson`.\n    [API change]\n\n  * Add module Text.Pandoc.Readers.CslJson,
  exporting `readCslJson`.\n    [API change]\n\n  * Add module Text.Pandoc.Readers.BibTeX,
  exporting `readBibTeX` and\n    `readBibLaTeX`. [API change]\n\n  * Text.Pandoc.Filter:
  Add `CiteprocFilter` constructor to Filter.\n    [API change] This runs the processCitations
  transformation.\n    We need to treat it like a filter so it can be placed\n    in
  the sequence of filter runs (after some, before others).\n    In FromYAML, this
  is parsed from `citeproc` or `{type: citeproc}`,\n    so this special filter may
  be specified either way in a defaults file\n    (or by `citeproc: true`, though
  this gives no control of positioning\n    relative to other filters).\n\n  * Add
  new exported module Text.Pandoc.Writers.AnnotatedTable [API change]\n    (#6655,
  Christian Despres).  This module (which should generally\n    be imported qualified
  to avoid name conflicts) provides a\n    `Table` type that mirrors the structure
  of a pandoc `Table`,\n    but with added inferred information so that the writers
  do not have to\n    lay out tables themselves. The `toTable` and `fromTable` functions
  convert\n    between an annotated `Table` and a regular pandoc `Table`. In addition
  to\n    producing a `Table` with coherent and well-formed annotations, the\n    `toTable`
  function also normalizes its input table like the table\n    builder does.  Tests
  ensure that `toTable` normalizes tables exactly\n    like the table builder, and
  that its annotations are coherent.\n\n  * Text.Pandoc.Logging:\n\n    + Remove unused
  `CouldNotParseYamlMetadata` constructor for `LogMessage`\n      [API change].\n
  \   + Add `CiteprocWarning` constructor to `LogMessage` [API change].\n\n  * Text.Pandoc.Readers.Metadata:
  export `yamlBsToRefs` [API change].\n    These allow specifying an id filter so
  we parse only references\n    that are used in the document.\n\n  * Text.Pandoc.Parsing:\n\n
  \   + Export ParseError [API change].\n    + Add `stateInNote` and `stateNoteNumber`
  to `ParserState`\n      [API change].  These are used to populate note numbers for
  citation\n      processing.\n\n  * Fix apparent typos in sample.lua (#6729, William
  Lupton).\n    Also make the writer less aggressive in escaping quotes.\n\n  * Text.Pandoc.Options:\n\n
  \   + `defaultMathJaxURL`: use `tex-chtml-full` instead of `tex-mml-chtml`\n      (#6599,
  Kolen Cheung).  This drops the MathML support (which we\n      don't need for HTML
  math rendering) and includes the full JavaScript,\n      which makes it possible
  to use `--self-contained` (though there may\n      still be issues if the required
  math fonts aren't available).  This\n      change should also reduce latency in
  pages with lots of formulas.\n    + Add `/tex-chtml-full.js` to `defaultMathJaxURL`
  (#6593) Previously we\n      added this in processing command line options, but
  not in processing\n      defaults files, which was inconsistent.\n\n  * epub.css:
  Fix cover page selectors and add note explaining their use\n    (#6649, a-vrma).\n\n
  \ * Add data files needed for Text.Pandoc.Citeproc:  these include\n    `default.csl`
  in the data directory and a `citeproc` directory that\n    is only used at compile-time
  for biblatex localizations.  Note that we've\n    added `file-embed` as a mandatory
  rather than a conditional\n    dependency, because of the biblatex localization
  files.\n\n  * Lua filters:\n\n    + Add SimpleTable for backwards compatibility
  (#6575, Albert Krewinkel).\n      A new type `SimpleTable` is made available to
  Lua filters. It is\n      similar to the `Table` type in pandoc versions before
  2.10;\n      conversion functions from and to the new Table type are provided.\n
  \     Old filters using tables now require minimal changes and can use, e.g.,\n\n
  \         if PANDOC_VERSION > {2,10,1} then\n            pandoc.Table = pandoc.SimpleTable\n
  \         end\n\n      and\n\n          function Table (tbl)\n            tbl =
  pandoc.utils.to_simple_table(tbl)\n            ‚Ä¶\n            return pandoc.utils.from_simple_table(tbl)\n
  \         end\n\n      to work with the current pandoc version.\n\n    + Make `attr`
  argument optional in `Table` constructor (Albert Krewinkel).\n      This changes
  the Lua API. It is highly unlikely for this change to affect\n      existing filters,
  since the documentation for the new Table constructor\n      (and type) was incomplete
  and partly wrong before.  The Lua API is now\n      more consistent, as all constructors
  for elements with attributes now\n      take attributes as the last parameter.\n\n
  \ * MANUAL.txt:\n\n    * Add a dedicated Citations section which consolidates the
  information\n      the manual used to contain about citation processing, and incorporates\n
  \     some information formerly found in the pandoc-citeproc man page.\n    + Add
  note about lualatex using `selnolig`.\n    + Remove duplicate `seriespage` (#6568,
  Blake Eryx).\n    + Remove lists of support extensions for markdown variants (#6604).\n
  \     Instead, offer the advice to use `--list-extensions=FORMAT`.\n    + Fix position
  of attributes in header (Albert Krewinkel).\n    + Delete obsolete section on compact
  and loose lists (#6684).\n\n\n  * doc/lua-filters.md:\n\n    + Add info on how to
  debug Lua filters (#6732, Ian Max Andolina).\n    + Document Underline type and
  constructor (Albert Krewinkel).\n    + Document `body` field (Albert Krewinkel).\n
  \   + Add missing header attribute\n    + Add missing Link.title field (Albert Krewinkel).\n
  \   + Make the setting-the-date example conditional (the-solipsist).\n      This
  makes the example a bit more realistic.\n    + Remove outdated link table example.\n\n
  \ * doc/org.md:\n\n    + Add section on tables (Albert Krewinkel).\n    + Add section
  on handling of unknown directives (Albert Krewinkel).\n\n  * CONTRIBUTING.md: fix
  typo (#6584, Dmitry Volodin).\n\n  * Use golden test framework for command tests.
  \ This means that\n    `--accept` can be used to update expected output.\n\n  *
  Use the `smart` extension when generating pandoc's man page (#6613).\n\n  * Release-candidate:
  don't build windows i386.\n    So far we haven't been able to figure out how to
  get\n    stack to use a 32-bit ghc.\n\n  * Use `null` instead of deprecated `Builder.isNull`.\n\n
  \ * Makefile:\n\n    + Fix macospkg target to fetch target from S3 artifacts.\n
  \   + Fix pandoc-templates target to include all partials.\n\n  * Remove duplicated
  dependency in pandoc.cabal (#6591, Felix Yan).\n\n  * Sort build depends in pandoc.cabal
  alphabetically (#6691,\n    Albert Krewinkel).\n\n  * Add .travis.yml for macos
  release candidate build (#6622).\n    We need to build the release candidate on
  Travis rather\n    than GitHub actions, because GH has macos 10.15, and\n    binaries
  compiled on that OS will not work with 10.13.\n    This build is only triggered
  on `rc/*` branches.\n\n  * Remove instructions for building pandoc-citeproc from
  CI and\n    release binary build instructions.  We will no longer distribute\n    pandoc-citeproc.\n\n
  \ * Fix math rendering in trypandoc (this broke after\n    commit d8ad766d17603784b86fc5c2e1b22864125d04d1).\n\n
  \ * Use latest versions of skylighting, commonmark (#6589),\n    comonmark-extensions,
  commonmark-pandoc, texmath.\n\n  * Relax version bounds for hslua, hslua-module-text,
  bytestring.\n\n  * Use released pandoc-types 1.22.  This changes the JSON\n    encoding
  slightly for the new table types introduced\n    in 1.21, so they're more consistent
  with the rest.\n    Developers of libraries for pandoc filters will want\n    to
  take note.\n\n  * Fix hlint suggestions, update hlint.yaml (#6680, Christian Despres).\n\n
  \ * Code cleanup (#6678, Joseph C. Sible).\n\n  * Add haddocks to functions in Text.Pandoc.Writers.Shared
  (Albert\n    Krewinkel).\n\n  * Remove duplicate `tshow` definition.\n\n  * Linux
  release candidate build: use ghc-musl container.  This simplifies\n    our build
  process (over using a customized alpine container).\n\n\n## pandoc 2.10.1 (2020-07-23)\n\n
  \ * Add `commonmark_x` output format. This is `commonmark` with a number\n    of
  useful pandoc extensions enabled.\n\n  * Many more extensions now work with `commonmark`
  and `gfm`.\n\n  * Add generic `attributes` extension.  This allows attributes to\n
  \   be added to any block or inline element in a uniform way.  Since\n    the Pandoc
  AST doesn't include attributes on each element type,\n    the attributes will sometimes
  be added by creating a surrounding\n    Div or Span container.  Currently this extension
  is only\n    compatible with the `commonmark` and `gfm` readers.\n\n    To add an
  attribute to a block-level element, e.g. a paragraph,\n    put it before the block:\n
  \   ```\n    {#mypara}\n    This is a paragraph.\n    ```\n    Multiple attributes
  may be used and will be combined:\n    ```\n    {#mypara}\n    {.blue .warning key=\"val\"}\n
  \   This is a paragraph.\n    ```\n    To add an attribute to an inline-level element,
  put it\n    immediately after the element:\n    ```\n    *emphasized text*{.special}\n
  \   ```\n\n  * Support `--number-sections` for docx output (#1413).\n\n  * LaTeX
  reader:\n\n    + Support `\\SIRange` reader (#6418, Emerson Harkin).\n    + Support
  table col-span and row-span (#6311, Laurent P. Ren√© de Cotret).\n      Supports
  `\\multirow` and `\\multicolumn`.\n    + Support amsthm:  `\\newtheorem`, `\\theoremstyle`,
  and theorem and\n      proof environments, including labels and references.  The
  only thing\n      that is unsupported is the second optional argument, which causes\n
  \     numbering to be reset after the specified series is incremented.\n    + Moved
  some code to T.P.LaTeX.Parsing.  We need to reduce the size\n      of the LaTeX
  reader to ease compilation on resource-limited systems.\n\n  * RST reader:\n\n    +
  Fix csv tables with multiline cells (#6549).\n    + Fix spurious newlines in some
  attributes from directives.\n    + Avoid extra newline in included code blocks.\n\n
  \ * Commonmark reader:\n\n    + Switch from cmark-gfm to commonmark-hs for commonmark
  and gfm\n      parsing.  This avoids depending on a C library\n      and allows
  us to support more pandoc extensions for\n      `commonmark` and `gfm`.\n\n  * DocBook
  reader:\n\n    + Parse releaseinfo as metadata (#6542).\n\n  * Docx reader:\n\n
  \   + Only use `bCs/iCs` on runs with `rtl` or `cs` property (#6514, Nikolay\n      Yakimov).\n
  \   + Code cleanup/refactoring (Nikolay Yakimov).\n\n  * Org reader (Albert Krewinkel):\n\n
  \   + Respect export setting which disables entities\n      MathML-like entities,
  e.g., `\\alpha`, can be disabled with the\n      `#+OPTION: e:nil` export setting
  (Albert Krewinkel).\n    + Respect export setting disabling footnotes.  Footnotes
  can be removed\n      from the final document with the `#+OPTION: f:nil` export
  setting.\n    + Respect tables-excluding export setting.  Tables can be removed
  from\n      the final document with the `#+OPTION: |:nil` export setting.\n\n  *
  Markdown writer:\n\n    + Move `asciify` out of `escapeString`.  Otherwise `unsmartify`\n
  \     doesn't catch quotes that have already been turned to entities.\n    + Add
  `writeCommonmark` (new exported function, API change).\n    + Use unicode super/subscript
  characters when possible if the\n      `superscript` or `subscript` extension or
  `raw_html` aren't available.\n    + Render caption as following paragraph when `table_caption`
  extension\n      is not enabled.\n    + Use numerical labels for reference links
  that are longer\n      than 999 characters or contain square brackets, for conformity\n
  \     with commonmark (#6560).\n\n  * Commonmark writer:\n\n    + Instead of using
  cmark-gfm, use `writeCommonmark` from the\n      Markdown writer.  This function
  calls the markdown writer\n      with appropriate extensions and a few small modifications\n
  \     (e.g. not requiring backslashes before spaces inside\n      super/subscripts).
  \ With this change `comonmark` and\n      `gfm` output can be used with a wider
  selection of\n      extensions.\n\n  * Jira writer: keep image caption as alt attribute
  (#6529, Albert\n    Krewinkel).\n\n  * HTML writer:\n\n    + Improve alt-text/caption
  handling for HTML5 (#6491, Albert Krewinkel).\n      Screen readers read an image's
  `alt` attribute and the figure caption,\n      both of which come from the same
  source in pandoc. The figure caption is\n      hidden from screen readers with the
  `aria-hidden` attribute. This\n      improves accessibility.  For HTML4, where `aria-hidden`
  is not allowed,\n      pandoc still uses an empty `alt` attribute to avoid duplicate
  contents.\n\n  * Ms writer:\n\n    + Fix code highlighting with blank lines.  Previously
  blank lines\n      were simply omitted from highlighted code.\n    + Escape starting
  periods in ms writer code blocks (#6505, Michael\n      Hoffmann).  If a line of
  ms code block output starts with a period (.),\n      it should be prepended by
  `\\&` so that it is not interpreted as a roff\n      command.\n\n  * Text.Pandoc.Extensions:\n\n
  \   + Add `raw_markdown` extension (which only affects `ipynb`\n      input).\n
  \   + Trim down `githubMarkdownExtensions`.\n      Previously it included all of
  the following, which make\n      sense for the legacy `markdown_github` but not
  for `gfm`,\n      since they are part of base commonmark and thus\n      can't be
  turned off in `gfm`:\n\n      - `Ext_all_symbols_escapable`\n      - `Ext_backtick_code_blocks`\n
  \     - `Ext_fenced_code_blocks`\n      - `Ext_space_in_atx_header`\n      - `Ext_intraword_underscores`\n
  \     - `Ext_lists_without_preceding_blankline`\n      - `Ext_shortcut_reference_links`\n\n
  \     These have been removed from `githubMarkdownExtensions`, though\n      they're
  still turned on for legacy `markdown_github`.\n    + Add `Ext_attributes` constructor
  for `Extension` [API change].\n\n  * LaTeX template: use selnolig to selectively
  suppress ligatures with\n    lualatex (#6534).\n\n  * Benchmark bytestring readers
  (Nikolay Yakimov).\n\n  * Documentation:\n\n    + Update using-the-pandoc-api.md
  (favonia).\n    + Fix Typos in lua-filters.md (tajmone).\n    + Rewrite Raw HTML/TeX
  section in MANUAL.txt to avoid duplicate\n      headings for the extensions.\n    +
  Fix typo in MANUAL.txt (Benjamin Wuethrich).\n    + Remove duplicate 'titlepage'
  in MANUAL.txt (Blake Eryx).\n    + CONTRIBUTING.md: Advertise the official nightlies
  in GitHub actions.\n      Replaces #6500, thanks to @ickc.\n\n\n\n## pandoc 2.10
  (2020-06-29)\n\n  * Use pandoc-types 1.21.  This adds two things:\n\n    + A native
  Underline constructor for Inline (#6277, Vaibhav Sagar).\n    + More expressive
  types for tables (#1024, Christian Despres).\n      Tables can now take attributes;
  and rowspans and colspans,\n      column headers, multiple row headers, table head
  and foot\n      can all be represented.  (Note, however, that reader and\n      writer
  support for these features is still lacking, so\n      most users won't see any
  differences in table conversion\n      yet.  These changes just lay the foundation
  for further\n      improvements.)\n\n  * Support new Underline element in readers
  and writers (#6277,\n    Vaibhav Sagar).\n\n  * Support new Table type (Christian
  Despres).\n    The Builder.simpleTable now only adds a row to the TableHead\n    when
  the given header row is not null. This uncovered an\n    inconsistency in the readers:
  some would unconditionally\n    emit a header filled with empty cells, even if the
  header\n    was not present. Now every reader has the conditional\n    behaviour.
  \ Only the XWiki writer depended on the header row\n    being always present; it
  now pads its head as necessary.\n\n  * Add an option to disable certificate validation
  (#6156, C√©dric Couralet,\n    C√©cile Chemin, Juliette Fourcot).  This commit adds
  the option\n    `--no-check-certificate`, which disables certificate checking when\n
  \   resources are fetched by HTTP.\n\n  * Unify defaults and markdown metadata parsers
  (#6328, Nikolay\n    Yakimov). Clean up code in Text.Pandoc.Readers.Metadata and\n
  \   properly handle errors in `yamlToMeta`.  This fixes parsing\n    of Boolean
  fields in metadata withinin defaults files and reduces\n    code duplication.\n\n
  \ * Docbook reader:\n\n    + Implement `<procedure>` (#6442, Mathieu Boespflug).\n
  \   + Implement `<phrase>` (#6438, Mathieu Boespflug).\n    + Treat envar and systemitem
  like code (#6435, Mathieu Boespflug).\n    + Implement `<replaceable>` (#6437, Mathieu
  Boespflug)\n    + Map `<simplesect>` to unnumbered section (#6436, Mathieu Boespflug).\n\n
  \ * JATS reader:\n\n    + Handle \"label\" element in section title (#6288).\n    +
  Parse abstract element into metadata field of same name\n      (#6480, Albert Krewinkel).\n\n
  \ * Jira reader (Albert Krewinkel):\n\n    + Resolve multiple parsing problems,
  including issues with empty\n      table cells, faulty recognition of closing emphasis
  characters, and\n      parsing of image attributes (#6212, #6219, #6220).\n    +
  Two consecutive markup chars are now parsed verbatim (#6343);\n      styled text
  must not be empty.\n    + Newlines are no longer allowed within styled text (#6325).\n
  \   + Links to anchors are now parsed as links (#6407).\n    + Retain image attributes
  (#6234).  Jira images attributes as in\n      `!image.jpg|align=right!` are retained
  as key-value pairs. Thumbnail\n      images, such as `!example.gif|thumbnail!`,
  are marked by a\n      `thumbnail` class in their attributes.\n    + Use Underline
  for inserted text (#6237). Previously, the span was\n      marked with the non-standard
  class `inserted`.\n    + Improve icon conversion for `(/)`, `(x)`, `(!)`, `(?)`\n
  \     `(+)`, `(-)`, `(off)`, `(*)`. (#6236, #6264).\n    + Support citations, attachment
  links, and user links (#6231, #6238,\n      #6239).\n    + Resolve parsing issues
  of blockquote, color (#6233, #6235).\n\n  * HTML reader:\n\n    + Parse attributes
  into table attributes.\n    + Support `<bdo>` (#5794, Tristan de Cacqueray).\n    +
  Add `summary` to list of block-level HTML tags (#6385).\n      This improves support
  for summary/details inside Markdown.\n      NOTE:  you need to include a blank line
  before the closing\n      `</details>`, if you want the last part of the content
  to\n      be parsed as a paragraph.\n    + Fix parsing unclosed th elements in a
  table (#6247).\n\n  * Commonmark reader: Implement `implicit_figures` extension
  (#6350).\n\n  * Markdown Reader:\n\n    + Fix inline code in lists (#6284, Nikolay
  Yakimov).\n      Previously inline code containing list markers was sometimes\n
  \     parsed incorrectly.\n    + Don't require blank line after grid table (#6481).\n
  \     This allows grid tables to be enclosed in fenced divs with no\n      intervening
  blank lines.\n\n  * LaTeX reader:\n\n    + Don't parse beyond `\\end{document}`
  (#6380).\n      This required some internal changes to `\\subfile` handling.\n    +
  Better handling of `\\lettrine`.  SmallCaps instead of Span\n      for the part
  after the initial capital.  Ensure that both\n      arguments are parsed, so that
  in Markdown both\n      are treated as raw LateX. (Closes #6258.)\n\n  * Org reader
  (Albert Krewinkel):\n\n    + Recognize images with uppercase extensions (#6472).\n
  \   + Keep unknown keyword lines as raw org.  The lines of unknown\n      keywords,
  like `#+SOMEWORD: value` are no longer read as metadata,\n      but kept as raw
  `org` blocks. This ensures that more information\n      is retained when round-tripping
  org-mode files; additionally,\n      this change makes it possible to support non-standard
  org\n      extensions via filters.\n    + Unify keyword handling.  Handling of export
  settings and other\n      keywords (like `#+LINK`) has been combined and unified.\n
  \   + Support `LATEX_HEADER_EXTRA` and `HTML_HEAD_EXTRA`\n      settings.  These
  export settings are treated like their non-extra\n      counterparts, i.e., the
  values are added to the `header-includes`\n      metadata list.\n    + Allow multiple
  `#+SUBTITLE` export settings.  The values of all\n      lines are read as inlines
  and collected in the `subtitle`\n      metadata field.\n    + Read `#+INSTITUTE`
  values as text with markup.  The value is\n      stored in the `institute` metadata
  field and used in the\n      default beamer presentation template.\n    + The behavior
  of the `#+AUTHOR` and `#+KEYWORD` export\n      settings has changed: Org now allows
  multiple such lines\n      and adds a space between the contents of each line. Pandoc\n
  \     now always parses these settings as meta inlines; setting\n      values are
  no longer treated as comma-separated lists.\n      Note that a Lua filter can be
  used to restore the previous\n      behavior.\n    + Read description lines as inlines
  (#6485). `#+DESCRIPTION` lines\n      are now treated as text with markup. If multiple
  such\n      lines are given, then all lines are read and separated by soft\n      linebreaks.\n
  \   + Honor tex export option (#4070).  The `tex` export option can be set\n      with
  `#+OPTION: tex:nil` and allows three settings:\n      `t` (the default) causes LaTeX
  fragments to be parsed as TeX or added\n      as raw TeX.  `nil` removes all LaTeX
  fragments from the document.\n      `verbatim` treats LaTeX as text.\n\n\n  * RST
  reader:\n\n    + Pass arbitrary attributes through in code blocks (#6465).\n      Exceptions:
  name (which becomes the id), class (which becomes the\n      classes), and number-lines
  (which is treated specially to fit\n      with pandoc highlighting).\n    + Handle
  `date::` directive (#6276).\n\n  * Textile reader: support `pre.` for code blocks
  (#6454).\n\n  * Ipynb reader:\n\n    + Implement `raw_markdown` extension (#5408).
  \ Specifying\n      `-f ipynb+raw_markdown` will cause Markdown cells\n      to
  be represented as raw Markdown blocks, instead of being\n      parsed.  This is
  not what you want when going from `ipynb`\n      to other formats, but it may be
  useful when going from `ipynb`\n      to Markdown or to `ipynb`, to avoid semantically
  insignificant\n      changes in the contents of the Markdown cells that might\n
  \     otherwise be introduced.\n    + Handle application/pdf output as image (#6430).\n
  \   + Properly handle image/svg+xml as an image (#6430).\n\n  * Docx reader:\n\n
  \   + Distinguish between docx parsing and docx container unpacking errors.\n\n
  \ * MediaWiki reader:\n\n    + Fix `gfm_auto_identifiers` so that `-` is not replaced
  by `_` (#6335).\n\n  * Vimwiki reader:\n\n    + Add nested syntax highlighting (#6256,
  Vlad Hanciuta).\n      Nested syntaxes are specified like this:\n      ```\n      {{{sql\n
  \     SELECT * FROM table\n      }}}\n      ```\n      The preformatted code block
  parser has been extended to check if the\n      first attribute of the block is
  not a `key=value` pair, and in that\n      case it will be considered as a class.\n\n\n
  \ * Jira writer (Albert Krewinkel):\n\n    + Always escape braces (#6478).  Braces
  are now always escaped, even\n      within words or when surrounded by whitespace.
  Jira and\n      Confluence treat braces specially.\n    + Convert Underline to inserted
  text (`+inserted+`).\n    + Add image attributes (#6234).  Image attributes are
  added\n      to the output as image parameters. If the image has a\n      class
  \"thumbnail\", then a thumbnail image is generated;\n      all other attributes
  are discarded in this case.\n\n  * LaTeX writer:\n\n    + Ensure that `-M csquotes`
  works even in fragment mode (#6265).\n    + Escape `^` specially for listings (#6460).\n
  \   + Create hypertarget for links with identifier (#6360).\n    + Distinguish between
  single and double quotes when using enquote\n      package (#6457, dbecher-ito).\n
  \   + Add support for customizable alignment of columns in beamer (#6331,\n      andrebauer).\n
  \   + Add support for customizable alignment of columns in beamer\n      (#4805,
  #4150, andrebauer).\n\n  * HTML writer:\n\n    + Use CSS in favor of `<br>` for
  display math (#6372)\n      Some CSS to ensure that display math is\n      displayed
  centered and on a new line is now included\n      in the default HTML-based templates;
  this may be\n      overridden if the user wants a different behavior.\n\n  * Org
  writer:\n\n    + Clean-up Div handling (Albert Krewinkel).\n\n  * Docx writer:\n\n
  \   + Enable column and row bands for tables (#6371).\n      This change will not
  have any effect with the default style.\n      However, it enables users to use
  a style (via a reference.docx)\n      that turns on row and/or column bands.\n\n
  \ * OpenDocument (and ODT) writer:\n\n    + Add custom-style \"Abstract\" in metadata
  abstract.\n      This ensures that the abstract is rendered with style Abstract.\n
  \   + Enable custom-style attribute on a Div.\n      This allows you to apply a
  custom style to contained paragraphs.\n\n  * DocBook writer:\n\n    + Add id of
  figure to enclosed image.\n    + Add personname element to docbook author (#6244).\n\n
  \ * FB2 writer:\n\n    + Properly handle cover-image containing spaces (#6391).\n\n
  \ * Markdown writer:\n\n    + Ensure consistent padding for pipe tables (#6240).\n
  \   + Avoid unnecessary escapes before intraword `_` when\n      `intraword_underscores`
  extension is enabled (#6296).\n\n  * RST writer:\n\n    + Properly handle images
  with same alt text (#6194).\n      Previously we created duplicate references for
  these in rendering RST.\n\n  * AsciiDoc writer:\n\n    + Add blank line after Div
  (#6308).\n\n  * Haddock Writer:\n\n    + Support Haddock tables (Joe Hermaszewski).\n
  \     See this PR on Haddock for details on the table format:\n      <https://github.com/haskell/haddock/pull/718>.\n\n
  \ * PowerPoint writer (Jesse Rosenthal):\n\n    + Write math input verbatim in speaker
  notes (#6301).\n      OMML in speaker notes would lead to corrupt PowerPoint output.
  We now\n      output the OMML verbatim as LaTeX in the speaker notes.\n\n  * LaTeX
  template: Make polyglossia package options list-aware\n    (#6444, Frederik Elwert).\n\n
  \ * Reveal.js template:\n\n    + Update template for reveal.js 4.0.0 (#6390, Salim
  B).\n    + Update template with newly available options (#6347, Jake Zimmerman).\n
  \   + Use CDN version of revealjs v4 by default (#6408).\n\n  * opendocument template:
  Add abstract and subtitle to opendocument\n    template (#6369).\n\n  * reference.odt:
  clean up styles.  Add Abstract.\n    Change Author, Date to centered paragraphs
  with no character\n    styling.\n\n  * epub.css: wrap overlong lines in highlighted
  code blocks (#6242).\n    This fixes a problem in iBooks v2.4 with our earlier\n
  \   horizontally scrolling code blocks.  The problem seems to\n    be a bug in iBooks,
  not pandoc, but since iBooks is a major\n    target we're changing pandoc's default
  behavior so that\n    pandoc-produced epubs work on that platform.\n\n  * Text.Pandoc.PDF:\n\n
  \   + Use `--enable-local-file-access` in invoking `wkhtmltopdf` (#6474).\n      `wkhtmltopdf`
  changed in recent versions to require this for\n      access to local files.  This
  fixes PDF via HTML5 with `--css`.\n    + Send verbose output to stderr, not stdout
  (#6483).\n\n  * Text.Pandoc.MIME: Fix MIME type for TrueType fonts in EPUBs\n    (#6464,
  Michael Reed).\n\n  * Text.Pandoc.Shared:\n\n    + `makeSections`: omit number attribute
  when unnumbered class\n      is present (#6339).  Previously the attribute was included
  but given\n      an empty value, and this caused the table of contents creation\n
  \     functions in Text.Pandoc.Writers.Shared to think these items had\n      numbers,
  which meant that they were included in the TOC even if the\n      `unlisted` class
  was used.\n    + Deprecate `underlineSpan` in Shared in favor of\n      `Text.Pandoc.Builder.underline`
  (Vaibhav Sagar).\n    + `renderTags'`: use self-closing tag for col element (#6295).\n\n
  \ * Text.Pandoc.UUID: Fix `getRandomUUID`, which previously would\n    return the
  same value twice in a row. Make `getRandomUUID`\n    polymorphic in PandocMonad.
  \ Remove `getUUID` (#6228, Joseph C. Sible).\n\n  * Text.Pandoc.Class: Generalize
  `PandocIO` functions to `MonadIO`.\n\n  * Fixed Katex standalone script (#6399,
  Lucas Escot).\n    Global macros are now persistent when using the HTML Writer with
  the\n    `--katex` option.\n\n  * Lua subsystem (Albert Krewinkel):\n\n    + Use
  new type PandocLua for all pandoc Lua operations (API change).\n      The new type
  `PandocLua` is an instance of the `PandocMonad` typeclass\n      and can thus be
  used in a way similar to `PandocIO`.\n    + Use PandocError for exceptions in Lua
  subsystem (API change).\n      The PandocError type is used throughout the Lua subsystem.
  All Lua\n      functions throw an exception of this type if an error occurs. The\n
  \     `LuaException` type is removed and no longer exported from\n      `Text.Pandoc.Lua`.
  In its place, a new constructor `PandocLuaError`\n      is added to PandocError.\n\n
  \ * Lua filters: improve error messages for failing filters (#6332,\n    Albert
  Krewinkel).  Print the Lua error properly instead of\n    displaying their `show`
  string.\n\n  * Use latest skylighting.  This fixes a bug with lua multiline\n    comments
  (and may improve handling of other syntaxes as well).\n    IT also adds `aria-hidden=\"true\"`
  to the empty a elements, which\n    helps people who use screen readers.\n\n  *
  Use latest texmath.\n\n  * Require latest doctemplates 0.8.2.\n    This adds support
  for template pipes `first`, `rest`,\n    `last`, `allbutlast`.\n\n  * Revert  0e48a02
  and dependency on base-noprelude, which hasn't\n    been updated for ghc 8.10 (see
  #6187).\n\n  * Dependency adjustments:\n\n    + Allow haddock-library 1.9.x.\n    +
  Allow hslua 1.1 (#6243, Felix Yan).\n    + Allow base64-bytestring 1.1.\n    + Use
  latest jira-wiki-markup.\n    + Allow http-client 0.7.\n    + Allow tasty 1.3.x.\n
  \   + Allow aeson 1.5 (#6400, Felix Yan).\n    + Remove unused dependency `vector`
  (#6462, Laurent P. Ren√© de Cotret).\n    + Bump QuickCheck upper bound.\n\n  * Significant
  code cleanup and simplification (Joseph C. Sible, #6223,\n    #6209, #6225, #6229,
  #6226, #6340).\n\n  * Remove unnecessary hlint ignores (#6341, Joseph C. Sible).\n\n
  \ * Remove obsolete RelaxedPolyRec extension (#6487, Nikolay Yakimov).\n\n  * trypandoc
  improvements (Mike Tzou):\n\n    + Add standalone option to the command text (#6210).\n
  \   + Update third party libraries.\n\n  * MANUAL.txt:\n\n    + Clarify template
  partial naming (#6476, Mauro Bieg).\n    + Describe `jira` as \"Jira/Confluence
  wiki markup\" (#6351, Albert\n      Krewinkel).  In the past, Jira's wiki markup
  was also used by -- and\n      could be imported into -- Atlassian Confluence.\n
  \   + Add link to print-css.rocks (#6272, Mauro Bieg).\n    + Clarify pipe table
  column width adjustment (#6254).\n    + Fix ATX header syntax.\n    + Fix misleading
  note about image size conversions (#6353).\n    + Update links to reveal.js documentation
  (#6386, Salim B).\n    + Separate adjacent verbatim code blocks (#6307, tom-audm).\n\n
  \ * org.md:\n\n    + Document behavior of `smart` extension (#4387, Albert Krewinkel).\n
  \   + Describe all supported export options in detail.\n\n  * lua-filters.md:\n\n
  \   + Fix description of BulletList Lua type (Levi Gruspe).\n    + Use pandoc.system
  module in TikZ example (Albert\n      Krewinkel).  Showcase temporary directory
  handling with\n      `with_temporary_directory` and `with_working_directory`.\n\n
  \ * INSTALL.md: fix FreeBSD port link (#6422, Mo).\n    The FreeBSD port was renamed
  from pandoc to hs-pandoc in 2010.\n    The old pandoc port is still at version 1.5.1.1\n\n
  \ * Propagate `(DY)LD_LIBRARY_PATH` in tests (#6376, Lila).\n\n  * Bump `cabal-version`
  to 2.2 (#6377).\n\n  * Make it possible to compile using Stack on NixOS (#6439,
  Mathieu\n    Boespflug).\n\n  * CI action to check for commit message length (Nikolay
  Yakimov, #6398).\n\n\n## pandoc 2.9.2.1 (2020-03-23)\n\n  * Markdown reader: Fix
  table alignment when heading begins with t (#6153).\n    Due to a typo (`t` instead
  of `\\t`) we were center aligning column\n    headings that begin with a lowercase
  `t`!\n\n  * Text.Pandoc.Readers.Roff:\n\n    + Fix parsing of `\\.` in man/ms readers
  (#6175).\n      Previously due to a typo it was being parsed as `` ` ``.\n    +
  Fix parsing of `\\'` in man/ms readers (#6175).  It was being parsed\n      as a
  backtick.\n\n  * Jira reader (Albert Krewinkel):\n\n    + Fix parsing of tables
  without preceding blankline (#6198).\n      A bug was fixed which caused faulty
  parsing if a table was not\n      preceded by a newline and the first table cell
  had no space\n      after the initial `|` characters.\n    + Fix parsing of strikeout,
  emphasis (#6196).  A bug was fixed which\n      caused non-emphasized text containing
  digits and/or non-special\n      symbols (like dots) to sometimes be parsed incorrectly.\n
  \   + Support colored inline text, indented lists (#6183, #6184).\n\n  * Ms writer:\n\n
  \   + Fix definition lists so indent even when paragraph indent is\n      set to
  0 (as is the default).  Also ensure indent for display math\n      that falls back
  to TeX.\n    + Use `.QS/.QE` instead of `.RS/.RE` for block quotes.\n\n  * EPUB
  writer: fix regression on detection of front/back/bodymatter\n    (#6170).  This
  bug caused sections with epub:type `dedication` to be\n    misplaced in bodymatter
  instead of frontmatter as specified\n    in the manual.  The same problem would
  affect other epub:types.\n    The pattern matching needed to be changed with the
  use of\n    `makeSection`.\n\n  * AsciiDoc writer:  remove redundant `otherwise`
  guard in\n    `inlineToAsciiDoc` (#6146, Ryan Scott).\n\n  * Text.Pandoc.Class:\n\n
  \   + Fix missing import when data files are not embedded (Albert Krewinkel).\n
  \   + Subdivide Text.Pandoc.Class into small unexported modules\n      and ensure
  that all functions have Haddock documentation (#6106,\n      Albert Krewinkel).\n
  \   + Finer grained imports of Text.Pandoc.Class submodules (#6203, Albert\n      Krewinkel).\n\n
  \ * Text.Pandoc.XML: Add to list of HTML5 attributes:\n    `allow`, `autocapitalize`,
  `decoding`, `enterkeyhint`,\n    `imagesizes`, `imagesrcset`, `loading`.\n\n  *
  Use implicit Prelude (#6187, Albert Krewinkel).\n    The previous behavior was introduced
  as a fix for #4464. It seems that\n    this change alone did not fix the issue,
  and `stack ghci` and `cabal\n    repl` only work with GHC 8.4.1 or newer, as no
  custom Prelude is loaded\n    for these versions. Given this, it seems cleaner to
  revert to the\n    implicit Prelude.\n\n  * Always use custom prelude (#6187, Albert
  Krewinkel).\n    Previously, the custom prelude was used only with older GHC versions,
  as\n    a workaround for problems with ghci. The ghci problems are resolved by\n
  \   replacing package `base` with `base-noprelude`, allowing for consistent\n    use
  of the custom prelude across all GHC versions.\n\n  * Remove outdated checks for
  no longer supported base versions\n    (Albert Krewinkel).\n\n  * PDF via wkhtmltopdf:
  put user-specified options last (#6171).\n    Certain options (e.g. `cover`) need
  to come after flags on\n    the command line.\n\n  * Text.Pandoc.App: set resource
  path at the beginning so it can affect\n    things like include-in-header (#5982).\n\n
  \ * Change macOS release candidate CI process so that notarized\n    packages can
  be produced (#6169).\n\n  * Make MANUAL more explicit about nonbreaking space handling
  by\n    `all_symbols_escapable` (#6154, Fabien Schurter).\n\n  * trypandoc (Mike
  Tzou):\n\n    + Add checkbox for standalone option (#6189).\n    + Use strict mode
  for JavaScript code (#6188).\n    + Fetch resources over https (#6188).\n    + Remove
  unnecessary attributes on style, script elements (#6188).\n\n  * Use details tag
  to make GitHub releases changelog collapsible.\n\n  * Update filter code in doc/filters.md
  so it works with latest pandoc\n    (#6185).\n\n  * linux/Dockerfile: upgrade to
  alpine 3.11 (#6180, Albert Krewinkel).\n    This is used to build the static linux
  binaries.\n\n\n## pandoc 2.9.2 (2020-02-15)\n\n  * Add `csv` as an input format
  (#6100).  The CSV table is converted into a\n    pandoc simple table.  A new module
  Text.Pandoc.Readers.CSV\n    exports `readCSV` [API change].\n\n  * Introduce new
  format variants for JATS writer (#6014, Albert Krewinkel):\n\n    - `jats_archiving`
  for the \"Archiving and Interchange Tag Set\",\n    - `jats_publishing` for the
  \"Journal Publishing Tag Set\", and\n    - `jats_articleauthoring` for the \"Article
  Authoring Tag Set.\"\n\n    The `jats` output format is now an alias for `jats_archiving`.\n
  \   The module Text.Pandoc.Writers.JATS now exports\n    `writeJatsArchiving`, `writeJatsPublishing`,
  and\n    `writeJatsArticleAuthoring`, as well as the legacy\n    `writeJATS` [API
  change].\n\n  * `--defaults`: Support `bibliography` and `csl` fields.\n    Move
  `addMeta` from Text.Pandoc.App.CommandLineOptions to\n    Text.Pandoc.App.Opt (internal
  change).\n\n  * Add timing info for filters in `--verbose` mode (#6112).\n    When
  verbose mode is specified (verbosity == INFO), print a\n    notice when running
  a filter and when a filter completes (including\n    timing).\n\n  * LaTeX reader:\n\n
  \   + Allow `&` in LaTeX citation keys (#6110).\n    + Improve caption and label
  parsing.\n    + Don't emit empty Span elements for labels.\n    + Put tables with
  labels in a surrounding Div.\n    + Resolve `\\ref` to table numbers (#6137).\n
  \   + Skip comments in more places where this is needed (#6114).\n    + Allow beamer
  overlays for all commands in all raw tex (#6043).\n      This affects parsing of
  raw tex in LaTeX and in Markdown and\n      other formats.\n    + Improve parsing
  of raw environments (#6034).  If parsing fails\n      in a raw environment (e.g.
  due to special characters like unescaped\n      `_`), try again as a verbatim environment,
  which is less sensitive to\n      special characters.  This allows us to capture
  special environments\n      that change catcodes as raw tex when `-f latex+raw_tex`
  is used.\n\n  * RST reader:\n\n    + Add highlight directive (#6140, Lucas Escot).\n\n
  \ * MediaWiki writer:\n\n    + Prevent triple `[[[` which confuses MediaWiki (#6119).\n\n
  \ * HTML reader:\n\n    + Don't parse `data-id` as `id` attribute.  And similarly
  don't\n      parse any `data-X` as `X` when `X` is a valid HTML attribute.\n\n  *
  Org reader:\n\n    + Simplify parsing of sub- and superscripts (#6127, Albert Krewinkel).\n
  \     Speeds up parsing of single-word, markup-less sub- and superscripts.\n\n  *
  LaTeX writer:\n\n    + Group biblatex citations even with prefix and suffix (#5849,
  Ethan\n      Riley).  Previously biblatex citations were only grouped if there\n
  \     was no prefix.  This patch allows them to be grouped in subgroups split\n
  \     by prefixes and suffixes, which allows better citation sorting.\n    + Fix
  regression in handling of columns in beamer slides (#6033).\n      Columns in title
  slides were causing problems with\n      slide division.\n    + Fix duplicate frame
  classes in LaTeX/Beamer output (#6107).\n\n  * HTML writer:\n\n    + Fix duplicate
  attributes on headings (#6062), regression from 2.7.x.\n    + Fix `--number-offset`
  with HTML TOC.  Eventually it would be worth\n      adding a parameter to `makeSections`
  so this could be done at that\n      level; then it would also affect other writers
  that construct\n      TOC manually.\n    + reveal.js: restore old behavior for 2D
  nesting (#6032).\n      The fix to #6030 actually changed behavior, so that the\n
  \     2D nesting occurred at slide level N-1 and N, instead of\n      at the top-level
  section.  This commit restores the v2.7.3 behavior.\n      If there are more than
  2 levels, the top level is horizontal\n      and the rest are collapsed to vertical.\n
  \   + reveal.js: ensure that pauses work even in title slides (#5819).\n\n  * Markdown
  writer:\n\n    + Fix regression: spurious dots in markdown_mmd metadata output (#6133).\n\n
  \ * Docx writer:\n\n    + Fix regression with Compact style on tight lists (#6072).\n
  \     Starting in 2.8, the docx writer no longer distinguishes between tight\n      and
  loose lists, since the Compact style is omitted.  This is a\n      side-effect of
  the fix to #5670, as explained in the changelog.  This\n      patch fixes the problem
  by extending the exception currently offered to\n      Plain blocks inside tables
  to Plain blocks inside list items.\n\n  * Jira writer:\n\n    + Fix output of table
  headers (Albert Krewinkel, #6035).\n\n  * Add Text.Pandoc.Image with unexported
  svgToPng.\n\n  * Text.Pandoc.XML: Export `html5Attributes`, `html4Attributes`,\n
  \   `rdfaAttributes` (formerly unexported in Text.Pandoc.Writers.HTML).\n    [API
  change]\n\n  * Text.Pandoc.Shared: Export a new function `findM` (#6125,\n    Joseph
  C. Sible).\n\n  * Text.Pandoc.Logging: Add `RunningFilter`, `FilterCompleted`\n
  \   constructors to LogMessage [API change].\n\n  * Text.Pandoc.CSV: fix bug in
  CSV parser; previously an extra blank record\n    would sometimes be inserted at
  the end.\n\n  * LaTeX template: add space option to xeCJK with PassOptionsToPackage\n
  \   (#6002).  Otherwise we can get a clash with documentclasses that\n    already
  load the package.\n\n  * Lua filters:\n\n    + Allow filtering of element lists
  (#6038, Albert Krewinkel).  Lists of\n      Inline and Block elements can now be
  filtered via `Inlines` and\n      `Blocks` functions, respectively. This is helpful
  if a filter\n      conversion depends on the order of elements rather than a single\n
  \     element.  For example, the following filter can be used to remove all\n      spaces
  before a citation:\n\n          function isSpaceBeforeCite (spc, cite)\n            return
  spc and spc.t == 'Space'\n             and cite and cite.t == 'Cite'\n          end\n\n
  \         function Inlines (inlines)\n            for i = #inlines-1,1,-1 do\n              if
  isSpaceBeforeCite(inlines[i], inlines[i+1]) then\n                inlines:remove(i)\n
  \             end\n            end\n            return inlines\n          end\n\n
  \   + Add methods `insert`, `remove`, and `sort` to pandoc.List\n      (Albert Krewinkel).
  \ Example of use:\n\n          local numbers = pandoc.List {2, 3, 1}\n          numbers:sort()
  \    -- numbers is now {1, 2, 3}\n    + Make `pandoc.List` a callable constructor
  (Albert Krewinkel).\n      It is now possible to construct a new List via\n      `pandoc.List()`
  instead of `pandoc.List:new()`.\n    + Add tests for pandoc.List module (Albert
  Krewinkel).\n\n  * Text.Pandoc.App.CommandLineOptions: Change `setVariable` to use
  `Text`\n    instead of `String`.  This avoids some unnecessary unpacking.\n\n  *
  Use versioned directory for windows release zipfile.\n    Also remove old `make-windows-installer.bat`,
  superseded by GitHub\n    actions workflow, and modify `pandoc.wxs` for new paths.\n\n
  \ * Extensive code cleanup (#6141, #6128, #6129, #6130, #6123,\n    #6105, 6102,
  #6117, #6124, #6115, #6116, #6111, Joseph C. Sible).\n\n  * Fix hlint warnings (Albert
  Krewinkel).\n\n  * Use latest doclayout, doctemplates (#6031).  The new version
  of\n    doclayout fixes a memory leak that affected `--include-in-header` with\n
  \   large files (and possibly other cases involving extremely long lines).\n\n  *
  Use latest texmath.\n\n  * Use latest skylighting and fix test suite (#6086).\n\n
  \ * sample.lua: Fix typo in descriptive comments (#6136, Caleb Maclennan).\n    Fix
  typo in error message (#6135).\n\n  * Add Docker and GH Actions instructions/links
  to INSTALL.md.\n\n  * Update filter documentation (#6065). Improve cabal v2 instructions.\n
  \   Remove example using pandoc API directly (we have other\n    docs for that and
  it was outdated).\n\n  * Lua filter docs:\n\n    + Cross-link constructors and types
  (Albert Krewinkel).\n      Thanks to @bpj for the idea.\n    + Sort pandoc.List
  methods alphabetically (Albert Krewinkel).\n    + Unify, fix anchors and internal
  links (#6061, Albert Krewinkel).\n      Links and anchors now follow consistent
  conventions, like\n      lowercase-only anchor names.  This breaks some links to
  specific\n      sections in the document, but will make it much easier to link\n
  \     documentation in the future.\n    + Clarify filter function execution order
  (#6059, Albert Krewinkel).\n\n  * In docs, update URLs and use `https:` wherever
  possible (#6090,\n    Salim B).\n\n## pandoc 2.9.1.1 (2020-01-05)\n\n  * Markdown
  reader:\n\n    + Fix parsing bug affected indented code after raw HTML (#6009, #5360).\n\n
  \ * LaTeX writer:\n\n    + Fix regression in beamer slide structure with certain
  slide levels\n      (#6030).\n    + Allow framebreaks for beamer's TOC (Heiko Schlittermann,
  #6012)\n    + Properly handle unnumbered headings level 4+ (#6018).\n      Previously
  the `\\paragraph` command was used instead of\n      `\\paragraph*` for unnumbered
  level 4 headings.\n\n  * HTML writer:\n\n    + Fix revealjs slide structure regression
  with certain slide levels\n      (#6030).\n    + Add newlines to make slide show
  output more readable.\n\n  * Org writer:\n\n    + Remove extra spaces from table
  cells (Albert Krewinkel, #6024).\n\n  * JATS template: Update JATS dtd (Arfon Smith,
  #6020).  Use the archiving\n    and interchange DTD rather than the more restrictive
  journal publishing\n    DTD (which doesn't permit ext-link as a valid child).\n\n
  \ * Text.Pandoc.PDF: Fix `runTeXProgram` so that the input source is always\n    overwritten
  (#6027).  Previously it wasn't overridden if the file already\n    existed, which
  led to bad results on subsequent runs when\n    `pdf-engine-opt=-output-directory=`
  was used to specify an explicit temp\n    dir.\n\n  * Text.Pandoc.BCP47: Change
  `getLang` to handle block-level contents\n    (#6008).  Some readers (e.g. RST)
  will populate the `lang` metadata field\n    with block-level content.  `getLang`
  has been modified to handle this.\n    Previously in these cases the LaTeX writer
  would not properly set the\n    \"main language\" of the document.\n\n  * Fix `test/tables.org`
  (Albert Krewinkel).\n\n  * Use HTTPS in copyright message (Felix Yan, #6010)\n\n\n##
  pandoc 2.9.1 (2019-12-23)\n\n  * Add Jira reader (Albert Krewinkel, #5556).\n\n
  \ * Jira writer: use jira-wiki-markup renderer (Albert Krewinkel,\n    #5926). The
  following improvements are included in this change:\n\n    + non-jira raw blocks
  are fully discarded instead of showing\n      as blank lines;\n    + table cells
  can contain multiple blocks;\n    + unnecessary blank lines are removed from the
  output;\n    + markup chars within words are properly surrounded by\n      braces;\n
  \   + preserving soft linebreaks via `--wrap=preserve` is\n      supported.\n\n
  \   Note that backslashes are rendered as HTML entities, as there\n    appears no
  alternative to produce a plain backslash if it is\n    followed by markup. This
  may cause problems when used with\n    confluence, where rendering seems to fail
  in this case.\n\n  * Fix regression with `--number-sections`. Starting with 2.8,\n
  \   `--number-sections` also had the effect of `--section-divs`,\n    even if `--section-divs`
  was not specified.\n\n  * Improved table of contents generation in markdown, RTF,\n
  \   commonmark, better handling cases where section headings are\n    enclosed in
  divs.\n\n  * Ensure that later default file values for `variable` replace\n    earlier
  ones (5988).\n\n  * HTML reader: Add `nav` to list of block-level tags.\n\n  * Org
  reader (Albert Krewinkel):\n\n    + Wrap named table in Div, using name as id (#5984).\n
  \     Tables which are given a name via `#+NAME:` or `#+LABEL:`\n      are wrapped
  in an additional Div, with the name set as the\n      Div's ID.\n    + Report parsing
  errors properly.\n    + Fix parsing problem for colons in headline (#5993).\n\n
  \ * Text.Pandoc.PDF: Ensure UTF8 when printing source in\n    `--verbose` mode,
  avoiding an error on platforms that\n    default to something other than UTF-8 (#5997).\n\n
  \ * Text.Pandoc.Templates: Strip directory before trying to find\n    partial in
  data files (#5987).\n\n  * Text.Pandoc.Shared: Improve `makeSections` so we don't
  get\n    doubled \"number\" attributes in EPUB output (or anywhere\n    else) (#5986).\n\n
  \ * Added tests for `--toc` and `--section-divs`.\n\n  * Text.Pandoc.MIME: Added
  glsl MIME type for WebGL maps (#6000,\n    Jared Lander).\n\n  * MANUAL: A bit clearer
  explanation for `--base-header-level`.\n    We now say exactly how to translate
  between the deprecated\n    `--base-header-level` and `--shift-heading-level-by`.\n\n
  \ * lua-filters.md:\n\n    + Remove spurious dot in title (#5996, Mauro Bieg).\n
  \   + Replace metadata example with image centering (#6004,\n      Albert Krewinkel).
  Thanks to @efx for proposing this filter.\n\n\n## pandoc 2.9 (2019-12-11)\n\n  *
  Text.Pandoc.Templates [API change]\n\n    + Add Monad wrappers `WithDefaultPartials`
  and `WithPartials`.\n      Wrapping these around an instance of `PandocMonad` gives\n
  \     us different instances of `TemplateMonad`, with different\n      search behavior
  in retrieving partials.\n      To compile a template and limit partial search to
  pandoc's\n      data files, use `runWithDefaultPartials (compileTemplate ...)`.\n
  \     To compile a template and allow partials to be found locally\n      (either
  on the file system or via HTTP, in the event that\n      the main template has an
  absolute URL), ue\n      `runWithPartials (compileTemplate ...)`.\n    + Export
  `getTemplate`, which seeks a template locally,\n      or via HTTP if the template
  has an absolute URL, falling\n      back to the data files if not found.\n    +
  Export `compileDefaultTemplate` -- does `getDefaultTemplate`\n      and compiles
  the result, raising an error on failure.\n\n  * Text.Pandoc.Class [API change]\n\n
  \   + Remove `TemplateMonad` instances for `PandocIO` and `PandocPure`.\n      These
  were too limiting and caused a bug whereby a local\n      partial could be used
  even when the default template was requested.\n      We now rely on instances provided
  in the Templates module.\n\n  * Text.Pandoc.App.OutputSettings: Simplify template
  retrieval code.\n\n  * ConTeXt template: Adjust to title formatting (#5949, Denis
  Maier).\n    Add `\\setupinterlinespace` to `title`, `subtitle`, `date` and `author`\n
  \   elements:  otherwise longer titles that run over multiple lines will look\n
  \   squashed as `\\tfd` etc. won't adapt the line spacing to the font size.\n\n
  \ * reveal.js template: Add title-slide-attributes variable (#5981,\n    Frederik
  Elwert).\n\n  * More informative JSON parse error (#5973).\n\n  * Use external emojis
  package (forked from pandoc).  Removed emoji data\n    in Text.Pandoc.Emoji.\n\n
  \ * Fix regression in `makeSections` (#5965).\n    Previously `hierarchicalize`
  (the ancestor of `makeSections`) would put\n    header attributes on the containing
  Div.  In 2.8 this behavior changed,\n    which broke some tools depending on pandoc.
  \ Here we roll back this change,\n    so that attributes again migrate from the
  header to the containing Div when\n    `makeSections` is run.  Note that attributes
  are retained on the header as\n    well (unlike before) -- with the exception of
  the `id` attribute, which of\n    course cannot be duplicated.\n\n  * Fix `--toc-depth`
  regression in 2.8 (#5967).\n\n  * Use doctemplates 0.8.  Rename template 'filters'
  as 'pipes'\n    to avoid confusion with the other notion of filter used by pandoc.\n\n
  \ * Fix README.md so that relative links from manual become absolute.\n    Previously
  they'd be broken links when viewed on GitHub or Hackage.\n    So we add the base
  URL for the pandoc manual.\n\n  * Document display math syntax in manual.\n\n##
  pandoc 2.8.1 (2019-12-05)\n\n  * Add `ascii_identifiers` as a supported extension
  for `markdown`.\n    This fixes a regression in 2.8.\n\n  * Fix regression with
  behavior of `--variable` (#5962).\n    Previously `-Vfoo=1 -Vfoo=2` would produce
  a list value for foo;\n    with 2.8 it produced just `2`.  This commit restores
  the earlier\n    behavior.\n\n  * Roll back part of of `--shift-heading-level-by`
  change (#5957).\n    With positive heading shifts, starting in 2.8 this option\n
  \   caused metadata titles to be removed and changed to regular\n    headings.  This
  behavior is incompatible with the old\n    behavior of `--base-header-level` and
  breaks old workflows,\n    so we have rolled back the change. Note that there is
  now an\n    asymmetry in positive and negative heading level shifts:\n    With positive
  shifts, the metadata title stays the same and\n    does not get changed to a heading
  in the body, while with\n    negative shifts, a heading can be converted into the\n
  \   metadata title.\n\n  * Text.Pandoc.Shared: Fix `makeSections` so it doesn't
  turn\n    column Divs into sections.\n\n  * HTML writer: add task-list class to
  ul if all elements are\n    task list items.  This will allow styling unordered
  task\n    lists in a way that omits the bullet.\n\n  * HTML-based templates: Add
  CSS to suppress bullet on unordered task lists.\n\n  * ConTeXt template: Fix `\\startcslreferences`
  and use ConTeXt syntax\n    conventions (#5945, Denis Maier).  The old version had
  a too large\n    a skip at the beginning of the reference list.\n\n  * LaTeX template:
  keep the `\\author{}` command even if author is not\n    specified (#5961, Yihui
  Xie).  Avoids a LaTeX warning.\n\n  * Generate Emoji module with TH.\n\n    + Add
  Text.Pandoc.Emoji.TH.\n    + Replace long literal list in Text.Pandoc.Emoji with
  one-liner\n      generating it from `emoji.json` using TH.\n    + Add Makefile target
  to download `emoji.json`.\n    + Remove `tools/emoji.hs`.\n\n  * Increase GC allocation
  space for compilation in cabal.project.\n\n  * Clean up manual on PDF generation
  backend options (#5940).\n\n  * Update release checklist to include code signing
  step and update\n    Windows release-candidate builds (#5950).\n\n\n## pandoc 2.8.0.1
  (2019-11-26)\n\n  * List `pdf` in `--list-output-formats`.\n  * EPUB writer: Fix
  regression with `--css` (#5937).  In 2.8 `--css`\n    would not have an effect on
  EPUB output.\n  * RST writer: Use grid tables for one-column tables, since\n    simple
  tables clash with heading syntax in this case (#5936).\n  * Add unexported module
  Text.Pandoc.Readers.Metadata (see #5914).\n  * Use doctemplates 0.7.2, which adds
  the `nowrap` filter to\n    templates.\n  * Update default man template using `nowrap`
  for .TH heading (#5929).\n  * HTML templates: Add support for `toc-title` variable
  (#5930,\n    Alexandre Franke).\n  * Remove `grffile` (LaTeX package) requirement
  in MANUAL.txt\n    (#5927, Ian Max Andolina).\n  * Use skylighting 0.8.3.\n\n##
  pandoc 2.8 (2019-11-22)\n\n  * Improvements in templates system (from doctemplates):\n\n
  \   + Pandoc templates now support a number of new features that\n      have been
  added in doctemplates: notably, `elseif`, `it`,\n      partials, filters, and syntax
  to control nesting and reflowing of\n      text.  These changes make pandoc more
  suitable out of the\n      box for generating plain-text documents from data in
  YAML\n      metadata.  It can create enumerated lists and even tabular\n      structures.\n
  \   + We now used templates parameterized on doclayout Doc types.\n      The main
  impact of this change is better reflowing of\n      content interpolated into templates.
  \ Previously,\n      interpolated variables were rendered independently and\n      interpolated
  as strings, which could lead to overly long\n      lines. Now the templates interpolated
  as Doc values which\n      may include breaking spaces, and reflowing occurs after\n
  \     template interpolation rather than before.\n    + Remove code from the LaTeX,
  Docbook, and JATS writers that\n      looked in the template for strings to determine
  whether it\n      is a book or an article, or whether csquotes is used. This\n      was
  always kludgy and unreliable.\n    + Change template code to use new API for doctemplates.\n\n
  \ * Add `--defaults`/`-d` option.  This adds the ability to specify\n    a collection
  of default values for options in a YAML file. For\n    example, one might define
  a set of defaults for letters,\n    and then do `pandoc -d letter myletter.md -o
  myletter.pdf`.\n    See the documentation of this feature in MANUAL.txt.\n\n  *
  Raise error on unsupported extensions (#4338).\n\n  * The `--list-extensions[=FORMAT]`
  option now lists only\n    extensions that affect the given FORMAT.\n\n  * Add `-L`
  option as shortcut for `--lua-filter`.\n\n  * Add `--shift-heading-level-by` option
  and deprecate\n    `--base-heading-level` (#5615). The new option does\n   everything
  the old one does, but also allows negative shifts.\n   It also promotes the document
  metadata (if not null) to a\n   level-1 heading with a +1 shift, and demotes an
  initial\n   level-1 heading to document metadata with a -1 shift. This\n   supports
  converting documents that use an initial level-1\n   heading for the document title.\n\n
  \ * Allow `--metadata-file` to be used repeatedly to include\n    multiple metadata
  files (Owen McGrath, #5702). Values in\n    files specified first will be overridden
  by those in later\n    files.\n\n  * `--ascii` now uses numerical hex character
  references (#5718).\n\n  * Allow PDF output to stdout (#5751).  PDF output now behaves
  like other\n    binary formats: it will not be output to the terminal, but can be\n
  \   sent to stdout using either `-o -` or a pipe.  The intermediate format\n    will
  be determined based on the setting of `--pdf-engine`.\n\n  * Make some writers sensitive
  to 'unlisted' class on headings (#1762).\n    If this is present on a heading with
  the 'unnumbered' class,\n    the heading won't appear in the TOC.  This class has
  no\n    effect if 'unnumbered' is not also specified.  This affects HTML-based\n
  \   writers (including slide shows and EPUB), LateX (including beamer), RTF,\n    and
  PowerPoint.  Other writers do not yet support `unlisted`.\n\n  * Fix `gfm_auto_identifiers`
  behavior with emojis (#5813).  Note that\n    we also now use emoji names for emojis
  when `ascii_identifiers`\n    is enabled.\n\n  * When `--ipynb-output` is used with
  the default \"best\" format, strip\n    ANSI escape codes for non-ipynb output (#5633).
  \ These cause problems\n    in many formats, including LaTeX.\n\n  * Don't look
  for template files remotely for remote input (#5579).\n    Previously pandoc would
  look for the template at a remote URL when a\n    URL was used for the input file,
  instead of taking it from the\n    data directory.\n\n  * Allow combining `-Vheader-includes`
  and `--include-in-header` (#5904).\n    Previously `header-includes` set as a variable
  would be\n    clobbered by material included using `--include-in-header`.\n\n  *
  Change merge behavior for metadata.  Previously, if a document\n    contained two
  YAML metadata blocks that set the same field, the\n    conflict would be resolved
  in favor of the first. Now it is resolved\n    in favor of the second (due to a
  change in pandoc-types).\n    This makes the behavior more uniform with other things
  in pandoc\n    (such as reference links and `--metadata-file`).\n\n  * Don't add
  a newline to fragment output if there's already one.\n\n  * Change exit codes and
  document in MANUAL.txt:\n\n    + `PandocAppError` was 1, is now 4\n    + `PandocOptionError`
  was 2, is now 6\n    + `PandocMakePDFError` was 65, is now 66\n\n  * Switch to new
  pandoc-types and use Text instead of String [API change].\n    (Christian Despres,
  #5884).\n\n  * HTML reader:\n\n    + Better handling of `<q>` with cite attribute
  (#5798, Ole Martin Ruud).\n      If a `<q>` tag has a `cite` attribute, we interpret
  it as a Quoted\n      element with an inner Span.\n    + Add support for HTML `<samp>`
  element (#5792, Amogh Rathore).\n      The `<samp>` element is parsed as Code with
  class `sample`.\n    + Add support for HTML `<var>` element (#5799, Amogh Rathore).\n
  \     The `<var>` element is parsed as Code with class `variable`.\n    + Add support
  for `<mark>` elements (Florian B, #5797).  Parse\n      `<mark>` elements from HTML
  as Spans with class `mark`.\n    + Add support for `<kbd>` elements, parsing them
  as Span with class\n      `kbd` (Daniele D'Orazio, #5796).\n    + Add support for
  `<dfn>`, parsing this as a Span with class `dfn`\n      (#5882, Florian Beeres).\n\n
  \ * Markdown reader:\n\n    + Headers: don't parse content over newline boundary
  (#5714).\n    + Handle inline code more eagerly within lists (Brian Leung, #5627).\n
  \   + Removed some needless lookaheads.\n    + Don't parse footnote body unless
  extension enabled.\n    + Fix small super/subscript issue (#5878).  Superscripts
  and subscripts\n      cannot contain spaces, but newlines were previously allowed\n
  \     (unintentionally).  This led to bad interactions in some cases\n      with
  footnotes.  With this change newlines are also not allowed inside\n      super/subscripts.\n
  \   + Use `take1WhileP` for `str`, table row.  This yields a small but\n      measurable
  performance improvement.\n\n\n  * LaTeX reader:\n\n    + Fix parsing of optional
  arguments that contain braced text (#5740).\n    + Don't try to parse includes if
  `raw_tex` is set (#5673).\n      When the `raw_tex` extension is set, we just carry
  through\n      `\\usepackage`, `\\input`, etc. verbatim as raw LaTeX.\n    + Properly
  handle optional arguments for macros (#5682).\n    + Fix `\\\\` in `\\parbox` inside
  a table cell (#5711).\n    + Improve `withRaw` so it can handle cases where the
  token string is\n      modified by a parser (e.g. accent when it only takes part
  of a Word\n      token) (#5686).  This fixes a bug that caused the ends of\n      certain
  documents to be dropped.\n    + Handle `\\passthrough` macro used by latex writer
  (#5659).\n    + Support tex `\\tt` command (#5654).\n    + Search for image with
  list of extensions like latex does, if an\n      extension is not provided (#4933).\n
  \   + Handle `\\looseness` command values better (#4439).\n    + Add `mbox` and
  `hbox` handling (Vasily Alferov, #5586).\n      When `+raw_tex` is enabled, these
  are passed through literally.\n      Otherwise, they are handled in a way that emulates
  LaTeX's behavior.\n    + Properly handle `\\providecommand` and `\\provideenvironment`
  (#5635).\n      They are now ignored if the corresponding command or environment\n
  \     is already defined.\n    + Support epigraph command in LaTeX Reader (oquechy,
  #3523).\n    + Ensure that expanded macros in raw LaTeX  end with a space\n      if
  the original did (#4442).\n    + Treat `ly` environment from lilypond as verbatim
  (Urs Liska, #5671).\n    + Add `tikzcd` to list of special environments (Eigil Rischel).\n
  \     This allows it to be processed by filters, in the same way that\n      one
  can do for `tikzpicture`.\n\n  * Roff reader:\n\n    + Better support for `while`.\n
  \   + More improvements in parsing conditionals.\n    + Fix problem parsing comments
  before macro.\n    + Improve handling of groups.\n    + Better parsing of groups
  (#5410).  We now allow groups\n      where the closing `\\\\}` isn't at the beginning
  of a line.\n\n  * RST reader:\n\n    + Keep `name` property in `imgAttr` (Brian
  Leung, #5619).\n    + Fixed parsing of indented blocks (#5753).  We were requiring\n
  \     consistent indentation, but this isn't required by RST.\n    + Use title,
  not admonition-title, for admonition title.\n      This puts RST reader into alignment
  with docbook reader.\n    + Don't strip final underscore from absolute URI (#5763).\n
  \   + Avoid spurious warning when resolving links to internal anchors\n      ending
  with `_` (#5763).\n\n  * Org reader:\n\n    + Accept `ATTR_LATEX` in block attributes
  (Albert Krewinkel, #5648).\n      Attributes for LaTeX output are accepted as valid
  block attributes;\n      however, their values are ignored.\n    + Modify handling
  of example blocks (Brian Leung, #5717).\n    + Allow the `-i` switch to ignore leading
  spaces (Brian Leung).\n    + Handle awkwardly-aligned code blocks within lists (Brian
  Leung).\n      Code blocks in Org lists must have their `#+BEGIN_` aligned in a\n
  \     reasonable way, but their other components can be\n      positioned otherwise.\n
  \   + Fix parsing of empty comment lines (#5856, Albert Krewinkel).\n      Comment
  lines in Org-mode can be completely empty.\n\n  * Muse reader (Alexander Krotov):\n\n
  \   + Add RTL support (#5551).\n    + Do not allow closing asterisks to be followed
  by `*`.\n    + Do not split series of asterisks into symbols and emphasis (#5821).\n
  \   + Do not terminate emphasis on `*` not followed by space.\n\n  * DokuWiki reader:\n\n
  \   + Parse markup inside monospace ('') (#5916, Alexander Krotov).\n\n  * Docx
  reader:\n\n    + Move style-parsing-specific code to a new unexported module,\n
  \     Text.Pandoc.Readers.Docx.Parse.Styles (Nikolay Yakimov).\n    + Move StyleMap
  to docx writer (Nikolay Yakimov).\n    + Only use LTR when it is overriding BiDi
  setting (#5723, Jesse\n      Rosenthal).  The left-to-right direction setting in
  docx is used\n      in the spec only for overriding an explicit right-to-left setting.\n
  \     We only process it when it happens in a paragraph set with BiDi.\n      This
  is especially important for docs exported from Google Docs,\n      which explicitly
  (and unnecessarily) set `rtl=0` for every paragraph.\n    + Fix list number resumption
  for sublists (#4324).\n      The first list item of a sublist should not resume
  numbering\n      from the number of the last sublist item of the same level,\n      if
  that sublist was a sublist of a different list item.\n\n  * Docbook reader:\n\n
  \   + Richer parse for admonitions (Michael Peyton Jones, #1234).\n      Instead
  of parsing admonitions as blockquotes, we now parse\n      them as Divs with an
  appropriate class. We also handle titles\n      for admonitions as a nested Div
  with the \"title\" class.\n    + Fix nesting of chapters and sections (#5864, Florian
  Klink,\n      F√©lix Baylac-Jacqu√©).\n    + Fix bug with entities in mathphrase element
  (#5885).\n\n  * MediaWiki reader:\n\n    + Skip optional `{{table}}` template (#5757).\n\n
  \ * LaTeX reader:\n\n    + Fix dollar-math parsing to ensure that space is left
  between a\n      control sequence and a following letter (#5836).\n    + In `untokenize`,
  ensure space between control sequence\n      and following letter (#5836).\n    +
  Don't omit macro definitions defined in the preamble.\n      These were formerly
  omitted (though they still affected macro\n      resolution if `latex_macros` was
  set).  Now they are included in\n      the document body.\n    + Parse macro definitions
  as raw LaTeX when `latex_macros` is\n      disabled.  (When `latex_macros` is enabled,
  we omit them, since\n      pandoc is applying the macros itself.)\n    + Fix a hang/memory
  leak in certain circumstances (#5845).\n    + Text.Pandoc.Readers.LaTeX.Parsing:
  add `[Tok]` parameter to\n      `rawLaTeXParser`.  This allows us to repeat retokenizing\n
  \     unnecessarily in e.g. `rawLaTeXBlock`.\n    + Add KOMA-Script metadata commands
  (#5910, Andrew Dunning).\n      Add all titling commands to existing definition
  for `\\dedication`.\n    + Parse `\\micro` siunitx unit command (#5921, Jose Luis
  Duran).\n\n  * Markdown writer:\n\n    + Ensure proper nesting when we have long
  ordered list markers (#5705).\n    + Make `plain` output plainer (#5741).  Previously
  we used the following\n      Project Gutenberg conventions for plain output: extra
  space before and\n      after level 1 and 2 headings, all-caps for strong emphasis,\n
  \     underscores surrounding regular emphasis. Now these\n      conventions are
  used only when the `gutenberg` extension is\n      enabled. By default, Strong and
  Emph are rendered without\n      special formatting, and headings are rendered without\n
  \     special formatting, and with only one blank line following.\n      To restore
  the former behavior, use `-t plain+gutenberg`.\n    + Prefer using raw_attribute
  when enabled (#4311).\n      The `raw_attribute` will be used to mark raw bits,
  even HTML\n      and LaTeX, and even when `raw_html` and `raw_tex` are\n      enabled,
  as they are by default. To get the old behavior,\n      disable `raw_attribute`
  in the writer.\n    + Prefer `pipe_tables` to raw HTML even when we must\n      lose
  width information (#2608, #4497).\n    + Improve escaping in list items (#5918).\n\n
  \ * AsciiDoc writer:\n\n    + Don't include `+` in code blocks for regular asciidoc.\n
  \     This is asciidoctor-specific.\n    + Handle admonitions (#5690).\n\n  * LaTeX
  writer:\n\n    + Add thin space when needed in LaTeX quote ligatures (#5684).\n
  \   + Use `\\hspace{0pt}` for 0-width space U+200B (#5756).\n    + Use `cslreferences`
  environment for csl bibliographies.\n      This allows bibliographies to receive
  special formatting.\n      The template now contains definition of this environment
  (enabled\n      only when CSL is used).  It also defines a `\\cslhangindent` length.\n
  \     This is set to 2em by default when the bibliography style specifies\n      a
  hanging indent.  To override the length, you can use e.g.\n      `\\setlength{\\cslhangindent}{7em}`
  in header-includes.\n      See jgm/pandoc-citeproc#410.\n    + Strip off `{}` around
  locator for biblatex/natbib output (#5722).\n    + Fix line breaks at start of paragraph
  (#3324).\n      Previously we just omitted these. Now we render them\n      using
  `\\hfill\\break` instead of `\\\\`.  This is a revision\n      of a PR by @sabine
  (#5591) who should be credited with the idea.\n    + We no longer look in the template
  or header-includes to see if a\n      book or article documentclass is used, or
  to see whether the\n      `csquotes` package is used. To use `csquotes` for LaTeX,
  set\n      `csquotes` in your variables or metadata. To specify a book\n      style,
  use the `documentclass` variable or\n      `--top-level-division`.\n    + Fix horizontal
  rule (#5801).  We change to use 0.5pt rather than\n      `\\linethickness`, which
  apparently only ever worked \"by accident\"\n      and no longer works with recent
  updates to texlive.\n\n  * ConTeXt writer:\n\n    + Add option to include source
  files in ConTeXt PDFs (Tristan\n      Stenner, #5578). The metadata field or variable\n
  \     (`includesource`) can be set to attach the source documents\n      to the
  resulting PDF.\n    + Customizable type of PDF/A for the ConTeXt writer (Karl\n
  \     Pettersson, #5608).  The `pdfa` variable may now be set in metadata.\n      Also
  updated color profile settings in accordance with ConTeXt wiki,\n      and made
  ICC profile and output intent for PDF/A customizable\n      using `pdfaiccprofile`
  and `pdfaintent`.\n    + Unit tests: adjust code property to avoid an irrelevant\n
  \     failure involving inline code with two consecutive newlines.\n    + Set `csl-hanging-indent`
  variable if needed.\n    + Use special environment for CSL references.\n    + Use
  braces, not start/stop, for inline language tags.\n      This prevents unwanted
  gobbling of spaces.\n\n  * HTML writer:\n\n    + Use numeric character references
  with `--ascii` (#5718).\n      Previously we used named character references with
  html5 output.\n      But these aren't valid XML, and we aim to produce html5 that
  is\n      also valid XHTML (polyglot markup).  (This is also needed for epub3.)\n
  \   + Ensure that line numbers in code blocks get id-prefix (#5650).\n    + Ensure
  TeX formulas are rendered correctly (Philip Pesca,\n      #5658). The web service
  passed in to `--webtex` may render\n      formulas using inline or display style
  by default.\n      Prefixing formulas with the appropriate command ensures\n      they
  are rendered correctly.\n    + Render inline formulas correctly with `--webtex`
  (Philip\n      Pesca, #5655). We add `\\textstyle` to the beginning of the\n      formula
  to ensure it will be rendered in inline style.\n    + Pass through `aria-` attributes
  to HTML5 (#5642).\n    + Render a Quoted element with an inner Span with\n      `cite`
  attribute using a `<q>` tag (#5798, Ole Martin Ruud).\n    + Render a Span with
  class `mark` using the `<mark>` element\n      (Florian Beeres, #5797).\n    + Render
  Span with class `dfn` using `<dfn>` element\n      (Florian Beeres, #5882).\n    +
  Render Span with class `kbd` using `<kbd>` element (Daniele\n      D'Orazio, #5796).\n
  \   + Render Code with class `variable` using `<var>` element\n      (Amogh Rathore,
  #5799).\n    + Render Code with class `sample` using `<samp>` element\n      (Amogh
  Rathore, #5799).\n\n  * EPUB writer:\n\n    + Improve splitting into chapters (#5761),
  using `makeSection`.\n    + Avoid issuing warning multiple times when title not
  set (see #5760).\n    + Use svg tag wrapper for cover image (#5638).  In addition,
  the\n      code generating the image has been moved to the template, to make it\n
  \     more customizable. NOTE: Those who use custom EPUB\n      templates will need
  to adjust their templates, adding the\n      code to generate the cover image. (Previously
  this was just\n      inserted into 'body'.)\n    + Improve toChapters, making it
  work better if there are Divs\n      around sections.\n    + Add support for EPUB2
  covers (blmage, #3992).\n    + Do not override existing \"fileN\" medias when writing
  to EPUB format\n      (blmage, #4206).\n    + Ensure that `lang` variable is set
  on all chapters (so that it\n      will add an `xml:lang` attribute on the `html`
  element).\n\n  * RST writer:\n\n    + Removed remnants of `admonition-title`.\n
  \   + Fix handling of `:align:` on figures and images (#4420).\n      When the image
  has the `align-right` (etc.) class, we now use\n      an `:align:` attribute.\n
  \   + Improve spacing for tables with no width information (#5899).\n      If a
  simple table would be too wide, we use a grid table.\n    + Fix backslash escaping
  after strings (Albert Krewinkel, #5906).\n      The check whether a complex inline
  element following a string must\n      be escaped, now depends on the last character
  of the string instead\n      of the first.\n    + Ensure there's a blank line before
  tables (#5898).\n\n  * Dokuwiki writer:\n\n    + Handle mixed lists without HTML
  fallback (#5107).\n\n  * XWiki writer:\n\n    + Fix multiline table (Zihang Chen,
  #5683).\n\n  * Muse writer:\n\n    + Add RTL support (Alexander Krotov, #5551).\n\n
  \ * Man writer:\n\n    + Suppress non-absolute link URLs (#5770).  Absolute URLs
  are\n      still printed in parentheses following the link text, but relative\n
  \     URLs are suppressed (just as internal links starting with '#'\n      always
  have been).\n    + Improved definition list term output.  Now we boldface code but\n
  \     not other things. This matches the most common style in man pages\n      (particularly
  option lists).\n\n  * Ms writer:\n\n    + Use `.LP` instead of `.PP` for line block
  (#5588).\n    + Use boldface for definition terms in DefinitionLists.\n\n  * JATS
  writer:\n\n    + Do not emit empty `<fn-group>` (Mauro Bieg, #5595).\n    + Update
  template to v1.1dtd (#5632, Arfon Smith).\n    + Update `data/jats.csl` to avoid
  commas between editor\n      name-part elements. (#5629)\n    + Add `abstract` to
  template (Mauro Bieg).\n\n  * TEI writer:\n\n    + Don't strip hash from internal
  links (#5922).\n\n  * Jira writer:\n\n    + Remove escapeStringForJira for code
  blocks (Jan-Otto Kr√∂pke).\n    + Remove extraneous newline after single-line block
  quotes\n      (#5858, Albert Krewinkel).\n    + Improve escaping of special characters,
  using backslash escapes\n      instead of HTML entities (#5858, Albert Krewinkel).\n\n
  \ * OpenDocument writer:\n\n    + Avoid duplicate attributes (#4634). We use the
  innermost\n      attribute in nested cases.\n    + If `native_numbering` extension
  is set, use native OpenDocument\n      enumeration for figures and tables (Nils
  Carlson).\n    + Place caption before table (#5681, Dmitry Pogodin).\n\n  * ODT
  writer:\n\n    + Add a test for MathML formulas in ODT documents (blmage).\n    +
  Improve the parsing of frames in ODT documents (blmage).\n\n  * Docx writer:\n\n
  \   + Make handling of styles more robust in localized versions\n      of Word (Nikolay
  Yakimov, #5523, #5052, #5074).  We now use\n      style names, not ids, for assigning
  semantic meaning, since\n      the ids can change depending on the locale. Style
  name\n      comparisons are case-insensitive, since those are\n      case-insensitive
  in Word. Since docx style names can have\n      spaces in them, and pandoc-markdown
  classes can't, anywhere\n      when style name is used as a class name, spaces are\n
  \     replaced with ASCII dashes `-`. Code styles, i.e. \"Source\n      Code\" and
  \"Verbatim Char\" now honor style inheritance. Docx\n      Reader now honours \"Compact\"
  style (used in\n      Pandoc-generated docx). The side-effect is that \"Compact\"\n
  \     style no longer shows up in docx+styles output. Styles\n      inherited from
  \"Compact\" will still show up.\n    + Re-use Readers.Docx.Parse for StyleMap (#5766,
  Nikolay Yakimov).\n    + Internal improvements and code simplification (Nikolay
  Yakimov).\n    + Preserve built-in styles in DOCX with custom style (Ben Steinberg,\n
  \     #5670).  This change prevents custom styles on divs and spans\n      from
  overriding styles on certain elements inside them, like\n      headings, blockquotes,
  and links. On those elements, the\n      \"native\" style is required for the element
  to display correctly.\n      This change also allows nesting of custom styles; in
  order to do so,\n      it removes the default \"Compact\" style applied to Plain
  blocks,\n      except when inside a table.\n    + Add `proofState` to list of elements
  carried over from\n      settings.xml in the reference.docx (Krystof Beuermann,
  #5703).\n    + Change order of `ilvl` and `numId` in `document.xml` (Agust√≠n\n      Mart√≠n
  Barbero, #5645). Also, make list para properties go first.\n      This reordering
  of properties shouldn't be necessary but\n      it seems Word Online does not understand
  the docx correctly otherwise.\n\n  * PowerPoint writer:\n\n    + Code formatting
  is now context dependent (Jeroen de Haas, #5573).\n      This commit alters the
  way in which the Powerpoint writer treats\n      inline code and code blocks. Inline
  code is now formatted at\n      the same size as the surrounding text. Code blocks
  are now given\n      a margin and font size according to their level.\n      Furthermore
  this commit allows changing the font with which code is\n      formatted via the
  `monofont` option.\n    + Start numbering at appropriate numbers (Jesse Rosenthal,
  #5709).\n      Starting numbers for ordered lists were previously ignored. Now\n
  \     we specify the number if it is something other than 1.\n\n  * Text.Pandoc.Parsing:\n\n
  \   + Add `manyChar`, `many1Char`, `manyTillChar`, `many1TillChar`,\n      `many1Till`,
  `manyUntil`, `mantyUntilChar`: these are like their\n      unsuffixed counterparts
  but pack some or all of their output\n      (Christian Despres, #5884).\n    + Add
  `stateAllowLineBreaks` to `ParserState` [API change].\n    + Fix inline parsing
  in grid table cells (#5708).\n    + Change type of `setLastStrPos` so it takes a
  `Maybe SourcePos`\n      rather than a `SourcePos` [API change].\n    + Make `parseFromString'`
  and `gridTableWith` and\n      `gridTableWith'` polymorphic in the parser state,\n
  \     constraining it with `HasLastStrPosition` [API change].\n    + `parseFromString'`:
  reset `stateLastStrPos` to `Nothing` before parse.\n    + Rename takeWhileP -> take1WhileP
  and clean it up.\n      (It doesn't match the empty sequence.)\n\n  * Text.Pandoc.PDF:\n\n
  \   + For PDFs via HTML, ensure temp file is deleted even if the pdf\n      program
  is not found (#5720).\n    + Better detection of a Cygwin environment (#5451).\n
  \   + Don't assume tex log file is UTF8-encoded (#5872).\n      Fall back to latin1
  if it can't be read as UTF-8.\n\n  * Text.Pandoc.Extensions:\n\n    + Export new
  function `getAllExtensions`, which returns the\n      extensions that affect a given
  format (whether enabled by default\n      or not) [API change].\n    + Change type
  of `parseFormatSpec` from\n      `Either ParseError (String, Extensions -> Extensions)`\n
  \     to `Either ParseError (String, [Extension], [Extension])`\n      [API change].\n
  \   + Add `Ext_gutenberg` constructor to `Extension` [API change].\n    + Add `Ext_native_numbering`
  constructor to `Extension` [API change]\n      (Nils Carlson).\n\n  * Text.Pandoc.Readers,
  Text.Pandoc.Writers:\n\n    + Change type of `getReader` and `getWriter` so they
  return\n      a value in the PandocMonad instance rather than an Either\n      [API
  change].  Exceptions for unknown formats and unsupported\n      extensions are now
  raised by these functions.\n\n  * Text.Pandoc.App\n\n    + Change `optMetadataFile`
  type from `Maybe FilePath` to `[FilePath]`\n      (Owen McGrath, #5702) [API change].\n\n
  \ * Text.Pandoc.Logging:\n\n    + Add `CouldNotDeduceFormat` constructor to `LogMessage`
  [API change].\n      Issue this warning when we're falling back to markdown or\n
  \     html because we don't recognize the extension of the input or\n      output
  files.\n    + Clarify warning for missing title (#5760).\n    + Add `UnusualConversion`
  constructor to `LogMessage` [API change]\n      (Mauro Bieg, #5736).  Emit warning
  on `-f latex -o out.pdf`.\n\n  * Lua filters:\n\n    + Improve function documentation
  (Albert Krewkinkel).\n    + Traverse nested blocks and inlines in correct order
  (Albert\n      Krewinkel, #5667). Traversal methods are updated to use the new\n
  \     Walk module so that sequences with nested Inline (or Block) elements\n      are
  traversed in the order in which they appear in the linearized\n      document.\n
  \   + New unexported module `Text.Pandoc.Lua.Walk` (Albert Krewinkel).\n      Lua
  filters must be able to traverse sequences of AST\n      elements and to replace
  elements by splicing sequences back\n      in their place. Special `Walkable` instances
  can be used for\n      this; those are provided in a new module\n      `Text.Pandoc.Lua.Walk`.\n
  \   + `Attr` values can now be given as normal Lua tables (Albert\n      Krewinkel,
  #5744).  This can be used as a convenient alternative\n      to constructing `Attr`
  values with `pandoc.Attr`. Identifiers\n      are taken from the `id` field, classes
  must be given as\n      space separated words in the `class` field. All remaining
  fields\n      are included as attributes. With this change, the following lines\n
  \     now create equal elements:\n      ```\n      pandoc.Span('test', {id = 'test',
  class = 'a b', check = 1})\n      pandoc.Span('test', pandoc.Attr('test', {'a','b'},
  {check = 1}))\n      ```\n      This also works when using the *attr* setter:\n
  \     ```\n      local span = pandoc.Span 'text'\n      span.attr = {id = 'test',
  class = 'a b', check = 1}\n      ```\n      Furthermore, the *attributes* field
  of AST elements can now be a\n      plain key-value table even when using the `attributes`
  accessor:\n      ```\n      local span = pandoc.Span 'test'\n      span.attributes
  = {check = 1}   -- works as expected now\n      ```\n    + Export `make_sections`,
  remove `hierarchicalize`. Lua filters that\n      use `hierarchicalize` will need
  to be rewritten to use\n      `make_sections`.\n    + Add a `clone()` method to
  all AST elements (Albert Krewinkel, #5568).\n    + Fix Lua function names in pandoc.system
  (niszet). Change\n      `get_current_directory` to `get_working_directory` and\n
  \     `with_temp_directory` to `with_temporary_directory`, to\n      conform to
  the manual.\n\n  * Text.Pandoc.Error:\n\n    + Add constructors `PandocUnknownReaderError`,\n
  \     `PandocUnknownWriterError`, `PandocUnsupportedExtensionError`.\n      [API
  change].\n    + Better message for `PandocShouldNeverHappenError`.\n    + Better
  message for `PandocTemplateError`.\n\n  * Text.Pandoc.Emoji:\n\n    + Update emoji
  list (#5666). Done using new `tools/emojis.hs`,\n     which uses the list from the
  gem GitHub uses. Future updates\n     can be done with this tool.\n\n  * Text.Pandoc.PDF:\n\n
  \   + Pass value of `--dpi` to `rsvg-convert` when converting SVG to PDF\n      in
  the process of creating a PDF (#5721).\n\n  * Text.Pandoc.Shared:\n\n    + Replace
  `Element` and `makeHierarchical` with `makeSections`.\n      Now that we have Divs,
  we can use them to represent the\n      structure of sections, and we don't need
  a special Element type.\n      `makeSections` reorganizes a block list, adding Divs
  with class\n      `section` around sections, and adding numbering if needed.\n      This
  change also fixes some longstanding issues recognizing section\n      structure
  when the document contains Divs (#3057, see also #997).\n    + Remove `Element`
  type [API change]\n    + Remove `makeHierarchicalize` [API change]\n    + Add `makeSections`
  [API change]\n    + Export `deLink` [API change]\n    + Make `filterIpynbOutput`
  strip ANSI escapes from code in output\n      for non-ipynb formats, when the default
  \"best\" option is used with\n      `--ipynb-output` (#5633).\n    + Fix `camelCaseToHyphenated`
  so it handles `ABCDef` better.\n    + Improve `isTight` (#5857).  If a list has
  an empty item,\n      this should not count against its being a tight list.\n    +
  Export `htmlSpanLikeElements` [API change] (Daniele D'Orazio, #5796).\n      This
  is a mapping of HTML span-like elements that are internally\n      represented as
  a Span with a single class.\n    + Change the implementation of `htmlSpanLikeElements`
  to retain\n      classes and attributes (#5882, Florian Beeres).\n\n  * Text.Pandoc.Slides:
  recognize content in Divs when determining\n    slide level.\n\n  * Text.Pandoc.SelfContained:\n\n
  \   + Omit content-type on type attribute for `<style>` (#5725).\n      It doesn't
  seem to be valid for HTML5, and as a result Chrome\n      ignores the style element.\n\n
  \ * Text.Pandoc.Pretty has been removed [API change].\n    We now use the new external
  doclayout module instead.\n\n  * Text.Pandoc.Writers.Shared:\n\n    + Remove `metaToJSON`,
  `metaToJSON'` [API change].\n    + Modify `addVariablesToContext`, `defField`, `setField`,
  `getField`,\n     `resetField` to work with Context rather than JSON values. [API
  change]\n    + Export new function `endsWithPlain` [API change].\n    + Change `gridTables`
  so it does better at keeping the widths of\n      columns (#4320) and does better
  at figuring out column widths\n      when no widths are given (#5899).\n\n  * Text.Pandoc.Options\n\n
  \   + Change type of `writerTemplate` to `Maybe Template` instead\n      of `Maybe
  String`.\n    + Change To/FromJSON instances for `HTMLMathMethod`, `CiteMethod`,\n
  \     `ObfuscationMethod`, `TrackChanges`, `WrapOption`,\n      `TopLevelDivision`,
  `ReferenceLocation`, `HTMLSlideVariant` (#5790).\n      In each case we use lowercase
  (or hyphenated lowercase) for\n      constructors to line up more closely with command-line
  option\n      values.  This is a breaking change for those who manually decode or\n
  \     encode JSON for these data types (e.g. for `ReaderOptions` or\n      `WriterOptions`).\n\n
  \ * Text.Pandoc.Filters:\n\n    + Add `FromYAML` instance for `Filter`.\n    + `applyFilters`:
  Add and apply filters in order (not reversed)\n      This changes `applyFilters`
  from Text.Pandoc.Filter so\n      that it does a left fold rather than a right fold,
  applying\n      the filters in the order listed.\n\n  * Text.Pandoc.XML:\n\n    +
  Change `toEntities` to emit numerical hex character references\n      (#5718).\n\n
  \ * Text.Pandoc.Highlighting:\n\n    + Add additional listings languages (Wandmalfarbe).\n\n
  \ * Text.Pandoc.MediaBag:\n\n    + Some of the types using Strings were switched
  to use FilePath instead\n      (Christian Despres, #5884).\n\n  * Text.Pandoc.Templates:\n\n
  \   + Don't import/export `varListToJSON` [API change].  It is removed in\n      doctemplates
  >= 0.3.\n    + Change type of `renderTemplate'` [API change].  Return value is\n
  \     now Text rather than being polymorphic.  This makes room for\n      upcoming
  removal of the `TemplateTarget` class from doctemplates.\n\n  * Text.Pandoc.App.Opt
  [API changes]:\n\n    + More convenient To/FromJSON instances.  Make the field names\n
  \     like `strip-empty-paragraphs` rather than `optStripEmptyParagraphs`.\n      Anyone
  who is using JSON serialization of Opt will need to adjust\n      things accordingly.\n
  \   + Change `optHighlightStyle` to a `Maybe String` instead of\n      `Maybe Style`.
  \ Do the parsing/loading of themes later, after\n      option parsing.\n    + Remove
  `optBaseHeaderLevel` from `Opt`.  We now just use\n      `optShiftHeadingLevelBy`,
  to avoid redundancy.\n    + Change `optShiftHeadingLevel` to `optShiftHeadingLevelBy`
  to\n      match the option.\n    + Custom FromJSON instance for `LineEnding`, so
  either `CRLF`\n      or `crlf` will work.\n    + Change `optVariables` from `[(String,
  String)]` to `Context Text`.\n    + Change `optMetadata` to `Meta`, to allow structured
  values.\n      The current behavior of the `--metadata` option stays the same.\n
  \   + Rename `optReader`, `optWriter` as `optFrom`, `optTo`.\n    + Add `FromYAML`
  instances to `Opt` and to all subsidiary types.\n    + Rename `optMetadataFile`
  to `optMetadataFiles`.\n    + Rename `optPDFEngineArgs` to `optPDFEngineOpts`.\n
  \   + Rename `optWrapText` to `optWrap`.\n    + Add `IpynbOutput` enumerated type:
  use this instead of\n      a string for `optIpynbOutput`.\n    + Change optInputFiles
  to a `Maybe [FilePath]` (#5888) [API change].\n      `Nothing` means: nothing specified.\n
  \     `Just []` means: an empty list specified (e.g. in defaults).\n    + List fields
  in Opt so they aren't reversed (#5881) [API change].\n      Previously `optIncludeInHeader`,
  etc. were in reverse order.\n    + The `sourcefile` variable is now always a list.
  It used to be\n      sometimes a string, sometimes a list (when there was more than
  one).\n\n  * Template changes:\n\n    + default.latex: added code for `cslreferences`
  environment,\n      to be used for pandoc-citeproc references. A `csl-hanging-indent`\n
  \     variable (set automatically if there is a `hanging-ident`\n      class on
  the references Div) controls whether contents of this\n      environment receive
  a hanging indent.\n    + default.latex: Add `space` as default option for xeCJK,
  so that\n      spaces between words are preserved (#5855, jeongminkim-islab).\n
  \     This is necessary for Korean.\n    + default.latex: Remove include of `grffile`
  (#5848).\n      This package used to be needed for proper handling of image filenames\n
  \     containing periods (in addition to the period before the extension).\n      It
  no longer works with the latest LaTeX kernel and graphicx,\n      so we have removed
  it. Future versions of graphicx will handle\n      these filenames without the need
  for `grffile`.\n    + default.context: add a saner default for page numbers.\n      Previously
  they appeared centered at the top of the page;\n      now we put them centered at
  the bottom, unless the `pagenumbering`\n      variable is set.\n    + default.context:
  define a start-stop-pair `cslreferences` to\n      allow for hanging indents in
  the bibliography (#5875, Denis Maier).\n    + default.ms: update defaults.  Use
  Palatino font, use slightly\n      wider interparagraph space, don't indent paragraphs,\n
  \     and put page numbers on the bottom.  This brings ms output\n      closer to
  default LaTeX output.\n    + default.revealjs: add navigationMode (Mauro Bieg, #5657).\n
  \   + default.muse: handle multiple authors better.\n    + docbook4, docbook5 templates:
  add indentation to body.\n    + HTML-based templates: use `styles.html` partial
  to avoid\n      code duplication.\n    + HTML-based templates: change indentation
  of styles in template.\n\n  * reference.docx (#5820):\n\n    + Change Block Text
  (block quote) style so that the same font\n      is used as in the body text, and
  the block text is indented\n      left and right.\n    + All headings now have a
  uniform color.\n    + Level-1 headings no longer set `w:themeShade=\"B5\"`.\n    +
  Level-2 headings are now 14 point rather than 16 point.\n    + Level-3 headings
  are now 12 point rather than 14 point.\n    + Level-4 headings are italic rather
  than bold.\n\n  * epub.css: Add CSS for hanging-indent div to support pandoc-citeproc's\n
  \  new hanging indents.\n\n  * pandoc.cabal:\n\n    + Repeat ghc-options in all
  stanzas.\n    + Remove conditionals for ghc < 8 (Albert Krewinkel, #5693).\n    +
  Compile with `-Wcpp-undef` and `-fhide-source-paths` when possible\n      (Albert
  Krewinkel).\n    + Add cabal.project to extra-source-files (Albert Krewinkel).\n
  \   + Add dependency on skylighting-core (#5729). Even though it shouldn't\n      be
  needed, some tools require it.\n    + Require latest pandoc-types, texmath, skylighting,
  haddock-library.\n    + Ensure TemplateHaskell is added to other-extensions when
  it is\n      used (Vanessa McHale, #5728).\n    + Remove `derive_json_via_th` flag;
  always use TH.  This cuts down\n      on code duplication and reduces the chance
  for errors.  See #4083.\n\n  * Makefile:\n\n    + Add ghci target.\n    + Add ghcid
  target.\n    + Remove references to obsolete flag (#5694).\n\n  * Benchmarks: fix
  failure on ipynb.\n\n  * Use MathJax 3 (zorkow).\n\n  * KaTeX math: respect `classoption=fleqn`
  variable,\n    bump KaTeX version to 0.11.1 (#5815, Mauro Bieg).\n\n  * Fix redundant
  constraint compiler warnings (Pete Ryland, #5625).\n\n  * Use throwError instead
  of fail when appropriate.\n\n  * Use Prelude.fail to avoid ambiguity with fail from
  GHC.Base.\n\n  * Add `diff-zip.sh` to tools (John MacFarlane, Agust√≠n Mart√≠n Barbero).\n
  \   This is intended to make it easier to test differences in zip\n    containers,
  like epub, docx, or odt.\n\n  * Add `.gitattributes` (#5747).  This ensures that
  the golden files\n    in `test/fb2/reader/` don't have newlines converted. This
  should fix\n    a test failure on GitHub CI with Windows.\n\n  * Reorder options
  in `--help`.\n\n  * Revise code for HsYAML-0.2.0.0 (@vijayphoenix, #5704).\n\n  *
  Remove blank line in code example in Haddocks (Leif Metcalf, #5679).\n\n  * Fix
  trypandoc with `getReader`/`getWriter` changes.\n\n  * Allow building pandoc with
  GHC 8.8.\n\n  * linux tarball: add architecture `-amd64` to filename.\n    Now it
  will be: `pandoc-VERSION-linux-ARCH.tar.gz`.\n\n  * MANUAL.txt:\n\n    + Add section
  for exit codes.\n    + Document some pptx limitations in slide show section:\n      No
  incremental display (#5689).  No pause with `. . .` (#5701).\n    + reveal.js flags
  (Mauro Bieg, #5653).\n    + Document addition of `data-` prefix to unknown attributes
  in HTML5.\n    + Link to YAML spec (Mauro Bieg, #5687).\n    + Fix capitalization
  of \"Linux\" (#5859, Marcus Stollsteimer).\n    + Use a table for exit codes.\n
  \   + Put all template variable docs into one section.\n    + Use ATX headers consistently.\n
  \   + Add fuller documentation of templates (#5779), including\n      new template
  syntax, partials, etc.\n    + Add documentation for the variable `hyperrefoptions`
  (Wandmalfarbe).\n    + Clarify when macro definitions are passed as raw latex.\n
  \     In Markdown input, they are always passed through.  In LaTeX, only if\n      `latex_macros`
  is disabled.\n    + Clarify that `--dpi` provides a default and doesn't override\n
  \     dpi values specified in the images themselves (#5721).\n    + Document how
  to use custom writers with `--standalone` (#5866).\n    + Clarify `--preserve-tabs`
  default.\n\n  * INSTALL.md:\n\n    + Fix instructions for libicu.\n    + Add Void
  Linux instructions (Volodymyr Kozachnyskyi).\n\n  * CONTRIBUTING.md:\n\n    + Add
  information on tests (Agust√≠n Mart√≠n Barbero, #5652).\n    + Add information about
  command test naming to CONTRIBUTING (Florian B).\n\n  * Fix typos in changelog and
  comments (#5896, Brian Wignall).\n\n  * doc/lua-filters.md:\n\n    + Fix mistakes
  in mediabag module docs (#5851, Albert Krewinkel).\n    + Improve metadata replacement
  example in lua-filters doc (#5851).\n    + Mention which Lua version is shipped
  with pandoc (Albert Krewinkel,\n      #5892).\n\n## pandoc 2.7.3 (2019-06-11)\n\n
  \ * Add `jira` (Atlassian's Jira wiki markup) as output format (#2497,\n    Albert
  Krewinkel).\n\n  * Add `tex_math_dollars` to `multimarkdownExtensions` (#5512).\n
  \   This form is now supported in multimarkdown,\n    in addition to `tex_math_double_backslash`.\n\n
  \ * Fix `--self-contained` so it works when output format has extensions.\n    Previously
  if you used `--self-contained` with `html-smart` or\n    `html+smart`, it wouldn't
  work.\n\n  * Add template variable `curdir` with working directory\n    from which
  pandoc is run (#5464).\n\n  * Markdown reader: don't create implicit reference for
  empty header\n    (#5549).\n\n  * Muse reader: allow images inside link descriptions
  (Alexander Krotov).\n\n  * HTML reader: epub related fixes.\n\n    + With epub extensions,
  check for `epub:type` in addition to `type`.\n    + Fix problem with noteref parsing
  which caused block-level\n      content to be eaten with the noteref.\n    + Rename
  `pAnyTag` to `pAny`.\n    + Refactor note resolution.\n    + Trim definition list
  terms (Alexander Krotov).\n\n  * LaTeX reader:\n\n    + Add braces when resolving
  `\\DeclareMathOperator`\n      (#5441).  These seem to be needed for xelatex but
  not pdflatex.\n    + Allow newlines in `\\mintinline`.\n    + Pass through unknown
  listings language as class (#5540).\n      Previously if the language was not in
  the list of languages supported\n      by listings, it would not be added as a class,
  so highlighting\n      would not be triggered.\n    + `rawLaTeXInline`: Include
  trailing `{}`s in raw latex commands (#5439).\n      This change affects the markdown
  reader and other readers that allow raw\n      LaTeX.  Previously, trailing `{}`
  would be included for unknown\n      commands, but not for known commands.  However,
  they are sometimes used\n      to avoid a trailing space after the command.  The
  chances that a `{}`\n      after a LaTeX command is not part of the command are
  very small.\n\n  * MediaWiki reader: handle multiple attributes in table row (#5471,\n
  \   chinapedia).\n\n  * Docx reader: Add support for `w:rtl` (#5545).  Elements
  with this\n    property are put into Span inlines with `dir=\"rtl\"`.\n\n  * DocBook
  reader: Issue `IgnoredElement` warnings.\n\n  * Org reader (Albert Krewinkel):\n\n
  \   + Fix planning elements in headers level 3 and higher\n      (#5494).  Planning
  info is now always placed before\n      the subtree contents.  Previously, the planning
  info was placed after\n      the content if the header's subtree was converted to
  a list, which\n      happens with headers of level 3 and higher per default.\n    +
  Omit, but warn about unknown export options.  Unknown export\n      options are
  properly ignored and omitted from the output.\n    + Prefer plain symbols over math
  symbols (#5483).\n      Symbols like `\\alpha` are output plain and unemphasized,
  not as math.\n    + Recognize emphasis after TODO/DONE keyword (#5484).\n\n  * FB2
  reader:\n\n    + Skip unknown elements rather than throwing errors (#5560).\n      Sometimes
  custom elements are used (e.g. `id` element\n      inside `author`); previously
  the reader would halt with an error.\n      Now it skips the element and issues
  an `IgnoredElement` warning.\n    + Parse notes (#5493, Alexander Krotov).\n    +
  Internal improvements (Alexander Krotov).\n\n  * OpenDocument writer:  Roll back
  automatic figure/table numbering\n    (#5474).  This was added in pandoc 2.7.2,
  but it makes it impossible\n    to use pandoc-crossref. So this has been rolled
  back for now,\n    until we find a good solution to make this behavior optional\n
  \   (or a creative way to let pandoc-crossref and this feature\n    to coexist).\n\n
  \ * New module Text.Pandoc.Writers.Jira, exporting `writeJira` [API\n    change]
  (Albert Krewinkel).\n\n  * EPUB writer:\n\n    + Don't include 'landmarks' if there
  aren't any.\n      Previously we could get an empty ol element, which caused\n      validation
  errors with epubcheck.\n    + Ensure unique ids for styleesheets in content.opf
  (#5463).\n    + Make stylesheet link compatible with kindlegen (#5466,\n      Eric
  Schrijver).  Pandoc omitted `type=\"text/css\"` from both\n      `<style>` and `<rel=\"stylesheet\">`
  elements in all templates, which\n      is valid according to the spec. However,
  Amazon‚Äôs kindlegen software\n      relies on this attribute on `<link>` elements
  when detecting\n      stylesheets to include.\n\n  * HTML writer:\n\n    + Output
  video and audio elements depending on file\n      extension of the image path (Mauro
  Bieg).\n    + Emit empty alt tag in figures (#5518, Mauro Bieg).\n      The same
  text is already in the <figcaption> and\n      screen-readers would read it twice,
  see #4737.\n    + Don't add variation selector if it's already there.\n      This
  fixes round-trip failures.\n    + Prevent gratuitous emojification on iOS (#5469).\n
  \     iOS chooses to render a number of Unicode entities, including '‚Ü©', as\n      big
  colorful emoji.  This can be defeated by appending Unicode\n      VARIATION SELECTOR-15'/'VARIATION
  SELECTOR-16'.  So we now append this\n      character when escaping strings, for
  both '‚Ü©' and '‚Üî'.  If other\n      characters prove problematic, they can simply
  be added to\n      `needsVariationSelector`.  + Add `class=\"heading\"` to level
  7+ Headers\n      rendered as `<p>` elements (#5457).\n\n  * RST writer: treat Span
  with no attributes as transparent (#5446).\n    Previously an Emph inside a Span
  was being treated as\n    nested markup and ignored.  With this patch, the Span\n
  \   is just ignored.\n\n  * LaTeX writer:\n\n    + Include inline code attributes
  with `--listings` (#5420).\n    + Don't produce columns environment unless beamer
  (#5485).\n    + Fix footnote in image caption.  Regression: the fix for #4683 broke\n
  \     this case.\n    + Don't highlight code in headings (#5574).  This causes\n
  \     compilation errors.\n    + Use `\\mbox` to get proper behavior inside `\\sout`
  (#5529).\n\n  * EPUB writer: Fix document section assignments (#5546).\n    For
  example, introduction should go in bodymatter, not frontmatter, and\n    epigraph,
  conclusion, and afterward should go in bodymatter, not\n    backmatter.  For the
  full list of assignments, see the manual.\n\n  * Markdown writer:\n\n    + Add backslashes
  to avoid unwanted interpretation of\n      definition list terms as other kinds
  of block (#554).\n    + Ensure the code fence is long enough (#5519).\n      Previously
  too few backticks were used when the code block\n      contained an indented line
  of backticks.  (Ditto tildes.)\n    + Handle labels with integer names (Jesse Rosenthal,
  #5495).\n      Previously if labels had integer names, it could produce a conflict\n
  \     with auto-labeled reference links. Now we test for a conflict and\n      find
  the next available integer.  This involves adding a new state\n      variable `stPrevRefs`
  to keep track of refs used in other document\n      parts when using `--reference-location=block|section`\n\n
  \ * Textile writer: fix closing tag for math output (Albert Krewinkel).\n    Opening
  and closing tag for math output match now.\n\n  * Org writer: always indent src
  blocks content by 2 spaces (#5440, Albert\n    Krewinkel).  Emacs always uses two
  spaces when indenting the content of\n    src blocks, e.g., when exiting a `C-c
  '` edit-buffer. Pandoc used to\n    indent contents by the space-equivalent of one
  tab, but now always uses\n    two spaces, too.\n\n  * Asciidoc writer:\n\n    +
  Use `` `+...+` `` form for inline code.\n      The old `` `a__b__c` `` yields emphasis
  inside code in asciidoc.\n      To get a pure literal code span, use `` `+a__b__c+`
  ``.\n    + Use proper smart quotes with asciidoctor (#5487).\n      Asciidoctor
  has a different format for smart quotes.\n    + Use doubled ## when necessary for
  spans (#5566).\n    + Ensure correct nesting of strong/emph (#5565): strong\n      must
  be the outer element.\n\n  * JATS writer:\n\n    + Wrap elements with p when needed
  (#5570).  The JATS spec restricts\n      what elements can go inside `fn` and `list-item`.
  \ So we wrap other\n      elements inside `<p specific-use=\"wrapper\">` when needed.\n
  \   + Properly handle footnotes (#5511) according to \"best practice.\"\n      (Group
  them at the end in `<fn-group>` and use `<xref>` elements\n      to link them.)\n
  \   + Fix citations with PMID so they validate (#5481).  This includes\n      an
  update to data/jats.csl.\n    + Ensure validity of `<pub-date>` by parsing the date
  and\n      extracting year, month, and day, as expected.  Also add an\n      iso-8601-date
  attribute automatically.\n    + Don't use `<break>` element for LineBreak. It is
  only\n      allowed in a few special contexts, and not in `<p>` elements.\n    +
  Don't make `<string-name>` a child of `<string>`, which is illegal.\n\n  * FB2 writer:\n\n
  \   + Do not wrap note references into `<sup>` and brackets\n      (Alexander Krotov).
  \ Existing FB2 readers, such as FBReader, already\n      display links with type=\"note\"
  as a superscript.\n    + Use genre metadata field (#5478).\n\n  * Muse writer: do
  not escape empty line after `<br>` (Alexander Krotov).\n\n  * Add unicode code point
  in \"Missing character\" warning (#5538).\n    If the character isn't in the console
  font, the message is pretty useless,\n    so we show the code point for anything
  non-ASCII.\n\n  * Lua: add Version type to simplify comparisons (Albert Krewinkel).\n
  \   Version specifiers like `PANDOC_VERSION` and `PANDOC_API_VERSION` are\n    turned
  into `Version` objects. The objects simplify version-appropriate\n    comparisons
  while maintaining backward-compatibility.\n    A function `pandoc.types.Version`
  is added as part of the newly\n    introduced module `pandoc.types`, allowing users
  to create version\n    objects in scripts.\n\n  * pandoc lua module (Albert Krewinkel):\n\n
  \   - Fix deletion of nonexistent attributes (#5569).\n    - Better tests for Attr
  and AttributeList.\n\n  * pandoc.mediabag lua module (Albert Krewinkel):\n\n    +
  Add function `delete` for deleting a single item.\n    + Add function `empty` for
  removing all entries.\n    + Add function `items` for iterating over mediabag.\n\n
  \ * Text.Pandoc.Class: Fix handling of `file:` URL scheme in\n    `downloadOrRead`
  (#5517, Mauro Bieg).  Previously `file:/`\n    URLs were handled wrongly and pandoc
  attempted to make HTTP\n    requests, which failed.\n\n  * Text.Pandoc.MIME: add
  `mediaCategory` [API change] (Mauro Bieg).\n\n  * Text.Pandoc.Shared:\n\n    + Add
  `onlySimpleTableCells` [API change]\n      (Mauro Bieg) and use this to consolidate
  simple-table detection\n      (#5524).  This fixes an inconsistency in the HTML
  reader, which did not\n      treat tables with `<p>` inside cells as simple.\n    +
  `metaToJSON`: treat digits starting with 0 as a string, not a number\n      (#5479).
  \ This fixes a regression in YAML metadata in pandoc 2.7.2.\n\n  * Text.Pandoc.Logging:
  Add `IgnoredElement` constructor for\n    `LogMessage`.  `SkippedConetnt` doesn't
  work for some XML-based\n    readers which don't have access to parsec source positions.\n\n
  \ * Text.Pandoc.Asciify: Add Turkish undotted-i (#5433, Mauro Bieg).\n\n  * Improve
  output of Lua tests (#5499, Albert Krewinkel).\n    This makes use of tasty-lua,
  a package to write tests in Lua\n    and integrate the results into Tasty output.
  Test output becomes\n    more informative: individual tests and test groups become
  visible\n    in test output. Failures are reported with helpful error messages.\n\n
  \ * Lua: add `pandoc.system` module (#5468, Albert Krewinkel).\n    The `system`
  Lua module provides utility functions to interact with the\n    operating- and file
  system. E.g.\n    `print(pandoc.system.get_current_directory())`\n    or\n    ```lua\n
  \       pandoc.system.with_temporary_directory('tikz', function (dir)\n          --
  write and compile a TikZ file with pdflatex\n        end)\n    ```\n\n  * LaTeX
  template: Add pdflang to hypersetup if lang is set (#5443).\n\n  * beamer template:
  Fix using Beamer with geometry (#5505, Daniel Maslowski).\n    Beamer already loads
  geometry, so we need to use the `\\geometry`\n    command to set geometry options.\n\n
  \ * EPUB2/3 templates: Move inline styles to default epub.css (#5466).\n    NOTE:
  Those who use a custom CSS stylesheet with EPUB should\n    add these lines:\n\n
  \       code{ white-space: pre-wrap; }\n        span.smallcaps{ font-variant: small-caps;
  }\n        span.underline{ text-decoration: underline; }\n        q { quotes: \"‚Äú\"
  \"‚Äù\" \"‚Äò\" \"‚Äô\"; }\n        div.column{ display: inline-block; vertical-align:
  top; width: 50%; }\n\n  * reveal.js template:\n\n    + Updates for revealjs 3.8.0
  (#5435, ebiim).\n    + Remove reference to head.min.js (#5448, Winnie Hellmann).\n
  \     NOTE: users will need to update reveal.js to at least 3.8.0\n      for their
  presentations generated with this version of pandoc\n      to work correctly.\n\n
  \ * Text.Pandoc.PDF:\n\n    + Replace `</>` with literal `/` (#5451).\n      We
  use forward-slash for a directory separator in tmpDir,\n      even on Windows (because
  that's what tex likes).  So we\n      should not put a backslash between the tmpDir
  and the\n      filename on Windows.  This is harmless enough in normal\n      Windows
  setups, but it breaks on Cygwin.\n      Thanks to @cc2x for noticing and diagnosing
  the problem.\n    + Allow use of `-output-directory` in `--pdf-engine-opt` (#5462).\n
  \     This is currently possible with `mklatex` and `-outdir`, but\n      was not
  yet possible with xelatex and `-output-directory`.\n    + For PDF via ms/pdfroff,
  make TOC appear at beginning and in\n      PDF bookmarks (#5553).  Previously the
  TOC appeared at the end\n      of the document, and was not bookmarked.  To keep
  it at the end,\n      add `--pdf-engine-opt=--no-toc-relocation` to your command
  line.\n\n  * Fix broken links in documents (#5473, Shim Myeongseob).\n    Also,
  use absolute links to pandoc.org when possible, so that\n    the links can be followed
  by people viewing these documents\n    on GitHub.\n\n  * Improved sample lua tikz
  filter in lua-filters docs (#5445,\n    Matthew Doty).  There are three changes:\n\n
  \   + It only processes elements which begin with `\\begin{tikzpicture}`\n    +
  It uses pdf2svg instead of imagemagick to preserve fidelity\n    + The images produced
  have transparent backgrounds\n\n  * MANUAL.txt:\n\n    + Add note about `title-meta`,
  `author-meta`, `date-meta` (#5486).\n    + Fix typo (#5489, Christian Krause).\n\n
  \ * add test/tables.xwiki to git and pandoc.cabal (#5498, Mauro Bieg).\n\n  * Disable
  missing-home-modules warning in `stack.yaml`.\n    Otherwise `stack ghci` fails.\n\n\n##
  pandoc 2.7.2 (2019-04-05)\n\n  * Add XWiki writer (#1800, Derek Chen-Becker).\n
  \   Add `Text.Pandoc.Writers.XWiki`, exporting `writeXWiki` [API change].\n\n  *
  Dokuwiki Reader: parse single curly brace (#5416, Mauro Bieg).\n\n  * Vimwiki reader:
  improve handling of internal links (#5414).\n    We no longer append `.html` to
  link targets, and we add a title\n    `wikilink`.  This mirrors behavior of other
  wiki readers.  Generally\n    the `.html` extension is not wanted.  It may be important
  for output\n    to HTML in certain circumstances, but it can always be added using
  a\n    filter that matches on links with title `wikilink`.\n\n    If your workflow
  requires the current behavior, here is a lua filter\n    that will add the `.html`
  extension:\n\n    ```lua\n    function Link(el)\n      if el.title == 'wikilink'
  then\n        el.target = el.target .. \".html\"\n      end\n      return el\n    end\n
  \   ```\n  * ipynb reader:\n\n    + Use format `ipynb` for raw cell where no format
  given.\n    + Avoid introducing spurious `.0` on integers in metadata.\n\n  * Markdown
  reader: fenced div takes priority over setext header.\n\n  * HTML reader: read `data-foo`
  attribute into `foo` (#5392).\n    The HTML writer adds the `data-` prefix for HTML5
  for nonstandard\n    attributes.  But the attributes are represented in the AST
  without\n    the `data-` prefix, so we should strip this when reading HTML.\n\n
  \ * LaTeX reader: Improve autolink detection (#5340).\n\n  * PowerPoint writer (Jesse
  Rosenthal):\n\n    + Expand builtin reference doc to model all layouts.\n      The
  previous built-in reference doc had only title and content\n      layouts. Add in
  a section-header slide and a two-content slide, so\n      users can more easily
  modify it to build their own templates.\n    + Always open up in slide view.  When
  editing a\n      template/reference-doc, the user might be in Master view, but when\n
  \     producing a slide show, it is assumed that slide view will be\n      desired.\n
  \   + Remove `handoutsMasterList` from template presentation.xml\n    + Fix numerous
  errors in templating (#5402). Previously, some templates\n      produced by Office
  365 (MacOS) would not render with `--reference-doc`\n      correctly. We now apply
  correct shapes for content, and build\n      shape trees correctly.\n    + Make
  default placeholder type for template lookup.\n    + Apply speaker notes to metadata
  slide if applicable.\n    + Test for speaker notes after breaking header.\n    +
  Correctly handle notes after section-title header.\n      Previously, if notes came
  after a section-title header (ie, a level-1\n      header in a slide-level=2 presentation),
  they would go on the next\n      slide. This keeps them on the slide with the header.\n
  \   + Internal improvements.\n\n  * ipynb writer:\n\n    + Use format `ipynb` for
  raw cell where no format given.\n      According to nbformat docs, this is supposed
  to render in every\n      format.  We don't do that, but we at least preserve it
  as a raw\n      block in markdown, so you can round-trip.\n    + Consolidate adjacent
  raw blocks.  Sometimes pandoc creates two\n      HTML blocks, e.g. one for the open
  tag and one for a close tag.\n      If these aren't consolidated, only one will
  show up in output cell.\n    + Fixed carry-over of nbformat from metadata.\n    +
  Preserve `nbformat_minor` if it's given.  This helps with round-tripping.\n\n  *
  LaTeX writer:\n\n    + Avoid inadvertently creating ?` or !` ligatures (#5407).\n
  \     These are upside down ? and !, resp.\n    + Fix footnotes in table caption
  and cells (#5367).  This fixes a\n      bug wherein footnotes appeared in the wrong
  order, and with\n      duplicate numbers, when in table captions and cells.\n      We
  now use regular `\\footnote` commands, even in the table\n      caption and the
  minipages containing cells. Apparently\n      longtable knows how to handle this.\n\n
  \ * HTML writer: Don't add data- prefix to RDFa attributes (#5403).\n\n  * JATS
  writer: Ensure that plain strings go inside `<pub-id>` tag (#5397).\n\n  * Markdown
  writer:\n\n    + Better rendering of numbers (#5398).  If the number is integral,\n
  \     we render it as an integral not a float.\n    + Proper rendering of empty
  map in YAML metadata (#5398).  Should\n      be `{}`, not empty string.\n    + Properly
  escape attributes in Markdown writer (#5369).\n    + Be sure implicit figures work
  in list contexts (#5368).\n      Previously they would sometimes not work: e.g.,
  when they\n      occurred in final paragraphs in lists that were originally\n      parsed
  as Plain and converted later using PlainToPara.\n\n  * Docx writer: Use `w:br` without
  attributes for line breaks (#5377).\n    We previously added the attribute `type=\"textWrapping\"`,
  but\n    this causes problems on Word Online.\n\n  * LaTeX template (Andrew Dunning):\n\n
  \   + Ensure correct heading/table order (#5365).  Improve workaround\n      (#1658)
  for tables following headings.  The new solution works whether\n      or not the
  `indent` variable is enabled.\n    + Remove `subparagraph` variable. The default
  is now to use run-in\n      style for level 4 and 5 headings (`\\paragraph` and
  `\\subparagraph`).\n      To get the previous default behavior (where these were
  formatted as\n      blocks, like `\\subsubsection`), set the `block-headings` variable.\n
  \   + Add pandoc to PDF metadata (#5388).\n    + Group graphics-related code (#5389).\n
  \   + Move `\\setstretch` after front matter (#5179).  Ensures that\n      `\\maketitle`,
  `\\tableofcontents`, and so forth are not affected by\n      changes to line spacing.\n\n
  \ * Update data/jats.csl to avoid commas between name-part elements\n    (#5397).\n\n
  \ * Add support for golang (`go`) with `--listings` (#5427).\n\n  * Text.Pandoc.Shared
  - improve `metaToJSON` behavior with numbers.\n    We now do a better job marshalling
  numbers from MetaString\n    or MetaInlines into JSON Number.\n\n  * Text.Pandoc.Writers.Shared:
  `metaValueToJSON`: use Number Values for\n    integers.  Pandoc's MetaValue doesn't
  have a distinguished number type,\n    so numbers are put in MetaStrings.  If the
  MetaString consists\n    entirely of digits, we convert it to a Number.  We should
  probably\n    consider adding a MetaNumber constructor to MetaValue, for better\n
  \   round-tripping with JSON etc.  This change aids round-tripping in\n    ipynb
  metadata fields, like `toc_depth`.\n\n  * Text.Pandoc.Class: `fetchItem`: don't
  treat UNC paths as\n    protocol-relative URLs (#5127).  These are paths beginning
  `//?/UNC/...`.\n\n  * Text.Pandoc.ImageSize: Improve `pdfSize` so it handles\n    a
  wider range of PDFs (#4322, with help from Richard Davis).\n\n  * Text.Pandoc.Pretty:
  avoid stack overflow by using strict sum (#5401).\n\n  * Fix harmless error in file-scope
  code (#5422).\n\n  * MANUAL.txt:\n\n    + Improve 'header' and 'heading' usage (#5423,
  Andrew\n      Dunning).  The term 'header' was being used where 'heading'\n      is
  more appropriate.\n    + Add paragraph on options affecting markdown in ipynb.\n\n
  \ * stack.yaml - remove -Wmissing-home-modules\n    This seems to cause problems
  with stack ghci.  Remove RTS options.\n\n  * Add ghc-options to cabal.project.\n\n
  \ * appveyor.yml - use ghc 8.6.4.  Fixes segfault issues on Windows (#5037).\n\n
  \ * linux build process: Remove clone of pandoc-citeproc (#5366).\n    It wasn't
  being used; cabal.project specifies the version to use.\n\n## pandoc 2.7.1 (2019-03-14)\n\n
  \ * Add tectonic as an option for --pdf-engine (#5345, Cormac Relf).\n    Runs tectonic
  on STDIN instead of a temporary .tex file, so that it\n    looks in the working
  directory for `\\include` and `\\input` like the rest\n    of the engines.  Allows
  overriding the output directory\n    args with `--pdf-engine-opt=--outdir --pdf-engine-opt=\"$DIR\"`.\n\n
  \ * Allow `-o/--output` to be used with `--print-default-data-file`,\n    `--print-highlighting-style`,
  `--print-default-template`.\n    Note that `-o` must occur BEFORE the `--print*`
  command on the command\n    line (this is documented, #5357).\n\n  * LaTeX reader:\n\n
  \   + Support `\\underline`, `\\ul`, `\\uline` (#5359, Paul\n      Tilley).  These
  are parsed as a Span with class `underline`, as\n      with other readers.\n    +
  Ensure that `\\Footcite` and `\\Footcites` get put in a note.\n\n  * ipynb reader:\n\n
  \   + Remove sensitivity to `raw_html`, `raw_tex` extensions.\n      We now include
  every output format. Pruning is handled by\n      `--ipynb-output`.\n    + Better
  handling of cell metadata.  We now include even complex cell\n      metadata in
  the Div's attributes (as JSON, in complex cases, or\n      as plain strings in simple
  cases).\n\n  * ipynb writer:\n\n    + Recurse into native divs for output cell data
  (#5354).\n    + Render cell metadata fields from div attributes.\n\n  * Docx writer:
  avoid extra copy of abstractNum and num elements\n    in numbering.xml.  This caused
  pandoc-produced docx files to\n    be uneditable using Word Online (#5358).\n\n
  \ * Markdown writer: improve handling of raw blocks/inline.\n    We now emit raw
  content using `raw_attribute` when no more\n    direct method is available.  Use
  of `raw_attribute` can be\n    forced by disabling `raw_html` and `raw_tex`.\n\n
  \ * LaTeX writer: Add classes for frontmatter support (#5353, Andrew Dunning)\n
  \   and remove frontmatter from `scrreprt`.\n\n  * LaTeX template:\n\n    + Improve
  readability (#5363, Andrew Dunning).\n    + Robust section numbering removal (#5351,
  Andrew Dunning).\n      Ensures that section numbering does not reappear with custom\n
  \     section levels.  See <https://tex.stackexchange.com/questions/473653/>.\n
  \   + Better handling of front/main/backmatter (#5348).\n      In pandoc 2.7 we
  assumed that every class with chapters would accept\n      `\\frontmatter`, `\\mainmatter`,
  and `\\backmatter`.  This is not so (e.g.\n      report does not).  So pandoc 2.7
  breaks on report class by including an\n      unsupported command.  Instead of the
  `book-class` variable, we use two\n      variables, `has-chapters` and `has-frontmatter`,
  and set these\n      intelligently in the writer.\n\n  * Text.Pandoc.Shared: Improve
  `filterIpynbOutput`.  Ensure that\n    images are prioritized over text. `best`
  should include everything\n    for ipynb.\n\n  * Tests.Old: specify `--data-dir=../data`
  to ensure tests can find\n    data files even if they haven't been installed.  Remove
  old\n    `pandoc_datadir` environment variable, which hasn't done anything for a\n
  \   long time.\n\n  * MANUAL.txt: Add recommendation to use `raw_attribute` with
  ipynb (#5354).\n\n  * Use cmark-gfm-hs 0.1.8 (note that 0.1.7 is buggy).\n\n  *
  Use latest pandoc-citeproc, texmath.\n\n\n## pandoc 2.7 (2019-03-03)\n\n  * Use
  XDG data directory for user data directory (#3582). Instead of\n    `$HOME/.pandoc`,
  the default user data directory is now\n    `$XDG_DATA_HOME/pandoc`, where `XDG_DATA_HOME`
  defaults to\n    `$HOME/.local/share` but can be overridden by setting the\n    environment
  variable. If this directory is missing, then\n    `$HOME/.pandoc` is searched instead,
  for backwards compatibility.\n    However, we recommend moving local pandoc data
  files from\n    `$HOME/.pandoc` to `$HOME/.local/share/pandoc`. On Windows the\n
  \   default user data directory remains the same.\n\n  * Slide show formats behavior
  change:  content under headers\n    less than slide level is no longer ignored,
  but included in\n    the title slide (for HTML slide shows) or in a slide after\n
  \   the title slide (for beamer).  This change makes possible\n    2D reveal.js
  slideshows with content in the top slide on\n    each stack (#4317, #5237).\n\n
  \ * Add command line option `--ipynb-output=all|none|best` (#5339).\n    Output
  cells in ipynb notebooks often contain several different\n    versions of an output,
  with different MIME types, e.g. an HTML\n    table and a plain-text fallback.  Specifying
  `--ipynb-output=best`\n    (the default) ensures that the best version for the output
  format\n    is used.  `all` includes all versions, and `none` suppresses them\n
  \   all, leaving output cells empty.\n\n  * `asciidoctor` is now an output format
  separate from `asciidoc`,\n    to accommodate some minor implementation-specific
  differences\n    (currently just in the treatment of display math).\n\n  * Add `latexmk`
  as an option for `--pdf-engine` (#3195).\n    Note that you can use `--pdf-engine-opt=-outdir=bar`
  to specify\n    a persistent temp directory.\n\n  * Markdown reader:\n\n    + Improve
  tight/loose list handling (#5285). Previously the\n      algorithm allowed list
  items with a mix of Para and Plain, which\n      is never wanted.\n    + Add newline
  when parsing blocks in YAML (#5271). Otherwise last\n      block gets parsed as
  a Plain rather than a Para. This is a\n      regression in pandoc 2.x. This patch
  restores pandoc 1.19\n      behavior.\n    + Make `yamlToMeta` respect extensions
  (#5272, Mauro Bieg).\n      This adds a `ReaderOptions` parameter to `yamlToMeta`
  [API change].\n    + Fix bug parsing fenced code blocks (#5304). Previously parsing\n
  \     would break if the code block contained a string of backticks of\n      sufficient
  length followed by something other than end of line.\n\n  * LaTeX reader: don't
  let `\\egroup` match `{`. `braced` now actually\n    requires nested braces. Otherwise
  some legitimate command and\n    environment definitions can break.\n\n  * Docx
  reader (Jesse Rosenthal):\n\n    + Rename `getDocumentPath` as `getDocumentXmlPath`.\n
  \   + Use field notation for setting `ReaderEnv`.\n    + Figure out `document.xml`
  path once at the beginning of parsing, and\n      add it to the environment, so
  we can avoid repeated lookups.\n    + Dynamically determine main document xml path
  (#5277).\n      The desktop Word program places the main document file in\n      `word/document.xml`,
  but the online word places it in\n      `word/document2.xml`. This file path is
  actually stated in the root\n      `_rels/.rels` file, in the `Relationship` element
  with an\n      `http://../officedocument` type.\n    + Fix paths in archive to prevent
  Windows failure (#5277).\n      Some paths in archives are absolute (have an opening
  slash) which, for\n      reasons unknown, produces a failure in the test suite on
  MS\n      Windows. This fixes that by removing the leading slash if it exists.\n
  \   + Add comments to aid code readability.\n    + Trim space inside the last inline
  (#5273).\n    + Unwrap sdt elements in footnotes and comments (#5302).\n\n  * Muse
  reader (Alexander Krotov):\n\n    + Test that block level markup does not break
  `<verbatim>`.\n    + Add secondary note support.\n\n  * ipynb reader: handle images
  referring to attachments. Previously\n    we didn't strip off the attachment: prefix,
  so even though the\n    attachment was available in the mediabag, pandoc couldn't
  find it.\n\n  * JATS reader:\n\n    + Fix parsing of figures (#5321). This ensures
  that a figure\n      containing a single image is parsed as a pandoc \"implicit\n
  \     figure\" (i.e., a Para with a single Image whose title attribute\n      begins
  with `fig:`). More complex figures will still be parsed\n      as divs.\n    + Support
  `fig-group` block element (#5317).\n    + Handle citations with multiple references
  (#5310). The `rid`\n      attribute can have a space-separated list of ids.\n\n
  \ * AsciiDoc Writer: Add `writeAsciiDoctor` [API change, Tarik Graba].\n    Handle
  display math appropriately for Asciidoctor.\n\n  * JATS writer: wrap figure caption
  in `<p>` to fix validation (#5290,\n    Mauro Bieg).\n\n  * HTML writer:\n\n    +
  Implement WAI-ARIA roles for (end)notes, citations, and\n      bibliography (#4213).
  Note that doc-biblioref is only used when\n      link-citations produces links,
  since it belongs on links.\n    + Include content (including speaker notes) in title
  slides\n      (#4317, #5237).\n\n  * ipynb writer:\n\n    + Ensure final newline.\n
  \   + Only include metadata under `jupyter` field.\n    + Don't create attachments
  for images with absolute URIs,\n      including data: URIs (#5303).\n    + Keep
  plain text fallbacks in output even if a richer format is\n      included (#5293).
  We don't know what output format will be needed.\n      See the `--ipynb-output`
  command line option for a way to control\n      what formats are included in the
  output.\n\n  * Markdown writer: use `markdown=\"1\"` when appropriate for Divs:\n
  \   when `native_divs` and `markdown_in_html_blocks` are disabled\n    but `raw_html`
  and `markdown_attribute` are enabled.\n\n  * LaTeX writer:\n\n    + Use right fold
  for `escapeString`.  This is more elegant than\n      the explicit recursive code
  we were using.\n    + Avoid `{}` after control sequences when escaping.\n      `\\ldots{}.`
  doesn't behave as well as `\\ldots.` with the latex\n      ellipsis package.  This
  patch causes pandoc to avoid emitting\n      the `{}` when it is not necessary.
  \ Now `\\ldots` and other\n      control sequences used in escaping will be followed
  by either\n      a `{}`, a space, or nothing, depending on context.\n    + For beamer,
  include contents under headers superordinate to\n      slidelevel (#4317). Currently
  we keep the fancy title slide, and\n      add a new slide with the same title and
  whatever content was\n      under the header.\n\n  * Powerpoint writer (Jesse Rosenthal):
  support underlines.\n    Use span with single class \"underline\" as in docx writer.\n\n
  \ * Muse writer: escape secondary notes (Alexander Krotov).\n\n  * FB2 writer: add
  section identifiers support (#5229, John KetzerX).\n\n  * Make `--fail-if-warnings`
  work for PDF output (#5343).\n\n  * Lua filters (Albert Krewinkel):\n\n    + Load
  module `pandoc` before calling `init.lua` (#5287). The file\n      `init.lua` in
  pandoc's data directory is run as part of pandoc's\n      Lua initialization process.
  Previously, the `pandoc` module was\n      loaded in `init.lua`, and the structure
  for marshaling was\n      set up after. This allowed simple patching of element\n
  \     marshaling, but made using `init.lua` more difficult. Now, all\n      required
  modules are now loaded before calling `init.lua`. The\n      file can be used entirely
  for user customization. Patching\n      marshaling functions, while discouraged,
  is still possible via\n      the `debug` module.\n    + All Lua modules bundled
  with pandoc, i.e., `pandoc.List`,\n      `pandoc.mediabag`, `pandoc.utils`, and
  `text` are re-exported from the\n      `pandoc` module. They are assigned to the
  fields `List`, `mediabag`,\n      `utils`, and `text`, respectively.\n\n  * Text.Pandoc.Lua
  (Albert Krewinkel):\n\n    + Split `StackInstances` into smaller Marshaling modules.\n
  \   + Get `CommonState` from Lua global. This allows more control over\n      the
  common state from within Lua scripts.\n\n  * LaTeX template:\n\n    + Support the
  `subject` metadata variable (#5289, Pascal Wagler).\n    + Add `\\frontmatter`,
  `\\mainmatter`, `\\backmatter`\n      for book classes (#5306).\n\n  * epub3 template:
  Add titlepage class to section (#5269).\n\n  * HTML5 template: Add ARIA role `doc-toc`
  for table of contents (#4213).\n\n  * Make `--metadata-file` use selected extensions
  (#5279, #5272, Mauro Bieg).\n\n  * Text.Pandoc.Shared:\n\n    + Remove `withTempDir`
  [API change].\n    + Add new exported function `defaultUserDataDirs` [API change].\n
  \   + Add `filterIpynbOutput` [API change].\n    + `compactify`: Avoid lists with
  a mix of Plain and Para elements\n      (#5285).\n\n  * Text.Pandoc.Translations:
  reorder alphabetically and remove `Author`\n    (#5334, Mauro Bieg).\n\n  * Text.Pandoc.Extensions:\n\n
  \   + More carefully groom ipynb default extensions.\n    + Add `all_symbols_escapable`
  to `githubMarkdownExtensions`.\n\n  * Text.Pandoc.PDF:\n\n    + Use system temp
  directory when possible (#1192). Previously we\n      created temp dirs in the working
  directory, partly (a) because\n      there were problems using the system temp directory
  on Windows,\n      when their pathnames included tildes, and partly (b) because\n
  \     programs like `epstopdf.pl` would not be allowed to write to\n      directories
  outside the working directory in restricted mode. We\n      now (a) use the system
  temp dir except when the path includes\n      tildes, and (b) set `TEXMFOUTPUT`
  when creating the PDF, so that\n      subsidiary programs can use the system temp
  directory. This\n      addresses problems that occurred when pandoc was used in
  a\n      synced directory (such as Dropbox).\n    + Change types of subsidiary functions
  to PandocIO, to allow\n      warnings to be threaded through (#5343).\n\n  * Text.Pandoc.MIME:
  add WebP (#5267, Mauro Bieg).\n\n  * Tests: avoid calling `findPandoc` multiple
  times.\n\n  * Old tests: remove need for temp files by using `pipeProcess`.\n\n
  \ * Added simple ipynb reader/writer tests (#5274).\n\n  * Rearrange `--help` output
  in a more rational way, with common\n    options at the beginning and options grouped
  by function (#5336).\n\n  * trypandoc: Add JATS and other missing formats (Arfon
  Smith, #5291).\n\n  * Add missing copyright notices and remove license boilerplate
  (#4592,\n    Albert Krewinkel).\n\n  * Use latest basement/foundation on 32bit windows.\n\n
  \ * Use latest skylighting (#5328). Custom syntax definitions no\n    longer try
  to load `language.dtd`.\n\n  * Require texmath 0.11.2.1\n\n  * Use latest pandoc-citeproc
  (0.16.1.1).\n\n  * MANUAL.txt:\n\n    + Clarify variable substitution indentation
  in templates (#5338,\n      Agust√≠n Mart√≠n Barbero).\n    + Reorder custom-styles
  section (#5324, Mauro Bieg).\n\n## pandoc 2.6 (2019-01-30)\n\n  * Support ipynb
  (Jupyter notebook) as input and output format.\n\n    + Add `ipynb` as input and
  output format (extension `.ipynb`).\n    + Added Text.Pandoc.Readers.Ipynb [API
  change].\n    + Added Text.Pandoc.Writers.Ipynb [API change].\n    + Add `PandocIpynbDecodingError`
  constructor to Text.Pandoc.Error.Error\n      [API change].\n    + Depend on ipynb
  library.\n    + Note: there is no template for ipynb.\n\n  * Add DokuWiki reader
  (#1792, Alexander Krotov).  This adds\n    Text.Pandoc.Readers.DokuWiki [API change],
  and adds `dokuwiki`\n    as an input format.\n\n  * Implement task lists (#3051,
  Mauro Bieg). Added `task_lists`\n    extension. Task lists are supported from markdown
  and gfm input.\n    They should work, to some degree, in all output formats, though
  in\n    most formats you'll get a bullet list with a unicode character for\n    the
  box. In HTML, you get checkboxes and in LaTeX/PDF output, a\n    box is used as
  the list marker. API changes:\n\n    + Added constructor `Ext_task_lists` to `Extension`.\n
  \   + Added `taskListItemFromAscii` and `taskListItemToAscii` to\n      Text.Pandoc.Shared.\n\n
  \ * Allow some command line options to take URL in addition to FILE.\n    `--include-in-header`,
  `--include-before-body`, `--include-after-body`.\n\n  * HTML reader:\n\n    + Handle
  empty `start` attribute (see #5162).\n    + Treat `textarea` as a verbatim environment
  (#5241) and preserve\n      spacing.\n\n  * RST reader:\n\n    + Change treatment
  of `number-lines` directive (Brian Leung,\n      #5207). Directives of this type
  without numeric inputs should\n      not have a `startFrom` attribute; with a blank
  value, the\n      writers can produce extra whitespace.\n    + Removed superfluous
  `sourceCode` class on code blocks (#5047).\n    + Handle `sourcecode` directive
  as synonym for `code` (#5204).\n\n  * Markdown reader:\n\n    + Remove `sourceCode`
  class for literate Haskell code blocks\n      (#5047). Reverse order of `literate`
  and `haskell` classes on\n      code blocks when parsing literate Haskell, so `haskell`
  is\n      first.\n    + Treat `<textarea>` as a verbatim environment (#5241).\n\n
  \ * Org reader:\n\n    + Handle `minlevel` option differently (#5190, Brian Leung).\n
  \     When `minlevel` exceeds the original minimum level observed in\n      the
  file to be included, every heading should be shifted\n      rightward.\n    + Allow
  for case of `:minlevel == 0` (#5190).\n    + Fix treatment of links to images (#5191,
  Albert Krewinkel).\n      Links with descriptions which are pointing to images are
  no\n      longer parsed as inline images, but as links.\n    + Add support for #+SELECT_TAGS
  (Brian Leung).\n    + Separate filtering logic from conversion function (Brian Leung).\n\n
  \ * TWiki reader: Fix performance issue with underscores (#3921).\n\n  * MediaWiki
  reader: use `_` instead of `-` in auto-identifiers (#4731).\n    We may not still
  be exactly matching mediawiki's algorithm.\n\n  * LaTeX reader:\n\n    + Remove
  `sourceCode` class for literate Haskell code blocks\n      (#5047). Reverse order
  of `literate` and `haskell` classes on\n      code blocks when parsing literate
  Haskell, so `haskell` is\n      first.\n    + Support `\\DeclareMathOperator` (#5149).\n
  \   + Support `\\inputminted` (#5103).\n    + Support `\\endinput` (#5233).\n    +
  Allow includes with dots like `cc_by_4.0`.  Previously the `.0`\n      was interpreted
  as a file extension, leading pandoc not to add\n      `.tex` (and thus not to find
  the file).  The new behavior matches\n      tex more closely.\n\n  * Man reader:\n\n
  \   + Use `mapLeft` from Shared instead of defining own.\n\n  * Docx reader (Jesse
  Rosenthal):\n\n    + Handle level overrides (#5134).\n\n  * Docx writer:\n\n    +
  Support custom properties (#3024, #5252, Agust√≠n Mart√≠n Barbero).\n      Also supports
  additional core properties:  `subject`, `lang`,\n      `category`, `description`.\n
  \   + Make Level into a real type, instead of an alias for a tuple\n      (Jesse
  Rosenthal).\n\n  * ICML writer (Mauro Bieg):\n\n    + Support custom-styles (#5137,
  see #2106).\n    + Support unnumbered headers (#5140).\n\n  * Texinfo writer: Use
  header identifier for anchor if present (#4731).\n    Previously we were overwriting
  an existing identifier with a new one.\n\n  * Org writer: Preserve line-numbering
  for example and code blocks\n    (Brian Leung).\n\n  * Man/Ms writers: Don't escape
  `-` as `\\-`. The `\\-` gets rendered\n    in HTML and PDF as a unicode minus sign.\n\n
  \ * Ms writer: Ensure we have a newline after .EN in display math (#5251).\n\n  *
  RST writer: Don't wrap simple table header lines (#5128).\n\n  * Asciidoc writer:
  Shorter delimiters for tables, blockquotes\n    (#4364). This matches asciidoctor
  reference docs.\n\n  * Dokuwiki writer: Remove automatic `:` prefix before internal
  image\n    links (#5183, Damien Clochard).  This prevented users from making\n    relative
  image links.\n\n *  Zimwiki writer: remove automatic colon prefix before internal\n
  \   images (#5183, Damien Clochard).\n\n  * MediaWiki writer: fix caption, use 'thumb'
  instead of 'frame'\n    (#5105). Captions used to have the word 'caption' prepended;
  this\n    has been removed. Also, 'thumb' is used instead of 'frame' to\n    allow
  images to be resized.\n\n  * reveal.js writer:\n\n    + Ensure that we don't get
  > 2 levels of section nesting,\n      even with slide level > 2 (#5168).\n    +
  If slide level == N but there is no N-level header, make\n      sure the next header
  with level > N gets treated as a slide\n      and put in a section, rather than
  remaining loose (#5168).\n\n  * Markdown writer:\n\n    + Make `plain` RawBlocks
  pass through in `plain` output.\n    + Include needed whitespace after HTML figure
  (#5121).\n      We use HTML for a figure in markdown dialects that can't\n      represent
  it natively.\n\n  * Commonmark writer:\n\n    + Fix handling of SoftBreak with `hard_line_breaks`
  (#5195).\n    + Implement `--toc` (`writerTableOfContents`)\n      in commonmark/gfm
  writers (#5172).\n\n  * EPUB writer:\n\n    + Ensure that picture transforms are
  done on metadata too.\n    + Small fixes to `nav.xhtml`:\n      Add 'landmarks'
  id attribute to the landmarks nav.\n      Replace old default CSS removing numbers
  from ol.toc li\n      with new rules that match `nav#toc ol, nav#landmarks ol`.\n
  \     We keep the `toc` class on `ol` for backwards compatibility.\n\n  * LaTeX
  writer:\n\n    + Make raw content marked `beamer` pass through in `beamer`\n      output
  (pandoc/lua-filters#40).\n    + Beamer: avoid duplicated `fragile` property in some
  cases\n      (#5208).\n    + Add `#` special characters for listings (#4939).\n
  \     This character needs special handling in `\\lstinline`.\n\n *  RTF writer:
  use `toTableOfContents` from Shared to replace\n    old duplicated code.\n\n  *
  Pptx writer:\n\n    + Support custom properties.  Also supports additional core\n
  \     properties: `subject`, `category`, `description` (#5252,\n      Agust√≠n Mart√≠n
  Barbero).\n    + Use `toTableOfContents` from Shared to replace old duplicated code.\n\n
  \ * ODT writer (August√≠n Mart√≠n Barbero):\n\n    + Fix typo in custom properties
  (#2839).\n    + Improve standard properties, including the following core\n      properties:
  `generator` (Pandoc/VERSION), `description`, `subject`,\n      `keywords`, `initial-creator`
  (from authors), `creation-date`\n      (actual creation date) (#5252).\n\n  * Custom
  writers:\n\n    + Allow '-' in filenames for custom lua writers (#5187).\n    +
  sample.lua: add `SingleQuoted`, `DoubleQuoted` (#5104).\n    + sample.lua: Add a
  missing `>` (MichaWiedenmann).\n\n  * reveal.js template:  Add `zoomKey` config
  (#4249).\n\n  * HTML5 template: Remove unnecessary type=\"text/css\" on style and\n
  \   link for HTML5 (#5146).\n\n  * LaTeX template (Andrew Dunning, except where
  noted):\n\n    + Prevent fontspec from scaling `mainfont` to match the default\n
  \     font, Latin Modern. A main font set to 12pt could\n      previously appear
  between 11pt to 13pt depending on its design.\n      To return to the earlier rendering,
  use `-V\n      mainfontoptions=\"Scale=MatchLowercase\"` (#5212, #5218).\n    +
  Display monospaced fonts without TeX ligatures when using\n      `--pdf-engine=lualatex`.
  It now matches the behaviour of other\n      engines (#5212, #5218).\n    + Remove
  the deprecated `romanfont` variable. The functionality of\n      `mainfont` is identical
  (#5218).\n    + Render `\\subtitle` with the standard document classes.\n      Previously,
  `subtitle` only appeared when using the KOMA-Script\n      classes or Beamer (#5213,
  #5244).\n    + Use Babel instead of Polyglossia for LuaLaTeX. This avoids\n      several
  language selection problems, notably with retaining\n      French spacing conventions
  when switching to a verbatim\n      environment or another language; and in printing
  Greek text\n      without hyphenation (#5193).\n    + Use the [`xurl`](https://ctan.org/pkg/xurl)
  package if\n      available, improving the appearance of URLs by allowing them to\n
  \     break at additional points (#5193).\n    + Use [`bookmark`](https://ctan.org/pkg/bookmark)
  if available\n      to correct heading levels in PDF bookmarks: see the [KOMA-Script\n
  \     3.26 release notes](https://komascript.de/release3.26) (#5193).\n    + Require
  the [`xcolor`](https://ctan.org/pkg/xcolor) package to\n      avoid a possible error
  when using additional packages alongside\n      footnotes in tables (#5193, closes
  #4861).\n    + Remove obsolete `fixltx2e` package, which has no functionality\n
  \     with TeX Live 2015 or later (#5193).\n    + Allow multiple `fontfamilies.options`
  (#5193, closes #5194).\n    + Restrict `institute` variable to Beamer (#5219).\n
  \   + Use [`footnotehyper`](https://ctan.org/pkg/footnotehyper)\n      package if
  available to make footnotes in tables compatible\n      with `hyperref` (#5234).\n
  \   + Number parts and chapters in book classes only if the\n      `numbersections`
  variable is set, for consistency with other\n      output formats. To return to
  the previous behaviour, use\n      `-V numbersections -V secnumdepth=0` (#5235).\n
  \   + Reindent file (#5193).\n    + Use built-in parskip handling with KOMA-Script
  classes (#5143, Enno).\n    + Set default listings language for lua, assembler (#5227,
  John\n      MacFarlane).  Otherwise we get an error when trying to compile code\n
  \     with lua or assembler code.  To change the default dialect\n      (currently
  5.3 for lua and x86masm for assembler), you can use\n      `--include-in-header`
  to inject something like\n      `\\lstset{defaultdialect=[5.2]Lua}`.\n\n  * Text.Pandoc.Readers:
  Changed types of `readJSON`; it now runs\n    in an instance of PandocMonad, like
  the other readers and\n    writers.  [API change]\n\n  * Text.Pandoc.Writers: Changed
  types of `writeJSON`; it now runs\n    in an instance of PandocMonad, like the other
  readers and\n    writers.  [API change]\n\n  * Text.Pandoc.Error: Added `PandocUTF8DecodingError`
  constructor\n    for `PandocError`. [API change]\n\n  * Text.Pandoc.Writers.Shared
  - add `toTableOfContents`. [API change]\n    This is refactored out from the Markdown
  writer.\n    It can be used in other writers to create a table of contents.\n\n
  \ * Improve error messages for UTF-8 decoding errors. Now we give\n    the filename
  and byte offset (#4765).\n\n  * Text.Pandoc.XML: Strip out illegal XML characters
  in\n    `escapeXMLString` (#5119).\n\n  * Text.Pandoc.Process: update `pipeProcess`
  (Albert Krewinkel).\n    The implementation of `pipeProcess` was rewritten to fix
  sporadic\n    failures caused by prematurely closed pipes.\n\n  * Use `safeRead`
  instead of `read` everywhere in the code\n    (John MacFarlane, Mauro Bieg, #5162,
  #5180).\n\n  * Text.Pandoc.SelfContained: Decompress `.svgz` when\n    converting
  to `data:` URI (#5163, Alexander Krotov).\n\n  * Text.Pandoc.Parsing: Remove unused
  `HasHeaderMap`\n    (#5175, Alexander Krotov). [API change]\n\n  * Normalize Windows
  paths to account for change in ghc 8.6 (#5127).\n    When pandoc is compiled with
  ghc 8.6, Windows paths are treated\n    differently, and paths beginning `\\\\server`
  no longer work.\n    This commit rewrites such patsh to `\\\\?\\UNC\\server` which
  works.\n    The change operates at the level of argument parsing, so it\n    only
  affects the command line program.\n\n  * Simplify/fix reading of `--metadata` values
  on command line\n    to avoid problems relating to hvr/HsYAML#7 (#5177).\n\n  *
  data/pandoc.lua: auto-fix nested constructor arguments (Albert\n    Krewinkel).
  \ Incorrect types to pandoc element constructors are\n    automatically converted
  to the correct types when possible. This was\n    already done for most constructors,
  but conversions are now also done\n    for nested types (like lists of lists).\n\n
  \ * Removed custom Setup.hs, use build-type: simple. The only thing we\n    gained
  from the custom build was automatic installation of the man\n    page when using
  'cabal install'. But custom builds cause problems,\n    e.g., with cross-compilation.
  Installation of the man page is\n    better handled by packagers. Note to packagers
  (e.g. Debian): it\n    may be necessary to add a step installing the man page with
  the\n    next release.\n\n  * Allow latest http-client, tasty, zip-archive, Glob.\n\n
  \ * Require skylighting >= 0.7.5, adding support for sml, J,\n    typescript.\n\n
  \  * Tests:  Cleaned up `findPandoc` in `Tests.Helpers`, so it\n     works well
  with cabal v2.\n\n  * INSTALL.md:\n\n    + Use button for installer links (John
  MacFarlane, Mauro Bieg,\n      #5167).\n    + Fix links and bump required stack
  version (max).\n    + Improve installation notes on associated software (Andrew\n
  \     Dunning). Includes explanation of how to install related tools\n      with
  package managers (since the method of installing\n      `rsvg-convert` is not obvious).\n\n
  \ * doc/org.md: improve documentation of org features (Albert\n    Krewinkel).\n\n
  \ * doc/lua-filters.md:  use 3rd level headers for module fields.\n\n  * MANUAL:\n\n
  \   + Clarify automatic identifiers (#5201). We remove\n      non-alphanumerics.
  This includes, e.g., emojis.\n    + Fix example for Div with id (Geoffrey Ely).\n
  \   + Update list of LaTeX packages used.\n    + Make it clear that `hard_line_breaks`
  works in `gfm` (see #5195).\n    + Mention `raw_attribute` in documentation for
  `raw_html` and\n      `raw_tex` (#5240, thanks to @eiro).\n    + Clarify that `$sep$`
  must come right before `$endfor$` in templates\n      (#5243, Lev Givon).\n    +
  Document metadata support for docx, odt, pptx writers (Agust√≠n\n      Mart√≠n Barbero).\n
  \   + Reorganize template variables (#5249, Andrew Dunning).\n      Add additional
  headings to categorize variables, and\n      alphabetize when there is large number;
  add more examples.\n    + Document `date-meta` template variable (#5260, Tristan
  Stenner).\n\n  * trypandoc: Fix CSS and viewport.\n\n## pandoc 2.5 (2018-11-27)\n\n
  \ * Text.Pandoc.App: split into several unexported submodules (Albert\n    Krewinkel):
  \ Text.Pandoc.App.FormatHeuristics,\n    Text.Pandoc.App.Opt, Text.Pandoc.App.CommandLineOptions,\n
  \   Text.Pandoc.App.OutputSettings.  This is motivated partly by the\n    desire
  to reduce recompilations when something is modified,\n    since App previously depended
  on virtually every other module.\n\n  * Text.Pandoc.Extensions\n\n    + Semantically,
  `gfm_auto_identifiers` is now a modifier of\n      `auto_identifiers`; for identifiers
  to be set, `auto_identifiers` must\n      be turned on, and then the type of identifier
  produced depends on\n      `gfm_auto_identifiers` and `ascii_identifiers` are set.
  Accordingly,\n      `auto_identifiers` is now added to `githubMarkdownExtensions`
  (#5057).\n    + Remove `ascii_identifiers` from `githubMarkdownExtensions`.\n      GitHub
  doesn't seem to strip non-ascii characters any more.\n\n  * Text.Pandoc.Lua.Module.Utils
  (Albert Krewinkel)\n\n    + Test AST object equality via Haskell (#5092).  Equality
  of Lua\n      objects representing pandoc AST elements is tested by unmarshalling\n
  \     the objects and comparing the result in Haskell.\n      A new function `equals`
  which performs this test has been added to the\n      `pandoc.utils` module.\n    +
  Improve stringify.  Meta value strings (MetaString)\n      and booleans (MetaBool)
  are now converted to the literal string and the\n      lowercase boolean name, respectively.
  Previously, all values of these\n      types were converted to the empty string.\n\n
  \ * Text.Pandoc.Parsing: Remove Functor and Applicative constraints where Monad\n
  \   already exists (Alexander Krotov).\n\n  * Text.Pandoc.Pretty: Don't render BreakingSpace
  at end of line\n    or beginning of line (#5050).\n\n  * Text.Pandoc.Readers.Markdown\n\n
  \   + Fix parsing of citations, quotes, and underline emphasis\n      after symbols.
  \ Starting with pandoc 2.4, citations, quoted inlines,\n      and underline emphasis
  were no longer recognized after certain\n      symbols, like parentheses (#5099,
  #5053).\n    + In pandoc 2.4, a soft break after an abbreviation would be\n      relocated
  before it to allow for insertion of a nonbreaking\n      space after the abbreviation.
  This behavior is here reverted.\n      A soft break after an abbreviation will remain,
  and no nonbreaking\n      space will be added. Those who care about this issue should
  take care not\n      to end lines with an abbreviation, or to insert nonbreaking
  spaces\n      manually.\n\n  * Text.Pandoc.Readers.FB2: Do not throw error for unknown
  elements in\n    `<body>` (Alexander Krotov).  Some libraries include custom elements\n
  \   in their FB2 files.\n\n  * Text.Pandoc.Readers.HTML\n\n    + Allow `tfoot` before
  body rows (#5079).\n    + Parse `<small>` as a Span with class \"small\" (#5080).\n
  \   + Allow thead containing a row with `td` rather than `th` (#5014).\n\n  * Text.Pandoc.Readers.LaTeX\n\n
  \   + Cleaned up handling of dimension arguments.  Allow decimal points,\n      preceding
  space.\n    + Don't allow arguments for verbatim, etc.\n    + Allow space before
  bracketed options.\n    + Allow optional arguments after `\\\\` in tables.\n    +
  Improve parsing of `\\tiny`, `\\scriptsize`, etc.  Parse as raw,\n      but know
  that these font changing commands take no arguments.\n\n  * Text.Pandoc.Readers.Muse\n\n
  \   + Trim whitespace before parsing grid table cells (Alexander Krotov).\n    +
  Add grid tables support (Alexander Krotov).\n\n  * Text.Pandoc.Shared\n\n    + For
  bibliography match Div with id `refs`, not class `references`.\n      This was a
  mismatch between pandoc's docx, epub, latex, and markdown\n      writers and the
  behavior of pandoc-citeproc, which actually looks for a\n      div with id `refs`
  rather than one with class `references`.\n    + Exactly match GitHub's identifier
  generating algorithm (#5057).\n    + Add parameter for `Extensions` to `uniqueIdent`
  and\n      `inlineListToIdentifier` (#5057).  [API change]\n      This allows these
  functions to be sensitive to the settings of\n      `Ext_gfm_auto_identifiers` and
  `Ext_ascii_identifiers`, and allows us to\n      use `uniqueIdent` in the CommonMark
  reader, replacing custom code.  It\n      also means that `gfm_auto_identifiers`
  can now be used in all formats.\n\n  * Text.Pandoc.Writers.AsciiDoc\n\n    + Use
  `.`+ as list markers to support nested ordered lists (#5087).\n    + Support list
  number styles (#5089).\n    + Render Spans using `[#id .class]#contents#` (#5080).\n\n
  \ * Text.Pandoc.Writers.CommonMark\n\n    + Respect `--ascii` (#5043, quasicomputational).\n
  \   + Make sure `--ascii` affects quotes, super/subscript.\n\n  * Text.Pandoc.Writers.Docx\n\n
  \   + Fix bookmarks to headers with long titles (#5091).\n      Word has a 40 character
  limit for bookmark names.  In addition, bookmarks\n      must begin with a letter.
  \ Since pandoc's auto-generated identifiers may\n      not respect these constraints,
  some internal links did not work.  With\n      this change, pandoc uses a bookmark
  name based on the SHA1 hash of the\n      identifier when the identifier isn't a
  legal bookmark name.\n    + Add bookmarks to code blocks (Nikolay Yakimov).\n    +
  Add bookmarks to images (Nikolay Yakimov).\n    + Refactor common bookmark creation
  code into a function (Nikolay Yakimov).\n\n  * Text.Pandoc.Writers.EPUB: Handle
  calibre metadata (#5098).\n    Nodes of the form\n\n          <meta name=\"calibre:series\"
  content=\"Classics on War and Politics\"/>\n\n      are now included from an epub
  XML metadata file.  You can also include\n      this information in your YAML metadata,
  like so:\n\n          calibre:\n           series: Classics on War and Policitics\n\n
  \     In addition, ibooks-specific metadata can now be included via an XML\n      file.
  (Previously, it could only be included via YAML metadata, see\n      #2693.)\n\n
  \ * Text.Pandoc.Writers.HTML: Use plain `\"` instead of `&quot;` outside of\n    attributes.\n\n
  \ * Text.Pandoc.Writers.ICML: Consolidate adjacent strings, inc. spaces.\n    This
  avoids splitting up the output unnecessarily into separate elements.\n\n  * Text.Pandoc.Writers.LaTeX:
  Don't emit `[<+->]` unless beamer output, even\n    if `writerIncremental` is True
  (#5072).\n\n  * Text.Pandoc.Writers.Muse (Alexander Krotov).\n\n    + Output tables
  as grid tables if they have multi-line cells.\n    + Indent simple tables only on
  the top level.\n    + Output tables with one column as grid tables.\n    + Add support
  for `--reference-location`.\n    + Internal improvements.\n\n  * Text.Pandoc.Writers.OpenDocument:
  Fix list indentation (Nils Carlson,\n    #5095).  This was a regression in pandoc
  2.4.\n\n  * Text.Pandoc.Writers.RTF: Fix warnings for skipped raw inlines.\n\n  *
  Text.Pandoc.Writers.Texinfo: Add blank line before `@menu` section (#5055).\n\n
  \ * Text.Pandoc.XML: in `toHtml5Entities`, prefer shorter entities\n    when there
  are several choices for a particular character.\n\n  * data/abbreviations\n\n    +
  Add additional abbreviations (Andrew Dunning)\n      Many of these borrowed from
  the Chicago Manual of Style 10.42,\n      'Scholarly abbreviations'.\n\n  * Templates\n\n
  \   + Asciidoc template:  add :lang: to title header is lang is set in\n      metadata
  (#5088).\n\n  * pandoc.cabal: Add cabal flag `derive_json_via_th` (Albert Krewinkel)\n
  \   Disabling the flag will cause derivation of ToJSON and FromJSON\n    instances
  via GHC Generics instead of Template Haskell. The flag is\n    enabled by default,
  as deriving via Generics can be slow (see #4083).\n\n  * trypandoc:\n\n    + Tweaked
  drop-down lists.\n    + Put link to site in footer.\n    + Preselect output format.\n
  \   + Update on change of in or out format.\n    + Add man input format.\n\n  *
  MANUAL.txt:\n\n    + Fix outdated description of latex_macros extension.\n    +
  Clarified placement of bibliography.\n    + Added \"A note on security.\"\n    +
  Fix note on curly brace syntx for locators.\n    + Document new explicit syntax
  for citeproc locators.\n    + Remove confusing cross-links for some extensions.\n
  \   + Don't put pandoc in code ticks in heading.\n    + Document that `--ascii`
  works for gfm and commonmark too.\n    + Add `man` to `--from` options.\n\n  * doc/customizing-pandoc.md:
  various improvements (Mauro Bieg).\n\n\n## pandoc 2.4 (2018-11-03)\n\n### New features\n\n
  \ * New input format `man` (Yan Pashkovsky, John MacFarlane).\n\n### Behavior changes\n\n
  \ * `--ascii` is now implemented in the writers, not in Text.Pandoc.App,\n    via
  the new `writerPreferAscii` field in `WriterOptions`.\n    Now the `write*` functions
  for Docbook, HTML, ICML, JATS, LaTeX,\n    Ms, Markdown, and OPML are sensitive
  to `writerPreferAscii`.\n    Previously the to-ascii translation was done in Text.Pandoc.App,\n
  \   and thus not available to those using the writer functions\n    directly.\n\n
  \ * `--ascii` now works with Markdown output.  HTML5 character reference\n    entities
  are used.\n\n  * `--ascii` now works with LaTeX output. 100% ASCII output can't
  be\n    guaranteed, but the writer will use commands like `\\\"{a}` and `\\l`\n
  \   whenever possible, to avoid emitting a non-ASCII character.\n\n  * For HTML5
  output, `--ascii` now uses HTML5 character reference\n    entities rather than numerical
  entities.\n\n  * Improved detection of format based on extension (in Text.Pandoc.App).\n
  \   We now ensure that if someone tries to convert a file for a\n    format that
  has a pandoc writer but not a reader, it won't just\n    default to markdown.\n\n
  \ * Add viz. to abbreviations file (#5007, Nick Fleisher).\n\n  * AsciiDoc writer:
  \ always use single-line section headers,\n    instead of the old underline style
  (#5038).  Previously the single-line\n    style would be used if `--atx-headers`
  was specified, but\n    now it is always used.\n\n  * RST writer: Use simple tables
  when possible (#4750).\n\n  * CommonMark (and gfm) writer: Add plain text fallbacks.
  (#4528,\n    quasicomputational). Previously, the writer would unconditionally\n
  \   emit HTML output for subscripts, superscripts, strikeouts (if the\n    strikeout
  extension is disabled) and small caps, even with\n    `raw_html` disabled. Now there
  are plain-text (and, where\n    possible, fancy Unicode) fallbacks for all of these
  corresponding\n    (mostly) to the Markdown fallbacks, and the HTML output is only\n
  \   used when `raw_html` is enabled.\n\n  * Powerpoint writer: support raw openxml
  (Jesse Rosenthal, #4976).\n    This allows raw openxml blocks and inlines to be
  used in the pptx\n    writer. Caveats: (1) It's up to the user to write\n    well-formed
  openxml. The chances for corruption, especially with\n    such a brittle format
  as pptx, is high. (2) Because of\n    the tricky way that blocks map onto shapes,
  if you are using\n    a raw block, it should be the only block on a slide\n    (otherwise
  other text might end up overlapping it). (3) The\n    pptx ooxml namespace abbreviations
  are different from the\n    docx ooxml namespaces. Again, it's up to the user to
  get it\n    right. Unzipped document and ooxml specification should be\n    consulted.\n\n
  \ * With `--katex` in HTML formats, do not use the autorenderer (#4946).\n    We
  no longer surround formulas with `\\(..\\)` or `\\[..\\]`. Instead,\n    we tell
  katex to convert the contents of span elements with\n    class \"math\". Since math
  has already been identified, this\n    avoids wasted time parsing for LaTeX delimiters.
  Note, however,\n    that this may yield unexpected results if you have span elements\n
  \   with class \"math\" that don't contain LaTeX math.\n    Also, use latest version
  of KaTeX by default (0.9.0).\n\n  * The man writer now produces ASCII-only output,
  using groff escapes,\n    for portability.\n\n  * ODT writer:\n\n    + Add title,
  author and date to metadata; any remaining\n      metadata fields are added as `meta:user-defined`
  tags.\n    + Implement table caption numbering (#4949, Nils Carlson).\n      Captioned
  tables are numbered and labeled with format \"Table 1:\n      caption\", where \"Table\"
  is replaced by a translation, depending\n      on the value of `lang` in metadata.
  Uncaptioned tables are not\n      enumerated.\n    + OpenDocument writer: Implement
  figure numbering in captions (#4944,\n      Nils Carlson). Figure captions are now
  numbered 1, 2, 3, ...\n      The format in the caption is \"Figure 1: caption\"
  and so on\n      (where \"Figure\" is replaced by a translation, depending on the\n
  \     value of `lang` in the metadata). Captioned figures are numbered\n      consecutively
  and uncaptioned figures are not enumerated. This\n      is necessary in order for
  LibreOffice to generate an\n      Illustration Index (Table of Figures) for included
  figures.\n\n  * RST reader: Pass through fields in unknown directives as div attributes\n
  \   (#4715). Support `class` and `name` attributes for all directives.\n\n  * Org
  reader: Add partial support for `#+EXCLUDE_TAGS` option. (#4284,\n    Brian Leung).
  Headers with the corresponding tags should not\n    appear in the output.\n\n  *
  Log warnings about missing title attributes now include a\n    suggestion about
  how to fix the problem (#4909).\n\n  * Lua filter changes (Albert Krewinkel):\n\n
  \   + Report traceback when an error occurs. A proper Lua traceback is\n      added
  if either loading of a file or execution of a filter\n      function fails. This
  should be of help to authors of Lua filters\n      who need to debug their code.\n\n
  \   + Allow access to pandoc state (#5015). Lua filters and custom\n      writers
  now have read-only access to most fields of pandoc's\n      internal state via the
  global variable `PANDOC_STATE`.\n\n    + Push ListAttributes via constructor (Albert
  Krewinkel).\n      This ensures that ListAttributes, as present in OrderedList elements,\n
  \     have additional accessors (viz. `start`, `style`, and `delimiter`).\n\n    +
  Rename ReaderOptions fields, use snake_case. Snake case is used\n      in most variable
  names, using camelCase for these fields was an\n      oversight. A metatable is
  added to ensure that the old field\n      names remain functional.\n\n    + Iterate
  over AST element fields when using `pairs`. This makes\n      it possible to iterate
  over all ield names of an AST element by\n      using a generic `for` loop with
  pairs`:\n\n          for field_name, field_content in pairs(element) do\n          ...\n
  \         end\n\n      Raw table fields of AST elements should be considered an\n
  \     implementation detail and might change in the future. Accessing\n      element
  properties should always happen through the fields\n      listed in the Lua filter
  docs.\n\n      Note that the iterator currently excludes the `t`/`tag` field.\n\n
  \   + Ensure that MetaList elements behave like Lists. Methods usable\n      on
  Lists can also be used on MetaList objects.\n\n    + Fix MetaList constructor (Albert
  Krewinkel). Passing a MetaList\n      object to the constructor `pandoc.MetaList`
  now returns the\n      passed list as a MetaList. This is consistent with the\n
  \     constructor behavior when passed an (untagged) list.\n\n  * Custom writers:
  Custom writers have access to the global variable\n    `PANDOC_DOCUMENT`(Albert
  Krewinkel, #4957). The variable contains\n    a userdata wrapper around the full
  pandoc AST and exposes two\n    fields, `meta` and `blocks`. The field content is
  only\n    marshaled on-demand, performance of scripts not accessing the\n    fields
  remains unaffected.\n\n### API changes\n\n  * Text.Pandoc.Options: add `writerPreferAscii`
  to `WriterOptions`.\n\n  * Text.Pandoc.Shared:\n\n    + Export `splitSentences`.
  This was previously duplicated in the Man and\n      Ms writers.\n    + Add `ToString`
  typeclass (Alexander Krotov).\n\n  * New exported module Text.Pandoc.Filter (Albert
  Krewinkel).\n\n  * Text.Pandoc.Parsing\n\n    + Generalize `gridTableWith` to any
  `Char` Stream (Alexander Krotov).\n    + Generalize `readWithM` from `[Char]` to
  any `Char` Stream\n      that is a `ToString` instance (Alexander Krotov).\n\n  *
  New exposed module Text.Pandoc.Filter (Albert Krewinkel).\n\n  * Text.Pandoc.XML:
  add `toHtml5Entities`.\n\n  * New exported module Text.Pandoc.Readers.Man (Yan Pashkovsky,
  John\n    MacFarlane).\n\n  * Text.Pandoc.Writers.Shared\n\n    + Add exported functions
  `toSuperscript` and\n      `toSubscript` (quasicomputational, #4528).\n    + Remove
  exported functions `metaValueToInlines`,\n      `metaValueToString`. Add new exported
  functions\n      `lookupMetaBool`, `lookupMetaBlocks`, `lookupMetaInlines`,\n      `lookupMetaString`.
  Use these whenever possible for uniformity\n      in writers (Mauro Bieg, #4907).
  (Note that\n      removed function `metaValueToInlines` was in previous\n      released
  versions.)\n    + Add `metaValueToString`.\n\n  * Text.Pandoc.Lua\n\n    + Expose
  more useful internals (Albert Krewinkel):\n\n      - `runFilterFile` to run a Lua
  filter from file;\n      - data type `Global` and its constructors; and\n      -
  `setGlobals` to add globals to a Lua environment.\n\n      This module also contains
  `Pushable` and `Peekable` instances\n      required to get pandoc's data types to
  and from Lua. Low-level\n      Lua operation remain hidden in Text.Pandoc.Lua.\n\n
  \   + Rename `runPandocLua` to `runLua` (Albert Krewinkel).\n\n    + Remove `runLuaFilter`,
  merging this into Text.Pandoc.Filter.Lua's\n      `apply` (Albert Krewinkel).\n\n###
  Bug fixes and under-the-hood improvements\n\n  * Text.Pandoc.Parsing\n\n    + Make
  `uri` accept any stream with Char tokens (Alexander Krotov).\n    + Rewrite `uri`
  without `withRaw` (Alexander Krotov).\n    + Generalize `parseFromString` and `parseFromString'`
  to any\n      streams with Char token (Alexander Krotov)\n    + Rewrite `nonspaceChar`
  using `noneOf` (Alexander Krotov)\n\n  * Text.Pandoc.Shared: Reimplement `mapLeft`
  using `Bifunctor.first`\n    (Alexander Krotov).\n\n  * Text.Pandoc.Pretty: Simplify
  `Text.Pandoc.Pretty.offset`\n    (Alexander Krotov).\n\n  * Text.Pandoc.App\n\n
  \   + Work around HXT limitation for --syntax-definition with windows\n      drive
  (#4836).\n    + Always preserve tabs for man format. We need it for tables.\n    +
  Split command line parsing code into a separate unexported\n      module, Text.Pandoc.App.CommandLineOptions
  (Albert Krewinkel).\n\n  * Text.Pandoc.Readers.Roff: new unexported module for tokenizing\n
  \   roff documents.\n\n  * New unexported module Text.Pandoc.RoffChar, provided
  character\n    escape tables for roff formats.\n\n  * Text.Pandoc.Readers.HTML:
  Fix `htmlTag` and `isInlineTag` to\n    accept processing instructions (#3123, regression
  since 2.0).\n\n  * Text.Pandoc.Readers.JATS: Use `foldl'` instead of `maximum` to\n
  \   account for empty lists (Alexander Krotov).\n\n  * Text.Pandoc.Readers.RST:
  Don't allow single-dash separator in\n    headerless table (#4382).\n\n  * Text.Pandoc.Readers.Org:
  Parse empty argument array in inline src\n    blocks (Brian Leung).\n\n  * Text.Pandoc.Readers.Vimwiki:\n\n
  \   + Get rid of `F`, `runF` and `stateMeta'` in favor of `stateMeta`\n      (Alexander
  Krotov).\n    + Parse `Text` without converting to `[Char]` (Alexander Krotov).\n\n
  \ * Text.Pandoc.Readers.Creole: Parse `Text` without converting to\n    `[Char]`
  (Alexander Krotov).\n\n  * Text.Pandoc.Readers.LaTeX\n\n    + Allow space at end
  of math after `\\` (#5010).\n    + Add support for `nolinkurl` command (#4992, Brian
  Leung).\n    + Simplified type on `doMacros'`.\n    + Tokenize before pulling tokens,
  rather than after (#4408). This\n      has some performance penalty but is more
  reliable.\n    + Make macroDef polymorphic and allow in inline context.\n      Otherwise
  we can't parse something like `\\lowercase{\\def\\x{Foo}}`.\n     I have actually
  seen tex like this in the wild.\n    + Improved parsing of `\\def`, `\\let`. We
  now correctly parse:\n      ```\n      \\def\\bar{hello}\n      \\let\\fooi\\bar\n
  \     \\def\\fooii{\\bar}\n      \\fooi +\\fooii\n\n      \\def\\bar{goodbye}\n
  \     \\fooi +\\fooii\n      ```\n    + Improve parsing of `\\def` argspec.\n    +
  Skip `\\PackageError` commands (see #4408).\n    + Fix bugs omitting raw tex (#4527).
  The default is `-raw_tex`,\n      so no raw tex should result unless we explicitly
  say `+raw_tex`.\n      Previously some raw commands did make it through.\n    +
  Moved `isArgTok` to Text.Pandoc.Readers.LaTeX.Parsing.\n    + Moved `babelLangToBCP`,
  `polyglossiaLangToBCP` to new module,\n      Text.Pandoc.Readers.LaTeX.Lang (unexported).\n
  \   + Simplified accent code using unicode-transforms.\n      New dependency on
  unicode-transforms package for normalization.\n    + Allow verbatim blocks ending
  with blank lines (#4624).\n    + Support `breq` math environments: `dmath`, `dgroup`,
  `darray`.\n      This collects some of the general-purpose code from the LaTeX reader,\n
  \     with the aim of making the module smaller.\n\n  * Text.Pandoc.Readers.Markdown\n\n
  \   + Fix awkward soft break movements before abbreviations (#4635).\n    + Add
  updateStrPos in a couple places where needed.\n\n  * Text.Pandoc.Readers.Docx: Trigger
  bold/italic with bCs, iCs\n    (#4947). These are variants for \"complex scripts\"
  like Arabic\n    and are now treated just like b, i (bold, italic).\n\n  * Text.Pandoc.Readers.Muse
  (Alexander Krotov)\n\n    + Try to parse lists before trying to parse table.\n      This
  ensures that tables inside lists are parsed correctly.\n    + Forbid whitespace
  after opening and before closing markup\n      elements.\n    + Parse page breaks.\n
  \   + Simplify `museToPandocTable` to get rid of partial functions.\n    + Allow
  footnotes to start with empty line.\n    + Make sure that the whole text is parsed.\n
  \   + Allow empty headers. Previously empty headers caused parser to\n      terminate
  without parsing the rest of the document.\n    + Allow examples to be indented with
  tabs.\n    + Remove indentation from examples indicated by `{{{` and `}}}`.\n    +
  Fix parsing of empty cells.\n    + Various changes to internals.\n    + Rewrite
  some parsers in applicative style.\n    + Avoid tagsoup dependency.\n    + Allow
  table caption to contain `+`.\n\n  * Text.Pandoc.Writers.LaTeX\n\n    + Add newline
  if math ends in a comment (#4880). This prevents the\n      closing delimiter from
  being swalled up in the comment.\n    + With `--listings`, don't pass through org-babel
  attributes (#4889).\n    + With `--biblatex`, use `\\autocite` when possible (#4960).\n
  \     `\\autocites{a1}{a2}{a3}` will not collapse the entries. So, if\n      we
  don't have prefixes and suffixes, we use instead\n      `\\autocite{a1,a2,a3}`.\n
  \   + Fix description lists contining highlighted code (#4662).\n\n  * Text.Pandoc.Writers.Man\n\n
  \   + Don't wrap `.SH` and `.SS` lines (#5019).\n    + Avoid unnecessary `.RS`/`.RE`
  pair in definition lists with\n      one paragraph definitions.\n    + Moved common
  groff functions to Text.Pandoc.Writers.Groff.\n    * Fix strong/code combination
  on man (should be `\\f[CB]` not\n      `\\f[BC]`, see #4973).\n    + Man writer:
  use `\\f[R]` instead of `\\f[]` to reset font\n      (Alexander Krotov, #4973).\n
  \   + Move `splitSentences` to Text.Pandoc.Shared.\n\n  * Text.Pandoc.Writers.Docx\n\n
  \   + Add framework for custom properties (#3034). So far, we don't\n      actually
  write any custom properties, but we have the\n      infrastructure to add this.\n\n
  \   + Handle tables in table cells (#4953). Although this is not\n      documented
  in the spec, some versions of Word require a `w:p`\n      element inside every table
  cell. Thus, we add one when the\n      contents of a cell do not already include
  one (e.g. when a table\n      cell contains a table).\n\n  * Text.Pandoc.Writers.AsciiDoc:
  \ Prevent illegal nestings.\n    Adjust header levels so that n+1 level headers
  are only\n    found under n level headers, and the top level is 1.\n\n  * Text.Pandoc.Writers.OpenDocument:
  Improve bullet/numbering\n    alignment (#4385). This change eliminates the large
  gap we used\n    to have between bullet and text, and also ensures that numbers\n
  \   in numbered lists will be right-aligned.\n\n  * Text.Pandoc.Writers.ZimWiki\n\n
  \   + Number ordered list items sequentially, rather than always\n      with 1 (#4962).\n
  \   + Remove extra indentation on lists (#4963).\n\n  * Text.Pandoc.Writers.EPUB:
  Use metadata field `css` instead of\n    `stylesheet` (Mauro Bieg, #4990).\n\n  *
  Text.Pandoc.Writers.Markdown: Ensure blank between raw block and\n    normal content
  (#4629). Otherwise a raw block can prevent a\n    paragraph from being recognized
  as such.\n\n  * Text.Pandoc.Writers.Ms\n\n    + Removed old `escapeBar`. We don't
  need this now that we use\n      `@` for math delim.\n    + Moved common code to
  Text.Pandoc.Writers.Roff and to\n      Text.Pandoc.RoffChar.\n    + Move `splitSentences`
  to Text.Pandoc.Shared (to avoid duplication\n      with the man writer).\n\n   *
  Text.Pandoc.Writers.Muse (Alexander Krotov).\n\n    + Add support for grid tables.\n
  \   + Fix Muse writer style.\n    + Use `length` instead of `realLength` to calculate
  definition\n      indentation. Muse parsers don't take character width into\n      account
  when calculating indentation.\n    + Do not insert newline before lists.\n    +
  Use lightweight markup after `</em>` tag.\n\n  * New unexported module Text.Pandoc.Writers.Roff,
  providing functions\n    useful for all roff format writers (man, ms).\n\n  * Text.Pandoc.Lua\n\n
  \   + Move globals handling to separate module Text.Pandoc.Lua.Global\n      (Albert
  Krewinkel).\n\n    + Lua filter internals: push Shared.Element as userdata (Albert\n
  \     Krewinkel). Hierarchical Elements were pushed to Lua as plain\n      tables.
  This is simple, but has the disadvantage that marshaling\n      is eager: all child
  elements will be marshaled as part of the\n      object. Using a Lua userdata object
  instead allows lazy access\n      to fields, causing content marshaling just (but
  also each time)\n      when a field is accessed. Filters which do not traverse the
  full\n      element contents tree become faster as a result.\n\n### Default template
  changes\n\n  * LaTeX template:\n\n    + Add variable `hyperrefoptions` (#4925, Mathias
  Walter).\n    + Add variable `romanfont`, `romanfontoptions` (#4665, OvidiusCicero).\n\n
  \ * AsciiDoc template: use single-line style for title.\n\n  * revealjs template:
  Fix typo in the socket.io javascript plugin (#5006,\n    Yoan Blanc).\n\n  * Text.Pandoc.Lua.Util:
  add missing docstring to `defineHowTo`\n    (Albert Krewinkel).\n\n  * data/pandoc.lua:
  add datatype ListAttributes (Albert Krewinkel)\n\n  * data/sample.lua: replace custom
  pipe function with pandoc.utils.pipe\n    (Albert Krewinkel).\n\n### Documentation
  improvements\n\n  * INSTALL.md\n\n    + Add chromeos install instructions (#4958)
  (Evan Pratten).\n    + Add note about TinyTeX.\n\n  * MANUAL.txt\n\n    + Change
  `groff` -> `roff`.\n    + Implement `--ascii` for Markdown writer.\n    + Clarify
  LaTeX image dimensions output (Mauro Bieg).\n\n  * doc/customizing-pandoc.md: added
  skeleton (Mauro Bieg, #3288).\n\n  * doc/getting-started.md: Added title to test1.md
  to avoid warning.\n\n  * doc/lua-filters.md: merge type references into main document,\n
  \   fix description of Code.text (Albert Krewinkel).\n\n### Build infrastructure
  improvements\n\n  * Makefile\n\n    + Makefile: added quick-cabal, full-cabal targets.\n
  \   + Make .msi download targets insensitive to order of appveyor builds.\n\n  *
  Update benchmarks for ghc 8.6.1.\n\n   * pandoc.cabal:\n\n    + Enable more compiler
  warnings (Albert Krewinkel).\n    + Make base lower bound 4.8.\n    + Bump upper
  bound for QuickCheck.\n    + Bump upper bound for binary.\n    + Updated version
  bounds for containers and haddock-library (#4974).\n    + Added docx/docPropos/custom.xml
  to cabal data-files.\n    + Require skylighting 0.7.4 (#4920).\n    + New dependency
  on unicode-transforms package for normalization.\n\n  * Improved .travis.yml testing
  and test with GHC 8.6.1 (Albert Krewinkel).\n\n  * Added `tools/changelog-helper.sh`.\n\n
  \ * Added test/grofftest.sh for testing the man reader on real man pages.\n\n##
  pandoc 2.3.1 (2018-09-28)\n\n  * RST reader:\n\n    + Parse RST inlines containing
  newlines (#4912, Francesco Occhipinti).\n      This eliminates a regression introduced
  after pandoc 2.1.1, which\n      caused inline constructions containing newlines
  not to be recognized.\n    + Fix bug with internal link targets (#4919).  They were
  gobbling up\n      indented content underneath.\n\n  * Markdown reader: distinguish
  autolinks in the AST.  With this change,\n    autolinks are parsed as Links with
  the `uri` class. (The same is true\n    for bare links, if the `autolink_bare_uris`
  extension is enabled.)\n    Email autolinks are parsed as Links with the `email`
  class.  This\n    allows the distinction to be represented in the AST.\n\n  * Org
  reader:\n\n    + Force inline code blocks to honor export options (Brian Leung).\n
  \   + Parse empty argument array in inline src blocks (Brian Leung).\n\n  * Muse
  reader (Alexander Krotov):\n\n    + Added additional tests.\n    + Do not allow
  code markup to be followed by digit.\n    + Remove heading level limit.\n    + Simplify
  `<literal>` tag parsers\n    + Parse Text instead of String. Benchmark shows 7%
  improvement.\n    + Get rid of HTML parser dependency.\n    + Various code improvements.\n\n
  \ * ConTeXt writer: change `\\` to `/` in Windows image paths (#4918).\n    We do
  this in the LaTeX writer, and it avoids problems.\n    Note that `/` works as a
  LaTeX path separator on Windows.\n\n  * LaTeX writer:\n\n    + Add support for multiprenote
  and multipostnote arguments\n      with `--biblatex` (Brian Leung, #4930).  The
  multiprenotes occur before\n      the first prefix of a multicite, and the multipostnotes
  follow the\n      last suffix.\n    + Fix a use of `last` that might take empty
  list.  If you ran with\n      `--biblatex` and have an empty document (metadata
  but no blocks),\n      pandoc would previously raise an error because of the use
  of\n      `last` on an empty list.\n\n  * RTF writer: Fix build failure with ghc-8.6.1
  caused by missing\n    MonadFail instance (Jonas Scholl).\n\n  * ODT Writer: Improve
  table header row style handling (Nils Carlson).\n    This changes the way styles
  for cells in the header row\n    and normal rows are handled in ODT tables.\n    Previously
  a new (but identical) style was generated for\n    every table, specifying the style
  of the cells within the table.\n    After this change there are two style definitions
  for table cells,\n    one for the cells in the header row, one for all other cells.\n
  \   This doesn't change the actual styles, but makes post-processing\n    changes
  to the table styles much simpler as it is no longer\n    necessary to introduce
  new styles for header rows and there are\n    now only two styles where there was
  previously one per table.\n\n  * HTML writer:\n\n    + Don't add `uri` class to
  presumed autolinks.  Formerly the `uri`\n      class was added to autolinks by the
  HTML writer, but it had to\n      guess what was an autolink and could not distinguish\n
  \     `[http://example.com](http://example.com)` from\n      `<http://example.com>`.
  \ It also incorrectly recognized\n      `[pandoc](pandoc)` as an autolink.  Now
  the HTML writer\n      simply passes through the `uri` attribute if it is present,\n
  \     but does not add anything.\n    + Avoid adding extra section nestings for
  revealjs.\n      Previously revealjs title slides at level (slidelevel - 1)\n      were
  nested under an extra section element, even when\n      the section contained no
  additional (vertical) content.\n      That caused problems for some transition effects.\n
  \   + Omit unknown attributes in EPUB2 output.  For example,\n      `epub:type`
  attributes should not be passed through,\n      or the epub produced will not validate.\n\n
  \ * JATS writer: remove 'role' attribute on 'bold' and 'sc' elements (#4937).\n
  \   The JATS spec does not allow these.\n\n  * Textile writer: don't represent `uri`
  class explicitly\n    for autolinks (#4913).\n\n  * Lua filters (Albert Krewinkel):\n\n
  \   + Cleanup filter execution code.\n    + Better error on test failure.\n\n  *
  HTML, Muse reader tests: reduce time taken by round-trip test.\n\n  * Added cabal.project.\n\n
  \ * MANUAL: `epub:type` is only useful for epub3 (Maura Bieg).\n\n  * Use hslua
  v1.0.0 (Albert Krewinkel).\n\n  * Fix `translations/ru` to use modern Russian orthography\n
  \   (Ivan Trubach).\n\n  * Build Windows binary using ghc 8.6.1 and cabal new-build.
  This\n    fixes issues with segfaults in the 32-bit Windows binaries (#4283).\n\n##
  pandoc 2.3 (2018-09-16)\n\n  * Add `--metadata-file` option (Mauro Bieg, #1960),
  which allows\n    users to specify metadata in a YAML file, regardless of the\n
  \   input format (#1960).\n\n  * Text.Pandoc.Writers.Shared: export `isDisplayMath`
  (API change).\n\n  * Text.Pandoc.Readers.Markdown: export `yamlToMeta` (API change,\n
  \   Mauro Bieg).\n\n  * Text.Pandoc.Readers.LaTeX.Types:\n\n    + New type `ArgSpec`
  (API change).\n    + Second parameter of `Macro` constructor is now `[ArgSpec]`
  instead of\n      `Int` (API change).\n\n  * Markdown reader:\n\n    + Use `tex`
  instead of `latex` for raw tex-ish content. We can't\n      always tell if it's
  LaTeX, ConTeXt, or plain TeX. Better just to\n      use `tex` always. Note that
  if `context` or `latex` specifically\n      is desired, you can still force that
  in a markdown document by\n      using the raw attribute. Note that this change
  may affect some\n      filters, if they assume that raw tex parsed by the Markdown
  reader\n      will be RawBlock (Format `latex`). In most cases it should be\n      trivial
  to modify the filters to accept `tex` as well.\n    + Refactor and reorganize YAML
  code (Mauro Bieg).\n    + Make `example_lists` work for interrupted lists\n      without
  `startnum` (#4908).\n\n  * HTML reader:\n\n    + Parse `<script type=\"math/tex`
  tags as math (#4877).\n      These are used by MathJax in some configurations.\n
  \   + Extract spaces inside links instead of trimming them\n      (Alexander Krotov,
  #4845).\n    + Added round-trip tests (Alexander Krotov).\n    + Make parsing sensitive
  to the `raw_tex` extension (#1126). This now\n      allows raw LaTeX environments,
  `\\ref`, and `\\eqref` to be parsed\n      (which is helpful for translation HTML
  documents using MathJaX).\n\n  * Org reader (Albert Krewinkel):\n\n    + Respect
  export option `p` for planning info.  Inclusion of planning info\n      (`*DEADLINE*`,
  `*SCHEDULED*`, and `*CLOSED*`) can be controlled via the\n      `p` export option:
  setting the option to `t` will add all planning\n      information in a *Plain*
  block below the respective headline.\n    + Org reader internals: don't rely on
  RecordWildCards and ViewPatterns\n      ghc extensions.\n    + Strip planning info
  from output.  Planning info is parsed, but not\n      included in the output (as
  is the default with Emacs Org-mode, #4867).\n\n  * LaTeX reader:\n\n    + Handle
  parameter patterns for `\\def` (#4768, #4771).\n      For example:  `\\def\\foo#1[#2]{#1
  and #2}`.\n    + Allow `%` characters in URLs. This affects `\\href` and `\\url`
  (#4832).\n    + Fixed parsing of `\\texorpdfstring`. We were returning the wrong\n
  \     argument as the content.\n    + Support `blockcquote`, `foreignblockquote`,
  `foreigncblockquote`,\n      `hyphenblockquote`, `hyphencblockquote`, `enquote*`,
  `foreignquote`,\n      `hyphenquote` from `csquotes` (#4848). Note that `foreignquote`\n
  \     will be parsed as a regular Quoted inline (not using the quotes\n      appropriate
  to the foreign language).\n    + Support more text-mode accents (#4652). Add support
  for `\\|`, `\\b`, `\\G`,\n      `\\h`, `\\d`, `\\f`, `\\r`, `\\t`, `\\U`, `\\i`,
  `\\j`, `\\newtie`,\n      `\\textcircled`. Also fall back to combining characters
  when composed\n      characters are not available.\n    + Resolve `\\ref` for figure
  numbers.\n    + Support `mintinline` (#4365, Marc Schreiber).\n    + Fix siunitx
  unit commands so they are only recognized in\n      siunitx contexts (#4842). For
  example, `\\l` outside of an\n      siunitx context should be l-slash, not l (for
  liter).\n    + Fix double `unnumbered` class (#4838). The `unnumbered` class\n      was
  being included twice for starred sections.\n\n  * RST reader: Don't skip link definitions
  after comments (#4860).\n\n  * Muse reader (Alexander Krotov):\n\n    + Close the
  `</quote>` in indented tag test.\n      There is already a separate test for unclosed
  `</quote>`.\n    + Autonumber sections in the correct order.  Parsing now stops\n
  \     at each section header to ensure the header is registered before\n      parsing
  of the next section starts.\n    + Move duplicate code into `headingStart` function.\n
  \   + Allow newline after opening `*` or `**`.\n    + Don't allow digits after closing
  marker in lightweight markup\n      This change makes reader more compatible with
  Emacs Muse.\n    + Parse `<verse>` tag in one pass instead of using\n      `parseFromString`.
  This change makes it possible to have\n      verbatim `</verse>` tag inside verse.\n\n
  \ * ODT reader:  deal gracefully with missing `<office:font-face-decls/>`\n    (#4336).
  This allows pandoc to parse ODT document produced by KDE's\n    Calligra.\n\n  *
  Muse writer (Alexander Krotov):\n\n    + Output headers without asterisks if not
  on the top level.\n    + Never wrap definition list terms.\n    + Set `envInsideBlock
  = True` when rendering notes.\n    + Use `\"\"` instead of `[]` for empty String.\n
  \   + Check for whitespace in the beginning and end of Str's.\n    + Escape `-`,
  `;` and `>` in the beginning of strings.\n    + Escape list markers in the beginning
  of notes.\n    + Normalize inline list before testing if tags should be used.\n
  \   + Use tags instead of lightweight markup for empty strings.\n    + Use lightweight
  markup when possible.\n    + Escape empty strings.  This guarantees that `conditionalEscapeString`\n
  \     never returns empty string.\n    + Wrap conditionalEscapeString result into
  `Muse` type.\n      This removes the need to pass `envInsideLinkDescription` to
  it.\n    + Separate `shouldEscapeString` function.\n    + Simplify inline list rendering.\n
  \   + Replace newlines in strings with spaces.\n\n  * Docx writer:\n\n    + Add
  MetaString case for abstract, subtitle (#4900, Mauro Bieg).\n    + Properly handle
  display math in spans (#4826). This isn't a\n      complete solution, since other
  nestings of display math may still\n      cause problems, but it should work for
  what is by far the most\n      common case.\n\n  * HTML writer:\n\n    + Always
  output `<dt>` element, even if it is empty (#4883,\n      Alexander Krotov).\n    +
  Don't prefix `epub:` attributes with `data-`.\n\n  * Org writer: Don't escape literal
  `_`, `^` (#4882). Org doesn't\n    recognize these escapes.\n\n  * ODT writer: Fix
  percentage image scaling (#4881, Nils Carlson).\n    Image scaling was broken when
  a width was set to a percentage.\n\n  * EPUB writer: set `epub:type` on body element
  in each chapter,\n    depending on the `epub:type` of the first section (#4823).
  This\n    only affects epub3. See\n    http://www.idpf.org/epub/profiles/edu/structure/#h.l0bzsloklt10\n\n
  \ * FB2 writer: put `coverpage` element between title and date rather than in\n
  \   `document-info` element (#4854).\n\n  * Markdown writer: Escape `~` if strikeout
  extension enabled (#4840).\n\n  * Haddock writer: Use proper format for latex math
  in haddock (#4571, Joe\n    Hermaszewski). Inline math in `\\(..\\)`, display math
  in `\\[..\\]`,\n    tex is now used. Previously we'd \"fake it with unicode\" and
  fall\n    back to tex when that didn't work. But newer haddock versions\n    support
  latex math.\n\n  * TEI writer:\n\n    + Ensure that title element is always present,
  even if empty (#4839).\n    + Put author tags in the template, rather than adding
  them in\n      the writer (#4839).\n\n  * LaTeX writer/template: be sensitive to
  `filecolor` variable (#4822).\n    `linkcolor` only affects internal links, and
  `urlcolor` only\n    affects linked URLs.  For external links, the option to use
  is\n    `filecolor`.\n\n  * ConTeXt writer: output raw `tex` blocks as well as `context`
  (#969).\n\n  * RST writer:\n\n    + Use `.. raw:: latex` for `tex` content.\n    +
  Use `.. container` for generic Divs, instead of raw HTML.\n    + Render Divs with
  admonition classes as admonitions (#4833).\n      Also omit Div with class `admonition-title`.
  These are generated\n      by the RST reader and should be omitted on round-trip.\n\n
  \ * Text.Pandoc.PDF: fix message printed when rsvg-convert is not available\n    (#4855,
  Antonio Terceiro).\n\n  * HTML5 template: add the `title-block-header` identifier
  to the\n    `header` element, to make it easier to style precisely (#4767,\n    J.
  B. Rainsberger).\n\n  * OpenDocument template: Remove unnecessary indenting of TOC
  title (#4798,\n    Jos√© de Mattos Neto).\n\n  * latex template: Add support for
  $toc-title$ to LaTeX (and PDF)\n    (#4853, Wandmalfarbe).\n\n  * TEI template:
  improve `publicationStmt`. Add support for\n    `publisher`, `address`, `pubPlace`,
  and `date` variables.\n\n  * beamer template: Support \"toc-title\" (#4835, Cyril
  Roelandt).\n\n  * Text.Pandoc.Extensions: Fix haddock on `Ext_footnotes` (Chris
  Martin).\n\n  * Lua: cleanup Lua utils, remove unused functions (Albert Krewinkel).\n\n
  \ * MANUAL.txt:\n\n    + Clarify that `--biblatex/--natbib` don't work directly
  for PDF\n      (#4904).\n    + Document `epub:type` attribute (Mauro Bieg, #4901)\n
  \   + Clarify when `--resource-path` has an effect.\n    + More detail on customization
  in syntax highlighting section.\n    + Document encoding issue with `--listings`
  (#4871, Damien Clochard).\n    + Remove docs on removed `--katex-stylesheet` (Mauro
  Bieg, #4862).\n    + Use https for context wiki links (#4910).\n\n  * CONTRIBUTING.md:\n\n
  \   + Link to lua-filters repository (#4874).\n    + Fix mistake in REPL instructions
  for stack. (#4849, Brian Leung).\n\n  * lua-filters.md: add links to filters, and
  to lua-filters repository\n    (#4874).\n\n  * INSTALL.md:\n\n    + Indicate that
  cabal >= 2.0 is needed.\n    + Added chocolatey installation method (#4844, Miodrag
  Miliƒá).\n\n  * Travis: exclude round-trip tests, except for nightly test which can
  fail.\n\n  * Use latest texmath, pandoc-citeproc.\n\n  * Use a patched version of
  foundation until\n    https://github.com/haskell-foundation/foundation/pull/503\n
  \   is fixed.\n\n  * Clean up appveyor build and Windows package creation.\n    We
  now use 64-bit stack and ghc 8.4.3, lts-12 for the 64-bit build. The\n    WiX-based
  msi is now 64-bit for 64-bit builds (fixing #4795).\n\n  * Remove obsolete RELEASE-CHECKLIST.md.\n\n
  \ * Added additional compiler warnings in Makefile and CI builds.\n\n## pandoc 2.2.3.2
  (2018-08-07)\n\n  * Markdown reader: Properly handle boolean values in YAML metadata
  (#4819).\n    This fixes a regression in 2.2.3, which cause boolean values to\n
  \   be parsed as MetaInlines instead of MetaBool.\n\n    We here record another
  undocumented (but desirable) change in 2.2.3:\n    numerical metadata fields are
  now parsed as MetaInlines rather than\n    MetaString.\n\n## pandoc 2.2.3.1 (2018-08-06)\n\n
  \ * Markdown reader: Fix parsing of embedded mappings in YAML metadata\n    (#4817).
  \ This fixes a regression in 2.2.3 which caused embedded\n    mappings (e.g. mappings
  in sequences) not to work in YAML metadata.\n\n## pandoc 2.2.3 (2018-08-05)\n\n
  \ * RST reader: improve parsing of inline interpreted text roles (#4811).\n\n    +
  Use a Span with class \"title-reference\" for the default\n      title-reference
  role.\n    + Use `B.text` to split up contents into `Space`s, `SoftBreak`s,\n      and
  `Str`s for `title-reference`.\n    + Use Code with class \"interpreted-text\" instead
  of Span and Str for\n      unknown roles.  (The RST writer has also been modified
  to round-trip\n      this properly.)\n    + Disallow blank lines in interpreted
  text.\n    + Backslash-escape now works in interpreted text.\n    + Backticks followed
  by alphanumerics no longer end interpreted text.\n    + Remove support for nested
  inlines (Francesco Occhipinti).\n      RST does not allow nested emphasis, links,
  or other inline\n      constructs.  This fixes several bugs (#4581, #4561, #4792).\n\n
  \ * Org reader: fix parsers relying on `parseFromString` (#4784, Albert\n    Krewinkel).
  \ Emphasis was not parsed when it followed directly after\n    some block types
  (e.g., lists).\n\n  * Markdown reader: Allow unquoted numbers and booleans as YAML
  mapping\n    keys.  Previously in 2.2.2 you could not do\n    ```\n    ---\n    0:
  bar\n    ...\n    ```\n    but only\n    ```\n    ---\n    '0': bar\n    ...\n    ```\n
  \   With this change, both forms work.\n\n  * DocBook reader: metadata handling
  improvements.\n    Now we properly parse title and subtitle elements that are direct\n
  \   children of book and article (as well as children of bookinfo,\n    articleinfo,
  or info).  We also now use the `subtitle` metadata\n    field for subtitles, rather
  than tacking the subtitle on to the\n    title.\n\n  * RST writer:\n\n    + Allow
  images to be directly nested within links (#4810, Francesco\n      Occhipinti).\n
  \   + Use `titleblock` instead of `title` variable for title block (#4803,\n      Francesco
  Occhipinti).  `titleblock` contains a properly formatted\n      title and subtitle
  (using top-level headers).  `title` and\n      `subtitle` variables are still available
  and just contain the\n      title and subtitle text.  Note that this change will
  require an\n      update to custom rst templates.\n    + Render Code with class
  \"interpreted-text\" as interpreted text role.\n\n  * MediaWiki writer: Avoid extra
  blank line in tables with empty cells\n    (#4794).  Note that the old output is
  semantically identical, but the\n    new output looks better.\n\n  * Lua Utils module:
  add function `blocks_to_inlines` (#4799, Albert\n    Krewinkel).  Exposes a function
  converting which flattenes a list of\n    blocks into a list of inlines. An example
  use case would be the\n    conversion of Note elements into other inlines.\n\n  *
  RST template:  use `titleblock` instead of `title`.  Users of\n    custom RST templates
  will want to update this.\n\n  * LaTeX template: Moved some beamer code in default.latex
  template.\n    This change allows beamer themes to change the template and font
  (as\n    Metropolis does) (#4450).\n\n  * Better error message on `-t pdf -o out.pdf`
  (#1155, Mauro Bieg).\n\n  * Added test case for #4669 to repository.\n\n  * INSTALL.md:
  Fix broken link for cabal-install (#4806, ChanHoHo).\n\n  * MANUAL.txt:\n\n    +
  Add beamer info for slide backgrounds (#4802, John Muccigrosso).\n    + Clarify
  when `csquotes` is used in LaTeX writer (#4514).\n    + Add `commonmark` to list
  of output formats where `raw_tex` has an\n      effect (see #4527).\n\n\n## pandoc
  2.2.2.1 (2018-07-19)\n\n  * Fix regression finding templates in user data directory
  (#4777).\n    Under version 2.2.1 and prior pandoc found latex templates in the\n
  \   templates directory under the data directory, but this broke in 2.2.2.\n\n  *
  Fix for bug in parsing `\\input` in `rawLaTeXBlock` and\n    `rawLaTeXInline` (#4781).
  (This primarily affects the markdown\n    reader, and other readers that accept
  raw tex.)\n    Starting in 2.2.2, everything after an `\\input` (or `\\include`)\n
  \   in a markdown file would be parsed as raw LaTeX.\n\n  * MANUAL:\n\n    + Clarify
  `gfm` vs `markdown_github` (#4783, Mauro Bieg).\n    * Use `keywords` instead of
  `tags` in YAML metadata example (#4779).\n      Unlike `tags`, `keywords` is used
  in some of the writers\n      and default templates.\n\n  * Add missing `rollingLinks`
  option to revealjs template (#4778,\n    Igor Khorlo).\n\n## pandoc 2.2.2 (2018-07-16)\n\n
  \ * Use HsYAML instead of yaml for translations and YAML metadata (#4747).\n    yaml
  wraps a C library; HsYAML is pure Haskell.  Advances #4535.\n\n    Note: HsYAML
  implements YAML 1.2, in which the valid true\n    values are `true`, `True`, `TRUE`.
  \ This means a change in\n    the semantics of YAML metadata that could affect users:\n
  \   `y`, `yes`, and `on` no longer count as true values.\n\n  * Fix regression:
  make `--pdf-engine` work with full paths (#4681, Mauro\n    Bieg).\n\n  * CommonMark
  reader: Handle `ascii_identifiers` extension (#4742,\n    Anders Waldenborg).  Non-ascii
  characters were not stripped from\n    identifiers even if the `ascii_identifiers`
  extension was\n    enabled (which is is by default for gfm).\n\n  * TikiWiki reader:
  Improve list parsing (#4722, Mauro Bieg).\n    Remove trailing Space from list items.
  \ Parse lists that have no space\n    after marker.\n\n  * LaTeX reader:\n\n    +
  Treat `lilypond` as a verbatim environment (#4725).\n    + Parse figure label into
  Image id (#4700, Mauro Bieg).\n    + Beamer: Allow \"noframenumbering\" option (#4696,
  Raymond Ehlers).\n    + Allow spaces around `\\graphicspath` arguments (#4698).\n
  \   + Handle includes without surrounding blanklines (#4553).\n      In addition,
  `\\input` can now be used in an inline context,\n      e.g. to provide part of a
  paragraph, as it can in LaTeX.\n    + In `rawLaTeXBlock`, handle macros that resolve
  to a\n      `\\begin` or `\\end` (#4667).\n    + In `rawLaTeXBlock`, don't expand
  macros in macro definitions (#4653).\n      Note that this only affected LaTeX in
  markdown.\n    + Tighten up reading of beamer overlay specifications (#4669).\n
  \     Ideally we'd turn these on only when reading beamer, but currently\n      beamer
  is not distinguished from latex as an input format.\n      This commit also activates
  parsing of overlay specifications\n      after commands in general (e.g. `\\item`),
  since they can occur\n      in many contexts in beamer.\n    + Parse more siunitx
  unit commands (#4296, #4773).\n    + Be more forgiving in key/value option parsing
  (#4761).\n\n  * Markdown reader:\n\n    + Allow empty code spans, e.g. `` ` ` ``.\n
  \   + Emojis are now wrapped in Spans with class `emoji` and\n      attribute `data-emoji`
  (Anders Waldenborg, #4743).\n      This allows the writer to handle them in a special
  way\n      (e.g. using a special font, or just rendering the\n      emoji name).\n\n
  \ * Muse reader (Alexander Krotov, except where indicated):\n\n    + Get rid of
  non-exhaustive pattern match warning (Mauro Bieg).\n    + Add support for floating
  images.\n    + Add support for images with specified width.\n    + Parse image URLs
  without \"guard\" and \"takeExtension\".\n    + Split link and image parsing into
  separate functions.\n    + Parse links starting with \"URL:\" explicitly instead
  of trying to strip\n      \"URL:\" prefix after parsing.\n\n  * Texinfo writer:
  Use `@sup` and `@sub` instead of custom macros (#4728,\n    Alexander Krotov).\n\n
  \ * Markdown writer: Preserve `implicit_figures` with attributes, even if\n    `implicit_attributes`
  is not set, by rendering in raw HTML (#4677).\n\n  * Markdown and commonmark/github
  writers now respect the `emoji`\n    extension.  So, `-f markdown+emoji -t markdown+emoji`
  now leaves\n    `:smile:` as `:smile:` rather than converting it to a smile\n    character.\n\n
  \ * Docx writer: Be sensitive to `toc` in YAML metadata (#4645).\n\n  * ODT/OpenDocument
  writer: Make internal links work (#4358).\n    This adds proper bookmarks to the
  headers with non-null IDs.\n\n  * EPUB writer: Properly escape pagetitle.  Previously
  we weren't\n    escaping `&` and other XML characters in the pagetitle, so a title\n
  \   containing a `&` would be invalid.\n\n  * AsciiDoc Writer: Eescape square brackets
  at start of line (#4545,\n    Mauro Bieg).\n\n  * RST writer:\n\n    + Don't treat
  'example' as a syntax name (#4748).\n      This fixes conversions from org with
  example blocks.\n    + Support `--number-sections` via the `section-numbering`\n
  \     directive in standalone output.\n\n  * reveal.js writer and template: reuse
  mathjax URL\n    provided by the argument to `--mathjax` or the normal pandoc default,\n
  \   rather than a hard-coded one in the template (#4701).\n\n  * LaTeX writer:\n\n
  \   + Properly handle footnotes in table captions (#4683).\n      Refactored code
  from figure captions to use in both places.\n    + In beamer output, fix single
  digit column percentage (#4690, Mauro\n      Bieg).\n\n  * FB2 writer (Alexander
  Krotov):\n\n    + Convert Plain to Para in annotation (#2424).\n    + Fix order
  of items in title-info (#2424).\n\n  * Custom writer: fix error message on script
  failure (Albert Krewinkel).\n    Error messages produced by Lua were not displayed
  by Pandoc.\n\n  * Text.Pandoc.Emoji now exports `emojiToInline`, which returns a
  Span\n    inline containing the emoji character and some attributes with metadata\n
  \   (class `emoji`, attribute `data-emoji` with emoji name).  (API change,\n    Anders
  Waldenborg, #4743).\n\n  * Text.Pandoc.PDF:\n\n    + Revert fix for #4484 (only
  compress images on last run, #4755).\n      This will mean some increase in the
  time it takes to\n      produce an image-heavy PDF with xelatex, but it will\n      make
  tables of contents correct, which is more important.\n    + Fix logic error in `runTeXProgram`.
  \ We were running the tex program\n      one more time than requested.  This should
  speed up PDF production.\n\n  * Allow `--template` to take a URL as argument.\n\n
  \ * Text.Pandoc.Highlighting: Add missing re-export of `breezeDark`\n    highlighting
  style (#4687, Adrian Sieber, API change).\n\n  * Clarify macOS install in INSTALL.md
  (#4661).  Make the binary package\n    installer the recommended method, and note
  that on some older versions of\n    macOS, homebrew installs from source and takes
  a lot of disk space\n    (#4664, Ian).\n\n  * MANUAL:\n\n    + Clarify EPUB linked
  media (#4756, Mauro Bieg)\n    + Update manual for \"true\" YAML values.  Now that
  we're using HsYAML and\n      YAML 1.2, the valid true values are `true`, `True`,
  `TRUE`.  NOTE!\n      `y`, `yes`, `on` no longer count as true values.\n    + Document
  `-F` as alias for `--filter` (thanks to Gandalf Saxe).\n    + Update manual on how
  math is rendered in LaTeX.\n    + Add proxy description (#4131, Mauro Bieg).\n    +
  Clarify that `--toc` requires `--standalone` (#4703).\n    + Update citation styles
  link (#4699, wiefling).\n\n  * In API docs, clarify how `Ext_east_asian_line_breaks`
  extension works\n    (kaizshang91).  Note that it will not take effect when readers/writers\n
  \   are called as libraries (#4674).\n\n  * Improved translations/fr (#4766, lux-lth).\n\n
  \ * Removed inadvertently added `.orig` files from repository (#4648).\n\n  * Remove
  `network-uri` flag and use 'Network.Socket'.\n    This removes a compiler warning.
  \ There is no need for the old\n    `network-uri` flag, since network 2.6 was released
  in 2014.\n\n  * Add stack.lts10.yaml, stack.lts11.yaml.  use lts-12 in stack.yaml.\n\n
  \ * Bump upper bounds for dependent packages.\n\n  * Exclude foundation 0.0.21 for
  ghc 7.10.  Otherwise cabal gets\n    confused because of the way ghc 7.10 is excluded
  in foundation's\n    cabal file.  This can be removed when haskell-foundation/foundation#500\n
  \   is fixed.\n\n  * Require cabal-version >= 2.0.  This is needed for haddock-library.\n\n\n\n\n##
  pandoc 2.2.1 (2018-05-10)\n\n  * Restored and undeprecated gladtex for HTML math
  (#4607).\n\n    + Added `GladTeX` constructor to `Text.Pandoc.Options.HTMLMathMethod`\n
  \     [API change, reverts removal in v2.2]\n    + Restored and undeprecated `--gladtex`
  option, removed in v2.2.\n\n  * LaTeX reader:  Handle `$` in `/text{..}` inside
  math (#4576).\n\n  * Org reader: Fix image filename recognition (Albert Krewinkel).\n
  \   Use a function from the filepath library to check whether a string is a\n    valid
  file name.  The custom validity checker that was used before gave\n    wrong results
  (e.g. for absolute file paths on Windows,\n    kawabata/ox-pandoc#52).\n\n  * FB2
  reader: Replace some errors with warnings (Alexander Krotov).\n\n  * HTML writer:\n\n
  \   + Strip links from headers when creating TOC (#4340).\n      Otherwise the TOC
  entries will not link to the sections.\n    + Fix regression with tex math environments
  in HTML + MathJax (#4639).\n\n  * Muse writer (Alexander Krotov): Add support for
  left-align and\n    right-align classes (#4542).\n\n  * Docx writer: Support underline
  (#4633).\n\n  * Text.Pandoc.Parsing: Lookahead for non-whitespace after\n    `singleQuoteStart`
  and `doubleQuoteStart` (#4637).\n\n  * `test-pandoc-utils.lua`:  more robust testing
  on both windows\n    and \\*nix. Previously the pipe tests were only run if\n    `\\bin/false`
  and `/bin/sed` were present, which they aren't\n    in default MacOS and Windows
  systems.  Fixed by using `tr`\n    and `false`, which should always be in the path
  on a \\*nix\n    system, and `find` and `echo` for Windows.\n\n  * Text.Pandoc.Shared:
  add `uriPathToPath`.\n    This adjusts the path from a file: URI in a way that is
  sensitive\n    to Windows/Linux differences.  Thus, on Windows,\n    `/c:/foo` gets
  interpreted as `c:/foo`, but on Linux,\n    `/c:/foo` gets interpreted as `/c:/foo`.
  \ See #4613.\n\n  * Use `uriPathToPath` with file: URIs (#4613).\n\n  * Revert piping
  HTML to pdf-engine (Mauro Bieg, #4413).  Use a temp\n    file as before.\n\n  *
  Text.Pandoc.Class: Catch IO errors when writing media files\n    and issue a warning,
  rather than an error (Francesco Occhipinti, #4559).\n\n  * Don't lowercase custom
  writer filename (Alexander Krotov, #4610).\n\n  * MANUAL (Mauro Bieg):\n\n    +
  Clarify truthiness in template variables (#2281).\n    + Clarify pipe table width
  calculation (#4520).\n\n  * ConTeXt template: New Greek fallback typeface (Pablo
  Rodr√≠guez, #4405).\n    CMU Serif gives better typographic results than the previous\n
  \   Greek fallback DejaVu Serif.\n\n  * Make HTML template polyglot (#4606, OvidiusCicero),
  by making\n    `<link rel=\"stylesheet\" href=\"$css$\">` self-closing.\n\n  * Use
  texmath 0.11, allowing better translation of non-ASCII\n    characters in math (#4642).\n\n\n##
  pandoc 2.2 (2018-04-27)\n\n  * New input format: `fb2` (FictionBook2) (Alexander
  Krotov).\n\n  * Make `--ascii` work for all XML formats (ICML, OPML, JATS,...),\n
  \   and for `ms` and `man`.\n\n  * Remove deprecated `--latexmathml`, `--gladtex`,
  `--mimetex`, `--jsmath`, `-m`,\n    `--asciimathml` options.\n\n  * New module Text.Pandoc.Readers.FB2,
  exporting readFB2 (Alexander\n    Krotov, API change).\n\n  * Markdown reader:\n\n
  \   + Allow empty key-value attributes, like `title=\"\"` (#2944).\n    + Handle
  table w/o following blank line in fenced div (#4560).\n    + Remove \"fallback\"
  for `doubleQuote` parser.  Previously the\n      parser tried to be efficient --
  if no end double quote was found,\n      it would just return the contents.  But
  this could backfire in a\n      case `**this should \"be bold**`, since the fallback
  would return\n      the content `\"be bold**` and the closing boldface delimiter\n
  \     would never be encountered.\n    + Improve computation of the relative width
  of the last column in a\n      multiline table, so we can round-trip tables without
  constantly\n      shrinking the last column.\n\n  * EPUB reader:\n\n    + Fix images
  with space in file path (#4344).\n\n  * LaTeX reader:\n\n    + Properly resolve
  section numbers with `\\ref` and chapters (#4529).\n    + Parse sloppypar environment
  (#4517, Marc Schreiber).\n    + Improve handling of raw LaTeX (for markdown etc.)
  (#4589, #4594).\n      Previously there were some bugs in how macros were handled.\n
  \   + Support `\\MakeUppercase`, `\\MakeLowercase`, `\\uppercase`,\n      `\\lowercase`,
  and also `\\MakeTextUppercase` and\n      `\\MakeTextLowercase` from textcase (#4959).\n\n
  \ * Textile reader:\n\n    + Fixed tables with no body rows (#4513).\n      Previously
  these raised an exception.\n\n  * Mediawiki reader:\n\n    + Improve table parsing
  (#4508).  This fixes detection of table\n      attributes and also handles `!` characters
  in cells.\n\n  * DocBook reader:\n\n    + Properly handle title in `section` element
  (#4526).\n      Previously we just got `section_title` for `section` (though `sect1`,\n
  \     `sect2`, etc. were handled properly).\n    + Read tex math as output by asciidoctor
  (#4569, Joe Hermaszewski).\n\n  * Docx reader:\n\n    + Combine adjacent CodeBlocks
  with the same attributes into\n      a single CodeBlock.  This prevents a multiline
  codeblock in\n      Word from being read as different paragraphs.\n\n  * RST reader:\n\n
  \   + Allow < 3 spaces indent under directives (#4579).\n    + Fix anonymous redirects
  with backticks (#4598).\n\n  * Muse reader (Alexander Krotov):\n\n    + Add support
  for Text::Amuse multiline headings.\n    + Add `<math>` tag support.\n    + Add
  support for `<biblio>` and `<play>` tags.\n    + Allow links to have empty descriptions.\n
  \   + Require block `<literal>` tags to be on separate lines.\n    + Allow `-` in
  anchors.\n    + Allow verse to be indented.\n    + Allow nested footnotes.\n    +
  Internal improvements.\n\n  * Muse writer (Alexander Krotov):\n\n    + Escape `>`
  only at the beginning of a line.\n    + Escape `]` in image title.\n    + Escape
  `]` brackets in URLs as `%5D`.\n    + Only escape brackets when necessary.\n    +
  Escape ordered list markers.\n    + Do not escape list markers unless preceded by
  space.\n    + Escape strings starting with space.\n    + Escape semicolons and markers
  after line break.\n    + Escape `;` to avoid accidental comments.\n    + Don't break
  headers, line blocks and tables with line breaks.\n    + Correctly output empty
  headings.\n    + Escape horizontal rule only if at the beginning of the line.\n
  \   + Escape definition list terms starting with list markers.\n    + Place header
  IDs before header.\n    + Improve span writing.\n    + Do not join Spans in normalization.\n
  \   + Don't align ordered list items.\n    + Remove key-value pairs from attributes
  before normalization.\n    + Enable `--wrap=preserve` for all tests by default.\n
  \   + Reduced `<verbatim>` tags in output.\n    + Internal changes.\n\n  * RST writer:\n\n
  \   + Use more consistent indentation (#4563).  Previously we\n      used an odd
  mix of 3- and 4-space indentation.  Now we use 3-space\n      indentation, except
  for ordered lists, where indentation must\n      depend on the width of the list
  marker.\n    + Flatten nested inlines (#4368, Francesco Occhipinti).\n      Nested
  inlines are not valid RST syntax, so we flatten them following\n      some readability
  criteria discussed in #4368.\n\n  * EPUB writer:\n\n    + Ensure that `pagetitle`
  is always set, even when structured titles\n      are used.  This prevents spurious
  warnings about empty title\n      elements (#4486).\n\n  * FB2 writer (Alexander
  Krotov):\n\n    + Output links inline instead of producing notes.  Previously all
  links\n      were turned into footnotes with unclickable URLs inside.\n    + Allow
  emphasis and notes in titles.\n    + Don't intersperse paragraph with empty lines.\n
  \   + Convert metadata value `abstract` to book annotation.\n    + Use `<empty-line
  />` for `HorizontalRule` rather than `LineBreak`.\n      FB2 does not have a way
  to represent line breaks inside paragraphs;\n      previously we used `<empty-line
  />` elements, but these are not allowed\n      inside paragraphs.\n\n  * Powerpoint
  writer (Jesse Rosenthal):\n\n    + Handle Quoted Inlines (#4532).\n    + Simplify
  code with `ParseXml`.\n    + Allow fallback options when looking for placeholder
  type.\n    + Check reference-doc for all layouts.\n    + Simplify speaker notes
  logic.\n    + Change notes state to a simpler per-slide value.\n    + Remove `Maybe`
  from `SpeakerNotes` in `Slide`. `mempty`\n      means no speaker notes.\n    + Add
  tests for improved speaker notes.\n    + Handle speaker notes earlier in the conversion
  process.\n    + Keep notes with related blocks (#4477).  Some blocks automatically\n
  \     split slides (imgs, tables, `column` divs). We assume that any\n      speaker
  notes immediately following these are connected to these\n      elements, and keep
  them with the related blocks, splitting after them.\n    + Remove `docProps/thumbnail.jpeg`
  in data dir (Jesse Rosenthal, #4588).\n      It contained a nonfree ICC color calibration
  profile and is not needed\n      for production of a powerpoint document.\n\n  *
  Markdown writer:\n\n    + Include a blank line at the end of the row in a single-row
  multiline\n      table, to prevent it from being interpreted as a simple table (#4578).\n\n
  \ * CommonMark writer:\n\n    + Correctly ignore LaTeX raw blocks when `raw_tex`
  is not\n      enabled (#4527, quasicomputational).\n\n  * EPUB writer:\n\n    +
  Add `epub:type=\"footnotes\"` to notes section in EPUB3 (#4489).\n\n  * LaTeX writer:\n\n
  \   + In beamer, don't use format specifier for default ordered lists\n      (#4556).
  \ This gives better results for styles that put ordered list\n      markers in boxes
  or circles.\n    + Update `\\lstinline` delimiters (#4369, Tim Parenti).\n\n  *
  Ms writer:\n\n    + Use `\\f[R]` rather than `\\f[]` to reset font (#4552).\n    +
  Use `\\f[BI]` and `\\f[CB]` in headers, instead of `\\f[I]` and `\\f[C]`,\n      since
  the header font is automatically bold (#4552).\n    + Use `\\f[CB]` rather than
  `\\f[BC]` for monospace bold (#4552).\n    + Create pdf anchor for a Div with an
  identifier (#4515).\n    + Escape `/` character in anchor ids (#4515).\n    + Improve
  escaping for anchor ids: we now use _uNNN_ instead of uNNN\n      to avoid ambiguity.\n\n
  \ * Man writer:\n\n    + Don't escape U+2019 as `'` (#4550).\n\n  * Text.Pandoc.Options:\n\n
  \   + Removed `JsMath`, `LaTeXMathML`, and `GladTeX` constructors from\n    `Text.Pandoc.Options.HTMLMathMethod`
  [API change].\n\n  * Text.Pandoc.Class:\n\n    + `writeMedia`: unescape URI-escaping
  in file path.  This avoids\n      writing things like `file%20one.png` to the file
  system.\n\n  * Text.Pandoc.Parsing:\n\n    + Fix `romanNumeral` parser (#4480).
  \ We previously accepted 'DDC'\n      as 1100.\n    + `uri`: don't treat `*` characters
  at end as part of URI (#4561).\n\n  * Text.Pandoc.MIME:\n\n    + Use the alias `application/eps`
  for EPS (#2067).\n      This will ensure that we retain the eps extension after
  reading the\n      image into a mediabag and writing it again.\n\n  * Text.Pandoc.PDF:\n\n
  \   + Use `withTempDir` in `html2pdf`.\n    + With `xelatex`, don't compress images
  til the last run (#4484).\n      This saves time for image-heavy documents.\n    +
  Don't try to convert EPS files (#2067).  `pdflatex` converts them\n      itself,
  and JuicyPixels can't do it.\n    + For `pdflatex`, use a temp directory in the
  working directory.\n      Otherwise we can have problems with the EPS conversion
  pdflatex\n      tries to do, which can't operate on a file above the working\n      directory
  without `--shell-escape`.\n\n  * Changes to tests to accommodate changes in pandoc-types.\n
  \   In <https://github.com/jgm/pandoc-types/pull/36> we changed\n    the table builder
  to pad cells.  This commit changes tests\n    (and two readers) to accord with this
  behavior.\n\n  * Set default extensions for `beamer` same as `latex`.\n\n  * LaTeX
  template:\n\n    + Add `beameroption` variable (#4359, √âtienne Bersac).\n    + Use
  `pgfpages` package; this is needed for notes on second\n      screen in beamer (√âtienne
  Bersac).\n    + Add `background-image` variable (#4601, John Muccigrosso).\n\n  *
  reveal.js template: Add `background-image` variable (#4600,\n    John Muccigrosso).\n\n
  \ * ms template: Fix date.  Previously `.ND` was used, but this only\n    works
  if you have a title page, which we don't.  Thanks to @teoric.\n\n  * Removed pragmas
  for unused extensions (#4506, Anabra).\n\n  * Fix bash completion for `--print-default-data-file`
  (#4549).\n    Previously this looked in the filesystem, even if pandoc\n    was
  compiled with `embed_data_files` (and sometimes it looked\n    in a nonexistent
  build directory).  Now the bash completion\n    script just includes a hard-coded
  list of data file names.\n\n  * MANUAL:\n\n    + Clarify template vs metadata variables
  (#4501, Mauro Bieg).\n    + Fix raw content example (#4479, Mauro Bieg).\n    +
  Specify that you use html for raw output in epub.\n    + Add examples for raw docx
  blocks (#4472, Tristan Stenner).\n      The documentation states that the target
  format name should match\n      the output format, which isn't the case for `docx`/`openxml`
  and\n      some others.\n    + Don't say that `empty_paragraphs` affects markdown
  output (#4540).\n    + Consolidate input/output format documentation (#4577, Mauro
  Bieg).\n\n  * New README template. Take in/out formats from manual.\n\n  * Fix example
  in lua-filters docs (#4459, HeirOfNorton).\n\n  * Use the `-threaded` GHC flag when
  building benchmarks (#4587,\n    Francesco Occhipinti).\n\n  * Bump temporary upper
  bound to 1.4.\n\n  * Use pandoc-citeproc 0.14.3.1.\n\n  * Use texmath-0.10.1.2 (fixes
  escapes in math in ms, #4597).\n\n  * Removed old lib directory.  This was used
  for something long ago,\n    but plays no role now.\n\n  * Removed unneeded data
  file `LaTeXMathML.js`.\n\n  * Create 64- and 32-bit versions of Windows binary packages.\n\n##
  pandoc 2.1.3 (2018-03-18)\n\n  * Docx reader (Jesse Rosenthal):\n\n    + Add tests
  for nested smart tags.\n    + Parse nested smart tags.\n    + Make unwrapSDT into
  a general `unwrap` function that can unwrap both\n      nested SDT tags and smartTags.
  This makes the SmartTags constructor in\n      the Docx type unnecessary, so we
  remove it (#4446).\n    + Remove unused `docxWarnings` (Alexander Krotov).\n\n  *
  RST reader: Allow unicode bullet characters (#4454).\n\n  * Haddock reader:  Better
  table handling, using haddock-library's\n    new table support, if compiled against
  a version that\n    includes it.  Note that tables with col/rowspans will not\n
  \   translate well into Pandoc.\n\n  * Muse reader (Alexander Krotov):\n\n    +
  Various internal improvements.\n    + Require closing tag to have the same indentation
  as opening.\n    + Do not reparse blocks inside unclosed block tag (#4425).\n    +
  Parse `<class>` tag (supported by Emacs Muse).\n    + Do not produce empty Str element
  for unindented verse lines.\n\n  * LaTeX reader:\n\n    + Add support to parse unit
  string of `\\SI` command (closes #4296,\n      Marc Schreiber).\n\n  * Haddock writer:
  \ In the writer, we now render tables always as\n    grid tables, since Haddock
  supports these.\n\n  * DokuWiki writer: rewrite backSlashLineBreaks (#4445, Mauro
  Bieg).\n\n  * Docx writer: Fixed formatting of `DefaultStyle` ordered lists in\n
  \   docx writer.  We want decimal for the top level, not lower roman.\n\n  * RST
  writer:\n\n    + Strip whitespace at beginning and ending of inline containers\n
  \     (#4327, Francesco Occhipinti).\n    + Filter out empty inline containers (#4434).
  \ There is nothing in\n      RST that corresponds to e.g. `Emph []`, so we just
  ignore elements\n      like this (Francesco Occhipinti).\n\n  * Muse writer (Alexander
  Krotov):\n\n    + Support spans with anchors.\n    + Replace smallcaps with emphasis
  before normalization.\n    + Output smallcaps as emphasis.\n    + Expand Cite before
  list normalization.\n    + Write empty inline lists as `<verbatim></verbatim>`.\n
  \   + Remove empty Str from the beginning of inline lists during normalization.\n
  \   + Escape \"-\" to avoid creating bullet lists.\n    + Fix math expansion for
  more than one expression per paragraph.\n    + Expand math before inline list normalization.\n\n
  \ * Dokuwiki writer: fix LineBreaks in Tables (#4313, Mauro Bieg).\n\n  * Ms writer:\n\n
  \   + Asciify pdf anchors, since unicode anchors don't work (#4436).\n      Internal
  links should be converted automatically, so this shouldn't\n      affect users directly.\n
  \   + Don't escape hyphens as `\\-`; that's for a minus sign (#4467).\n\n  * Beamer
  writer: put hyperlink after `\\begin{frame}` and not in the title\n    (#4307).
  \ If it's in the title, then we get a titlebar on slides with\n    the `plain` attribute,
  when the id is non-null.  This fixes a regression\n    in 2.0.\n\n  * EPUB writer:
  Remove notes from TOC in nav.xhtml (#4453, Mauro Bieg).\n\n  * JATS writer: Remove
  extraneous, significant whitespace (#4335,\n    Nokome Bentley).\n\n  * html2pdf:
  inject base tag with current working directory (#4413, Mauro\n    Bieg).  This helps
  ensure that linked resources are included.\n\n  * Add Semigroup instances for everything
  for which we defined a\n    Monoid instance previously (API change):\n\n    + Text.Pandoc.Class.FileTree.\n
  \   + Text.Pandoc.Translations.Translations.\n    + Text.Pandoc.Extensions.Extensions.\n
  \   + Text.Pandoc.Readers.Odt.StyleReader.Styles.\n    + Text.Pandoc.Pretty.Doc.\n
  \   + Text.Pandoc.MediaBag.MediaBag.\n\n  * Add custom Prelude to give clean code
  for Monoid and Semigroup\n    that works with ghc 7.10-8.4.  The custom Prelude
  (`prelude/Prelude`)\n    is used for ghc versions < 8.4.  `NoImplicitPrelude` is
  used\n    in all source files, and Prelude is explicitly imported\n    (this is
  necessary for ghci to work properly with the custom prelude).\n\n  * Text.Pandoc.Writers.Shared
  (Francesco Occhipinti):\n\n    + Export `stripLeadingTrailingSpace`.\n    + Don't
  wrap lines in grid tables when `--wrap=none` (#4320).\n    + `gridTable`: Don't
  wrap lines in tables when `--wrap=none`.  Instead,\n      expand cells, even if
  it results in cells that don't respect relative\n      widths or surpass page column
  width.  This change affects RST,\n      Markdown, and Haddock writers.\n\n  * Raise
  error if someone tries to print docx, odt, etc. template (#4441).\n\n  * LaTeX template:
  Provide `bidi` package's option using\n    `\\PassOptionsToPackage`  (#4357, V√°clav
  Haisman).  This avoid a\n    clash when   `polyglossia` loads it first and then
  it is loaded again\n    for XeLaTeX.\n\n  * ConTeXt template: Added `pdfa` variable
  to generate PDF/A (#4294, Henri\n    Menke).  Instructions on how to install the
  ICC profiles on ConTeXt\n    standalone can be found in the wiki:\n    <http://wiki.contextgarden.net/PDFX#ICC_profiles>.\n
  \   If the ICC profiles are not available the log will contain error\n    messages.\n\n
  \ * Use latest pandoc-types, skylighting\n\n  * Use latest pandoc-citeproc in binary
  package.\n\n  * Bump upper bound for time, criterion, haddock-library, exceptions,\n
  \   http-types, aeson, haddock-library.\n\n  * Bump upper bound tasty-quickcheck
  0.10 (#4429, Felix Yan).\n\n  * pandoc.cabal:  fix up other-extensions and language
  fields.\n    Language is now consistently `Haskell2010`, and other-extensions\n
  \   is consistently `NoImplicitPrelude`. Everything else to be specified\n    in
  the module header as needed.\n\n  * Removed `old-locale` flag and Text.Pandoc.Compat.Time.\n
  \   This is no longer necessary since we no longer support ghc 7.8.\n\n  * Make
  `weigh-pandoc` into a benchmark program.\n    Remove `weigh-pandoc` flag.  `weigh-pandoc`
  is now built (and run)\n    automatically when you build (and run) benchmarks.\n\n
  \ * MANUAL: add instructions for background images reveal.js (#4325, John\n    Muccigrosso).\n\n
  \ * appveyor: use VS 2013 environment instead of VS 2015 for Windows builds.\n\n##
  pandoc 2.1.2 (2018-03-02)\n\n  * Markdown reader:\n\n    + Fix parsing bug with
  nested fenced divs (#4281).  Previously we allowed\n      \"nonindent spaces\" before
  the opening and closing `:::`, but this\n      interfered with list parsing, so
  now we require the fences to be flush with\n      the margin of the containing block.\n\n
  \ * Commonmark reader:\n\n    + `raw_html` is now on by default.  It can be disabled
  explicitly\n      using `-f commonmark-raw_html`.\n\n  * Org reader (Albert Krewinkel):\n\n
  \   + Move citation tests to separate module.\n    + Allow changing emphasis syntax
  (#4378).  The characters allowed before\n      and after emphasis can be configured
  via `#+pandoc-emphasis-pre` and\n      `#+pandoc-emphasis-post`, respectively. This
  allows to change which\n      strings are recognized as emphasized text on a per-document
  or even\n      per-paragraph basis.  Example:\n\n          #+pandoc-emphasis-pre:
  \"-\\t ('\\\"{\"\n          #+pandoc-emphasis-post: \"-\\t\\n .,:!?;'\\\")}[\"\n\n
  \ * LaTeX reader:\n\n    + Fixed comments inside citations (#4374).\n    + Fix regression
  in package options including underscore (#4424).\n    + Make `--trace` work.\n    +
  Fixed parsing of `tabular*` environment (#4279).\n\n  * RST reader:\n\n    + Fix
  regression in parsing of headers with trailing space (#4280).\n\n  * Muse reader
  (Alexander Krotov):\n\n    + Enable `<literal>` tags even if amuse extension is
  enabled.\n      Amusewiki disables <literal> tags for security reasons.\n      If
  user wants similar behavior in pandoc, RawBlocks and RawInlines\n      can be removed
  or replaced with filters.\n    + Remove space prefix from `<literal>` tag contents.\n
  \   + Do not consume whitespace while looking for closing end tag.\n    + Convert
  alphabetical list markers to decimal in round-trip test.\n      Alphabetical lists
  are an addition of Text::Amuse.\n      They are not present in Emacs Muse and can
  be ambiguous\n      when list starts with \"i.\", \"c.\" etc.\n    + Allow `<quote>`
  and other tags to be indented.\n    + Allow single colon in definition list term.\n
  \   + Fix parsing of verse in lists.\n    + Improved parsing efficiency.  Avoid
  `parseFromString`.\n      Lists are parsed in linear instead of exponential time
  now.\n    + Replace ParserState with MuseState.\n    + Prioritize lists with roman
  numerals over alphabetical lists.\n      This is to make sure \"i.\" starts a roman
  numbered list,\n      instead of a list with letter \"i\" (followed by \"j\", \"k\",
  ...\").\n    + Fix directive parsing.\n    + Parse definition lists with multiple
  descriptions.\n    + Parse next list item before parsing more item contents.\n    +
  Fixed a bug: headers did not terminate lists.\n    + Move indentation parsing from
  `definitionListItem` to `definitionList`.\n    + Paragraph indentation does not
  indicate nested quote.\n      Muse allows indentation to indicate quotation or alignment,\n
  \     but only on the top level, not within a <quote> or list.\n    + Require that
  block tags are on separate lines.\n      Text::Amuse already explicitly requires
  it anyway.\n    + Fix matching of closing inline tags.\n    + Various internal changes.\n
  \   + Fix parsing of nested definition lists.\n    + Require only one space for
  nested definition list indentation.\n    + Do not remove trailing whitespace from
  `<code>`.\n    + Fix parsing of trailing whitespace.  Newline after whitespace now\n
  \     results in softbreak instead of space.\n\n  * Docx reader (Jesse Rosenthal,
  except where noted):\n\n    + Handle nested sdt tags (#4415).\n    + Don't look
  up dependant run styles if `+styles` is enabled.\n    + Move pandoc inline styling
  inside custom-style span.\n    + Read custom styles (#1843).  This will read all
  paragraph and\n      character classes as divs and spans, respectively. Dependent
  styles\n      will still be resolved, but will be wrapped with appropriate style\n
  \     tags. It is controlled by the `+styles` extension (`-f docx+styles`).\n      This
  can be used in conjunction with the `custom-style` feature in the\n      docx writer
  for a pandoc-docx editing workflow. Users can convert from\n      an input docx,
  reading the custom-styles, and then use that same input\n      docx file as a reference-doc
  for producing an output docx file. Styles\n      will be maintained across the conversion,
  even if pandoc doesn't\n      understand them.\n    + Small change to Fields hyperlink
  parser.  Previously, unquoted string\n      required a space at the end of the line
  (and consumed it). Now we\n      either take a space (and don't consume it), or
  end of input.\n    + Pick table width from the longest row or header (Francesco
  Occhipinti,\n      #4360).\n\n  * Muse writer (Alexander Krotov):\n\n    + Change
  verse markup: `> ` instead of `<verse>` tag.\n    + Remove empty strings during
  inline normalization.\n    + Don't indent nested definition lists.\n    + Use unicode
  quotes for quoted text.\n    + Write image width specified in percent in Text::Amuse
  mode.\n    + Don't wrap displayMath into `<verse>`.\n    + Escape nonbreaking space
  (`~~`).\n    + Join code with different attributes during normalization.\n    +
  Indent lists inside Div.\n    + Support definitions with multiple descriptions.\n\n
  \ * Powerpoint writer (Jesse Rosenthal):\n\n    + Use table styles This will use
  the default table style in the\n      reference-doc file. As a result they will
  be easier when using\n      in a template, and match the color scheme.\n    + Remove
  empty slides.  Because of the way that slides were split, these\n      could be
  accidentally produced by comments after images.  When animations\n      are added,
  there will be a way to add an empty slide with either\n      incremental lists or
  pauses.\n    + Implement syntax highlighting.  Note that background colors can't\n
  \     be implemented in PowerPoint, so highlighting styles that require\n      these
  will be incomplete.\n    + New test framework for pptx.  We now compare the output
  of the\n      Powerpoint writer with files that we know to (a) not be corrupt,\n
  \     and (b) to show the desired output behavior (details below).\n    + Add `notesMaster`
  to `presentation.xml` if necessary.\n    + Ignore links and (end)notes in speaker
  notes.\n    + Output speaker notes.\n    + Read speaker note templates conditionally.
  \ If there are speaker\n      notes in the presentation, we read in the notesMasters
  templates\n      from the reference pptx file.\n    + Fix deletion track changes
  (#4303, Jesse Rosenthal).\n\n  * Markdown writer: properly escape @ to avoid capture
  as citation\n    (#4366).\n\n  * LaTeX writer:\n\n    + Put hypertarget inside figure
  environment (#4388).\n      This works around a problem with the endfloat package
  and\n      makes pandoc's output compatible with it.\n    + Fix image height with
  percentage (#4389).  This previously caused\n      the image to be resized to a
  percentage of textwidth, rather than\n      textheight.\n\n  * ConTeXt writer (Henri
  Menke):\n\n    + New section syntax and support `--section-divs` (#2609).\n      `\\section[my-header]{My
  Header}` ->\n      `\\section[title={My Header},reference={my-header}]`.\n      The
  ConTeXt writer now supports the `--section-divs` option to\n      write sections
  in the fenced style, with `\\startsection` and\n      `\\stopsection`.\n    + xtables:
  correct wrong usage of caption (Henri Menke).\n\n  * Docx writer:\n\n    + Fix image
  resizing with multiple images (#3930, Andrew Pritchard).\n    + Use new golden framework
  (Jesse Rosenthal).\n    + Make more deterministic to facilitate testing (Jesse Rosenthal).\n
  \     - `getUniqueId` now calls to the state to get an incremented digit,\n        instead
  of calling to P.uniqueHash.\n      - we always start the PRNG in mkNumbering/mkAbstractNum
  with the same\n        seed (1848), so our randoms should be the same each time.\n
  \   + Fix ids in comment writing (Jesse Rosenthal).  Comments from\n      `--track-changes=all`
  were producing corrupt docx, because the\n      writer was trying to get id from
  the `(ID,_,_)` field of\n      the attributes, and ignoring the \"id\" entry in
  the key-value pairs. We\n      now check both.\n\n  * Ms writer: Added papersize
  variable.\n\n  * TEI writer:\n\n    + Use `height` instead of `depth` for images
  (#4331).\n    + Ensure that id prefix is always used.\n    + Don't emit `role` attribute;
  that was a leftover from the\n      Docbook writer.\n    + Use 'xml:id', not 'id'
  attribute (#4371).\n\n  * AsciiDoc writer:\n\n    + Do not output implicit heading
  IDs (#4363, Alexander\n      Krotov).  Convert to `asciidoc-auto_identifiers` for
  old behaviour.\n\n  * RST writer:\n\n    + Remove `blockToRST'` moving its logic
  into `fixBlocks`\n      (Francesco Occhipinti).\n    + Insert comment between lists
  and quotes (#4248, Francesco Occchipinti).\n\n  * RST template: remove definition
  of 'math' role as raw.\n    This used to be needed prior to v 0.8 of docutils, but\n
  \   now math support is built-in.\n\n  * Slides: Use divs to set incremental/non-incremental
  (#4381,\n    Jesse Rosenthal).  The old method (list inside blockquote) still\n
  \   works, but we are encouraging the use of divs with class\n    `incremental`
  or `nonincremental`.\n\n  * Text.Pandoc.ImageSize:\n\n    + Make image size detection
  for PDFs more robust (#4322).\n    + Determine image size for PDFs (#4322).\n    +
  EMF Image size support (#4375, Andrew Pritchard).\n\n  * Text.Pandoc.Extensions:\n\n
  \   + Add `Ext_styles` (Jesse Rosenthal, API change).  This will be used in\n      the
  docx reader (defaulting to off) to read pargraph and character\n      styles not
  understood by pandoc (as divs and spans, respectively).\n    + Made `Ext_raw_html`
  default for `commonmark` format.\n\n  * Text.Pandoc.Parsing:\n\n    + Export `manyUntil`
  (Alexander Krotov, API change).\n    + Export improved `sepBy1` (Alexander Krotov).\n
  \   + Export list marker parsers: `upperRoman`, `lowerRoman`,\n      `decimal`,
  `lowerAlpha`, `upperAlpha` (Alexander Krotov, API change).\n\n  * Tests/Lua: fix
  tests on windows (Albert Krewinkel).\n\n  * Lua: register script name in global
  variable (#4393).  The name of the Lua\n    script which is executed is made available
  in the global Lua variable\n    `PANDOC_SCRIPT_FILE`, both for Lua filters and custom
  writers.\n\n  * Tests: Abstract powerpoint tests out to OOXML tests (Jesse Rosenthal).\n
  \   There is very little pptx-specific in these tests, so we abstract out\n    the
  basic testing function so it can be used for docx as well. This\n    should allow
  us to catch some errors in the docx writer that slipped\n    by the roundtrip testing.\n\n
  \ * Lua filters: store constructors in registry (Albert Krewinkel).  Lua\n    functions
  used to construct AST element values are stored in the Lua\n    registry for quicker
  access. Getting a value from the registry is much\n    faster than getting a global
  value (partly to idiosyncrasies of hslua);\n    this change results in a considerable
  performance boost.\n\n  * Documentation:\n\n    + `doc/org.md` Add draft of Org-mode
  documentation (Albert Krewinkel).\n    + `doc/lua-filters.md`: document global vars
  set for filters\n      (Albert Krewinkel).\n    + INSTALL.md: mention Stack version.
  (#4343, Adam Brandizzi).\n    + MANUAL: add documentation on custom styles (Jesse
  Rosenthal).\n    + MANUAL.txt: Document incremental and nonincremental divs (Jesse\n
  \     Rosenthal).  Blockquoted lists are still described, but fenced divs are\n
  \     presented in preference.\n    + MANUAL.txt: document header and footer variables
  (newmana).\n    + MANUAL.txt: self-contained implies standalone (#4304, Daniel Lublin).\n
  \   + CONTRIBUTING.md: label was renamed. (#4310, Alexander Brandizzi).\n\n  * Require
  tagsoup 0.14.3 (#4282), fixing HTML tokenization bug.\n\n  * Use latest texmath.\n\n
  \ * Use latest pandoc-citeproc.\n\n  * Allow exceptions 0.9.\n\n  * Require aeson-pretty
  0.8.5 (#4394).\n\n  * Bump blaze-markup, blaze-html lower bounds to 0.8, 0.9 (#4334).\n\n
  \ * Update tagsoup to 0.14.6 (Alexander Krotov, #4282).\n\n  * Removed ghc-prof-options.
  \ As of cabal 1.24, sensible defaults are used.\n\n  * Update default.nix to current
  nixpkgs-unstable for hslua-0.9.5 (#4348,\n    jarlg).\n\n## pandoc 2.1.1 (2018-01-18)\n\n
  \ * Markdown reader:\n\n    + Don't coalesce adjacent raw LaTeX blocks if they are
  separated by a\n      blank line.  See lierdakil/pandoc-crossref#160.\n    + Improved
  `inlinesInBalancedBrackets` (#4272, jgm/pandoc-citeproc#315).\n      The change
  both improves performance and fixes a regression whereby\n      normal citations
  inside inline notes and figure captions were not\n      parsed correctly.\n\n  *
  RST reader:\n\n    + Better handling for headers with an anchor (#4240).  Instead
  of creating a\n      Div containing the header, we put the id directly on the header.\n
  \     This way header promotion will work properly.\n    + Add aligned environment
  when needed in math (#4254).  `rst2latex.py`\n      uses an `align*` environment
  for math in `.. math::` blocks, so this\n      math may contain line breaks.  If
  it does, we put the math in an\n      `aligned` environment to simulate `rst2latex.py`'s
  behavior.\n\n  * HTML reader:\n\n    + Fix col width parsing for percentages < 10%
  (#4262, n3fariox).\n\n  * LaTeX reader:\n\n    + Advance source position at end
  of stream.\n    + Pass through macro defs in `rawLaTeXBlock` even if the `latex_macros`\n
  \     extension is set (#4246).  This reverts to earlier behavior and is\n      probably
  safer on the whole, since some macros only modify things in\n      included packages,
  which pandoc's macro expansion can't modify.\n    + Fixed pos calculation in tokenizing
  escaped space.\n    + Allow macro definitions inside macros (#4253).  Previously
  we went into\n      an infinite loop with\n      ```\n      \\newcommand{\\noop}[1]{#1}\n
  \     \\noop{\\newcommand{\\foo}[1]{#1}}\n      \\foo{hi}\n      ```\n    + Fix
  inconsistent column widths (#4238).  This fixes a bug whereby column\n      widths
  for the body were different from widths for the header in some\n      tables.\n\n
  \ * Docx reader (Jesse Rosenthal):\n\n    + Parse hyperlinks in `instrText` tags
  (#3389, #4266).  This was a form of\n      hyperlink found in older versions of
  word. The changes introduced for\n      this, though, create a framework for parsing
  further fields in MS Word\n      (see the spec, ECMA-376-1:2016, ¬ß17.16.5, for more
  on these fields).\n      We introduce a new module, `Text.Pandoc.Readers.Docx.Fields`
  which\n      contains a simple parsec parser. At the moment, only simple hyperlink\n
  \     fields are accepted, but that can be extended in the future.\n\n  * Muse reader
  (Alexander Krotov):\n\n    + Parse `~~` as non-breaking space in Text::Amuse mode.\n
  \   + Refactor list parsing.\n\n  * Powerpoint writer (Jesse Rosenthal):\n\n    +
  Change reference to `notesSlide` to `endNotesSlide`.\n    + Move image sizing into
  `picProps`.\n    + Improve table placement.\n    + Make our own `_rels/.rels` file.\n
  \   + Import reference-doc images properly.\n    + Move `Presentation.hs` out of
  `PandocMonad`.\n    + Refactor into separate modules.  T.P.W.Powerpoint.Presentation\n
  \     defines the Presentation datatype and goes Pandoc->Presentation;\n      T.P.W.Pandoc.Output
  goes Presentation->Archive.\n      Text.Pandoc.Writers.Powerpoint a thin wrapper
  around the two modules.\n    + Avoid overlapping blocks in column output.\n    +
  Position images correctly in two-column layout.\n    + Make content shape retrieval
  environment-aware.\n    + Improve image handling.  We now determine image and caption
  placement\n      by getting the dimensions of the content box in a given layout.\n
  \     This allows for images to be correctly sized and positioned in a\n      different
  template.  Note that images without captions and headers are\n      no longer full-screened.
  We can't do this dependably in different\n      layouts, because we don't know where
  the header is (it could be to\n      the side of the content, for example).\n    +
  Read presentation size from reference file.  Our presentation size is\n      now
  dependent on the reference/template file we use.\n    + Handle (sub)headers above
  slidelevel correctly.  Above the slidelevel,\n      subheaders will be printed in
  bold and given a bit of extra space\n      before them. Note that at the moment,
  no distinction is made between\n      levels of headers above the slide header,
  though that can be changed.\n    + Check for required files.  Since we now import
  from reference/dist\n      file by glob, we need to make sure that we're getting
  the files we\n      need to make a non-corrupt Powerpoint. This performs that check.\n
  \   + Improve templating using `--reference-doc`.  Templating should work\n      much
  more reliably now.\n    + Include Notes slide in TOC.\n    + Set notes slide header
  to slide-level.\n    + Add table of contents.  This is triggered by the `--toc`
  flag. Note\n      that in a long slide deck this risks overrunning the text box.
  The user\n      can address this by setting `--toc-depth=1`.\n    + Set notes slide
  number correctly.\n    + Clean up adding metadata slide.  We want to count the slide
  numbers\n      correctly if it's in there.\n    + Add anchor links.  For anchor-type
  links (`[foo](#bar)`) we produce\n      an anchor link. In powerpoint these are
  links to slides, so we keep\n      track of a map relating anchors to the slides
  they occur on.\n    + Make the slide number available to the blocks.  For anchors,\n
  \     block-processing functions need to know what slide number\n      they're in.
  We make the `envCurSlideId` available to blocks.\n    + Move `curSlideId` to environment.\n
  \   + Allow setting `toc-title` in metadata.\n    + Link notes to endnotes slide.\n\n
  \ * Markdown writer:\n\n    + Fix cell width calculation (#4265).  Previously we
  could get\n      ever-lengthening cell widths when a table was run repeatedly through\n
  \     `pandoc -f markdown -t markdown`.\n\n  * LaTeX writer:\n\n    + Escape `&`
  in lstinline (Robert Sch√ºtz).\n\n  * ConTeXt writer:\n\n    + Use xtables instead
  of Tables (#4223, Henri Menke).\n      Default to xtables for context output.  Natural
  Tables are used\n      if the new `ntb` extension is set.\n\n  * HTML writer:\n\n
  \    + Fixed footnote backlinks with `--id-prefix` (#4235).\n\n  * `Text.Pandoc.Extensions`:
  \ Added `Ext_ntb` constructor (API change,\n    Henri Menke).\n\n  * `Text.Pandoc.ImageSize`:
  add derived `Eq` instance to `Dimension`\n    (Jesse Rosenthal, API change).\n\n
  \ * Lua filters (Albert Krewinkel):\n\n    + Make `PANDOC_READER_OPTIONS` available.\n
  \     The options which were used to read the document are made available to\n      Lua
  filters via the `PANDOC_READER_OPTIONS` global.\n    + Add lua module `pandoc.utils.run_json_filter`,
  which runs a JSON filter\n      on a Pandoc document.\n    + Refactor filter-handling
  code into `Text.Pandoc.Filter.JSON`,\n      `Text.Pandoc.Filter.Lua`, and `Text.Pandoc.Filter.Path`.\n
  \   + Improve error messages.  Provide more context about the task\n      which
  caused an error.\n\n  * data/pandoc.lua (Albert Krewinkel):\n\n    + Accept singleton
  inline as a list.  Every constructor which accepts a\n      list of inlines now
  also accepts a single inline element for\n      convenience.\n    + Accept single
  block as singleton list. Every constructor which accepts\n      a list of blocks
  now also accepts a single block element for\n      convenience.  Furthermore, strings
  are accepted as shorthand for\n      `{pandoc.Str \"text\"}` in constructors.\n
  \   + Add attr, listAttributes accessors.  Elements with\n      attributes got an
  additional `attr` accessor. Attributes were\n      accessible only via the `identifier`,
  `classes`, and `attributes`,\n      which was in conflict with the documentation,
  which indirectly states\n      that such elements have the an `attr` property.\n
  \   + Drop `_VERSION`.  Having a `_VERSION` became superfluous, as this\n      module
  is closely tied to the pandoc version, which is available via\n      `PANDOC_VERSION`.\n
  \   + Fix access to Attr components.  Accessing an Attr value (e.g.,\n      ` Attr().classes`)
  was broken; the more common case of accessing it via\n      an Inline or Block element
  was unaffected by this.\n\n  * Move `metaValueToInlines` to from Docx writer to\n
  \   `Text.Pandoc.Writers.Shared`, so it can be used by other writers\n    (Jesse
  Rosenthal).\n\n  * MANUAL.txt:\n\n    + Clarify otherlangs in LaTeX (#4072).\n    +
  Clarify `latex_macros` extension.\n    + Recommend use of `raw_attribute` extension
  in header includes (#4253).\n\n  * Allow latest QuickCheck, tasty, criterion.\n\n
  \ * Remove custom prelude and ghc 7.8 support.\n\n  * Reduce compiler noise (exact
  paths for compiled modules).\n\n## pandoc 2.1 (2018-01-07)\n\n  * Allow filters
  and lua filters to be interspersed (#4196).  Previously\n    we ran all lua filters
  before JSON filters.  Now we run filters in\n    the order they are presented on
  the command line, whether lua or JSON.\n    There are two incompatible API changes:
  The type of `applyFilters`\n    has changed, and `applyLuaFilters` has been removed.
  \ `Filter` is\n    also now exported.\n\n  * Use latest skylighting and omit the
  `missingIncludes` check, fixing\n    a major performance regression in earlier releases
  of the 2.x series\n    (#4226).  Behavior change: If you use a custom syntax definition
  that\n    refers to a syntax you haven't loaded, pandoc will now complain when\n
  \   it is highlighting the text, rather than doing a check at the start.\n    This
  change dramatically speeds up invocations of pandoc on short\n    inputs.\n\n  *
  Text.Pandoc.Class: make `FileTree` opaque (don't export\n    `FileTree` constructor).
  \ This forces users to interact with it using\n    `insertInFileTree` and `getFileInfo`,
  which normalize file names.\n\n  * Markdown reader:\n\n    + Rewrite `inlinesInBalancedBrackets`.
  \ The rewrite is much more\n      direct, avoiding `parseFromString`.  And it performs
  significantly\n      better; unfortunately, parsing time still increases exponentially\n
  \     (see #1735).\n    + Avoid parsing raw tex unless `\\` + letter seen.  This
  seems to\n      help with the performance problem, #4216.\n\n  * LaTeX reader: Simplified
  a check for raw tex command.\n\n  * Muse reader (Alexander Krotov):\n\n    + Enable
  round trip test (#4107).\n    + Automatically translate `#cover` into `#cover-image`.\n
  \     Amusewiki uses #cover directive to specify cover image.\n\n  * Docx reader
  (Jesse Rosenthal):\n\n    + Allow for insertion/deletion of paragraphs (#3927).\n
  \     If the paragraph has a deleted or inserted paragraph break (depending\n      on
  the track-changes setting) we hold onto it until the next\n      paragraph. This
  takes care of accept and reject. For this we introduce\n      a new state which
  holds the ils from the previous para if necessary.\n      For `--track-changes=all`,
  we add an empty span with class\n      `paragraph-insertion`/`paragraph-deletion`
  at the end of the paragraph\n      prior to the break to be inserted or deleted.\n
  \   + Remove unused anchors (#3679).  Docx produces a lot of anchors with\n      nothing
  pointing to them---we now remove these to produce cleaner\n      output. Note that
  this has to occur at the end of the process\n      because it has to follow link/anchor
  rewriting.\n    + Read multiple children of `w:sdtContents`.\n    + Combine adjacent
  anchors.  There isn't any reason to have numerous\n      anchors in the same place,
  since we can't maintain docx's\n      non-nesting overlapping. So we reduce to a
  single anchor.\n    + Improved tests.\n\n  * Muse writer (Alexander Krotov): don't
  escape URIs from AST\n\n  * Docx writer:\n\n    + Removed redundant subtitle in
  title (Sebastian Talmon).\n    + `firstRow` table definition compatibility for Word
  2016 (Sebastian\n      Talmon).  Word 2016 seems to use a default value of \"1\"
  for table\n      headers, if there is no firstRow definition (although a default\n
  \     value of 0 is documented), so all tables get the first Row formatted\n      as
  header.  Setting the parameter to 0 if the table has no header\n      row fixes
  this for Word 2016\n    + Fix custom styles with spaces in the name (#3290).\n\n
  \ * Powerpoint writer (Jesse Rosenthal):\n\n    + Ignore Notes div for parity with
  other slide outputs.\n    + Set default slidelevel correctly.  We had previously
  defaulted to\n      slideLevel 2. Now we use the correct behavior of defaulting
  to the\n      highest level header followed by content. We change an expected test\n
  \     result to match this behavior.\n    + Split blocks correctly for linked images.\n
  \   + Combine adjacent runs.\n    + Make inline code inherit code size.  Previously
  (a) the code size\n      wasn't set when we force size, and (b) the properties was
  set from\n      the default, instead of inheriting.\n    + Simplify `replaceNamedChildren`
  function.\n    + Allow linked images.  The following markdown:\n      `[![Image
  Title](image.jpg)](http://www.example.com)`\n      will now produce a linked image
  in the resulting PowerPoint file.\n    + Fix error with empty table cell.  We require
  an empty `<a:p>` tag,\n      even if the cell contains no paragraphs---otherwise
  PowerPoint\n      complains of corruption.\n    + Implement two-column slides.  This
  uses the columns/column div\n      format described in the pandoc manual. At the
  moment, only two\n      columns (half the screen each) are allowed. Custom widths
  are not\n      supported.\n    + Added more tests.\n\n  * OpenDocument/ODT writers:
  improved rendering of formulas (#4170, oltolm).\n\n  * Lua filters (Albert Krewinkel):\n\n
  \   + `data/pandoc.lua`: drop 'pandoc-api-version' from Pandoc objects\n    + The
  current pandoc-types version is made available to Lua programs in\n      the global
  `PANDOC_API_VERSION`. It contains the version as a list of\n      numbers.\n    +
  The pandoc version available as a global `PANDOC_VERSION` (a list\n      of numbers).\n
  \   + `data/pandoc.lua`: make `Attr` an `AstElement`.\n    + `data/pandoc.lua`:
  make all types subtypes of `AstElement`.\n      `Pandoc`, `Meta`, and `Citation`
  were just plain functions and did\n      not set a metatable on the returned value,
  which made it difficult\n      to amend objects of these types with new behavior.
  They are now\n      subtypes of AstElement, meaning that all their objects can gain\n
  \     new features when a method is added to the behavior object\n      (e.g., `pandoc.Pandoc.behavior`).\n
  \   + `data/pandoc.lua`: split type and behavior tables.  Clearly distinguish\n
  \     between a type and the behavioral properties of an instance of that\n      type.
  The behavior of a type (and all its subtypes) can now be\n      amended by adding
  methods to that types `behavior` object, without\n      exposing the type objects
  internals.  E.g.:\n      ```lua\n      pandoc.Inline.behavior.frob = function ()
  print'42' end\n      local str = pandoc.Str'hello'\n      str.frob() -- outputs
  '42'\n      ```\n    + `data/pandoc.lua`: fix Element inheritance.  Extending all
  elements\n      of a given type (e.g., all inline elements) was difficult, as the\n
  \     table used to lookup unknown methods would be reset every time a\n      new
  element of that type was created, preventing recursive property\n      lookup. This
  is was changed in that all methods and attributes of\n      supertypes are now available
  to their subtypes.\n    + `data/pandoc.lua`: fix attribute names of Citation (#4222).
  \ The\n      fields were named like the Haskell fields, not like the documented,\n
  \     shorter version.  The names are changed to match the documentation\n      and
  Citations are given a shared metatable to enable simple\n      extensibility.\n
  \   + `data/pandoc.lua`: drop function `pandoc.global_filter`.\n    + Bump `hslua`
  version to 0.9.5.  This version fixes a bug that made it\n      difficult to handle
  failures while getting lists or a Map from Lua.\n      A bug in pandoc, which made
  it necessary to always pass a tag when\n      using MetaList or MetaBlock, is fixed
  as a result. Using the pandoc\n      module's constructor functions for these values
  is now optional\n      (if still recommended).\n    + Stop exporting `pushPandocModule`
  (API change).  The introduction\n      of `runPandocLua` renders direct use of this
  function obsolete.\n    + Update generation of module docs for lua filters.\n    +
  `Lua.Module.Utils`: make stringify work on `MetaValues` (John\n      MacFarlane).
  \ I'm sure this was intended in the first place,\n      but currently only `Meta`
  is supported.\n\n  * Improve benchmarks.\n\n    + Set the default extensions properly.\n
  \   + Improve benchmark argument parsing.  You can now say\n      `make bench BENCHARGS=\"markdown
  latex reader\"` and both the\n      markdown and latex readers will be benchmarked.\n\n
  \ * MANUAL.txt simplify and add more structure (Mauro Bieg).\n\n  * Generate README.md
  from template and MANUAL.txt.\n    `make README.md` will generate the README.md
  after changes\n    to MANUAL.txt have been made.\n\n  * Update copyright notices
  to include 2018 (Albert Krewinkel).\n\n## pandoc 2.0.6 (2017-12-28)\n\n  * Added
  `jats` as an input format.\n\n    + Add Text.Pandoc.Readers.JATS, exporting `readJATS`
  (API\n      change) (Hamish Mackenzie).\n    + Improved citation handling in JATS
  reader.  JATS citations\n      are now converted to pandoc citations, and JATS ref-lists\n
  \     are converted into a `references` field in metadata, suitable\n      for use
  with pandoc-citeproc. Thus a JATS article with embedded\n      bibliographic information
  can be processed with pandoc and\n      pandoc-citeproc to produce a formatted bibliography.\n\n
  \ * Allow `--list-extensions` to take an optional FORMAT argument.\n    This lists
  the extensions set by default for the selected FORMAT.\n    The extensions are now
  alphabetized, and the `+` or `-`\n    indicating the default setting comes before,
  rather than after,\n    the extension.\n\n  * Markdown reader:\n\n    + Preserve
  original whitespace between blocks.\n    + Recognize `\\placeformula` as context.\n
  \   + Be pickier about table captions.  A caption starts with a `:` which\n      can't
  be followed by punctuation.  Otherwise we can falsely interpret\n      the start
  of a fenced div, or even a table header line like\n      `:--:|:--:`, as a caption.\n
  \   + Always use four space rule for example lists.  It would be awkward\n      to
  indent example list contents to the first non-space character after\n      the label,
  since example list labels are often long.  Thanks to\n      Bernhard Fisseni for
  the suggestion.\n    + Improve raw tex parsing.  Note that the Markdown reader is
  also\n      affected by the `latex_macros` extension changes described below\n      under
  the LaTeX reader.\n\n  * LaTeX reader:\n\n    + `latex_macros` extension changes
  (#4179).  Don't pass through macro\n      definitions themselves when `latex_macros`
  is set.  The macros\n      have already been applied.  If `latex_macros` is enabled,
  then\n      `rawLaTeXBlock` in Text.Pandoc.Readers.LaTeX will succeed in parsing\n
  \     a macro definition, and will update pandoc's internal macro map\n      accordingly,
  but the empty string will be returned.\n    + Export `tokenize`, `untokenize` (API
  change).\n    + Use `applyMacros` in `rawLaTeXBlock`, `rawLaTeXInline`.\n    + Refactored
  `inlineCommand`.\n    + Fix bug in tokenizer.  Material following `^^` was\n      dropped
  if it wasn't a character escape.  This only affected\n      invalid LaTeX, so we
  didn't see it in the wild, but it appeared\n      in a QuickCheck test failure.\n
  \   + Fix regression in LateX tokenization (#4159).  This mainly affects the\n      Markdown
  reader when parsing raw LaTeX with escaped spaces.\n    + Add tests of LaTeX tokenizer.\n
  \   + Support `\\foreignlanguage` from babel.\n    + Be more tolerant of `&` character
  (#4208).  This allows us to parse\n      unknown tabular environments as raw LaTeX.\n\n
  \ * Muse reader (Alexander Krotov):\n\n    + Parse anchors immediately after headings
  as IDs.\n    + Require that note references does not start with 0.\n    + Parse
  empty comments correctly.\n\n  * Org reader (Albert Krewinkel):\n\n    + Fix asterisks-related
  parsing error (#4180).\n    + Support minlevel option for includes (#4154).  The
  level of headers\n      in included files can be shifted to a higher level by specifying
  a\n      minimum header level via the `:minlevel` parameter. E.g.\n      `#+include:
  \"tour.org\" :minlevel 1` will shift the headers in\n      tour.org such that the
  topmost headers become level 1 headers.\n    + Break-up org reader test file into
  multiple modules.\n\n  * OPML reader:\n\n    + Enable raw HTML and other extensions
  by default for notes\n      (#4164).  This fixes a regression in 2.0.  Note that
  extensions can\n      now be individually disabled, e.g.  `-f opml-smart-raw_html`.\n\n
  \ * RST reader:\n\n    + Allow empty list items (#4193).\n    + More accurate parsing
  of references (#4156).  Previously we erroneously\n      included the enclosing
  backticks in a reference ID (#4156).  This\n      change also disables interpretation
  of syntax inside references, as\n      in docutils.  So, there is no emphasis in
  `` `my *link*`_ ``.\n\n  * Docx reader:\n\n    + Continue lists after interruption
  (#4025, Jesse Rosenthal).\n      Docx expects that lists will continue where they
  left off after an\n      interruption and introduces a new id if a list is starting
  again. So\n      we keep track of the state of lists and use them to define a \"start\"\n
  \     attribute, if necessary.\n    + Add tests for structured document tags unwrapping
  (Jesse Rosenthal).\n    + Preprocess Document body to unwrap `w:sdt` elements (Jesse
  Rosenthal,\n      #4190).\n\n  * Plain writer:\n\n    + Don't linkify table of contents.\n\n
  \ * RST writer:\n\n    + Fix anchors for headers (#4188).  We were missing an `_`.\n\n
  \ * PowerPoint writer (Jesse Rosenthal):\n\n    + Treat lists inside BlockQuotes
  as lists.  We don't yet produce\n      incremental lists in PowerPoint, but we should
  at least treat lists\n      inside BlockQuotes as lists, for compatibility with
  other slide formats.\n    + Add ability to force size.  This replaces the more specific\n
  \     `blockQuote runProp`, which only affected the size of blockquotes. We\n      can
  use this for notes, etc.\n    + Implement notes.  This currently prints all notes
  on a final slide.\n      Note that at the moment, there is a danger of text overflowing
  the\n      note slide, since there is no logic for adding further slides.\n    +
  Implement basic definition list functionality to PowerPoint writer.\n    + Don't
  look for default template file for Powerpoint (#4181).\n    + Add pptx to isTextFormat
  list.  This is used to check standalone\n      and not writing to the terminal.\n
  \   + Obey slide level option (Jesse Rosenthal).\n    + Introduce tests.\n\n  *
  Docx writer:\n\n    + Ensure that `distArchive` is the one that comes with pandoc\n
  \     (#4182).  Previously a `reference.docx` in `~/.pandoc` (or the user data\n
  \     dir) would be used instead, and this could cause problems because a\n      user-modified
  docx sometimes lacks vital sections that we count\n      on the `distArchive` to
  supply.\n\n  * Org writer:\n\n    + Do not wrap \"-\" to avoid accidental bullet
  lists (Alexander Krotov).\n    + Don't allow fn refs to wrap to beginning of line
  (#4171, with help from\n      Alexander Krotov).  Otherwise they can be interpreted
  as footnote\n      definitions.\n\n  * Muse writer (Alexander Krotov):\n\n    +
  Don't wrap note references to the next line (#4172).\n\n  * HTML writer:\n\n    +
  Use br elements in line blocks instead of relying on CSS\n      (#4162).  HTML-based
  templates have had the custom CSS for\n      `div.line-block` removed.  Those maintaining
  custom templates will want\n      to remove this too.  We still enclose line blocks
  in a div with class\n      `line-block`.\n\n  * LaTeX writer:\n\n    + Use `\\renewcommand`
  for `\\textlatin` with babel (#4161).\n      This avoids a clash with a deprecated
  `\\textlatin` command defined\n      in Babel.\n    + Allow fragile=singleslide
  attribute in beamer slides (#4169).\n    + Use `\\endhead` after `\\toprule` in
  headerless tables (#4207).\n\n  * FB2 writer:\n\n    + Add cover image specified
  by `cover-image` meta (Alexander Krotov,\n      #4195).\n\n  * JATS writer (Hamish
  Mackenzie):\n\n    + Support writing `<fig>` and `<table-wrap>` elements\n      with
  `<title>` and `<caption>` inside them by using Divs with class set\n      to one
  of `fig`, `table-wrap` or `caption` (Hamish Mackenzie).  The\n      title is included
  as a Heading so the constraint on where Heading can\n      occur is also relaxed.\n
  \   + Leave out empty alt attributes on links.\n    + Deduplicate image mime type
  code.\n    + Make `<p>` optional in `<td>` and `<th>` (#4178).\n    + Self closing
  tags for empty xref (#4187).\n    + Improve support for code language.\n\n  * Custom
  writer:\n\n    + Use init file to setup Lua interpreter (Albert Krewinkel).\n      The
  same init file (`data/init`) that is used to setup the Lua\n      interpreter for
  Lua filters is also used to setup the interpreter of\n      custom writers.lua.\n
  \   + Define instances for newtype wrapper (Albert Krewinkel).  The custom\n      writer
  used its own `ToLuaStack` instance definitions, which made\n      it difficult to
  share code with Lua filters, as this could result\n      in conflicting instances.
  \ A `Stringify` wrapper is introduced to\n      avoid this problem.\n    + Added
  tests for custom writer.\n    + Fixed definition lists and tables in `data/sample.lua`.\n\n
  \ * Fixed regression: when target is PDF, writer extensions were being\n    ignored.
  \ So, for example, `pandoc -t latex-smart -o file.pdf`\n    did not work properly.\n\n
  \ * Lua modules (Albert Krewinkel):\n\n    + Add `pandoc.utils` module, to hold
  utility functions.\n    + Create a Haskell module Text.Pandoc.Lua.Module.Pandoc
  to\n      define the `pandoc` lua module.\n    + Make a Haskell module for each
  Lua module. Move definitions for the\n      `pandoc.mediabag` modules to a separate
  Haskell module.\n    + Move `sha1` from the main `pandoc` module to `pandoc.utils`.\n
  \   + Add function `pandoc.utils.hierarchicalize` (convert list of\n      Pandoc
  blocks into (hierarchical) list of Elements).\n    + Add function `pandoc.utils.normalize_date`
  (parses a date and\n      converts it (if possible) to \"YYYY-MM-DD\" format).\n
  \   + Add function `pandoc.utils.to_roman_numeral` (allows conversion\n      of
  numbers below 4000 into roman numerals).\n    + Add function `pandoc.utils.stringify`
  (converts any AST element\n      to a string with formatting removed).\n    + `data/init.lua`:
  load `pandoc.utils` by default\n    + Turn pipe, read into full Haskell functions.
  \ The `pipe` and `read`\n      utility functions are converted from hybrid lua/haskell
  functions\n      into full Haskell functions. This avoids the need for intermediate\n
  \     `_pipe`/`_read` helper functions, which have dropped.\n    + pandoc.lua: re-add
  missing MetaMap function.  This was a bug\n      introduced in version 2.0.4.\n\n
  \ * Text.Pandoc.Class: Add `insertInFileTree` [API change].  This gives\n    a pure
  way to insert an ersatz file into a `FileTree`.  In addition, we\n    normalize
  paths both on insertion and on lookup.\n\n  * Text.Pandoc.Shared: export `blocksToInlines'`
  (API change, Maura Bieg).\n\n  * Text.Pandoc.MIME: Add opus to MIME type table as
  audio/ogg (#4198).\n\n  * Text.Pandoc.Extensions:   Alphabetical order constructors
  for\n    `Extension`.  This makes them appear in order in `--list-extensions`.\n\n
  \ * Allow lenient decoding of latex error logs, which are not always\n    properly
  UTF8-encoded (#4200).\n\n  * Update latex template to work with recent versions
  of beamer.\n    The old template produced numbered sections with some recent\n    versions
  of beamer.  Thanks to Thomas Hodgson.\n\n  * Updated reference.docx (#4175).  Instead
  of just \"Hello, world\", the\n    document now contains exemplars of most of the
  styles that have an\n    effect on pandoc documents.  This makes it easier to see
  the effect\n    of style changes.\n\n  * Removed `default.theme` data file (#4096).
  \ It is no longer needed now\n    that we have `--print-highlight-style`.\n\n  *
  Added `stack.lts9.yaml` for building with lts 9 and ghc 8.0.2.\n    We still need
  this for the alpine static linux build, since\n    we don't have ghc 8.2.2 for that
  yet.\n\n  * Removed `stack.pkg.yaml`.  We only really need `stack.yaml`; we\n    can
  put flag settings for pandoc-citeproc there.\n\n  * Makefile: Add 'trypandoc' and
  'pandoc-templates' targets to\n    make releases easier.\n\n  * MANUAL.txt:\n\n
  \   + Add note on what formats have `+smart` by default.\n    + Use native syntax
  for custom-style (#4174, Mauro Bieg).\n    + Introduce dedicated Extensions section,
  since some extensions\n      affect formats other than markdown (Mauro Bieg, #4204).\n
  \   + Clarify default html output for `--section-divs` (Richard Edwards).\n\n  *
  filters.md: say that Text.Pandoc.JSON comes form pandoc-types.\n    Closes jgm/pandoc-website#16.\n\n
  \ * epub.md: Delete removed `-S` option from command (#4151, Georger Ara√∫jo).\n\n##
  pandoc 2.0.5 (2017-12-12)\n\n  * Fix a bug in 2.0.4, whereby pandoc could not read
  the theme files\n    generated with `--print-highlight-style` (#4133).  Improve
  JSON\n    serialization of styles.\n\n  * Fix CSS issues involving line numbers
  (#4128).\n    Highlighted code blocks are now enclosed in a div with class `sourceCode`.\n
  \   Highlighting CSS no longer sets a generic color for pre and code; we only\n
  \   set these for class `sourceCode`.\n\n  * `--pdf-engine-opt`: fix bug where option
  order was reversed (#4137).\n\n  * Add PowerPoint (pptx) writer (Jesse Rosenthal).\n
  \   It works following the standard Pandoc conventions for making other\n    sorts
  of slides. Caveats:\n\n    + Syntax highlighting is not yet implemented. (This is
  difficult\n      because there are no character classes in Powerpoint.)\n    + Footnotes
  and Definition lists are not yet implemented. (Notes will\n      usually take the
  form of a final slide.\n    + Image placement and auto-resizing has a few glitches.\n
  \   + Reference powerpoint files don't work dependably from the command\n      line.
  This will be implemented, but at the moment users are advised\n      to change themes
  from within Powerpoint.\n\n  * Create shared Text.Pandoc.Writers.OOXML module (Jesse
  Rosenthal).\n    This is for functions used by both Powerpoint and Docx writers.\n\n
  \ * Add default pptx data for Powerpoint writer (Jesse Rosenthal).\n\n  * Add `empty_paragraphs`
  extension.\n\n    + Deprecate `--strip-empty-paragraphs` option.  Instead we now\n
  \     use an `empty_paragraphs` extension that can be enabled on\n      the reader
  or writer.  By default, disabled.\n    + Add `Ext_empty_paragraphs` constructor
  to `Extension`.\n    + Revert \"Docx reader: don't strip out empty paragraphs.\"\n
  \     This reverts commit d6c58eb836f033a48955796de4d9ffb3b30e297b.\n    + Implement
  `empty_paragraphs` extension in docx reader and writer,\n      opendocument writer,
  html reader and writer.\n    + Add tests for `empty_paragraphs` extension.\n\n  *
  Markdown reader:\n\n    + Don't parse native div as table caption (#4119).\n    +
  Improved computation of column widths in pipe tables.\n      Pipe tables with lines
  longer than the text width (as set\n      by `--columns`) are now scaled to text
  width, with the relative\n      widths of columns determined by the ratios between
  the\n      header lines.  Previously we computed column widths using\n      the
  ratio of header line lengths to column width, so that\n      tables with narrow
  header lines were extremely thin, which\n      was very rarely the desired result.\n\n
  \ * LaTeX reader: fix `\\` before newline (#4134).  This should be a space,\n    as
  long as it's not followed by a blank line. This has been fixed at the\n    tokenizer
  level.\n\n  * Muse reader (Alexander Krotov):\n\n    + Add test for `#disable-tables`
  directive in Emacs mode.\n    + Don't allow emphasis to be preceded by letter.\n
  \   + Add underline support in Emacs Muse mode..\n    + Support multiline directives
  in Amusewiki mode\n\n  * Man writer: omit internal links (#4136).  That is, just
  print the link\n    text without the URL.\n\n  * Markdown reader: accept processing
  instructions as raw HTML (#4125).\n\n  * Lua filters (Albert Krewinkel):\n\n    +
  Use script to initialize the interpreter.  The file `init.lua` is\n      used to
  initialize the Lua interpreter which is used in Lua filters.\n      This gives users
  the option to require libraries which they want to\n      use in all of their filters,
  and to extend default modules.\n    + Fix package loading for Lua 5.1.  The list
  of package searchers is\n      named `package.loaders` in Lua 5.1 and LuaJIT, and
  `package.searchers`\n      in Lua 5.2 and later.\n    + Refactor lua module handling.
  \ The integration with Lua's package/module\n      system is improved: A pandoc-specific
  package searcher is prepended to\n      the searchers in `package.searchers`. The
  modules `pandoc` and\n      `pandoc.mediabag` can now be loaded via `require`.\n
  \   + Bump lower bound of hslua.  The release hslua 0.9.3 contains a new\n      function
  which makes using Haskell functions as package loaders much\n      easier.\n\n  *
  reveal.js template:  add title-slide identifier to title slide (#4120).\n    This
  allows it to be styled more easily.\n\n  * LaTeX template: Added support for `pagestyle`
  variable (#4135,\n    Thomas Hodgson)\n\n  * Add `-threaded` to ghc-options for
  executable (#4130, fixes a build\n    error on linux).\n\n\n## pandoc 2.0.4 (2017-12-03)\n\n
  \ * Add `--print-highlight-style` option.  This generates a JSON version\n    of
  a highlighting style, which can be saved as a `.theme` file, modified,\n    and
  used with `--highlight-style` (#4106, #4096).\n\n  * Add `--strip-empty-paragraphs`
  option.  This works for any input format.\n    It is primarily intended for use
  with docx and odt documents where\n    empty paragraphs have been used for inter-paragraph
  spaces.\n\n  * Support `--webtex` for `gfm` output.\n\n  * Recognize `.muse` file
  extension.\n\n  * Support beamer `\\alert` in LaTeX reader. Closes #4091.\n\n  *
  Docx reader: don't strip out empty paragraphs (#2252).\n    Users who have a conversion
  pipeline from docx may want to consider adding\n    `--strip-empty-paragraphs` to
  the command line.\n\n  * Org reader (Albert Krewinkel): Allow empty list items (#4090).\n\n
  \ * Muse reader (Alexander Krotov):\n\n    + Parse markup in definition list terms.\n
  \   + Allow definition to end with EOF.\n    + Make code blocks round trip.\n    +
  Drop common space prefix from list items.\n    + Add partial round trip test.\n
  \   + Don't interpret XML entities.\n    + Remove `nested`.\n    + Parse `~~` as
  non-breaking space in Emacs mode.\n    + Correctly remove indentation from notes.
  \ Exactly one space is\n      required and considered to be part of the marker.\n
  \   + Allow list items to be empty.\n    + Add ordered list test.\n    + Add more
  multiline definition tests.\n    + Don't allow blockquotes within lists.\n    +
  Fix reading of multiline definitions.\n    + Add inline `<literal>` support.\n    +
  Concatenate inlines of the same type\n\n  * Docx writer: allow empty paragraphs
  (#2252).\n\n  * CommonMark/gfm writer:\n\n    + Use raw html for native divs/spans
  (#4113).  This allows a pandoc\n      markdown native div or span to be rendered
  in gfm using raw html tags.\n    + Implement `raw_html` and `raw_tex` extensions.
  \ Note that `raw_html`\n      is enabled by default for `gfm`, while `raw_tex` is
  disabled by default.\n\n  * Muse writer (Alexander Krotov):\n\n    + Test that inline
  math conversion result is normalized.\n      Without normalization this test produced\n
  \     `<em>a</em><em>b</em><em>c</em>`.\n    + Improve inline list normalization
  and move to writer.\n    + Escape hash symbol.\n    + Escape `----` to avoid accidental
  horizontal rules.\n    + Escape only `</code>` inside code tag.\n    + Additional
  `<verbatim>` is not needed as `<code>` is verbatim already.\n\n  * LaTeX writer:\n\n
  \   + Allow specifying just width or height for image size.\n      Previously both
  needed to be specified (unless the image was\n      being resized to be smaller
  than its original size).\n      If height but not width is specified, we now set
  width to\n      textwidth. If width but not height is specified, we now set\n      height
  to textheight.  Since we have `keepaspectratio`, this\n      yields the desired
  result.\n    + Escape `~` and `_` in code with `--listings` (#4111).\n\n  * HTML
  writer: export `tagWithAttributes`.  This is a helper allowing\n    other writers
  to create single HTML tags.\n\n  * Let papersizes `a0`, `a1`, `a2`, ... be case-insensitive
  by\n    converting the case as needed in LaTeX and ConTeXt writers.\n\n  * Change
  `fixDisplayMath` from `Text.Pandoc.Writers.Shared`\n    so that it no longer produces
  empty `Para`'s as an artifact.\n\n  * `Text.Pandoc.Shared.blocksToInlines`:  rewrote
  using builder.\n    This gives us automatic normalization, so we don't get\n    for
  example two consecutive Spaces.\n\n  * Include default CSS for 'underline' class
  in HTML-based templates.\n\n  * revealjs template:  add `tex2jax` configuration
  for the\n    math plugin.  With the next release of reveal.js, this will\n    fix
  the problem of `$`s outside of math contexts being\n    interpreted as math delimiters
  (#4027).\n\n  * `pandoc.lua` module for use in lua filters (Albert Krewinkel):\n\n
  \   + Add basic lua List module (#4099, #4081).  The List module is\n      automatically
  loaded, but not assigned to a global variable. It can be\n      included in filters
  by calling `List = require 'List'`.  Lists of blocks,\n      lists of inlines, and
  lists of classes are now given `List` as a metatable,\n      making working with
  them more convenient.  E.g., it is now possible to\n      concatenate lists of inlines
  using Lua's concatenation operator `..`\n      (requires at least one of the operants
  to have `List` as a metatable):\n\n          function Emph (emph)\n            local
  s = {pandoc.Space(), pandoc.Str 'emphasized'}\n            return pandoc.Span(emph.content
  .. s)\n          end\n\n      The `List` metatable is assigned to the tables which
  get passed to\n      the constructors `MetaBlocks`, `MetaInline`, and `MetaList`.
  This\n      enables the use of the resulting objects as lists.\n    + `Lua/StackInstances`:
  push Pandoc and Meta via constructor.\n      Pandoc and Meta elements are now pushed
  by calling the respective\n      constructor functions of the pandoc Lua module.
  This makes serialization\n      consistent with the way blocks and inlines are pushed
  to lua and allows\n      to use List methods with the `blocks` value.\n    + Add
  documentation for pandoc.List in `lua-filters.md`.\n\n  * Use latest tagsoup.  This
  fixes a bug in parsing HTML tags with\n    `&` (but not a valid entity) following
  them (#4094, #4088).\n\n  * Use skylighting 0.4.4.1, fixing the color of unmarked
  code text\n    when `numberLines` is used (#4103).\n\n  * Make `normalizeDate` more
  forgiving (Mauro Bieg, #4101), not\n    requiring a leading 0 on single-digit days.\n\n
  \ * Fix `--help` output for `--highlight-style` to include `FILE` (Mauro\n    Bieg,
  #4095).\n\n  * Clearer deprecation warning for `--latexmathml, --asciimathml, -m`.\n
  \   Previously we only mentioned `--latexmathml`, even if `-m` was\n    used.\n\n
  \ * Changelog: fix description of lua filters in 2.0 release\n    (Albert Krewinkel).
  \ Lua filters were initially run *after* conventional\n    (JSON) filters.  However,
  this was changed later to make it easier to deal\n    with files in the mediabag.
  The changelog is updated to describe that\n    feature of the 2.0 release correctly.\n\n
  \ * Change Generic JSON instances to TemplateHaskell (Jasper Van der Jeugt,\n    #4085).
  \ This reduces compile time and memory usage significantly.\n\n  * `lua-filters.md`:
  Added tikz filter example.\n\n  * Create alternative zip file for macOS binaries.\n\n
  \ * Create alternative zip file for Windows binaries.\n\n  * Update INSTALL.md since
  we now provide zips for binaries.\n\n  * Relax `http-types` dependency (Justus Sagem√ºller,
  #4084).\n\n  * Add `epub.md`, `getting-started.md` to docs.  These used to live
  in\n    the website repo.\n\n  * Add `packages` target to Makefile.\n\n  * Bump
  bounds for binary, http-types, tasty-hunit\n\n## pandoc 2.0.3 (2017-11-20)\n\n  *
  Lua filters: preload text module (Albert Krewinkel, #4077).\n    The `text` module
  is preloaded in lua. The module contains some UTF-8\n    aware string functions,
  implemented in Haskell.  The module is loaded on\n    request only, e.g.:\n\n        text
  = require 'text'\n        function Str (s)\n          s.text = text.upper(s.text)\n
  \         return s\n        end\n\n  * Allow table-like access to attributes in
  lua filters (Albert Krewinkel,\n    #4071).  Attribute lists are represented as
  associative lists in Lua. Pure\n    associative lists are awkward to work with.
  A metatable is attached to\n    attribute lists, allowing to access and use the
  associative list as if\n    the attributes were stored in as normal key-value pair
  in table.\n    Note that this changes the way `pairs` works on attribute lists.
  Instead\n    of producing integer keys and two-element tables, the resulting iterator\n
  \   function now returns the key and value of those pairs.  Use `ipairs` to\n    get
  the old behavior.  Warning: the new iteration mechanism only works if\n    pandoc
  has been compiled with Lua 5.2 or later (current default: 5.3).\n\n  * Text.Pandoc.Parsing.uri:
  \ allow `&` and `=` as word characters (#4068).\n    This fixes a bug where pandoc
  would stop parsing a URI with an\n    empty attribute:  for example, `&a=&b=` wolud
  stop at `a`.\n    (The uri parser tries to guess which punctuation characters\n
  \   are part of the URI and which might be punctuation after it.)\n\n  * Introduce
  `HasSyntaxExtensions` typeclass (Alexander Krotov, #4074).\n\n    + Added new `HasSyntaxExtensions`
  typeclass for `ReaderOptions` and\n      `WriterOptions`.\n    + Reimplemented `isEnabled`
  function from `Options.hs` to accept both\n      `ReaderOptions` and `WriterOptions`.\n
  \   + Replaced `enabled` from `CommonMark.hs` with new `isEnabled`.\n\n  * Add `amuse`
  extension (Alexander Krotov) to enable Amuse wiki\n    behavior for `muse`.  New
  `Ext_amuse` constructor for\n    `Extension`. Note: this is switched on by default;
  for\n    Emacs behavior, use `muse-amuse`.\n\n  * Muse reader (Alexander Krotov):\n\n
  \   + Count only one space as part of list item marker.\n    + Produce SoftBreaks
  on newlines. Now wrapping can be preserved\n      with `--wrap=preserve`.\n    +
  Add Text::Amuse footnote extensions.  Footnote end is indicated by\n      indentation,
  so footnotes can be placed anywhere in the text,\n      not just at the end of it.\n
  \   + Accept Emacs Muse definition lists when `-amuse`.\n      Emacs Muse does not
  require indentation.\n\n  * HTML reader:\n\n    + Ensure we don't produce level
  0 headers (#4076), even for chapter\n      sections in epubs.  This causes problems
  because writers aren't set\n      up to expect these.\n    + Allow spaces after
  `\\(` and before `\\)` with `tex_math_single_backslash`.\n      Previously `\\(
  \\frac{1}{a} < \\frac{1}{b} \\)` was not parsed as math in\n      `markdown` or
  `html` `+tex_math_single_backslash`.\n\n  * MANUAL: clarify that math extensions
  work with HTML.\n    Clarify that `tex_math_dollars` and `tex_math_single_backslash`\n
  \   will work with HTML as well as Markdown.\n\n  * Creole reader: Fix performance
  issue for longer lists (Sascha Wilde,\n    #4067).\n\n  * RST reader: better support
  for 'container' directive (#4066).\n    Create a div, incorporate name attribute
  and classes.\n\n  * LaTeX reader:\n\n    + Support column specs like `*{2}{r}` (#4056).
  \ This is equivalent to\n      `rr`.  We now expand it like a macro.\n    + Allow
  optional args for parbox (#4056).\n    + Allow optional arguments on `\\footnote`
  (#4062).\n\n  * EPUB writer: Fixed path for cover image (#4069).  It was previously\n
  \   `media/media/imagename`, and should have been `media/imagename`.\n\n  * Markdown
  writer: fix bug with doubled footnotes in grid tables\n    (#4061).\n\n  * LaTeX
  template:  include natbib/biblatex after polyglossia (#4073).\n    Otherwise we
  seem to get an error; biblatex wants polyglossia\n    language to be defined.\n\n
  \ * Added examples to lua filters documentation.\n\n\n## pandoc 2.0.2 (2017-11-12)\n\n
  \ * Deprecated ancient HTML math methods: `--latexmathml`, `--gladtex`,\n    `--mimetex`,
  `--jsmath`.\n\n  * Fixed URIs in `data/jats.csl`.  They were being rendered twice,\n
  \   leading to invalid XML in default JATS output with pandoc-citeproc.\n\n  * `lua-filters.md`:
  use real-world man page filter as example.\n\n  * Add lua filter functions `walk_inline`
  and `walk_block`\n    in the pandoc module, to apply filters inside particular\n
  \   inline and block elements.\n\n  * Refactored some code from `Text.Pandoc.Lua.PandocModule`\n
  \   into new internal module `Text.Pandoc.Lua.Filter`.\n\n  * Markdown reader:\n\n
  \   + Allow fenced code blocks to be indented 1-3 spaces (#4011).\n      This brings
  our handling of them into alignment with CommonMark's.\n    + Fix YAML metadata
  with \"chomp\" (`|-`).  Previously if a\n      YAML block under `|-` contained a
  blank line, pandoc would\n      not parse it as metadata.\n\n  * Removed `etc.`
  from abbreviations file.  Often `etc.` ends a\n    sentence, and we want the period
  to be treated as a\n    sentence-ending period.\n\n  * Fix regression with `--metadata`
  (#4054).  Values specified with\n    `--metadata` should replace a metadata value
  set in the document\n    itself, rather than creating a list including a new value.\n\n
  \ * EPUB writer:\n\n    + Fix EPUB OCF structure.  #3720 had been improperly implemented.\n
  \   + Fix modified paths for raw HTML tags (src, poster, etc.)\n      (#4050, #4055).
  This had not been updated for the new EPUB\n      container layout, with a separate
  text/ subdirectory.\n    + Fix image paths with empty `--epub-subdirectory`.\n\n
  \ * Miscellaneous code cleanup (Alexander Krotov).\n\n  * Use pandoc-types 1.17.3,
  which adds `Walkable` instances\n    for `[Block] Block` and `[Inline] Inline`.\n\n
  \ * Remove obsolete `stack.full.yaml` (#4052).\n\n  * Change to using pandoc-citeproc
  0.12.1 in binary packages.\n\n  * Consolidate math output method documentation (#4049,
  Mauro Bieg).\n\n  * `MANUAL.txt`: fix header level of \"Extension: emoji\" (Albert
  Krewinkel).\n\n  * Use lua filter to generate man page from `MANUAL.txt`, replacing
  old\n    Haskell filters.  This is easier and faster.\n\n  * Improved `INSTALL.md`.\n\n
  \ * Update commands to extract deb archive on Linux (#4043, Salim B).\n\n\n## pandoc
  2.0.1.1 (2017-11-04)\n\n  * Improved fix to #3989 (parsing of HTML tags containing\n
  \   `>` in an attribute or comment). The previous fix (in 2.0.1) only\n    worked
  in certain cases.\n\n  * FB2 writer (Alexander Krotov):\n\n    + Add `unrecognised`
  genre to `<title-info>`\n      (Alexander Krotov).  XML schema requires at least
  one genre.\n    + Remove `<annotation>` from `<body>`.\n\n  * CommonMark writer:
  fix strikethrough for `gfm` (#4038).\n\n  * Use texmath 0.10, which adds support
  for a wider range of\n    symbols and fixes default column alignments in MathML\n
  \   and OMML.\n\n  * Highlighting fixes, using skylighting 0.4.3.2:\n\n    + Fix
  invalid CSS.\n    + Support `lineAnchors` (or `line-anchors`) in HTML code blocks.\n
  \   + Ensure that code lines don't get duplicate identifiers (#4031).\n      The
  line identifiers are built using the code block's identifier\n      as a prefix.
  If the code block has null identifier, we use\n      `cb1`, `cb2`, etc.\n\n  * Added
  a few abbreviations to `data/abbreviations`,\n    and sorted the list (#3984, Wandmalfarbe).\n\n
  \ * Improved support for columns in HTML writer (#4028).\n\n    + Remove `width`
  attribute from the `div`.\n    + Remove space between `<div class=\"column\">` elements,\n
  \     since this prevents columns whose widths sum to 100%\n      (the space takes
  up space).\n    + Move as much as possible of the CSS to the template.\n    + Ensure
  that all the HTML-based templates (including epub)\n      contain the CSS for columns.\n
  \   + Columns default to 50% width unless they are given a width\n      attribute.
  \ So if you want two equal-width columns, you\n      can use a div with class `column`
  and no `width` attribute.\n\n  * SelfContained: use `base64` for css links with
  media attribute (#4026).\n    This fixes `--self-contained` with S5.\n\n  * Improve
  `pandoc-template-mode.el` (Vaclav Haisman).\n\n  * INSTALL.md: MacOS instructions
  needed xar -f (adam234).\n\n  * MANUAL.txt:\n\n    + Clarify that --setext-headers
  doesn't affect gfm output (#4035).\n    + Clarify what is needed to open and close
  a div in `fenced_divs`\n      (#4039, Tristano Ajmone).\n    + Removed reference
  to `default.beamer` in docs (#4024).\n      Also added mention of other templates
  affecting PDF output\n      with different settings.\n\n\n## pandoc 2.0.1 (2017-10-31)\n\n
  \ * Fixed regression in parsing of HTML comments in markdown and other\n    non-HTML
  formats (`Text.Pandoc.Readers.HTML.htmlTag`) (#4019).\n    The parser stopped at
  the first `>` character, even if it wasn't\n    the end of the comment.\n\n  * Creole
  reader (Sascha Wilde):\n\n    + Fix some minor typos and formatting.\n    + Add
  additional test on nowiki-block after para.\n    + Fix lists with trailing white
  space.\n\n  * LaTeX reader: handle `%` comment right after command.\n    For example,
  `\\emph%`.\n\n  * Markdown reader:  make sure fenced div closers work in lists.\n
  \   Previously the following failed:\n\n        ::: {.class}\n        1. one\n        2.
  two\n        :::\n\n    and you needed a blank line before the closing `:::`.\n\n
  \ * Make `fenced_divs` affect the Markdown writer.  If `fenced_divs` is\n    enabled,
  Divs will be rendered as fenced divs.\n\n  * LaTeX/Beamer writer: support \"blocks\"
  inside columns and other Divs\n    (#4016).\n\n  * HTML Writer: consistently use
  dashed class-names (Mauro Bieg, #3556).\n    Note: this change may require some
  changes in CSS rules.\n    `footnoteRef` has become `footnote-ref`, `titleslide`
  has\n    become `title-slide`, and `footnoteBack` has become `footnote-back`.\n\n
  \ * JATS writer: Properly pass through author metadata (#4020).\n\n  * FB2 writer
  (Alexander Krotov):\n\n    + Write blocks outside of `<p>` in definitions.\n    +
  Make bullet lists consistent with ordered lists, repeating\n      the marker for
  the outer list rather than indenting sublists,\n      since indentation does not
  work in readers.\n    + Add new style FB2 tests.\n\n  * `Text.Pandoc.ImageSize`:
  Add `Millimeter` constructor to `Dimension`\n    (#4012) [API change]. Now sizes
  given in 'mm' are no longer converted\n    to 'cm'.\n\n  * Revise documentation
  of small caps syntax (Andrew Dunning, #4013).\n\n  * Fix broken reference links
  in manual (Andrew Dunning, #4014)\n\n  * Fixed example of slide columns structure
  in changelog (#4015).\n    Also documented this feature in MANUAL.txt.\n\n\n## pandoc
  2.0.0.1 (2017-10-30)\n\n  * EPUB writer:\n\n    + Fixed filepaths for nonstandard
  epub-subdirectory values.\n    + Ensure that epub2 is recognized as a non-text format,\n
  \     so that a template is used.\n    + Don't include \"prefix\" attribute for
  ibooks for epub2.\n      It doesn't validate.\n    + Fix stylesheet paths; previously
  we had an incorrect\n      stylesheet path for the cover page and nav page.\n\n
  \ * LaTeX reader:\n\n    + Insert space when needed in macro expansion (#4007).\n
  \     Sometimes we need to insert a space after a control sequence\n      to prevent
  it merging with a following letter.\n    + Allow unbraced arguments for macros (#4007).\n
  \   + Allow body of macro definition to be unbraced (#4007).\n\n  * Linux package
  build: ensure that pandoc-citeproc is statically linked.\n\n  * trypandoc: add native,
  ms.\n\n\n## pandoc 2.0 (2017-10-29)\n\n### New features\n\n  * New output format
  `ms` (groff ms). Complete support, including\n    tables, math, syntax highlighting,
  and PDF bookmarks. The writer uses\n    texmath's new eqn writer to convert math
  to eqn format, so a ms file\n    produced with this writer should be processed with
  `groff -ms -e` if\n    it contains math.\n\n  * New output format `jats` (Journal
  Article Tag Suite).  This is an XML\n    format used in archiving and publishing
  articles.  Note that a\n    URI-encoded CSL stylesheet (`data/jats.csl`) is added
  automatically\n    unless a stylesheet is specified using `--css`.\n\n  * New output
  format `gfm` (GitHub-flavored CommonMark) (#3841).\n    This uses bindings to GitHub's
  fork of cmark, so it should parse\n    gfm exactly as GitHub does (excepting certain
  postprocessing\n    steps, involving notifications, emojis, etc.).  `markdown_github`\n
  \   has been deprecated in favor of `gfm`.\n\n  * New output format `muse` (Emacs
  Muse) (Alexander Krotov, #3489).\n\n  * New input format `gfm` (GitHub-flavored
  CommonMark) (#3841).\n    This uses bindings to GitHub's fork of cmark.  `markdown_github`\n
  \   has been deprecated in favor of `gfm`.\n\n  * New input format `muse` (Emacs
  Muse) reader (Alexander Krotov, #3620).\n\n  * New input format `tikiwiki` (TikiWiki
  markup) (rlpowell, #3800).\n\n  * New input format `vimwiki` (Vimwiki markup) (Yuchen
  Pei, #3705).\n    Note that there is a new data file, `data/vimwiki.css`, which
  can\n    be used to display the HTML produced by this reader and\n    pandoc's HTML
  writer in the style of vimwiki's own HTML\n    export.\n\n  * New input format `creole`
  (Creole 1.0) (#3994, Sascha Wilde).\n\n  * New syntax for Divs, with `fenced_divs`
  extension enabled by\n    default (#168).  This gives an attractive, plain-text
  way to create\n    containers for block-level content.\n\n  * Added new syntax for
  including raw content in any output format,\n    enabled by the `raw_attribute`
  extension (which is on by default\n    for `markdown` and `multimarkdown`).  The
  syntax is the same as\n    for fenced code blocks or code inlines, only with `{=FORMAT}`
  for\n    attributes, where `FORMAT` is the name of the output format\n    (e.g.,
  `ms`, `html`).\n\n  * Implement multicolumn support for slide formats (#1710).\n
  \   The structure expected is:\n\n        :::::::::::::: {.columns}\n        :::
  {.column width=\"40%\"}\n        contents...\n        :::\n        ::: {.column
  width=\"60%\"}\n        contents...\n        :::\n        ::::::::::::::\n\n    Support
  has been added for beamer and all HTML slide formats.\n\n  * Allows line comments
  in templates, beginning with `$--` (#3806).\n    (Requires doctemplates 0.2.1.)\n\n
  \ * Add `--eol=crlf|lf|native` flag and writer option to control line endings\n
  \   (Stefan Dresselhaus, #3663, #2097).\n\n  * Add `--log` option to save log messages
  in JSON format to a file (#3392).\n\n  * Add `--request-header` option, to set request
  headers when pandoc\n    makes HTTP requests to fetch external resources. For example:\n
  \   `--request-header User-Agent:blah`.\n\n  * Added lua filters (Albert Krewinkel,
  #3514).  The new `--lua-filter`\n    option works like `--filter` but takes pathnames
  of special lua filters\n    and uses the lua interpreter baked into pandoc, so that
  no external\n    interpreter is needed.  Note that lua filters are all applied after\n
  \   regular filters, regardless of their position on the command line.\n    For
  documentation of lua filters, see `doc/lua-filters.md`.\n\n  * Set `PANDOC_READER_OPTIONS`
  in environment where filters are run.\n    This contains a JSON representation of
  `ReaderOptions`, so filters\n    can access it.\n\n  * Support creation of pdf via
  groff `ms` and pdfroff.\n    `pandoc -t ms -o output.pdf input.txt`.\n\n  * Support
  for PDF generation via HTML and `weasyprint` or `prince`\n    (Mauro Bieg, #3909).
  \ `pandoc -t html5 -o output.pdf --pdf-engine=prince`.\n\n  * Added `--epub-subdirectory`
  option (#3720).  This specifies the\n    subdirectory in the OCF container that
  holds the EPUB specific content.\n    We now put all EPUB related content in an
  `EPUB/` subdirectory by default\n    (later this will be configurable).\n\n    ```\n
  \     mimetype\n      META-INF/\n        com.apple.ibooks.display-options.xml\n
  \       container.xml\n      EPUB/ <<--configurable-->>\n        fonts/ <<--static-->>\n
  \       font.otf\n      media/ <<--static-->>\n        cover.jpg\n        fig1.jpg\n
  \     styles/ <<--static-->>\n        stylesheet.css\n      content.opf\n      toc.ncx\n
  \     text/ <<--static-->>\n        ch001.xhtml\n    ```\n\n  * Added `--resource-path=SEARCHPATH`
  command line option (#852).\n    SEARCHPATH is separated by the usual character,
  depending on OS\n    (: on unix, ; on windows).  Default resource path is just working\n
  \   directory.  However, the working directory must be explicitly\n    specified
  if the `--resource-path` option is used.\n\n  * Added --abbreviations=FILE option
  for custom abbreviations file\n    (#256).  Dfault abbreviations file (`data/abbreviations`)
  contains\n    a list of strings that will be recognized by pandoc's\n    Markdown
  parser as abbreviations.  (A nonbreaking space will\n    be inserted after the period,
  preventing a sentence space in\n    formats like LaTeX.) Users can override the
  default by putting a file\n    abbreviations in their user data directory (`~/.pandoc`
  on *nix).\n\n  * Allow a theme file as argument to `--highlight-style`.\n    Also
  include a sample, `default.theme`, in `data/`.\n\n  * Allow `--syntax-definition`
  option for dynamic loading of syntax\n    highlighting definitions (#3334).\n\n
  \ * Lists in `markdown` by default now use the CommonMark variable\n    nesting
  rules (#3511). The indentation required for a block-level\n    item to be included
  in a list item is no longer fixed, but is\n    determined by the first line of the
  list item.  To be included in\n    the list item, a block must be indented to the
  level of the first\n    non-space content after the list marker. Exception: if are
  5 or more\n    spaces after the list marker, then the content is interpreted as
  an\n    indented code block, and continuation paragraphs must be indented\n    two
  spaces beyond the end of the list marker.  See the CommonMark\n    spec for more
  details and examples.\n\n    Documents that adhere to the four-space rule should,
  in most cases,\n    be parsed the same way by the new rules.  Here are some examples\n
  \   of texts that will be parsed differently:\n\n        - a\n          - b\n\n
  \   will be parsed as a list item with a sublist; under the four-space\n    rule,
  it would be a list with two items.\n\n        - a\n\n              code\n\n    Here
  we have an indented code block under the list item, even though it\n    is only
  indented six spaces from the margin, because it is four spaces\n    past the point
  where a continuation paragraph could begin.  With the\n    four-space rule, this
  would be a regular paragraph rather than a code\n    block.\n\n        - a\n\n                code\n\n
  \   Here the code block will start with two spaces, whereas under\n    the four-space
  rule, it would start with `code`.  With the four-space\n    rule, indented code
  under a list item always must be indented eight\n    spaces from the margin, while
  the new rules require only that it\n    be indented four spaces from the beginning
  of the first non-space\n    text after the list marker (here, `a`).\n\n    This
  change was motivated by a slew of bug reports from people\n    who expected lists
  to work differently (#3125, #2367, #2575, #2210,\n     #1990, #1137, #744, #172,
  #137, #128) and by the growing prevalance\n    of CommonMark (now used by GitHub,
  for example).  Those who\n    prefer the old behavior can use `-f markdown+four_space_rule`.\n\n
  \ * Added `four_space_rule` extension.  This triggers the old pandoc\n    parsing
  rule for content nested under list items (the \"four space\n    rule\").\n\n  *
  Added `spaced_reference_links` extension (#2602).  It allows whitespace\n    between
  the two parts of a reference link:  e.g.\n\n        [a] [b]\n\n        [b]: url\n\n
  \   This was previously enabled by default; now it is forbidden by default.\n\n
  \ * Add `space_in_atx_header` extension (#3512).  This is enabled by default\n    in
  pandoc and GitHub markdown but not the other flavors.\n    This requirse a space
  between the opening #'s and the header\n    text in ATX headers (as CommonMark does
  but many other implementations\n    do not).  This is desirable to avoid falsely
  capturing things ilke\n\n        #hashtag\n\n    or\n\n        #5\n\n  * Add `sourcefile`
  and `outputfile` template variables (Roland Hieber,\n    #3431).\n\n  * Allow ibooks-specific
  metadata in epubs (#2693).  You can now have\n    the following fields in your YAML
  metadata, and it will be treated\n    appropriately in the generated EPUB:\n\n    ```\n
  \     ibooks:\n        version: 1.3.4\n        specified-fonts: false\n        ipad-orientation-lock:
  portrait-only\n        iphone-orientation-lock: landscape-only\n        binding:
  true\n        scroll-axis: vertical\n    ```\n\n\n### Behavior changes\n\n  * Reader
  functions no longer presuppose that CRs have been\n    stripped from the input.
  (They strip CRs themselves, before\n    parsing, to simplify the parsers.)\n\n  *
  Added support for translations (localization) (#3559).\n    Currently this only
  affects the LaTeX reader, for things\n    like `\\figurename`.  Translation data
  files for 46 languages\n    can be found in `data/translations`.\n\n  * Make `--ascii`
  work with DocBook output too.\n\n  * Rename `--latex-engine` to `--pdf-engine`,\n
  \   and `--latex-engine-opt` to `--pdf-engine-opt`.\n\n  * Removed `--parse-raw`
  and `readerParseRaw`.  These were confusing.\n    Now we rely on the `+raw_tex`
  or `+raw_html` extension with latex or html\n    input.  Thus, instead of `--parse-raw
  -f latex` we use `-f latex+raw_tex`,\n    and instead of `--parse-raw -f html` we
  use `-f html+raw_html`.\n\n  * With `--filter` R filters are now recognized, even
  if they are\n    not executable (#3940, #3941, Andrie de Vries).\n\n  * Support
  SVG in PDF output, converting with `rsvg2pdf` (#1793).\n\n  * Make epub an alias
  for epub3, not epub2.\n\n  * Removed `--epub-stylesheet`; use `--css` instead (#3472,
  #847).\n    Multiple stylesheets may be used.  Stylesheets will be taken both from\n
  \   `--css` and from the `stylesheet` metadata field (which can contain\n    either
  a file path or a list of them).\n\n  * `--mathml` and MathML in HTMLMathMethod no
  longer take an argument.\n    The argument was for a bridge JavaScript that used
  to be necessary\n    in 2004.  We have removed the script already.\n\n  * `--katex`
  improvements.  The latest version is used, and the\n    autoload script is loaded
  by default.\n\n  * Change MathJax CDN default since old one is shutting down (#3544).\n
  \   Note:  The new URL requires a version number, which we'll have\n    to update
  manually in subsequent pandoc releases in order to\n    take advantage of mathjax
  improvements.\n\n  * `--self-contained`: don't incorporate elements with `data-external=\"1\"`\n
  \   (#2656).  You can leave an external link as it is by adding the attribute\n
  \   data-external=\"1\" to the element.  Pandoc will then not try to\n    incorporate
  its content when `--self-contained` is used.  This is\n    similar to a feature
  already supported by the EPUB writer.\n\n  * Allow `--extract-media` to work with
  non-binary input formats\n    (#1583, #2289).  If `--extract-media` is supplied
  with a non-binary\n    input format, pandoc will attempt to extract the contents
  of all\n    linked images, whether in local files, data: uris, or external uris.\n
  \   They will be named based on the sha1 hash of the contents.\n\n  * Make `papersize:
  a4` work regardless of the case of `a4`.\n    It is converted to `a4` in LaTeX and
  `A4` in ConTeXt.\n\n  * Make `east_asian_line_breaks` affect all readers/writers
  (#3703).\n\n  * Underlined elements are now treated consistently by readers\n    (#2270,
  hftf); they are always put in a Span with class `underline`.\n    This allows the
  user to treat them differently from other emphasis,\n    using a filter.  Docx,
  Org, Textile, Txt2Tags, and HTML readers\n    have been changed.\n\n  * Improved
  behavior of `auto_identifiers` when there are explicit ids\n    (#1745).  Previously
  only autogenerated ids were added to the list\n    of header identifiers in state,
  so explicit ids weren't taken\n    into account when generating unique identifiers.
  \ Duplicated\n    identifiers could result.  This simple fix ensures that explicitly
  given\n    identifiers are also taken into account.\n\n  * Use `table-of-contents`
  for contents of toc, make `toc` a boolean\n    (#2872).  Changed markdown, rtf,
  and HTML-based templates accordingly.\n    This allows you to set `toc: true` in
  the metadata; this\n    previously produced strange results in some output formats.\n
  \   For backwards compatibility, `toc` is still set to the\n    toc contents.  But
  it is recommended that you update templates\n    to use `table-of-contents` for
  the toc contents and `toc`\n    for a boolean flag.\n\n  * Change behavior with
  binary format output to stdout.\n    Previously, for binary formats, output to stdout
  was disabled\n    unless we could detect that the output was being piped (and not\n
  \   sent to the terminal).  Unfortunately, such detection is not\n    possible on
  Windows, leaving windows users no way to pipe binary\n    output.  So we have changed
  the behavior in the following way:\n\n    + Output to stdout is allowed when it
  can be determined that\n      the output is being piped (on non-Windows platforms).\n
  \   + If the `-o` option is not used, binary output is never sent\n      to stdout
  by default; instead, an error is raised.\n    + If `-o -` is used, binary output
  is sent to stdout, regardless\n      of whether it is being piped. This works on
  Windows too.\n\n  * Better error behavior:  uses of `error` have been replaced by\n
  \   raising of `PandocError`, which can be trapped and handled by the\n    calling
  program.\n\n  * Removed `hard_line_breaks` extension from `markdown_github` (#3594).\n
  \   GitHub has two Markdown modes, one for long-form documents like READMEs\n    and
  one for short things like issue comments. In issue comments, a line\n    break is
  treated as a hard line break. In README, wikis, etc., it is\n    treated as a space
  as in regular Markdown.  Since pandoc is more likely to\n    be used to convert
  long-form documents from GitHub Markdown,\n    `-hard_line_breaks` is a better default.\n\n
  \ * Include `backtick_code_blocks` extension in `mardkown_mmd` (#3637).\n\n  * Escape
  `MetaString` values (as added with `-M/--metadata` flag) (#3792).\n    Previously
  they would be transmitted to the template without any\n    escaping.  Note that
  `--M title='*foo*'` yields a different result from\n\n        ---\n        title:
  *foo*\n        ---\n\n    In the latter case, we have emphasis; in the former case,
  just\n    a string with literal asterisks (which will be escaped\n    in formats,
  like Markdown, that require it).\n\n  * Allow `em`, `cm`, `in` for image height/width
  in HTML, LaTeX (#3450).\n\n  * HTML writer: Insert `data-` in front of unsupported
  attributes.  Thus,\n    a span with attribute `foo` gets written to HTML5 with `data-foo`,
  so\n    it is valid HTML5.  HTML4 is not affected.  This will allow us to use\n
  \   custom attributes in pandoc without producing invalid HTML. (With help\n    from
  Wandmalfarbe, #3817.)\n\n  * Plain writer:  improved super/subscript rendering.
  \ We now\n    handle more non-digit characters for which there are\n    sub/superscripted
  unicode characters.  When unicode\n    sub/superscripted characters are not available,
  we use\n    `_(..)` or `^(..)` (#3518).\n\n  * Docbook, JATS, TEI writers: print
  INFO message when omitting interior\n    header (#3750).  This only applies to section
  headers inside list items,\n    e.g., which were otherwise silently omitted.\n\n
  \ * Change to `--reference-links` in Markdown writer (#3701).  With\n    `--reference-location`
  of `section` or `block`, pandoc will now repeat\n    references that have been used
  in earlier sections.  The Markdown\n    reader has also been modified, so that *exactly*
  repeated references\n    do not generate a warning, only references with the same
  label but\n    different targets.  The idea is that, with references after every
  block,\n    one might want to repeat references sometimes.\n\n  * ODT/OpenDocument
  writer:\n\n    + Support `lang` attribute (#1667).\n    + Added support for `--toc`
  (#2836).  Thanks to @anayrat.\n\n  * Docx writer:\n\n    + `lang` meta, see #1667
  (Mauro Bieg, #3515).\n    + Change `FigureWithCaption` to `CaptionedFigure` (iandol,
  #3658).\n    + Use `Table` rather than `Table Normal` for table style (#3275).\n
  \     `Table Normal` is the default table style and can't be modified.\n    + Pass
  through comments (#2994).  We assume that comments are defined as\n      parsed
  by the docx reader:\n\n        I want <span class=\"comment-start\" id=\"0\" author=\"Jesse
  Rosenthal\"\n        date=\"2016-05-09T16:13:00Z\">I left a comment.</span>some
  text to\n        have a comment <span class=\"comment-end\" id=\"0\"></span>on it.\n\n
  \     We assume also that the id attributes are unique and properly\n      matched
  between comment-start and comment-end.\n    + Bookmark improvements.  Bookmark start/end
  now surrounds content rather\n      than preceding it.  Bookmarks generated for
  Div with id\n      (jgm/pandoc-citeproc#205).\n    + Add `keywords` metadata to
  docx document properties (Ian).\n\n  * RST writer: support unknown interpreted text
  roles by\n    parsing them as `Span` with `role` attributes (#3407).  This\n    way
  they can be manipulated in the AST.\n\n  * HTML writer:\n\n    + Line block: Use
  class instead of style attribute (#1623).  We now\n      issue `<div class=\"line-block\">`
  and include a default definition\n      for `line-block` in the default templates,
  instead of hard-coding a\n      `style` on the div.\n    + Add class `footnoteBack`
  to footnote back references (Timm Albers).\n      This allows for easier CSS styling.\n
  \   + Render SmallCaps as span with smallcaps class (#1592), rather than\n      using
  a style attribute directly.  This gives the user more flexibility\n      in styling
  small caps in CSS.\n    + With reveal.js we use `data-src` instead of `src` for
  images for\n      lazy loading.\n    + Special-case `.stretch` class for images
  in reveal.js (#1291).\n      Now in reveal.js, an image with class `stretch` in
  a paragraph\n      by itself will stretch to fill the whole screen, with no\n      caption
  or figure environment.\n\n  * Added warnings for non-rendered blocks to writers.\n\n
  \ * Writers now raise an error on template failure.\n\n  * When creating a PDF via
  LaTeX, warn if the font is missing some\n    characters (#3742).\n\n  * Remove initial
  check for PDF-creating program (#3819).\n    Instead, just try running it and raise
  the exception if it\n    isn't found at that point.  This improves things for users
  of Cygwin\n    on Windows, where the executable won't be found by `findExecutable`\n
  \   unless `.exe` is added.  The same exception is raised as before, but\n    at
  a later point.\n\n  * Readers issue warning for duplicate header identifiers (#1745).\n
  \   Autogenerated header identifiers are given suffixes so as not to clash\n    with
  previously used header identifiers. But they may still coincide with\n    an explicit
  identifier that is given for a header later in the document,\n    or with an identifier
  on a div, span, link, or image. We now issue\n    a warning in this case, so users
  can supply an explicit identifier.\n\n  * CommonMark reader now supports `emoji`,
  `hard_line_breaks`, `smart`,\n    and `raw_html` extensions.\n\n  * Markdown reader:\n\n
  \   + Don't allow backslash + newline to affect block structure (#3730).\n      Note
  that as a result of this change, the following, which formerly\n      produced a
  header with two lines separated by a line break, will\n      now produce a header
  followed by a paragraph:\n\n        # Hi\\\n        there\n\n      This may affect
  some existing documents that relied on\n      this undocumented and unintended behavior.
  \ This change makes pandoc\n      more consistent with other Markdown implementations,
  and with itself\n      (since the two-space version of a line break doesn't work
  inside ATX\n      headers, and neither version works inside Setext headers).\n\n\n
  \ * Org reader (Albert Krewinkel, unless noted):\n\n    + Support `table.el` tables
  (#3314).\n    + Support macros (#3401).\n    + Support the `#+INCLUDE:` file inclusion
  mechanism (#3510).\n      Recognized include types are `example`, `export`, `src`,
  and\n      normal org file inclusion.  Advanced features like line numbers\n      and
  level selection are not implemented yet.\n    + Interpret more meta value as inlines.
  \ The values of the following\n      meta variables are now interpreted using org-markup
  instead of\n      treating them as pure strings: `keywords` (comma-separated list
  of\n      inlines), `subtitle` (inline values), `nocite` (inline values, can\n      be
  repeated).\n    + Support `\\n` export option (#3940).  This turns all newlines
  in the\n      text into hard linebreaks.\n\n  * RST reader:\n\n    + Improved admonition
  support (#223).  We no longer add an\n      `admonition` class, we just use the
  class for the type of admonition,\n      `note` for example.  We put the word corresponding
  to the label in\n      a paragraph inside a `Div` at the beginning of the admonition
  with\n      class `admonition-title`.  This is about as close as we can get to\n
  \     RST's own output.\n    + Initial support of `.. table` directive.  This allows
  adding captions\n      to tables.\n    + Support `.. line-block` directive.  This
  is deprecated but may still\n      be in older documents.\n    + Support scale and
  align attributes of images (#2662).\n    + Implemented implicit internal header
  links (#3475).\n    + Support RST-style citations (#853).  The citations appear
  at the end\n      of the document as a definition list in a special div with id\n
  \     `citations`. Citations link to the definitions.\n    + Recurse into bodies
  of unknown directives (#3432).\n      In most cases it's better to preserve the
  content than\n      to emit it.  This isn't guaranteed to have good results;\n      it
  will fail spectacularly for unknown raw or verbatim directives.\n    + Handle chained
  link definitions (#262).  For example,\n\n          .. _hello:\n          .. _goodbye:
  example.com\n\n      Here both `hello` and `goodbye` should link to `example.com`.\n
  \   + Support anchors (#262).  E.g.\n\n          `hello`\n\n          .. _hello:\n\n
  \         paragraph\n\n      This is supported by putting \"paragraph\" in a `Div`
  with id `hello`.\n    + Support `:widths:` attribute for table directive.\n    +
  Implement csv-table directive (#3533).  Most attributes are supported,\n      including
  `:file:` and `:url:`.\n    + Support unknown interpreted text roles by parsing them
  as Span\n      with \"role\" attributes (#3407).  This way they can be manipulated
  in\n      the AST.\n\n  * HTML reader: parse a span with class `smallcaps` as `SmallCaps`.\n\n
  \ * LaTeX reader:\n\n    + Implemented `\\graphicspath` (#736).\n    + Properly
  handle column prefixes/suffixes.  For example, in\n      `\\begin{tabular}{>{$}l<{$}>{$}l<{$}
  >{$}l<{$}}`\n      each cell will be interpreted as if it has a `$`\n      before
  its content and a `$` after (math mode).\n    + Handle komascript `\\dedication`
  (#1845).  It now adds a\n      `dedication` field to metadata.  It is up to the
  user to supply\n      a template that uses this variable.\n    + Support all `\\textXX`
  commands, where XX = `rm`, `tt`, `up`, `md`,\n      `sf`, `bf` (#3488).  Spans with
  a class are used when there is\n      nothing better.\n    + Expand `\\newenvironment`
  macros (#987).\n    + Add support for LaTeX subfiles package (Marc Schreiber, #3530).\n
  \   + Better support for subfigure package (#3577).\n      A figure with two subfigures
  turns into two pandoc\n      figures; the subcaptions are used and the main caption\n
  \     ignored, unless there are no subcaptions.\n    + Add support for `\\vdots`
  (Marc Schreiber, #3607).\n    + Add basic support for hyphenat package (Marc Schreiber,
  #3603).\n    + Add basic `\\textcolor` support (Marc Schreiber).\n    + Add support
  for `tabularx` environment (Marc Schreiber, #3632).\n    + Better handling of comments
  inside math environments (#3113).\n      This solves a problem with commented out
  `\\end{eqnarray}` inside\n      an eqnarray (among other things).\n    + Parse tikzpicture
  as raw verbatim environment if `raw_tex` extension\n      is selected (#3692).  Otherwise
  skip with a warning.  This is better\n      than trying to parse it as text!\n    +
  Add `\\colorbox` support (Marc Schreiber).\n    + Set identifiers on Spans used
  for `\\label`.\n    + Have `\\setmainlanguage` set `lang` in metadata.\n    + Support
  etoolbox's `\\ifstrequal`.\n    + Support `plainbreak`, `fancybreak` et al from
  the memoir class\n      (bucklereed, #3833).\n    + Support `\\let`.  Also, fix
  regular macros so they're expanded at the\n      point of use, and NOT also the
  point of definition.  `\\let` macros,\n      by contrast, are expanded at the point
  of definition.  Added an\n      `ExpansionPoint` field to `Macro` to track this
  difference.\n    + Support simple `\\def` macros.  Note that we still don't support\n
  \     macros with fancy parameter delimiters, like `\\def\\foo#1..#2{...}`.\n    +
  Support `\\chaptername`, `\\partname`, `\\abstractname`, etc.  (#3559,\n      obsoletes
  #3560).\n    + Put content of `\\ref`, `\\label`, `\\eqref` commands into `Span`
  with\n      attributes, so they can be handled in filters (Marc Schreiber, #3639)\n
  \   + Add Support for `glossaries` and `acronym` package (Marc Schreiber,\n      #3589).
  Acronyms are not resolved by the reader, but acronym and\n      glossary information
  is put into attributes on Spans so that they\n      can be processed in filters.\n
  \   + Use `Link` instead of `Span` for `\\ref`.  This makes more sense\n      semantically
  and avoids unnecessary `Span [Link]` nestings when\n      references are resolved.\n
  \   + Rudimentary support for `\\hyperlink`.\n    + Support `\\textquoteleft|right`,
  `\\textquotedblleft|right` (#3849).\n    + Support `\\lq`, `\\rq`.\n    + Implement
  `\\newtoggle`, `\\iftoggle`, `\\toggletrue|false` from etoolbox\n      (#3853).\n
  \   + Support `\\RN` and `\\Rn`, from biblatex (bucklereed, #3854).\n    + Improved
  support for `\\hyperlink`, `\\hypertarget` (#2549).\n    + Support `\\k` ogonek
  accent.\n    + Improve handling of accents.  Handle ogonek, and fall back correctly\n
  \     with forms like `\\\"{}`.\n    + Better support for ogonek accents.\n    +
  Support for `\\faCheck` and `\\faClose` (Marc Schreiber, #3727).\n    + Support
  for `xspace` (Marc Schreiber, #3797).\n    + Support `\\setmainlanguage` or `\\setdefaultlanguage`
  (polyglossia)\n      and `\\figurename`.\n    + Better handling of `\\part` in LaTeX
  (#1905).  Now we parse chapters as\n      level 0 headers, and parts as level -1
  headers.  After parsing, we\n      check for the lowest header level, and if it's
  less than 1 we bump\n      everything up so that 1 is the lowest header level.  So
  `\\part` will\n      always produce a header; no command-line options are needed.\n
  \   + Add block version of `\\textcolor` (Marc Schreiber).\n    + `\\textcolor`
  works as inline and block command (Marc Schreiber).\n    + `\\textcolor` will be
  parse as span at the beginning of a paragraph\n      (Marc Schreiber).\n    + Read
  polyglossia/babel `\\text(LANG){...}` (bucklereed)\n    + Improved handling of include
  files in LaTeX reader (#3971).\n      Previously `\\include` wouldn't work if the
  included file\n      contained, e.g., a begin without a matching end.\n    + Support
  `\\expandafter` (#3983).\n    + Handle `\\DeclareRobustCommand` (#3983).  Currently
  it's just treated\n      as a synonym for `\\newcommand`.\n    + Handle `\\lettrine`
  (Mauro Bieg).\n\n  * Math improvements due to updates in texmath:\n\n    + Improved
  handling of accents and upper/lower delimiters.\n    + Support for output in GNU
  eqn format (used with *roff).\n    + Allow `\\boldsymbol` + a token without braces,
  and similarly\n      with other styling commands.\n    + Improve parsing of `\\mathop`
  to allow multi-character operator names.\n    + Add thin space after math operators
  when \"faking it with\n      unicode.\"\n\n  * `walk` is now used instead of `bottomUp`
  in the `ToJSONFilter`\n    instance for `a -> [a]` (pandoc-types).  Note that behavior\n
  \   will be slightly different, since `bottomUp`'s treatment of\n    a function
  `[a] -> [a]` is to apply it to each sublist of a\n    list, while walk applies it
  only to maximal sublists.\n    Usually the latter behavior is what is wanted, and
  the\n    former can be simulated when needed.  But there may be\n    existing filters
  that need to be rewritten in light of the\n    new behavior.  Performance should
  be improved.\n\n  * There are some changes to syntax highlighting due to revisions\n
  \   in the `skylighting` library:\n\n    + Support for `powershell` has been added,
  and many syntax\n      definitions have been updated.\n    + Background colors have
  been added to the `kate` style.\n    + The way highlighted code blocks are formatted
  in HTML has\n      been changed (David Baynard), in ways that may require\n      changes
  in hard-coded CSS affecting highlighting.\n      (If you haven't included hard-coded
  highlighting CSS in\n      your template, you needn't change anything.)\n\n\n###
  API changes\n\n  * New module `Text.Pandoc.Class` (Jesse Rosenthal, John MacFarlane).\n
  \   This contains definitions of the `PandocMonad` typeclass, the\n    `PandocIO`
  and `PandocPure` monads, and associated functions.\n\n  * Changed types of all writers
  and readers.\n\n    + We now use `Text` instead of `String` in the interface (#3731).\n
  \     (We have not yet changed the internals of most readers to work\n      with
  `Text`, but making this change in the API now opens up a\n      path to doing that.)\n
  \   + The result is now of form `m a` with constraint `PandocMonad m`.\n      Readers
  and writers can be combined to form monadic values which\n      can be run using
  either `runIO` or `runPure`.  If `runIO` is used,\n      then both readers and writers
  will be able to do IO when needed\n      (for include files, for example); if `runPure`
  is used,\n      then the functions are pure and will not touch IO.\n    + Where
  previously you used\n      `writeRST def (readMarkdown def \"[foo](url)\")`, now
  you\n      would use\n      `runPure $ readMarkdown def (pack \"[foo](url)\") >>=
  writeRST def`.\n\n  * New module `Text.Pandoc.Readers` (Albert Krewinkel).  This\n
  \   contains reader helper functions formerly defined in the\n    top-level `Text.Pandoc`
  module.\n\n    + Changed `StringReader` -> `TextReader`.\n    + `getReader` now
  returns a pair of a reader and\n      `Extensions`, instead of building the extensions
  into the\n      reader (#3659).  The calling code must explicitly set\n      `readerExtensions`
  using the `Extensions` returned.  The\n      point of the change is to make it possible
  for the calling\n      code to determine what extensions are being used.\n\n  *
  New module `Text.Pandoc.Writers` (Albert Krewinkel).\n    This contains writer helper
  functions formerly defined in the\n    top-level `Text.Pandoc` module.\n\n    +
  Changed `StringWriter` -> `TextWriter`.\n    + `getWriter` now returns a pair of
  a reader and\n      `Extensions`, instead of building the extensions into the\n
  \     reader (#3659).  The calling code must explicitly set\n      `readerExtensions`
  using the `Extensions` returned.  The\n      point of the change is to make it possible
  for the calling\n      code to determine what extensions are being used.\n\n  *
  New module `Text.Pandoc.Lua`, exporting `runLuaFilter` (Albert Krewinkel,\n    #3514).\n\n
  \ * New module `Text.Pandoc.App`.  This abstracts out the functionality\n    of
  the command line program (`convertWithOpts`), so it can be reproduced\n    e.g.
  in a desktop or web application.  Instead of exiting, we throw errors\n    (#3548),
  which are caught (leading to exit) in pandoc.hs, but allow other\n    users of `Text.Pandoc.App`
  to recover.  `pandoc.hs` is now a 2-liner.\n    The module also exports some utility
  functions for parsing options\n    and running filters.\n\n  * New module `Text.Pandoc.Logging`
  (exported module) (#3392).\n    This now contains the `Verbosity` definition previously
  in\n    `Text.Pandoc.Options`, as well as a new `LogMessage` datatype that will\n
  \   eventually be used instead of raw strings for warnings.  This will enable\n
  \   us, among other things, to provide machine-readable warnings if desired.\n    Include
  ToJSON instance and showLogMessage.  This gives us the possibility\n    of both
  machine-readable and human-readable output for log messages.\n\n  * New module `Text.Pandoc.BCP47`,
  with `getLang`, `Lang(..)`, `parseBCP47`.\n\n  * New module `Text.Pandoc.Translations`,
  exporting `Term`,\n    `Translations`, `readTranslations`.\n\n  * New module `Text.Pandoc.Readers.LaTeX.Types',
  exporting `Macro`, `Tok`,\n    `TokType`, `Line`, `Column`.\n\n  * `Text.Pandoc.Error`:
  added many new constructors for `PandocError`.\n\n  * Expose some previously private
  modules (#3260).  These are often\n    helpful to people writing their own reader
  or writer modules:\n\n    + `Text.Pandoc.Writers.Shared`\n    + `Text.Pandoc.Parsing`\n
  \   + `Text.Pandoc.Asciify`\n    + `Text.Pandoc.Emoji`\n    + `Text.Pandoc.ImageSize`\n
  \   + `Text.Pandoc.Highlighting`\n`\n  * New module `Text.Pandoc.Extensions` (Albert
  Krewinkel):\n    Extension parsing and processing functions were defined in the
  top-level\n    `Text.Pandoc` module.  These functions are moved to the Extensions\n
  \   submodule as to enable reuse in other submodules.\n\n  * Add `Ext_raw_attribute`
  constructor for `Extension`.\n\n  * Add `Ext_fenced_divs` constructor for `Extension'.\n\n
  \ * Add `Ext_four_space_rule` constructor in `Extension`.\n\n  * Add `Ext_gfm_auto_identifiers`
  constructor for `Extension`.\n\n  * Add `Monoid` instance for `Extensions`.\n\n
  \ * Add `Text.Pandoc.Writers.Ms`, exporting `writeMs`.\n\n  * Add `Text.Pandoc.Writers.JATS`,
  exporting `writeJATS`.\n\n  * Add `Text.Pandoc.Writers.Muse`, exporting `writeMuse`.\n\n
  \ * Add `Text.Pandoc.Readers.Muse`, exporting `readMuse`.\n\n  * Add `Text.Pandoc.Readers.TikiWiki`,
  exporting `readTikiWiki`.\n\n  * Add `Text.Pandoc.Readers.Vimwiki`, exporting `readVimwiki`.\n\n
  \ * Add `Text.Pandoc.Readers.Creole`, exporting `readCreole`.\n\n  * Export `setVerbosity`
  from `Text.Pandoc`.\n\n  * `Text.Pandoc.Pretty`: Add `Eq` instance for `Doc`.\n\n
  \ * `Text.Pandoc.XML`: `toEntities`: changed type to `Text -> Text`.\n\n  * `Text.Pandoc.UTF8`:\n\n
  \   + Export `fromText`, `fromTextLazy`, `toText`, `toTextLazy`.\n      Define `toString`,
  `toStringLazy` in terms of them.\n    + Add new functions parameterized on `Newline`:
  `writeFileWith`,\n      `putStrWith`, `putStrLnWith`, `hPutStrWith`, `hPutStrLnWith`.\n\n
  \ * `Text.Pandoc.MediaBag`: removed `extractMediaBag`.\n\n  * `Text.Pandoc.Highlighting`:\n\n
  \   + `highlighting` now returns an Either rather than Maybe.\n      This allows
  us to display error information returned by the skylighting\n      library.  Display
  a warning if the highlighting library throws an error.\n    + Add parameter for
  `SyntaxMap` to `highlight`.\n\n  * `Text.Pandoc.Writers.Math`:\n\n    + Export `defaultMathJaxURL`,
  `defaultKaTeXURL`.  This will ensure that\n      we only need to update these in
  one place.\n\n  * `Text.Pandoc.SelfContained`:\n\n    + Removed `WriterOptions`
  parameter from `makeSelfContained`.\n    + Put `makeSelfContained` in PandocMonad
  instead of IO.  This removes\n      the need to pass MediaBag around and improves
  exceptions.  It also\n      opens up the possibility of using makeSelfContained
  purely.\n    + Export `makeDataURI`.\n\n  * `Text.Pandoc.ImageSize`:\n\n    + Export
  `lengthToDim`, new function `scaleDimension`.\n    + Export `inEm` from ImageSize
  (#3450).\n    + Change `showFl` and `show` instance for `Dimension` so\n      extra
  decimal places are omitted.\n    + Added `Em` as a constructor of `Dimension`.\n
  \   + Add `WriterOptions` parameter to `imageSize` signature (Mauro Bieg).\n\n  *
  `Text.Pandoc.Templates`:\n\n    + Change type of `renderTemplate'`.  Now it runs
  in `PandocMonad`\n      and raises a proper `PandocTemplateError` if there are problems,
  rather\n      than failing with uncatchable `error`.\n    + Change signature of
  `getDefaultTemplate`.  Now it runs in any instance\n      of `PandocMonad`, and
  returns a `String` rather than an `Either` value.\n      And it no longer takes
  a `datadir` parameter, since this can be\n      retrieved from `CommonState`.\n\n
  \ * `Text.Pandoc.Options`:\n\n    + Added `writerEpubSubdirectory` to `WriterOptions`
  (#3720).\n      The EPUB writer now takes its EPUB subdirectory from this option.\n
  \   + In `WriterOptions`, rename `writerLaTeXEngine` to `writerPdfEngine`\n      and
  `writerLaTeXArgs` to `writerPdfArgs` (Mauro Bieg, #3909).\n    + Add `writerSyntaxMap`
  to `WriterOptions`.\n    + Removed `writerEpubStylesheet` from `WriterOptions`.\n
  \   + Remove `writerUserDataDir` from `WriterOptions`.  It is now carried\n      in
  `CommonState` in `PandocMonad` instances.  (And thus it can be used\n      by readers
  too.)\n    + Changed `writerEpubMetadata` to a `Maybe String`.\n    + Removed `readerApplyMacros`
  from `ReaderOptions`.  Now we just check\n      the `latex_macros` reader extension.\n
  \   + FromJSON/ToJSON instances for `ReaderOptions`.\n    + In `HTMLMathMethod`,
  the `KaTeX` contsructor now takes only\n      one string (for the KaTeX base URL),
  rather than two.\n    + Removed `writerSourceURL` from `WriterOptions`.  We now
  use\n      `stSourceURL` in `CommonState`, which is set by `setInputFiles`.\n\n
  \ * `Text.Pandoc.Shared`:\n\n    + `tabFilter` now takes a `Text`, not `String`.\n
  \   + `openURL`: Changed type from an Either.  Now it will just raise\n      an
  exception to be trapped later.\n    + Remove `normalizeSpaces` (#1530).\n    + Remove
  `warn`.  (Use `report` from `Text.Pandoc.Class` instead.)\n    + Export a new function
  `crFilter`.\n    + Add `eastAsianLineBreakFilter` (previously in Markdown reader).\n
  \   + Provide custom `isURI` that rejects unknown schemes.\n      (Albert Krewinkel,
  #2713).  We also export the set of known\n      `schemes`.  The new function replaces
  the function of the same name\n      from `Network.URI`, as the latter did not check
  whether a scheme is\n      well-known.  All official IANA schemes (as of 2017-05-22)
  are\n      included in the set of known schemes.  The four non-official schemes\n
  \     `doi`, `isbn`, `javascript`, and `pmid` are kept.\n    + Remove `err`.\n    +
  Remove `readDataFile`, `readDefaultDataFile`, `getReferenceDocx`,\n      `getReferenceODT`.
  These now live in `Text.Pandoc.Class`,\n      where they are defined in terms of
  `PandocMonad`\n      primitives and have different signatures.\n    + Remove `openURL`.
  \ Use `openURL` from `Text.Pandoc.Class` instead.\n    + Add `underlineSpan`.\n\n
  \ * `Text.Pandoc.Readers.HTML`: export new `NamedTag` class.\n\n  * `Text.Pandoc.Readers.Markdown`:
  remove `readDocxWithWarnings`.\n     With the new API one can simply use `getLog`
  after running\n     the reader.\n\n  * `Text.Pandoc.Readers.LaTeX`: Changed types
  for `rawLaTeXInline`\n     and `rawLaTeXBlock`.  (Both now return a `String`, and
  they are\n     polymorphic in state.)\n\n\n### Bug fixes and under-the-hood improvements\n\n
  \ * TEI writer: Added identifiers on `<div>` elements.\n\n  * DokuWiki reader: Better
  handling for code block in list item (#3824).\n\n  * Custom writer: Remove old preprocesesor
  conditionals (Albert Krewinkel).\n\n  * ZimWiki writer: Removed internal formatting
  from note and table cells,\n    because ZimWiki does not support it (Alex Ivkin,
  #3446).\n\n  * MediaWiki writer:\n\n    + Updated list of syntax highlighting languages
  (#3461).\n      Now `r` gets you `<source>` rather than `<code>` (among others).\n
  \   + Add display attribute on `<math>` tags (#3452).  This allows display\n      math
  to be rendered properly.\n    + Remove newline before `</ref>` (#2652).\n    + Don't
  softbreak lines inside list items (#3531).\n\n  * Org writer:\n\n    + Reduce to
  two spaces after bullets (#3417, Albert Krewinkel).\n    + Add unit tests (Alexander
  Krotov).\n    + Stop using raw HTML to wrap divs (Albert Krewinkel, #3771).\n    +
  Do not strip `#` from Org anchor links (Alexander Krotov).\n\n  * CommonMark writer:\n\n
  \   + Avoid excess blank lines at end of output.\n    + Prefer pipe tables to HTML
  tables even if it means losing relative\n      column width information (#3734).\n
  \   + Support table, strikethrough extensions, when enabled (as with gfm).\n      Note
  that we bypass the commonmark writer from cmark and construct our\n      own pipe
  tables, with better results.\n    + Properly support `--wrap=none`.\n    + Use smallcaps
  class for `SmallCaps` (#1592).\n    + Omit \"fig:\" prefix in image titles.  This
  is used internally to\n      indicate internal figures.\n\n  * RST writer:\n\n    +
  Properly handle table captions.\n    + Don't wrap lines in in definition list terms.
  \ Wrapping is not allowed.\n    + Implemented `+/-smart` and improved escaping with
  `+smart`.\n    + Add empty comments when needed to avoid including a blockquote\n
  \     in the indented content of a preceding block (#3675).\n    + Improve grid
  table output, fix bug with empty rows (#3516).\n      Uses the new `gridTable` in
  Writers.Shared, which is here\n      improved to better handle 0-width cells.\n
  \   + Remove space at beginning/end of RST code span (#3496).  Otherwise\n      we
  get invalid RST.  There seems to be no way to escape the space.\n    + Add header
  anchors when header has non-standard id (#3937).\n    + Correctly handle inline
  code containing backticks, using a `:literal:`\n      role (#3974).\n    + Don't
  backslash-escape word-internal punctuation (#3978).\n\n  * Markdown writer:\n\n
  \   + Don't include variables in metadata blocks.  Previously variables set\n      on
  the command line were included in e.g. YAML metadata, contrary to\n      documentation
  and intentions.\n    + Improved escaping with `+smart`.\n    + Fixed grid tables
  embedded in grid tables (#2834).\n    + Use span with class 'smallcaps' for SmallCaps,
  instead of a style\n      attribute as before (#1592).\n    + Escape initial `%`
  in a paragraph if the `pandoc_title_blocks`\n      extension is enabled (#3454).
  \ Otherwise in a document starting with\n      a literal `%` the first line is wrongly
  interpreted as a title.\n    + Fixed false ordered lists in YAML metadata (#3492,
  #1685).  Now we\n      properly escape things that would otherwise start ordered
  lists,\n      such as\n\n          ---\n          title: 1. inline\n          ...\n
  \   + Better handling of tables with empty columns (#3337).  We now\n      calculate
  the number of columns based on the longest row (or the\n      length of aligns or
  widths).\n    + Escape unordered list markers at beginning of paragraph (#3497),
  to\n      avoid false interpretation as a list.\n    + Escape `|` appropriately.\n
  \   + Ensure space before list at top level (#3487).\n    + Avoid spurious blanklines
  at end of document after tables and list,\n      for example.\n    + Fixed bugs
  in simple/multiline list output (#3384).\n      Previously we got overlong lists
  with `--wrap=none`.  This is fixed.\n      Previously a multiline list could become
  a simple list (and would\n      always become one with `--wrap=none`).\n    + Don't
  emit a simple table if `simple_tables` disabled (#3529).\n    + Case-insensitive
  reference links (David A Roberts, #3616).\n      Ensure that we do not generate
  reference links whose labels differ only\n      by case.  Also allow implicit reference
  links when the link\n      text and label are identical up to case.\n    + Put space
  before reference link definitions (Mauro Bieg, #3630).\n    + Better escaping for
  links (David A. Roberts, #3619).  Previously the\n      Markdown writer would sometimes
  create links where there were none\n      in the source.  This is now avoided by
  selectively escaping bracket\n      characters when they occur in a place where
  a link might be created.\n    + Added missing `\\n` (David A. Roberts, #3647).\n
  \   + Fixed duplicated reference links with `--reference-links`\n      and `--reference-location=section`
  (#3674).  Also ensure that there\n      are no empty link references `[]`.\n    +
  Avoid inline surround-marking with empty content (#3715).\n      E.g. we don't want
  `<strong></strong>` to become `****`.\n      Similarly for emphasis, super/subscript,
  strikeout.\n    + Don't allow soft break in header (#3736).\n    + Make sure `plain`,
  `markdown_github`, etc. work for raw.\n      Previously only `markdown` worked.
  \ Note: currently a raw block labeled\n      `markdown_github` will be printed for
  any `markdown` format.\n    + Ensure that `+` and `-` are escaped properly so they
  don't cause\n      spurious lists (#3773).  Previously they were only\n      if
  succeeded by a space, not if they were at end of line.\n    + Use pipe tables if
  `raw_html` disabled and `pipe_tables` enabled,\n      even if the table has relative
  width information (#3734).\n    + Markdown writer: don't crash on `Str \"\"`.\n
  \   + Make `Span` with null attribute transparent.  That is, we don't use\n      brackets
  or `<span>` tags to mark spans when there are no attributes;\n      we simply output
  the contents.\n    + Escape pipe characters when `pipe_tables` enabled (#3887).\n
  \   + Better escaping of `<` and `>`.  If `all_symbols_escapable` is set,\n      we
  backslash escape these.  Otherwise we use entities as before.\n    + When writing
  plain, don't use `&nbsp;` to separate list and indented\n      code.  There's no
  need for it in this context, since this isn't to be\n      interpreted using Markdown
  rules.\n    + Preserve classes in JS obfuscated links (Timm Albers, #2989).\n      HTML
  links containing classes originally now preserve them when using\n      javascript
  email obfuscation.\n    + Render `SmallCaps` as a native span when `native_spans`
  are enabled.\n    + Always write attributes with `bracketed_spans` (d-dorazio).\n\n
  \ * Man writer:\n\n    + Fix handling of nested font commands (#3568).  Previously
  pandoc emitted\n      incorrect markup for bold + italic, for example, or bold +
  code.\n    + Avoid error for definition lists with no definitions (#3832).\n\n  *
  DocBook writer:\n\n    + Fix internal links with `writerIdentifierPrefix opt`\n
  \     (#3397, Mauro Bieg).\n\n  * Docx writer:\n\n    + Don't include bookmarks
  on headers unless non-null id (#3476).\n    + Support 9 levels of headers (#1642).\n
  \   + Allow 9 list levels (#3519).\n    + Don't take `distArchive` from datadir
  (#3322).  The docx writer takes\n      components from the distribution's version
  of `reference.docx` when it\n      can't find them in a user's custom `reference.docx`.
  \ Previously, we\n      allowed a `reference.docx` in the data directory (e.g. `~/.pandoc`)\n
  \     to be used as the distribution's reference.docx.  This led to a\n      bizarre
  situation where pandoc would produce a good docx using\n      `--template ~/.pandoc/ref.docx`,
  but if `ref.docx` were moved to\n      `~/.pandoc/reference.docx`, it would then
  produce a corrupted docx.\n    + Fixed handling of soft hyphen (0173) (#3691).\n
  \   + Better handling of keywords (#3719).\n    + Cleaner code for handling dir
  and style attributes for `Div`.\n    + Use `Set` for dynamic styles to avoid duplicates.\n
  \   + Removed redundant element from data/docx/word/numbering.xml.\n      The elements
  we need are generated when the document is\n      compiled; this didn't do anything.\n
  \   + Activate `evenAndOddHeaders` from reference docx (#3901,\n      August√≠n Mart√≠n
  Barbero).\n\n  * ODT/OpenDocument writer:\n\n    + Calculate aspect ratio for percentage-sized
  images (Mauro Bieg, #3239).\n    + Use more widely available bullet characters (#1400).
  \ The old\n      characters weren't available in some font sets.  These seem to
  work\n      well on Windows and Linux versions of LibreOffice.\n    + Wider labels
  for lists (#2421).  This avoids overly narrow labels for\n      ordered lists with
  `()` delimiters.  However, arguably it creates\n      overly wide labels for bullets.
  \ Also, lists now start flush with\n      the margin, rather than indented.\n    +
  Fixed dropped elements in some ordered lists (#2434).\n\n  * FB2 writer:\n\n    +
  Don't render `RawBlock` as code.\n    + Don't fail with an error on interior headers
  (e.g. in list) (#3750).\n      Instead, omit them with an INFO message.\n    + Add
  support for \"lang\" metadata (Alexander Krotov, #3625).\n    + Format `LineBlock`
  as poem (Alexander Krotov).  Previously writer\n      produced one paragraph with
  `<empty-line/>` elements, which are not\n      allowed inside `<p>` according to
  FB2 schema.\n    + Replace `concatMap` with `cMap` (Alexander Krotov).\n    + Write
  FB2 lists without nesting blocks inside `<p>` (Alexander\n      Krotov, #4004)\n\n
  \ * HTML writer:\n\n    + Make sure `html4`, `html5` formats work for raw blocks/inlines.\n
  \   + Render raw inline environments when `--mathjax` used (#3816).\n      We previously
  did this only with raw blocks, on the assumption\n      that math environments would
  always be raw blocks. This has changed\n      since we now parse them as inline
  environments.\n    + Ensure we don't get two style attributes for width and height.\n
  \   + Report when not rendering raw inline/block.\n    + Issue warning if no title
  specified and template used (#3473).\n    + Info message if `lang` is unspecified
  (#3486).\n    + Removed unused parameter in `dimensionsToAttributeList`.\n    +
  Avoid two class attributes when adding `uri` class (#3716).\n    + Fix internal
  links with `writerIdentifierPrefix opt` (#3397, Mauro\n      Bieg).\n    + Use revealjs's
  math plugin for mathjax (#3743).  This is a thin\n      wrapper around mathjax that
  makes math look better on revealjs.\n    + Slidy:  use h1 for all slides, even if
  they were originally\n      level 2 headers (#3566).  Otherwise the built-in table
  of contents\n      in Slidy breaks.\n\n  * LaTeX writer:\n\n    + Don't render LaTeX
  images with data: URIs (#3636).  Note that\n      `--extract-media` can be used
  when the input contains data: URIs.\n    + Make highlighted code blocks work in
  footnotes (Timm Albers).\n    + Don't use figure inside table cell (#3836).\n    +
  Use proper code for list enumerators (#3891).  This should fix problems\n      with
  lists that don't use arabic numerals.\n    + Always add hypertarget when there's
  a non-empty identifier (#2719).\n      Previously the hypertargets were only added
  when there was actually\n      a link to that identifier.\n    + Use `%` after hypertarget
  before code block.\n    + Add `\\leavevmode` before hypertarget at start of paragraph
  (#2704,\n      fixes formatting problems in beamer citations).\n    + Don't use
  `lstinline` in `\\item[..]` (#645).  If you do, the contents\n      of item disappear
  or are misplaced.  Use `\\texttt` instead.\n    + Fix problem with escaping in `lstinline`
  (#1629).  Previously the\n      LaTeX writer created invalid LaTeX when `--listings`
  was specified and\n      a code span occurred inside emphasis or another construction.\n
  \   + Fix error with line breaks after empty content (#2874).  LaTeX\n      requires
  something before a line break, so we insert a `~` if no\n      printable content
  has yet been emitted.\n    + Use BCP47 parser.\n    + Fixed detection of otherlangs
  (#3770).  We weren't recursing into\n      inline contexts.\n    + Handle language
  in inline code with `--listings` (#3422).\n    + Write euro symbol directly in LaTeX
  (Andrew Dunning, #3801).\n      The textcomp package allows pdfLaTeX to parse `‚Ç¨`
  directly, making the\n      `\\euro` command unneeded.\n    + Fixed footnotes in
  table captions (#2378).  Note that if the table has\n      a first page header and
  a continuation page header, the notes will\n      appear only on the first occurrence
  of the header.\n    + In `writeBeamer` output, allow hyperlinks to frames (#3220).\n
  \     Previously you could link to a header above or below slide level but\n      not
  *to* slide level.  This commit changes that.  Hypertargets are\n      inserted inside
  frame titles; technically the reference is to just\n      after the title, but in
  normal use (where slides are viewed full\n      screen in a slide show), this does
  not matter.\n    + Remove `\\strut` at beginning of table cells (#3436).  This fixes
  a\n      problem with alignment of lists in table cells.  The `\\strut` at the\n
  \     end seems to be enough to avoid the too-close spacing that motivated\n      addition
  of the strut  in #1573.\n    + Add partial siunitx Support (Marc Schreiber, #3588).\n\n
  \ * ConTeXt writer:\n\n    + Refactored to use BCP47 module.\n    + Remove unnecessary
  `$` (Alexander Krotov, #3482).\n    + Use header identifiers for chapters (#3968).\n\n
  \ * EPUB writer:\n\n    + `title_page.xhtml` is now put in `text/`.\n    + Don't
  strip formatting in TOC (#1611).\n\n  * Textile reader:\n\n    + Fix bug for certain
  links in table cells (#3667).\n    + Allow 'pre' code in list item (#3916).\n\n
  \ * HTML reader:\n\n    + Added warnings for ignored material (#3392).\n    + Better
  sanity checks to avoid parsing unintended things as\n      raw HTML in the Markdown
  reader (#3257).\n    + Revise treatment of `li` with `id` attribute (#3596).  Previously
  we\n      always added an empty div before the list item, but this created\n      problems
  with spacing in tight lists.  Now we do this: If the list\n      item contents begin
  with a `Plain` block, we modify the `Plain`\n      block by adding a `Span` around
  its contents.  Otherwise, we add a\n      `Div` around the contents of the list
  item (instead of adding an\n      empty `Div` to the beginning, as before).\n    +
  Add `details` tag to list of block tags (#3694).\n    + Removed `button` from block
  tag list (#3717).  It is already in the\n      `eitherBlockOrInlineTag` list, and
  should be both places.\n    + Use `Set`s instead of lists for block tag lookup.\n
  \   + Rewrote to use `Text` throughout.  Effect on memory usage is modest\n      (<
  10%).\n    + Use the lang value of `<html>` to set the lang meta value (bucklereed,\n
  \     #3765).\n    + Ensure that paragraphs are closed properly when the parent
  block\n      element closes, even without `</p>` (#3794).\n    + Parse `<figure>`
  and `<figcaption>` (Mauro Bieg, #3813).\n    + Parse `<main>` like `<div role=main>`
  (bucklereed, #3791).\n      `<main>` closes `<p>` and behaves like a block element
  generally\n    + Support column alignments (#1881).  These can be set either\n      with
  a `width` attribute or with `text-width` in a `style` attribute.\n    + Modified
  state type to be an instance of `HasLogMessages`, so\n      `registerHeader` can
  issue warnings.\n    + `</td>` or `</th>` should close any open block tag (#3991).\n
  \   + `<td>` should close an open `<th>` or `<td>`.\n    + `htmlTag` improvements
  (#3989).  We previously failed on cases\n      where an attribute contained a `>`
  character. This patch fixes the\n      bug, which especially affects raw HTML in
  Markdown.\n\n  * Txt2Tags reader:\n\n    + Newline is not indentation (Alexander
  Krotov).\n\n  * MediaWiki reader:\n\n    + Allow extra hyphens after `|-` in tables
  (#2649).\n    + Allow blank line after table start (#2649).\n    + Fixed more table
  issues (#2649).\n    + Ensure that list starts begin at left margin (#2606).  Including
  when\n      they're in tables or other list items.\n    + Make smart double quotes
  depend on `smart` extension (#3585).\n    + Don't do curly quotes inside `<tt>`
  contexts (#3585).  Even if `+smart`.\n    + Modified state type to be an instance
  of `HasLogMessages`, so\n      `registerHeader` can issue warnings.\n\n  * TWiki
  reader (Alexander Krotov):\n\n    + Remove unnecessary `$` (#3597).\n    + Simplify
  `linkText` (#3605).\n\n  * EPUB reader:\n\n    + Minor refactoring, avoiding explicit
  MediaBag handling.\n      This all works behind the scenes in CommonState plumbing.\n\n
  \ * Docx reader:\n\n    + Don't drop smartTag contents (#2242).\n    + Handle local
  namespace declarations (#3365).  Previously we didn't\n      recognize math, for
  example, when the xmlns declaration occurred on\n      the element and not the root.\n
  \   + More efficient trimSps (#1530).  Replacing `trimLineBreaks`.  This\n      does
  the work of `normalizeSpaces` as well, so we avoid the need for\n      that function
  here.\n    + Avoid 0-level headers (Jesse Rosenthal, #3830).  We used to parse\n
  \     paragraphs styled with \"HeadingN\" as \"nth-level header.\" But if a\n      document
  has a custom style named \"Heading0\", this will produce a\n      0-level header,
  which shouldn't exist. We only parse this style\n      if N>0. Otherwise we treat
  it as a normal style name, and\n      follow its dependencies, if any.\n    + Add
  tests for avoiding zero-level header (Jesse Rosenthal).\n\n  * ODT reader:\n\n    +
  Replaced `collectRights` with Rights from `Data.Either`.\n    + Remove dead code
  (Albert Krewinkel).\n\n  * Org reader (Albert Krewinkel, unless noted).\n\n    +
  Don't allow tables inside list items (John MacFarlane, #3499).\n    + Disallow tables
  on list marker lines (#3499).\n    + Convert markup at beginning of footnotes (John
  MacFarlane, #3576).\n    + Allow emphasized text to be followed by `[` (#3577).\n
  \   + Handle line numbering switch for src blocks.\n      The line-numbering switch
  that can be given to source blocks (`-n` with\n      an start number as an optional
  parameter) is parsed and translated to a\n      class/key-value combination used
  by highlighting and other readers and\n      writers.\n    + Stop adding rundoc
  prefix to src params.  Source block parameter names\n      are no longer prefixed
  with `rundoc`. This was intended to simplify\n      working with the rundoc project,
  a babel runner. However, the rundoc\n      project is unmaintained, and adding those
  markers is not the reader's\n      job anyway.  The original language that is specified
  for a source\n      element is now retained as the `data-org-language` attribute
  and only\n      added if it differs from the translated language.\n    + Allow multi-word
  arguments to src block params (#3477).  The reader now\n      correctly parses src
  block parameter list even if parameter arguments\n      contain multiple words.\n
  \   + Avoid creating `nullMeta` by applying `setMeta` directly\n      (Alexander
  Krotov).\n    + Replace `sequence . map` with `mapM`.\n    + Fix smart parsing behavior.
  \ Parsing of smart quotes and special\n      characters can either be enabled via
  the `smart` language extension or\n      the `'` and `-` export options. Smart parsing
  is active if either the\n      extension or export option is enabled.  Only smart
  parsing of special\n      characters (like ellipses and en and em dashes) is enabled
  by default,\n      while smart quotes are disabled.  Previously, all smart parsing
  was\n      disabled unless the language extension was enabled.\n    + Subject full
  doc tree to headline transformations (Albert Krewinkel,\n      #3695).  Emacs parses
  org documents into a tree structure, which is\n      then post-processed during
  exporting. The reader is changed to do the\n      same, turning the document into
  a single tree of headlines starting\n      at level¬†0.\n    + Fix cite parsing behaviour
  (Herwig Stuetz).  Until now, `org-ref`\n      cite keys included special characters
  also at the end. This caused\n      problems when citations occur right before colons
  or at the end of\n      a sentence.  With this change, all non alphanumeric characters
  at\n      the end of a cite key are ignored.  This also adds `,` to the list\n      of
  special characters that are legal in cite keys to better mirror\n      the behaviour
  of org-export.\n    + Fix module names in haddock comments.  Copy-pasting had lead
  to\n      haddock module descriptions containing the wrong module names.\n    +
  Recognize babel result blocks with attributes (#3706).  Babel\n      result blocks
  can have block attributes like captions and names.\n      Result blocks with attributes
  were not recognized and were parsed\n      as normal blocks without attributes.\n
  \   + Include tags in headlines.  The Emacs default is to include tags in the\n
  \     headline when exporting.  Instead of just empty spans, which contain the\n
  \     tag name as attribute, tags are rendered as small caps and wrapped in\n      those
  spans.  Non-breaking spaces serve as separators for multiple tags.\n    + Respect
  export option for tags (#3713).  Tags are appended to\n      headlines by default,
  but will be omitted when the `tags` export option\n      is set to nil.\n    + Use
  `tag-name` attribute instead of `data-tag-name`.\n    + Use `org-language` attribute
  rather than `data-org-language`.\n    + Modified state type to be an instance of
  `HasLogMessages`, so\n      `registerHeader` can issue warnings.\n    + End footnotes
  after two blank lines.  Footnotes can not only be\n      terminated by the start
  of a new footnote or a header, but also by two\n      consecutive blank lines.\n
  \   + Update emphasis border chars (#3933).  The org reader was updated to\n      match
  current org-mode behavior: the set of characters which are\n      acceptable to
  occur as the first or last character in an org emphasis\n      have been changed
  and now allows all non-whitespace chars at the\n      inner border of emphasized
  text (see `org-emphasis-regexp-components`).\n\n  * RST reader:\n\n    + Fixed small
  bug in list parsing (#3432).  Previously the parser didn't\n      handle properly
  this case:\n\n          * - a\n            - b\n          * - c\n            - d\n
  \   + Handle multiline cells in simple tables (#1166).\n    + Parse list table directive
  (Keiichiro Shikano, #3432).\n    + Make use of `anyLineNewline` (Alexander Krotov,
  #3686).\n    + Use `anyLineNewline` in `rawListItem` (Alexander Krotov, #3702).\n
  \   + Reorganize block parsers for ~20% faster parsing.\n    + Fixed `..include::`
  directive (#3880).\n    + Handle blank lines correctly in line blocks (Alexander
  Krotov, #3881).\n      Previously pandoc would sometimes combine two line blocks
  separated\n      by blanks, and ignore trailing blank lines within the line block.\n
  \   + Fix indirect hyperlink targets (#512).\n\n  * Markdown reader:\n\n    + Allow
  attributes in reference links to start on next line (#3674).\n    + Parse YAML metadata
  in a context that sees footnotes defined in\n      the body of the document (#1279).\n
  \   + When splitting pipe table cells, skip tex math (#3481).\n      You might have
  a `|` character inside math.  (Or for that matter\n      something that the parser
  might mistake for raw HTML.)\n    + Treat span with class `smallcaps` as SmallCaps.\n
  \     This allows users to specify small caps in Markdown this way:\n      `[my
  text]{.smallcaps}` (#1592).\n    + Fixed internal header links (#2397).\n      This
  patch also adds `shortcut_reference_links` to the list\n      of mmd extensions.\n
  \   + Treat certain environments as inline\n      when they occur without space
  surrounding them (#3309, #2171).\n      E.g. equation, math.  This avoids incorrect
  vertical space\n      around equations.\n    + Optimized `nonindentSpaces`.  Makes
  the benchmark go from 40 to 36 ms.\n    + Allow latex macro definitions indented
  1-3 spaces.\n      Previously they only worked if nonindented.\n    + Improved parsing
  of indented raw HTML blocks (#1841).\n      Previously we inadvertently interpreted
  indented HTML as\n      code blocks.  This was a regression.  We now seek to determine
  the\n      indentation level of the contents of an HTML block, and (optionally)\n
  \     skip that much indentation.  As a side effect, indentation may be\n      stripped
  off of raw HTML blocks, if `markdown_in_html_blocks` is\n      used. This is better
  than having things interpreted as indented\n      code blocks.\n    + Fixed smart
  quotes after emphasis (#2228).  E.g. in `*foo*'s 'foo'`.\n    + Warn for notes defined
  but not used (#1718).\n    + Use `anyLineNewline` (Alexander Krotov).\n    + Interpret
  YAML metadata as Inlines when possible (#3755).  If\n      the metadata field is
  all on one line, we try to interpret it as\n      Inlines, and only try parsing
  as Blocks if that fails.  If it\n      extends over one line (including possibly
  the `|` or `>` character\n      signaling an indented block), then we parse as Blocks.
  \ This was\n      motivated by some German users finding that `date: '22. Juin 2017'`\n
  \     got parsed as an ordered list.\n    + Fixed spurious parsing as citation as
  reference def (#3840).\n      We now disallow reference keys starting with `@` if
  the\n      `citations` extension is enabled.\n    + Parse `-@roe` as suppress-author
  citation (pandoc-citeproc#237).\n      Previously only `[-@roe]` (with brackets)
  was recognized as\n      suppress-author, and `-@roe` was treated the same as `@roe`.\n
  \   + Fixed parsing of fenced code after list when there is no intervening\n      blank
  line (#3733).\n    + Allow raw latex commands starting with `\\start` (#3558).  Previously\n
  \     these weren't allowed because they were interpreted as starting\n      ConTeXt
  environments, even without a corresponding `\\stop`...\n    + Added `inlines`, `inlines1`.\n
  \   + Require nonempty alt text for `implicit_figures` (#2844).\n      A figure
  with an empty caption doesn't make sense.\n    + Removed texmath macro material;
  now all this is handled\n      in the LaTeX reader functions.\n    + Fixed bug with
  indented code following raw LaTeX (#3947).\n\n  * LaTeX reader:\n\n    + Rewrote
  LaTeX reader with proper tokenization (#1390,\n      #2118, #3236, #3779, #934,
  #982).  This rewrite is primarily\n      motivated by the need to get macros working
  properly.  A side benefit\n      is that the reader is significantly faster.  We
  now tokenize the\n      input text, then parse the token stream.  Macros modify
  the token\n      stream, so they should now be effective in any context, including\n
  \     math. Thus, we no longer need the clunky macro processing\n      capacities
  of texmath.\n    + Parse `\\,` to `\\8198` (six-per-em space) (Henri Werth).\n    +
  Allow `\\newcommand\\foo{blah}` without braces.\n    + Support `\\lstinputlisting`
  (#2116).\n    + Issue warnings when skipping unknown latex commands (#3392).\n    +
  Include contents of `\\parbox`.\n    + Allow `\\hspace` and `\\vspace` to count
  as raw block or inline.\n      Previously we would refuse to parse anything as raw
  inline if\n      it was in the `blockCommands` list.  Now we allow exceptions\n
  \     if they're listed under ignoreInlines in inlineCommands.\n      This should
  make it easier e.g. to include an `\\hspace`\n      between two side-by-side raw
  LaTeX tables.\n    + Don't drop contents of `\\hypertarget`.\n    + Handle spaces
  before `\\cite` arguments.\n    + Allow newpage, clearpage, pagebreak in inline
  contexts as well as\n      block contexts (#3494).\n    + Treat `{{xxx}}` the same
  as `{xxx}` (#2115).\n    + Use `pMacroDefinition` in macro (for more direct parsing).\n
  \     Note that this means that `macro` will now parse one\n      macro at a time,
  rather than parsing a whole group together.\n    + Fixed failures on `\\ref{}`,
  `\\label{}` with `+raw_tex`.  Now these\n      commands are parsed as raw if `+raw_tex`;
  otherwise, their argument\n      is parsed as a bracketed string.\n    + Don't crash
  on empty `enumerate` environment (#3707).\n    + Handle escaped `&` inside table
  cell (#3708).\n    + Handle block structure inside table cells (#3709).  `minipage`
  is no\n      longer required.\n    + Handle some width specifiers on table columns
  (#3709).  Currently\n      we only handle the form `0.9\\linewidth`.  Anything else
  would have\n      to be converted to a percentage, using some kind arbitrary assumptions\n
  \     about line widths.\n    + Make sure `\\write18` is parsed as raw LaTeX.  The
  change is in the\n      LaTeX reader's treatment of raw commands, but it also affects
  the\n      Markdown reader.\n    + Fixed regression with starred environment names
  (#3803).\n    + Handle optional args in raw `\\titleformat` (#3804).\n    + Improved
  heuristic for raw block/inline.  An unknown command at the\n      beginning of the
  line that could be either block or inline is\n      treated as block if we have
  a sequence of block commands followed by\n      a newline or a `\\startXXX` command
  (which might start a raw ConTeXt\n      environment).\n    + Don't remove macro
  definitions from the output, even if\n      `Ext_latex_macros` is set, so that macros
  will be applied.\n      Since they're only applied to math in Markdown, removing
  the macros\n      can have bad effects.  Even for math macros, keeping them should
  be\n      harmless.\n    + Removed `macro`.  It is no longer necessary, since the\n
  \     `rawLaTeXBlock` parser will parse macro definitions.  This also avoids\n      the
  need for a separate `latexMacro` parser in the Markdown reader.\n    + Use `label`
  instead of `data-label` for label in caption (#3639).\n    + Fixed space after `\\figurename`
  etc.\n    + Resolve references to section numbers.\n    + Fix `\\let\\a=0` case,
  with single character token.\n    + Allow `@` as a letter in control sequences.
  \ `@` is commonly used\n      in macros using `\\makeatletter`.  Ideally we'd make
  the tokenizer\n      sensitive to `\\makeatletter` and `\\makeatother`, but until
  then this\n      seems a good change.\n    + Track header numbers and correlate
  with labels.\n    + Allow `]` inside group in option brackets (#3857).\n    + lstinline
  with braces can be used (verb cannot be used with braces)\n      (Marc Schreiber,
  #3535).\n    + Fix keyval function: pandoc did not parse options in braces correctly\n
  \     (Marc Schreiber, #3642).\n    + When parsing raw LaTeX commands, include trailing
  space (#1773).\n      Otherwise things like `\\noindent foo` break and turn into\n
  \     `\\noindentfoo`.  Affects `-f latex+raw_tex` and `-f markdown` (and other\n
  \     formats that allow `raw_tex`).\n    + Don't treat \"...\" as Quoted (#3958).
  \ This caused quotes to be omitted in\n      `\\texttt` contexts.\n    + Add tests
  for existing `\\includegraphics` behaviour (Ben Firshman).\n    + Allow space before
  `=` in bracketd options (Ben Firshman).\n    + Be more forgiving in parsing command
  options.  This was needed, for\n      example, to make some minted options work.\n
  \   + Strip off quotes in `\\include` filenames.\n\n  * Added `Text.Pandoc.CSV`,
  simple (unexported) CSV parser.\n\n  * `Text.Pandoc.PDF`:\n\n    + Got `--resource-path`
  working with PDF output (#852).\n    + Fetch images when generating PDF via context
  (#3380).\n      To do this, we create the temp directory as a subdirectory\n      of
  the working directory. Since context mk IV by default looks\n      for images in
  the parent directory, this works.\n    + Use `report` instead of `warn`, make it
  sensitive to verbosity settings.\n    + Use `fillMediaBag` and `extractMedia` to
  extract media to temp dir.\n      This reduces code duplication.\n    + `html2pdf`:
  use stdin instead of intermediate HTML file\n    + Removed useless `TEXINPUTS` stuff
  for `context2pdf`.  mkiv context\n      doesn't use `TEXINPUTS`.\n\n  * `Text.Pandoc.Pretty`:\n\n
  \   + Simplified definition of `realLength`.\n    + Don't error for blocks of size
  < 1.  Instead, resize to 1 (see #1785).\n\n  * `Text.Pandoc.MIME`:\n\n    + Use
  `application/javascript` (not `application/x-javascript`).\n    + Added `emf` to
  mimeTypes with type `application/x-msmetafile` (#1713).\n\n  * `Text.Pandoc.ImageSize`:\n\n
  \   + Improve SVG image size code (Marc Schreiber, #3580).\n    + Make `imageSize`
  recognize basic SVG dimensions (Mauro Bieg, #3462).\n\n  * Use `Control.Monad.State.Strict`
  throughout.  This gives 20-30% speedup\n    and reduction of memory usage in most
  of the writers.\n\n  * Use `foldrWithKey` instead of deprecated `foldWithKey`.\n\n
  \ * `Text.Pandoc.SelfContained`:\n\n    + Fixed problem with embedded fonts (#3629).\n
  \   + Refactored getData from `getDataURI` in `SelfContained`.\n    + Don't use
  data URIs for script or style (#3423).  Instead, just use\n      script or style
  tags with the content inside.  The old method with\n      data URIs prevents certain
  optimizations outside pandoc.  Exception:\n      data URIs are still used when a
  script contains `</script>` or a\n      style contains `</`.\n    + SelfContained:
  Handle URL inside material retrieved from a URL\n      (#3629).  This can happen
  e.g. with an @import of a google web font.\n      (What is imported is some CSS
  which contains an url reference\n      to the font itself.) Also, allow unescaped
  pipe (|) in URL.\n    + Load resources from `data-src` (needed for lazy loading
  in\n      reveal.js slide shows).\n    + Handle `data-background-image` attribute
  on section (#3979).\n\n  * `Text.Pandoc.Parsing`:\n\n    + Added `indentWith` (Alexander
  Krotov, #3687).\n    + Added `stateCitations` to `ParserState`.\n    + Removed `stateChapters`
  from `ParserState`.\n    + In `ParserState`, make `stateNotes'` a Map, add `stateNoteRefs`.\n
  \   + Added `gobbleSpaces` and `gobbleAtMostSpaces`.\n    + Adjusted type of `insertIncludedFile`
  so it can be used with token\n      parser.\n    + Replace old texmath macro stuff
  from Parsing.  Use Macro from\n      Text.Pandoc.Readers.LaTeX.Types instead.\n
  \   + Export `insertIncludedFile`.\n    + Added `HasLogMessages`, `logMessage`,
  `reportLogMessages` (#3447).\n    + Replace partial with total function (Albert
  Krewinkel).\n    + Introduce `HasIncludeFiles` type class (Albert Krewinkel).  The\n
  \     `insertIncludeFile` function is generalized to work with all parser\n      states
  which are instances of that class.\n    + Add `insertIncludedFilesF` which returns
  F blocks (Albert Krewinkel).\n      The `insertIncludeFiles` function was generalized
  and renamed\n      to `insertIncludedFiles'`; the specialized versions are based
  on that.\n    + `many1Till`: Check for the end condition before parsing (Herwig\n
  \     Stuetz).  By not checking for the end condition before the first\n      parse,
  the parser was applied too often, consuming too much of the\n      input. This only
  affects `many1Till p end` where `p` matches on a\n      prefix of `end`.\n    +
  Provide `parseFromString` (#3690).  This is a version of\n      `parseFromString`
  specialied to ParserState, which resets\n      `stateLastStrPos` at the end.  This
  is almost always what we want.\n      This fixes a bug where `_hi_` wasn't treated
  as emphasis in the\n      following, because pandoc got confused about the position
  of the\n      last word: `- [o] _hi_`.\n    + Added `takeP`, `takeWhileP` for efficient
  parsing of `[Char]`.\n    + Fix `blanklines` documentation (Alexander Krotov, #3843).\n
  \   + Give less misleading line information with `parseWithString`.\n      Previously
  positions would be reported past the end of the chunk.\n      We now reset the source
  position within the chunk and report\n      positions \"in chunk.\"\n    + Add `anyLineNewline`
  (Alexander Krotov).\n    + Provide shared F monad functions for Markdown and Org
  readers\n      (Albert Krewinkel).  The `F` monads used for delayed evaluation\n
  \     of certain values in the Markdown and Org readers are based on a\n      shared
  data type capturing the common pattern of both `F` types.\n    + Add `returnF` (Alexander
  Krotov).\n    + Avoid parsing `Notes:**` as a bare URI (#3570).  This avoids parsing\n
  \     bare URIs that start with a scheme + colon + `*`, `_`, or `]`.\n    + Added
  `readerAbbreviations` to `ParserState`.  Markdown reader\n      now consults this
  to determine what is an abbreviation.\n    + Combine grid table parsers (Albert
  Krewinkel, #3638).  The grid table\n      parsers for markdown and rst was combined
  into one single\n      parser `gridTable`, slightly changing parsing behavior of
  both\n      parsers: (1) The markdown parser now compactifies block content\n      cell-wise:
  pure text blocks in cells are now treated as paragraphs\n      only if the cell
  contains multiple paragraphs, and as plain blocks\n      otherwise. Before, this
  was true only for single-column tables. (2)\n      The rst parser now accepts newlines
  and multiple blocks in header\n      cells.\n    + Generalize tableWith, gridTableWith
  (Albert Krewinkel).\n      The parsing functions `tableWith` and `gridTableWith`
  are generalized\n      to work with more parsers. The parser state only has to be
  an\n      instance of the `HasOptions` class instead of requiring a concrete\n      type.
  Block parsers are required to return blocks wrapped into a\n      monad, as this
  makes it possible to use parsers returning results\n      wrapped in `Future`s.\n\n
  \ * `Text.Pandoc.Shared`:\n\n    + Simplify `toRomanNumeral` using guards (Alexander
  Krotov, #3445)\n    + `stringify`: handle Quoted better (#3958).  Previously we
  were losing\n      the quotation marks in Quoted elements.\n\n  * `Text.Pandoc.Writers.Shared`:\n\n
  \   + Export `metaToJSON'`, `addVariablesToJSON` (#3439).\n      This allows us
  to add the variables AFTER using the metadata\n      to generate a YAML header (in
  the Markdown writer).\n    + Added `unsmartify` (previously in RST writer).\n      Undo
  literal double curly quotes.  Previously we left these.\n    + Generalize type of
  `metaToJSON` so it can take a Text.  Previously a\n      String was needed as argument;
  now any ToJSON instance will do.\n    + Added `gridTable` (previously in Markdown
  writer).\n    + `gridTable`: Refactored to use widths in chars.\n    + `gridTable`:
  \ remove unnecessary extra space in cells.\n    + Fixed `addVariablesToJSON`.  It
  was previously not allowing multiple\n      values to become lists.\n    + Pipe
  tables: impose minimum cell size (see #3526).\n\n\n### Default template changes\n\n
  \ * HTML templates (including EPUB and HTML slide show templates):\n\n    + Make
  default.html5 polyglot markup conformant (John Luke Bentley,\n      #3473).  Polyglot
  markup is HTML5 that is also valid XHTML. See\n      <https://www.w3.org/TR/html-polyglot>.
  \ With this change, pandoc's\n      html5 writer creates HTML that is both valid
  HTML5 and valid XHTML.\n    + Regularized CSS in html/epub/html slide templates
  (#3485).\n      All templates now include `code{white-space: pre-wrap}`\n      and
  CSS for `q` if `--html-q-tags` is used.  Previously some templates\n      had `pre`
  and others `pre-wrap`; the `q` styles were only sometimes\n      included.\n    +
  CSS for `.smallcaps`, (Mauro Bieg, #1592)\n    + `default.revealjs`: make `history`
  default to true.\n    + `default.revealjs`: use lazy loading (#2283).\n    + `default.revealjs`:
  add `mathjax` variable and some conditional code\n      to use the MathJaX plugin.\n
  \   + `default.slidy` uses `https` instead of `http` (ickc, #3848).\n    + `default.dzslides`:
  Load Google Font using HTTPS by default\n      (Yoan Blanc).\n\n  * DocBook5 template:
  Use `lang` and `subtitle` variables (Jens Getreu,\n    #3855).\n\n  * LaTeX/Beamer
  template:\n\n    + Combine LaTeX/Beamer templates (Andrew Dunning, #3878).\n      `default.beamer`
  has been removed; beamer now uses the\n      `default.latex` template.  Beamer-specific
  parts are conditional\n      on the `beamer` variable set by the writer. Note that\n
  \     `pandoc -D beamer` will return this (combined) template.\n    + Use `xcolor`
  for `colorlinks` option (Andrew Dunning, #3877).\n      Beamer loads `xcolor` rather
  than `color`, and thus the\n      `dvipsnames` option doesn't take effect. This
  also provides a wider\n      range of colour selections with the `svgnames` option.\n
  \   + Use starred versions of `xcolor` names (Andrew Dunning).\n      Prevents changes
  to documents defined using the `dvipsnames` list (e.g.\n      `Blue` gives a different
  result with svgnames enabled).\n    + Load `polyglossia` after header-includes (#3898).
  \ It needs to be\n      loaded as late as possible.\n    + Use `unicode-math` (Vaclav
  Haisman).  Use `mathspec` with only\n      XeLaTeX on request.\n    + Don't load
  `fontspec` before `unicode-math` (over there).\n      The `unicode-math` package
  loads `fontspec` so explicit loading of\n      `fontspec` before `unicode-math`
  is not necessary.\n    + Use `unicode-math` by default in default.latex template.
  \ mathspec will\n      be used in xelatex if the `mathspec` variable is set; otherwise\n
  \     unicode-math will be used (V√°clav Haisman).\n    + Use `dvipsnames` options
  when `colorlinks` specified (otherwise\n      we get an error for `maroon`) (Thomas
  Hodgson).\n    + Added beamer `titlegraphic` and `logo` variables (Thomas Hodgson).\n
  \   + Fix typo in fix for notes in tables (#2378, zeeMonkeez).\n    + Fix `hyperref`
  options clash (Andrew Dunning, #3847) Avoids an options\n      clash when loading
  a package (e.g. `tufte-latex`) that uses\n      `hyperref` settings different from
  those in the template.\n    + Add `natbiboptions` variable (#3768).\n    + Fix links
  inside captions in LaTeX output with links-as-notes\n      (V√°clav Haisman, #3651).
  \ Declare our redefined `\\href` robust.\n    + Load `parskip` before `hyperref`
  (V√°clav Haisman, #3654).\n    + Allow setting Japanese fonts when using LuaLaTeX
  (V√°clav Haisman,\n      #3873).  by using the `luatexja-fontspec` and `luatexja-preset`\n
  \     packages. Use existing `CJKmainfont` and `CJKoptions` template\n      variables.
  Add `luatexjafontspecoptions` for `luatexja-fontspec`\n      and `luatexjapresetoptions`
  for `luatexja-preset`.\n    + Added `aspectratio` variable to beamer template (V√°clav
  Haisman,\n      #3723).\n    + Modified template.latex to fix XeLaTex being used
  with tables\n      (lwolfsonkin, #3661).  Reordered `lang` variable handling to\n
  \     immediately before `bidi`.\n\n  * ConTeXt template: Improved font handling:
  `simplefonts` is now\n    obsolete in ConTeXt (Pablo Rodr√≠guez).\n\n\n### Documentation
  improvements\n\n  * MANUAL.txt:\n\n    + Add URL for Prince HTML > PDF engine (Ian,
  #3919).\n    + Document that content above slide-level will be omitted in\n      slide
  shows.  See #3460, #2265.\n    + Explain `--webtex` SVG url (Mauro Bieg, #3471)\n
  \   + Small clarification in YAML metadata section.\n    + Document that html4 is
  technically XHTML 1.0 transitional.\n    + Remove refs to highlighting-kate (#3672).\n
  \   + Document ibooks specific epub metadata.\n    + Clarify that mathml is used
  for ODT math.\n    + Mention limitations of Literate Haskell Support (#3410,\n      Joachim
  Breitner).\n    + Add documentation of limitations of grid tables (Stephen\n      McDowell,
  #3864).\n    + Clarify that meta-json contains transformed values (Jakob Vo√ü,\n
  \     #3491) Make clear that template variable `meta-json` does not\n      contain
  plain text values or JSON output format but field values\n      transformed to the
  selected output format.\n\n  * COPYRIGHT:\n\n    + Clarify that templates are dual-licensed.\n
  \   + Clarify that pandoc-types is BSD3 licensed.\n    + List new files not written
  by jgm (Albert Krewinkel).\n    + Update dates in copyright notices (Albert Krewinkel).
  \ This follows\n      the suggestions given by the FSF for GPL licensed software.\n
  \     <https://www.gnu.org/prep/maintain/html_node/Copyright-Notices.html>\n\n  *
  INSTALL.md:\n\n    + Improved instructions for tests with patterns.\n    + Put RPM-based
  distros on separate point (Mauro Bieg, #3449)\n\n  * CONTRIBUTING.md:\n\n    + Fixed
  typos (Wandmalfarbe, #3479).\n    + Add \"ask on pandoc-discuss\" (Mauro Bieg).\n\n
  \ * Add lua filter documentation in `doc/lua-filters.md`.  Note that the\n    end
  of this document is autogenerated from `data/pandoc.lua`\n    using `make doc/lua-filters.md`,
  which uses `tools/ldoc.ltp`\n    (Albert Krewinkel).\n\n  * Add `doc/filters.md`.
  This is the old scripting tutorial from\n    the website.\n\n  * Add `doc/using-the-pandoc-api.md`
  (#3289).  This gives an introduction\n    to using pandoc as a Haskell library.\n\n\n###
  Build infrastructure improvements\n\n  * Removed `data/templates` submodule.  Templates
  are now a subtree\n    in `data/templates`.  This removes the need to do `git submodule\n
  \   update`.\n\n  * Renamed `tests` -> `test`.\n\n  * Remove `https` flag.  Always
  build with HTTPS support.\n\n  * Use `file-embed` instead of `hsb2hs` to embed data
  files when\n    `embed_data_files` flag is set.  `file-embed` gives us better dependency\n
  \   tracking:  if a data file changes, ghc/stack/cabal know to recompile\n    the
  Data module.  This also removes `hsb2hs` as a build dependency.\n\n  * Add `custom-setup`
  stanza to pandoc, lowercase field names.\n\n  * Add `static` Cabal flag.\n\n  *
  Name change OSX -> MacOS.  Add a -MacOS suffix to mac package rather\n    than -OSX.
  \ Changed local names from osx to macos.\n\n  * make_macos_package.sh - Use strip
  to reduce executable size.\n\n  * Revised binary linux package.  Now a completely
  static executable\n    is created, using Docker and alpine.  We create both a deb
  and a\n    tarball.  The old `deb` directory has been replaced with a `linux`\n
  \   directory.  Running `make` in the `linux` directory should\n    perform the
  build, putting the binary packages in `artifacts/`.\n\n  * `linux/control.in`: add
  `Replaces:`, so existing pandoc-citeproc and\n    pandoc-data packages will be uninstalled;
  this package provides\n    both (#3822).  Add latex packages as 'suggested', update\n
  \   description.\n\n  * Remove cpphs build requirement -- it is no longer needed.\n\n
  \ * Replaced `{deb,macos,windows}/stack.yaml` with `stack.pkg.yaml`.\n\n  * Name
  change OSX -> macOS (ickc, #3869).\n\n  * Fix casing of Linux, UNIX, and Windows
  (ickc).\n\n  * `.travis.yml`:  create a source dist and do cabal build and test
  there.\n    That way we catch errors due to files missing from the data\n    section
  of pandoc.cabal.\n\n  * Makefile:\n\n    + Split `make haddock` from `make full`.\n
  \   + Add BRANCH variable for winpkg.\n    + Add `lint` target.\n    + Improve `make
  full`. Disable optimizations.\n      Build everything, inc. trypandoc and benchmarks.
  \ Use parallel build.\n    + Allow `make test` to take `TESTARGS`.\n\n  * Added
  new command tests (`Tests.Command`), using small text files\n    in `test/command/`.
  \ Any files added in this directory will be treated\n    as shell tests (see smart.md
  for an example).  This makes it very easy\n    to add regression tests etc.\n\n
  \ * Test fixes so we can find data files.  In old tests & command tests,\n    we
  now set the environment variable `pandoc_datadir`.  In lua tests,\n    we set the
  datadir explicitly.\n\n  * Refactored `compareOutput` in docx writer test.\n\n  *
  Consolidated some common functions in `Tests.Helper`.\n\n  * Small change to unbalanced
  bracket test to speed up test suite.\n\n  * Speed up Native writer quickcheck tests.\n\n
  \ * Use tasty for tests rather than test-framework.\n\n  * Add simple Emacs mode
  to help with Pandoc templates editing.\n    (V√°clav Haisman, #3889). `tools/pandoc-template-mode.el`\n\n\n##
  pandoc 1.19.2.4 (2017-09-10)\n\n  * Add dependencies on texmath and skylighting
  to the executable.\n    This is needed for dependency version numbers to be available,\n
  \   with Cabal > 2.\n\n## pandoc 1.19.2.3 (2017-09-09)\n\n  * Add CPP to Setup.hs
  so it works with Cabal >= 2 and < 2.\n\n## pandoc 1.19.2.2 (2017-09-08)\n\n  * Fix
  build with GHC 8.2.1 (#3876, Peter Simons).  Setup.hs does not\n    compile with
  Cabal 2.x, so we require an earlier version via\n    setup-depends.  The following
  packages need newer versions with\n    GHC 8.2.1 and had their constraints relaxed
  accordingly:\n    executable-path, process, syb, and time.\n\n## pandoc 1.19.2.1
  (2017-01-31)\n\n  * Require skylighting >= 0.1.1.4.\n  * Adjust test output for
  skylighting version.\n  * Relax upper bounds on blaze-html and blaze-markup.\n\n##
  pandoc 1.19.2 (2017-01-29)\n\n  * Use skylighting library instead of highlighting-kate
  for syntax\n    highlighting. Skylighting is faster and more accurate (#3363).\n
  \   Later we'll be able to add features like warning messages, dynamic\n    loading
  of xml syntax definitions, and dynamic loading of themes.\n\n  * Added a new highlight
  style, `breezeDark`.\n\n  * Text.Pandoc.Highlighting: Update list of `listings`
  languages (#3374).\n    This allows more languages to be used when using the `--listings`\n
  \   option.\n\n  * OpenDocument writer:\n\n    + Small refactoring.  Removed separate
  'parent' parameter in paraStyle.\n    + Don't profilerate text styles unnecessarily
  (#3371).\n      This change makes the writer create only as many temporary\n      text
  styles as are absolutely necessary. It also consolidates\n      adjacent nodes with
  the same style.\n\n  * Org reader (Albert Krewinkel):\n\n    + Allow short hand
  for single-line raw blocks (Albert Krewinkel,\n      #3366).  Single-line raw blocks
  can be given via `#+FORMAT: raw line`,\n      where `FORMAT` must be one of `latex`,
  `beamer`, `html`, or `texinfo`.\n    + Accept org-ref citations followed by commas
  (Albert Krewinkel).\n      Bugfix for an issue which, whenever the citation was
  immediately\n      followed by a comma, prevented correct parsing of org-ref citations.\n
  \   + Ensure emphasis markup can be nested.  Nested emphasis markup (e.g.\n      `/*strong
  and emphasized*/`) was interpreted incorrectly in that the\n      inner markup was
  not recognized.\n    + Remove pipe char irking the haddock coverage tool (Albert
  Krewinkel).\n\n  * Docx reader: Empty header should be list of lists (Jesse Rosenthal).\n
  \   In the past, the docx reader wrote an empty header as an empty list. It\n    should
  have the same width as a row (and be filled with empty cells).\n\n  * MediaWiki
  reader:\n\n    + Improved handling of display math (#3362).  Sometimes display math
  is\n      indented with more than one colon.  Previously we handled these cases\n
  \     badly, generating definition lists and missing the math.\n    + Fix quotation
  mark parsing (#3336, tgkokk).  Change MediaWiki reader's\n      behavior when the
  smart option is parsed to match other readers'\n      behavior.\n\n  * Markdown
  reader:\n\n    + Fixed `-f markdown_github-hard_line_breaks+escaped_line_breaks`\n
  \     (#3341).  Previously this did not properly enable escaped line breaks.\n    +
  Disallow space between inline code and attributes (#3326, #3323,\n      Mauro Bieg).\n\n
  \ * DocBook5 writer: make id attribute xml:id, fixes #3329 (#3330, Mauro Bieg).\n\n
  \ * Added some test cases for ODT reader (#3306, #3308, Hubert Plociniczak).\n\n
  \ * LaTeX writer: allow tables with empty cells to count as \"plain.\"\n    This
  addresses a problem of too-wide tables when empty cells\n    are used.  Thanks to
  Joost Kremers for reporting the issue.\n\n  * Org writer: prefix footnote numbers
  with `fn:` (Albert Krewinkel).\n    Unprefixed numbers where used by older org-mode
  versions, but are no\n    longer supported.\n\n  * HTML writer: don't process pars
  with empty RawInline, (#1040, #3327,\n    Mauro Bieg).\n\n  * Markdown writer: Fix
  display math with `--webtex` (#3298).\n\n  * Fix sample.lua so it properly handles
  raw blocks/inlines (#3358,\n    bumper314).\n\n  * Templates:\n\n    + default.latex:
  Moved geometry after hyperref (V√°clav Haisman).\n      Otherwise PDF sizes can be
  wrong in some circumstances.\n    + Copied a few changes from default.latex to default.beamer\n
  \     (Wandmalfarbe).\n    + default.latex, default.beamer: Changed position of
  `\\VerbatimNotes`\n      and `fancyvrb`.  This fixes hyperlinks on footnotes in
  documents\n      that contain verbatim in notes (#3361).  (Note: the beamer template\n
  \     was updated to match the LaTeX template, but at this point verbatim\n      in
  notes seems not to work in beamer.)\n    + default.latex: Allow passing `microtypeoptions`
  to microtype\n      (V√°clav Haisman).\n    + default.latex: Add hyphen option to
  url package.\n    + default.docbook5: Fix namespace declarations (Mauro Bieg).\n\n
  \ * Moved `make_osx_package.sh` to `osx/` directory.\n\n  * Travis continuous integration:\n\n
  \   + Fix false positives with dist build.\n    + Speed improvements (Kolen Cheung,
  #3304, #3357).\n\n  * MANUAL.txt:\n\n    + Clarify that blank space is needed around
  footnotes (#3352).\n    + Fixed typo (#3351, Alexey Rogechev).\n    + Note that
  `--wrap=auto` does not work in HTML output.\n    + Default `--columns` width is
  72, not 80.\n    + Fixed broken links (#3316, Kolen Cheung).\n    + Document usage
  of `@*` in nocite section (#3333, John Muccigrosso).\n\n  * INSTALL.md:\n\n    +
  Indent code so it's properly formatted (#3335, Bheesham Persaud).\n    + Added instructions
  for extracting binary from OSX, Windows packages.\n\n  * CONTRIBUTING.md: Describe
  labels currently used in issue tracker\n    (Albert Krewinkel).  The labels have
  changed over time, the list of\n    labels is updated to reflect the current set
  of labels used in the\n    issue tracker.\n\n  * Rearrange and extend badges in
  README (Albert Krewinkel, #3354)\n\n  * Bumped version bounds for dependencies.\n\n\n##
  pandoc 1.19.1 (2016-12-10)\n\n  * Set `PANDOC_VERSION` environment variable for
  filters (#2640).\n    This allows filters to check the pandoc version that produced\n
  \   the JSON they are receiving.\n\n  * Docx reader: Ensure one-row tables don't
  have header (#3285,\n    Jesse Rosenthal).  Tables in MS Word are set by default
  to have\n    special first-row formatting, which pandoc uses to determine whether\n
  \   or not they have a header. This means that one-row tables will, by\n    default,
  have only a header -- which we imagine is not what people\n    want. This change
  ensures that a one-row table is not understood to\n    be a header only.  Note that
  this means that it is impossible to\n    produce a header-only table from docx,
  even though it is legal\n    pandoc. But we believe that in nearly all cases, it
  will be an\n    accidental (and unwelcome) result\n\n  * HTML reader:\n\n    + Fixed
  some bad regressions in HTML table parser (#3280).\n      This regression leads
  to the introduction of empty rows\n      in some circumstances.\n    + Understand
  `style=width:` as well as `width` in `col` (#3286).\n\n  * RST reader:\n\n    +
  Print warnings when keys, substitition, notes not found.\n      Previously the parsers
  failed and we got raw text.  Now we get a\n      link with an empty URL, or empty
  inlines in the case of a note or\n      substitution.\n\n    + Fix hyperlink aliases
  (#3283).\n\n  * Man writer: Ensure that periods are escaped at beginning of line\n
  \   (#3270).\n\n  * LaTeX writer: Fix unnumbered headers when used with `--top-level`\n
  \   (#3272, Albert Krewinkel). Fix interaction of top-level\n    divisions `part`
  or `chapter` with unnumbered headers when\n    emitting LaTeX. Headers are ensured
  to be written using\n    stared commands (like `\\subsection*{}`).\n\n  * LaTeX
  template: use comma not semicolon to separate keywords for\n    `pdfkeywords`.  Thanks
  to Wandmalfarbe.\n\n  * Markdown writer: Fixed incorrect word wrapping (#3277).\n
  \   Previously pandoc would sometimes wrap lines too early due to\n    this bug.\n\n
  \ * Text.Pandoc.Pretty:  Added `afterBreak` [API change].  This makes it\n    possible
  to insert escape codes for content that needs escaping at the\n    beginning of
  a line.\n\n  * Removed old MathMLInHTML.js from 2004, which should no longer\n    be
  needed for MathML with modern browsers.\n\n  * Fixed tests with dynamic linking
  (#2709).\n\n  * Makefile: Use stack instead of cabal for targets.  This is just\n
  \   a convenience for developers.\n\n  * Fixed bash completion of filenames with
  space (#2749).\n\n  * MANUAL: improved documentation on how to create a custom\n
  \   `reference.docx`.\n\n  * Fix minor spelling typos in the manual (#3273, Anthony
  Geoghegan)\n\n## pandoc 1.19 (2016-12-01)\n\n  * Changed resolution of filter paths.\n\n
  \   + We now first treat the argument of `--filter` as a full (absolute\n      or
  relative) path, looking for a program there. If it's found, we\n      run it.\n
  \   + If not, and if it is a simple program name or a relative path, we\n      try
  resolving it relative to `$DATADIR/filters`.\n    + If this fails, then we treat
  it as a program name and look in the\n      user's PATH.\n    + Removed a hardcoded
  '/' that may have caused problems with\n      Windows paths.\n\n    Previously if
  you did `--filter foo` and you had `foo` in your path and\n    also an executable
  `foo` in your working directory, the one in the path\n    would be used. Now the
  one in the working directory is used.\n\n    In addition, when you do `--filter
  foo/bar.hs`, pandoc will now find a\n    filter `$DATADIR/filters/foo/bar.hs` --
  assuming there isn't a\n    `foo/bar.hs` relative to the working directory.\n\n
  \ * Allow `file://` URIs as arguments (#3196). Also improved default reader\n    format
  detection. Previously with a URI ending in .md or .markdown,\n    pandoc would assume
  HTML input. Now it treats these as markdown.\n\n  * Allow to overwrite top-level
  division type heuristics (#3258,\n    Albert Krewinkel). Pandoc uses heuristics
  to determine the most\n    reasonable top-level division type when emitting LaTeX
  or\n    Docbook markup. It is now possible to overwrite this implicitly set\n    top-level
  division via the `top-level-division` command line parameter.\n\n  * Text.Pandoc.Options
  \\[API changes\\]:\n\n    + Removed `writerStandalone` field in `WriterOptions`,
  made\n      `writerTemplate` a `Maybe` value. Previously setting\n      `writerStandalone
  = True` did nothing unless a template was provided\n      in writerTemplate. Now
  a fragment will be generated if\n      `writerTemplate` is `Nothing`; otherwise,
  the specified template\n      will be used and standalone output generated.\n    +
  `Division` has been renamed `TopLevelDivision` (#3197). The\n      `Section`, `Chapter`,
  and `Part` constructors were renamed to\n      `TopLevelSection`, `TopLevelChapter`,
  and\n      `TopLevelPart`, respectively. An additional `TopLevelDefault`\n      constructor
  was added, which is now also the new default value of\n      the `writerTopLevelDivision`
  field in `WriterOptions`.\n\n  * Improved error if they give wrong arg to `--top-level-division`.\n\n
  \ * Use new module from texmath to lookup MS font codepoints in Docx reader.\n    Removed
  unexported module Text.Pandoc.Readers.Docx.Fonts. Its code now\n    lives in texmath
  (0.9).\n\n  * DocBook reader: Fixed xref lookup (#3243). It previously only worked\n
  \   when the qnames lacked the docbook namespace URI.\n\n  * HTML reader:\n\n    +
  Improved table parsing (#3027). We now check explicitly for non-1\n      rowspan
  or colspan attributes, and fail when we encounter them.\n      Previously we checked
  that each row had the same number of cells,\n      but that could be true even with
  rowspans/colspans. And there are\n      cases where it isn't true in tables that
  we can handle fine -- e.g.\n      when a tr element is empty. So now we just pad
  rows with empty cells\n      when needed.\n    + Treat `<math>` as MathML by default
  unless something else is\n      explicitly specified in xmlns. Provided it parses
  as MathML,\n      of course. Also fixed default which should be to inline math if
  no\n      display attribute is used.\n    + Only treat \"a\" element as link if
  it has href (#3226). Otherwise\n      treat as span.\n\n  * Docx reader (Jesse Rosenthal):\n\n
  \   + Add a placeholder value for CHART. We wrap `[CHART]` in a\n      `<span class=\"chart\">`.
  Note that it maps to inlines because, in\n      docx, anything in a drawing tag
  can be part of a larger paragraph.\n    + Be more specific in parsing images We
  not only want `w:drawing`,\n      because that could also include charts. Now we
  specify\n      `w:drawing/pic:pic`. This shouldn't change behavior at all, but it's\n
  \     a first step toward allowing other sorts of drawing data as well.\n    + Abstract
  out function to avoid code repetition.\n    + Update tests for img title and alt
  (#3204).\n    + Handle Alt text and titles in images. We use the \"description\"
  field\n      as alt text and the \"title\" field as title. These can be accessed\n
  \     through the \"Format Picture\" dialog in Word.\n    + Docx reader utils: handle
  empty namespace in `elemName`. Previously,\n      if given an empty namespace `(elemName
  ns \"\" \"foo\")` `elemName`\n      would output a QName with a `Just \"\"` namespace.
  This is never what\n      we want. Now we output a `Nothing`. If someone *does*
  want a\n      `Just \"\"` in the namespace, they can enter the QName\n      value
  explicitly.\n\n  * ODT reader/writer:\n\n    + Inline code when text has a special
  style (Hubert Plociniczak). When\n      a piece of text has a text `Source_Text`
  then we assume that this is\n      a piece of the document that represents a code
  that needs to\n      be inlined. Adapted the writer to also reflect that change.\n
  \     Previously it was just writing a 'preformatted' text using a\n      non-distinguishable
  font style. Code blocks are still not recognized\n      by the ODT reader. That's
  a separate issue.\n    + Infer table's caption from the paragraph (#3224,\n      Hubert
  Plociniczak). ODT's reader always put empty captions for the\n      parsed tables.
  This commit\n\n        1.  checks paragraphs that follow the table definition\n
  \       2.  treats specially a paragraph with a style named 'Table'\n        3.
  \ does some postprocessing of the paragraphs that combines tables\n            followed
  immediately by captions\n\n      The ODT writer used the `TableCaption` style for
  the caption\n      paragraph.  This commit follows the OpenOffice approach which
  allows\n      for appending captions to table but uses a built-in style named\n
  \     `Table` instead of `TableCaption`. Users of a custom `reference.odt`\n      should
  change the style's name from `TableCaption` to `Table`.\n\n  * ODT reader: Infer
  tables' header props from rows (#3199,\n    Hubert Plociniczak). ODT reader simply
  provided an empty header list\n    which meant that the contents of the whole table,
  even if not empty, was\n    simply ignored. While we still do not infer headers
  we at least have to\n    provide default properties of columns.\n\n  * Markdown
  reader:\n\n    +   Allow reference link labels starting with `@...` if `citations`\n
  \       extension disabled (#3209). Example: in\n\n            \\[link text\\]\\[@a\\]\n\n
  \       `link text` isn't hyperlinked because `[@a]` is parsed as\n        a citation.
  Previously this happened whether or not the `citations`\n        extension was enabled.
  Now it happens only if the `citations`\n        extension is enabled.\n    +   Allow
  alignments to be specified in Markdown grid tables. For\n        example,\n\n            +-------+---------------+--------------------+\n
  \           | Right    | Left                 | Centered |\n            +=========:+:=================+:=============:+\n
  \           | Bananas | $1.34         | built-in wrapper |\n            +-------+---------------+--------------------+\n\n
  \   +   Allow Small Caps elements to be created using bracketed spans (as\n        they
  already can be using HTML-syntax spans) (#3191, Kolen Cheung).\n\n  * LaTeX reader:\n\n
  \   + Don't treat `\\vspace` and `\\hspace` as block commands (#3256).\n      Fixed
  an error which came up, for example, with `\\vspace` inside\n      a caption. (Captions
  expect inlines.)\n    + Improved table handling. We can now parse all of the tables
  emitted\n      by pandoc in our tests. The only thing we don't get yet are\n      alignments
  and column widths in more complex tables. See #2669.\n    + Limited support for
  minipage.\n    + Allow for `[]`s inside LaTeX optional args. Fixes cases like:\n
  \   + Handle BVerbatim from fancyvrb (#3203).\n    + Handle hungarumlaut (#3201).\n
  \   + Allow beamer-style `<...>` options in raw LaTeX (also in Markdown)\n      (#3184).
  This allows use of things like `\\only<2,3>{my content}` in\n      Markdown that
  is going to be converted to beamer.\n\n  * Use pre-wrap for code in dzslides template
  (Nicolas Porcel). Otherwise\n    overly long code will appear on every slide.\n\n
  \ * Org reader (Albert Krewinkel):\n\n    +   Respect column width settings (#3246).
  Table column properties can\n        optionally specify a column's width with which
  it is displayed in\n        the buffer. Some exporters, notably the ODT exporter
  in org-mode\n        v9.0, use these values to calculate relative column widths.
  The org\n        reader now implements the same behavior. Note that the org-mode\n
  \       LaTeX and HTML exporters in Emacs don't support this feature yet,\n        which
  should be kept in mind by users who use the column\n        widths parameters.\n
  \   +   Allow HTML attribs on non-figure images (#3222). Images which are\n        the
  only element in a paragraph can still be given HTML attributes,\n        even if
  the image does not have a caption and is hence not a figure.\n        The following
  will add set the `width` attribute of the image to\n        `50%`:\n\n            +ATTR\\_HTML:
  :width 50%\n            =======================\n\n            \\[\\[file:image.jpg\\]\\]\n\n
  \   +   Support `ATTR_HTML` for special blocks (#3182). Special\n        blocks
  (i.e. blocks with unrecognized names) can be prefixed with an\n        `ATTR_HTML`
  block attribute. The attributes defined in that\n        meta-directive are added
  to the `Div` which is used to represent the\n        special block.\n    +   Support
  the `todo` export option. The `todo` export option allows to\n        toggle the
  inclusion of TODO keywords in the output. Setting this to\n        `nil` causes
  TODO keywords to be dropped from headlines. The default\n        is to include the
  keywords.\n    +   Add support for todo-markers. Headlines can have optional\n        todo-markers
  which can be controlled via the `#+TODO`, `#+SEQ_TODO`,\n        or `#+TYP_TODO`
  meta directive. Multiple such directives can be\n        given, each adding a new
  set of recognized todo-markers. If no\n        custom todo-markers are defined,
  the default `TODO` and `DONE`\n        markers are used. Todo-markers are conceptually
  separate from\n        headline text and are hence excluded when autogenerating\n
  \       headline IDs. The markers are rendered as spans and labelled with\n        two
  classes: One class is the markers name, the other signals the\n        todo-state
  of the marker (either `todo` or `done`).\n\n  * LaTeX writer:\n\n    + Use `\\autocites*`
  when \"suppress-author\" citation used.\n    + Ensure that simple tables have simple
  cells (#2666). If cells\n      contain more than a single Plain or Para, then we
  need to set\n      nonzero widths and put contents into minipages.\n    + Remove
  invalid inlines in sections (#3218, Hubert Plociniczak).\n\n  * Markdown writer:\n\n
  \   + Fix calculation of column widths for aligned multiline tables\n      (#1911,
  Bj√∂rn Peem√∂ller). This also fixes excessive CPU and memory\n      usage for tables
  when `--columns` is set in such a way that cells\n      must be very tiny. Now cells
  are guaranteed to be big enough so that\n      single words don't need to line break,
  even if this pushes the line\n      length above the column width.\n    + Use bracketed
  form for native spans when `bracketed_spans`\n      enabled (#3229).\n    + Fixed
  inconsistent spacing issue (#3232). Previously a tight bullet\n      sublist got
  rendered with a blank line after, while a tight ordered\n      sublist did not.
  Now we don't get the blank line in either case.\n    + Fix escaping of spaces in
  super/subscript (#3225). Previously two\n      backslashes were inserted, which
  gave a literal backslash.\n    + Adjust widths in Markdown grid tables so that they
  match\n      on round-trip.\n\n  * Docx writer:\n\n    + Give full detail when there
  are errors converting tex math.\n    + Handle title text in images (Jesse Rosenthal).
  We already handled\n      alt text. This just puts the image \"title\" into the
  docx\n      \"title\" attr.\n    + Fixed XML markup for empty cells (#3238). Previously
  the Compact\n      style wasn't being applied properly to empty cells.\n\n  * HTML
  writer:\n\n    + Updated `renderHtml` import from blaze-html.\n\n  * Text.Pandoc.Pretty:\n\n
  \   + Fixed some bugs that caused blank lines in tables (#3251). The bugs\n      caused
  spurious blank lines in grid tables when we had things like\n      `blankline $$
  blankline`.\n    + Add exported function `minOffet` \\[API change\\] (Bj√∂rn Peem√∂ller).\n
  \   + Added error message for illegal call to `block` (Bj√∂rn Peem√∂ller).\n\n  *
  Text.Pandoc.Shared:\n\n    + Put `warn` in MonadIO.\n    + `fetchItem`: Better handling
  of protocol-relative URL (#2635). If\n      URL starts with `//` and there is no
  \"base URL\" (as there would be\n      if a URL were used on the command line),
  then default to http:.\n\n  * Export Text.Pandoc.getDefaultExtensions \\[API change\\]
  (#3178).\n\n  * In --version, trap error in `getAppUserDataDirectory` (#3241). This\n
  \   fixes a crash with `pandoc --version` on unusual systems with no real\n    user
  (e.g. SQL Server 2016).\n\n  * Added weigh-pandoc for memory usage diagnostics (#3169).\n\n
  \ * Use correct mime types for woff and woff2 (#3228).\n\n  * Remove make\\_travis\\_yml.hs
  (#3235, Kolen Cheung).\n\n  * changelog: Moved an item that was misplaced in the
  1.17.2 section to the\n    1.18 section where it belongs.\n\n  * CONTRIBUTING.md:
  minor change in wording and punctuation (#3252,\n    Kolen Cheung).\n\n  * Further
  revisions to manual for `--version` changes (#3244).\n\n\n\n## pandoc 1.18 (2016-10-26)\n\n
  \ * Added `--list-input-formats`, `--list-output-formats`,\n    `--list-extensions`,
  `--list-highlight-languages`, and\n    `--list-highlight-styles` (#3173).  Removed
  list of highlighting\n    languages from `--version` output.  Removed list of input
  and output\n    formats from default `--help` output.\n\n  * Added `--reference-location=block|section|document`
  option\n    (Jesse Rosenthal).  This determines whether Markdown link references\n
  \   and footnotes are placed at the end of the document, the end of the\n    section,
  or the end of the top-level block.\n\n  * Added `--top-level-division=section|chapter|part`
  (Albert Krewinkel).\n    This determines what a level-1 header corresponds to in
  LaTeX,\n    ConTeXt, DocBook, and TEI output.  The default is `section`.\n    The
  `--chapters` option has been deprecated in favor of\n    `--top-level-division=chapter`.\n\n
  \ * Added `LineBlock` constructor for `Block` (Albert Krewinkel).  This\n    is
  now used in parsing RST and Markdown line blocks, DocBook\n    `linegroup`/`line`
  combinations, and Org-mode `VERSE` blocks.\n    Previously `Para` blocks with hard
  linebreaks were used.  `LineBlock`s\n    are handled specially in the following
  output formats: AsciiDoc\n    (as `[verse]` blocks), ConTeXt (`\\startlines`/`\\endlines`),\n
  \   HTML (`div` with a style), Markdown (line blocks if `line_blocks`\n    is enabled),
  Org-mode (`VERSE` blocks), RST (line blocks). In\n    other output formats, a paragraph
  with hard linebreaks is emitted.\n\n  * Allow binary formats to be written to stdout
  (but not to tty) (#2677).\n    Only works on posix, since we use the unix library
  to check whether\n    output is to tty.  On Windows, pandoc works as before and
  always requires\n    an output file parameter for binary formats.\n\n  * Changed
  JSON output format (Jesse Rosenthal).  Previously we used\n    generically generated
  JSON, but this was subject to change depending\n    on the version of aeson pandoc
  was compiled with.  To ensure stability,\n    we switched to using manually written
  ToJSON and FromJSON\n    instances, and encoding the API version.  **Note:**  pandoc
  filter\n    libraries will need to be revised to handle the format change.\n    Here
  is a summary of the essential changes:\n\n    + The toplevel JSON format is now
  `{\"pandoc-api-version\" :\n      [MAJ, MIN, REV], \"meta\" : META, \"blocks\":
  BLOCKS}`\n      instead of `[{\"unMeta\": META}, [BLOCKS]]`.\n      Decoding fails
  if the major and minor version numbers don't\n      match.\n    + Leaf nodes no
  longer have an empty array for their \"c\" value.\n      Thus, for example, a `Space`
  is encoded as `{\"t\":\"Space\"}`\n      rather than `{\"t\":\"Space\",\"c\":[]}`
  as before.\n\n  * Removed `tests/Tests/Arbitrary.hs` and added a `Text.Pandoc.Arbitrary`\n
  \   module to pandoc-types (Jesse Rosenthal).  This makes it easier\n    to use
  QuickCheck with pandoc types outside of pandoc itself.\n\n  * Add `bracketed_spans`
  Markdown extension, enabled by default\n    in pandoc `markdown`.  This allows you
  to create a native span\n    using this syntax:  `[Here is my span]{#id .class key=\"val\"}`.\n\n
  \ * Added `angle_brackets_escapable` Markdown extension (#2846).\n    This is needed
  because github flavored Markdown has a slightly\n    different set of escapable
  symbols than original Markdown;\n    it includes angle brackets.\n\n  * Export `Text.Pandoc.Error`
  in `Text.Pandoc` [API change].\n\n  * Print highlighting-kate version in `--version`.\n\n
  \ * `Text.Pandoc.Options`:\n\n    + `Extension` has new constructors `Ext_brackted_spans`
  and\n      `Ext_angle_brackets_escapable` [API change].\n    + Added `ReferenceLocation`
  type [API change] (Jesse Rosenthal).\n    + Added `writerReferenceLocation` field
  to `WriterOptions` (Jesse\n      Rosenthal).\n\n  * `--filter`:  we now check `$DATADIR/filters`
  for filters before\n    looking in the path (#3127, Jesse Rosenthal, thanks to Jakob\n
  \   Vo√ü for the idea).  Filters placed in this directory need not\n    be executable;
  if the extension is `.hs`, `.php`, `.pl`, `.js`,\n    or `.rb`, pandoc will run
  the right interpreter.\n\n  * For `--webtex`, replace deprecated Google Chart API
  by CodeCogs as\n    default (Kolen Cheung).\n\n  * Removed `raw_tex` extension from
  `markdown_mmd` defaults (Kolen Cheung).\n\n  * Execute .js filters with node (Jakob
  Vo√ü).\n\n  * Textile reader:\n\n    + Support `bc..` extended code blocks (#3037).
  \ Also, remove trailing\n      newline in code blocks (consistently with Markdown
  reader).\n    + Improve table parsing.  We now handle cell and row attributes, mostly\n
  \     by skipping them.  However, alignments are now handled properly.\n      Since
  in pandoc alignment is per-column, not per-cell, we\n      try to devine column
  alignments from cell alignments.\n      Table captions are also now parsed, and
  textile indicators\n      for thead and tfoot no longer cause parse failure.  (However,\n
  \     a row designated as tfoot will just be a regular row in pandoc.)\n    + Improve
  definition list parsing.  We now allow multiple terms\n      (which we concatenate
  with linebreaks).  An exponential parsing\n      bug (#3020) is also fixed.\n    +
  Disallow empty URL in explicit link (#3036).\n\n  * RST reader:\n\n    + Use Div
  instead of BlockQuote for admonitions (#3031).\n      The Div has class `admonition`
  and (if relevant) one of the\n      following:  `attention`, `caution`, `danger`,
  `error`, `hint`,\n      `important`, `note`, `tip`, `warning`.  **Note:** This will
  change\n      the rendering of some RST documents!  The word (\"Warning\", \"Attention\",\n
  \     etc.) is no longer added; that must be done with CSS or a filter.\n    + A
  Div is now used for `sidebar` as well.\n    + Skip whitespace before note (Jesse
  Rosenthal, #3163).  RST requires a\n      space before a footnote marker. We discard
  those spaces so that footnotes\n      will be adjacent to the text that comes before
  it. This is in line with\n      what rst2latex does.\n    + Allow empty lines when
  parsing line blocks (Albert Krewinkel).\n\n  * Markdown reader:\n\n    + Allow empty
  lines when parsing line blocks (Albert Krewinkel).\n    + Allow attributes on autolinks
  (#3183, Daniele D'Orazio).\n\n  * LaTeX reader:\n\n    + More robust parsing of
  unknown environments (#3026).\n      We no longer fail on things like `^` inside
  options for tikz.\n    + Be more forgiving of non-standard characters, e.g. `^`
  outside of math.\n      Some custom environments give these a meaning, so we should
  try not to\n      fall over when we encounter them.\n    + Drop duplicate `*` in
  bibtexKeyChars (Albert Krewinkel)\n\n  * MediaWiki reader:\n\n    + Fix for unquoted
  attribute values in mediawiki tables (#3053).\n      Previously an unquoted attribute
  value in a table row\n      could cause parsing problems.\n    + Improved treatment
  of verbatim constructions (#3055).\n      Previously these yielded strings of alternating
  Code and Space\n      elements; we now incorporate the spaces into the Code.  Emphasis\n
  \     etc. is still possible inside these.\n    + Properly interpret XML tags in
  pre environments (#3042).  They are meant\n      to be interpreted as literal text.\n\n
  \ * EPUB reader:  don't add root path to data: URIs (#3150).\n    Thanks to @lep
  for the bug report and patch.\n\n  * Org reader (Albert Krewinkel):\n\n    + Preserve
  indentation of verse lines (#3064).  Leading spaces in verse\n      lines are converted
  to non-breaking spaces, so indentation is preserved.\n    + Ensure image sources
  are proper links.  Image sources as those in plain\n      images, image links, or
  figures, must be proper URIs or relative file\n      paths to be recognized as images.
  \ This restriction is now enforced\n      for all image sources.  This also fixes
  the reader's usage of uncleaned\n      image sources, leading to `file:` prefixes
  not being deleted from\n      figure images.  Thanks to @bsag for noticing this
  bug.\n    + Trim verse lines properly (Albert Krewinkel).\n    + Extract meta parsing
  code to module.  Parsing of meta-data is well\n      separable from other block
  parsing tasks.  Moving into new module to\n      get small files and clearly arranged
  code.\n    + Read markup only for special meta keys.  Most meta-keys should be read\n
  \     as normal string values, only a few are interpreted as marked-up text.\n    +
  Allow multiple, comma-separated authors.  Multiple authors can be\n      specified
  in the `#+AUTHOR` meta line if they are given as a\n      comma-separated list.\n
  \   + Give precedence to later meta lines.  The last meta-line of any given\n      type
  is the significant line.  Previously the value of the first line\n      was kept,
  even if more lines of the same type were encountered.\n    + Read LaTeX_header as
  header-includes.  LaTeX-specific header commands\n      can be defined in `#+LaTeX_header`
  lines.  They are parsed as\n      format-specific inlines to ensure that they will
  only show up in LaTeX\n      output.\n    + Set documentclass meta from LaTeX_class.\n
  \   + Set classoption meta from LaTeX_class_options.\n    + Read HTML_head as header-includes.
  \ HTML-specific head content can be\n      defined in `#+HTML_head` lines.  They
  are parsed as format-specific\n      inlines to ensure that they will only show
  up in HTML output.\n    + Respect `author` export option.  The `author` option controls
  whether\n      the author should be included in the final markup.  Setting\n      `#+OPTIONS:
  author:nil` will drop the author from the final meta-data\n      output.\n    +
  Respect `email` export option.  The `email` option controls whether the\n      email
  meta-field should be included in the final markup. Setting\n      `#+OPTIONS: email:nil`
  will drop the email field from the final\n      meta-data output.\n    + Respect
  `creator` export option.  The `creator` option controls whether\n      the creator
  meta-field should be included in the final markup.  Setting\n      `#+OPTIONS: creator:nil`
  will drop the creator field from the final\n      meta-data output.  Org-mode recognizes
  the special value `comment` for\n      this field, causing the creator to be included
  in a comment.  This is\n      difficult to translate to Pandoc internals and is
  hence interpreted the\n      same as other truish values (i.e. the meta field is
  kept if it's\n      present).\n    + Respect unnumbered header property (#3095).
  \ Sections the `unnumbered`\n      property should, as the name implies, be excluded
  from the automatic\n      numbering of section provided by some output formats.
  \ The Pandoc\n      convention for this is to add an \"unnumbered\" class to the
  header.  The\n      reader treats properties as key-value pairs per default, so
  a special\n      case is added to translate the above property to a class instead.\n
  \   + Allow figure with empty caption (Albert Krewinkel, #3161).\n      A `#+CAPTION`
  attribute before an image is enough to turn an image into\n      a figure. This
  wasn't the case because the `parseFromString` function,\n      which processes the
  caption value, would fail on empty values. Adding\n      a newline character to
  the caption value fixes this.\n\n  * Docx reader:\n\n    + Use XML convenience functions
  (Jesse Rosenthal).\n      The functions `isElem` and `elemName` (defined in Docx/Util.hs)
  make\n      the code a lot cleaner than the original XML.Light functions, but they\n
  \     had been used inconsistently. This puts them in wherever applicable.\n    +
  Handle anchor spans with content in headers.  Previously, we would only\n      be
  able to figure out internal links to a header in a docx if the\n      anchor span
  was empty. We change that to read the inlines out of the\n      first anchor span
  in a header.\n    + Let headers use existing id.  Previously we always generated
  an id for\n      headers (since they wouldn't bring one from Docx). Now we let it
  use an\n      existing one if possible. This should allow us to recurs through anchor\n
  \     spans.\n    + Use all anchor spans for header ids.  Previously we only used
  the first\n      anchor span to affect header ids. This allows us to use all the
  anchor\n      spans in a header, whether they're nested or not (#3088).\n    + Test
  for nested anchor spans in header.  This ensures that anchor spans\n      in header
  with content (or with other anchor spans inside) will resolve\n      to links to
  a header id properly.\n\n  * ODT reader (Hubert Plociniczak)\n\n    + Include list's
  starting value.  Previously the starting value of\n      the lists' items has been
  hardcoded to 1. In reality ODT's list\n      style definition can provide a new
  starting value in one of its\n      attributes.\n    + Infer caption from the text
  following the image.\n      Frame can contain other frames with the text boxes.\n
  \   + Add `fig:` to title for Image with a caption (as expected\n      by pandoc's
  writers).\n    + Basic support for images in ODT documents.\n    + Don't duplicate
  text for anchors (#3143).  When creating an anchor\n      element we were adding
  its representation as well as the original\n      content, leading to text duplication.\n\n
  \ * DocBook writer:\n\n    + Include an anchor element when a div or span has an
  id (#3102).\n      Note that DocBook does not have a class attribute, but at least
  this\n      provides an anchor for internal links.\n\n  * LaTeX writer:\n\n    +
  Don't use * for unnumbered paragraph, subparagraph.  The starred\n      variants
  don't exist.  This helps with part of #3058...it gets rid of\n      the spurious
  `*`s.  But we still have numbers on the 4th and 5th level\n      headers.\n    +
  Properly escape backticks in verbatim (#3121, Jesse Rosenthal).\n      Otherwise
  they can cause unintended ligatures like `` ?` ``.\n    + Handle NARRAOW NO-BREAK
  SPACE into LaTeX (Vaclav Zeman) as `\\,`.\n    + Don't include `[htbp]` placement
  for figures (#3103, V√°clav Haisman).\n      This allows figure placement defaults
  to be changed by the user\n      in the template.\n\n  * TEI writer: remove heuristic
  to detect book template (Albert Krewinkel).\n    TEI doesn't have `<book>` elements
  but only generic `<divN>` division\n    elements. Checking the template for a trailing
  `</book>` is nonsensical.\n\n  * MediaWiki writer:  transform filename with underscores
  in images (#3052).\n    `foo bar.jpg` becomes `foo_bar.jpg`. This was already done\n
  \   for internal links, but it also needs to happen for images.\n\n  * ICML writer:
  replace partial function (!!) in table handling (#3175,\n    Mauro Bieg).\n\n  *
  Man writer: allow section numbers that are not a single digit (#3089).\n\n  * AsciiDoc
  writer: avoid unnecessary use of \"unconstrained\" emphasis\n    (#3068).  In AsciiDoc,
  you must use a special form of emphasis\n    (double `__`) for intraword emphasis.
  \ Pandoc was previously using\n    this more than necessary.\n\n  * EPUB writer:
  \ use stringify instead of plain writer for metadata\n    (#3066).  This means that
  underscores won't be used for emphasis,\n    or CAPS for bold.  The metadata fields
  will just have unadorned\n    text.\n\n  * Docx Writer:\n\n    + Implement user-defined
  styles (Jesse Rosenthal).  Divs and Spans\n      with a `custom-style` key in the
  attributes will apply the corresponding\n      key to the contained blocks or inlines.\n
  \   + Add ReaderT env to the docx writer (Jesse Rosenthal).\n    + Clean up and
  streamline RTL behavior (Jesse Rosenthal, #3140).\n      You can set `dir: rtl`
  in YAML metadata, or use `-M dir=rtl`\n      on the command line.  For finer-grained
  control, you can set\n      the `dir` attribute in Div or Span elements.\n\n  *
  Org writer (Albert Krewinkel):\n\n    + Remove blank line after figure caption.
  \ Org-mode only treats an image\n      as a figure if it is directly preceded by
  a caption.\n    + Ensure blank line after figure.  An Org-mode figure should be
  surrounded\n      by blank lines.  The figure would be recognized regardless, but
  images\n      in the following line would unintentionally be treated as figures
  as\n      well.\n    + Ensure link targets are paths or URLs.  Org-mode treats links
  as\n      document internal searches unless the link target looks like a URL or\n
  \     file path, either relative or absolute.  This change ensures that this\n      is
  always the case.\n    + Translate language identifiers.  Pandoc and Org-mode use
  different\n      programming language identifiers.  An additional translation between\n
  \     those identifiers is added to avoid unexpected behavior.  This fixes a\n      problem
  where language specific source code would sometimes be output\n      as example
  code.\n    + Drop space before footnote markers (Albert Krewinkel, #3162).\n      The
  writer no longer adds an extra space before footnote markers.\n\n  * Markdown writer:\n\n
  \   + Don't emit HTML for tables unless `raw_html` extension is set (#3154).\n      Emit
  `[TABLE]` if no suitable table formats are enabled and raw HTML\n      is disabled.\n
  \   + Check for the `raw_html` extension before emitting a raw HTML block.\n    +
  Abstract out note/ref function (Jesse Rosenthal).\n    + Add ReaderT monad for environment
  variables (Jesse Rosenthal).\n\n  * HTML, EPUB, slidy, revealjs templates: Use `<p>`
  instead of `<h1>` for\n    subtitle, author, date (#3119).  Note that, as a result
  of this change,\n    authors may need to update CSS.\n\n  * revealjs template:  Added
  `notes-server` option\n    (jgm/pandoc-templates#212, Yoan Blanc).\n\n  * Beamer
  template:\n\n    + Restore whitespace between paragraphs. This was\n      a regression
  in the last release (jgm/pandoc-templates#207).\n    + Added `themeoptions` variable
  (Carsten Gips).\n    + Added `beamerarticle` variable.  This causes the `beamerarticle`\n
  \     package to be loaded in beamer, to produce an article from beamer\n      slides.
  \ (Carsten Gips)\n    + Added support for `fontfamilies` structured variable\n      (Artem
  Klevtsov).\n    + Added hypersetup options (Jake Zimmerman).\n\n  * LaTeX template:\n\n
  \   + Added dummy definition for `\\institute`.\n      This isn't a standard command,
  and we want to avoid a crash when\n      `institute` is used with the default template.\n
  \   + Define default figure placement (V√°clav Haisman), since pandoc\n      no longer
  includes `[htbp]` for figures.  Users with custom templates\n      will want to
  add this. See #3103.\n    + Use footnote package to fix notes in tables (jgm/pandoc-templates#208,\n
  \     V√°clav Haisman).\n\n  * Moved template compiling/rendering code to a separate
  library.\n    `doctemplates`.  This allows the pandoc templating system to be\n
  \   used independently.\n\n  * Text.Pandoc.Error: Fix out of index error in `handleError`\n
  \   (Matthew Pickering).  The fix is to not try to show the exact line when\n    it
  would cause an out-of-bounds error as a result of included files.\n\n  * Text.Pandoc.Shared:
  Add `linesToBlock` function (Albert Krewinkel).\n\n  * Text.Pandoc.Parsing.emailAddress:
  tighten up parsing of email\n    addresses.  Technically `**@user` is a valid email
  address, but if we\n    allow things like this, we get bad results in markdown flavors\n
  \   that autolink raw email addresses (see #2940).  So we exclude a few\n    valid
  email addresses in order to avoid these more common bad cases.\n\n  * Text.Pandoc.PDF:
  \ Don't crash with nonexistent image (#3100).  Instead,\n    emit the alt text,
  emphasized.  This accords with what the ODT writer\n    currently does.  The user
  will still get a warning about a nonexistent\n    image.\n\n  * Fix example in API
  documentation (#3176, Thomas Wei√üschuh).\n\n  * Tell where to get tarball in INSTALL
  (#3062).\n\n  * Rename README to MANUAL.txt and add GitHub-friendly README.md\n
  \   (Albert Krewinkel, Kolen Cheung).\n\n  * Replace COPYING with Markdown version
  COPYING.md from GNU (Kolen Cheung).\n\n  * MANUAL.txt:\n\n    + Put note on structured
  vars in separate paragraph (#2148, Albert\n      Krewinkel).  Make it clearer that
  structured author variables require a\n      custom template\n    + Note that `--katex`
  works best with `html5` (#3077).\n    + Fix the LaTeX and EPUB links in manual (Morton
  Fox).\n    + Document `biblio-title` variable.\n\n  * Improve spacing of footnotes
  in `--help` output (Waldir Pimenta).\n\n  * Update KaTeX to v0.6.0 (Kolen Cheung).\n\n
  \ * Allow latest dependencies.\n\n  * Use texmath 0.8.6.6 (#3040).\n\n  * Allow
  http-client 0.4.30, which is the version in stackage lts.\n    Previously we required
  0.5.\n    Remove CPP conditionals for earlier versions.\n\n  * Remove support for
  GHC < 7.8 (Jesse Rosenthal).\n\n    + Remove Compat.Monoid.\n    + Remove an inline
  monad compatibility macro.\n    + Remove Text.Pandoc.Compat.Except.\n    + Remove
  directory compat.\n    + Change constraint on mtl.\n    + Remove unnecessary CPP
  condition in UTF8.\n    + Bump base lower bound to 4.7.\n    + Remove 7.6 build
  from .travis.yaml.\n    + Bump supported ghc version in CONTRIBUTING.md.\n    +
  Add note about GHC version support to INSTALL.\n    + Remove GHC 7.6 from list of
  tested versions (Albert Krewinkel).\n    + Remove TagSoup compat.\n    + Add EOL
  note to time compat module.  Because time 1.4 is a boot library\n      for GHC 7.8,
  we will support the compatibility module as long as we\n      support 7.8. But we
  should be clear about when we will no longer need\n      it.\n    + Remove blaze-html
  CPP conditional.\n    + Remove unnecessary CPP in custom Prelude.\n\n## pandoc 1.17.2
  (2016-07-17)\n\n  * Added Zim Wiki writer, template and tests. `zimwiki` is now\n
  \   a valid output format. (Alex Ivkin)\n\n  * Changed email-obfuscation default
  to no obfuscation (#2988).\n    + `writerEmailObfuscation` in `defaultWriterOptions`
  is now\n      `NoObfuscation`.\n    + the default for the command-line `--email-obfuscation`
  option is\n      now `none`.\n\n  * Docbook writer: Declare xlink namespace in Docbook5
  output (Ivo Clarysse).\n\n  * Org writer:\n\n    + Support arbitrary raw inlines
  (Albert Krewinkel).\n      Org mode allows arbitrary raw inlines (\"export snippets\"
  in Emacs\n      parlance) to be included as `@@format:raw foreign format text@@`.\n
  \   + Improve Div handling (Albert Krewinkel).  Div blocks handling is\n      changed
  to make the output look more like idiomatic org mode:\n        - Div-wrapped content
  is output as-is if the div's attribute is the\n          null attribute.\n        -
  Div containers with an id but neither classes nor key-value pairs\n          are
  unwrapped and the id is added as an anchor.\n        - Divs with classes associated
  with greater block elements are\n          wrapped in a `#+BEGIN`...`#+END` block.\n
  \       - The old behavior for Divs with more complex attributes is kept.\n\n  *
  HTML writer:  Better support for raw LaTeX environments (#2758).\n    Previously
  we just passed all raw TeX through when MathJax\n    was used for HTML math.  This
  passed through too much.\n    With this patch, only raw LaTeX environments that
  MathJax\n    can handle get passed through.\n    This patch also causes raw LaTeX
  environments to be treated\n    as math, when possible, with MathML and WebTeX output.\n\n
  \ * Markdown writer:  use raw HTML for simple, pipe tables with linebreaks\n    (#2993).
  \ Markdown line breaks involve a newline, and simple and pipe\n    tables can't
  contain one.\n\n  * Make --webtex work with the Markdown writer (#1177).\n    This
  is a convenient option for people using\n    websites whose Markdown flavors don't
  provide for math.\n\n  * Docx writer:\n\n    + Set paragraph to FirstPara after
  display math (Jesse Rosenthal).\n      We treat display math like block quotes,
  and apply FirstParagraph style\n      to paragraphs that follow them. These can
  be styled as the user\n      wishes. (But, when the user is using indentation, this
  allows for\n      paragraphs to continue after display math without indentation.)\n
  \   + Use actual creation time as doc prop (Jesse Rosenthal).\n      Previously,
  we had used the user-supplied date, if available, for Word's\n      document creation
  metadata. This could lead to weird results, as in\n      cases where the user post-dates
  a document (so the modification might be\n      prior to the creation). Here we
  use the actual computer time to set the\n      document creation.\n\n  * LaTeX writer:\n\n
  \   + Don't URI-escape image source (#2825).  Usually this is a local file,\n      and
  replacing spaces with `%20` ruins things.\n    + Allow 'standout' as a beamer frame
  option (#3007).\n      `## Slide title {.standout}`.\n\n  * RST reader: Fixed links
  with no explicit link text.  The link\n    `` `<foo>`_ `` should have `foo` as both
  its link text and its URL.\n    See RST spec at <http://docutils.sourceforge.net/docs/ref/rst/restructuredtext.html#embedded-uris-and-aliases>\n
  \   Closes Debian #828167 -- reported by Christian Heller.\n\n  * Textile reader:\n\n
  \   + Fixed attributes (#2984).  Attributes can't be followed by\n      a space.
  \ So, `_(class)emph_` but `_(noclass) emph_`.\n    + Fixed exponential parsing bug
  (#3020).\n    + Fix overly aggressive interpretation as images (#2998).\n      Spaces
  are not allowed in the image URL in textile.\n\n  * LaTeX reader:\n\n    + Fix `\\cite`
  so it is a NormalCitation not AuthorInText.\n    + Strip off double quotes around
  image source if present (#2825).\n      Avoids interpreting these as part of the
  literal filename.\n\n  * Org reader:\n\n    + Add semicolon to list of special chars
  (Albert Krewinkel)\n      Semicolons are used as special characters in citations
  syntax.  This\n      ensures the correct parsing of Pandoc-style citations: `[prefix;
  @key;\n      suffix]`.  Previously, parsing would have failed unless there was a
  space\n      or other special character as the last <prefix> character.\n    + Add
  support for \"Berkeley-style\" cites (Albert Krewinkel, #1978).\n      A specification
  for an official Org-mode citation syntax was drafted by\n      Richard Lawrence
  and enhanced with the help of others on the orgmode\n      mailing list.  Basic
  support for this citation style is added to the\n      reader.\n    + Support arbitrary
  raw inlines (Albert Krewinkel).\n      Org mode allows arbitrary raw inlines (\"export
  snippets\" in Emacs\n      parlance) to be included as `@@format:raw foreign format
  text@@`.\n    + Remove partial functions (Albert Krewinkel, #2991).\n      Partial
  functions like `head` lead to avoidable errors and should be\n      avoided.  They
  are replaced with total functions.\n    + Support figure labels (Albert Krewinkel,
  #2496, #2999).\n      Figure labels given as `#+LABEL: thelabel` are used as the
  ID of the\n      respective image.  This allows e.g. the LaTeX to add proper `\\label`\n
  \     markup.\n    + Improve tag and properties type safety (Albert Krewinkel).\n
  \     Specific newtype definitions are used to replace stringly typing of tags\n
  \     and properties.  Type safety is increased while readability is improved.\n
  \   + Parse as headlines, convert to blocks (Albert Krewinkel).\n      Emacs org-mode
  is based on outline-mode, which treats documents as trees\n      with headlines
  are nodes.  The reader is refactored to parse into a\n      similar tree structure.
  \ This simplifies transformations acting on\n      document (sub-)trees.\n    *
  Refactor comment tree handling (Albert Krewinkel).\n      Comment trees were handled
  after parsing, as pattern matching on lists\n      is easier than matching on sequences.
  \ The new method of reading\n      documents as trees allows for more elegant subtree
  removal.\n    * Support archived trees export options (Albert Krewinkel).\n      Handling
  of archived trees can be modified using the `arch` option.\n      Archived trees
  are either dropped, exported completely, or collapsed to\n      include just the
  header when the `arch` option is nil, non-nil, or\n      `headline`, respectively.\n
  \   * Put export setting parser into module (Albert Krewinkel).\n      Export option
  parsing is distinct enough from general block parsing to\n      justify putting
  it into a separate module.\n    * Support headline levels export setting (Albert
  Krewinkel).\n      The depths of headlines can be modified using the `H` option.
  \ Deeper\n      headlines will be converted to lists.\n    * Replace ugly code with
  view pattern (Albert Krewinkel).\n      Some less-than-smart code required a pragma
  switching of overlapping\n      pattern warnings in order to compile seamlessly.
  \ Using view patterns\n      makes the code easier to read and also doesn't require
  overlapping\n      pattern checks to be disabled.\n    * Fix parsing of verbatim
  inlines (Albert Krewinkel, #3016).\n      Org rules for allowed characters before
  or after markup chars were not\n      checked for verbatim text.  This resultet
  in wrong parsing outcomes of\n      if the verbatim text contained e.g. space enclosed
  markup characters as\n      part of the text (`=is_substr = True=`).  Forcing the
  parser to update\n      the positions of allowed/forbidden markup border characters
  fixes this.\n\n  * LaTeX template: fix for obscure hyperref/xelatex issue.\n    Here's
  a minimal case:\n\n        \\documentclass[]{article}\n        \\usepackage{hyperref}\n
  \       \\begin{document}\n        \\section{\\%√°}\n        \\end{document}\n\n
  \   Without this change, this fails on the second invocation of xelatex.\n    This
  affects inputs this like `# %√°` with pdf output via xelatex.\n\n  * trypandoc:  call
  results 'html' instead of 'result'.\n    This is for better compatibility with babelmark2.\n\n
  \ * Document MultiMarkdown as input/output format (Albert Krewinkel, #2973).\n    MultiMarkdown
  was only mentioned as a supported Markdown dialect but not\n    as a possible input
  or output format.  A brief mention is added\n    everywhere the other supported
  markdown dialects are mentioned.\n\n  * Document Org mode as a format containing
  raw HTML (Albert Krewinkel)\n    Raw HTML is kept when the output format is Emacs
  Org mode.\n\n  * Implement `RawInline` and `RawBlock` in sample lua custom writer
  (#2985).\n\n  * Text.Pandoc.Shared:\n\n    + Introduce blocksToInlines function
  (Jesse Rosenthal).\n      This is a lossy function for converting `[Block] -> [Inline]`.
  Its main\n      use, at the moment, is for docx comments, which can contain arbitrary\n
  \     blocks (except for footnotes), but which will be converted to spans.\n      This
  is, at the moment, pretty useless for everything but the basic\n      `Para` and
  `Plain` comments. It can be improved, but the docx reader\n      should probably
  emit a warning if the comment contains more than this.\n    + Add BlockQuote to
  blocksToInlines (Jesse Rosenthal).\n    + Add further formats for `normalizeDate`
  (Jesse Rosenthal).\n      We want to avoid illegal dates -- in particular years
  with greater than\n      four digits. We attempt to parse series of digits first
  as `%Y%m%d`, then\n      `%Y%m`, and finally `%Y`.\n    + `normalizeDate` should
  reject illegal years (Jesse Rosenthal).\n      We only allow years between 1601
  and 9999, inclusive. The ISO 8601\n      actually says that years are supposed to
  start with 1583, but MS Word\n      only allows 1601-9999. This should stop corrupted
  word files if the date\n      is out of that range, or is parsed incorrectly.\n
  \   + Improve year sanity check in normalizeDate (Jesse Rosenthal).\n      Previously
  we parsed a list of dates, took the first one, and then\n      tested its year range.
  That meant that if the first one failed, we\n      returned nothing, regardless
  of what the others did. Now we test for\n      sanity before running `msum` over
  the list of Maybe values. Anything\n      failing the test will be Nothing, so will
  not be a candidate.\n\n  * Docx reader:\n\n    + Add simple comment functionality.
  (Jesse Rosenthal).\n      This adds simple track-changes comment parsing to the
  docx reader. It is\n      turned on with `--track-changes=all`. All comments are
  converted to\n      inlines, which can list some information. In the future a warning
  will be\n      added for comments with formatting that seems like it will be excessively\n
  \     denatured.  Note that comments can extend across blocks. For that reason\n
  \     there are two spans: `comment-start` and `comment-end`.  `comment-start`\n
  \     will contain the comment. `comment-end` will always be empty.  The two\n      will
  be associated by a numeric id.\n    + Enable warnings in top-level reader (Jesse
  Rosenthal).\n      Previously we had only allowed for warnings in the parser. Now
  we allow\n      for them in the `Docx.hs` as well. The warnings are simply concatenated.\n
  \   + Add warning for advanced comment formatting. (Jesse Rosenthal).\n      We
  can't guarantee we'll convert every comment correctly, though we'll\n      do the
  best we can. This warns if the comment includes something other\n      than Para
  or Plain.\n    + Add tests for warnings. (Jesse Rosenthal).\n    + Add tests for
  comments (Jesse Rosenthal).\n      We test for comments, using all track-changes
  options. Note that we\n      should only output comments if `--track-changes=all`.
  We also test for\n      emitting warnings if there is complicated formatting.\n\n
  \ * README: update to include track-changes comments. (Jesse Rosenthal)\n\n  * Improved
  Windows installer - don't ignore properties set on command-line.\n    See #2708.
  \ Needs testing to see if this resolves the issue.\n    Thanks to @nkalvi.\n\n  *
  Process markdown extensions on command line in L->R order (#2995).\n    Previously
  they were processed, very unintuitively, in R->L\n    order, so that `markdown-tex_math_dollars+tex_math_dollars`\n
  \   had `tex_math_dollars` disabled.\n\n  * Added `secnumdepth` variable to LaTeX
  template (#2920).\n\n  * Include table of contents in README.html in Windows package.\n\n
  \ * Writers: treat SoftBreak as space for stripping (Jesse Rosenthal)\n    In Writers.Shared,
  we strip leading and trailing spaces for display\n    math. Since SoftBreak's are
  treated as spaces, we should strip those\n    too.\n\n  * beamer, latex templates:
  \ pass biblatexoptions directly in package load.\n    This allows runtime optinos
  to be used.  Fixes jgm/pandoc-citeproc#201\n\n  * CPP workaround for deprecation
  of `parseUrl` in http-client.\n\n  * Removed some redundant class constraints.\n\n
  \ * make_oxs_package.sh - use OSX env variable.\n\n  * Added `winpkg` target to
  Makefile.  This downloads the windows package\n    from appveyor and signs it using
  the key.\n\n  * Document Org mode as a format containing raw TeX (Albert Krewinkel).\n
  \   Raw TeX is kept verbatim when the output format is Emacs Org mode.\n\n  * Support
  math with haddock-library >= 1.4.\n\n  * Removed `-rtsopts` from library stanza.
  \ It has no effect, and Hackage\n    wouldn't accept the package.\n\n  * Update
  library dependency versions.\n\n## pandoc 1.17.1 (2016-06-04)\n\n  * New output
  format: `docbook5` (Ivo Clarysse).\n\n  * `Text.Pandoc.Options`: Add `writerDocBook5`
  to `WriterOptions`\n    (API change).\n\n  * Org writer:\n\n    + Add :PROPERTIES:
  drawer support (Albert Krewinkel, #1962).\n      This allows header attributes to
  be added to org documents in the form\n      of `:PROPERTIES:` drawers.  All available
  attributes are stored as\n      key/value pairs.  This reflects the way the org
  reader handles\n      `:PROPERTIES:` blocks.\n    + Add drawer capability (Carlos
  Sosa).  For the implementation of the\n      Drawer element in the Org Writer, we
  make use of a generic Block\n      container with attributes.  The presence of a
  `drawer` class defines\n      that the `Div` constructor is a drawer. The first
  class defines the\n      drawer name to use.  The key-value list in the attributes
  defines\n      the keys to add inside the Drawer.  Lastly, the list of Block elements\n
  \     contains miscellaneous blocks elements to add inside of the Drawer.\n    +
  Use `CUSTOM_ID` in properties (Albert Krewinkel).  The `ID` property is\n      reserved
  for internal use by Org-mode and should not be used.\n      The `CUSTOM_ID` property
  is to be used instead, it is converted to the\n      `ID` property for certain export
  format.\n\n  * LaTeX writer:\n\n    + Ignore `--incremental` unless output format
  is beamer (#2843).\n    + Fix polyglossia to babel env mapping (Mauro Bieg, #2728).\n
  \     Allow for optional argument in square brackets.\n    + Recognize `la-x-classic`
  as Classical Latin (Andrew Dunning).\n      This allows one to access the hyphenation
  patterns in CTAN's\n      hyph-utf8.\n    + Add missing languages from hyph-utf8
  (Andrew Dunning).\n    + Improve use of `\\strut` with `\\minipage` inside tables\n
  \     (Jose Luis Duran).  This improves spacing in multiline\n      tables.\n    +
  Use `{}` around options containing special chars (#2892).\n    + Avoid lazy `foldl`.\n
  \   + Don't escape underscore in labels (#2921).  Previously they were\n      escaped
  as `ux5f`.\n    + brazilian -> brazil for polyglossia (#2953).\n\n  * HTML writer:
  Ensure mathjax link is added when math appears in footnote\n    (#2881).  Previously
  if a document only had math in a footnote, the\n    MathJax link would not be added.\n\n
  \ * EPUB writer: set `navpage` variable on nav page.\n    This allows templates
  to treat it differently.\n\n  * DocBook writer:\n\n    + Use docbook5 if `writerDocbook5`
  is set (Ivo Clarysse).\n    + Properly handle `ulink`/`link` (Ivo Clarysse).\n\n
  \ * EPUB reader:\n\n    + Unescape URIs in spine (#2924).\n    + EPUB reader:  normalise
  link id (Mauro Bieg).\n\n  * Docx Reader:\n\n    + Parse `moveTo` and `moveFrom`
  (Jesse Rosenthal).\n      `moveTo` and `moveFrom` are track-changes tags that are
  used when a\n      block of text is moved in the document. We now recognize these
  tags and\n      treat them the same as `insert` and `delete`, respectively. So,\n
  \     `--track-changes=accept` will show the moved version, while\n      `--track-changes=reject`
  will show the original version.\n    + Tests for track-changes moving (Jesse Rosenthal).\n\n
  \ * ODT, EPUB, Docx readers: throw `PandocError` on unzip failure\n    (Jesse Rosenthal)
  Previously, `readDocx`, `readEPUB`, and `readOdt`\n    would error out if zip-archive
  failed. We change the archive extraction\n    step from `toArchive` to `toArchiveOrFail`,
  which returns an Either value.\n\n  * Markdown, HTML readers:  be more forgiving
  about unescaped `&` in\n    HTML (#2410).  We are now more forgiving about parsing
  invalid HTML with\n    unescaped `&` as raw HTML.  (Previously any unescaped `&`\n
  \   would cause pandoc not to recognize the string as raw HTML.)\n\n  * Markdown
  reader:\n\n    + Fix pandoc title blocks with lines ending in 2 spaces (#2799).\n
  \   + Added `-s` to markdown-reader-more test.\n\n  * HTML reader: fixed bug in
  `pClose`.  This caused exponential parsing\n    behavior in documnets with unclosed
  tags in `dl`, `dd`, `dt`.\n\n  * MediaWiki reader: Allow spaces before `!` in MediaWiki
  table header\n    (roblabla).\n\n  * RST reader: Support `:class:` option for code
  block in RST reader\n    (Sidharth Kapur).\n\n  * Org reader (all Albert Krewinkel,
  except where noted otherwise):\n\n    + Stop padding short table rows.\n      Emacs
  Org-mode doesn't add any padding to table rows.  The first\n      row (header or
  first body row) is used to determine the column count,\n      no other magic is
  performed.\n    + Refactor rows-to-table conversion.  This refactors\n      the
  codes conversing a list table lines to an org table ADT.\n      The old code was
  simplified and is now slightly less ugly.\n    + Fix handling of empty table cells,
  rows (Albert Krewinkel, #2616).\n      This fixes Org mode parsing of some corner
  cases regarding empty cells\n      and rows.  Empty cells weren't parsed correctly,
  e.g. `|||` should be\n      two empty cells, but would be parsed as a single cell
  containing a pipe\n      character.  Empty rows where parsed as alignment rows and
  dropped from\n      the output.\n    + Fix spacing after LaTeX-style symbols.\n
  \     The org-reader was dropping space after unescaped LaTeX-style symbol\n      commands:
  `\\ForAll \\Auml` resulted in `‚àÄ√Ñ` but should give `‚àÄ √Ñ`\n      instead.  This seems
  to be because the LaTeX-reader treats the\n      command-terminating space as part
  of the command.  Dropping the trailing\n      space from the symbol-command fixes
  this issue.\n    + Print empty table rows.  Empty table rows should not\n      be
  dropped from the output, so row-height is always set to be at least 1.\n    + Move
  parser state into separate module.\n      The org reader code has become large and
  confusing.  Extracting smaller\n      parts into submodules should help to clean
  things up.\n    + Add support for sub/superscript export options.\n      Org-mode
  allows to specify export settings via `#+OPTIONS` lines.\n      Disabling simple
  sub- and superscripts is one of these export options,\n      this options is now
  supported.\n    + Support special strings export option Parsing of special strings\n
  \     (like `...` as ellipsis or `--` as en dash) can be toggled using the `-`\n
  \     option.\n    + Support emphasized text export option.  Parsing of emphasized
  text can\n      be toggled using the `*` option.  This influences parsing of text
  marked\n      as emphasized, strong, strikeout, and underline.  Parsing of inline
  math,\n      code, and verbatim text is not affected by this option.\n    + Support
  smart quotes export option.  Reading of smart quotes can be\n      toggled using
  the `'` option.\n    + Parse but ignore export options. All known export options
  are parsed\n      but ignored.\n    + Refactor block attribute handling.  A parser
  state attribute was used\n      to keep track of block attributes defined in meta-lines.
  \ Global state\n      is undesirable, so block attributes are no longer saved as
  part of the\n      parser state.  Old functions and the respective part of the parser
  state\n      are removed.\n    + Use custom `anyLine`.  Additional state changes
  need to be made after\n      a newline is parsed, otherwise markup may not be recognized
  correctly.\n      This fixes a bug where markup after certain block-types would
  not be\n      recognized.\n    + Add support for `ATTR_HTML` attributes (#1906).\n
  \     Arbitrary key-value pairs can be added to some block types using a\n      `#+ATTR_HTML`
  line before the block.  Emacs Org-mode only includes these\n      when exporting
  to HTML, but since we cannot make this distinction here,\n      the attributes are
  always added.  The functionality is now supported\n      for figures.\n    + Add
  `:PROPERTIES:` drawer support (#1877).\n      Headers can have optional `:PROPERTIES:`
  drawers associated with them.\n      These drawers contain key/value pairs like
  the header's `id`.  The\n      reader adds all listed pairs to the header's attributes;
  `id` and\n      `class` attributes are handled specially to match the way `Attr`
  are\n      defined.  This also changes behavior of how drawers of unknown type\n
  \     are handled.  Instead of including all unknown drawers, those are not\n      read/exported,
  thereby matching current Emacs behavior.\n    + Use `CUSTOM_ID` in properties.  See
  above on Org writer changes.\n    + Respect drawer export setting.  The `d` export
  option can be used\n      to control which drawers are exported and which are discarded.\n
  \     Basic support for this option is added here.\n    + Ignore leading space in
  org code blocks (Emanuel Evans, #2862).\n      Also fix up tab handling for leading
  whitespace in code blocks.\n    + Support new syntax for export blocks.  Org-mode
  version 9\n      uses a new syntax for export blocks.  Instead of `#+BEGIN_<FORMAT>`,\n
  \     where `<FORMAT>` is the format of the block's content, the new\n      format
  uses `#+BEGIN_export <FORMAT>` instead.  Both types are\n      supported.\n    +
  Refactor `BEGIN...END` block parsing.\n    + Fix handling of whitespace in blocks,
  allowing content to be indented\n      less then the block header.\n    + Support
  org-ref style citations.  The *org-ref* package is an\n      org-mode extension
  commonly used to manage citations in org\n      documents.  Basic support for the
  `cite:citeKey` and\n      `[[cite:citeKey][prefix text::suffix text]]` syntax is
  added.\n    + Split code into separate modules, making for cleaner code and\n      better
  decoupling.\n\n  * Added `docbook5` template.\n\n  * `--mathjax` improvements:\n\n
  \   + Use new CommonHTML output for MathJax (updated default MathJax URL,\n      #2858).\n
  \   + Change default mathjax setup to use `TeX-AMS_CHTML` configuration.\n      This
  is designed for cases where the input is always TeX and maximal\n      conformity
  with TeX is desired.  It seems to be smaller and load faster\n      than what we
  used before.  See #2858.\n    + Load the full MathJax config to maximize loading
  speed (KolenCheung).\n\n  * Bumped upper version bounds to allow use of latest packages\n
  \   and compilation with ghc 8.\n\n  * Require texmath 0.8.6.2.  Closes several
  texmath-related bugs (#2775,\n    #2310, #2310, #2824).  This fixes behavior of
  roots, e.g.\n    `\\sqrt[3]{x}`, and issues with sub/superscript positioning\n    and
  matrix column alignment in docx.\n\n  * README:\n\n    + Clarified documentation
  of `implicit_header_references` (#2904).\n    + Improved documentation of `--columns`
  option.\n\n  * Added appveyor setup, with artefacts (Jan Schulz).\n\n  * stack.yaml
  versions: Use proper flags used for texmath, pandoc-citeproc.\n\n  * LaTeX template:
  support for custom font families (vladipus).\n    Needed for correct polyglossia
  operation with Cyrillic fonts and perhaps\n    can find some other usages.  Example
  usage in YAML metadata:\n\n          fontfamilies:\n          - name: \\cyrillicfont\n
  \           font: Liberation Serif\n          - name: \\cyrillicfonttt\n            options:
  Scale=MatchLowercase\n            font: Liberation\n\n  * Create unsigned msi as
  build artifact in appveyor build.\n\n  * On travis, test with ghc 8.0.1; drop testing
  for ghc 7.4.1.\n\n\n\n## pandoc 1.17.0.3 (2016-03-24)\n\n  * LaTeX writer: Fixed
  position of label in figures (#2813).\n    Previously the label wasn't in the right
  place, and `\\ref`\n    wouldn't work properly.\n  * Added .tei test files to pandoc.cabal
  so they'll be included\n    in tarball (#2811).\n  * Updated copyright dates.\n\n##
  pandoc 1.17.0.2 (2016-03-23)\n\n  * Fixed serious regression in `htmlInBalanced`,
  which caused\n    newlines to be omitted in some raw HTML blocks in Markdown\n    (#2804).\n\n##
  pandoc 1.17.0.1 (2016-03-21)\n\n  * File scope is no longer used when there are
  no input files (i.e.,\n    when input comes from stdin).  Previously file scope
  was triggered\n    when the `json` reader was specified and input came from `stdin`,\n
  \   and this caused no output to be produced.  (Fix due to Jesse Rosenthal;\n    thanks
  to Fedor Sheremetyev for calling the bug to our attention.)\n  * Improved documentation
  of templates (#2797).\n\n## pandoc 1.17 (2016-03-20)\n\n  * Added `--file-scope`
  option (Jesse Rosenthal).\n    By default pandoc operates on multiple files by first
  concatenating\n    them (around extra line breaks) and then processing the joined
  file. So\n    it only parses a multi-file document at the document scope. This has
  the\n    benefit that footnotes and links can be in different files, but for\n    some
  purposes it is useful to parse the individual files first\n    and then combine
  their outputs (e.g. when the files use footnotes\n    or links with the same labels).
  \ The `--file-scope` option causes\n    pandoc to parse the files first, and then
  combine the parsed output,\n    instead of combining before parsing. `--file-scope`
  is selected\n    automatically for binary input files (which cannot be concatenated)\n
  \   and for pandoc json.\n\n  * Add TEI Writer (Chris Forster) and `tei` output
  format.\n\n  * Added a general `ByteStringReader` with warnings, used by the docx\n
  \   reader (API change, Jesse Rosenthal).\n\n  * Add `readDocxWithWarnings` (API
  change, Jesse Rosenthal).\n\n  * Changed type of `Shared.uniqueIdent` argument from\n
  \   `[String]` to `Set String`.  This avoids performance problems in documents\n
  \   with many identically named headers (API change, #2671).\n\n  * Removed `tex_math_single_backslash`
  from `markdown_github` options\n    (#2707).\n\n  * Make language extensions as
  well as full language names\n    trigger syntax highlighting.  For example, `py`
  will now work as\n    well as `python` (jgm/highlighting-kate#83).\n\n  * Added
  `institute` variable to latex, beamer templates (Fraser\n    Tweedale, Josef Svenningsson).\n\n
  \ * Docx reader (Jesse Rosenthal):\n\n    + Handle alternate content.  Some word
  functions (especially graphics)\n      give various choices for content so there
  can be backwards compatibility.\n    + Don't turn numbered headers into lists.\n
  \   + Docx Reader: Add state to the parser, for warnings\n    + Update feature checklist
  in source code.\n    + Get rid of `Modifiable` typeclass.\n    + Add tests for adjacent
  hyperlinks.\n    + Add a \"Link\" modifier to `Reducible`. We want to make sure
  that\n      links have their spaces removed, and are appropriately smushed\n      together
  (#2689).\n\n  * HTML reader:\n\n    + Fixed behavior of base tag (#2777).\n      If
  the base path does not end with slash, the last component\n      will be replaced.
  \ E.g. base = `http://example.com/foo`\n      combines with `bar.html` to give `http://example.com/bar.html`.\n
  \     If the href begins with a slash, the whole path of the base\n      is replaced.
  \ E.g. base = `http://example.com/foo/` combines\n      with `/bar.html` to give
  `http://example.com/bar.html`.\n    + Rewrote `htmlInBalanced`.  This version avoids
  an exponential\n      performance problem with `<script>` tags, and it should be
  faster\n      in general (#2730).\n    + Properly handle an empty cell in a simple
  table (#2718).\n    + Handle multiple `<meta>` tags with same name.  Put them in
  a list\n      in the metadata so they are all preserved, rather than (as before)\n
  \     throwing out all but one..\n\n  * Markdown reader:\n\n    + Improved pipe
  table parsing (#2765).\n    + Allow `+` separators in pipe table cells.  We already
  allowed\n      them in the header, but not in the body rows, for some reason.\n
  \     This gives compatibility with org-mode tables.\n    + Don't cross line boundary
  parsing pipe table row.\n      Previously an Emph element could be parsed across
  the newline\n      at the end of the pipe table row.\n    + Use `htmlInBalanced`
  for `rawVerbatimBlock`, for better\n      performance (#2730).\n    + Fixed bug
  with smart quotes around tex math.\n\n  * LaTeX reader:\n\n    + Handle interior
  `$` characters in math (#2743).  For example,\n      `$$\\hbox{$i$}$$`.\n    + `inlineCommand`
  now gobbles an empty `{}` after any command (#2687).\n      This gives better results
  when people write e.g. `\\TeX{}` in Markdown.\n    + Properly handle LaTeX \"math\"
  environment as inline math (#2171).\n\n  * Textile reader: Support `>`, `<`, `=`,
  `<>` text alignment attributes.\n    Closes #2674.\n\n  * Org reader (Albert Krewinkel):\n\n
  \   + Prefix even empty figure names with \"fig:\" (#2643).  The\n      convention
  used by pandoc for figures is to mark them by prefixing\n      the name with `fig:`.
  \ The org reader failed to do this if a figure\n      had no name.\n    + Refactor
  link-target processing (#2684).\n\n  * ConTeXt writer: Fix whitespace at line beginning
  in line blocks (#2744).\n    Thanks to @c-foster.\n\n  * HTML writer: Don't include
  alignment attribute for default table columns.\n    Previously these were given
  \"left\" alignment.  Better to leave off\n    alignment attributes altogether (#2694).\n\n
  \ * Markdown writer: Use hyphens for YAML metadata block bottom line, for\n    better
  compatibility with other Markdown flavors (Henrik Tramberend).\n\n  * LaTeX writer:\n\n
  \   + Use image identifier to create a label and hypertarget for\n      figures
  (Mauro Bieg).\n    + Avoid double toprule in headerless table with caption (#2742).\n
  \   + Clean up options parser (Jesse Rosenthal).\n    + Treat `memoir` template
  with `article` option as article, instead\n      of treating all `memoir` templates
  as books.\n    + Allow more flexible table alignment (Henrik Tramberend, #2665).\n
  \     New default is not to include `[c]` option (which is the default\n      anyway
  if no positioning is specified).  Now LaTeX emplates can\n      control the overall
  table alignment in a document by setting the\n      longtable length variables `LTleft`
  and `LTright`.  For example,\n      `\\setlength\\LTleft\\parindent\\setlength\\LTright\\fill`\n
  \     will create left-aligned tables that respect paragraph indentation.\n\n  *
  Docx writer: Handle image alt text (#2754, Mauro Bieg).\n\n  * Org writer - pass
  through RawInline with format \"org\".\n\n  * DokuWiki writer: use `$$` for display
  math.\n\n  * Custom writer: Pass attributes parameter to CaptionedImage (#2697).\n\n
  \ * Make protocol-relative URIs work again (#2737).\n\n  * make_osx_package.sh:
  \ Use env variable for developer id certs.\n\n  * Raise `tagsoup` lower bound to
  0.13.7 to fix entity-related\n    problems (#2734).\n\n  * Allow `zip-archive` 0.3.\n\n
  \ * Allow `aeson` 0.11.\n\n## pandoc 1.16.0.2 (2016-01-12)\n\n  * Depend on deepseq
  rather than deepseq-generics (fpco/stackage#1096).\n\n  * Fixed regression in latex
  smart quote parsing (#2645).\n    In cases where a match was not found for a quote,
  everything\n    from the open quote to the end of the paragraph was being dropped.\n\n##
  pandoc 1.16.0.1 (2016-01-10)\n\n  * Fixed regression with `--latex-engine` (#2618).
  In 1.16\n    `--latex-engine` raises an error if a full path is given.\n\n  * Org
  reader: Fix function dropping subtrees tagged `:noexport`\n    (Albert Krewinkel,
  #2628):\n\n  * Markdown reader: renormalize table column widths if they exceed 100%\n
  \   (#2626).\n\n  * Textile reader:  don't allow block HTML tags in inline contexts.\n
  \   The reader previously did allow this, following redcloth,\n    which happily
  parses\n\n        Html blocks can be <div>inlined</div> as well.\n\n    as\n\n        <p>Html
  blocks can be <div>inlined</div> as well.</p>\n\n    This is invalid HTML.  The
  above sample now produces;\n\n        <p>Html blocks can be</p>\n        <div>\n
  \       <p>inlined</p>\n        </div>\n        <p>as well.</p>\n\n  * Improved
  default template lookup for custom lua scripts (#2625).\n    Previously, if you
  tried to do `pandoc -s -t /path/to/lua/script.lua`,\n    pandoc would look for the
  template in\n    `~/.pandoc/templates/default./path/to/lua/script.lua`.\n    With
  this change it will look in the more reasonable\n    `~/.pandoc/templates/default.script.lua`.
  \ This makes it possible to\n    store default templates for custom writers.\n\n
  \ * RST, Markdown writers: Fixed rendering of grid tables with blank rows\n    (#2615).\n\n
  \ * LaTeX writer: restore old treatment of Span (#2624).  A Span is\n    now rendered
  with surrounding `{}`, as it was before 1.16.\n\n  * Entity handling fixes: improved
  handling of entities like\n    `&lang;` that require a trailing semicolon.  Allow
  uppercase\n    `x` in numerical hexadecimal character references, working\n    around
  a tagsoup bug.\n\n  * `stack.yaml` - use lts-4.0, but with older aeson to avoid
  excessive\n    memory use on compile.  With aeson 0.10 we were getting an out of\n
  \   memory error on a 2GB Ubuntu 64-bit VM.\n\n  * Improved deb package creation
  script. Made `DPKGVER` work.\n    Renamed `COMMIT` to `TREE`.  You should now be
  able to do\n    `TREE=1.16.0.1 DPKGVER=2 make deb`.\n\n\n## pandoc 1.16 (2016-01-02)\n\n
  \ * Added `Attr` field to `Link` and `Image` (Mauro Bieg, #261, API change).\n\n
  \   + Added syntax for link and image attributes to pandoc's Markdown.\n    + Updated
  readers and writers to use link and image attributes\n      when appropriate.\n
  \   + Support image attributes in Docx, Textile, RST readers.\n\n  * Renamed link
  attribute extensions.  The old `link_attributes` is\n    now `mmd_link_attributes`,
  and `link_attributes` now enables the\n    new pandoc-style link and image attributes
  (API change).\n    Note: this change could break some existing workflows.\n\n  *
  Implemented `SoftBreak` and new `--wrap` option (#1701, API change).\n    Added
  threefold wrapping option.\n\n    + Command line option: deprecated `--no-wrap`,
  added\n      `--wrap=[auto|none|preserve]`\n    + Added `WrapOption`, exported from
  `Text.Pandoc.Options`\n    + Changed type of `writerWrapText` in `WriterOptions`
  from\n      `Bool` to `WrapOption`.\n    + Modified `Text.Pandoc.Shared` functions
  to allow `SoftBreak`.\n    + Supported `SoftBreak` in readers and writers.\n\n  *
  Text.Pandoc.Options:  Added `writerDpi` to `WriterOptions` (API\n    change, Mauro
  Bieg).\n\n  * Added `--dpi` command-line option (Mauro Bieg).\n\n  * Rationalized
  behavior of `--no-tex-ligatures` and `--smart` (#2541).\n    This change makes `--no-tex-ligatures`
  affect the LaTeX reader\n    as well as the LaTeX and ConTeXt writers.  If it is
  used,\n    the LaTeX reader will parse characters `` ` ``, `'`, and `-`\n    literally,
  rather than parsing ligatures for quotation marks\n    and dashes.  And the LaTeX
  writer will print unicode quotation\n    mark and dash characters literally, rather
  than converting\n    them to the standard ASCII ligatures.  Note that `--smart`
  has\n    no effect on the LaTeX reader.  `--smart` is still the default\n    for
  all input formats when LaTeX or ConTeXt is the output format,\n    *unless* `--no-tex-ligatures`
  is used.\n\n    Some examples to illustrate the logic:\n\n    ```\n    % echo \"'hi'\"
  | pandoc -t latex\n    `hi'\n    % echo \"'hi'\" | pandoc -t latex --no-tex-ligatures\n
  \   'hi'\n    % echo \"'hi'\" | pandoc -t latex --no-tex-ligatures --smart\n    ‚Äòhi‚Äô\n
  \   % echo \"'hi'\" | pandoc -f latex --no-tex-ligatures\n    <p>'hi'</p>\n    %
  echo \"'hi'\" | pandoc -f latex\n    <p>‚Äôhi‚Äô</p>\n    ```\n\n  * Removed deprecated
  options `--offline` and `--html5`.\n\n  * Fixed language code for Czech (`cs` not
  `cz`) (#2597).\n\n  * Implemented `east_asian_line_breaks` extension (#2586).\n
  \   In `Text.Pandoc.Options`, added `Ext_east_asian_line_breaks` constructor\n    to
  `Extension` (API change).  This extension is like\n    `ignore_line_breaks`, but
  smarter -- it only ignores line breaks\n    between two East Asian wide characters.
  \ This makes it better suited\n    for writing with a mix of East Asian and non-East
  Asian scripts.\n\n  * Added support for PDF creation via `wkhtmltopdf`.\n    To
  use this: `pandoc -t html5 -o result.pdf` (and add `--mathjax`\n    if you have
  math.) Margins can be set using the variables\n    `margin-top`, `margin-bottom`,
  `margin-left`, `margin-right`.\n    Other styling can be done through CSS.\n\n  *
  Fixed cite key parsing regression (jgm/pandoc-citeproc#201).\n    We were capturing
  final colons as in `[@foo: bar]`; the citation id\n    was being parsed as `@foo:`.\n\n
  \ * ICML writer:\n\n    + Fixed image syntax for local files (#2589).\n    + Changed
  type of `writeICML` (Mauro Bieg).\n      API change:  It is now `WriterOptions ->
  Pandoc -> IO String`.\n      Also handle new image attributes.\n    + Intersperse
  line breaks instead of appending them to\n      every `ParagraphStyleRange` (Mauro
  Bieg, #2501).\n    + Add `Cite` style to citations (Mauro Bieg).\n    + Added figure
  handling (#2590, Mauro Bieg).\n    + Better handling of math.  Instead of just printing
  the raw tex,\n      we now try to fake it with unicode characters.\n\n  * HTML writer:
  Include `example` class for example lists (#2524).\n\n  * ODT/OpenDocument writer:
  improved image attributes (Mauro Bieg).\n\n    + Support for percentage widths/heights\n
  \   + Use `Attr` instead of title to get dimensions from ODT walker\n      to `writeOpenDocument`.\n\n
  \ * AsciiDoc writer:\n\n    + Support anchors in spans and divs with id elements\n
  \     (jgm/pandoc-citeproc#143).\n    + Fixed code blocks (#1861).\n\n  * Haddock
  writer:  omit formatting inside links, which isn't supported\n    by Haddock (#2515).\n\n
  \ * MediaWiki writer:  Fixed spacing issues in table cells.\n\n    + Start cell
  on new line unless it's a single Para or Plain\n      (#2606).\n    + For single
  Para or Plain, insert a space after the `|` to\n      avoid problems when the text
  begins with a character like\n      `-` (#2604).\n\n  * Beamer writer: mark frame
  as fragile when it contains verbatim (#1613).\n\n  * LaTeX writer:\n\n    + Add
  support for GAP highlighting using listings (Raniere Silva).\n    + Consider `header-includes`
  content as well as templates\n      when determining whether to use csquotes (Andreas
  L√∂√∂w).\n    + Create defaults for geometry using `margin-left` etc.\n      If `geometry`
  has no value, but `margin-left`, `margin-right`,\n      `margin-top`, and/or `-margin-bottom`
  are given, a default value\n      for `geometry` is created from these.  Note that
  these variables\n      already affect PDF production via HTML5 with `wkhtmltopdf`.\n\n
  \ * ConTeXt writer: set default layout based on `margin-left`, etc.\n    This sets
  up `\\setuplayout` based on the variables `margin-left`,\n    `margin-right`, `margin-bottom`,
  and `margin-top`, if no layout\n    is given.\n\n  * Docx writer:  better handling
  of PDF images.  Previously we tried\n    to get the image size from the image even
  if an explicit size was\n    specified.  Since we still can't get image size for
  PDFs, this made\n    it impossible to use PDF images in docx.  Now we don't try
  to get\n    the image size when a size is already explicitly specified.\n\n  * Markdown
  writer:  use raw HTML for link/image attributes when\n    the `link_attributes`
  extension is unset and `raw_html` is set (#2554).\n\n  * MediaWiki reader: interpret
  markup inside `<tt>`, `<code>` (#2607).\n\n  * LaTeX reader:\n\n    + Improved smart
  quote parsing (#2555). This fixes redering of\n      unmatched quotes.\n    + Use
  curly quotes for unmatched ` (#2555).\n    + Allow blank space between braced arguments
  of commands (#2592).\n\n  * Markdown reader:\n\n    + Improved pipe table relative
  widths.  Previously pipe table\n      columns got relative widths (based on the
  header underscore lines)\n      when the source of one of the rows was greater in
  width than the\n      column width.  This gave bad results in some cases where much
  of\n      the width of the row was due to nonprinting material (e.g. link\n      URLs).
  \ Now pandoc only looks at printable width (the width of a\n      plain string version
  of the source), which should give better results.\n      Thanks to John Muccigrosso
  for bringing up the issue.\n    + Fixed parsing bug with macros.  Previously macro
  definitions in\n      indented code blocks were being parsed as macro definitions,
  not code.\n\n  * Textile reader:  skip over attribute in image source (#2515).\n
  \   We don't have a place yet for styles or sizes on images, but\n    we can skip
  the attributes rather than incorrectly taking them\n    to be part of the filename.\n\n
  \ * Docx reader: Handle dummy list items (Jesse Rosenthal).\n    These come up when
  people create a list item and then delete the\n    bullet. It doesn't refer to any
  real list item, and we used to ignore\n    it.\n\n  * CommonMark reader/writer rewritten
  to use latest `cmark`.\n\n  * Fixed Emoji character definitions (#2523).  There
  were many bugs in the\n    definitions.\n\n  * `Text.Pandoc.CSS`:\n\n    + Added
  `pickStylesToKVs` function to extract multiple properties at\n      once (API change,
  Mauro Bieg).\n    + Parse CSS that doesn't contain the optional semicolon (Mauro
  Bieg).\n\n  * `trypandoc`: sort drop-down lists.\n\n  * Beamer template:\n\n    +
  Made `\\euro` conditional on presence of character.\n      for xelatex and lualatex,
  as it is for pdflatex (Andrew Dunning).\n    + Moved `header-includes` before setting
  of title (Thomas Hodgson),\n      to match the LaTeX template (jgm/pandoc-templates#168).\n
  \   + Added `section-titles` variable (defaults to true)\n      to enable/suppress
  section title pages in beamer\n      slide shows (Thomas Hodgson).\n    + Moved
  beamer themes after fonts, so that themes can\n      change fonts.  (Previously
  the fonts set were being\n      clobbered by lmodern.sty.) (Thomas Hodgson).\n\n
  \ * Beamer/LaTeX template changes (Thomas Hodgson):\n    + Added `thanks` variable\n
  \   + Use `parskip.sty` when `indent` isn't set (fall back to using\n      `setlength`
  as before if `parskip.sty` isn't available).\n    + Use `biblio-style` with biblatex.\n
  \   + Added `biblatexoptions` variable.\n\n  * LaTeX template changes:\n\n    +
  Added `paper` after `$papersize$` variable in latex template.\n      Thus you can
  say `papersize: a4` and the latex will contain\n      `a4paper`.  This change may
  break some existing workflows; if\n      you currently specify `a4paper`, you'll
  get `a4paperpaper` which\n      is meaningless.  However, the change seems worth
  it, as it will\n      make the `papersize` variable work uniformly across ConTeXt,
  LaTeX,\n      and html->pdf via wkhtmltopdf.\n    + Only pass options to color package
  if `colorlinks` is set\n      (Andrew Dunning).\n    + Make definition of `\\euro`
  conditional in xelatex/lualatex,\n      as it is already for pdflatex (Andrew Dunning).\n
  \   + Removed setting of `subject` in PDF metadata.\n      This used to be set to
  the subtitle, but really the subtitle\n      need not give the subject.  Also, `subtitle`
  can contain formatting,\n      so we'd need, at least, a plain text version for
  this.\n    + Moved `header-includes` before setting of `\\title`, `\\author`,\n
  \     etc.  This allows these macros to be redefined.\n    + Use `\\subtitle` command
  for `subtitle`, instead of tacking it\n      on to the title as before.  We give
  a no-op fallback definition if it\n      is not defined.  This change should produce
  much better results\n      in classes that support `\\subtitle`.  With the default
  article\n      class, which does not define `\\subtitle`, subtitles will no\n      longer
  be printed unless the user defines `\\subtitle` and\n      redefines `\\maketitle`.\n
  \   + Moved redefinitions of `\\paragraph` and `\\subparagraph` to\n      before
  header-includes.\n\n  * Context template:\n\n    + Use `simplefonts` for font loading
  (Paolo Rodr√≠guez).  This is\n      needed for things to work on ConTeXt stable from
  TeXLive 2015.\n    + Revert use of `\\setuphead` in title block (Andrew Dunning,\n
  \     Rik Kabel).\n\n  * Update LaTeX/ConTeXt link colour usage (Andrew Dunning).\n\n
  \ * Fixed man template so disabling hyphenation actually works.\n    The command
  needs to come after .TH.\n\n  * Added 'navigation' variable to beamer template (#2543).\n
  \   Valid values are `empty` (the default), `horizontal`, `vertical`,\n    and `frame`.
  \ Note that this changes the default behavior from\n    `horizontal` to `empty`.
  \ Closes #2543.\n\n  * Added `toc` to HTML slide format templates (Andrew Dunning),\n
  \   so that `--toc` creates a contents slide.\n\n  * Added `stack.full.yaml` to
  build `pandoc-citeproc` as well.\n\n  * Allow pipe tables with no body rows (#2556).\n
  \   Previously this raised a runtime error.\n\n  * Shared: Improved `fetchItem`
  so that `C:/Blah/Blah.jpg` isn't treated\n    as URL.  The Haskell URI parsing routines
  will accept \"C:\" as a\n    scheme, so we rule that out manually.  This helps with\n
  \   `--self-contained` and absolute Windows paths.\n\n  * Define a `meta-json` variable
  for all writers (#2019).  This contains\n    a JSON version of all the metadata,
  in the format selected for the\n    writer.  So, for example, to get just the YAML
  metadata, you can run\n    pandoc with the following custom template: `$meta-json$`.
  \ The intent\n    is to make it easier for static site generators and other tools
  to get\n    at the metadata.\n\n  * Document limitations of --self-contained (#2553).\n\n
  \ * Improved Citations section of README (#2551).  Added information\n    about
  `link-citations` and a link to the pandoc-citeproc man page.\n\n  * `ImageSize`:
  use `safeRead` instead of `readMaybe`, which isn't\n    in base < 4.6.\n\n  * Allow
  .adoc file extension for AsciiDoc (Andrew Dunning).\n\n  * Improved implicit pandoc-citeproc
  inclusion.\n    The filter pandoc-citeproc is automatically used when\n    `--bibliography`
  is specified on the command line, unless\n    `--natbib` or `--biblatex` is used.
  \ However, previously this\n    only worked if `--bibliography` was spelled out
  in full, and not\n    if `--biblio` was used.\n\n  * reveal.js: Interpret pauses
  correctly for all headers (#2530).\n    Previously, when using headers below the
  slide level, pauses are left\n    uninterpreted into pauses. In my opinion, unexpected
  behavior but\n    intentional looking at the code.\n\n  * Remove redundant `center`
  variable for reveal.js (Andrew Dunning).\n\n  * Parsing: Add `extractIdClass`, modified
  type of `KeyTable` (Mauro\n    Bieg, API change).\n\n  * ImageSize:  Added functions
  for converting between image dimensions\n    (Mauro Bieg).\n\n  * Use lts-3.18 in
  stack.yaml.  This avoids Windows build\n    issues with the HTTP library.\n\n  *
  Bump version bounds for dependencies.\n\n## pandoc 1.15.2.1 (2015-11-16)\n\n  *
  Added two missing test files, and `stack.yaml`, to\n    `extra-source-files` so
  they're included in the source tarball.\n\n  * reveal.js template: Fixed parallaxBackground
  options.\n    `parallaxBackgroundHorizontal` and `parallaxBackgroundVertical`\n
  \   need integer values, not strings.  (Vaughn Iverson)\n\n## pandoc 1.15.2 (2015-11-15)\n\n
  \ * `pandoc my.md -t context -o my.pdf` will now create a PDF using\n    ConTeXt
  rather than LaTeX (#2463).\n\n  * Fixed omitted `url(...)` in CSS data-uri with
  `--self-contained` (#2489).\n\n  * Added `emoji` Markdown extension, enabled by
  default in `markdown_github`\n    (#2523).  Added `Ext_emoji` to `Extension` in
  `Text.Pandoc.Options`\n    (API change).\n\n  * `Text.Pandoc.Readers.HTML.parseTags`:
  Fixed over-eager raw HTML inline\n    parsing (#2469).  Tightened up the inline
  HTML parser so it disallows\n    TagWarnings.\n\n  * Derive `Generic` instances
  for the types in `Text.Pandoc.Options`.\n\n  * Org reader:\n\n    + Fix paragraph/list
  interaction (Albert Krewinkel, #2464).\n      Paragraphs can be followed by lists,
  even if there is no blank line\n      between the two blocks.  However, this should
  only be true if the\n      paragraph is not within a list, were the preceding block
  should be\n      parsed as a plain instead of paragraph (to allow for compact lists).\n
  \     Thanks to @rgaiacs for bringing this up.\n    + Allow toggling header args
  (Albert Krewinkel, #2269).\n      Org-mode allows to skip the argument of a code
  block header argument if\n      it's toggling a value.  Argument-less headers are
  now recognized,\n      avoiding weird parsing errors.\n    + Fix markup parsing
  in headers (Albert Krewinkel, #2504).\n      Markup as the very first item in a
  header wasn't recognized.  This was\n      caused by an incorrect parser state:
  positions at which inline markup\n      can start need to be marked explicitly by
  changing the parser state.\n      This wasn't done for headers.  The proper function
  to update the state\n      is now called at the beginning of the header parser,
  fixing this issue.\n    + Fix emphasis rules for smart parsing (Albert Krewinkel,
  #2513).\n      Smart quotes, ellipses, and dashes should behave like normal quotes,\n
  \     single dashes, and dots with respect to text markup parsing.\n    + Require
  whitespace around definition list markers (#2518).\n      This rule was not checked
  before, resulting in bugs with footnotes\n      and some link types.\n\n  * Markdown
  reader:\n\n    + Pipe tables with long lines now get relative cell widths (#2471).\n
  \     If a pipe table contains a line longer than the column width (as set by\n
  \     `--columns` or 80 by default), relative widths are computed based on the\n
  \     widths of the separator lines relative to the column width.  This should\n
  \     solve persistent problems with long pipe tables in LaTeX/PDF output, and\n
  \     give more flexibility for determining relative column widths in other\n      formats,
  too.  For narrower pipe tables, column widths of 0 are used,\n      telling pandoc
  not to specify widths explicitly in output formats that\n      permit this.\n    +
  Improved parser for `mmd_title_block`.  We now allow blank metadata\n      fields.
  \ These were explicitly disallowed before.\n    + Citation keys can now contain
  `://`, so URLs and DOIs can be used\n      as citation keys (jgm/pandoc-citeproc#166).\n\n
  \ * Beamer template:  fix incompatibility of section slides with natbib.\n    Natbib
  (and presumably biblatex) bibliography commands create\n    their own section.  Since
  these are in frame environments,\n    we have an incompatibility with the `\\AtBeginSection`
  macro\n    which creates a special frame when a new section occurs.\n    (We can't
  have a frame inside another frame.) This change disables\n    `\\AtBeginSection`
  inside bibliography slides.  Thinks to Yihui Xie for\n    bringing the problem to
  my attention.  This supersedes #145.  See\n    discussion there.\n\n  * Textile
  reader:  don't do smart punctuation unless explicitly asked\n    (#2480).  Note
  that although smart punctuation is part of the textile\n    spec, it's not always
  wanted when converting from textile\n    to, say, Markdown.  So it seems better
  to make this an option.\n\n  * LaTeX reader: Handle `comment` environment (Arata
  Mizuki).\n    The `comment` environment is handled in a similar way to the\n    `verbatim`
  environment, except that its content is discarded.\n\n  * Docx reader:  Follow relationships
  correctly in foot/endnotes (#2258,\n    Jesse Rosenthal).  This fixes a problem
  with links in notes.\n\n  * LaTeX and ConTeXt writers: support `lang` attribute
  on divs and spans\n    (mb21).  For LaTeX, also collect `lang` and `dir` attributes
  on spans and\n    divs to set the `lang`, `otherlangs` and `dir` variables if they
  aren‚Äôt set\n    already.  See #895.\n\n  * LaTeX writer:\n\n    + Use proper command
  for `\\textarabic` (mb21).\n    + Added `de-CH-1901`, fixed `el-polyton` in `toPloyglossia`
  (Nick Bart).\n    + Use `\\hypertarget` and `\\hyperlink` for links.  This works
  correctly\n      to link to Div or Span elements.  We now don't bother defining
  `\\label`\n      for Div or Span elements.  Closes jgm/pandoc-citeproc#174.\n    +
  Avoid footnotes in list of figures (#1506).\n    + Properly handle footnotes in
  captions (#1506).\n    + Add `\\protect` to `\\hyperlink` (#2490).  Thanks to Hadrien
  Mary.\n    + Set `colorlinks` if `linkcolor`, `urlcolor`, `citecolor`, or\n      `toccolor`
  is set (#2508).\n\n  * Textile writer: support start number in ordered lists (#2465).\n\n
  \ * OpenDocument writer:  Allow customization of opendocument\n    automatic styles.
  \ Automatic styles can now be inserted in the\n    template, which now provides
  the enclosing `<office:automatic-styles>`\n    tags (#2520).\n\n  * Docx writer:
  \ insert space between footnote reference and note (#2527).\n    This matches Word's
  default behavior.\n\n  * EPUB writer:  don't download linked media when `data-external`
  attribute\n    set (#2473).  By default pandoc downloads all linked media and includes
  it\n    in the EPUB container.  This can be disabled by setting `data-external`
  on\n    the tags linking to media that should not be downloaded.  Example:\n\n        <audio
  controls=\"1\">\n         <source src=\"http://www.sixbarsjail.it/tmp/bach_toccata.mp3\"\n
  \        type=\"audio/mpeg\"></source>\n        </audio>\n\n  * HTML writer:  use
  width on whole table if col widths sum to < 100%.\n    Otherwise some browsers display
  the table with the columns\n    separated far apart.\n\n  * AsciiDoc template:  Fix
  `author` and `date`; add `keywords`,\n    `abstract` (Andrew Dunning).\n\n  * HTML-based
  templates (Andrew Dunning):\n\n    + Use en dash instead of hyphen between title
  prefix and title.\n    + Add `keywords` to metadata.\n    + Add `lang`, `dir`, `quotes`
  where missing.\n    + Always make author and date display conditional.\n    + Updated
  dzslides template from source.\n\n  * Man template: make \"generated by\" comment
  conditional.\n\n  * LaTeX, Beamer templates:\n\n    + Add `babel-otherlangs` for
  language divs/spans; `babel-newcommands`,\n      filled by commands that make babel
  understand the polyglossia-style\n      language directives (mb21, #137).\n    +
  Improved formatting of conditionals; `$for$` is always provided to allow\n      multiple
  options (Andrew Dunning, #141).\n    + Use `Ligatures=TeX` rather than `Mapping=tex-text`
  with `fontspec`\n      to improve support for LuaTeX (Andrew Dunning, #135).\n    +
  Revise `hyperref` usage (Andrew Dunning, #139, #141):\n        - use same options
  for all LaTeX engines;\n        - add `subtitle` and `keywords` to PDF metadata;\n
  \       - do not override `hyperref` link coloring without user input, effectively
  making\n          the `hidelinks` option the default (removed as a separate variable);\n
  \       - link colors can be enabled (using a slightly darker version of the old\n
  \         defaults) using a new `colorlinks` variable, automatically used by\n          the
  LaTeX writer when custom colors are specified;\n        - `pdfborder={0 0 0}` is
  automatically set by `hyperref` with\n          `colorlinks`, and is only applied
  if `colorlinks` is disabled.\n\n  * ConTeXt template (Andrew Dunning):\n\n    +
  New variables for controlling styles: `linkstyle`, `linkcolor`,\n      `linkcontrastcolor`,
  `layout`, `pagenumbering`, `whitespace`, `indenting`,\n      `interlinespace`, `headertext`,
  `footertext`, `mainfont`, `sansfont`,\n      `monofont`, `mathfont`, `fontsize`.\n
  \   + Default template no longer supports MkII.\n    + Improve writing of title
  block (suppressing numbering of first page).\n    + Add `title` `subtitle`, `author`,
  `date`, `keywords` to PDF metadata.\n    + Support `subtitle`, `abstract`.\n    +
  Support list of figures (`lof`), list of tables (`lot`).\n    + Disable link styling
  by default.\n    + Define styles for all section types.\n    + Enable microtype.\n
  \   + Improved formatting of conditionals.\n\n  * Beamer template:  added code to
  prevent slide breaks inside paragraphs\n    (#2422, thanks to Nick Bart).  This
  will matter, in practice, only when\n    `allowframebreaks` is used.  It is especially
  helpful for bibliography\n    slides.\n\n  * OpenDocument template:  Add `<office:automatic-styles>`
  tag around\n    automatic styles.  The writer now longer provides this (see #2520).\n\n
  \ * Restored Text.Pandoc.Compat.Monoid.\n\n  * Do not export (<>) from custom Prelude.
  \ The Prelude now matches\n    base 4.8 Prelude's API.\n\n  * Don't use custom prelude
  with ghc 7.10.  Use the custom prelude\n    only for earlier versions.  This change
  makes `stack ghci` and\n    `cabal repl` work (#2503), at least with ghc 7.10.\n\n
  \ * Changed ¬ß to % in operators from Odt.Arrows.Utils (#2457).\n    This prevents
  problems building haddocks with \"C\" locale.\n\n  * Change default for old-locale
  flag to False.\n\n  * Use stack in deb, osx, and Windows package generators.\n\n
  \ * Added Vagrantfile for building deb in vm.\n    This should help in automating
  binary package creation.  'make package'\n    will make the package.  'make package
  COMMIT=blah' will make the package\n    from commit blah.\n\n  * README:\n\n    +
  Consistent capitalization for pandoc and Markdown.\n    + Fixed `auto_identifiers`
  examples (Benoit Schweblin).\n    + Improved documentation of template variables
  (Andrew Dunning).\n\n## pandoc 1.15.1 (2015-10-15)\n\n  * `pandocVersion` is now
  defined in `Text.Pandoc.Shared`\n    and reexported from `Text.Pandoc` (Alex Vong).
  \ This allows\n    writers to access it.  (Alex Vong) (API change)\n\n  * For `markdown_mmd`,
  add: `implicit_figures`, `superscripts`,\n    `subscripts` (#2401).\n\n  * Added
  `odt` as input format (MarLinn).  Added new module\n    `Text.Pandoc.Reader.ODT`
  (API change). Fully implemented features:\n    Paragraphs, Headers, Basic styling,
  Unordered lists, Ordered lists,\n    External Links, Internal Links, Footnotes,
  Endnotes, Blockquotes.\n    Partly implemented features: Citations, Tables.\n\n
  \ * Markdown Reader:\n\n    + Add basic tests for each header style (Ophir Lifshitz).\n
  \   + Add implicit header ref tests for headers with spaces (Ophir Lifshitz).\n
  \   + Skip spaces in headers (Ophir Lifshitz).\n    + Handle 'id' and 'class' in
  parsing key/value attributes (#2396).\n      `# Header {id=\"myid\" class=\"foo
  bar\"}`\n      is now equivalent to `# Header {#myid .foo .bar}`.\n    + Use '='
  instead of '#' for atx-style headers in markdown+lhs.\n      (Kristof Bastiaensen)\n
  \   + Pipe tables: allow indented columns.  Previously the left-hand column\n      could
  not start with 4 or more spaces indent.  This was inconvenient\n      for right-aligned
  left columns.  Note that the first (header column)\n      must still have 3 or fewer
  spaces indentation, or the table will be\n      treated as an indented code  block.\n
  \   + Fix regression:  allow HTML comments containing `--`.\n      Technically this
  isn't allowed in an HTML comment, but\n      we've always allowed it, and so do
  most other implementations.\n      It is handy if e.g. you want to put command line
  arguments\n      in HTML comments.\n\n  * LaTeX reader:\n\n    + Don't eat excess
  whitespace after macros with only optional\n      arguments (#2446).\n    + Support
  longtable (#2411).\n    + Implement `\\Cite` (#2335).\n    + Support abstract environment.
  \ The abstract populates an\n      `abstract` metadata field.\n    + Properly handle
  booktabs lines.  Lines aren't part of the\n      pandoc table model, so we just
  ignore them (#2307).\n\n  * HTML reader:\n\n    + Handle type attribute on ol, e.g.
  `<ol type=\"i\">` (#2313).\n    + Updated for new automatic header attributes.\n
  \   + Add auto identifiers if not present on headers.  This makes\n      TOC linking
  work properly.\n    + Detect `font-variant` with `pickStyleAttrProps` (Ophir Lifshitz).\n
  \   + Test `<ol>` type, class, and inline list-style(-type) CSS\n      (Ophir Lifshitz).\n
  \   + Better handling of \"section\" elements (#2438).  Previously\n      `<section>`
  tags were just parsed as raw HTML blocks.  With\n      this change, section elements
  are parsed as Div elements with\n      the class \"section\".\n\n  * MediaWiki reader:
  \ handle unquoted table attributes (#2355).\n\n  * DocBook reader:\n\n    + Added
  proper support for DocBook `xref` elements (Frerich Raabe).\n      Added `dbContent`
  field to reader state, so we can lookup\n      cross refs.\n    + Handle `informalexample`
  (#2319).\n\n  * Docx Reader:\n\n    + Create special punctuation test (Ophir Lifshitz).\n
  \   + Parse soft, no-break hyphen elements (Ophir Lifshitz).\n    + Updated headers
  test (Ophir Lifshitz). Replaced `styles.xml`\n      in `headers.docx` with pandoc's
  current `styles.xml`, which\n      contains styles for Heading 1 through 6. Added
  Heading 4\n      through 7 to the test document. Note that Heading 7 is not\n      parsed
  as a Heading because there is no Heading 7 style.\n\n  * RST reader:  better handling
  of indirect roles.\n    Previously the parser failed on this kind of case\n\n        ..
  role:: indirect(code)\n\n        .. role:: py(indirect)\n           :language: python\n\n
  \       :py:`hi`\n\n    Now it correctly recognizes `:py:` as a code role.\n\n  *
  Org reader:\n\n    + Add auto identifiers if not present on headers\n      (#2354,
  Juliusz Gonera).\n    + Allow verse blocks to contain empty lines (#2402,\n      Albert
  Krewinkel).\n\n  * EPUB reader:  stop mangling external URLs (#2284).\n\n  * RST
  writer:\n\n    + Don't insert `\\ ` when complex expression in matched pairs.\n
  \     E.g. `` [:sup:`3`] `` is okay; you don't need `` [:sup:`3`\\ ] ``.\n    +
  Ensure that `\\ ` is inserted when needed before Cite and Span\n      elements that
  begin with a \"complex\" element (jgm/pandoc-citeproc#157).\n    + Normalize headers
  only in \"standalone\" mode (#2394).\n\n  * Haddock writer: escape `*` and `^` (G.
  Bataille).\n\n  * Markdown writer:\n\n    + In TOC, add links to headers (#829).\n
  \   + Use unicode super/subscripts for digits in plain output\n      (when the `superscripts`
  and `subscripts` extensions are\n      not enabled).\n\n  * Docx writer:\n\n    +
  Moved invalid character stripping to `formattedString`.\n      This avoids an inefficient
  generic traversal (#2356).\n    + Use user data directory for `reference.docx` archive.\n
  \     This allows the test suite to work without installing pandoc first.\n      It
  also brings the docx writer in line with the odt writer.\n    + Tests:  docx writer
  tests now use `../data` for data directory.\n      This allows tests to be run without
  installing first.\n    + Tests: Use real jpg (not empty) for docx tests to avoid
  warning.\n\n  * LaTeX writer:\n\n    + Fixed detection of 'chapters' from template.\n
  \     If a documentclass isn't specified in metadata, but the\n      template has
  a hardwired bookish documentclass, act as if\n      `--chapters` was used.  This
  was the default in earlier\n      versions, but it has been broken for a little
  while.\n    + Correctly recognize book documentclass in metadata (#2395).\n    +
  Set language-related variables automatically, depending\n      on the value of the
  `lang` field, which is now always\n      assumed to be in BCP47 format (mb21, #1614,
  #2437).\n    + Add `\\protect` to `\\hyperdef` in inline context.  This way we\n
  \     don't get an error when this is used as a moveable argument (#2136).\n    +
  Support all frame attributes in Beamer.\n    + Percent-encode more special characters
  in URLs (#1640, #2377).\n      The special characters are '<','>','|','\"','{','}','[',']','^',
  '`'.\n\n  * HTML writer:\n\n    + Update KaTeX JS and CSS versions (Emily Eisenberg).\n
  \   + For dzslides, add `role=\"note\"` for speaker notes (#1693).\n    + Percent-encode
  more special characters in URLs (#1640, #2377).\n      The special characters are
  '<','>','|','\"','{','}','[',']','^', '`'.\n    + Render Div with class `section`
  as `<section>` in HTML5.\n\n  * EPUB writer:\n\n    + In TOC, replace literal `<br/>`
  with space (#2105).\n    + With `--webtex`, include image file rather than `data:`
  URI (#2363).\n\n  * Native writer: format Div properly, with blocks separated.\n\n
  \ * Support bidirectional text output with XeLaTeX, ConTeXt and HTML\n    (#2191,
  mb21).\n\n  * Reference Docx:\n\n    + Add missing Header 6 style (steel blue) (Ophir
  Lifshitz).\n    + Correct `outlineLvl` for Header styles (Ophir Lifshitz).\n\n  *
  Templates\n\n    + Beamer:  Add `innertheme`, `outertheme` variables\n      (Guilhem
  Bonnefille, #121). Add space after colon in figure caption.\n      Integrate recent
  font and language updates from LaTeX template;\n      allow use of `mainfont` variable
  for changing the slide text\n      in XeTeX and LuaTeX (Andrew Dunning, #131).\n
  \   + LaTeX:  Add `mainfontoptions`, `sansfontoptions`,\n      `monofontoptions`,
  `mathfontoptions`, `fontfamilyoptions`\n      (Andrew Dunning, #122).  Support handling
  of bidirectional\n      text (mb21, #120). Improve reliability of superscripts/subscripts\n
  \     under XeTeX and prevent letters and numbers from appearing on a\n      different
  baseline by removing use of the `realscripts` package\n      (via `xltxtra`).  To
  restore use of OpenType characters for these\n      features under XeTeX or LuaTeX,
  add `\\usepackage{realscripts}` to\n      `header-includes` (Andrew Dunning, #130).
  \ Remove redundant\n      reference to `xunicode` (Andrew Dunning, #130).  Add `fontenc`,\n
  \     `indent`, `subparagraph` variables (Andrew Dunning).\n      Allow use of `hidelinks`
  variable for `hyperref` package (Hugo Roy,\n      #113).  Prevent package clash
  with `tufte-latex` and other classes that\n      include `hyperref` or `color` (Xavier
  Olive, #115).\n    + ConTeXt:  Support handling of bidirectional text (mb21, #120).\n
  \   + LaTeX and ConTeXt: Use more specific language variables.\n      Instead of
  directly using `lang`, we now use `babel-lang` and\n      `polyglossia-lang` and
  `context-lang`.  These variables are set by\n      the writers to the necessary
  values, based on the `lang` variable\n      (which now always takes a value in BCP47
  format). (mb21, #114, #129).\n    + HTML:  Support handling of bidirectional text
  (mb21, #120).\n      Move HTML5 shiv after CSS and fix URL (Andrew Dunning).\n      Add
  dir attribute in html5 (Andrew Dunning).\n    + reveal.js: Add `controls`, `progress`
  variables (Gr√©goire Pineau, #127).\n      Add `width`, `height` variables (Anrew
  Dunning).  Update template\n      from 3.1 source (Andrew Dunning).  All configuration
  options are now\n      available as variables, but are only be included if set (reveal.js\n
  \     uses defaults otherwise).\n    + man: Added comment stating that the page
  is autogenerated by pandoc,\n      giving version.  Added `adjusting` and `hyphenate`
  variables\n      (Alex Vong, #123).\n\n  * epub.css: added selectors for nested
  emphasis (Pablo Rodriguez).\n\n  * MediaBag:  ensure that `/` is always used as
  path separator.\n\n  * `sample.lua`: define `CaptionedImage`, add newline at end
  (#2393).\n\n  * Added `--bash-completion` option.  This generates a bash completion\n
  \   script.  To use: `eval \"$(pandoc --bash-completion)\"`.\n\n  * Text.Pandoc.Error:
  Define Typeable and Exception instances\n    for PandocError (#2386).\n\n  * Text.Pandoc.Parsing:
  `toKey`: strip off outer brackets.\n    This makes keys with extra space at the
  beginning and end\n    work:  e.g.\n\n        [foo]: bar\n\n        [ foo ]\n\n
  \   will now be a link to bar (it wasn't before).\n\n  * Text.Pandoc: disable `auto_identifiers`
  for epub.\n    The epub writer inserts its own auto identifiers;\n    this is more
  complex due to splitting into \"chapter\" files.\n\n  * Renamed Text.Pandoc.Compat.Locale
  -> Text.Pandoc.Compat.Time.\n    It now reexports Data.Time.\n\n  * Use custom Prelude
  to avoid compiler warnings.\n\n    + The (non-exported) prelude is in prelude/Prelude.hs.\n
  \   + It exports Monoid and Applicative, like base 4.8 prelude,\n      but works
  with older base versions.\n    + It exports (<>) for mappend.\n    + It hides 'catch'
  on older base versions.\n\n  * Added a `stack.ymal` and stack install instructions
  to INSTALL.\n\n  * Clarified what is \"out of scope\" in README and CONTRIBUTING.md.\n\n
  \ * Added note to CONTRIBUTING.md about ghc versions and travis.\n\n  * Clarify
  docs on block quotes.  The space after `>` is optional (#2346).\n\n  * Removed obsolete
  reference to default.csl (#2372).\n\n  * List all styles in manual for `--reference-docx`
  (Chris Black)\n\n  * Don't capitalize header links in man page.\n\n  * Added section
  on repl to CONTRIBUTING.md.\n\n  * README:  Added space after backslash in image
  example (#2329).\n\n  * Document details of citation locator terms (Nick Bart).\n\n
  \ * Fixed some internal links in README (#2309).\n\n  * Improve CSL documentation,
  variables documentations,\n    links, and cross-references in README. (Andrew Dunning)\n\n
  \ * Fix build failure with `--flags=-https` (Sergei Trofimovich).\n\n  * Use `newManager`
  instead of `withManager` in recent `http-client`.\n    This avoids a deprecation
  warning.\n\n  * Allow building with latest versions of http-types,\n    HUnit, criterion,
  syb, aeson.\n\n  * Updated benchmark program for new criterion API.\n\n  * Setup.hs:
  rewrite so as not to use process, directory, filepath.\n    Using anything outside
  base is dangerous, since older\n    versions of ghc may link against two different
  versions.\n\n  * Added appveyor (Windows continuous integration) builds.\n\n  *
  New `.travis.yml`.  Autgenerated using `make_travis_yml.hs`.\n    This script has
  been modified in a few ways, e.g. to add `GHCOPTS`.\n    `make .travis.yml` regenerates
  it based on the tested-with\n    field of the cabal file.\n\n## pandoc 1.15.0.6
  (2015-07-15)\n\n  * `--self-contained`: Fixed overaggressive CSS minimization\n
  \   (#2301, 2286). Previously `--self-contained` wiped out all\n    spaces in CSS,
  including semantically significant spaces.\n    This was a regression from 1.14.x.\n\n
  \ * Markdown reader: don't allow bare URI links or autolinks in link\n    label
  (#2300).  Added test cases.\n\n  * `Text.Pandoc.Parsing`, `uri`: Improved bare autolink
  detection (#2299).\n    Previously we disallowed `-` at the end of an autolink,\n
  \   and disallowed the combination `=-`.  This commit liberalizes the\n    rules
  for allowing punctuation in a bare URI, and adds test cases.\n    One potential
  drawback is that you can no longer put a bare\n    URI in em dashes like this:\n
  \   `this uri---http://example.com---is an example.`\n    But in this respect we
  now match github's treatment of bare URIs.\n\n  * HTML writer:  support speaker
  notes in dzslides.\n    With this change `<div class=\"notes\">` and also `<div
  class=\"notes\"\n    role=\"note\">` will be output if `-t dzslides` is used. So
  we can\n    have speaker notes in dzslides too.  Thanks to maybegeek.\n\n  * Updated
  dzslides template.\n\n  * Improved documentation of options to print system default
  files (#2298).\n    `--print-default-data-file` and `--print-default-template`.\n\n
  \ * DokuWiki writer: use `$..$` for Math instead of `<math>..</math>`\n    (Tiziano
  M√ºller).  MathJax seems currently to be the only maintained\n    math rendering
  extension for DokuWiki.\n\n  * `Text.Pandoc.Shared`: Changed `hierarchicalize` so
  it treats references\n    div as top-level header (#2294).  This fixes a bug with
  `--section-divs`,\n    where the final references section added by pandoc-citeproc,
  enclosed in\n    its own div, got nested in the div for the section previous to
  it.\n\n  * Allow vector 0.11.\n\n  * Require cmark > 0.4.\n\n## pandoc 1.15.0.5
  (2015-07-10)\n\n  * HTML writer: Fixed email javascript obfuscation with `mailto:`\n
  \   URLs (#2280).  This fixes a potential security issue.  Because\n    single quotes
  weren't being escaped in the link portion, a\n    specially crafted email address
  could allow javascript code injection.\n\n  * RST reader:  allow inline formatting
  in definition list field\n    names (Lars-Dominik Braun).\n\n  * PDF:  Make sure
  `--latex-engine-opt` goes before the filename\n    on the command line.  LaTeX needs
  the argument to come after\n    the options (#1779).\n\n  * CommonMark writer: fixed
  tags used for super/subscript.\n\n  * ConTeXt template:  activate hanging indent
  for definition lists\n    (mb21).\n\n  * Make cabal require `hsb2hs` >= 0.3.1 if
  `embed_data_files` specified.\n    This is done by adding `hookedPrograms` in `Setup.hs`,
  which allows us\n    to include `hsb2hs` in Build-Tools in cabal.\n\n  * Improved
  Windows installer (thanks to nkalvi).\n\n    + When per-machine installation is
  chosen, the system path\n      is updated instead of the user's.\n    + An appropriate
  default is used for per-machine installation\n      directory.\n    + Admin privileges
  are no longer required for a per-user install\n\n  * Travis:  unpack sdist for build
  to catch packaging bugs.\n\n  * Improved documentation on where user templates go
  (#2272).\n\n## pandoc 1.15.0.4 (2015-07-03)\n\n  * Added pandoc.1 man page to the
  repository.  It is no longer\n    built as part of the cabal build process. (This
  proved too\n    fragile.)  pandoc.1 can be regenerated (`make man/pandoc.1`)\n    when
  `README` is changed.\n\n  * Copying of the man page now respects `--destdir` (#2262).\n\n
  \ * Improved error messages for filters.  User is now informed if\n    the filter
  requires an interpreter that isn't found in the path,\n    or if the filter returns
  an error status.\n\n## pandoc 1.15.0.3 (2015-07-02)\n\n  * Ensure target directory
  is created when installing man page.\n\n## pandoc 1.15.0.2 (2015-07-02)\n\n  * Added
  files needed for building man page to Extra-Source-Files.\n\n## pandoc 1.15.0.1
  (2015-07-01)\n\n  * Man page is now built and installed as part of the cabal build\n
  \   process. Removed Makefile target for man page.\n\n## pandoc 1.15 (2015-07-01)\n\n
  \ * Man page changes:\n\n    + Removed `--man1`, `--man5` options (breaking change).\n
  \   + Removed `Text.Pandoc.ManPages` module (breaking API change).\n    + Makefile
  target for `man/man1/pandoc.1`.  This uses pandoc to\n      create the man page
  from README using a custom template and filters.\n    + Added `man/` directory with
  template and filters needed to build\n      man page.\n    + We no longer have two
  man pages: `pandoc.1` and `pandoc_markdown.5`.\n      Now there is just pandoc.1,
  which has all the content from README.\n      This change was needed because of
  the extensive cross-references\n      between parts of the README.\n    + Removed
  old `data/pandoc.1.template` and\n      `data/pandoc_markdown.5.template`.\n\n  *
  OpenDocument writer: Do not add a carriage return after a hard\n    line break (Michael
  Chladek).\n\n  * ConTeXt writer:\n\n    + use `\\goto` for internal links.\n    +
  Added a `%` at end for `\\reference` to avoid spurious space.\n\n  * Ignore sandbox
  on 'make quick'\n\n## pandoc 1.14.1 (2015-06-30)\n\n  * Added `--man1` and `--man5`
  options to pandoc, allowing\n    pandoc to generate its own man pages. Man pages
  are no longer\n    automatically generated in the build process (the process for\n
  \   this was too complex and prone to failure, #2190). The\n    `make-pandoc-man-pages`
  executable has been removed. The\n    `man/` directory has been removed, and man
  page templates\n    have been moved to `data/`. NOTE TO PACKAGERS: You will no\n
  \   longer find pandoc's man pages in `man/`, but you can\n    generate them using
  `pandoc --man1 > pandoc.1` and `pandoc\n    --man5 > pandoc_markdown.5`.\n\n  *
  Added new unexported module:  `Text.Pandoc.ManPages`.\n\n  * `README` now acts like
  a data file (even though it isn't in\n    `data/`).  So, for example, `pandoc --print-default-data-file
  README`\n    will produce the README.)  This change was required for the `--man1`\n
  \   and `--man5` options, since the man pages are produced from the\n    README,
  but it may be useful for other purposes as well.\n\n  * Allow `reference.docx` and
  `reference.odt` to be used with\n    `--print-default-data-file` and to shadow defaults
  if placed in\n    the user data directory.  Note that as of 1.14, we no longer\n
  \   include these files as data files; instead, we include their\n    components.
  \ This change causes pandoc to behave as if it has\n    these data files; they are
  constructed on demand when needed\n    using `getDefaultReferenceDocx` and `getDefaultReferenceODT`.\n\n
  \ * Fixed regression in CSS parsing with `--self-contained` (#2224).\n    Pandoc
  1.14.0.x used css-text to parse the CSS, but its parser\n    silently drops big
  sections of CSS.  This commit replaces the\n    use of css-text with a small but
  principled CSS preprocessor,\n    which removes whitespace and comments and replaces
  `url()` with\n    base 64 data when possible.\n\n  * Use `https://` instead of `//`
  for MathJax and KaTeX CDN URLs (#1920).\n    This will allow math to work when pages
  are being viewed locally.\n\n  * `Text.Pandoc.Options`:  Export `plainExtensions`.\n
  \   These are the extensions used in `plain` output.\n\n  * LaTeX reader: Don't
  parse `_` and `^` as sub/superscript outside of\n    math mode; treat them as regular
  inline text.  Normally these will\n    cause an error in LaTeX, but there are contexts
  (e.g. `alltt`\n    environments) where they are allowed.\n\n  * HTML reader:  allow
  `<body>` to close `<head>`.\n\n  * DocBook reader: support `mediaobject`s and `figures`
  (#2184, mb21).\n\n  * RST reader: Fix reference names with special characters\n
  \   (Lars-Dominik Braun).\n\n  * Textile writer:  escape `+` and `-` as entities
  (#2225).\n\n  * DokuWiki writer: Use proper `<code>` tags for code blocks (#2213).\n\n
  \ * Plain writer:  don't use symbols for super/subscript (#2237).\n    Simplified
  code by using `plainExtensions`.\n\n  * InDesign writer: Properly escape URLs containing
  more than one\n    colon character (gohai).\n\n  * Docx writer: Make sure we use
  dist version of `reference.docx`\n    (and not the user's version) for certain settings.
  \ Taking some\n    settings values from a user-supplied reference.docx can lead
  to\n    corruption.  This fixes a regression from the last release (#2249).\n\n
  \ * `Text.Pandoc.Shared`: exports `getDefaultReferenceDocx` and\n    `getDefaultReferenceODT`
  (API change).  These functions have been\n    removed from the Docx and ODT writers.\n\n
  \ * LaTeX template (Xavier Olive):\n    + Added `CJKmainfont` and `CJKoptions` variables.\n
  \   + Allow dvipsnames (e.g. `MidnightBlue`) for colors (Xavier Olive).\n\n  * Epub
  templates:  use `author.role`, not `author.type`.\n\n  * Bump cmark version to >=
  0.3.4.\n\n  * Improved Windows installer (#2205, thanks to nkalvi).\n    Users can
  now select a per-user or systemwide install, and can set\n    the installation path.
  \ At the end of installation, the install location\n    is given.  The install location
  is also now given in the list of\n    installed programs in Control Panel.  Cleaner
  WiX syntax is used for\n    setting the path.\n\n  * Added `download_stats` target
  to Makefile.\n\n## pandoc 1.14.0.4 (2015-06-02)\n\n  * Added missing commonmark
  template.\n\n  * Improved try pandoc (moved button, show raw command).\n\n## pandoc
  1.14.0.3 (2015-06-01)\n\n  * Allow compilation with syb 0.5.*.\n\n  * Custom writer:
  \ fixed some compiler warnings for ghc < 7.10.\n\n## pandoc 1.14.0.2 (2015-05-31)\n\n
  \ * Allow building with hslua 0.4.\n\n## pandoc 1.14.0.1 (2015-05-28)\n\n  * Fixed
  problem with building of `reference.docx` and `reference.odt`\n    when the `embed_data_files`
  flag is used.  Instead of having a phase\n    of the build where `reference.docx`
  and `reference.odt` are created\n    from their constituent data files, we now construct
  these archives\n    from their constituents when a `docx` or `odt` is built.  The\n
  \   constituent files have been moved from `extra-source-files` to\n    `data-files`,
  and `reference.docx` and `reference.odt` have been\n    removed. Users can create
  their own `reference.docx` or\n    `reference.odt` by using pandoc to create a simple
  `docx` or `odt`.\n    `make-reference-files.hs` has been removed, simplifying the
  build\n    process (#2187)\n\n  * Don't include generated man pages in extra-source-files
  (#2189).\n\n  * Bumped upper bound for aeson.\n\n  * ConTeXt writer:  create internal
  link anchors for Div elements with\n    identifiers.  (This is needed for linked
  citations to work.)\n\n## pandoc 1.14 (2015-05-27)\n\n### New features\n\n  * Added
  `commonmark` as input and output format.\n\n  * Added `--verbose` flag for debugging
  output in PDF production (#1840,\n    #1653).\n\n  * Allow wildcards in `--epub-embed-font`
  arguments (#1939).\n\n  * Added `--latex-engine-opt` option (#969, #1779, Sumit
  Sahrawat).\n\n  * Added `shortcut_reference_links` extension (Konstantin Zudov,
  #1977).\n    This is enabled by default for those markdown flavors that\n    support
  reading shortcut reference links, namely: `markdown`,\n    `markdown_strict`, `markdown_github`,
  `markdown_php`.\n    If the extension is enabled, the reader parses shortcut reference\n
  \   links like `[foo]`, and the writer creates such links unless doing\n    so would
  cause problems.  Users of markdown flavors that support\n    shortcut reference
  links should not notice a difference in reading\n    markdown, but the markdown
  pandoc produces may differ.\n    If shortcut links are not desired, the extension
  can be disabled\n    in the normal way.\n\n### Behavior changes\n\n  * `--toc` is
  now supported for `docx` output (#458, Nikolay Yakimov).\n    A \"dirty\" TOC is
  created at the beginning of document.\n    It can be regenerated after the document
  has been opened.\n\n  * An implicit `--filter pandoc-citeproc` is now triggered
  only when the\n    `--bibliography` option is used, and not when the `bibliography`\n
  \   field in metadata is specified (#1849).\n\n  * Markdown reader:\n\n    + Reference
  links with `implicit_header_references` are no longer\n      case-sensitive (#1606).\n
  \   + Definition lists no longer require indentation for first line (#2087).\n      Previously
  the body of the definition (after the `:` or `~` marker)\n      needed to be in
  column 4.  This commit relaxes that requirement,\n      to better match the behavior
  of PHP Markdown Extra.  So, now\n      this is a valid definition list:\n\n            foo\n
  \           : bar\n    + Resolve a potentially ambiguity with table captions:\n\n
  \           foo\n\n              : bar\n\n              -----\n              table\n
  \             -----\n\n      Is \"bar\" a definition, or the caption for the table?
  \ We'll count\n      it as a caption for the table.\n    + Disallow headerless pipe
  tables (#1996), to conform to GFM and PHP\n      Markdown Extra.  Note:  If you
  have been using headerless pipe tables,\n      this change may cause existing tables
  to break.\n    + Allow pipe tables with header but no body (#2017).\n    + Allow
  a digit as first character of a citation key (Matthias Troffaes).\n      See https://github.com/jgm/pandoc-citeproc/issues/97\n\n
  \ * LaTeX reader:\n\n    + Don't limit includes to `.tex` extension (#1882).\n      If
  the extension is not `.tex`, it must be given explicitly in\n      the `\\input`
  or `\\include`.\n\n  * Docx reader:\n\n    + Allow numbering in the style file.
  \ This allows inherited styles\n      with numbering (lists) (Jesse Rosenthal).\n\n
  \ * Org reader:\n\n    + Support smart punctuation (Craig Bosma).\n    + Drop trees
  with a :noexport: tag (Albert Krewinkel). Trees having a\n      `:noexport:` tag
  set are not exported.  This mirrors org-mode.\n    + Put header tags into empty
  spans (Albert Krewinkel, #2160).\n      Org mode allows headers to be tagged: `*
  Headline  :TAG1:TAG2`.\n      Instead of being interpreted as part of the headline,
  the tags are now\n      put into the attributes of empty spans.  Spans without textual
  content\n      won't be visible by default, but they are detectable by filters.
  \ They\n      can also be styled using CSS when written as HTML.\n    + Generalize
  code block result parsing (Albert Krewinkel).\n      Previously, only code blocks
  were recognized as result blocks;\n      now, any kind of block can be the result.\n\n
  \ * Append newline to the LineBreak in Dokuwiki, HTML, EPUB,\n    LaTeX, MediaWiki,
  OpenDocument, Texinfo writers (#1924, Tim Lin).\n\n  * HTML writer:\n\n    + Add
  \"inline\" or \"display\" class to math spans (#1914).\n      This allows inline
  and display math to be styled differently.\n    + Include raw latex blocks if `--mathjax`
  specified (#1938).\n    + Require highlighting-kate >= 0.5.14 (#1903).\n      This
  ensures that all code blocks will be wrapped in a `div`\n      with class `sourceCode`.
  \ Also, the default highlighting CSS\n      now adds `div.sourceCode { x-overflow:
  auto; }`, which means\n      that code blocks (even with line numbers) will acquire
  a scroll\n      bar on screens too small to display them (e.g. mobile phones).\n
  \     See also jgm/highlighting-kate#65.\n\n  * LaTeX writer:\n\n    + Use a declaration
  for tight lists (Jose Luis Duran, Joseph\n      Harriott). Previously, pandoc hard-coded
  some commands to make\n      tight lists in LaTeX.  Now we use a custom command
  instead,\n      allowing the styling to be changed in a macro in the header.\n      (Note:
  \ existing templates may need to be modified to include\n      the definition of
  this macro.  See the current template.)\n    + Beamer output: if the header introducing
  a slide has the\n      class `fragile`, add the `[fragile]` option to the slide
  (#2119).\n\n  * MediaWiki writer:\n\n    + Use `File:` instead of the deprecated
  `Image:` for images and\n      other media files (Greg Rundlett).\n\n  * DocBook
  writer:\n\n    + Render a `Div (id,_,_) [Para _]` element as a `para` element\n
  \     with an `id` attribute.  This makes links to citations work in\n      DocBook
  with pandoc-citeproc.\n\n  * RST writer:\n\n    + Normalize headings to sequential
  levels (Nikolay Yakimov).\n      This is pretty much required by docutils.\n    +
  Treat headings in block quotes, etc as rubrics (Nikolay Yakimov).\n    + Better
  handling of raw latex inline (#1961).  We use\n      `` :raw-latex:`...` `` and
  add a definition for this role to\n      the template.\n\n  * EPUB writer:\n\n    +
  Remove `linear=no` from cover `itemref` (#1609).\n    + Don't use `sup` element
  for epub footnotes (#1995).\n      Instead, just use an a element with class `footnoteRef`.\n
  \     This allows more styling options, and provides better results\n      in some
  readers (e.g. iBooks, where anything inside the a\n      tag breaks popup footnotes).\n
  \   + Take TOC title from `toc-title` metadata field.\n\n  * Docx writer:\n\n    +
  Implemented `FirstParagraph` style (Jesse Rosenthal).\n      Following the ODT writer,
  we add the `FirstParagraph` style to the\n      first text paragraph following an
  image, blockquote, table, heading,\n      or beginning of document.  This allows
  it to be styled differently.\n      The default is for it to be the same as `Normal`.\n
  \   + Added `BodyText` style (Jesse Rosenthal).\n      We apply a `BodyText` style
  to all unstyled paragraphs. This is,\n      essentially, the same as `Normal`, except
  that since not everything\n      inherits from `BodyText` (the metadata won't, for
  example, or\n      the headers or footnote numbers), we can change the text in the
  body\n      without having to make exceptions for everything.  If we do want to\n
  \     change *everything*, we can still do it through `Normal`.\n    + Altered `Blockquote`
  style slightly (Jesse Rosenthal).\n      Since `BlockQuote` derives from `BodyText`,
  we just want to specify\n      by default that it won't indent, regardless of what
  `BodyText` does.\n      Note that this will not produce any visible difference in
  the default\n      configuration.\n    + Take TOC title from `toc-title` metadata
  field (Nikolay Yakimov).\n    + Added a style to figure images (Nikolay Yakimov).\n
  \     Figures with empty captions use style `Figure`.\n      Figures with nonempty
  captions use style `Figure with Caption`, which\n      is based on `Figure`, and
  additionally has `keepNext` set.\n\n  * ODT writer:\n\n    + Added figure captions
  (Nikolay Yakimov). The following styles are\n      used for figures:\n      `Figure`
  -- for figure with empty caption),\n      `FigureWithCaption` (based on `Figure`)
  -- for figure with caption,\n      `FigureCaption` (based on `Caption`) -- for figure
  captions.\n      Also, `TableCaption` (based on `Caption`) is used for table captions.\n\n###
  API changes\n\n  * New `Text.Pandoc.Error` module with `PandocError` type\n    (Matthew
  Pickering).\n\n  * All readers now return `Either PandocError Pandoc` instead of
  `Pandoc`\n    (Matthew Pickering).  This allows better handling of errors.\n\n  *
  Added `Text.Pandoc.Writers.CommonMark`, exporting `writeCommonMark`.\n\n  * Added
  `Text.Pandoc.Readers.CommonMark`, exporting `readCommonMark`.\n\n  * Derive `Data`
  and `Typeable` instances for `MediaBag`, `Extension`,\n    `ReaderOptions`, `EPUBVersion`,
  `CiteMethod`, `ObfuscationMethod`,\n    `HTMLSlideVariant`, `TrackChanges`, `WriterOptions`
  (Shabbaz\n    Youssefi).\n\n  * New `Ext_shortcut_reference_links` constructor for
  `Extension`\n    (Konstantin Zudov).\n\n###  Bug fixes\n\n  * Markdown reader:\n\n
  \   + Allow smart `'` after inline math (#1909, Nikolay Yakimov).\n    + Check for
  tex macros after indented code (#1973).\n    + Rewrote `charsInBalancedBrackets`
  for efficiency.\n    + Make sure a closing `</div>` doesn't get included in a\n
  \     definition list item (#2127).\n    + Don't parse bracketed text as citation
  if it might be a link,\n      image, or footnote (Nikolay Yakimov).\n    + Require
  space after key in mmd title block (#2026, Nikolay\n      Yakimov).  Require space
  after key-value delimiter colon in mmd title\n      block.\n    + Require nonempty
  value in mmd title block (Nikolay Yakimov).\n    + Disable all metadata block extensions
  when parsing\n      metadata field values (#2026, Nikolay Yakimov).  Otherwise we\n
  \     could get a mmd title block inside YAML metadata, for example.\n\n  * HTML
  reader:\n\n    + Improve self-closing tag detection in `htmlInBalanced` (#2146).\n
  \   + Handle tables with `<th>` in body rows (#1859, mb21).\n    + Fixed `htmlTag`
  (#1820).  If the tag parses as a comment, we check\n      to see if the input starts
  with `<!--`. If not, it's bogus comment\n      mode and we fail `htmlTag`.\n    +
  Handle `base` tag; if it has an `href` value, this is added to\n      all relative
  URLs in links and images.\n\n  * DocBook reader:\n\n    + Look inside \"info\" elements
  for section titles (#1931).\n\n  * Docx reader:\n\n    + Parse images in deprecated
  vml format (Jesse Rosenthal).\n    + Allow sub/superscript verbatims (Jesse Rosenthal).\n
  \     Verbatim usually shuts off all other run styles, but we don't want it\n      to
  shut off sub/superscript.\n\n  * LaTeX reader:\n\n    + Handle `tabular*` environment
  (#1850).\n      Note that the table width is not actually parsed or taken into\n
  \     account, but pandoc no longer chokes on it.\n    + Ignore options in `\\lstinline`
  rather than raising error (#1997).\n    + Add some test cases for simple tables
  (Mathias Schenner).\n    + Handle valign argument in tables (Mathias Schenner) (currently\n
  \     we just ignore this).\n    + Allow non-empty colsep in tables (Mathias Schenner).\n
  \     The `tabular` environment allows non-empty column separators\n      with the
  \"@{...}\" syntax. Previously, pandoc would fail to\n      parse tables if a non-empty
  colsep was present. With this\n      commit, these separators are still ignored,
  but the table gets\n      parsed. A test case is included.\n    + Recognize `\\newpage`
  as a block command.\n    + Allow block content in `\\title{}` (#2001).\n    + Check
  for block-level newcommand aliases in blockCommand (Nikolay\n      Yakimov).\n    +
  Guard against paragraph starting with inline macro (Nikolay Yakimov).\n    + Properly
  gobble spaces after `\\\\` (#2007).\n\n  * Textile reader:\n\n    +  Handle newlines
  in table cells, and empty cells (#1919).\n\n  * Org reader:\n\n    + Allow image
  links with non-image targets (Hans-Peter Deifel).\n      This matches behavior of
  Org-Mode for links like\n      `[[http://example.com][https://www.haskell.org/static/img/logo.png]]`.\n\n
  \ * Docbook writer:\n\n    + Don't print empty id attributes (thanks to Steve Horne).\n\n
  \ * HTML writer:\n\n    + Fixed list-style-type for numbered example lists.\n      Should
  be \"decimal,\" not \"example\" (#1902).\n    + Do not omit missing `alt` attribute
  on `img` tag (#1131,\n      Konstantin Zudov).\n    + Allow multiple colgroups in
  table (#2122).\n    + In revealjs, ensure that lists in speaker notes don't add
  \"fragment\"\n      classes, which can cause additional keypresses to be needed
  to\n      advance a slide (#1394).\n\n  * LaTeX writer:\n\n    + Don't escape `$`
  in URL (#1913).\n    + Don't use listings in headers (Matthew Pickering, #1963).\n
  \   + Recognize book documentclass if set in metadata (#1971).\n      This sets
  `--chapters` implicitly if the documentclass in metadata\n      is a book documentclass.
  \ Previously this was done only if a book\n      documentclass was set in a variable.\n
  \   + Add a `\\label` in `\\hyperdef` for Div, Span (or links don't work).\n    +
  Make `mainlang` work when `lang` is in metadata (#2174).\n\n  * Texinfo writer:\n\n
  \   + Fix wrapping by using breakable spaces (Tim Lin).\n\n  * RST writer:\n\n    +
  Fixed toc depth in RST writer.  Previously the depth was being\n      rendered as
  a floating point number with a decimal point.\n\n  * Markdown writer:\n\n    + Improved
  escaping (#2086).  `<` should not be escaped as `\\<`, for\n      compatibility
  with original Markdown.  We now escape `<` and `>`\n      with entities.  Also,
  we now backslash-escape square brackets.\n    + Avoid introducing spurious list
  items through wrapping (#1946).\n    + Don't emit span tags if plain or raw HTML
  disabled.\n\n  * MediaWiki writer:\n\n    + Convert spaces to underscores in wikilink
  URL (#1982), like MediaWiki.\n\n  * AsciiDoc writer:\n\n    + Insert some needed
  blank lines (#1860).\n    + Avoid wrapping after list marker (#1858).\n\n  * EPUB
  writer:\n\n    + Properly handle internal links to IDs in spans, divs (#1884).\n
  \   + Use plain writer for metadata dc: fields (#2121).\n      This gives better
  results when we have, e.g. multiple paragraphs.\n      Note that tags aren't allowed
  in these fields.\n    + Properly handle image links without an extension (#1855).\n
  \   + Improved chapter splitting and internal link rewriting (#1887,\n      #2162,
  #2163).  This will ensure that internal links work and\n      that the references
  section produced by pandoc-citeproc is\n      in its own chapter.\n    + Fixed handling
  of svg images (#2183).\n\n  * ICML writer:\n\n    + Better handling of raw blocks
  and inlines (#1951).\n      Previously these were always escaped and printed verbatim.\n
  \     Now they are ignored unless the format is `icml`, in which\n      case they
  are passed through unescaped.\n    + Fixed image URIs in ICML output (gohai).\n\n
  \ * Custom writer:\n\n    + Raise error if loadstring returns an error status.\n
  \   + Raise `PandocLuaException` instead of using 'error'.\n      Eventually we'll
  change the return type so that no exception\n      is involved, but at least this
  can be trapped.\n    + Use UTF-8 aware bytestring conversion.\n    + Set foreign
  encoding to UTF-8 (Nikolay Yakimov, #2101, #1634).\n      Also factored out ByteString,
  since it's only used as an intermediate\n      representation.\n\n  * Docx writer:\n\n
  \   + Copy hyphenation settings from reference.docx (Nikolay Yakimov).\n    + Filter
  out illegal XML characters (#1992, Matthew Pickering).\n    + Added `noProof` to
  docx syntax highlighting `SourceCode` style.\n    + Added footnotes id -1 and 0
  (Jesse Rosenthal).\n      Word uses, by default, footnotes with id -1 and 0 for
  separators. If a\n      user modifies `reference.docx`, they will end up with a
  `settings.xml`\n      file that references these footnotes, but no such footnotes
  in the\n      document. This will produce a corruption error. Here we add these
  to the\n      document and `settings.xml` file, so future modifications won't break\n
  \     the file.\n    + Handle lists correctly inside table cells (Jesse Rosenthal).\n
  \     Previously we didn't transform lists inside table cells.\n    + Set firstRow
  information in tables (Nikolay Yakimov).\n    + Don't replace `SourceCode` style
  in `reference.docx` if it is defined\n      there (Nikolay Yakimov, #1872).  If
  `--no-highlight` specified, remove\n      any `SourceCode` and `*Tok` styles in
  `reference.docx`.\n    + Attempt to match international style names (#1607, Nikolay
  Yakimov).\n    + Set these styles as custom (Nikolay Yakimov): `Author`, `Abstract`,\n
  \     `Compact`, `Image Caption`, `Table Caption`, `Definition Term`,\n      `Definition`,
  `First Paragraph`.\n    + Rename these styles to correspond with Word `Normal.dotm`
  (Nikolay\n      Yakimov): `Block Quote -> Block Text`, `Link -> Hyperlink`,\n      `Footnote
  Ref -> Footnote Reference`.\n    + Added `Caption` style (Nikolay Yakimov).\n    +
  Changed these styles' inheritance (Nikolay Yakimov):\n      `Image Caption <- Caption`,
  `Table Caption <- Caption`.\n    + Remove `SourceCode` style from `reference.docx`
  (#1872).\n      This is added automatically by the docx writer.\n    + Added toc
  heading style to `reference.docx` (Nikolay Yakimov).\n\n  * `Text.Pandoc.PDF`\n\n
  \   + Don't suggest \"Try xelatex\" if xelatex already in use (mb21, #1832).\n    +
  More comprehensible errors on image conversion (#2067).\n      EPS can't be supported
  without shelling out to something like\n      ImageMagick, but at least we can avoid
  mysterious error messages.\n\n  * `Text.Pandoc.Shared`:\n\n    + Make safeRead safe
  (#1801, Matthew Pickering).\n    + Added `mapLeft`, `hush` (Matthew Pickering).\n\n
  \ * `Text.Pandoc.Pretty`:\n\n    + Remove partial function (Matthew Pickering).\n\n
  \ * `Text.Pandoc.SelfContained`:\n\n    + Add `;charset=utf-8` to script mime type
  if missing (#1842).\n    + Improved building of data URIs (#1940).  Now base64 is
  used except\n      for `text/*` mime types.\n    + `cssURLs` no longer tries to
  fetch fragment URLs (#2121).\n    + Properly handle data URIs in css urls (#2129).\n
  \     Use a proper CSS parser (adds dependency on `text-css`).\n\n  * `Text.Pandoc.UTF8`:\n\n
  \   + Better handling of bare CRs in input files (#2132).\n      Previously we just
  stripped them out; now we convert\n      other line ending styles to LF line endings.\n\n
  \ * `Text.Pandoc.ImageSize`:\n\n    + Fixed some exif header parsing bugs (#1834).\n
  \   + Make imageSize return an Either, not a Maybe (#1834).\n      Use `runGetOrFail`
  (with `binary >= 0.7`) to return `Left` on\n      parse failure (rather than `error`).\n
  \   + Improved warnings when image size can't be determined.\n    + Removed error
  landmines (Matthew Pickering).\n\n  * Added woff2 to MIME types (Alfred Wechselberger).\n\n
  \ * pandoc:  When a binary input format is used, warn that file\n    arguments past
  the first one are being ignored (Matthew Pickering).\n\n### Template changes\n\n
  \ * LaTeX template:\n\n    + Degrade gracefully if `\\paragraph` not defined.\n
  \   + Include `grffile` together with `graphicx` (#2074).\n      This properly handles
  filenames containing spaces and dots.\n    + Redefine `\\paragraph`, `\\subparagraph`...
  \ to behave more\n      like section headers (#1658).\n    + Import hyperref before
  polyglossia to avoid an error with xelatex,\n      \"please load package hyperref
  before bidi package\" (Nick Bart).\n    + Added `toccolor` variable to control link
  color in toc (Kaixhin).\n\n  * LaTeX, Beamer templates:\n\n    + Provide `\\tightlist`,
  which is now used by the LaTeX writer.\n    + Use polyglossia in beamer (#85).\n
  \   + Use `bibliography` instead of `biblio-files`\n      (#1661).  Also use `\\addbibresource`
  instead of `\\bibliography` for\n      biblatex.\n    + Added `setotherlanguages`
  in polyglossia. This uses an `otherlang`\n      variable that is derived from a
  comma-separated list in `lang`;\n      the last language is `mainlang` and the others
  are `otherlang`.\n\n  * EPUB templates:\n\n    + Use `div`, not `p`, for \"rights\"
  on title page.\n    + Added header-includes, include-before, include-after (#1987).\n\n
  \ * OpenDocument template:\n\n    + Use `text:p` instead of `text:h` for title.\n
  \     Using `text:h` causes problems with numbering.  Closes #2059.\n      Thanks
  to @nkalvi for diagnosing this.\n\n  * reveal.js template:\n\n    + Link to non-minified
  css, js.  The minified versions no longer\n      ship with the library.\n    + Correctly
  include style CSS (#1949).\n    + New configurable options options: `center`, `maxScale`,
  `slideNuber`\n      (Dmitry Smirnov, pandoc-templates#89).\n    + Moved custom CSS
  after theme.  This allows custom CSS to modify\n      themes, instead of being replaced
  by them.\n    + Allow `center` to be set to false.\n\n### Under the hood improvements\n\n
  \ * Removed pre-built `reference.docx` and `reference.odt` (Nikolay\n    Yakimov).
  \ Instead the repository now includes the component text files,\n    and the zipped
  binaries are built from these using a helper\n    program, `make-reference-files`.
  \ This should make maintenance of\n    these components easier going forward.\n\n
  \ * `Text.Pandoc.Parsing`:\n\n    + Added new `<+?>` combinator (Nikolay Yakimov).\n
  \   + Added `stateHeaderKeys` to `ParserState`.\n\n  * `make_deb.sh` fixes:\n\n
  \   + Detect architecture.\n    + Add Installed-Size to debian package control file
  (#1900).\n    + Use `fakeroot` to get permissions right.\n    + Use `mkdir` and
  `cp` instead of `install`.\n    + Set permissions of directories to 755.\n    +
  Install in `/usr` rather than `/usr/local`.\n    + Compress man pages.\n    + Combine
  copyright files for `pandoc`, `pandoc-citeproc`.\n\n  * Added `Text.Pandoc.Compat.Locale`
  and `old-locale` flag\n    to assist with transition to `time` 1.5.\n\n  * Updated
  CONTRIBUTING.md with information about issue tags (Matthew\n    Pickering).\n\n
  \ * Updated travis installs to the new sudo-less syntax (Tim Lin).\n\n  * Updated
  dependency version bounds.\n\n  * EPUB tests:  don't use `joinPath`, which varies
  across platforms.\n    Instead, use a forward-slash to join paths, regardless of
  the\n    platform. This matches the way `MediaBag` now works.\n\n  * Clarify JSON
  input and output in usage message (Caleb McDaniel).\n\n  * Improved INSTALL instructions.\n\n
  \ * Always build man pages.  Removed make-pandoc-man-pages flag.\n\n  * Makefile:
  \ removed man target, now that we generate man pages by default.\n\n  * README:\n\n
  \   + Fixed typos (J. Lewis Muir).\n    + Added documentation on backtick_code_blocks
  (#2135, Nikolay Yakimov).\n    + Added note on in-field markup in biblio databases
  (Nick Bart).\n    + Fixed misleading example of raw HTML block.\n    + Various minor
  formatting and consistency fixes for the program\n      options (Andreas L√∂√∂w).\n
  \   + Made definition lists for options all \"loose\" for consistency.\n    + Added
  YAML biblio format to table, and note on `pandoc-citeproc`'s\n      `--bib2json`
  and `--bib2yaml` options (Nick Bart).\n    + Removed obsolete reference to `mods2yaml`
  (Nick Bart).\n    + Added section on syntax highlighting.\n    + Documented `toccolor`
  variable.\n\n## pandoc 1.13.2.1 (2015-04-15)\n\n  * Updated to build with ghc 7.10.1.\n\n
  \ * Bumped package upper bounds for filepath, blaze-html, blaze-markup.\n\n## pandoc
  1.13.2 (2014-12-20)\n\n  * TWiki Reader: add new new twiki reader (API chaneg, Alexander
  Sulfrian).\n\n  * Markdown reader:\n\n    + Better handling of paragraph in div
  (#1591).\n      Previously text that ended a div would be parsed as Plain\n      unless
  there was a blank line before the closing div tag.\n    + Don't treat a citation
  as a reference link label (#1763).\n    + Fix autolinks with following punctuation
  (#1811).\n      The price of this is that autolinked bare URIs can no longer\n      contain
  `>` characters, but this is not a big issue.\n    + Fix `Ext_lists_without_preceding_blankline`
  bug (#1636, Artyom).\n    + Allow `startnum` to work without `fancy_lists`. Formerly\n
  \     `pandoc -f markdown-fancy_lists+startnum` did not work properly.\n\n  * RST
  reader (all Daniel Bergey):\n\n    + Parse quoted literal blocks (#65).  RST quoted
  literal blocks are\n      the same as indented literal blocks (which pandoc already
  supports)\n      except that the quote character is preserved in each line.\n    +
  Parse RST class directives. The class directive accepts one or more\n      class
  names, and creates a Div value with those classes.  If the\n      directive has
  an indented body, the body is parsed as the children of\n      the Div.  If not,
  the first block following the directive is made a\n      child of the Div. This
  differs from the behavior of rst2xml, which\n      does not create a Div element.
  \ Instead, the specified classes are\n      applied to each child of the directive.
  \ However, most Pandoc Block\n      constructors to not take an Attr argument, so
  we can't duplicate this\n      behavior.\n    + Warn about skipped directives.\n
  \   + Literal role now produces Code. Code role should have \"code\" class.\n    +
  Improved support for custom roles\n\n        - Added `sourceCode` to classes for
  `:code:` role, and anything\n          inheriting from it.\n        - Add the name
  of the custom role to classes if the Inline\n          constructor supports Attr.\n
  \       - If the custom role directive does not specify a parent role,\n          inherit
  from the `:span:` role.\n\n      This differs somewhat from the `rst2xml.py` behavior.
  \ If a custom\n      role inherits from another custom role, Pandoc will attach
  both\n      roles' names as classes.  `rst2xml.py` will only use the class of\n
  \     the directly invoked role (though in the case of inheriting from a\n      `:code:`
  role with a `:language:` defined, it will also provide the\n      inherited language
  as a class).\n    + Warn about ignored fields in role directives.\n\n  * LaTeX reader:\n\n
  \   + Parse label after caption into a span instead of\n     inserting an additional
  paragraph of bracketed text (#1747).\n    + Parse math environments as inline when
  possible (#1821).\n    + Better handling of `\\noindent` and `\\greektext` (#1783).\n
  \   + Handle `\\texorpdfstring` more gracefully.\n    + Handle `\\cref` and `\\sep`
  (Wikiwide).\n    + Support `\\smartcite` and `\\Smartcite` from biblatex.\n\n  *
  HTML reader:\n\n    + Retain display type of MathML output (#1719, Matthew Pickering).\n
  \   + Recognise `<br>` tags inside `<pre>` blocks (#1620, Matthew Pickering).\n
  \   + Make `embed` tag either block or inline (#1756).\n\n  * DocBook reader:\n\n
  \   + Handle `keycombo`, `keycap` (#1815).\n    + Get string content in inner tags
  for literal elements (#1816).\n    + Handle `menuchoice` elements better, with a
  `>` between (#1817).\n    + Include `id` on section headers (#1818).\n    + Document/test
  \"type\" as implemented (Brian O'Sullivan).\n    + Add support for calloutlist and
  callout (Brian O'Sullivan).\n      We treat a calloutlist as a bulleted list. This
  works well in practice.\n    + Add support for `classname` (Bryan O'Sullivan).\n\n
  \ * Docx reader:\n\n    + Fix window path for image lookup (Jesse Rosenthal).\n
  \     Don't use os-sensitive \"combine\", since we always want the paths in our\n
  \     zip-archive to use forward-slashes.\n    + Single-item headers in ordered
  lists are headers (Jesse Rosenthal).\n      When users number their headers, Word
  understands that as a single item\n      enumerated list. We make the assumption
  that such a list is, in fact,\n      a header.\n    + Rewrite rewriteLink to work
  with new headers (Jesse Rosenthal).\n      There could be new top-level headers
  after making lists, so we have to\n      rewrite links after that.\n    + Use polyglot
  header list (Jesse Rosenthal).\n      We're just keeping a list of header formats
  that different languages\n      use as their default styles. At the moment, we have
  English, German,\n      Danish, and French. We can continue to add to this.\n      This
  is simpler than parsing the styles file, and perhaps less\n      error-prone, since
  there seems to be some variations, even within a\n      language, of how a style
  file will define headers.\n    + Remove header class properly in other langs (Jesse
  Rosenthal).\n      When we encounter one of the polyglot header styles, we want
  to remove\n      that from the par styles after we convert to a header. To do that,
  we\n      have to keep track of the style name, and remove it appropriately.\n    +
  Account for external link URLs with anchors. Previously, if a URL\n      had an
  anchor, the reader would incorrectly identify it as an\n      internal link and
  return only the anchor as URL. (Caleb McDaniel)\n    + Fix for Issue #1692 (i18n
  styles) (Nikolay Yakimov).\n\n  * Org reader:\n\n    + Added state changing blanklines
  (Jesse Rosenthal).\n      This allows us to emphasize at the beginning of a new
  paragraph (or, in\n      general, after blank lines).\n    + Fixed bug with bulleted
  lists:\n\n        - a\n        - b\n        * c\n\n      was being parsed as a list,
  even though an unindented `*`\n      should make a heading.  See\n      <http://orgmode.org/manual/Plain-lists.html#fn-1>.\n
  \   + Org reader: absolute, relative paths in link (#1741, Albert\n      Krewinkel).
  The org reader was too restrictive when parsing links;\n      some relative links
  and links to files given as absolute paths\n      were not recognized correctly.\n
  \   + Org reader:  allow empty links (jgm/gitit#471, Albert Krewinkel).\n      This
  is important for use in gitit, which uses empty links\n      for wikilinks.\n    +
  Respect indent when parsing Org bullet lists (#1650, Timothy\n      Humphries).
  \ Fixes issue with top-level bullet list parsing.\n    + Fix indent issue for definition
  lists (Timothy Humphries,\n      see #1650, #1698, #1680).\n    + Parse multi-inline
  terms correctly in definition list (#1649,\n      Matthew Pickering).\n    + Fix
  rules for emphasis recognition (Albert Krewinkel).\n      Things like `/hello,/`
  or `/hi'/` were falsy recognized as emphasised\n      strings.  This is wrong, as
  `,` and `'` are forbidden border chars and\n      may not occur on the inner border
  of emphasized text.\n    + Drop COMMENT document trees (Albert Krewinkel).\n      Document
  trees under a header starting with the word `COMMENT` are\n      comment trees and
  should not be exported.  Those trees are dropped\n      silently (#1678).\n    +
  Properly handle links to `file:target` (Albert Krewinkel).\n      Org links like
  `[[file:target][title]]` were not handled correctly,\n      parsing the link target
  verbatim.  The org reader is changed such that\n      the leading `file:` is dropped
  from the link target (see #756, #1812).\n    + Parse LaTeX-style MathML entities
  (#1657, Albert Krewinkel).\n      Org supports special symbols which can be included
  using LaTeX syntax,\n      but are actually MathML entities.  Examples for this
  are\n      `\\nbsp` (non-breaking space), `\\Aacute` (the letter A with accent acute)\n
  \     or `\\copy` (the copyright sign ¬©)\n\n  * EPUB reader:\n\n    + URI handling
  improvements. Now we outsource most of the work to\n      `fetchItem'`. Also, do
  not include queries in file extensions (#1671).\n\n  * LaTeX writer:\n\n    + Use
  `\\texorpdfstring` for section captions when needed (Vaclav Zeman).\n    + Handle
  consecutive linebreaks (#1733).\n    + Protect graphics in headers (Jesse Rosenthal).\n
  \     Graphics in `\\section`/`\\subsection` etc titles need to be `\\protect`ed.\n
  \   + Put `~` before header in list item text (Jesse Rosenthal).\n      Because
  of the built-in line skip, LaTeX can't handle a section header\n      as the first
  element in a list item.\n    + Avoid using reserved characters as `\\lstinline`
  delimiters (#1595).\n    + Better handling of display math in simple tables (#1754).\n
  \     We convert display math to inline math in simple tables,\n      since LaTeX
  can't deal with display math in simple tables.\n    + Escape spaces in code (#1694,
  Bjorn Buckwalter).\n\n  * MediaWiki writer:\n\n    + Fixed links with URL = text.
  Previously these were rendered as bare\n      words, even if the URL was not an
  absolute URL (#1825).\n\n  * ICML writer:\n\n    + Don't force all citations into
  footnotes.\n\n  * RTF writer:\n\n    + Add blankline at end of output (#1732, Matthew
  Pickering).\n\n  * RST writer:\n\n    + Ensure blank line after figure.\n    + Avoid
  excess whitespace after last list item (#1777).\n    + Wrap line blocks with spaces
  before continuations (#1656).\n    + Fixed double-rendering of footnotes in RST
  tables (#1769).\n\n  * DokuWiki writer:\n\n    + Better handling of block quotes.
  This change ensures that\n      multiple paragraph blockquotes are rendered using
  native `>`\n      rather than as HTML (#1738).\n    + Fix external images (#1739).
  Preface relative links with \":\",\n      absolute URIs without. (Timothy Humphries)\n\n
  \ * HTML writer:\n\n    + Use protocol-relative URL for mathjax.\n    + Put newline
  btw img and caption paragraph.\n    + MathML now outputted with tex annotation (#1635,
  Matthew Pickering).\n    + Add support for KaTeX HTML math (#1626, Matthew Pickering).\n
  \     This adds `KaTeX` to `HTMLMathMethod` (API change).\n    + Don't double render
  when `email-obfuscation=none` (#1625, Matthew\n      Pickering).\n    + Make header
  attributes work outside top level (#1711).\n      Previously they only appeared
  on top level header elements.\n      Now they work e.g. in blockquotes.\n\n  * ODT
  writer:\n\n    + Correctly handle images without extensions (#1729).\n    + Strip
  querystring in ODT write (#1682, Todd Sifleet).\n\n  * FB2 writer:\n\n    + Add
  newline to output.\n\n  * EPUB writer:\n\n    + Don't add `sourceURL` to absolute
  URIs (#1669).\n    + Don't use unsupported `opf:title-type` for epub2.\n    + Include
  \"landmarks\" section in nav document for epub3 (#1757).\n    + Removed playOrder
  from navpoint elements in ncx file (#1760).\n      These aren't required, and they
  make manual modification of epubs\n      difficult.\n    + Extract title even from
  structured title.\n    + Don't include nav node in spine unless `--toc` was requested.\n
  \     Previously we included it in the spine with `linear=\"no\"`, leading\n      to
  odd results in some readers (#1593).\n    + Fixed absolute URI detection (#1672).\n
  \   + Correctly resolve relative URIs (#1671).\n    + Use regular page template
  for `nav.xhtml`, including doctype (#1759).\n\n  * Docx writer:\n\n    + Put docx
  table captions above tables (#1641, Nikolay Yakimov).\n    + Get the page width
  from the reference docx file, and use\n      it to scale images that are too large
  to fit (Gr√©gory Bataille).\n    + Partial fix for #1607 (Nikolay Yakimov). International
  heading styles\n      are inferred based on `<w:name val=\"heading #\">` fallback,
  if there\n      are no en-US \"Heading#\" styles\n    + Look in user data dir for
  archive `reference.docx`.\n    + Renumber header and footer relationships to avoid
  collisions (Jesse\n      Rosenthal). We previously took the old relationship names
  of the\n      headers and footer in secptr. That led to collisions. We now make\n
  \     a map of available names in the relationships file, and then rename\n     in
  secptr.\n\n  * ConTeXt writer:\n\n    + Add function toLabel (Mark Szepieniec).\n
  \     This function can be used to sanitize reference labels so that\n      they
  do not contain any of the illegal characters \\#[]\",{}%()|= .\n      Currently
  only Links have their labels sanitized, because they\n      are the only Elements
  that use passed labels.\n\n  * `Text.Pandoc.Shared`:\n\n    + Moved import of `toChunks`
  outside of CPP conditional (#1590).\n    + Fix `inDirectory` to reset to the original
  directory in case\n      an exception occurs (Freiric Barral).\n\n  * Templates:\n\n
  \   + LaTeX template: load polyglossia before bibtex (jgm/pandoc-templates#70).\n
  \     Thanks to bluebirch.\n    + LaTeX template: Added `\\VerbatimFootnotes` if
  there is verbatim in notes\n      (#1616).\n    + LaTeX template:  Add shorthands=off
  to babel options (#1648).\n    + EPUB, EPUB3 templates: Added `id=\"cover\"` to
  body of cover page.\n      This aids styling, making it possible for example to
  set 0 margins\n      on the title page (#1758).\n    + EPUB, EPUB3 templates:  Handle
  structured metadata on titlepage.\n      Previously we just expected 'title', 'subtitle',
  'author', 'date'.\n      Now we still support those, but also support the format
  recommended\n      for epub metadata in the pandoc README:\n\n        ---\n        title:\n
  \       - type: main\n          text: My Book\n        - type: subtitle\n          text:
  An investigation of metadata\n        creator:\n        - role: author\n          text:
  John Smith\n        - role: editor\n          text: Sarah Jones\n        identifier:\n
  \       - scheme: DOI\n          text: doi:10.234234.234/33\n        publisher:
  \ My Press\n        rights:  (c) 2007 John Smith, CC BY-NC\n        ...\n\n  * `Text.Pandoc.Templates.getDefaultTemplate`:\n
  \   don't fail when called with \"fb2\" (#1660).\n\n  * `Text.Pandoc.Parsing`:\n\n
  \   + Fixed `inlineMath` so it handles `\\text{..}` containing `$`.\n      For example:
  `$x = \\text{the $n$th root of $y$}` (#1677).\n    + Change `parseFromString` to
  fail if not all input is consumed.\n      (Matthew Pickering)\n    + Moved `addWarning`
  from Markdown reader to `Parsing`, so it can be\n      used by more readers (API
  change, Daniel Bergey).\n\n  * `Text.Pandoc.Pretty`:\n\n    +  Improve performance
  of `realLength` (Matthew Pickering).\n    +  Make CR + BLANKLINE = BLANKLINE. This
  fixes an extra blank line we\n       were getting at the end of markdown fragments
  (as well as rst, org,\n       etc.) (#1705).\n\n  * `Text.Pandoc.MIME`:\n\n    +
  Add mime type for WebVTT (Jason Ronallo).\n    + Changed mime type for `otf` to
  `application/vnd.ms-opentype` (#1761).\n      This is needed for epub3 validation.\n\n
  \ * `Text.Pandoc.MediaBag`:\n\n    + Fix Windows specific path problems (#1597).\n\n
  \ * `Text.Pandoc.Shared`:\n\n    + Make `collapseFilePath` OS-agnostic (Matthew
  Pickering).\n\n  * Link the test suite using `-threaded`.\n    This allows the test
  suite to be run using `+RTS -N`.\n\n  * Added `network` dependency under `network-uri`
  flag in test section.\n\n  * Give better error messages when someone tries to convert
  from\n    pdf, doc, odt (#1683).\n\n  * Added `track` to list of tags treated by
  `--self-contained` (#1664).\n\n\n## pandoc 1.13.1 (2014-08-30)\n\n  * Fixed `--self-contained`
  with Windows paths (#1558).\n    Previously `C:\\foo.js` was being wrongly interpreted
  as a URI.\n\n  * HTML reader:  improved handling of tags that can be block or inline.\n
  \   Previously a section like this would be enclosed in a paragraph,\n    with RawInline
  for the video tags (since video is a tag that can\n    be either block or inline):\n\n
  \       <video controls=\"controls\">\n           <source src=\"../videos/test.mp4\"
  type=\"video/mp4\" />\n           <source src=\"../videos/test.webm\" type=\"video/webm\"
  />\n           <p>\n              The videos can not be played back on your system.<br/>\n
  \             Try viewing on Youtube (requires Internet connection):\n              <a
  href=\"http://youtu.be/etE5urBps_w\">Relative Velocity on\n        Youtube</a>.\n
  \          </p>\n        </video>\n\n    This change will cause the video and source
  tags to be parsed\n    as RawBlock instead, giving better output.\n    The general
  change is this:  when we're parsing a \"plain\" sequence\n    of inlines, we don't
  parse anything that COULD be a block-level tag.\n\n  * Docx reader:\n\n    + Be
  sensitive to user styles.  Note that \"Hyperlink\" is\n      \"blacklisted,\" as
  we don't want the default underline styling to be\n      inherited by all links
  by default (Jesse Rosenthal).\n    + Read single paragraph in table cell as `Plain`
  (Jesse Rosenthal).\n      This makes to docx reader's native output fit with the
  way the markdown\n      reader understands its markdown output.\n\n  * Txt2Tags
  reader:\n\n    + Header is now parsed only if standalone flag is set (Matthew Pickering).\n
  \   + The header is now parsed as meta information. The first line is the\n      `title`,
  the second is the `author` and third line is the `date`\n      (Matthew Pickering).\n
  \   + Corrected formatting of `%%mtime` macro (Matthew Pickering).\n    + Fixed
  crash when reading from stdin.\n\n  * Textile writer:  Extended the range of cases
  where native textile\n    tables will be used (as opposed to raw HTML):  we now
  handle any\n    alignment type, but only for simple tables with no captions.\n\n
  \ * EPUB writer:  Don't use page-progression-direction in EPUB2, which\n    doesn't
  support it.  Also, if page-progression-direction not specified\n    in metadata,
  don't include the attribute even in EPUB3; not including it\n    is the same as
  including it with the value \"default\", as we did before.\n    (#1550)\n\n  * Org
  writer: Accept example lines with indentation at the beginning\n    (Calvin Beck).\n\n
  \ * DokuWiki writer:\n\n    + Refactor to use Reader monad (Matthew Pickering).\n
  \   + Avoid using raw HTML in table cells; instead, use `\\\\`\n      instead of
  newlines (Jesse Rosenthal).\n    + Properly handle HTML table cell alignments, and
  use spacing\n      to make the tables look prettier (#1566).\n\n  * Docx writer:\n\n
  \   + Bibliography entries get `Bibliography` style (#1559).\n    + Implement change
  tracking (Jesse Rosenthal).\n\n  * LaTeX writer:\n\n    + Fixed a bug that caused
  a table caption to repeat across all pages\n      (Jose Luis Duran).\n    + Improved
  vertical spacing in tables and made it customizable using\n      standard lengths
  set by booktab.  See\n      <https://groups.google.com/forum/#!msg/pandoc-discuss/qMu6_5lYy0o/ZAU7lzAIKw0J>\n
  \     (Jose Luis Duran).\n    + Added `\\strut` to fix spacing in multiline tables
  (Jose Luis Duran).\n    + Use `\\tabularnewline` instead of `\\\\` in table cells
  (Jose Luis Duran).\n    + Made horizontal rules more flexible (Jose Luis Duran).\n\n
  \ * Text.Pandoc.MIME:\n\n    + Added `MimeType` (type synonym for `String`) and
  `getMimeTypeDef`.\n      Code cleanups (Artyom Kazak).\n\n  * Templates:\n\n    +
  LaTeX template: disable microtype protrusion for typewriter font (#1549,\n      thanks
  lemzwerg).\n\n  * Improved OSX build procedure.\n\n  * Added `network-uri` flag,
  to deal with split of `network-uri` from\n    `network`.\n\n  * Fix build dependencies
  for the `trypandoc` flag, so that they are\n    ignored if `trypandoc` flag is set
  to False (Gabor Pali).\n\n  * Updated README to remove outdated claim that `--self-contained`\n
  \   looks in the user data directory for missing files.\n\n## pandoc 1.13.0.1 (2014-08-17)\n\n
  \ * Docx writer:\n\n    + Fixed regression which bungled list numbering (#1544),
  causing\n      all lists to appear as basic ordered lists.\n    + Include row width
  in table rows (Christoffer Ackelman, Viktor Kronvall).\n      Added a property to
  all table rows where the sum of column widths\n      is specified in pct (fraction
  of 5000).  This helps persuade Word\n      to lay out the table with the widths
  we specify.\n\n  * Fixed a bug in Windows 8 which caused pandoc not to find the\n
  \   `pandoc-citeproc` filter (#1542).\n\n  * Docx reader: miscellaneous under-the-hood
  improvements (Jesse Rosenthal).\n    Most significantly, the reader now uses Builder,
  leading to some\n    performance improvements.\n\n  * HTML reader:  Parse appropriately
  styled span as SmallCaps.\n\n  * Markdown writer: don't escape `$`, `^`, `~` when
  `tex_math_dollars`,\n    `superscript`, and `subscript` extensions, respectively,
  are\n    deactivated (#1127).\n\n  * Added `trypandoc` flag to build CGI executable
  used in the online\n    demo.\n\n  * Makefile:  Added 'quick', 'osxpkg' targets.\n\n
  \ * Updated README in templates to indicate templates license.\n    The templates
  are dual-licensed, BSD3 and GPL2+.\n\n## pandoc 1.13 (15 August 2014)\n\n### New
  features\n\n  * Added `docx` as an input format (Jesse Rosenthal).  The docx\n    reader
  includes conversion of native Word equations to pandoc\n    LaTeX `Math` elements.
  \ Metadata is taken from paragraphs at the\n    beginning of the document with styles
  `Author`, `Title`, `Subtitle`,\n    `Date`, and `Abstract`.\n\n  * Added `epub`
  as an input format (Matthew Pickering).  The epub\n    reader includes conversion
  of MathML to pandoc LaTeX `Math`\n    elements.\n\n  * Added `t2t` (Txt2Tags) as
  an input format (Matthew Pickering).\n    Txt2tags is a lightweight markup format
  described at\n    <http://txt2tags.org/>.\n\n  * Added `dokuwiki` as an output format
  (Clare Macrae).\n\n  * Added `haddock` as an output format.\n\n  * Added `--extract-media`
  option to extract media contained in a zip\n    container (docx or epub) while adjusting
  image paths to point to the\n    extracted images.\n\n  * Added a new markdown extension,
  `compact_definition_lists`, that\n    restores the syntax for definition lists of
  pandoc 1.12.x, allowing\n    tight definition lists with no blank space between
  items, and\n    disallowing lazy wrapping.  (See below under behavior changes.)\n\n
  \ * Added an extension `epub_html_exts` for parsing HTML in EPUBs.\n\n  * Added
  extensions `native_spans` and `native_divs` to activate\n    parsing of material
  in HTML span or div tags as Pandoc Span\n    inlines or Div blocks.\n\n  * `--trace`
  now works with the Markdown, HTML, Haddock, EPUB,\n    Textile, and MediaWiki readers.
  \ This is an option intended\n    for debugging parsing problems; ordinary users
  should not need\n    to use it.\n\n### Behavior changes\n\n  * Changed behavior
  of the `markdown_attribute` extension, to bring\n    it in line with PHP markdown
  extra and multimarkdown.  Setting\n    `markdown=\"1\"` on an outer tag affects
  all contained tags,\n    recursively, until it is reversed with `markdown=\"0\"`
  (#1378).\n\n  * Revised markdown definition list syntax (#1429).  Both the reader\n
  \   and writer are affected.  This change brings pandoc's definition list\n    syntax
  into alignment with that used in PHP markdown extra and\n    multimarkdown (with
  the exception that pandoc is more flexible about\n    the definition markers, allowing
  tildes as well as colons).  Lazily\n    wrapped definitions are now allowed.  Blank
  space is required\n    between list items.  The space before a definition is used
  to determine\n    whether it is a paragraph or a \"plain\" element.  **WARNING:
  This change\n    may break existing documents!**  Either check your documents for\n
  \   definition lists without blank space between items, or use\n    `markdown+compact_definition_lists`
  for the old behavior.\n\n  * `.numberLines` now works in fenced code blocks even
  if no language\n    is given (#1287, jgm/highlighting-kate#40).\n\n  * Improvements
  to `--filter`:\n\n    + Don't search PATH for a filter with an explicit path.\n
  \     This fixed a bug wherein `--filter ./caps.py` would run `caps.py` from\n      the
  system path, even if there was a `caps.py` in the working directory.\n    + Respect
  shebang if filter is executable (#1389).\n    + Don't print misleading error message.\n
  \     Previously pandoc would say that a filter was not found,\n      even in a
  case where the filter had a syntax error.\n\n  * HTML reader:\n\n    + Parse `div`
  and `span` elements even without `--parse-raw`,\n      provided `native_divs` and
  `native_spans` extensions are set.\n      Motivation:  these now generate native
  pandoc Div and Span\n      elements, not raw HTML.\n    + Parse EPUB-specific elements
  if the `epub_html_exts`\n      extension is enabled.  These include `switch`, `footnote`,\n
  \     `rearnote`, `noteref`.\n\n  * Org reader:\n\n    + Support for inline LaTeX.
  \ Inline LaTeX is now accepted and parsed by the\n      org-mode reader.  Both math
  symbols (like `\\tau`) and LaTeX commands (like\n      `\\cite{Coffee}`), can be
  used without any further escaping (Albert\n      Krewinkel).\n\n  * Textile reader
  and writer:\n\n    + The `raw_tex` extension is no longer set by default.  You can\n
  \     enable it with `textile+raw_tex`.\n\n  * DocBook reader:\n\n    + Support
  `equation`, `informalequation`, `inlineequation` elements with\n      `mml:math`
  content.  This is converted into LaTeX and put into a Pandoc\n      Math inline.\n\n
  \ * Revised `plain` output, largely following the style of Project\n    Gutenberg:\n\n
  \   + Emphasis is rendered with `_underscores_`, strong emphasis\n      with ALL
  CAPS.\n    + Headings are rendered differently, with space to set them off,\n      not
  with setext style underlines. Level 1 headers are ALL CAPS.\n    + Math is rendered
  using unicode when possible, but without the\n      distracting emphasis markers
  around variables.\n    + Footnotes use a regular `[n]` style.\n\n  * Markdown writer:\n\n
  \   + Horizontal rules are now a line across the whole page.\n    + Prettier pipe
  tables.  Columns are now aligned  (#1323).\n    + Respect the `raw_html` extension.
  \ `pandoc -t markdown-raw_html`\n      no longer emits any raw HTML, including span
  and div tags\n      generated by Span and Div elements.\n    + Use span with style
  for `SmallCaps` (#1360).\n\n  * HTML writer:\n\n    + Autolinks now have class `uri`,
  and email autolinks have class\n      `email`, so they can be styled.\n\n  * Docx
  writer:\n\n    + Document formatting is carried over from `reference.docx`.\n      This
  includes margins, page size, page orientation, header,\n      and footer, including
  images in headers and footers.\n    + Include abstract (if present) with `Abstract`
  style (#1451).\n    + Include subtitle (if present) with `Subtitle` style, rather\n
  \     than tacking it on to the title (#1451).\n\n  * Org writer:\n\n    + Write
  empty span elements with an id attribute as org anchors.\n      For example `Span
  (\"uid\",[],[]) []` becomes `<<uid>>`.\n\n  * LaTeX writer:\n\n    + Put table captions
  above tables, to match the conventional\n      standard.  (Previously they appeared
  below tables.)\n    + Use `\\(..\\)` instead of `$..$` for inline math (#1464).\n
  \   + Use `\\nolinkurl` in email autolinks.  This allows them to be styled\n      using
  `\\urlstyle{tt}`.  Thanks to Ulrike Fischer for the solution.\n    + Use `\\textquotesingle`
  for `'` in inline code.  Otherwise we get\n      curly quotes in the PDF output
  (#1364).\n    + Use `\\footnote<.>{..}` for notes in beamer, so that footnotes\n
  \     do not appear before the overlays in which their markers appear\n      (#1525).\n
  \   + Don't produce a `\\label{..}` for a Div or Span element.  Do produce\n      a
  `\\hyperdef{..}` (#1519).\n\n  * EPUB writer:\n\n    + If the metadata includes
  `page-progression-direction` (which can be\n      `ltr` or `rtl`, the `page-progression-direction`
  attribute will\n      be set in the EPUB spine (#1455).\n\n  * Custom lua writers:\n\n
  \   + Custom writers now work with `--template`.\n    + Removed HTML header scaffolding
  from `sample.lua`.\n    + Made citation information available in lua writers.\n\n
  \ * `--normalize` and `Text.Pandoc.Shared.normalize` now consolidate\n    adjacent
  `RawBlock`s when possible.\n\n### API changes\n\n  * Added `Text.Pandoc.Readers.Docx`,
  exporting `readDocx` (Jesse Rosenthal).\n\n  * Added `Text.Pandoc.Readers.EPUB`,
  exporting `readEPUB` (Matthew\n    Pickering).\n\n  * Added `Text.Pandoc.Readers.Txt2Tags`,
  exporting `readTxt2Tags` (Matthew\n    Pickering).\n\n  * Added `Text.Pandoc.Writers.DokuWiki`,
  exporting `writeDokuWiki`\n    (Clare Macrae).\n\n  * Added `Text.Pandoc.Writers.Haddock`,
  exporting `writeHaddock`.\n\n  * Added `Text.Pandoc.MediaBag`, exporting `MediaBag`,
  `lookupMedia`,\n    `insertMedia`, `mediaDirectory`, `extractMediaBag`.  The docx
  and epub\n    readers return a pair of a `Pandoc` document and a `MediaBag` with\n
  \   the media resources they contain.  This can be extracted using\n    `--extract-media`.
  \ Writers that incorporate media (PDF, Docx,\n    ODT, EPUB, RTF, or HTML formats
  with `--self-contained`) will look\n    for resources in the `MediaBag` generated
  by the reader, in addition to\n    the file system or web.\n\n  * `Text.Pandoc.Readers.TexMath`:
  Removed deprecated `readTeXMath`.\n    Renamed `readTeXMath'` to `texMathToInlines`.\n\n
  \ * `Text.Pandoc`: Added `Reader` data type (Matthew Pickering).\n    `readers`
  now associates names of readers with `Reader`\n     structures.  This allows inclusion
  of readers, like the docx\n     reader, that take binary rather than textual input.\n\n
  \ * `Text.Pandoc.Shared`:\n\n    + Added `capitalize` (Artyom Kazak), and replaced
  uses of\n      `map toUpper` (which give bad results for many languages).\n    +
  Added `collapseFilePath`, which removes intermediate `.` and\n      `..` from a
  path (Matthew Pickering).\n    + Added `fetchItem'`, which works like `fetchItem`
  but searches\n      a `MediaBag` before looking on the net or file system.\n    +
  Added `withTempDir`.\n    + Added `removeFormatting`.\n    + Added `extractSpaces`
  (from HTML reader) and generalized its type\n      so that it can be used by the
  docx reader (Matthew Pickering).\n    + Added `ordNub`.\n    + Added `normalizeInlines`,
  `normalizeBlocks`.\n    + `normalize` is now `Pandoc -> Pandoc` instead of\n      `Data
  a :: a -> a`.  Some users may need to change their uses of\n      `normalize` to
  the newly exported `normalizeInlines` or\n      `normalizeBlocks`.\n\n  * `Text.Pandoc.Options`:\n\n
  \   + Added `writerMediaBag` to `WriterOptions`.\n    + Removed deprecated and no
  longer used `readerStrict` in\n      `ReaderOptions`.  This is handled by `readerExtensions`
  now.\n    + Added `Ext_compact_definition_lists`.\n    + Added `Ext_epub_html_exts`.\n
  \   + Added `Ext_native_divs` and `Ext_native_spans`.\n      This allows users to
  turn off the default pandoc behavior of\n      parsing contents of div and span
  tags in markdown and HTML\n      as native pandoc Div blocks and Span inlines.\n\n
  \ * `Text.Pandoc.Parsing`:\n\n    + Generalized `readWith` to `readWithM` (Matthew
  Pickering).\n    + Export `runParserT` and `Stream` (Matthew Pickering).\n    +
  Added `HasQuoteContext` type class (Matthew Pickering).\n    + Generalized types
  of `mathInline`, `smartPunctuation`, `quoted`,\n      `singleQuoted`, `doubleQuoted`,
  `failIfInQuoteContext`,\n      `applyMacros` (Matthew Pickering).\n    + Added custom
  `token` (Matthew Pickering).\n    + Added `stateInHtmlBlock` to `ParserState`.  This
  is used to keep\n      track of the ending tag we're waiting for when we're parsing
  inside\n      HTML block tags.\n    + Added `stateMarkdownAttribute` to `ParserState`.
  This is used\n      to keep track of whether the markdown attribute has been set
  in\n      an enclosing tag.\n    + Generalized type of `registerHeader`, using new
  type classes\n      `HasReaderOptions`, `HasIdentifierList`, `HasHeaderMap` (Matthew\n
  \     Pickering).  These allow certain common functions to be reused\n      even
  in parsers that use custom state (instead of `ParserState`),\n      such as the
  MediaWiki reader.\n    + Moved `inlineMath`, `displayMath` from Markdown reader
  to Parsing,\n      and generalized their types (Matthew Pickering).\n\n  * `Text.Pandoc.Pretty`:\n\n
  \   + Added `nestle`.\n    + Added `blanklines`, which guarantees a certain number
  of blank lines\n      (and no more).\n\n### Bug fixes\n\n  * Markdown reader:\n\n
  \   + Fixed parsing of indented code in list items.  Indented code\n      at the
  beginning of a list item must be indented eight spaces\n      from the margin (or
  edge of the container), or four spaces\n      from the list marker, whichever is
  greater.\n    + Fixed small bug in HTML parsing with `markdown_attribute`, which\n
  \     caused incorrect tag nesting for input like\n      `<aside markdown=\"1\">*hi*</aside>`.\n
  \   + Fixed regression with intraword underscores (#1121).\n    + Improved parsing
  of inline links containing quote characters (#1534).\n    + Slight rewrite of `enclosure`/`emphOrStrong`
  code.\n    + Revamped raw HTML block parsing in markdown (#1330).\n      We no longer
  include trailing spaces and newlines in the\n      raw blocks.  We look for closing
  tags for elements (but without\n      backtracking).  Each block-level tag is its
  own `RawBlock`;\n      we no longer try to consolidate them (though `--normalize`
  will do so).\n    + Combine consecutive latex environments.  This helps when you
  have\n      two minipages which can't have blank lines between them (#690, #1196).\n
  \   + Support smallcaps through span.\n      `<span style=\"font-variant:small-caps;\">foo</span>`
  will be\n      parsed as a `SmallCaps` inline, and will work in all output\n      formats
  that support small caps (#1360).\n    + Prevent spurious line breaks after list
  items (#1137).  When the\n      `hard_line_breaks` option was specified, pandoc
  would formerly\n      produce a spurious line break after a tight list item.\n    +
  Fixed table parsing bug (#1333).\n    + Handle `c++` and `objective-c` as language
  identifiers in\n      github-style fenced blocks (#1318).\n    + Inline math must
  have nonspace before final `$` (#1313).\n\n  * LaTeX reader:\n\n    + Handle comments
  at the end of tables.  This resolves the issue\n      illustrated in <http://stackoverflow.com/questions/24009489>.\n
  \   + Correctly handle table rows with too few cells.  LaTeX seems to\n      treat
  them as if they have empty cells at the end  (#241).\n    + Handle leading/trailing
  spaces in `\\emph` better.\n      `\\emph{ hi }` gets parsed as `[Space, Emph [Str
  \"hi\"], Space]`\n      so that we don't get things like `* hi *` in markdown output.\n
  \     Also applies to `textbf` and some other constructions (#1146).\n    + Don't
  assume preamble doesn't contain environments (#1338).\n    + Allow (and discard)
  optional argument for `\\caption` (James Aspnes).\n\n  * HTML reader:\n\n    + Fixed
  major parsing problem with HTML tables.  Table cells were\n      being combined
  into one cell (#1341).\n    + Fixed performance issue with malformed HTML tables.\n
  \     We let a `</table>` tag close an open `<tr>` or `<td>` (#1167).\n    + Allow
  space between `<col>` and `</col>`.\n    + Added `audio` and `source` in `eitherBlockOrInline`.\n
  \   + Moved `video`, `svg`, `progress`, `script`, `noscript`, `svg` from\n      `blockTags`
  to `eitherBlockOrInline`.\n    + `map` and `object` were mistakenly in both lists;
  they have been removed\n      from `blockTags`.\n    + Ignore `DOCTYPE` and `xml`
  declarations.\n\n  * MediaWiki reader:\n\n    + Don't parse backslash escapes inside
  `<source>` (#1445).\n    + Tightened up template parsing.\n      The opening `{{`
  must be followed by an alphanumeric or `:`.\n      This prevents the exponential
  slowdown in #1033.\n    + Support \"Bild\" for images.\n\n  * DocBook reader:\n\n
  \   + Better handle elements inside code environments.  Pandoc's document\n      model
  does not allow structure inside code blocks, but at least this way\n      we preserve
  the text (#1449).\n    + Support `<?asciidoc-br?>` (#1236).\n\n  * Textile reader:\n\n
  \   + Fixed list parsing. Lists can now start without an intervening\n      blank
  line (#1513).\n    + HTML block-level tags that do not start a line are parsed as\n
  \     inline HTML and do not interrupt paragraphs (as in RedCloth).\n\n  * Org reader:\n\n
  \   + Make tildes create inline code (#1345).  Also relabeled `code` and\n      `verbatim`
  parsers to accord with the org-mode manual.\n    + Respect `:exports` header argument
  in code blocks (Craig Bosma).\n    + Fixed tight lists with sublists (#1437).\n\n
  \ * EPUB writer:\n\n    + Avoid excess whitespace in `nav.xhtml`.  This should improve\n
  \     TOC view in iBooks (#1392).\n    + Fixed regression on cover image.\n      In
  1.12.4 and 1.12.4.2, the cover image would not appear properly,\n      because the
  metadata id was not correct.  Now we derive the id from the\n      actual cover
  image filename, which we preserve rather than using\n      \"cover-image.\"\n    +
  Keep newlines between block elements.  This allows\n      easier diff-ability (#1424).\n
  \   + Use `stringify` instead of custom `plainify`.\n    + Use `renderTags'` for
  all tag rendering.  This properly handles tags\n      that should be self-closing.
  \ Previously `<hr/>` would appear in EPUB\n      output as `<hr></hr>` (#1420).\n
  \   + Better handle HTML media tags.\n    + Handle multiple dates with OPF `event`
  attributes.  Note: in EPUB3 we\n      can have only one dc:date, so only the first
  one is used.\n\n  * LaTeX writer:\n\n    + Correctly handle figures in notes.  Notes
  can't contain figures in\n      LaTeX, so we fake it to avoid an error  (#1053).\n
  \   + Fixed strikeout + highlighted code (#1294).\n      Previously strikeout highlighted
  code caused an error.\n\n  * ConTeXt writer:\n\n    + Improved detection of autolinks
  with URLs containing escapes.\n\n  * RTF writer:\n\n    + Improved image embedding:
  `fetchItem'` is now used to get the\n      images, and calculated image sizes are
  indicated in the RTF.\n    + Avoid extra paragraph tags in metadata (#1421).\n\n
  \ * HTML writer:\n\n    + Deactivate \"incremental\" inside slide speaker notes
  (#1394).\n    + Don't include empty items in the table of contents for\n      slide
  shows.  (These would result from creating a slide\n      using a horizontal rule.)\n\n
  \ * MediaWiki writer:\n\n    + Minor renaming of `st` prefixed names.\n\n  * AsciiDoc
  writer:\n\n    + Double up emphasis and strong emphasis markers in intraword\n      contexts,
  as required by asciidoc (#1441).\n\n  * Markdown writer:\n\n    + Avoid wrapping
  that might start a list, blockquote, or header (#1013).\n    + Use Span instead
  of (hackish) `SmallCaps` in `plainify`.\n    + Don't use braced attributes for fenced
  code (#1416).\n      If `Ext_fenced_code_attributes` is not set, the first class\n
  \     attribute will be printed after the opening fence as a bare word.\n    + Separate
  adjacent lists of the same kind with an HTML comment (#1458).\n\n  * PDF writer:\n\n
  \   + Fixed treatment of data uris for images (#1062).\n\n  * Docx writer:\n\n    +
  Use Compact style for empty table cells (#1353).\n      Otherwise we get overly
  tall lines when there are empty\n      table cells and the other cells are compact.\n
  \   + Create overrides per-image for `media/` in reference docx.\n      This should
  be somewhat more robust and cover more types of images.\n    + Improved `entryFromArchive`
  to avoid an unneeded parse.\n    + Section numbering carries over from reference.docx
  (#1305).\n    + Simplified `abstractNumId` numbering.  Instead of sequential numbering,\n
  \     we assign numbers based on the list marker styles.\n\n  * `Text.Pandoc.Options`:\n\n
  \   + Removed `Ext_fenced_code_attributes` from `markdown_github`\n      extensions.\n\n
  \ * `Text.Pandoc.ImageSize`:\n\n    + Use default instead of failing if image size
  not found\n      in exif header (#1358).\n    + ignore unknown exif header tag rather
  than crashing.\n      Some images seem to have tag type of 256, which was causing\n
  \     a runtime error.\n\n  * `Text.Pandoc.Shared`:\n\n    + `fetchItem`:  unescape
  URI encoding before reading local file (#1427).\n    + `fetchItem`:  strip a fragment
  like `?#iefix` from the extension before\n      doing mime lookup, to improve mime
  type guessing.\n    + Improved logic of `fetchItem`:  absolute URIs are fetched
  from the net;\n      other things are treated as relative URIs if `sourceURL` is
  `Just _`,\n      otherwise as file paths on the local file system.\n    + `fetchItem`
  now properly handles links without a protocol (#1477).\n    + `fetchItem` now escapes
  characters not allowed in URIs before trying\n      to parse the URIs.\n    + Fixed
  runtime error with `compactify'DL` on certain lists (#1452).\n\n  * `pandoc.hs`:
  Don't strip path off of `writerSourceURL`: the path is\n    needed to resolve relative
  URLs when we fetch resources (#750).\n\n  * `Text.Pandoc.Parsing`\n\n    + Simplified
  `dash` and `ellipsis` (#1419).\n    + Removed `(>>~)` in favor of the equivalent
  `(<*)` (Matthew Pickering).\n    + Generalized functions to use `ParsecT` (Matthew
  Pickering).\n    + Added `isbn` and `pmid` to list of recognized schemes (Matthew\n
  \     Pickering).\n\n### Template changes\n\n  * Added haddock template.\n  * EPUB3:
  \ Added `type` attribute to `link` tags.  They are supposed to\n    be \"advisory\"
  in HTML5, but kindlegen seems to require them.\n  * EPUB3:  Put title page in section
  with `epub:type=\"titlepage\"`.\n  * LaTeX: Made `\\subtitle` work properly (#1327).\n
  \ * LaTeX/Beamer: remove conditional around date (#1321).\n  * LaTeX:  Added `lot`
  and `lof` variables, which can be set to\n    get `\\listoftables` and `\\listoffigures`
  (#1407).  Note that\n    these variables can be set at the command line with `-Vlot
  -Vlof`\n    or in YAML metadata.\n\n### Under the hood improvements\n\n  * Rewrote
  normalize for efficiency (#1385).\n\n  * Rewrote Haddock reader to use `haddock-library`
  (#1346).\n\n    + This brings pandoc's rendering of haddock markup in line\n      with
  the new haddock.\n    + Fixed line breaks in `@` code blocks.\n    + alex and happy
  are no longer build-depends.\n\n  * Added `Text.Pandoc.Compat.Directory` to allow
  building against\n    different versions of the `directory` library.\n\n  + Added
  `Text.Pandoc.Compat.Except` to allow building against\n    different versions of
  `mtl`.\n\n  * Code cleanup in some writers, using Reader monad to avoid\n    passing
  options parameter around (Matej Kollar).\n\n  * Improved readability in `pandoc.hs`.\n\n
  \ * Miscellaneous code cleanups (Artyom Kazak).\n\n  * Avoid `import Prelude hiding
  (catch)` (#1309, thanks to Michael\n    Thompson).\n\n  * Changed `http-conduit`
  flag to `https`.  Depend on `http-client`\n    and `http-client-tls` instead of
  `http-conduit`.  (Note:  pandoc still\n    depends on `conduit` via `yaml`.)\n\n
  \ * Require `highlighting-kate >= 0.5.8.5` (#1271, #1317, Debian #753299).\n    This
  change to highlighting-kate means that PHP fragments no longer need\n    to start
  with `<?php`.  It also fixes a serious bug causing failures with\n    ocaml and
  fsharp.\n\n  * Require latest `texmath`.  This fixes `\\tilde{E}` and allows\n    `\\left`
  to be used with `]`, `)` etc. (#1319), among many other\n    improvements.\n\n  *
  Require latest `zip-archive`.  This has fixes for unicode path names.\n\n  * Added
  tests for plain writer.\n\n  * `Text.Pandoc.Templates`:\n\n    + Fail informatively
  on template syntax errors.\n      With the move from parsec to attoparsec, we lost
  good error\n      reporting.  In fact, since we weren't testing for end of input,\n
  \     malformed templates would fail silently.  Here we revert back to\n      Parsec
  for better error messages.\n    + Use `ordNub` (#1022).\n\n  * Benchmarks:\n\n    +
  Made benchmarks compile again (Artyom Kazak).\n    + Fixed so that the failure of
  one benchmark does not prevent others\n      from running (Artyom Kazak).\n    +
  Use `nfIO` instead of the `getLength` trick to force full evaluation.\n    + Changed
  benchmark to use only the test suite, so that benchmarks\n      run more quickly.\n\n
  \ * Windows build script:\n\n    + Add `-windows` to file name.\n    + Use one install
  command for pandoc, pandoc-citeproc.\n    + Force install of pandoc-citeproc.\n\n
  \ * `make_osx_package`:  Call zip file `pandoc-VERSION-osx.zip`.\n    The zip should
  not be named `SOMETHING.pkg.zip`, or OSX finder\n    will extract it into a folder
  named `SOMETHING.pkg`, which it\n    will interpret as a defective package (#1308).\n\n
  \ * `README`:\n\n    + Made headers for all extensions so they have IDs and can
  be\n      linked to (Beni Cherniavsky-Paskin).\n    + Fixed typos (Phillip Alday).\n
  \   + Fixed documentation of attributes (#1315).\n    + Clarified documentation
  on small caps (#1360).\n    + Better documentation for `fenced_code_attributes`
  extension\n      (Caleb McDaniel).\n    + Documented fact that you can put YAML
  metadata in a separate file\n      (#1412).\n\n\n## pandoc 1.12.4.2 (2014-05-14)\n\n
  \ * Require highlighting-kate >= 0.5.8.  Fixes a performance regression.\n\n  *
  Shared:  `addMetaValue` now behaves slightly differently:\n    if both the new and
  old values are lists, it concatenates their\n    contents to form a new list.\n\n
  \ * LaTeX reader:\n\n    + Set `bibliography` in metadata from `\\bibliography`
  or\n      `\\addbibresource` command.\n    + Don't error on `%foo` with no trailing
  newline.\n\n  * Org reader:\n\n    + Support code block headers (`#+BEGIN_SRC ...`)
  (Albert Krewinkel).\n    + Fix parsing of blank lines within blocks (Albert Krewinkel).\n
  \   + Support pandoc citation extension (Albert Krewinkel).  This can\n      be
  turned off by specifying `org-citation` as the input format.\n\n  * Markdown reader:\n\n
  \   + `citeKey` moved to `Text.Pandoc.Parsing` so it can be used by\n      other
  readers (Albert Krewinkel).\n\n  * `Text.Pandoc.Parsing`:\n\n    + Added `citeKey`
  (see above).\n    + Added `HasLastStrPosition` type class and `updateLastStrPos`\n
  \     and `notAfterString` functions.\n\n  * Updated copyright notices (Albert Krewinkel).\n\n
  \ * Added default.icml to data files so it installs with the package.\n\n  * OSX
  package:\n\n    + The binary is now built with options to ensure that it can be\n
  \     used with OSX 10.6+.\n    + Moved OSX package materials to osx directory.\n
  \   + Added OSX package uninstall script, included in the zip container\n      (thanks
  to Daniel T. Staal).\n\n## pandoc 1.12.4 (2014-05-07)\n\n  * Made it possible to
  run filters that aren't executable\n    (#1096). Pandoc first tries to find the
  executable (searching\n    the path if path isn't given). If it fails, but the file\n
  \   exists and has a `.py`, `.pl`, `.rb`, `.hs`, or `.php`\n    extension, pandoc
  runs the filter using the appropriate\n    interpreter. This should make it easier
  to use filters on\n    Windows, and make it more convenient for everyone.\n\n  *
  Added Emacs org-mode reader (Albert Krewinkel).\n\n  * Added InDesign ICML Writer
  (mb21).\n\n  * MediaWiki reader:\n\n    + Accept image links in more languages (Jaime
  MarquiÃÅnez FerraÃÅndiz).\n    + Fixed bug in certain nested lists (#1213).  If a
  level 2 list was\n      followed by a level 1 list, the first item of the level
  1 list\n      would be lost.\n    + Handle table rows containing just an HTML comment
  (#1230).\n\n  * LaTeX reader:\n\n    + Give better location information on errors,
  pointing to line\n      numbers within included files (#1274).\n    + LaTeX reader:
  \ Better handling of `table` environment (#1204).\n      Positioning options no
  longer rendered verbatim.\n    + Better handling of figure and table with caption
  (#1204).\n    + Handle `@{}` and `p{length}` in tabular.  The length is not actually\n
  \     recorded, but at least we get a table (#1180).\n    + Properly handle `\\nocite`.
  \ It now adds a `nocite` metadata\n      field.  Citations there will appear in
  the bibliography but not\n      in the text (unless you explicitly put a `$nocite$`
  variable\n      in your template).\n\n  * Markdown reader:\n\n    + Ensure that
  whole numbers in YAML metadata are rendered without\n      decimal points.  (This
  became necessary with changes to aeson\n      and yaml libraries.  aeson >= 0.7
  and yaml >= 0.8.8.2 are now required.)\n    + Fixed regression on line breaks in
  strict mode (#1203).\n    + Small efficiency improvements.\n    + Improved parsing
  of nested `div`s.  Formerly a closing `div` tag\n      would be missed if it came
  right after other block-level tags.\n    + Avoid backtracking when closing `</div>`
  not found.\n    + Fixed bug in reference link parsing in `markdown_mmd`.\n    +
  Fixed a bug in list parsing (#1154).  When reading a raw list\n      item, we now
  strip off up to 4 spaces.\n    + Fixed parsing of empty reference link definitions
  (#1186).\n    + Made one-column pipe tables work (#1218).\n\n  * Textile reader:\n\n
  \   + Better support for attributes.  Instead of being ignored, attributes\n      are
  now parsed and included in Span inlines.  The output will be a bit\n      different
  from stock textile: e.g. for `*(foo)hi*`, we'll get\n      `<em><span class=\"foo\">hi</span></em>`
  instead of\n      `<em class=\"foo\">hi</em>`.  But at least the data is not lost.\n
  \   + Improved treatment of HTML spans (%) (#1115).\n    + Improved link parsing.
  \ In particular we now pick up on attributes.\n      Since pandoc links can't have
  attributes, we enclose the whole link in\n      a span if there are attributes (#1008).\n
  \   + Implemented correct parsing rules for inline markup (#1175, Matthew\n      Pickering).\n
  \   + Use Builder (Matthew Pickering).\n\n  * DocBook reader:\n\n    + Better treatment
  of `formalpara`.  We now emit the title (if present)\n      as a separate paragraph
  with boldface text (#1215).\n    + Set metadata `author` not `authors`.\n    + Added
  recognition of `authorgroup` and `releaseinfo` elements (#1214,\n      Matthew Pickering).\n
  \   + Converted current meta information parsing in DocBook to a more\n      extensible
  version which is aware of the more recent meta\n      representation (Matthew Pickering).\n\n
  \ * HTML reader:\n\n    + Require tagsoup 0.13.1, to fix a bug with parsing of script
  tags\n      (#1248).\n    + Treat processing instructions & declarations as block.
  \ Previously\n      these were treated as inline, and included in paragraph tags
  in HTML\n      or DocBook output, which is generally not what is wanted (#1233).\n
  \   + Updated `closes` with rules from HTML5 spec.\n    + Use Builder (Matthew Pickering,
  #1162).\n\n  * RST reader:\n\n    + Remove duplicate `http` in PEP links (Albert
  Krewinkel).\n    + Make rst figures true figures (#1168, CasperVector)\n    + Enhanced
  Pandoc's support for rST roles (Merijn Verstaaten).\n      rST parser now supports:
  all built-in rST roles, new role definition,\n      role inheritance, though with
  some limitations.\n    + Use `author` rather than `authors` in metadata.\n    +
  Better handling of directives.  We now correctly handle field\n      lists that
  are indented more than three spaces.  We treat an\n      `aafig` directive as a
  code block with attributes, so it can be\n      processed in a filter (#1212).\n\n
  \ * LaTeX writer:\n\n    + Mark span contents with label if span has an ID (Albert
  Krewinkel).\n    + Made `--toc-depth` work well with books in latex/pdf output (#1210).\n
  \   + Handle line breaks in simple table cells (#1217).\n    + Workaround for level
  4-5 headers in quotes.  These previously produced\n      invalid LaTeX: `\\paragraph`
  or `\\subparagraph` in a `quote` environment.\n      This adds an `mbox{}` in these
  contexts to work around the problem.\n      See <http://tex.stackexchange.com/a/169833/22451>
  (#1221).\n    + Use `\\/` to avoid en-dash ligature instead of `-{}-` (Vaclav Zeman).\n
  \     This is to fix LuaLaTeX output. The `-{}-` sequence does not avoid the\n      ligature
  with LuaLaTeX but `\\/` does.\n    + Fixed string escaping in `hyperref` and `hyperdef`
  (#1130).\n\n  * ConTeXt writer:  Improved autolinks (#1270).\n\n  * DocBook writer:\n\n
  \   + Improve handling of hard line breaks in Docbook writer\n      (Neil Mayhew).
  \ Use a `<literallayout>` for the entire paragraph, not\n      just for the newline
  character.\n    + Don't let line breaks inside footnotes influence the enclosing\n
  \     paragraph (Neil Mayhew).\n    + Distinguish tight and loose lists in DocBook
  output, using\n      `spacing=\"compact\"` (Neil Mayhew, #1250).\n\n  * Docx writer:
  \ When needed files are not present in the user's\n    `reference.docx`, fall back
  on the versions in the `reference.docx`\n    in pandoc's data files. This fixes
  a bug that occurs when a\n    `reference.docx` saved by LibreOffice is used. (#1185)\n\n
  \ * EPUB writer:\n\n    + Include extension in epub ids.  This fixes a problem with
  duplicate\n      extensions for fonts and images with the same base name but different\n
  \     extensions (#1254).\n    + Handle files linked in raw `img` tags (#1170).\n
  \   + Handle media in `audio` source tags (#1170).\n      Note that we now use a
  `media` directory rather than `images`.\n    + Incorporate files linked in `video`
  tags (#1170).  `src` and `poster`\n      will both be incorporated into `content.opf`
  and the epub container.\n\n  * HTML writer:\n\n    + Add colgroup around col tags
  (#877).  Also affects EPUB writer.\n    + Fixed bug with unnumbered section headings.
  \ Unnumbered section\n      headings (with class `unnumbered`) were getting numbers.\n
  \   + Improved detection of image links. Previously image links with\n      queries
  were not recognized, causing `<embed>` to be used instead\n      of `<img>`.\n\n
  \ * Man writer:  Ensure that terms in definition lists aren't line wrapped\n    (#1195).\n\n
  \ * Markdown writer:\n\n    + Use proper escapes to avoid unwanted lists (#980).
  \ Previously we used\n      0-width spaces, an ugly hack.\n    + Use longer backtick
  fences if needed (#1206).  If the content contains a\n      backtick fence and there
  are attributes, make sure longer fences are\n      used to delimit the code.  Note:
  \ This works well in pandoc, but github\n      markdown is more limited, and will
  interpret the first string of three\n      or more backticks as ending the code
  block.\n\n  * RST writer:  Avoid stack overflow with certain tables (#1197).\n\n
  \ * RTF writer:  Fixed table cells containing paragraphs.\n\n  * Custom writer:\n\n
  \   + Correctly handle UTF-8 in custom lua scripts (#1189).\n    + Fix bugs with
  lua scripts with mixed-case filenames and\n      paths containing `+` or `-` (#1267).
  \ Note that `getWriter`\n      in `Text.Pandoc` no longer returns a custom writer
  on input\n      `foo.lua`.\n\n  * AsciiDoc writer:  Handle multiblock and empty
  table cells\n    (#1245, #1246).  Added tests.\n\n  * `Text.Pandoc.Options`: Added
  `readerTrace` to `ReaderOptions`\n\n  * `Text.Pandoc.Shared`:\n\n    + Added `compactify'DL`
  (formerly in markdown reader) (Albert Krewinkel).\n    + Fixed bug in `toRomanNumeral`:
  \ numbers ending with '9' would\n      be rendered as Roman numerals ending with
  'IXIV' (#1249).  Thanks to\n      Jesse Rosenthal.\n    + `openURL`: set proxy with
  value of http_proxy env variable (#1211).\n      Note:  proxies with non-root paths
  are not supported, due to\n      limitations in `http-conduit`.\n\n  * `Text.Pandoc.PDF`:\n\n
  \   + Ensure that temp directories deleted on Windows (#1192).  The PDF is\n      now
  read as a strict bytestring, ensuring that process ownership will\n      be terminated,
  so the temp directory can be deleted.\n    + Use `/` as path separators in a few
  places, even on Windows.\n      This seems to be necessary for texlive (#1151, thanks
  to Tim Lin).\n    + Use `;` for `TEXINPUTS` separator on Windows (#1151).\n    +
  Changes to error reporting, to handle non-UTF8 error output.\n\n  * `Text.Pandoc.Templates`:\n\n
  \   + Removed unneeded datatype context (Merijn Verstraaten).\n\n    + YAML objects
  resolve to \"true\" in conditionals (#1133).\n      Note:  If `address` is a YAML
  object and you just have `$address$`\n      in your template, the word `true` will
  appear, which may be\n      unexpected.  (Previously nothing would appear.)\n\n
  \ * `Text.Pandoc.SelfContained`:  Handle `poster` attribute in `video`\n    tags
  (#1188).\n\n  * `Text.Pandoc.Parsing`:\n\n    + Made `F` an instance of Applicative
  (#1138).\n    + Added `stateCaption`.\n    + Added `HasMacros`, simplified other
  typeclasses.\n      Removed `updateHeaderMap`, `setHeaderMap`, `getHeaderMap`,\n
  \     `updateIdentifierList`, `setIdentifierList`, `getIdentifierList`.\n    + Changed
  the smart punctuation parser to return `Inlines`\n      rather than `Inline` (Matthew
  Pickering).\n    + Changed `HasReaderOptions`, `HasHeaderMap`, `HasIdentifierList`\n
  \     from typeclasses of monads to typeclasses of states.  This simplifies\n      the
  instance definitions and provides more flexibility.  Generalized\n      type of
  `getOption` and added a default definition.  Removed\n      `askReaderOption`.  Added
  `extractReaderOption`.  Added\n      `extractHeaderMap` and `updateHeaderMap` in
  `HasHeaderMap`.\n      Gave default definitions for `getHeaderMap`, `putHeaderMap`,\n
  \     `modifyHeaderMap`.  Added `extractIdentifierList` and\n      `updateIdentifierList`
  in `HasIdentifierList`.  Gave defaults\n      for `getIdentifierList`, `putIdentifierList`,
  and\n      `modifyIdentifierList`.  The ultimate goal here is to allow different\n
  \     parsers to use their own, tailored parser states (instead of\n      `ParserState`)
  while still using shared functions.\n\n  * Template changes:\n\n    + LaTeX template:
  Use `fontenc` package only with `pdflatex` (#1164).\n    + LaTeX template:  Add
  `linestretch` and `fontfamily` variables.\n    + LaTeX template:  Conditionalize
  author and date commands.\n    + Beamer template: Consistent styles for figure and
  table captions\n      (aaronwolen).\n    + LaTeX and beamer template:  Adjust widths
  correctly for oversized\n      images.  Use `\\setkeys{Gin}{}` to set appropriate
  defaults for\n      `\\includegraphics` (Yihui Xie, Garrick Aden-Buie).  Load\n
  \     `upquote` only after `fontenc` (Yihui Xie).\n    + Beamer template: Added
  caption package (#1200).\n    + Beamer template:  changes for better unicode handling
  (KarolS).\n    + DocBook template:  use `authorgroup` if there are authors.\n    +
  revealjs template: Move `include-after` to end (certainlyakey).\n    + revealjs
  template: Fixed PDF print function (#1220, kevinkenan).\n\n  * Bumped version bounds
  of dependencies.\n\n  * Added a `--trace` command line option, for debugging backtracking\n
  \   bugs.  So far this only works with the markdown reader.\n\n  * MathMLinHTML:
  \ Fixed deprecation warning (#362, gwern, Albert Krewinkel).\n\n  * Updated travis
  script to test with multiple GHC versions.\n\n  * Force failure of a Travis build
  if GHC produces warnings (Albert\n    Krewinkel).\n\n  * Add `.editorconfig` (Albert
  Krewinkel).\n    See <http://editorconfig.org/> for details.\n\n  * Give more useful
  error message if '-t pdf' is specified (#1155).\n\n  * Added `Cite`, `SmallCaps`
  to `Arbitrary` instance (#1269).\n\n  * Allow `html4` as a synonym of `html` as
  a reader (it already works\n    as a writer).\n\n  * README:\n\n    + Added an explanation
  of how to use YAML metadata to\n      force items to appear in the bibliography
  without citations in\n      the text (like LaTeX `\\nocite`).\n    + Added note
  to `--bibtex/--natbib`: not for use in making PDF\n      (#1194, thanks to nahoj).\n
  \   + Added explanatory notes about `--natbib` and `--biblatex`.\n    + Added specification
  of legal syntax for citation keys.\n    + Fixed variable defaults documentation
  (Albert Krewinkel).\n\n  * Removed copyright statements for files that have been
  removed\n    (Albert Krewinkel).\n\n  * Moved some doc files from `data-files` to
  `extra-source-files` (#1123).\n    They aren't needed at runtime.  We keep README
  and COPYRIGHT in data\n    to ensure that they'll be available on all systems on
  which pandoc\n    is installed.\n\n  * Use cabal sandboxes in Windows build script.\n\n##
  pandoc 1.12.3.3 (2014-02-03)\n\n  * To changes to source; recompiled tarball with
  latest alex and\n    happy, so they will work with GHC 7.8.\n\n## pandoc 1.12.3.2
  (2014-02-03)\n\n  * Bumped version bounds for blaze-html, blaze-markup.\n\n  * ImageSize:
  \ Avoid use of lookAhead, which is not in binary >= 0.6\n    (#1124).\n\n  * Fixed
  mediawiki ordered list parsing (#1122).\n\n  * HTML reader:  Fixed bug reading inline
  math with `$$` (#225).\n\n  * Added support for LaTeX style literate Haskell code
  blocks in rST\n    (Merijn Verstraaten).\n\n## pandoc 1.12.3.1 (2014-01-14)\n\n
  \ * Relaxed version constraint on binary, allowing the use of binary 0.5.\n\n\n##
  pandoc 1.12.3 (2014-01-10)\n\n  * The `--bibliography` option now sets the `biblio-files`
  variable.\n    So, if you're using `--natbib` or `--biblatex`, you can just use\n
  \   `--bibliography=foo.bib` instead of `-V bibliofiles=foo`.\n\n  * Don't run pandoc-citeproc
  filter if `--bibliography` is\n    used together with `--natbib` or `--biblatex`
  (Florian Eitel).\n\n  * Template changes:\n\n    + Updated beamer template to include
  booktabs.\n    + Added `abstract` variable to LaTeX template.\n    + Put `header-includes`
  after `title` in LaTeX template (#908).\n    + Allow use of `\\includegraphics[size]`
  in beamer.\n      This just required porting a macro definition from the default\n
  \     LaTeX template to the default beamer template.\n\n  * `reference.docx`:  Include
  `FootnoteText` style.\n    Otherwise Word ignores the style, even when specified
  in the `pPr`.\n    (#901)\n\n  * `reference.odt`:  Tidied `styles.xml`.\n\n  * Relaxed
  version bounds for dependencies.\n\n  * Added `withSocketsDo` around http conduit
  code in `openURL`,\n    so it works on Windows (#1080).\n\n  * Added `Cite` function
  to `sample.lua`.\n\n  * Markdown reader:\n\n    + Fixed regression in title blocks
  (#1089).\n      If author field was empty, date was being ignored.\n    + Allow
  backslash-newline hard line breaks in grid and\n      multiline table cells.\n    +
  Citation keys may now start with underscores, and may contain\n      underscores
  adjacent to internal punctuation.\n\n  * LaTeX reader:\n\n    + Add support for
  `Verb` macro (jrnold) (#1090).\n    + Support babel-style quoting: `` \"`...\"'
  ``.\n\n  * Properly handle script blocks in strict mode.  (That is,\n    `markdown-markdown_in_html_blocks`.)
  Previously a spurious\n    `<p>` tag was being added (#1093).\n\n  * Docbook reader:
  Avoid failure if `tbody` contains no `tr` or `row`\n    elements.\n\n  * LaTeX writer:\n\n
  \   + Factored out function for table cell creation.\n    + Better treatment of
  footnotes in tables.\n      Notes now appear in the regular sequence, rather than
  in the\n      table cell.  (This was a regression in 1.10.)\n\n  * HTML reader:
  Parse name/content pairs from meta tags as metadata.\n    Closes #1106.\n\n  * Moved
  `fixDisplayMath` from Docx writer to `Writer.Shared`.\n\n  * OpenDocument writer:
  \ Fixed `RawInline`, `RawBlock` so they don't escape.\n\n  * ODT writer:  Use mathml
  for proper rendering of formulas.\n    Note:  LibreOffice's support for this seems
  a bit buggy.  But\n    it should be better than what we had before.\n\n  * RST writer:
  Ensure no blank line after def in definition list (#992).\n\n  * Markdown writer:
  Don't use tilde code blocks with braced attributes in\n    `markdown_github` output.
  \ A consequence of this change is that the\n    backtick form will be preferred
  in general if both are enabled.  That\n    is good, as it is much more widespread
  than the tilde form.  (#1084)\n\n  * Docx writer:  Fixed problem with some modified
  reference docx files.\n    Include `word/_rels/settings.xml.rels` if it exists,
  as well as other\n    `rels` files besides the ones pandoc generates explicitly.\n\n
  \ * HTML writer:\n\n    + With `--toc`, headers no longer link to themselves (#1081).\n
  \   + Omit footnotes from TOC entries.  Otherwise we get doubled\n      footnotes
  when headers have notes!\n\n  * EPUB writer:\n\n    + Avoid duplicate notes when
  headings contain notes.\n      This arose because the headings are copied into the
  metadata\n      \"title\" field, and the note gets rendered twice.  We strip the\n
  \     note now before putting the heading in \"title\".\n    + Strip out footnotes
  from toc entries.\n    + Fixed bug with `--epub-stylesheet`.  Now the contents of\n
  \     `writerEpubStylesheet` (set by `--epub-stylesheet`)\n      should again work,
  and take precedence over a stylesheet specified\n      in the metadata.\n\n  * `Text.Pandoc.Pretty`:
  \ Added `nestle`.  API change.\n\n  * `Text.Pandoc.MIME`: Added `wmf`, `emf`.\n\n
  \ * `Text.Pandoc.Shared`:  `fetchItem` now handles image URLs beginning\n    with
  `//`.\n\n  * `Text.Pandoc.ImageSize`:  Parse EXIF format JPEGs.  Previously\n    we
  could only get size information for JFIF format, which led\n    to squished images
  in Word documents. Closes #976.\n\n  * Removed old `MarkdownTest_1.0.3` directory
  (#1104).\n\n\n## pandoc 1.12.2.1 (2013-12-08)\n\n  * Markdown reader:  Fixed regression
  in list parser, involving\n    continuation lines containing raw HTML (or even verbatim
  raw HTML).\n\n## pandoc 1.12.2 (2013-12-07)\n\n  * Metadata may now be included
  in YAML blocks in a markdown document.\n    For example,\n\n        ---\n        title:\n
  \       - type: main\n          text: My Book\n        - type: subtitle\n          text:
  An investigation of metadata\n        creator:\n        - role: author\n          text:
  John Smith\n        - role: editor\n          text: Sarah Jones\n        identifier:\n
  \       - scheme: DOI\n          text: doi:10.234234.234/33\n        publisher:
  \ My Press\n        rights:  (c) 2007 John Smith, CC BY-NC\n        cover-image:
  img/mypic.jpg\n        stylesheet: style.css\n        ...\n\n    Metadata may still
  be provided using `--epub-metadata`; it will\n    be merged with the metadata in
  YAML blocks.\n\n  * EPUB writer:\n\n    + `meta` tags are now used instead of `opf`
  attributes for EPUB3.\n    + Insert \"svg\" property as needed in opf (EPUB 3).\n
  \   + Simplify `imageTypeOf` using `getMimeType`.\n    + Add properties attribute
  to `cover-image` item for EPUB 3.\n    + Don't include node for `cover.xhtml` if
  no cover!\n    + Ensure that same identifier is used throughout (#1044).\n      If
  an identifier is given in metadata, we use that; otherwise\n      we generate a
  random uuid.\n    + Add cover reference to guide element (EPUB 2) (Shaun Attfield).\n
  \     Fixes an issue with Calibre putting the cover at the end of the book\n      if
  the spine has `linear=\"no\"`.  Apparently this is best practice\n      for other
  converters as well:\n      <http://www.idpf.org/epub/20/spec/OPF_2.0.1_draft.htm#Section2.6>.\n
  \   + Allow `stylesheet` in metadata.  The value is a path to the stylesheet.\n
  \   + Allow partial dates:  `YYYY`, `YYYY-MM`.\n\n  * Markdown writer:  Fix rendering
  of tight sublists (#1050).\n    Previously a spurious blank line was included after
  a tight sublist.\n\n  * ODT writer:  Add `draw:name` attribute to `draw:frame` elements
  (#1069).\n    This is reported to be necessary to avoid an error from recent\n    versions
  of Libre Office when files contain more than one image\n    Thanks to wmanley for
  reporting and diagnosing the problem.\n\n  * ConTeXt writer:  Don't hardcode figure/table
  placement and numbering.\n    Instead, let this be set in the template, using `\\setupfloat`.\n
  \   Thanks to on4aa and Aditya Mahajan for the suggestion (#1067).\n\n  * Implemented
  CSL flipflopping spans in DOCX, LaTeX, and HTML writers.\n\n  * Fixed bug with markdown
  intraword emphasis.  Closes #1066.\n\n  * Docbook writer:  Hierarchicalize block
  content in metadata.\n    Previously headers just disappeared from block-level metadata\n
  \   when it was used in templates.  Now we apply the 'hierarchicalize'\n    transformation.
  \ Note that a block headed by a level-2 header will\n    turn into a `<sect1>` element.\n\n
  \ * OpenDocument writer:  Skip raw HTML (#1035).\n    Previously it was erroneously
  included as verbatim text.\n\n  * HTML/EPUB writer, footnotes:  Put `<sup>` tag
  inside `<a>` tags.\n    This allows better control of formatting, since the `<a>`\n
  \   tags have a distinguishing class (#1049).\n\n  * Docx writer:\n\n    + Use mime
  type info returned by fetchItem.\n    + Fixed core metadata (#1046).\n      Don't
  create empty date nodes if no date given.\n      Don't create multiple `dc:creator`
  nodes; instead separate by\n      semicolons.\n    + Fix URL for core-properties
  in `_rels/.rels` (#1046).\n\n  * Plain writer: don't print `<span>` tags.\n\n  *
  LaTeX writer:\n\n    + Fix definition lists with internal links in terms (#1032).\n
  \     This fix puts braces around a term that contains an internal\n      link,
  to avoid problems with square brackets.\n    + Properly escape pdftitle, pdfauthor
  (#1059).\n    + Use booktabs package for tables (thanks to Jose Luis Duran).\n\n
  \ * Updated beamer template.  Now references should work properly\n    (in a slide)
  when `--biblatex` or `--natbib` is used.\n\n  * LaTeX reader:\n\n    + Parse contents
  of curly quotes or matched `\"` as quotes.\n    + Support `\\textnormal` as span
  with class `nodecor`.\n      This is needed for pandoc-citeproc.\n    + Improved
  citation parsing.  This fixes a run-time error that occurred\n      with `\\citet{}`
  (empty list of keys).  It also ensures that empty keys\n      don't get produced.\n\n
  \ * MediaWiki reader:  Add automatic header identifiers.\n\n  * HTML reader:\n\n
  \   + Use pandoc `Div` and `Span` for raw `<div>`, `<span>` when\n      `--parse-raw`.\n
  \   + Recognize `svg` tags as block level content (thanks to MinRK).\n    + Parse
  LaTeX math if appropriate options are set.\n\n  * Markdown reader:\n\n    + Yaml
  block must start immediately after `---`.  If there's a blank\n      line after
  `---`, we interpreted it as a horizontal rule.\n    + Correctly handle empty bullet
  list items.\n    + Stop parsing \"list lines\" when we hit a block tag.\n      This
  fixes exponential slowdown in certain input, e.g.\n      a series of lists followed
  by `</div>`.\n\n   * Slides:  Preserve `<div class=\"references\">` in references
  slide.\n\n  * `Text.Pandoc.Writer.Shared`:\n\n    + Fixed bug in `tagWithAttrs`.
  \ A space was omitted before key-value\n      attributes, leading to invalid HTML.\n
  \   + `normalizeDate`: Allow dates with year only (thanks to Shaun Attfield).\n
  \   + Fixed bug in `openURL` with `data:` URIs.  Previously the base-64\n      encoded
  bytestring was returned.  We now decode it so it's a proper\n      image!\n\n  *
  DocBook reader:  Handle numerical attributes starting with decimal.\n    Also use
  `safeRead` instead of `read`.\n\n  * `Text.Pandoc.Parsing`:\n\n    + Generalized
  type of `registerHeader`, using new type classes\n      `HasReadeOptions`, `HasIdentifierList`,
  `HasHeaderMap`.\n      These allow certain common functions to be reused\n      even
  in parsers that use custom state (instead of `ParserState`),\n      such as the
  MediaWiki reader.\n    + Moved inlineMath, displayMath from Markdown reader to Parsing.\n
  \     Generalize their types and export them from Parsing.  (API change.)\n\n  *
  `Text.Pandoc.Readers.TexMath`: Export `readTeXMath'`, which attends\n    to display/inline.
  \ Deprecate `readTeXMath`, and use `readTeXMath'`\n    in all the writers.  Require
  `texmath >= 0.6.5.2`.\n\n  * `Text.Pandoc.MIME`:\n\n    + Add entry for `jfif`.\n
  \   + In looking up extensions, drop the encoding info.\n      E.g. for 'image/jpg;base64'
  we should lookup 'image/jpg'.\n\n  * Templates:  Changed how array variables are
  resolved.  Previously if\n    `foo` is an array (which might be because multiple
  values were set on\n    the command line), `$foo$` would resolve to the concatenation
  of the\n    elements of foo.  This is rarely useful behavior.  It has been changed\n
  \   so that the first value is rendered.  Of course, you can still iterate\n    over
  the values using `$for(foo)$`.  This has the result that you can\n    override earlier
  settings using `-V` by putting new values later on the\n    command line, which
  is useful for many purposes.\n\n  * `Text.Pandoc`:  Don't default to `pandocExtensions`
  for all writers.\n\n  * Allow \"epub2\" as synonym for \"epub\", \"html4\" for \"html\".\n\n
  \ * Don't look for slidy files in data files with `--self-contained`.\n\n  * Allow
  `https:` command line arguments to be downloaded.\n\n  * Fixed `make_osx_package.sh`
  so data files embedded in `pandoc-citeproc`.\n\n## pandoc 1.12.1 (2013-10-20)\n\n
  \ * `Text.Pandoc.Definition`:  Changed default JSON serialization format.\n    Instead
  of `{\"Str\": \"foo\"}`, for example, we now have `{\"t\": \"Str\",\n    \"c\":
  \"foo\"}`.  This new format is easier to work with outside of Haskell.\n    Incidentally,
  \"t\" stands for \"tag\", \"c\" for \"contents\".\n\n  * MediaWiki reader: Trim
  contents of `<math>` tags, to avoid problems\n    when converting to markdown (#1027).\n\n
  \ * LaTeX reader:\n\n    + Ensure that preamble doesn't contribute to the text of\n
  \     the document.\n    + Fixed character escaping in `\\url{}`.  Previously `\\~`
  wasn't handled\n      properly, among others.\n    + Parse `{groups}` as `Span`.
  \ This is needed for accurate conversion of\n      bibtex titles, since we need
  to know what was protected from\n      titlecase conversions.\n\n  * LaTeX writer:\n\n
  \   + Specially escape non-ascii characters in labels.\n      Otherwise we can get
  compile errors and other bugs when\n      compiled with pdflatex (#1007).  Thanks
  to begemotv2718 for the fix.\n    + Add link anchors for code blocks with identifiers
  (#1025).\n\n  * Throughout the code, use `isURI` instead of `isAbsoluteURI`.\n    It
  allows fragments identifiers.\n\n  * Slide formats:\n\n    + A Div element with
  class \"notes\" is treated as speaker\n      notes.  Currently beamer goes to `\\note{}`,
  revealjs to\n      `<aside class=\"notes\">`, and the notes are simply suppressed
  in\n      other formats  (#925).\n    + Fixed `. . .` (pause) on HTML slide formats.
  \ Closes #1029.\n      The old version caused a pause to be inserted before the
  first\n      material on a slide. This has been fixed.\n    + Removed data files
  for s5, slideous, slidy.\n      Users of s5 and slideous will have to download the
  needed\n      files, as has been documented for some time in the README.\n      By
  default, slidy code will be sought on the web, as before.\n\n  * HTML writer: Insert
  command to typeset mathjax only in slideous output\n    (#966, #1012).\n\n  * RST
  writer:  Skip spaces after display math.  Otherwise we get indentation\n    problems,
  and part of the next paragraph may be rendered as part of the\n    math.\n\n  *
  OpenDocument writer:  Fix formatting of strikeout code (#995),\n    thanks to wilx.
  \ don't use `font-face-decls` variable.\n\n  * Fixed test suite so it works with
  cabal sandboxes.\n\n## pandoc 1.12.0.2 (2013-09-20)\n\n  * Removed an unused dependency
  (`stringable`) from pandoc.cabal.\n    This will help packagers, but users should
  not need to upgrade.\n\n## pandoc 1.12.0.1 (2013-09-20)\n\n  * Allow `--metadata`
  to be repeated for the same key to form a list.\n    This also has the effect that
  `--bibliography` can be repeated,\n    as before.\n\n  * Handle boolean values in
  `--metadata`.  Note that anything not parseable\n    as a YAML boolean or string
  is treated as a literal string.\n    You can get a string value with \"yes\", or
  any of the strings interpretable\n    as booleans, by quoting it:\n\n        -M
  boolvalue=yes -M stringvalue='\"yes\"'\n\n  * LaTeX writer: Don't print references
  if `--natbib` or `--biblatex`\n    option used.\n\n  * DOCX writer: Add `settings.xml`
  to the zip container.  Fixes a bug\n    in which docx files could not be read by
  some versions of Word\n    and LibreOffice (#990).\n\n  * Fixed a regression involving
  slide shows with bibliographies.\n    The Div container around references messed
  up the procedure for carving\n    a document into slides.  So we now remove the
  surrounding Div in\n    `prepSlides`.\n\n  * More informative error message when
  a filter is not found in path.\n\n  * Depend on pandoc-types 1.12.1.  This provide
  `ToJSONFilter`\n    instances for `Data a => a -> [a]` and `Data a => a -> IO [a]`.\n\n
  \ * Don't use unicode_collation in building OSX package:\n    it adds something
  like 50MB of dependencies to the package.\n\n  * Declare alex and happy as build-tools
  (#986).\n\n## pandoc 1.12 (2013-09-15)\n\n### New features\n\n  * Much more flexible
  metadata, including arbitrary fields and structured\n    values.  Metadata can be
  specified flexibly in pandoc markdown using\n    YAML metadata blocks, which may
  occur anywhere in the document:\n\n        ---\n        title: Here is my title.\n
  \       abstract: |\n          This is the abstract.\n\n          1. It can contain\n
  \         2. block content\n             and *inline markup*\n\n        tags: [cat,
  dog, animal]\n        ...\n\n    Metadata fields automatically populate template
  variables.\n\n  * Added `opml` (OPML) as input and output format.  The `_note` attribute,\n
  \   used in OmniOutliner and supported by multimarkdown, is supported.\n    We treat
  the contents as markdown blocks under a section header.\n\n  * Added `haddock` (Haddock
  markup) as input format (David Lazar).\n\n  * Added `revealjs` output format, for
  reveal.js HTML 5 slide shows.\n    (Thanks to Jamie F. Olson for the initial patch.)\n
  \   Nested vertical stacks are used for hierarchical structure.\n    Results for
  more than one level of nesting may be odd.\n\n  * Custom writers can now be written
  in lua.\n\n        pandoc -t data/sample.lua\n\n    will load the script sample.lua
  and use it as a custom writer.\n    (For a sample, do `pandoc --print-default-data-file
  sample.lua`.)\n    Note that pandoc embeds a lua interpreter, so lua need not be\n
  \   installed separately.\n\n  * New `--filter/-F` option to make it easier to run
  \"filters\"\n    (Pandoc AST transformations that operate on JSON serializations).\n
  \   Filters are always passed the name of the output format, so their\n    behavior
  can be tailored to it.  The repository\n    <https://github.com/jgm/pandocfilters>
  contains\n    a python module for writing pandoc filters in python, with\n    a
  number of examples.\n\n  * Added `--metadata/-M` option.\n    This is like `--variable/-V`,
  but actually adds to metadata, not\n    just variables.\n\n  * Added `--print-default-data-file`
  option, which allows printing\n    of any of pandoc's data files. (For example,\n
  \   `pandoc --print-default-data-file reference.odt` will print\n    `reference.odt`.)\n\n
  \ * Added syntax for \"pauses\" in slide shows:\n\n        This gives\n\n        .
  . .\n\n        me pause.\n\n  * New markdown extensions:\n\n    + `ignore_line_breaks`:
  \ causes intra-paragraph line breaks to be ignored,\n      rather than being treated
  as hard line breaks or spaces.  This is useful\n      for some East Asian languages,
  where spaces aren't used between words,\n      but text is separated into lines
  for readability.\n    + `yaml_metadata_block`:  Parse YAML metadata blocks.  (Default.)\n
  \   + `ascii_identifiers`: This will force `auto_identifiers` to use ASCII\n       only.
  (Default for `markdown_github`.) (#807)\n    + `lists_without_preceding_blankline`:
  \ Allow lists to start without\n      preceding blank space.  (Default for `markdown_github`.)
  (#972)\n\n### Behavior changes\n\n  * `--toc-level` no longer implies `--toc`.\n
  \   Reason: EPUB users who don't want a visible TOC may still want\n    to set the
  TOC level for in the book navigation.\n\n  * `--help` now prints in and out formats
  in alphabetical order, and\n    says something about PDF output (#720).\n\n  * `--self-contained`
  now returns less verbose output (telling you\n    which URLs it is fetching, but
  not giving the full header).  In\n    addition, there are better error messages
  when fetching a URL fails.\n\n  * Citation support is no longer baked in to core
  pandoc. Users who\n    need citations will need to install and use a separate filter\n
  \   (`--filter pandoc-citeproc`).  This filter will take `bibliography`,\n    `csl`,
  and `citation-abbreviations` from the metadata, though it\n    may still be specified
  on the command line as before.\n\n  * A `Cite` element is now created in parsing
  markdown whether or not\n    there is a matching reference.\n\n  * The `pandoc-citeproc`
  script will put the bibliography at the\n    end of the document, as before.  However,
  it will be put inside a `Div`\n    element with class \"references\", allowing users
  some control\n    over the styling of references.  A final header, if any, will\n
  \   be included in the `Div`.\n\n  * The markdown writer will not print a bibliography
  if the\n    `citations` extension is enabled.  (If the citations are formatted\n
  \   as markdown citations, it is redundant to have a bibliography,\n    since one
  will be generated automatically.)\n\n  * Previously we used to store the directory
  of the first input file,\n    even if it was local, and used this as a base directory
  for finding\n    images in ODT, EPUB, Docx, and PDF.  This has been confusing to
  many\n    users.  So we now look for images relative to the current\n    working
  directory, even if the first file argument is in another\n    directory.   Note
  that this change may break some existing workflows.\n    If you have been assuming
  that relative links will be interpreted\n    relative to the directory of the first
  file argument, you'll need\n    to make that the current directory before running
  pandoc. (#942)\n\n  * Better error reporting in some readers, due to changes in
  `readWith`:\n    the line in which the error occurred is printed, with a caret pointing\n
  \   to the column.\n\n  * All slide formats now support incremental slide view for
  definition lists.\n\n  * Parse `\\(..\\)` and `\\[..\\]` as math in MediaWiki reader.\n
  \   Parse `:<math>...</math>` as display math.  These notations are used with\n
  \   the MathJax MediaWiki extension.\n\n  * All writers: template variables are
  set automatically from metadata\n    fields.  However, variables specified on the
  command line with\n    `--variable` will completely shadow metadata fields.\n\n
  \ * If `--variable` is used to set many variables with the same name,\n    a list
  is created.\n\n  * Man writer:  The `title`, `section`, `header`, and `footer` can
  now\n    all be set individually in metadata.  The `description` variable has been\n
  \   removed.  Quotes have been added so that spaces are allowed in the\n    title.
  \ If you have a title that begins\n\n        COMMAND(1) footer here | header here\n\n
  \   pandoc will still parse it into a title, section, header, and\n    footer.  But
  you can also specify these elements explicitly (#885).\n\n  * Markdown reader\n\n
  \   + Added support for YAML metadata blocks, which can come anywhere\n      in
  the document (not just at the beginning).  A document can contain\n      multiple
  YAML metadata blocks.\n    + HTML span and div tags are parsed as pandoc Span and
  Div elements.\n\n  * Markdown writer\n\n    + Allow simple tables to be printed
  as grid tables,\n      if other table options are disabled.  This means you can
  do\n      `pandoc -t markdown-pipe_tables-simple_tables-multiline_tables`\n      and
  all tables will render as grid tables.\n    + Support YAML title block (render fields
  in alphabetical order\n      to make output predictable).\n\n### API changes\n\n
  \ * `Meta` in `Text.Pandoc.Definition` has been changed to allow\n    structured
  metadata.  (Note:  existing code that pattern-matches\n    on `Meta` will have to
  be revised.)  Metadata can now contain\n    indefinitely many fields, with content
  that can be a string,\n    a Boolean, a list of `Inline` elements, a list of `Block`\n
  \   elements, or a map or list of these.\n\n  * A new generic block container (`Div`)
  has been added to `Block`,\n    and a generic inline container (`Span`) has been
  added to `Inline`.\n    These can take attributes.  They will render in HTML, Textile,\n
  \   MediaWiki, Org, RST and Markdown (with `markdown_in_html`\n    extension) as
  HTML `<div>` and `<span>` elements; in other formats\n    they will simply pass
  through their contents.  But they can be\n    targeted by scripts.\n\n  * `Format`
  is now a newtype, not an alias for String.\n    Equality comparisons are case-insensitive.\n\n
  \ * Added `Text.Pandoc.Walk`, which exports hand-written tree-walking\n    functions
  that are much faster than the SYB functions from\n    `Text.Pandoc.Generic`.  These
  functions are now used where possible\n    in pandoc's code.  (`Tests.Walk` verifies
  that `walk` and `query`\n    match the generic traversals `bottomUp` and `queryWith`.)\n\n
  \ * Added `Text.Pandoc.JSON`, which provides `ToJSON` and `FromJSON`\n    instances
  for the basic pandoc types. They use GHC generics and\n    should be faster than
  the old JSON serialization using\n    `Data.Aeson.Generic`.\n\n  * Added `Text.Pandoc.Process`,
  exporting `pipeProcess`.\n    This is a souped-up version of `readProcessWithErrorcode`
  that\n    uses lazy bytestrings instead of strings and allows setting\n    environment
  variables.  (Used in `Text.Pandoc.PDF`.)\n\n  * New module `Text.Pandoc.Readers.OPML`.\n\n
  \ * New module `Text.Pandoc.Writers.OPML`.\n\n  * New module `Text.Pandoc.Readers.Haddock`
  (David Lazar).\n    This is based on Haddock's own lexer/parser.\n\n  * New module
  `Text.Pandoc.Writers.Custom`.\n\n  * In `Text.Pandoc.Shared`, `openURL` and `fetchItem`
  now return an\n    Either, for better error handling.\n\n  * Made `stringify` polymorphic
  in `Text.Pandoc.Shared`.\n\n  * Removed `stripTags` from `Text.Pandoc.XML`.\n\n
  \ * `Text.Pandoc.Templates`:\n\n    + Simplified `Template` type to a newtype.\n
  \   + Removed `Empty`.\n    + Changed type of `renderTemplate`: it now takes a JSON
  context\n      and a compiled template.\n    + Export `compileTemplate`.\n    +
  Export `renderTemplate'` that takes a string instead of a compiled\n      template.\n
  \   + Export `varListToJSON`.\n\n  * `Text.Pandoc.PDF` exports `makePDF` instead
  of `tex2pdf`.\n\n  * `Text.Pandoc`:\n\n    + Made `toJsonFilter` an alias for `toJSONFilter`
  from `Text.Pandoc.JSON`.\n    + Removed `ToJsonFilter` typeclass.  `ToJSONFilter`
  from\n      `Text.Pandoc.JSON` should be used instead.  (Compiling against\n      pandoc-types
  instead of pandoc will also produce smaller executables.)\n    * Removed the deprecated
  `jsonFilter` function.\n    + Added `readJSON`, `writeJSON` to the API (#817).\n\n
  \ * `Text.Pandoc.Options`:\n\n    + Added `Ext_lists_without_preceding_blankline`,\n
  \     `Ext_ascii_identifiers`, `Ext_ignore_line_breaks`,\n      `Ext_yaml_metadataBlock`
  to `Extension`.\n    + Changed `writerSourceDirectory` to `writerSourceURL` and
  changed the\n      type to a `Maybe`.  `writerSourceURL` is set to 'Just url' when
  the\n      first command-line argument is an absolute URL.  (So, relative links\n
  \     will be resolved in relation to the first page.)  Otherwise, 'Nothing'.\n
  \   + All bibliography-related fields have been removed from\n      `ReaderOptions`
  and `WriterOptions`: `writerBiblioFiles`,\n      `readerReferences`, `readerCitationStyle`.\n\n
  \ * The `Text.Pandoc.Biblio` module has been removed.  Users of the\n    pandoc
  library who want citation support will need to use\n    `Text.CSL.Pandoc` from `pandoc-citeproc`.\n\n###
  Bug fixes\n\n  * In markdown, don't autolink a bare URI that is followed by `</a>`\n
  \   (#937).\n\n  * `Text.Pandoc.Shared`\n\n    + `openURL` now follows redirects
  (#701), properly handles `data:`\n      URIs, and prints diagnostic output to stderr
  rather than stdout.\n    + `readDefaultDataFile`: normalize the paths.  This fixes
  bugs in\n      `--self-contained` on pandoc compiled with `embed_data_files` (#833).\n
  \   + Fixed `readDefaultDataFile` so it works on Windows.\n    + Better error messages
  for `readDefaultDataFile`.  Instead of\n      listing the last path tried, which
  can confuse people who are\n      using `--self-contained`, so now we just list
  the data file name.\n    + URL-escape pipe characters.  Even though these are legal,
  `Network.URI`\n      doesn't regard them as legal in URLs.  So we escape them first
  (#535).\n\n  * Mathjax in HTML slide shows:  include explicit \"Typeset\" call.\n
  \   This seems to be needed for some formats (e.g. slideous) and won't\n    hurt
  in others (#966).\n\n  * `Text.Pandoc.PDF`\n\n    + On Windows, create temdir in
  working directory, since the system\n      temp directory path may contain tildes,
  which can cause\n      problems in LaTeX (#777).\n    + Put temporary output directory
  in `TEXINPUTS` (see #917).\n    + `makePDF` tries to download images that are not
  found locally,\n      if the first argument is a URL (#917).\n    + If compiling
  with `pdflatex` yields an encoding error, offer\n      the suggestion to use `--latex-engine=xelatex`.\n\n
  \ * Produce automatic header identifiers in parsing textile, RST,\n    and LaTeX,
  unless `auto_identifiers` extension is disabled (#967).\n\n  * `Text.Pandoc.SelfContained`:
  \ Strip off fragment, query of relative URL\n     before treating as a filename.
  \ This fixes `--self-contained` when used\n     with CSS files that include web
  fonts using the method described here:\n      <http://paulirish.com/2009/bulletproof-font-face-implementation-syntax/>\n
  \     (#739).  Handle `src` in `embed`, `audio`, `source`, `input` tags.\n\n  *
  `Text.Pandoc.Parsing`: `uri` parser no longer treats punctuation before\n    percent-encoding,
  or a `+` character, as final punctuation.\n\n  * `Text.Pandoc.ImageSize`:  Handle
  EPS (#903).  This change will make\n    EPS images properly sized on conversion
  to Word.\n\n  * Slidy:  Use slidy.js rather than slidy.js.gz.\n    Reason:  some
  browsers have trouble with the gzipped js file,\n    at least on the local file
  system (#795).\n\n  * Markdown reader\n\n    + Properly handle blank line at beginning
  of input (#882).\n    + Fixed bug in unmatched reference links.  The input\n      `[*infile*]
  [*outfile*]` was getting improperly parsed:\n      \"infile\" was emphasized, but
  \"*outfile*\" was literal (#883).\n    + Allow internal `+` in citation identifiers
  (#856).\n    + Allow `.` or `)` after `#` in ATX headers if no `fancy_lists`.\n
  \   + Do not generate blank title, author, or date metadata elements.\n      Leave
  these out entirely if they aren't present.\n    + Allow backtick code blocks not
  to be preceded by blank line (#975).\n\n  * Textile reader:\n\n    + Correctly handle
  entities.\n    + Improved handling of `<pre>` blocks (#927). Remove internal HTML
  tags\n      in code blocks, rather than printing them verbatim. Parse attributes\n
  \     on `<pre>` tag for code blocks.\n\n  * HTML reader: Handle non-simple tables
  (#893).  Column widths are read from\n    `col` tags if present, otherwise divided
  equally.\n\n  * LaTeX reader\n\n    + Support alltt environment (#892).\n    + Support
  `\\textasciitilde`, `\\textasciicircum` (#810).\n    + Treat `\\textsl` as emphasized
  text reader (#850).\n    + Skip positional options after `\\begin{figure}`.\n    +
  Support `\\v{}` for hacek (#926).\n    + Don't add spurious \", \" to citation suffixes.\n
  \     This is added when needed in pandoc-citeproc.\n    + Allow spaces in alignment
  spec in tables, e.g. `{ l r c }`.\n    + Improved support for accented characters
  (thanks to Scott Morrison).\n    + Parse label after section command and set id
  (#951).\n\n  * RST reader:\n\n    + Don't insert paragraphs where docutils doesn't.\n
  \     `rst2html` doesn't add `<p>` tags to list items (even when they are\n      separated
  by blank lines) unless there are multiple paragraphs in the\n      list.  This commit
  changes the RST reader to conform more closely to\n      what docutils does (#880).\n
  \   + Improved metadata.  Treat initial field list as metadata when\n      standalone
  specified.  Previously ALL fields \"title\", \"author\",\n      \"date\" in field
  lists were treated as metadata, even if not at\n      the beginning.  Use `subtitle`
  metadata field for subtitle.\n    + Fixed 'authors' metadata parsing in reST.  Semicolons
  separate\n      different authors.\n\n  * MediaWiki reader\n\n    + Allow space
  before table rows.\n    + Fixed regression for `<ref>URL</ref>`.\n      `<` is no
  longer allowed in URLs, according to the uri parser\n      in `Text.Pandoc.Parsing`.
  \ Added a test case.\n    + Correctly handle indented preformatted text without
  preceding\n      or following blank line.\n    + Fixed `|` links inside table cells.
  \ Improved attribute parsing.\n    + Skip attributes on table rows.  Previously
  we just crashed if\n      rows had attributes, now we ignore them.\n    + Ignore
  attributes on headers.\n    + Allow `Image:` for images (#971).\n    + Parse an
  image with caption in a paragraph by itself as a figure.\n\n  * LaTeX writer\n\n
  \   + Don't use ligatures in escaping inline code.\n    + Fixed footnote numbers
  in LaTeX/PDF tables.  This fixes a bug\n      wherein notes were numbered incorrectly
  in tables (#827).\n    + Always create labels for sections.  Previously the labels
  were only\n      created when there were links to the section in the document (#871).\n
  \   + Stop escaping `|` in LaTeX math.\n      This caused problems with array environments
  (#891).\n    + Change `\\` to `/` in paths.  `/` works even on Windows in LaTeX.\n
  \     `\\` will cause major problems if unescaped.\n    + Write id for code block
  to label attribute in LaTeX when listings\n      is used (thanks to Florian Eitel).\n
  \   + Scale LaTeX tables so they don't exceed columnwidth.\n    + Avoid problem
  with footnotes in unnumbered headers (#940).\n\n  * Beamer writer: when creating
  beamer slides, add `allowframebreaks` option\n      to the slide if it is one of
  the header classes.  It is recommended\n      that your bibliography slide have
  this attribute:\n\n        # References {.allowframebreaks}\n\n    This causes multiple
  slides to be created if necessary, depending\n    on the length of the bibliography.\n\n
  \ * ConTeXt writer: Properly handle tables without captions.  The old output\n    only
  worked in MkII. This should work in MkIV as well (#837).\n\n  * MediaWiki writer:
  Use native mediawiki tables instead of HTML (#720).\n\n  * HTML writer:\n\n    +
  Fixed `--no-highlight` (Alexander Kondratskiy).\n    + Don't convert to lowercase
  in email obfuscation (#839).\n    + Ensure proper escaping in `<title>` and `<meta>`
  fields.\n\n  * AsciiDoc writer:\n\n    + Support `--atx-headers` (Max Rydahl Andersen).\n
  \   + Don't print empty identifier blocks `([[]])` on headers (Max\n      Rydahl
  Andersen).\n\n  * ODT writer:\n\n    + Fixing wrong numbered-list indentation in
  open document format\n      (Alexander Kondratskiy) (#369).\n    + `reference.odt`:
  Added pandoc as \"generator\" in `meta.xml`.\n    + Minor changes for ODF 1.2 conformance
  (#939). We leave the\n      nonconforming `contextual-spacing` attribute, which
  is provided by\n      LibreOffice itself and seems well supported.\n\n  * Docx writer:\n\n
  \   + Fixed rendering of display math in lists.\n      In 1.11 and 1.11.1, display
  math in lists rendered as a new list\n      item.  Now it always appears centered,
  just as outside of lists,\n      and in proper display math style, no matter how
  far indented the\n      containing list item is (#784).\n    + Use `w:br` with `w:type`
  `textWrapping` for linebreaks.\n      Previously we used `w:cr` (#873).\n    + Use
  Compact style for Plain block elements, to\n      differentiate between tight and
  loose lists (#775).\n    + Ignore most components of `reference.docx`.\n      We
  take the `word/styles.xml`, `docProps/app.xml`,\n      `word/theme/theme1.xml`,
  and `word/fontTable.xml` from\n      `reference.docx`, ignoring everything else.
  \ This should help\n      with the corruption problems caused when different versions
  of\n      Word resave the reference.docx and reorganize things.\n    +  Made `--no-highlight`
  work properly.\n\n  * EPUB writer\n\n    + Don't add `dc:creator` tags if present
  in EPUB metadata.\n    + Add `id=\"toc-title\"` to `h1` in `nav.xhtml` (#799).\n
  \   + Don't put blank title page in reading sequence.\n      Set `linear=\"no\"`
  if no title block.  Addresses #797.\n    + Download webtex images and include as
  data URLs.\n      This allows you to use `--webtex` in creating EPUBs.\n      Math
  with `--webtex` is automatically made self-contained.\n    + In `data/epub.css`,
  removed highlighting styles (which\n      are no longer needed, since styles are
  added by the HTML\n      writer according to `--highlighting-style`).  Simplified\n
  \     margin fields.\n    + If resource not found, skip it, as in Docx writer (#916).\n\n
  \ * RTF writer:\n\n    + Properly handle characters above the 0000-FFFF range.\n
  \     Uses surrogate pairs.  Thanks to Hiromi Ishii for the patch.\n    + Fixed
  regression with RTF table of contents.\n    + Only autolink absolute URIs.  This
  fixes a regression, #830.\n\n  * Markdown writer:\n\n    + Only autolink absolute
  URIs.  This fixes a regression, #830.\n    + Don't wrap attributes in fenced code
  blocks.\n    + Write full metadata in MMD style title blocks.\n    + Put multiple
  authors on separate lines in pandoc titleblock.\n      Also, don't wrap long author
  entries, as new lines get treated\n      as new authors.\n\n  * `Text.Pandoc.Templates`:\n\n
  \   + Fixed bug retrieving default template for markdown variants.\n    + Templates
  can now contain \"record lookups\" in variables;\n      for example, `author.institution`
  will retrieve the `institution`\n      field of the `author` variable.\n    + More
  consistent behavior of `$for$`.  When `foo` is not a list,\n      `$for(foo)$...$endfor$`
  should behave like $if(foo)$...$endif$.\n      So if `foo` resolves to \"\", no
  output should be produced.\n      See pandoc-templates#39.\n\n  * Citation processing
  improvements (now part of pandoc-citeproc):\n\n    + Fixed `endWithPunct` The new
  version correctly sees a sentence\n      ending in '.)' as ending with punctuation.
  \ This fixes a bug which\n      led such sentences to receive an extra period at
  the end: '.).'.\n      Thanks to Steve Petersen for reporting.\n    + Don't interfere
  with Notes that aren't citation notes.\n      This fixes a bug in which notes not
  generated from citations were\n      being altered (e.g. first letter capitalized)
  (#898).\n    + Only capitalize footnote citations when they have a prefix.\n    +
  Changes in suffix parsing.  A suffix beginning with a digit gets 'p'\n      inserted
  before it before passing to citeproc-hs, so that bare numbers\n      are treated
  as page numbers by default.  A suffix not beginning with\n      punctuation has
  a space added at the beginning (rather than a comma and\n      space, as was done
  before for not-author-in-text citations).\n      The result is that `\\citep[23]{item1}`
  in LaTeX will be interpreted\n      properly, with '23' treated as a locator of
  type 'page'.\n    + Many improvements to citation rendering, due to fixes in citeproc-hs\n
  \     (thanks to Andrea Rossato).\n    + Warnings are issued for undefined citations,
  which are rendered\n      as `???`.\n    + Fixed hanging behavior when locale files
  cannot be found.\n\n### Template changes\n\n  * DocBook:  Use DocBook 4.5 doctype.\n\n
  \ * Org: '#+TITLE:' is inserted before the title.\n    Previously the writer did
  this.\n\n  * LaTeX:  Changes to make mathfont work with xelatex.\n    We need the
  mathspec library, not just fontspec, for this.\n    We also need to set options
  for setmathfont (#734).\n\n  * LaTeX: Use `tex-ansi` mapping for `monofont`.\n    This
  ensures that straight quotes appear as straight, rather than\n    being treated
  as curly.  See #889.\n\n  * Made `\\includegraphics` more flexible in LaTeX template.\n
  \   Now it can be used with options, if needed.  Thanks to Bernhard Weichel.\n\n
  \ * LaTeX/Beamer: Added `classoption` variable.\n    This is intended for class
  options like `oneside`; it may\n    be repeated with different options.  (Thanks
  to Oliver Matthews.)\n\n  * Beamer: Added `fonttheme` variable.  (Thanks to Luis
  Osa.)\n\n  * LaTeX: Added `biblio-style` variable (#920).\n\n  * DZSlides: title
  attribute on title section.\n\n  * HTML5: add meta tag to allow scaling by user
  (Erik Evenson)\n\n### Under-the-hood improvements\n\n  * Markdown reader:Improved
  strong/emph parsing, using the strategy of\n    <https://github.com/jgm/Markdown>.
  \ The new parsing algorithm requires\n    no backtracking, and no keeping track
  of nesting levels.  It will give\n    different results in some edge cases, but
  these should not affect normal\n    uses.\n\n  * Added `Text.Pandoc.Compat.Monoid`.\n
  \   This allows pandoc to compile with `base` < 4.5, where `Data.Monoid`\n    doesn't
  export `<>`.  Thanks to Dirk Ullirch for the patch.\n\n  * Added `Text.Pandoc.Compat.TagSoupEntity`.\n
  \   This allows pandoc to compile with `tagsoup` 0.13.x.\n    Thanks to Dirk Ullrich
  for the patch.\n\n  * Most of `Text.Pandoc.Readers.TeXMath` has been moved to the\n
  \   `texmath` module (0.6.4).  (This allows `pandoc-citeproc` to\n    handle simple
  math in bibliography fields.)\n\n  * Added `Text.Pandoc.Writers.Shared` for shared
  functions used\n    only in writers.  `metaToJSON` is used in writers to create
  a\n    JSON object for use in the templates from the pandoc metadata\n    and variables.
  \ `getField`, `setField`, and `defField` are\n    for working with JSON template
  contexts.\n\n  * Added `Text.Pandoc.Asciify` utility module.\n    This exports functions
  to create ASCII-only versions of identifiers.\n\n  * `Text.Pandoc.Parsing`\n\n    +
  Generalized state type on `readWith` (API change).\n    + Specialize readWith to
  `String` input. (API change).\n    + In `ParserState`, replace `stateTitle`, `stateAuthors`,
  `stateDate`\n      with `stateMeta` and `stateMeta'`.\n\n  * `Text.Pandoc.UTF8`:
  use strict bytestrings in reading.  The use of lazy\n     bytestrings seemed to
  cause problems using pandoc on 64-bit Windows\n     7/8 (#874).\n\n  * Factored
  out `registerHeader` from markdown reader, added to\n    `Text.Pandoc.Parsing`.\n\n
  \ * Removed `blaze_html_0_5` flag, require `blaze-html` >= 0.5.\n    Reason:  <
  0.5 does not provide a monoid instance for Attribute,\n    which is now needed by
  the HTML writer (#803).\n\n  * Added `http-conduit` flag, which allows fetching
  https resources.\n    It also brings in a large number of dependencies (`http-conduit`\n
  \   and its dependencies), which is why for now it is an optional flag\n    (#820).\n\n
  \ * Added CONTRIBUTING.md.\n\n  * Improved INSTALL instructions.\n\n  * `make-windows-installer.bat`:
  Removed explicit paths for executables.\n\n  * `aeson` is now used instead of `json`
  for JSON.\n\n  * Set default stack size to 16M.  This is needed for some large\n
  \   conversions, esp. if pandoc is compiled with 64-bit ghc.\n\n  * Various small
  documentation improvements.\n    Thanks to achalddave and drothlis for patches.\n\n
  \ * Removed comment that chokes recent versions of CPP (#933).\n\n  * Removed support
  for GHC version < 7.2, since pandoc-types now\n    requires at least GHC 7.2 for
  GHC generics.\n\n\n## pandoc 1.11.1 (2013-03-17)\n\n  * Markdown reader:\n\n    +
  Fixed regression in which parentheses were lost in link URLs.\n      Added tests.
  \ Closes #786.\n    + Better handling of unmatched double quotes in `--smart` mode.\n
  \     These occur frequently in fiction, since it is customary not to\n      close
  quotes in dialogue if the speaker does not change between\n      paragraphs.  The
  unmatched quotes now get turned into literal\n      left double quotes. (No `Quoted`
  inline is generated, however.)\n      Closes #99 (again).\n\n  * HTML writer: Fixed
  numbering mismatch between TOC and sections.\n    `--number-offset` now affects
  TOC numbering as well\n    as section numbering, as it should have all along.  Closes
  #789.\n\n  * Markdown writer: Reverted 1.11 change that caused citations to be rendered\n
  \   as markdown citations, even if `--bibliography` was specified, unless\n    `citation`
  extension is disabled.  Now, formatted citations are always\n    printed if `--bibliography`
  was specified.  If you want to reformat\n    markdown keeping pandoc markdown citations
  intact, don't use\n    `--bibliography`.  Note that citations parsed from LaTeX
  documents will\n    be rendered as pandoc markdown citations when `--bibliography`
  is not\n    specified.\n\n  * ODT writer: Fixed regression leading to corrupt ODTs.\n
  \   This was due to a change in the `Show` instance for\n    `Text.Pandoc.Pretty.Doc`.
  \ Closes #780.\n\n  * Fixed spacing bugs involving code block attributes in\n    RST
  reader and Markdown writer. Closes #763.\n\n  * Windows package:  Various improvements
  due to Fyodor Sheremetyev.\n\n    + Automatically set installation path (Program
  Files or Local App Data).\n    + Set system PATH environment variable when installing
  for all users.\n    + Pandoc can installed for all users using the following command.\n
  \     `msiexec /i pandoc-1.11.msi ALLUSERS=1`.\n\n  * Bumped QuickCheck version
  bound.\n\n## pandoc 1.11 (2013-03-09)\n\n  * Added `--number-offset` option.  (See
  README for description.)\n\n  * Added `--default-image-extension` option.  (See
  README for description.)\n\n  * `--number-sections` behavior change: headers with
  class `unnumbered`\n    will not be numbered.\n\n  * `--version` now reports the
  default data directory.\n\n  * `Text.Pandoc.Parsing` is no longer exposed. (API
  change.)\n\n  * `Text.Pandoc.Highlighting` is no longer exposed. (API change.)\n\n
  \ * `Text.Pandoc.Shared`:  Changed type of `Element`.  `Sec` now includes\n    a
  field for `Attr` rather than just `String`.  (API change.)\n\n  * Added `markdown_github`
  as input format.  This was an accidental\n    omission in 1.10.\n\n  * Added `readerDefaultImageExtension`
  field to `ReaderOptions`.  (API\n    change.)\n\n  * Added `writerNumberOffset`
  field in `WriterOptions`. (API change.)\n\n  * Beamer template:\n\n    + Fixed captions
  with longtable.  Thanks to Joost Kremers.\n    + Provide `\\Oldincludegraphics`
  as in LaTeX template (Benjamin Bannier).\n\n  * LaTeX template:\n\n    + Load microtype
  after fonts.  Microtype needs to know\n      what fonts are being used.  Thanks
  to dfc for the patch.\n    + Set `secnumdepth` to 5 if `--number-sections` specified.\n
  \     This yields behavior equivalent to the other writers, numbering\n      level
  4 and 5 headers too.  Closes #753.\n\n  * HTML reader:\n\n    + Handle `<colgroup>`
  tag.\n    + Preserve all header attributes.\n\n  * LaTeX reader:\n\n    + Parse
  `\\hrule` as `HorizontalRule`.  Closes #746.\n    + Parse starred variants of `\\section`
  etc. as headers with\n      attribute `unnumbered`.\n    + Read optional attributes
  in `lstlisting` and `Verbatim` environments.\n      We convert these to pandoc standard
  names, e.g. `numberLines`\n      for `numbers=left`, `startFrom=100` from `firstnumber=100`.\n
  \   + Handle language attribute for lstlistings.\n    + Better support for Verbatim
  and minted environments.  Closes #763.\n\n  * Markdown reader:\n\n    + `-` in an
  attribute context = `.unnumbered`.  The point of this\n      is to provide a way
  to specify unnumbered headers in non-English\n      documents.\n    + Fixed bug
  parsing key/value attributes.  Parsing failed if you\n      had an unquoted attribute
  immediately before the final '}'.\n    + Make backslash escape work in attributes.\n
  \   + Fix title block parsing.  Now if `mmd_title_blocks` is specified,\n      pandoc
  will parse a MMD title block if it sees one, even if\n      `pandoc_title_blocks`
  is enabled.\n    + Refactoring: `litChar` now includes entities, so we don't need\n
  \     to use `fromEntities` e.g. on titles.\n    + Allow spaces around borders in
  pipe tables.  Closes #772.\n    + Allow all punctuation in angle-bracket autolinks.
  \ Previously\n      things like `----` were disallowed, because the uri parser\n
  \     treated them as trailing punctuation.  Closes #768.\n    + Make `implicit_header_references`
  work properly when\n      headers are given explicit identifiers.\n    + Check for
  tables before line blocks.  Otherwise some pipe\n      tables get treated as line
  blocks.\n    + Allow `&` in emails (for entities).\n    + Properly handle entities
  in titles and links.  A markdown link\n      `<http://g&ouml;ogle.com>` should be
  a link to `http://g√∂ogle.com`.\n      Closes #723.\n\n  * Textile reader:\n\n    +
  Handle attributes on headers.\n\n  * LaTeX reader:\n\n    + Add `fig:` as title
  for images with captions.\n      This is needed for them to be rendered as figures.
  \ Closes #766.\n    + Never emit an empty paragraph.  See #761.\n    + Handle `\\caption`
  for images in figures.  Closes #766.\n    + Parse `\\section*`, etc. as unnumbered
  sections.\n\n  * HTML writer:\n\n    + Support header attributes.  The attributes
  go on\n      the enclosing `section` or `div` tag if `--section-divs` is specified.\n
  \   + Fixed a regression (only now noticed) in html+lhs output.\n      Previously
  the bird tracks were being omitted.\n\n  * LaTeX writer:\n\n    + Omit lists with
  no items to avoid LaTeX errors.\n    + Support line numbering with `--listings`.\n
  \     If `numberLines` class is present, we add `numbers=left`;\n      if `startFrom`
  is present, we add `firstnumber=`. (#763)\n\n  * ConTeXt writer:\n\n    + Removed
  `\\placecontent`.  This produced a duplicate toc,\n      in conjunction with `\\placelist`.\n
  \   + Use `\\title`, `\\subject` etc. for headers with\n      `unnumbered` class.\n\n
  \ * Textile writer:\n\n    + Support header attributes.\n\n  * Markdown writer:\n\n
  \   + Use grid tables when needed, and if enabled.  Closes #740.\n    + Render citations
  as pandoc-markdown citations.\n      Previously citations were rendered as citeproc-formatted
  citations\n      by default.  Now we render them as pandoc citations, e.g. `[@item1]`,\n
  \     unless the `citations` extension is disabled.\n      If you still want formatted
  citations in your markdown output,\n      use `pandoc -t markdown-citations`.\n\n
  \ * RST writer:\n\n    + Support `:number-lines:` in code blocks.\n\n  * Docx writer:\n\n
  \   + Better treatment of display math.  Display math inside a\n      paragraph
  is now put in a separate paragraph, so it will render\n      properly (centered
  and without extra blank lines around it).\n      Partially addresses #742.\n    +
  Content types and document rels xml files are now created from\n      scratch, rather
  than being taken over from `reference.docx`.\n      This fixes problems that arise
  when you edit the `reference.docx`\n      with Word.\n    + We also now encode mime
  types for each individual image rather\n      than using defaults.  This should
  allow us to handle a wider\n      range of image types (including PDF).   Closes
  #414.\n    + Changed style names in `reference docx`.\n      `FootnoteReference`
  -> `FootnoteRef`, `Hyperlink` -> `Link`.\n      The old names got changed by Word
  when the `reference.docx` was\n      edited.  Closes #414.\n\n  * EPUB writer:\n\n
  \   + Fix section numbering.  Previously the numbering restarted from 1\n      in
  each chapter (with `--number-sections`), though the numbers in\n      the table
  of contents were correct.\n    + Headers with \"unnumbered\" attribute are not numbered.
  \ (Nor do they\n      cause an increment in running numbering.) Section numbers
  now work\n      properly, even when there is material before the first numbered
  section.\n    + Include HTML TOC, even in epub2.  The TOC is included in `<spine>`,\n
  \     but `linear` is set to `no` unless the `--toc` option is specified.\n      Include
  `<guide>` element in OPF.  This should allow the TOC to\n      be usable in Kindles
  when converted with kindlegen. Closes #773.\n\n  * `Text.Pandoc.Parsing`: Optimized
  `oneOfStringsCI`.\n    This dramatically reduces the speed penalty that comes from
  enabling the\n    `autolink_bare_uris` extension.  The penalty is still substantial
  (in one\n    test, from 0.33s to 0.44s), but nowhere near what it used to be.\n
  \   The RST reader is also much faster now, as it autodetects URIs.\n\n  * `Text.Pandoc.Shared`:
  \ `hierarchicalize` will not number section\n    with class \"unnumbered\".  Unnumbered
  sections get `[]` for their\n    section number.\n\n  * `Text.Pandoc.Pretty`:\n\n
  \   + Fixed `chomp` so it works inside `Prefixed` elements.\n    + Changed `Show`
  instance so it is better for debugging.\n\n  * `Text.Pandoc.ImageSize`:  Added `Pdf`
  to `ImageType`.\n\n  * `Text.Pandoc.UTF8`:  Strip off BOM if present.  Closes #743.\n\n
  \ * Windows installer improvements:\n\n    + The installer is now signed with a
  certificate (thanks to\n      Fyodor Sheremetyev).\n    + WiX is used instead of
  InnoSetup.  The installer is now a\n      standard msi file.\n    + The version
  number is now auto-detected, and need not be\n      updated separately.\n\n  * OSX
  installer improvements:\n\n    + The package and pandoc executable are now signed
  with a\n      certificate (thanks to Fyodor Sheremetyev).\n    + RTF version of
  license is used.\n    + Use full path for sysctl in `InstallationCheck` script (jonahbull).\n
  \     Closes #580.\n\n  * Converted COPYING to markdown.\n\n  * pandoc.cabal:  Require
  latest versions of highlighting-kate,\n    texmath, citeproc-hs, zip-archive.\n\n##
  pandoc 1.10.1 (2013-01-23)\n\n  * Markdown reader:  various optimizations, leading
  to a\n    significant performance boost.\n\n  * RST reader:  Allow anonymous form
  of inline links:\n    `` `hello <url>`__ `` Closes #724.\n\n  * Mediawiki reader:
  Don't require newlines after tables.\n    Thanks to jrunningen for the patch. Closes
  #733.\n\n  * Fixed LaTeX macro parsing.  Now LaTeX macro definitions are preserved\n
  \   when output is LaTeX, and applied when it is another format.\n    Partially
  addresses #730.\n\n  * Markdown and RST readers:  Added parser to `block` that skips
  blank\n    lines.  This fixes a subtle regression involving grid tables with\n    empty
  cells.  Also added test for grid table with empty cells.\n    Closes #732.\n\n  *
  RST writer:  Use `.. code:: language` for code blocks with language.\n    Closes
  #721.\n\n  * DocBook writer:  Fixed output for hard line breaks, adding a newline\n
  \   between `<literallayout>` tags.\n\n  * Markdown writer:  Use an autolink when
  link text matches url.\n    Previously we also checked for a null title, but this\n
  \   test fails for links produced by citeproc-hs in bibliographies.\n    So, if
  the link has a title, it will be lost on conversion\n    to an autolink, but that
  seems okay.\n\n  * Markdown writer:  Set title, author, date variables as before.\n
  \   These are no longer used in the default template, since we use\n    titleblock,
  but we set them anyway for those who use custom templates.\n\n  * LaTeX writer:
  \ Avoid extra space at start/end of table cell.\n    Thanks to Nick Bart for the
  suggestion of using @{}.\n\n  * `Text.Pandoc.Parsing`:\n\n    + More efficient version
  of `anyLine`.\n    + Type of `macro` has changed; the parser now returns `Blocks`\n
  \     instead of `Block`.\n\n  * Relaxed old-time version bound, allowing 1.0.*.\n\n
  \ * Removed obsolete `hsmarkdown` script.  Those who need `hsmarkdown`\n    should
  create a symlink as described in the README.\n\n## pandoc 1.10.0.5 (2013-01-23)\n\n
  \ * Markdown reader: Try `lhsCodeBlock` before `rawTeXBlock`.  Otherwise\n    `\\begin{code}...\\end{code}`
  isn't handled properly in markdown+lhs.\n    Thanks to Daniel Miot for noticing
  the bug and suggesting the fix.\n\n  * Markdown reader: Fixed bug with headerless
  grid tables.\n    The 1.10 code assumed that each table header cell contains exactly
  one\n    block. That failed for headerless tables (0) and also for tables with\n
  \   multiple blocks in a header cell.  The code is fixed and tests provided.\n    Thanks
  to Andrew Lee for pointing out the bug.\n\n  * Markdown reader: Fixed regressions
  in fenced code blocks. Closes #722.\n\n    + Tilde code fences can again take a
  bare language string\n      (`~~~ haskell`), not just curly-bracketed attributes\n
  \     (`~~~ {.haskell}`).\n    + Backtick code blocks can take the curly-bracketed
  attributes.\n    + Backtick code blocks don't *require* a language.\n    + Consolidated
  code for the two kinds of fenced code blocks.\n\n  * LaTeX template: Use `\\urlstyle{same}`
  to avoid monospace URLs.\n\n  * Markdown writer: Use proportional font for email
  autolinks with\n    obfuscation.  Closes #714.\n\n  * Corrected name of `blank_before_blockquote`
  in README.  Closes #718.\n\n  * `Text.Pandoc.Shared`: Fixed bug in `uri` parser.\n
  \   The bug prevented an autolink at the end of a string (e.g.\n    at the end of
  a line block line) from counting as a link.  Closes #711.\n\n  * Use the `hsb2hs`
  preprocessor instead of TH for embed_data_files.\n    This should work on Windows,
  unlike the TH solution with\n    file-embed.\n\n  * Eliminated use of TH in test
  suite.\n\n  * Added `Text.Pandoc.Data` (non-exported) to hold the association\n
  \   list of embedded data files, if the `embed_data_files` flag is selected.\n    This
  isolates the code that needs special treatment with file-embed or\n    `hsb2hs`.\n\n
  \ * Changes to `make-windows-installer.bat`.\n\n    + Exit batch file if any of
  the cabal-dev installs fail.\n    + There's no longer any need to reinstall `highlighting-kate`.\n
  \   + Don't start with a `cabal update`; leave that to the user.\n    + Force reinstall
  of pandoc.\n\n  * Fixed EPUB writer so it builds with blaze-html 0.4.x. Thanks to\n
  \   Jens Petersen.\n\n## pandoc 1.10.0.4 (2013-01-20)\n\n  * Fixed bug with escaped
  % in LaTeX reader. Closes #710.\n\n## pandoc 1.10.0.3 (2013-01-20)\n\n  * Added
  further missing fb2 tests to cabal file.\n\n## pandoc 1.10.0.2 (2013-01-20)\n\n
  \ * Added fb2 tests to cabal file's extra-source-files.\n\n## pandoc 1.10.0.1 (2013-01-20)\n\n
  \ * Bump version bounds on test-framework packages.\n\n## pandoc 1.10 (2013-01-19)\n\n###
  New features\n\n  * New input formats:  `mediawiki` (MediaWiki markup).\n\n  * New
  output formats:  `epub3` (EPUB v3 with MathML),\n    `fb2` (FictionBook2 ebooks).\n\n
  \ * New `--toc-depth` option, specifying how many levels of\n    headers to include
  in a table of contents.\n\n  * New `--epub-chapter-level` option, specifying the
  header\n    level at which to divide EPUBs into separate files.\n    Note that this
  normally affects only performance, not the\n    visual presentation of the EPUB
  in a reader.\n\n  * Removed the `--strict` option.  Instead of using `--strict`,\n
  \   one can now use the format name `markdown_strict` for either input\n    or output.
  \ This gives more fine-grained control that `--strict`\n    did, allowing one to
  convert from pandoc's markdown to strict\n    markdown or vice versa.\n\n  * It
  is now possible to enable or disable specific syntax\n    extensions by appending
  them (with `+` or `-`) to the writer\n    or reader name.  For example,\n\n        pandoc
  -f markdown-footnotes+hard_line_breaks\n\n    disables footnotes and enables treating
  newlines as hard\n    line breaks.  The literate Haskell extensions are now implemented\n
  \   this way as well, using either `+lhs` or `+literate_haskell`.\n    For a list
  of extension names, see the README under\n    \"Pandoc's Markdown.\"\n\n  * The
  following aliases have been introduced for specific\n    combinations of markdown
  extensions:  `markdown_phpextra`,\n    `markdown_github`, `markdown_mmd`, `markdown_strict`.
  \ These aliases\n    work just like regular reader and writer names, and can be
  modified\n    with extension modifiers as described above. (Note that conversion\n
  \   from one markdown dialect to another does not work perfectly,\n    because there
  are differences in markdown parsers besides\n    just the extensions, and because
  pandoc's internal document model is\n    not rich enough to capture all of the extensions.)\n\n
  \ * New `--html-q-tags` option.  The previous default was to use `<q>`\n    tags
  for smart quotes in HTML5.  But `<q>` tags are also valid HTML4.\n    Moreover,
  they are not a robust way of typesetting quotes, since\n    some user agents don't
  support them, and some CSS resets (e.g.\n    bootstrap) prevent pandoc's quotes
  CSS from working properly.\n    We now just insert literal quote characters by default
  in both\n    `html` and `html5` output, but this option is provided for\n    those
  who still want `<q>` tags.\n\n  * The markdown reader now prints warnings (to stderr)
  about\n    duplicate link and note references.  Closes #375.\n\n  * Markdown syntax
  extensions:\n\n    + Added pipe tables.  Thanks to Fran√ßois Gannaz for the initial
  patch.\n      These conform to PHP Markdown Extra's pipe table syntax. A subset\n
  \     of org-mode table syntax is also supported, which means that you can\n      use
  org-mode's nice table editor to create tables.\n\n    + Added support for RST-style
  line blocks. These are\n      useful for verse and addresses.\n\n    + Attributes
  can now be specified for headers, using the same\n      syntax as in code blocks.
  \ (However, currently only the\n      identifier has any effect in most writers.)
  \ For example,\n\n            # My header {#foo}\n\n            See [the header
  above](#foo).\n\n    + Pandoc will now act as if link references have been defined\n
  \     for all headers without explicit identifiers.\n      So, you can do this:\n\n
  \           # My header\n\n            Link to [My header].\n            Another
  link to [it][My header].\n\n      Closes #691.\n\n  * LaTeX reader:\n\n    + Command
  macros now work everywhere, including non-math.\n      Environment macros still
  not supported.\n    + `\\input` now works, as well as `\\include`.  TEXINPUTS is
  used.\n      Pandoc looks recursively into included files for more included files.\n\n###
  Behavior changes\n\n  * The Markdown reader no longer puts the text of autolinks
  in a\n    `Code` inline.  This means that autolinks will no longer appear\n    in
  a monospace font.\n\n  * The character `/` can now appear in markdown citation keys.\n\n
  \ * HTML blocks in strict_markdown are no longer required to begin\n    at the left
  margin.  Technically this is required, according to\n    the markdown syntax document,
  but `Markdown.pl` and other markdown\n    processors are more liberal.\n\n  * The
  `-V` option has been changed so that if there are duplicate\n    variables, those
  specified later on the command line take precedence.\n\n  * Tight lists now work
  in LaTeX and ConTeXt output.\n\n  * The LaTeX writer no longer relien on the `enumerate`
  package.\n    Instead, it uses standard LaTeX commands to change the list numbering\n
  \   style.\n\n  * The LaTeX writer now uses `longtable` instead of `ctable`. This
  allows\n    tables to be split over page boundaries.\n\n  * The RST writer now uses
  a line block to render paragraphs containing\n    linebreaks (which previously weren't
  supported at all).\n\n  * The markdown writer now applies the `--id-prefix` to footnote
  IDs.\n    Closes #614.\n\n  * The plain writer no longer uses backslash-escaped
  line breaks\n    (which are not very \"plain\").\n\n  * `Text.Pandoc.UTF8`: Better
  error message for invalid UTF8.\n    Read bytestring and use `Text`'s decodeUtf8
  instead of using\n    `System.IO.hGetContents`.  This way you get a message saying\n
  \   \"invalid UTF-8 stream\" instead of \"invalid byte sequence.\"\n    You are
  also told which byte caused the problem.\n\n  * Docx, ODT, and EPUB writers now
  download images specified by a URL\n    instead of skipping them or raising an error.\n\n
  \ * EPUB writer:\n\n    + The default CSS now left-aligns headers by default, instead
  of\n      centering.  This is more consistent with the rest of the writers.\n    +
  A proper multi-level table of contents is now used in `toc.ncx`.\n      There is
  no longer a subsidiary table of contents at the beginning\n      of each chapter.\n
  \   + Code highlighting now works by default.\n    + Section divs are used by default
  for better semantic markup.\n    + The title is used instead of \"Title Page\" in
  the table of contents.\n      Otherwise we have a hard-coded English string, which
  looks\n      strange in ebooks written in other languages.  Closes #572.\n\n  *
  HTML writer:\n\n    + Put mathjax in span with class \"math\".  Closes #562.\n    +
  Put citations in a span with class \"citation.\" In HTML5, also include\n      a
  `data-cite` attribute with a space-separated list of citation\n      keys.\n\n  *
  `Text.Pandoc.UTF8`:  use universalNewlineMode in reading.\n    This treats both
  `\\r\\n` and `\\n` as `\\n` on input, no matter\n    what platform we're running
  on.\n\n  * Citation processing is now done in the Markdown and LaTeX\n    readers,
  not in `pandoc.hs`.  This makes it easier for library users\n    to use citations.\n\n###
  Template changes\n\n  * HTML: Added css to template to preserve spaces in `<code>`
  tags.\n    Thanks to Dirk Laurie.\n\n  * Beamer:  Remove English-centric strings
  in section pages.\n    Section pages used to have \"Section\" and a number as well
  as the\n    section title. Now they just have the title.  Similarly for part\n    and
  subsection.  Closes #566.\n\n  * LaTeX, ConTeXt: Added papersize variable.\n\n  *
  LaTeX, Beamer templates: Use longtable instead of ctable.\n\n  * LaTeX, Beamer templates:
  Don't require 'float' package for tables.\n    We don't actually seem to use the
  '[H]' option.\n\n  * Markdown, plain: Fixed titleblock so it is just a single string.\n
  \   Previously separate title, author, and date variables were used,\n    but this
  didn't allow different kinds of title blocks.\n\n  * EPUB:\n\n    + Rationalized
  templates.  Previously there were three different\n      templates involved in epub
  production. There is now just one\n      template, `default.epub` or `default.epub3`.
  It can now be\n      overridden using `--template`, just like other templates.\n
  \     The titlepage is now folded into the default template.\n      A `titlepage`
  variable selects it.\n    + UTF-8, lang tag, meta tags, title element.\n\n  * Added
  scale-to-width feature to beamer template\n\n### API changes\n\n  * `Text.Pandoc.Definition`:
  Added `Attr` field to `Header`.\n    Previously header identifiers were autogenerated
  by the writers.\n    Now they are added in the readers (either automatically or
  explicitly).\n\n  * `Text.Pandoc.Builder`:\n\n    + `Inlines` and `Blocks` are now
  synonyms for `Many Inline` and\n      `Many Block`.  `Many` is a newtype wrapper
  around `Seq`, with\n      custom Monoid instances for `Many Inline` and `Many Block.
  \ This\n      allows `Many` to be made an instance of `Foldable` and `Traversable`.\n
  \   + The old `Listable` class has been removed.\n    + The module now exports `isNull`,
  `toList`, `fromList`.\n    + The old `Read` and `Show` instances have been removed;
  derived\n      instances are now used.\n    + Added `headerWith`.\n\n  * The readers
  now take a `ReaderOptions` rather than a `ParserState`\n    as a parameter.  Indeed,
  not all parsers use the `ParserState` type;\n    some have a custom state.  The
  motivation for this change was to separate\n    user-specifiable options from the
  accounting functions of parser state.\n\n  * New module `Text.Pandoc.Options`.  This
  includes the `WriterOptions`\n    formerly in `Text.Pandoc.Shared`, and its associated\n
  \   data types.  It also includes a new type `ReaderOptions`, which\n    contains
  many options formerly in `ParserState`, and its associated\n    data types:\n\n
  \   + `ParserState.stateParseRaw` -> `ReaderOptions.readerParseRaw`.\n    + `ParserState.stateColumns`
  -> `ReaderOptions.readerColumns`.\n    + `ParserState.stateTabStop` -> `ReaderOptions.readerTabStop`.\n
  \   + `ParserState.stateOldDashes` -> `ReaderOptions.readerOldDashes`.\n    + `ParserState.stateLiterateHaskell`
  -> `ReaderOptions.readerLiterateHaskell`.\n    + `ParserState.stateCitations` ->
  `ReaderOptions.readerReferences`.\n    + `ParserState.stateApplyMacros` -> `ReaderOptions.readerApplyMacros`.\n
  \   + `ParserState.stateIndentedCodeClasses` ->\n      `ReaderOptions.readerIndentedCodeClasses`.\n
  \   + Added `ReaderOptions.readerCitationStyle`.\n\n  * `WriterOptions` now includes
  `writerEpubVersion`, `writerEpubChapterLevel`,\n    `writerEpubStylesheet`, `writerEpubFonts`,
  `writerReferenceODT`,\n    `writerReferenceDocx`, and `writerTOCDepth`.  `writerEPUBMetadata`
  has\n    been renamed `writerEpubMetadata` for consistency.\n\n  * Changed signatures
  of `writeODT`, `writeDocx`, `writeEPUB`, since they no\n    longer stylesheet, fonts,
  reference files as separate parameters.\n\n  * Removed `writerLiterateHaskell` from
  `WriterOptions`, and\n    `readerLiterateHaskell` from `ReaderOptions`.  LHS is
  now handled\n    by an extension (`Ext_literate_haskell`).\n\n  * Removed deprecated
  `writerXeTeX`.\n\n  * Removed `writerStrict` from `WriterOptions`.  Added `writerExtensions`.\n
  \   Strict is now handled through extensions.\n\n  * `Text.Pandoc.Options` exports
  `pandocExtensions`, `strictExtensions`,\n    `phpMarkdownExtraExtensions`, `githubMarkdownExtensions`,\n
  \   and `multimarkdownExtensions`, as well as the `Extensions` type.\n\n  * New
  `Text.Pandoc.Readers.MediaWiki` module, exporting\n    `readMediaWiki`.\n\n  * New
  `Text.Pandoc.Writers.FB2` module, exporting `writeFB2`\n    (thanks to Sergey Astanin).\n\n
  \ * `Text.Pandoc`:\n\n    + Added `getReader`, `getWriter` to `Text.Pandoc`.\n    +
  `writers` is now an association list `(String, Writer)`.\n      A `Writer` can be
  a `PureStringWriter`, an `IOStringWriter`, or\n      an `IOByteStringWriter`.  ALL
  writers are now in the 'writers'\n      list, including the binary writers and FB2
  writer.  This allows\n      code in `pandoc.hs` to be simplified.\n    + Changed
  type of `readers`, so all readers are in IO.\n      Users who want pure readers
  can still get them form the reader\n      modules; this just affects the function
  `getReader` that looks up\n      a reader based on the format name.  The point of
  this change is to\n      make it possible to print warnings from the parser.\n\n
  \ * `Text.Pandoc.Parsing`:\n\n    + `Text.Parsec` now exports all Parsec functions
  used in pandoc code.\n      No other module directly imports Parsec.  This will
  make it easier\n      to change the parsing backend in the future, if we want to.\n
  \   + `Text.Parsec` is used instead of `Text.ParserCombinators.Parsec`.\n    + Export
  the type synonym `Parser`.\n    + Export `widthsFromIndices`, `NoteTable'`, `KeyTable'`,
  `Key'`, `toKey'`,\n     `withQuoteContext`, `singleQuoteStart`, `singleQuoteEnd`,\n
  \    `doubleQuoteStart`, `doubleQuoteEnd`, `ellipses`, `apostrophe`,\n     `dash`,
  `nested`, `F(..)`, `askF`, `asksF`, `runF`, `lineBlockLines`.\n    + `ParserState`
  is no longer an instance of `Show`.\n    + Added `stateSubstitutions` and `stateWarnings`
  to `ParserState`.\n    + Generalized type of `withQuoteContext`.\n    + Added `guardEnabled`,
  `guardDisabled`, `getOption`.\n    + Removed `failIfStrict`.\n    + `lookupKeySrc`
  and `fromKey` are no longer exported.\n\n  * `Data.Default` instances are now provided
  for `ReaderOptions`,\n    `WriterOptions`, and `ParserState`.  `Text.Pandoc` re-exports
  `def`.\n    Now you can use `def` (which is re-exported by `Text.Pandoc`) instead\n
  \   of `defaultWriterOptions` (which is still defined).  Closes #546.\n\n  * `Text.Pandoc.Shared`:\n\n
  \   + Added `safeRead`.\n    + Renamed `removedLeadingTrailingSpace` to `trim`,\n
  \     `removeLeadingSpace` to `triml`, and `removeTrailingSpace` to `trimr`.\n    +
  Count `\\r` as space in `trim` functions.\n    + Moved `renderTags'` from HTML reader
  and `Text.Pandoc.SelfContained`\n      to `Shared`.\n    + Removed `failUnlessLHS`.\n
  \   + Export `compactify'`, formerly in Markdown reader.\n    + Export `isTightList`.\n
  \   + Do not export `findDataFile`.\n    + `readDataFile` now returns a strict ByteString.\n
  \   + Export `readDataFileUTF8` which returns a String, like the\n      old `readDataFile`.\n
  \   + Export `fetchItem` and `openURL`.\n\n  * `Text.Pandoc.ImageSize`: Use strict,
  not lazy bytestrings.\n    Removed `readImageSize`.\n\n  * `Text.Pandoc.UTF8`: Export
  `encodePath`, `decodePath`,\n     `decodeArg`, `toString`, `fromString`, `toStringLazy`,\n
  \    `fromStringLazy`.\n\n  * `Text.Pandoc.UTF8` is now an exposed module.\n\n  *
  `Text.Pandoc.Biblio`:\n\n    + csl parameter now a `String` rather than a `FilePath`.\n
  \   + Changed type of `processBiblio`.  It is no longer in the IO monad.\n      It
  now takes a `Maybe Style` argument rather than parameters for CSL\n      and abbrev
  filenames.  (`pandoc.hs` now calls the functions to parse\n      the style file
  and add abbreviations.)\n\n  * Markdown reader now exports `readMarkdownWithWarnings`.\n\n
  \ * `Text.Pandoc.RTF` now exports `writeRTFWithEmbeddedImages` instead of\n    `rtfEmbedImage`.\n\n###
  Bug fixes\n\n  * Make `--ascii` work properly with `--self-contained`.  Closes #568.\n\n
  \ * Markdown reader:\n\n    + Fixed link parser to avoid exponential slowdowns.
  \ Closes #620.\n      Previously the parser would hang on input like this:\n\n            [[[[[[[[[[[[[[[[[[hi\n\n
  \     We fixed this by making the link parser parser characters\n      between balanced
  brackets (skipping brackets in inline code spans),\n      then parsing the result
  as an inline list.  One change is that\n\n            [hi *there]* bud](/url)\n\n
  \     is now no longer parsed as a link.  But in this respect pandoc behaved\n      differently
  from most other implementations anyway, so that seems okay.\n\n    + Look for raw
  html/latex blocks before tables.\n      Otherwise the following gets parsed as a
  table:\n\n            \\begin{code}\n            --------------\n            --
  My comment.\n            \\end{code}\n\n      Closes #578.\n\n  * RST reader:\n\n
  \   + Added support for `:target:` on `.. image::` blocks\n      and substitutions.\n
  \   + Field list fixes:\n\n        - Fixed field lists items with body beginning
  after a new line\n          (Denis Laxalde).\n        - Allow any char but ':' in
  names of field lists in RST reader\n          (Denis Laxalde).\n        - Don't
  allow line breaks in field names.\n        - Require whitespace after field list
  field names.\n        - Don't create empty definition list for metadata field lists.\n
  \         Previously a field list consisting only of metadata fields (author,\n
  \         title, date) would be parsed as an empty DefinitionList, which is\n          not
  legal in LaTeX and not needed in any format.\n\n    + Don't recognize inline-markup
  starts inside words.\n      For example, `2*2 = 4*1` should not contain an emphasized\n
  \     section.  Added test case for \"Literal symbols\".  Closes #569.\n    + Allow
  dashes as separator in simple tables.  Closes #555.\n    + Added support for `container`,
  `compound`, `epigraph`,\n      `rubric`, `highlights`, `pull-quote`.\n    + Added
  support for `.. code::`.\n    + Made directive labels case-insensitive.\n    + Removed
  requirement that directives begin at left margin.\n      This was (correctly) not
  in earlier releases; docutils doesn't\n      make the requirement.\n    + Added
  support for `replace::` and `unicode::` substitutions.\n    + Ignore unknown interpreted
  roles.\n    + Renamed image parser to `subst`, since it now handles all\n      substitution
  references.\n\n  * Textile reader:\n\n    + Allow newlines before pipes in table.
  \ Closes #654.\n    + Fixed bug with list items containing line breaks.\n      Now
  pandoc correctly handles hard line breaks inside list items.\n      Previously they
  broke list parsing.\n    + Implemented comment blocks.\n    + Fixed bug affected
  words ending in hyphen.\n    + Properly handle links with surrounding brackets.\n
  \     Square brackets need to be used when the link isn't surrounded by\n      spaces
  or punctuation, or when the URL ending may be ambiguous.\n      Closes #564.\n    +
  Removed nullBlock.  Better to know about parsing problems than\n      to skip stuff
  when we get stuck.\n    + Allow ID attributes on headers.\n    + Textile reader:
  \ Avoid parsing dashes as strikeout.\n      Previously the input\n\n            text--\n
  \           text--\n            text--\n            text--\n\n      would be parsed
  with strikeouts rather than dashes. This fixes\n      the problem by requiring that
  a strikeout delimiting - not be\n      followed by a -.  Closes #631.\n    + Expanded
  list of `stringBreakers`.\n      This fixes a bug on input like \"(_hello_)\" which
  should\n      be a parenthesized emphasized \"hello\".\n      The new list is taken
  from the PHP source of textile 2.4.\n    + Fixed autolinks.  Previously the textile
  reader and writer\n      incorrectly implemented RST-style autolinks for URLs and
  email\n      addresses.  This has been fixed.  Now an autolink is done this way:\n
  \     `\"$\":http://myurl.com`.\n    + Fixed footnotes bug in textile.  This affected
  notes occurring\n      before punctuation, e.g. `foo[1].`.  Closes #518.\n\n  *
  LaTeX reader:\n\n    + Better handling of citation commands.\n    + Better handling
  of `\\noindent`.\n    + Added a 'try' in rawLaTeXBlock, so we can handle `\\begin`
  without `{`.\n      Closes #622.\n    + Made `rawLaTeXInline` try to parse block
  commands as well.  This\n      is usually what we want, given how `rawLaTeXInline`
  is used in\n      the markdown and textile readers.  If a block-level LaTeX command\n
  \     is used in the middle of a paragraph (e.g. `\\subtitle` inside a title),\n
  \     we can treat it as raw inline LaTeX.\n    + Handle `\\slash` command.  Closes
  #605.\n    + Basic `\\enquote` support.\n    + Fixed parsing of paragraphs beginning
  with a group.  Closes #606.\n    + Use curly quotes for bare straight quotes.\n
  \   + Support obeylines environment.  Closes #604.\n    + Guard against \"begin\",
  \"end\" in inlineCommand and\n      blockCommand.\n    + Better error messages for
  environments.  Now it should tell you that\n      it was looking for \\end{env},
  instead of giving \"unknown parse error.\"\n\n  * HTML reader:\n\n    + Added HTML
  5 tags to list of block-level tags.\n    + HTML reader: Fixed bug in `htmlBalanced`,
  which\n      caused hangs in parsing certain markdown input using\n      strict
  mode.\n    + Parse `<q>` as `Quoted DoubleQuote`.\n    + Handle nested `<q>` tags
  properly.\n    + Modified `htmlTag` for fewer false positives.\n      A tag must
  start with `<` followed by `!`,`?`, `/`, or a letter.\n      This makes it more
  useful in the wikimedia and markdown parsers.\n\n  * DocBook reader: Support title
  in \"figure\" element.  Closes #650.\n\n  * MediaWiki writer:\n\n    + Remove newline
  after `<br/>` in translation of `LineBreak`\n      There's no particular need for
  a newline (other than making the\n      generated MediaWiki source look nice to
  a human), and in fact\n      sometimes it is incorrect: in particular, inside an
  enumeration, list\n      items cannot have embedded newline characters. (Brent Yorgey)\n
  \   + Use `<code>` not `<tt>` for Code.\n\n  * Man writer: Escape `-` as `\\-`.\n
  \   Unescaped `-`'s become hyphens, while `\\-`'s are left as ascii minus\n    signs.
  \ That is preferable for use with command-line options.  See\n    <http://lintian.debian.org/tags/hyphen-used-as-minus-sign.html>.
  \ Thanks\n    to Andrea Bolognani for bringing the issue to our attention.\n\n  *
  RST writer:\n\n    + Improved line block output. Use nonbreaking spaces for\n      initial
  indent (otherwise lost in HTML and LaTeX).\n      Allow multiple paragraphs in a
  single line block.\n      Allow soft breaks w continuations in line blocks.\n    +
  Properly handle images with no alt text.  Closes #678.\n    + Fixed bug with links
  with duplicate text.  We now (a) use anonymous\n      links for links with inline
  URLs, and (b) use an inline link instead\n      of a reference link if the reference
  link would require a label that\n      has already been used for a different link.
  \ Closes #511.\n    + Fixed hyperlinked images. Closes #611. Use `:target:`\n      field
  when you have a simple linked image.\n    + Don't add `:align: center` to figures.\n\n
  \ * Texinfo writer:  Fixed internal cross-references.\n    Now we insert anchors
  after each header, and use `@ref` instead of `@uref`\n    for links.  Commas are
  now escaped as `@comma{}` only when needed;\n    previously all commas were escaped.
  \ (This change is needed, in part,\n    because `@ref` commands must be followed
  by a real comma or period.) Also\n    insert a blank line in from of `@verbatim`
  environments.\n\n  * DocBook writer:\n\n    + Made --id-prefix work in DocBook as
  well as HTML.\n      Closes #607.\n    + Don't include empty captions in figures.
  \ Closes #581.\n\n  * LaTeX writer:\n\n    + Use `\\hspace*` for nonbreaking space
  after line break,\n      since `~` spaces after a line break are just ignored.\n
  \     Closes #687.\n    + Don't escape `_` in URLs or hyperref identifiers.\n    +
  Properly escape strings inside `\\url{}`.  Closes #576.\n    + Use `[fragile]` only
  for slides containing code rendered\n      using listings. Closes #649.\n    + Escape
  `|` as `\\vert` in LaTeX math.  This avoids a clash with\n      highlighting-kate's
  macros, which redefine `|` as a short verbatim\n      delimiter.  Thanks to Bj√∂rn
  Peem√∂ller for raising this issue.\n    + Use minipage rather than parbox for block
  containers in tables.\n      This allows verbatim code to be included in grid tables.\n
  \     Closes #663.\n    + Prevent paragraphs containing only linebreaks or spaces.\n\n
  \ * HTML writer:\n\n    + Included `highlighting-css` for code spans, too.\n      Previously
  it was only included if used in a code block.  Closes #653.\n    + Improved line
  breaks with `<dd>` tags.  We now put a newline between\n      `</dd>` and `<dd>`
  when there are multiple definitions.\n    + Changed mathjax cdn url so it doesn't
  use https.  (This caused\n      problems when used with `--self-contained`.) See
  #609.\n\n  * EPUB writer:\n\n    + `--number-sections` now works properly.\n    +
  Don't strip meta and link elements in epub metadata.\n      Patch from aberrancy.
  Closes #589.\n    + Fixed a couple validation bugs.\n    + Use ch001, ch002, etc.
  for chapter filenames.  This improves sorting\n      of chapters in some readers,
  which apparently sort ch2 after ch10.\n      Closes #610.\n\n  * ODT writer: properly
  set title property (Arlo O'Keeffe).\n\n  * Docx writer:\n\n    + Fixed bug with
  nested lists.  Previously a list like\n\n            1. one\n                - a\n
  \               - b\n            2. two\n\n      would come out with a bullet instead
  of \"2.\"\n      Thanks to Russell Allen for reporting the bug.\n    + Use `w:cr`
  in `w:r` instead of `w:br` for linebreaks.\n      This seems to fix a problem viewing
  pandoc-generated\n      docx files in LibreOffice.\n    + Use integer ids for bookmarks.
  \ Closes #626.\n    + Added nsid to abstractNum elements.  This helps when merging\n
  \     word documents with numbered or bulleted lists.  Closes #627.\n    + Use separate
  footnotes.xml for notes.\n      This seems to help LibreOffice convert the file,
  even though\n      it was valid docx before.  Closes #637.\n    + Use rIdNN identifiers
  for r:embed in images.\n    + Avoid reading image files again when we've already
  processed them.\n    + Fixed typo in `referenc.docx` that prevented image captions
  from\n      working. Thanks to Huashan Chen.\n\n  * `Text.Pandoc.Parsing`:\n\n    +
  Fixed bug in `withRaw`, which didn't correctly handle the case\n      where nothing
  is parsed.\n    + Made `emailAddress` parser more correct.  Now it is based on RFC
  822,\n      though it still doesn't implement quoted strings in email addresses.\n
  \   + Revised URI parser.  It now allows many more schemes, allows\n      uppercase
  URIs, and better handles trailing punctuation and\n      trailing slashes in bare
  URIs.  Added many tests.\n    + Simplified and improved singleQuoteStart.  This
  makes `'s'`, `'l'`,\n      etc. parse properly.  Formerly we had some English-centric
  heuristics,\n      but they are no longer needed. Closes #698.\n\n  * `Text.Pandoc.Pretty`:
  \ Added wide punctuation range to `charWidth`.\n    This fixes bug with Chinese
  commas in markdown and reST tables, and\n    a bug that caused combining characters
  to be dropped.\n\n  * `Text.Pandoc.MIME`: Added MIME types for .wof and .eot.  Closes
  #640.\n\n  * `Text.Pandoc.Biblio`:\n\n    + Run `mvPunc` and `deNote` on metadata
  too.\n      This fixed a bug with notes on titles using footnote styles.\n    +
  Fixed bug in fetching CSL files from CSL data directory.\n\n  * `pandoc.hs`:  Give
  correct value to `writerSourceDirectory` when a URL\n    is provided.  It should
  be the URL up to the path.\n\n  * Fixed/simplified diff output for tests.\n    Biblio:
  Make sure mvPunc and deNote run on metadata too.\n    This fixed a bug with notes
  on titles using footnote styles.\n\n### Under the hood improvements\n\n  * We no
  longer depend on `utf8-string`.  Instead we use functions\n    defined in `Text.Pandoc.UTF8`
  that use `Data.Text`'s conversions.\n\n  * Use `safeRead` instead of using `reads`
  directly (various modules).\n\n  * \"Implicit figures\" (images alone in a paragraph)
  are now handled\n    differently.  The markdown reader gives their titles the prefix
  `fig:`; the\n    writers look for this before treating the image as a figure.  Though
  this\n    is a bit of a hack, it has two advantages: (i) implicit figures can be\n
  \   limited to the markdown reader, and (ii) they can be deactivated by turning\n
  \   off the `implicit_figures` extension.\n\n  * `catch` from `Control.Exception`
  is now used instead of the\n    old Preface `catch`.\n\n  * `Text.Pandoc.Shared`:
  \ Improved algorithm for `normalizeSpaces`\n    and `oneOfStrings` (which is now
  non-backtracking).\n\n  * `Text.Pandoc.Biblio`: Remove workaround for `toCapital`.\n
  \   Now citeproc-hs is fixed upstream, so this is no longer needed.\n    Closes
  #531.\n\n  * Textile reader: Improved speed of `hyphenedWords`.\n    This speeds
  up the textile  reader by about a factor of 4.\n\n  * Use `Text.Pandoc.Builder`
  in RST reader, for more flexibility,\n    better performance, and automatic normalization.\n\n
  \ * Major rewrite of markdown reader:\n\n    + Use `Text.Pandoc.Builder` instead
  of lists.  This also\n      means that everything is normalized automatically.\n
  \   + Move to a one-pass parsing strategy, returning values in the reader\n      monad,
  which are then run (at the end of parsing) against the final\n      parser state.\n\n
  \ * In HTML writer, we now use `toHtml` instead of pre-escaping.\n    We work around
  the problem that blaze-html unnecessarily escapes `'`\n    by pre-escaping just
  the `'` characters, instead of the whole string.\n    If blaze-html later stops
  escaping `'` characters, we can simplify\n    `strToHtml` to `toHtml`.  Closes #629.\n\n
  \ * Moved code for embedding images in RTFs from `pandoc.hs` to the\n    RTF writer
  (which now exports `writeRTFWithEmbeddedImages`).\n\n  * Moved citation processing
  from `pandoc.hs` into the readers.\n    This makes things more convenient for library
  users.\n\n  * The man pages are now built by an executable `make-pandoc-man-pages`,\n
  \   which has its own stanza in the cabal file so that dependencies can be\n    handled
  by Cabal. Special treatment in `Setup.hs` ensures that this\n    executable never
  gets installed; it is only used to create the man pages.\n\n  * The cabal file has
  been modified so that the pandoc library is used\n    in building the pandoc executable.
  \ (This required moving `pandoc.hs`\n    from `src` to `.`.)  This cuts compile
  time in half.\n\n  * The `executable` and `library` flags have been removed.\n\n
  \ * `-threaded` has been removed from ghc-options.\n\n  * Version bounds of dependencies
  have been raised, and the\n    `blaze_html_0_5` flag now defaults to True.  Pandoc
  now compiles on\n    GHC 7.6.\n\n  * We now require base >= 4.2.\n\n  * Integrated
  the benchmark program into cabal.  One can now do:\n\n        cabal configure --enable-benchmarks
  && cabal build\n        cabal bench --benchmark-option='markdown' --benchmark-option='-s
  20'\n\n    The benchmark now uses README + testsuite, so benchmark results\n    from
  older versions aren't comparable.\n\n  * Integrated test suite with cabal.\n    To
  run tests, configure with `--enable-tests`, then `cabal test`.\n    You can specify
  particular tests using `--test-options='-t markdown'`.\n    No output is shown unless
  tests fail.  The Haskell test modules\n    have been moved from `src/` to `tests/`.\n\n
  \ * Moved all data files and templates to the `data/` subdirectory.\n\n  * Added
  an `embed_data_files` cabal flag.  This causes all\n    data files to be embedded
  in the binary, so that the binary\n    is self-sufficient and can be relocated anywhere,
  copied on\n    a USB key, etc.  The Windows installer now uses this.\n    (Since
  we no longer have the option to build the executable\n    without the library, this
  is the only way to get a relocatable\n    binary on Windows.)\n\n  * Removed pcre3.dll
  from windows package.\n    It isn't needed unless highlighting-kate is compiled
  with the\n    `pcre-light` flag. By default, regex-prce-builtin is used.\n\n\n##
  pandoc 1.9.4.5 (2012-10-21)\n\n  * Raised version bounds on network, base64-bytestring,
  json,\n    and template-haskell.\n\n## pandoc 1.9.4.4 (2012-10-20)\n\n  * Removed
  `tests` flag and made test suite into a proper cabal\n    test suite, which can
  now be enabled using `--enable-tests`\n    and run with `cabal test`.\n\n  * Moved
  man page creation out of `Setup.hs` and into an\n    executable built by Cabal,
  but never installed.  This\n    allows dependencies to be specified, and solves
  a problem\n    with 1.9.4.3, which could only be installed if `data-default`\n    had
  already been installed.\n\n  * Updated `lhs-latex.tex` test for latest highlighting-kate\n
  \   representation of backticks.\n\n## pandoc 1.9.4.3 (2012-10-20)\n\n  * Removed
  `-threaded` from default compile flags.\n\n  * Modified modules to compile with
  GHC 7.6 and latest version of time\n    package.\n\n## pandoc 1.9.4.2 (2012-06-29)\n\n
  \ * Don't encode/decode file paths if base >= 4.4.\n    Prior to base 4.4, filepaths
  and command line arguments were treated\n    as unencoded lists of bytes, not unicode
  strings, so we had to work\n    around that by encoding and decoding them. This
  commit adds CPP\n    checks for the base version that intelligibly enable encoding/decoding\n
  \   when needed. Fixes a bug with multilingual filenames when pandoc was\n    compiled
  with ghc 7.4 (#540).\n\n  * Don't generate an empty H1 after hrule slide breaks.\n
  \   We now use a slide-level header with contents `[Str \"\\0\"]` to mark\n    an
  hrule break.  This avoids creation of an empty H1 in these\n    contexts.  Closes
  #484.\n\n  * Docbook reader: Added support for \"bold\" emphasis.  Thanks to mb21.\n\n
  \ * In make_osx_package.sh, ensure citeproc-hs is built with the\n    embed_data_files
  flag.\n\n  * MediaWiki writer: Avoid extra blank lines after sublists (Gavin Beatty).\n\n
  \ * ConTeXt writer: Don't escape `&`, `^`, `<`, `>`, `_`,\n    simplified escapes
  for `}` and `{` to `\\{` and `\\}` (Aditya Mahajan).\n\n  * Fixed handling of absolute
  URLs in CSS imports with `--self-contained`.\n    Closes #535.\n\n  * Added webm
  to mime types. Closes #543.\n\n  * Added some missing exports and tests to the cabal
  file\n    (Alexander V Vershilov).\n\n  * Compile with `-rtsopts` and `-threaded`
  by default.\n\n## pandoc 1.9.4.1 (2012-06-08)\n\n  * Markdown reader: Added `cf.`
  and `cp.` to list of likely abbreviations.\n\n  * LaTeX template: Added `linkcolor`,
  `urlcolor` and `links-as-notes`\n    variables.  Make TOC links black.\n\n  * LaTeX
  template improvements.\n\n    + Don't print date unless one is given explicitly
  in the document.\n    + Simplified templates.\n    + Use fontenc [T1] by default,
  and lmodern.\n    + Use microtype if available.\n\n  * Biblio:\n\n    + Add comma
  to beginning of bare suffix, e.g. `@item1 [50]`.\n      Motivation: `@item1 [50]`
  should be as close as possible to\n      `[@item1, 50]`.\n    + Added workaround
  for a bug in citeproc-hs 0.3.4 that causes footnotes\n      beginning with a citation
  to be empty.  Closes #531.\n\n  * Fixed documentation on mixed lists.  Closes #533.\n\n##
  pandoc 1.9.4 (2012-06-03)\n\n  * Simplified `Text.Pandoc.Biblio` and fixed bugs
  with citations inside\n    footnotes and captions.  We now handle note citations
  by inserting\n    footnotes during initial citation processing, and doing a separate\n
  \   pass later to remove notes inside notes.\n\n  * Added 'zenburn' highlight style
  from highlighting-kate.\n\n  * Added Slideous writer. Slideous is an HTML + javascript
  slide show\n    format, similar to Slidy, but works with IE 7. (Jonas Smedegaard)\n\n
  \ * LaTeX writer:\n\n    + Ensure we don't have extra blank lines at ends of cells.\n
  \     This can cause LaTeX errors, as they are interpreted as new paragraphs.\n
  \   + More consistent interblock spacing.\n    + Require highlighting-kate >= 0.5.1,
  for proper highlighted inline\n      code in LaTeX.  Closes #527.\n    + Ensure
  that a Verbatim at the end of a footnote is followed by\n      a newline. (Fixes
  a regression in the previous version.)\n    + In default template, use black for
  internal links and TOC.\n      Added commented-out code to use footnotes for links,
  as would\n      be suitable in print output.\n\n  * Beamer writer:  When `--incremental`
  is used, lists inside\n    a block quote should appear all at once.  (This makes
  Beamer\n    output consistent with the HTML slide show formats.)\n\n  * ConTeXt
  writer:\n\n    + Escape `%` as `\\letterpercent{}` not `\\letterpercent `,\n      to
  avoid gobbling spaces after the `%` sign.\n    + Ensure space after `\\stopformula`.\n\n
  \ * Markdown writer:\n\n    + Use `:` form instead of `~` in definition lists, for
  better\n      compatibility with other markdown implementations.\n    + Don't wrap
  the term, because it breaks definition lists.\n    + Use a nonzero space to prevent
  false recognition\n      of list marker in ordered lists.  Closes #516.\n\n  * Org
  writer: Add space before language name.  Closes #523.\n\n  * Docx writer: Simplified
  bullet characters so they work properly\n    with Word 2007. Closes #520.\n\n  *
  LaTeX reader: Support `\\centerline`.\n\n  * RST reader:  handle figures.  Closes
  #522.\n\n  * Textile reader: fix for `<notextile>` and `==`.  Closes #517.\n    (Paul
  Rivier)\n\n## pandoc 1.9.3 (2012-05-12)\n\n  * Added docbook reader (with contributions
  from Mauro Bieg).\n\n  * Fixed bug in `fromEntities`.  The previous version would
  turn\n    `hi & low you know;` into `hi &`.\n\n  * HTML reader:\n\n    + Don't skip
  nonbreaking spaces.\n      Previously a paragraph containing just `&nbsp;` would
  be rendered\n      as an empty paragraph. Thanks to Paul Vorbach for pointing out
  the bug.\n    + Support `<col>` and `<caption>` in tables. Closes #486.\n\n  * Markdown
  reader:\n\n    + Don't recognize references inside delimited code blocks.\n    +
  Allow list items to begin with lists.\n\n  * LaTeX reader:\n\n    + Handle `\\bgroup`,
  `\\egroup`, `\\begingroup`, `\\endgroup`.\n    + Control sequences can't be followed
  by a letter.\n      This fixes a bug where `\\begingroup` was parsed as `\\begin`\n
  \     followed by `group`.\n    + Parse 'dimension' arguments to unknown commands.
  \ e.g. `\\parindent0pt`\n    + Make `\\label` and `\\ref` sensitive to `--parse-raw`.\n
  \     If `--parse-raw` is selected, these will be parsed as raw latex\n      inlines,
  rather than bracketed text.\n    + Don't crash on unknown block commands (like `\\vspace{10pt}`)\n
  \     inside `\\author`; just skip them.  Closes #505.\n\n  * Textile reader:\n\n
  \   + Implemented literal escapes with `==` and `<notextile>`.  Closes #473.\n    +
  Added support for LaTeX blocks and inlines (Paul Rivier).\n    + Better conformance
  to RedCloth inline parsing (Paul Rivier).\n    + Parse '+text+' as emphasized (should
  be underlined, but this\n      is better than leaving literal plus characters in
  the output.\n\n  * Docx writer: Fixed multi-paragraph list items.  Previously they
  each\n    got a list marker.  Closes #457.\n\n  * LaTeX writer:\n\n    + Added `--no-tex-ligatures`
  option to avoid replacing\n      quotation marks and dashes with TeX ligatures.\n
  \   + Use `fixltx2e` package to provide `\\textsubscript`.\n    + Improve spacing
  around LaTeX block environments:\n      quote, verbatim, itemize, description, enumerate.\n
  \     Closes #502.\n    + Use blue instead of pink for URL links in latex/pdf output.\n\n
  \ * ConTeXt writer: Fixed escaping of `%`.\n    In text, `%` needs to be escaped
  as `\\letterpercent`, not `\\%`\n    Inside URLs, `%` needs to be escaped as `\\%`\n
  \   Thanks to jmarca and adityam for the fix.  Closes #492.\n\n  * Texinfo writer:
  \ Escape special characters in node titles.\n    This fixes a problem pointed out
  by Joost Kremers.  Pandoc used\n    to escape an '@' in a chapter title, but not
  in the corresponding\n    node title, leading to invalid texinfo.\n\n  * Fixed document
  encoding in texinfo template.\n    Resolves Debian Bug #667816.\n\n  * Markdown
  writer:\n\n    + Don't force delimited code blocks to be flush left.\n      Fixes
  bug with delimited code blocks inside lists etc.\n    + Escape `<` and `$`.\n\n
  \ * LaTeX writer: Use `\\hyperref[ident]{text}` for internal links.\n    Previously
  we used `\\href{\\#ident}{text}`, which didn't work on\n    all systems. Thanks
  to Dirk Laurie.\n\n  * RST writer: Don't wrap link references.  Closes #487.\n\n
  \ * Updated to use latest versions of blaze-html, mtl.\n\n\n## pandoc 1.9.2 (2012-04-05)\n\n
  \ * LaTeX reader:\n\n    + Made `lstlisting` work as a proper verbatim environment.\n
  \   + Fixed bug parsing LaTeX tables with one column.\n\n  * LaTeX writer:\n\n    +
  Use `{}` around `ctable` caption, so that formatting can be used.\n    + Don't require
  eurosym package unless document has a ‚Ç¨.\n\n  * LaTeX template: Added variables
  for `geometry`, `romanfont`,\n    `sansfont`, `mathfont`, `mainfont` so users can
  more easily\n    customize fonts.\n\n  * PDF writer:\n\n    + Run latex engine at
  least two times, to ensure\n      that PDFs will have hyperlinked bookmarks.\n    +
  Added PDF metadata (title,author) in LaTeX standalone + PDF output.\n\n  * Texinfo
  writer: retain directories in image paths.  (Peter Wang)\n\n  * RST writer:  Better
  handling of inline formatting, in accord\n    with docutils' \"inline markup recognition
  rules\" (though we don't\n    implement the unicode rules fully). Now `hi*there*hi`
  gets\n    rendered properly as `hi\\ *there*\\ hi`, and unnecessary\n    `\\ ` are
  avoided around `:math:`, `:sub:`, `:sup:`.\n\n  * RST reader:\n\n    + Parse `\\
  ` as null, not escaped space.\n    + Allow `` :math:`...` `` even when not followed
  by blank\n      or `\\`.  This does not implement the complex rule docutils follows,\n
  \     but it should be good enough for most purposes.\n    + Add support for the
  rST default-role directive. (Greg Maslov)\n\n  * Text.Pandoc.Parsing: Added `stateRstDefaultRole`
  field to `ParserState`.\n    (Greg Maslov)\n\n  * Markdown reader: Properly handle
  citations nested in other inline\n    elements.\n\n  * Markdown writer:  don't replace
  empty alt in image with \"image\".\n\n  * DZSlides:  Updated template.html and styles
  in default template.\n    Removed bizarre CSS for `q` in dzslides template.\n\n
  \ * Avoid repeated `id` attribute in section and header in HTML slides.\n\n  * README
  improvements:  new instructions on internal links,\n    removed misleading note
  on reST math.\n\n  * Build system:\n\n    + Fixed Windows installer so that dzslides
  works.\n    + Removed stripansi.sh.\n    + Added .travis.yml for Travis continuous
  integration support..\n    + Fixed upper bound for zlib (Sergei Trofimovich).\n
  \   + Fixed upper bound for test-framework.\n    + Updated haddocks for haddock-2.10
  (Sergei Trofimovich).\n\n\n## pandoc 1.9.1.2 (2012-03-09)\n\n  * Added `beamer+lhs`
  as output format.\n\n  * Don't escape `<` in `<style>` tags with `--self-contained`.\n
  \   This fixes a bug which prevented highlighting from working\n    when using `--self-contained`.\n\n
  \ * PDF: run latex engine three times if `--toc` specified.\n    This fixes page
  numbers in the table of contents.\n\n  * Docx writer: Added TableNormal style to
  tables.\n\n  * LaTeX math environment fixes. `aligned` is now used instead of\n
  \   the nonexistent `aligned*`. `multline` instead of the nonexistent\n    `multiline`.\n\n
  \ * LaTeX writer: Use `\\textasciitilde` for literal `~`.\n\n  * HTML writer: Don't
  escape contents of EQ tags with --gladtex.\n    This fixes a regression from 1.8.\n\n
  \ * Use `<q>` tags for Quoted items for HTML5 output.\n    The quote style can be
  changed by modifying the template\n    or including a css file. A default quote
  style is included.\n\n  * LaTeX reader: Fixed accents (\\~{a}, `\\c{c}`).\n    Correctly
  handle \\^{}. Support \"minted\" as a LaTeX verbatim block.\n\n  * Updated LaTeX
  template for better language support.\n    Use `polyglossia` instead of `babel`
  with xetex.\n    Set `lang` as documentclass option.\n    `\\setmainlanguage` will
  use the last of a comma-separated\n    list of languages. Thanks to Fran√ßois Gannaz.\n\n
  \ * Fixed default LaTeX template so `\\euro` and `‚Ç¨` work.  The\n    `eurosym` package
  is needed if you are using pdflatex.\n\n  * Fixed escaping of period in man writer
  (thanks to Michael Thompson).\n\n  * Fixed list label positions in beamer.\n\n  *
  Set `mainlang` variable in context writer.\n    This parallels behavior of latex
  writer.  `mainlang` is the last\n    of a comma-separated list of languages in lang.\n\n
  \ * EPUB language metadat: convert e.g. `en_US` from locale to `en-US`.\n\n  * Changed
  `-V` so that you can specify a key without a value.\n    Such keys get the value
  `true`.\n\n  * Fixed permissions on installed man pages - thanks Magnus Therning.\n\n
  \ * Windows installer: require XP or higher.  The installer is\n    now compiled
  on a Windows 7 machine, which fixes a problem\n    using citation functions on Windows
  7.\n\n  * OSX package: Check for 64-bit Intel CPU before installing.\n\n\n## pandoc
  1.9.1.1 (2012-02-11)\n\n  * Better handling of raw latex environments in markdown.
  \ Now\n\n        \\begin{equation}\n        a_1\n        \\end{equation}\n\n    turns
  into a raw latex block as expected.\n\n  * Improvements to LaTeX reader:\n\n    +
  Skip options after block commands.\n    + Correctly handle `{\\\\}` in braced.\n
  \   + Added a needed 'try'.\n    + Citations: add `, ` to suffix if it doesn't start
  with space or\n      punctuation. Otherwise we get no space between the year and
  the\n      suffix in author-date styles.\n\n  * Added two needed data files for
  S5.  This fixes a problem with\n    `pandoc -t s5 --self-contained`.  Also removed
  `slides.min.js`,\n    which was no longer being used.\n\n  * Fixed some minor problems
  in `reference.docx`:\n    name on \"Date\" style, `xCs` instead of `xIs`.\n\n  *
  Fixed a problem creating docx files using a reference docx\n    modified using Word.
  \ The problem seems to be that Word\n    modifies `_rels/.rels`, changing the Type
  of the Relationship to\n    `docProps/core.xml`. Pandoc now changes this back to
  the correct\n    value if it has been altered, fixing the problem.\n\n  * Fixed
  html5 template so it works properly with highlighting.\n\n## pandoc 1.9.1 (2012-02-09)\n\n
  \ * LaTeX reader:\n\n    + Fixed regression in 1.9; properly handle escaped $ in
  latex math.\n    + Put LaTeX verse environments in blockquotes.\n\n  * Markdown
  reader:\n\n    + Limit nesting of strong/emph.  This avoids exponential lookahead\n
  \     in parasitic cases, like `a**a*a**a*a**a*a**a*a**a*a**a*a**a*a**`.\n    +
  Improved attributes syntax (in code blocks/spans): (1)\n      Attributes can contain
  line breaks. (2) Values in key-value\n      attributes can be surrounded by either
  double or single quotes, or\n      left unquoted if they contain no spaces.\n\n
  \ * Headers no longer wrap in markdown or RST writers.\n\n  * Added `stateMaxNestingLevel`
  to `ParserState`.\n    We set this to 6, so you can still have `Emph` inside `Emph`,\n
  \   just not indefinitely.\n\n  * More efficient implementation of `nowrap` in `Text.Pandoc.Pretty`.\n\n
  \ * `Text.Pandoc.PDF`:  Only run latex twice if `\\tableofcontents`\n    is present.\n\n
  \ * Require highlighting-kate >= 0.5.0.2, texmath >= 0.6.0.2.\n\n## pandoc 1.9.0.5
  (2012-02-06)\n\n  * Changed cabal file so that build-depends for the test program\n
  \   are not required unless the tests flag is used.\n\n  * LaTeX writer:  insert
  `{}` between adjacent hyphens so they don't\n    form ligatures (dashes) in code
  spans.\n\n## pandoc 1.9.0.4 (2012-02-06)\n\n  * Raised version bound on test-framework
  to avoid problems\n    compiling tests on GHC 7.4.1.\n\n  * LaTeX reader: Use raw
  LaTeX as fallback inline text for Cites,\n    so citations don't just disappear
  unless you process with\n    citeproc.  Ignore `\\bibliographystyle`, `\\nocite`.\n\n
  \ * Simplified tex2pdf; it will always run latex twice to\n    resolve table of
  contents and hyperrefs.\n\n## pandoc 1.9.0.3 (2012-02-06)\n\n  * Require Cabal >=
  1.10.\n\n  * Tweaked cabal file to meet Cabal 1.10 requirements.\n\n## pandoc 1.9.0.2
  (2012-02-05)\n\n  * Allow build with json 0.4 or 0.5.  Otherwise we can't build
  with\n    ghc 6.12.\n\n## pandoc 1.9 (2012-02-05)\n\n### New features\n\n  * Added
  a Microsoft Word `docx` writer. The writer includes support\n    for highlighted
  code and for math (which is converted from TeX to OMML,\n    Office's native math
  markup language, using texmath's new OMML module).\n    A new option `--reference-docx`
  allows the user to customize the\n    styles.\n\n  * Added an `asciidoc` writer
  (<http://www.methods.co.nz/asciidoc/>).\n\n  * Better support for slide shows:\n\n
  \   + Added a `dzslides` writer. DZSlides is a lightweight HTML5/javascript\n      slide
  show format due to Paul Rouget (<http://paulrouget.com/dzslides/>).\n\n    + Added
  a LaTeX `beamer` writer. Beamer is a LaTeX package for creating\n      slide presentations.\n\n
  \   + New, flexible rules for dividing documents into sections and slides\n      (see
  the \"Structuring the slide show\" in the User's Guide).  These\n      are backward-compatible
  with the old rules, but they allow slide\n      shows to be organized into sections
  and subsections containing\n      multiple slides.\n\n    + A new `--slide-level`
  option allows users to override defaults\n      and select a slide level below the
  first header level with content.\n\n  * A new `--self-contained` option produces
  HTML output that does not\n    depend on an internet connection or the presence
  of any external\n    files. Linked images, CSS, and javascript is downloaded (or
  fetched\n    locally) and encoded in `data:` URIs. This is useful for making portable\n
  \   `HTML slide shows. The --offline` option has been deprecated and is now\n    `treated
  as a synonym or --self-contained`.\n\n  * Support for PDF output:\n\n    + Removed
  the old `markdown2pdf`.\n    + `pandoc` can now create PDFs (assuming you have latex
  and a set of\n      appropriate packages installed): just specify an output file
  with the\n      `.pdf` extension.\n    + A new option `--latex-engine` allows you
  to specify `pdflatex`,\n      `xelatex`, or `lualatex` as the processor.\n\n  *
  Highlighting changes:\n\n    + Syntax highlighting is now a standard feature; the
  `highlighting`\n      flag is no longer needed when compiling.\n    + A new `--no-highlight`
  option allows highlighting to be disabled.\n    + Highlighting now works in `docx`,
  `latex`, and `epub`, as well as\n      `html`, `html5`, `dzslides`, `s5`, and `slidy`.\n
  \   + A new `--highlight-style` option selects between various highlighting\n      color
  themes.\n\n  * Internal links to sections now work in ConTeXt and LaTeX as well
  as HTML.\n\n  * LaTeX `\\include` and `\\usepackage` commands are now processed,\n
  \   provided the files are in the working directory.\n\n  * EPUB improvements:\n\n
  \   + Internal and external links now work in EPUB.\n    + Raw HTML is allowed.\n
  \   + New `--epub-embed-font` option.\n    + Customizable templates for EPUB pages
  offer more control over\n      formatting: `epub-page.html`, `epub-coverimage.html`,\n
  \     `epub-titlepage.html`.\n\n  * `--mathml` now works with DocBook.\n\n  * Added
  support for math in RST reader and writer.  Inline math uses the\n    `` :math:`...`
  `` construct.  Display math uses\n\n        .. math:: ...\n\n    or if the math
  is multiline,\n\n        .. math::\n\n           ...\n\n    These constructions
  are now supported now by `rst2latex.py`.\n\n  * Github syntax for fenced code blocks
  is supported in pandoc's\n    markdown.  You can now write\n\n        ```ruby\n
  \       x = 2\n        ```\n\n    instead of\n\n        ~~~ {.ruby}\n        x =
  2\n        ~~~~\n\n  * Easier scripting:  a new `toJsonFilter` function makes it
  easier to\n    write Haskell scripts to manipulate the Pandoc AST.\n    See [Scripting
  with pandoc](scripting.html#pandoc-1.9-changes).\n\n### Behavior changes\n\n  *
  Fixed parsing of consecutive lists in markdown.\n    Pandoc previously behaved like
  Markdown.pl for consecutive\n    lists of different styles. Thus, the following
  would be parsed\n    as a single ordered list, rather than an ordered list followed\n
  \   by an unordered list:\n\n        1. one\n        2. two\n\n        - one\n        -
  two\n\n    This change makes pandoc behave more sensibly, parsing this as\n    two
  lists.  Any change in list type (ordered/unordered) or in\n    list number style
  will trigger a new list. Thus, the following\n    will also be parsed as two lists:\n\n
  \       1. one\n        2. two\n\n        a. one\n        b. two\n\n    Since we
  regard this as a bug in Markdown.pl, and not something\n    anyone would ever rely
  on, we do not preserve the old behavior\n    even when `--strict` is selected.\n\n
  \ * Dashes work differently with `--smart`: `---` is always em-dash,\n    and `--`
  is always en-dash.  Pandoc no longer tries to guess when\n    `-` should be en-dash.
  \ *Note:* This may change how existing documents\n    look when processed with pandoc.
  A new option, `--old-dashes`,\n    is provided for legacy documents.\n\n  * The
  markdown writer now uses setext headers for levels 1-2.\n    The old behavior (ATX
  headers for all levels) can be restored\n    using the new `--atx-headers` option.\n\n
  \ * Links are now allowed in markdown image captions.  They are also\n    allowed
  in links, but will appear there as regular text. So,\n\n        [link with [link](/url)](/url)\n\n
  \   will turn into\n\n        <p><a href=\"/url\">link with link</a></p>\n\n  *
  Improved handling of citations using `citeproc-hs-0.3.4`.\n    Added `--citation-abbreviations`
  option.\n\n  * Citation keys can no longer end with a punctuation character.\n    This
  means that `@item1.` will be parsed as a citation with key\n    'item1', followed
  by a period, instead of a citation with key\n    'item1.', as was the case previously.\n\n
  \ * In HTML output, citations are now put in a span with class `citation`.\n\n  *
  The markdown reader now recognizes DocBook block and inline tags.\n    It was always
  possible to include raw DocBook tags in a markdown\n    document, but now pandoc
  will be able to distinguish block from\n    inline tags and behave accordingly.
  Thus, for example,\n\n        <sidebar>\n        hello\n        </sidebar>\n\n    will
  not be wrapped in `<para>` tags.\n\n  * The LaTeX parser has been completely rewritten;
  it is now much more\n    accurate, robust, and extensible. However, there are two
  important\n    changes in how it treats unknown LaTeX. (1) Previously, unknown\n
  \   environments became BlockQuote elements; now, they are treated\n    as \"transparent\",
  so `\\begin{unknown}xyz\\end{unknown}` is the\n    same as `xyz`.  (2) Previously,
  arguments of unknown commands\n    were passed through with their braces; now the
  braces are stripped\n    off.\n\n  * `--smart` is no longer selected automatically
  with `man` output.\n\n  * The deprecated `--xetex` option has been removed.\n\n
  \ * The `--html5`/`-5` option has been deprecated. Use `-t html5`\n    instead.
  `html5` and `html5+lhs` are now separate output formats.\n\n  * Single quotes are
  no longer escaped in HTML output.  They do not\n    need to be escaped outside of
  attributes.\n\n  * Pandoc will no longer transform leading newlines in code\n    blocks
  to `<br/>` tags.\n\n  * The ODT writer now sizes images appropriately, using the
  image\n    size and DPI information embedded in the image.\n\n  * `--standalone`
  is once again implicitly for a non-text output format\n    (ODT, EPUB).  You can
  again do `pandoc test.txt -o test.odt`\n    and get a standalone ODT file.\n\n  *
  The Docbook writer now uses `<sect1>`, `<sect2>`, etc. instead of\n    `<section>`.\n\n
  \ * The HTML writer now uses `<del>` for strikeout.\n\n  * In HTML output with `--section-divs`,
  the classes `section` and\n    `level[1,2,..6]` are put on the `div` tags so they
  can be styled.\n    In HTML 5 output with `--section-divs`, the classes\n    `level[1,2,...6]`
  are put on `section` tags.\n\n  * EPUB writer changes:\n\n    + The `lang` variable
  now sets the language\n      in the metadata (if it is not set, we default to the
  locale).\n    + EPUB:  UTF-8 is used rather than decimal entities.\n\n  * Added
  `titleslide` class to title slide in S5 template.\n\n  * In HTML, EPUB, and docx
  metadata, the date is normalized into\n    YYYY-MM-DD format if possible. (This
  is required for validation.)\n\n  * Attributes in highlighted code blocks are now
  preserved in HTML.\n    The container element will have the classes, id, and key-value
  attributes\n    you specified in the delimited code block. Previously these were
  stripped\n    off.\n\n  * The reference backlink in the HTML writer no longer has
  a special\n    `footnoteBacklink` class.\n\n  * The HTML template has been split
  into `html` and `html5` templates.\n\n  * Author and date are treated more consistently
  in HTML templates.\n    Authors are now `<h2>`, date `<h3>`.\n\n  * URLs are hyphenated
  in the ConTeXt writer (B. Scott Michel).\n\n  * In `Text.Pandoc.Builder`, `+++`
  has been replaced by `<>`.\n\n### Bug fixes\n\n  * Better support for combining
  characters and East Asian wide characters\n    in markdown and reST.\n\n  * Better
  handling of single quotes with `--smart`.\n    Previously `D'oh l'*aide*` would
  be parsed with left and right single\n    quotes instead of apostrophes. This kind
  of error is now fixed.\n\n  * Highlighting: Use `reads` instead of `read` for better
  error handling.\n    Fixes crash on `startNum=\"abc\"`.\n\n  * Added blank comment
  after directives in rst template.\n\n  * Unescape entities in citation `refId`.
  The `refId`s coming\n    from citeproc contain XML numeric entities, and these don't
  match with the\n    citation keys parsed by pandoc. Solution is to unescape them.\n\n
  \ * HTML reader: Fixed bug parsing tables with both thead and tbody.\n\n  * Markdown
  reader:\n\n    + Better handling of escapes in link URLs and titles.\n    + Fixed
  backslash escapes in reference links.\n    + Fixed bug in table/hrule parsing, by
  checking that the top\n      line of a table is not followed by a blank line. This
  bug caused\n      slowdowns on some files with hrules and tables, as pandoc tried
  to\n      interpret the hrules as the tops of multiline tables.\n    + Fixed bug
  in code block attribute parser. Previously the ID attribute\n      got lost if it
  didn't come first. Now attributes can come in any order.\n\n  * RST reader: allow
  footnotes followed by newline without space characters.\n\n  * LaTeX reader:\n\n
  \   + Ignore empty groups {}, { }.\n    + LaTeX reader: Handle `\\@`.\n    + LaTeX
  reader:  Don't crash on commands like `\\itemsep`.\n    + LaTeX reader:  Better
  handling of letter environments.\n\n  * RST writer: Fixed bug involving empty table
  cells. isSimple was being\n    calculated in a way that assumed there were no non-empty
  cells.\n\n  * ConTeXt writer:\n\n    + Made `--toc` work even without `--number-sections`.\n
  \   + Escape # in link URLs.\n    + Use buffering for footnotes containing code
  blocks.\n    + Changed 'descr' to 'description', fixed alignment.\n\n  * LaTeX writer:\n\n
  \   + Escape euro character.\n    + Don't escape `~` inside `\\href{...}`.\n    +
  Escape `#` in href URLs.\n    + Improved detection of book classes.  We now check
  the\n      `documentclass` variable, and if that is not set, we look through\n      the
  template itself.  Also, we have added the KOMA classes scrreprt\n      and scrbook.
  \ You can now make a book using\n      `pandoc -V documentclass:book mybook.txt
  -o mybook.pdf`\n    + LHS files now set the \"listings\" variable, so that the definition\n
  \     of the `code` environment will be included in the template.\n    + Links are
  colored blue by default (this can be changed by\n      modifying `hyperref` settings
  in the template).\n    + Added `lang` variable to LaTeX template.\n\n  * HTML writer:\n\n
  \   + Fixed bug in HTML template with html5 and mathml.\n    + Don't use self-closing
  img, br, hr tags for HTML5.\n    + Use `<section>` for footnotes if HTML5.\n    +
  Update HTML templates to use Content-Style-Type meta tag.\n    + Use separate variables
  for meta-date, meta-author.\n      This makes footnotes work in author and date
  fields.\n    + Use 'vertical-align:middle' in WebTeX math for better alignment.\n\n
  \ * S5/slidy writer:  Make footnotes appear on separate slide at end.\n\n  * MIME:
  Added 'layout-cache' to getMimeType. This ensures that the\n    META-INF/manifest.xml
  for ODT files will have everything it needs, so\n    that ODT files modified by
  LibreOffice can be used as `--reference-odt`.\n\n  * `Text.Pandoc.Templates`: Return
  empty string for json template.\n\n  * `Text.Pandoc.Biblio`:\n\n    + Expand citations
  recursively inside nested inlines.\n    + Treat `\\160` as space when parsing locator
  and suffix.\n      This fixes a bug with \"p. 33\" when `--smart` is used. Previously\n
  \     the whole \"p. 33\" would be included in the suffix, with no locator.\n    +
  Put whole author-in-text citation in a Cite.  Previously just the\n      date and
  other info went in the Cite.\n    + Don't add comma+space to prefix if it ends in
  punctuation.\n\n  * Updated chicago-author-date.csl.  The old version did not work\n
  \   properly for edited volumes with no author.\n\n  * EPUB writer:\n\n    + Add
  date to EPUB titlepage and metadata.\n    + Added TOC identifier in EPUB page template.\n
  \   + Don't generate superfluous file `cover-image.jpg`.\n\n###  Under the hood
  improvements\n\n  * Modified `make_osx_package.sh` to use cabal-dev.\n    Items
  are no longer installed as root.\n    Man pages are zipped and given proper permissions.\n\n
  \ * Modified windows installer generator to use cabal-dev.\n\n  * Setup: Making
  man pages now works with cabal-dev (at least on OSX). In\n    Setup.hs we now invoke
  'runghc' in a way that points it to the correct\n    package databases, instead
  of always falling back to the default user\n    package db.\n\n  * Updated to work
  with GHC 7.4.1.\n\n  * Removed dependency on old-time.\n\n  * Removed dependency
  on dlist.\n\n  * New slidy directory for \"self-contained.\"\n\n  * TeXMath writer:
  \ Use unicode thin spaces for thin spaces.\n\n  * Markdown citations: don't strip
  off initial space in locator.\n\n### API changes\n\n  * Removed `Apostrophe`, `EmDash`,
  `EnDash`, and `Ellipses`\n    from the native `Inline` type in pandoc-types.  Now
  we use `Str`\n    elements with unicode.\n\n  * Improvements to `Text.Pandoc.Builder`:\n\n
  \   + `Inlines` and `Blocks` are now newtypes (not synonyms for\n      sequences).\n
  \   + Instances are defined for `IsString`, `Show`, `Read`, `Monoid`,\n      and
  a new `Listable` class, which allows these to be manipulated\n      to some extent
  like lists. Monoid append includes automatic\n      normalization.\n    + `+++`
  has been replaced by `<>` (mappend).\n\n  * Use blaze-html instead of xhtml for
  HTML generation.\n    This changes the type of `writeHtml`.\n\n  * `Text.Pandoc.Shared`:\n\n
  \   + Added `warn` and `err`.\n    + Removed `unescapeURI`, modified `escapeURI`.\n
  \     (See under [behavior changes], above.)\n\n  * Changes in URI escaping:  Previously
  the readers escaped URIs by\n    converting unicode characters to octets and then
  percent encoding.\n    Now unicode characters are left as they are, and `escapeURI`
  only\n    percent-encodes space characters.  This gives more readable\n    URIs,
  and works well with modern user agents. URIs are no longer unescaped\n    at all
  on conversion to `markdown`, `asciidoc`, `rst`, `org`.\n\n  * New module `Text.Pandoc.SelfContained`.\n\n
  \ * New module `Text.Pandoc.Docx`.\n\n  * New module `Text.Pandoc.PDF`.\n\n  * Added
  `writerBeamer` to `WriterOptions`.\n\n  * Added `normalizeDate` to `Text.Pandoc.Shared`.\n\n
  \ * Added `splitStringWithIndices` in `Text.Pandoc.Shared`.\n    This is like `splitWithIndices`,
  but it is sensitive to distinctions\n    between wide, combining, and regular characters.\n\n
  \ * `Text.Pandoc.Pretty`:\n\n    + Added `chomp` combinator.\n    + Added `beforeNonBreak`
  combinator.  This allows you to include\n      something conditionally on it being
  before a nonblank.\n      Used for RST inline math.\n    + Added `charWidth` function.
  All characters marked W or F in the unicode\n      spec EastAsianWidth.txt get width
  2.\n    + Added `realLength`, based on `charWidth`. `realLength` is now\n      used
  in calculating offsets.\n\n  * New module `Text.Pandoc.Slides`, for common functions
  for breaking\n    a document into slides.\n\n  * Removed `Text.Pandoc.S5`, which
  is no longer needed.\n\n  * Removed `Text.Pandoc.CharacterReferences`.  Moved\n
  \   `characterReference` to `Text.Pandoc.Parsing`.\n    `decodeCharacterReferences`
  is replaced by `fromEntities`\n    in `Text.Pandoc.XML`.\n\n  * Added `Text.Pandoc.ImageSize`.
  \ This is intened for use\n    in `docx` and `odt` writers, so the size and dpi
  of images\n    can be calculated.\n\n  * Removed `writerAscii` in `WriterOptions`.\n\n
  \ * Added `writerHighlight` to `WriterOptions`.\n\n  * Added `DZSlides` to `HTMLSlideVariant`.\n\n
  \ * `writeEPUB` has a new argument for font files to embed.\n\n  * Added `stateLastStrPos`
  to `ParserState`. This lets us keep track\n    of whether we're parsing the position
  immediately after a regular\n    (non-space, non-symbol) string, which is useful
  for distinguishing\n    apostrophes from single quote starts.\n\n  * `Text.Pandoc.Parsing`:\n\n
  \   + `escaped` now returns a `Char`.\n    + Removed `charsInBalanced'`, added a
  character parser as\n      a parameter of `charsInBalanced`.  This is needed for\n
  \     proper handling of escapes, etc.\n    + Added `withRaw`.\n\n  * Added `toEntities`
  to `Text.Pandoc.XML`.\n\n  * `Text.Pandoc.Readers.LaTeX`:\n\n    + Export `handleIncludes`.\n
  \   + Export `rawLaTeXBlock` instead of `rawLaTeXEnvironment'`.\n\n  * Added `ToJsonFilter`
  class and `toJsonFilter` function to\n    `Text.Pandoc`, deprecating the old `jsonFilter`
  function.\n\n  * `Text.Pandoc.Highlighting`:\n\n     + Removed `highlightHtml`,
  `defaultHighlightingCss`.\n     + Export `formatLaTeXInline`, `formatLaTeXBlock`,
  and `highlight`, plus\n       key functions from highlighting-kate.\n     + Changed
  types of highlighting function.  `highlight` returns a\n       `Maybe`, not an `Either`.\n\n\n##
  pandoc 1.8.2.1 (2011-08-01)\n\n  * Adjusted Arbitrary instance to help avoid timeouts
  in tests.\n\n  * Added `Tests.Writers.Markdown` to cabal file.\n\n  * Relaxed version
  bounds on pandoc-types, test-framework.\n\n## pandoc 1.8.2 (2011-07-30)\n\n  * Added
  script to produce OS X package.\n\n  * Made `templates` directory a git submodule.
  \ This should make it\n    easier for people to revise their custom templates when
  the default\n    templates change.\n\n  * Changed template naming scheme: `FORMAT.template`
  -> `default.FORMAT`.\n    **Note:** If you have existing templates in `~/.pandoc/templates`,
  you\n    must rename them to conform to the new scheme!\n\n  * Default template
  improvements:\n\n    + HTML:  Display author and date after title.\n    + HTML:
  \ Made table of contents more customizable.  The container\n      for the TOC is
  now in the template, so users can insert a header\n      or other styling. (Thanks
  to Bruce D'Arcus for the suggestion.)\n    + HTML, Slidy, S5:  Enclose scripts in
  CDATA tags.\n    + Slidy, S5: Added `s5-url` and `slidy-url` variables, instead
  of\n      hard-coding.  If you want to put your slidy files in the slidy\n      subdirectory,
  for example, you can do\n      `pandoc -t slidy -V slidy-url=slidy -s`.\n    + LaTeX:
  Use `\\and` to separate authors in LaTeX documents (reader\n      & writer).  Closes
  #279.\n    + LaTeX: Set `\\emergencystretch` to prevent overfull lines.\n    + LaTeX:
  Use different `hyperref` options for `xetex`, fixing\n      problems with unicode
  bookmarks (thanks to CircleCode).\n    + LaTeX: Removed `ucs` package, use `utf8`
  rather than `utf8x`\n      with `inputenc`.  This covers fewer characters but is
  more\n      robust with other packages, and `ucs` is unmaintained.  Users\n      who
  need better unicode support should use xelatex or lualatex.\n\n  * If a template
  specified with `--template` is not found, look for it\n    in `datadir`.  Also,
  if no extension is provided, supply one based\n    on the writer.  So now you can
  put your `special.latex` template in\n    `~/.pandoc/templates`, and use it from
  any directory via\n    `pandoc -t latex --template special`.\n\n  * Added `nonspaceChar`
  to `Text.Pandoc.Parsing`.\n\n  * Fixed smart quotes bug, now handling `'...hi'`
  properly.\n\n  * RST reader:\n\n    + Partial support for labeled footnotes.\n    +
  Improved accuracy of `simpleReferenceName` parser.\n\n  * HTML reader:\n\n    +
  Substitute correct unicode characters for\n      characters in the 128..159 range,
  which are often found even in\n      HTML that purports to be UTF-8.\n\n  * LaTeX
  reader:  Handle `\\subtitle` command (a subtitle is added\n    to the title, after
  a colon and linebreak). Closes #280.\n\n  * Leaner `reference.odt`.\n\n  * Added
  unexported module `Text.Pandoc.MIME` for use in\n    the ODT writer.\n\n  * ODT
  writer:  Construct `manifest.xml` based on archive contents.\n    This fixes a bug
  in ODTs containing images. Recent versions of\n    LibreOffice would reject these
  as corrupt, because `manifest.xml`\n    did not contain a reference to the image
  files.\n\n  * LaTeX writer:\n\n    + Make verbatim environments flush to avoid spurious\n
  \     blank lines.  Closes #277.\n    + Use `\\texttt` and escapes insntead of `\\verb!...!`,
  which\n      is too fragile (doesn't work in command arguments).\n    + Use `\\enquote{}`
  for quotes if the template includes\n      the `csquotes` package. This provides
  better support for\n      local quoting styles. (Thanks to Andreas Wagner for the
  idea.)\n\n  * ConTeXt writer:  Make `\\starttyping`/`\\stoptyping` flush with\n
  \   margin, preventing spurious blank lines.\n\n  * Slidy writer:\n\n    + Use non-minimized
  version of `slidy.css` with `--offline`\n      option, so users can more easily
  edit it.\n    + Also fixed a bug in the CSS that prevented proper centering\n      of
  title (now reported and fixed upstream).\n\n  * S5 writer:\n\n    + Replaced `s5/default/slides.js.{comment,packed}`
  with\n      new compressed `s5/default/slides.min.js`.\n    + Use `data:` protocol
  to embed S5 CSS in `<link>` tags,\n      when `--offline` is specified. Using inline
  CSS didn't\n      work with Chrome or Safari.  This fixes offline\n      S5 on those
  browsers.\n\n  * HTML writer:  Removed English title on footnote backlinks.\n    This
  is incongrous in non-English documents.\n\n  * Docbook writer:\n\n    + Use CALS
  tables.  (Some older docbook software does not work\n      well with XHTML tables.)
  \ Closes #77.\n    + Use `programlisting` tags (instead of `screen`) for code blocks.\n\n
  \ * `markdown2pdf`:\n\n    + Calls latex with `-halt-on-error -interaction nonstopmode`
  instead\n      of `-interaction=batchmode`, which essentially just ignored errors,\n
  \     leading to bad results. Better to know when something is wrong.\n    + Fixed
  issues with non-UTF-8 output of `pdflatex`.\n    + Better error reporting.\n\n  *
  `--mathjax` now takes an optional URL argument. If it is not\n    provided, pandoc
  links directly to the (secure) mathjax CDN,\n    as now recommended (thanks to dsanson).\n\n
  \ * Deprecated `--xetex` option in `pandoc`.  It is no longer needed,\n    since
  the LaTeX writer now produces a file that can be processed by\n    `latex`, `pdflatex`,
  `lualatex`, or `xelatex`.\n\n  * Introduced `--luatex` option to `markdown2pdf`.
  This causes `lualatex`\n    to be used to create the PDF.\n\n\n## pandoc 1.8.1.2
  (2011-07-16)\n\n  * Added `--epub-cover-image` option.\n\n  * Documented `--biblatex`
  and `--natbib` options.\n\n  * Allow `--section-divs` with slidy output.  Resolves
  Issue #296.\n\n  * Disallow notes within notes in reST and markdown.\n    These
  previously caused infinite looping and stack overflows.\n    For example:\n\n        [^1]\n\n
  \       [^1]: See [^1]\n\n    Note references are allowed in reST notes, so this
  isn't a full\n    implementation of reST. That can come later. For now we need to\n
  \   prevent the stack overflows.  Partially resolves Issue #297.\n\n  * EPUB writer:
  Allow non-plain math methods.\n\n  * Forbid ()s in citation item keys.  Resolves
  Issue #304: problems with\n    `(@item1; @item2)` because the final paren was being
  parsed as part of\n    the item key.\n\n  * Changed URI parser so it doesn't include
  trailing punctuation.\n    So, in RST, `http://google.com.` should be parsed as
  a link followed by a\n    period. The parser is smart enough to recognize balanced
  parentheses, as\n    often occur in wikipedia links: `http://foo.bar/baz_(bam)`.\n\n
  \ * Markdown+lhs reader: Require space after inverse bird tracks, so that\n    HTML
  tags can be used freely at the left margin of a markdown+lhs document.\n    Thanks
  to Conal Elliot for the suggestion.\n\n  * Markdown reader: Fixed bug in footnote
  order (reported by CircleCode).\n\n  * RST reader:\n      + Fixed bug in in field
  lists with multi-line items at the\n        end of the list.\n      + Added parentheses
  to RST `specialChars`, so\n        `(http://google.com)` will be parsed as a link
  in parens.\n        Resolves Issue #291.\n      + Allow `|` followed by newline
  in RST line block.\n\n  * LaTeX reader:\n      + Support `\\dots`.\n      + Gobble
  option & space after linebreak `\\\\[10pt]`.\n\n  * Textile reader:\n      + Make
  it possible to have colons after links.  (qerub)\n      + Make it possible to have
  colons after links.  (Christoffer Sawicki)\n\n  * HTML reader:\n      + Skip spaces
  after `<b>`, `<emph>`, etc.\n      + Handle tbody, thead in simple tables.  Closes
  #274.\n      + Implicit `Para`s instead of `Plains` in some contexts.\n\n  * OpenDocument
  writer:  Use special `First paragraph` style for\n    first paragraph after most
  non-paragraph blocks. This allows users to\n    specify e.g. that only paragraphs
  after the first paragraph of a block are\n    to be indented. Thanks to Andrea Rossato
  for the patch. Closes #20.\n\n  * LaTeX writer:  use `deVerb` on table and picture
  captions.\n    Otherwise LaTeX complains about `\\verb` inside command argument.\n
  \   Thanks to bbanier for reporting the bug.\n\n  * Markdown writer: Insert HTML
  comment btw list and indented code block.\n    This prevents the code block from
  being interpreted as part of the list.\n\n  * EPUB writer: Add a meta element specify
  the cover.\n    Some EPUB e-readers, such as the Nook, require a meta element inside
  the\n    OPF metadata block to ensure the cover image is properly displayed.\n    (Kelsey
  Hightower)\n\n  * HTML writer: Use embed tag for images with non-image extensions.\n
  \   (e.g.  PDFs).  Closes #264.\n\n  * LaTeX writer: Improved tables.\n\n      +
  More space between lines, top-align cells.\n      + Use ctable package, which allows
  footnotes and\n        provides additional options.\n      + Made cell alignments
  work in multiline tables.\n      + Closes #271, #272.\n\n  * Un-URI-escape image
  filenames in LaTeX, ConTeXt, RTF, Texinfo.\n    Also do this when copying image
  files into EPUBs and ODTs.\n    Closes #263.\n\n  * Changed to github issue tracker.\n\n
  \ * Added failing emph/strong markdown test case due to Perry Wagle.\n\n  * Slidy
  improvements:\n      + Updated to use Slidy2.\n      + Fixed bug, unclosed div tag.\n
  \     + Added `duration` variable in template.\n        Setting this activates the
  timer.\n      + Use 'titlepage' instead of 'cover' for title div.\n\n\n## pandoc
  1.8.1.1 (2011-02-13)\n\n  * `markdown2pdf`:  Removed some debugging lines accidentally
  included\n    in the 1.8.1 release. With those lines, the temp directory is created\n
  \   in the working directory, and it is not deleted.  This fix restores\n    the
  original behavior.\n\n## pandoc 1.8.1 (2011-02-13)\n\n  * Added `--ascii` option.
  \ Currently supported only in HTML writer,\n    which it causes to use numerical
  entities instead of UTF-8.\n\n  * EPUB writer: `--toc` now works to provide a table
  of contents\n    at the beginning of each chapter.\n\n  * LaTeX writer:  Change
  figure defaults to `htbp`.\n    This prevents \"too many unprocessed floats.\"  Resolves\n
  \   Issue #285.\n\n  * `Text.Pandoc.UTF8`:  Encode filenames even when using recent\n
  \   base.\n\n  * `markdown2pdf`: Fixed filename encoding issues. With help from
  Paulo\n    Tanimoto. Resolves Issue #286.\n\n  * HTML writer: Put line breaks in
  section divs.\n\n  * `Text.Pandoc.Shared`: Make `writerSectionDivs` default to False.\n\n##
  pandoc 1.8.0.3 (2011-02-05)\n\n  * Fixed Source-repository stanza in cabal file.\n\n##
  pandoc 1.8.0.2 (2011-02-05)\n\n  * HTML writer:\n\n    + Stringify alt text instead
  of converting to HTML.\n    + Break lines after block elements, not inside tags.\n
  \     HTML output now closely resembles that of tidy. Resolves Issue #134.\n\n  *
  Markdown reader: Fixed bug in footnote block parser (pointed out\n    by Jesse Rosenthal).
  \ The problem arose when the blank line\n    at the end of a footnote block contained
  indenting spaces.\n\n  * Shared: Improved 'normalize' function so it normalizes
  Spaces too.\n    In normal form, Space elements only occur to separate two non-Space\n
  \   elements.  So, we never have [Space], or [, ..., Space].\n\n  * Tests:\n\n    +
  Improved Arbitrary instance.\n    + Added timeout for test instances.\n\n  * README:\n\n
  \   + Added section on four-space rule for lists.  Resolves Issue #283.\n    + Clarified
  optional arguments on math options.\n\n  * markdown2pdf: Fixed bug with output file
  extensions.\n    Previously `markdown2pdf test.txt -o test.en.pdf` would produce\n
  \   `test.pdf`, not `test.en.pdf`.  Thanks to Paolo Tanimoto for the fix.\n\n##
  pandoc 1.8.0.1 (2011-01-31)\n\n  * Revised Interact.hs so that it works with the
  CPP macros\n    in the UTF8 module.\n\n  * Revised Setup.hs so that we don't call
  MakeManPage.hs unless\n    the man pages are out of date.\n\n## pandoc  1.8 (2011-01-30)\n\n###
  New features\n\n  * Support for citations using Andrea Rossato's `citeproc-hs` 0.3.\n
  \   You can now write, for example,\n\n        Water is wet [see @doe99, pp. 33-35;
  also @smith04, ch. 1].\n\n    and, when you process your document using `pandoc`,
  specifying\n    a citation style using `--csl` and a bibliography using `--bibliography`,\n
  \   the citation will be replaced by an appropriately formatted\n    citation, and
  a list of works cited will be added to the end\n    of the document.\n\n    This
  means that you can switch effortlessly between different citation\n    and bibliography
  styles, including footnote, numerical, and author-date\n    formats. The bibliography
  can be in any of the following formats: MODS,\n    BibTeX, BibLaTeX, RIS, EndNote,
  EndNote XML, ISI, MEDLINE, Copac, or JSON.\n    See the README for further details.\n\n
  \   Citations are supported in the markdown reader, using a special\n    syntax,
  and in the LaTeX reader, using natbib or biblatex syntax.\n    (Thanks to Nathan
  Gass for the natbib and biblatex support.)\n\n  * New `textile` reader and writer.
  \ Thanks to Paul Rivier for contributing\n    the `textile` reader, an almost complete
  implementation of the textile\n    syntax used by the ruby [RedCloth library](http://redcloth.org/textile).\n
  \   Resolves Issue #51.\n\n  * New `org` writer, for Emacs Org-mode, contributed
  by Puneeth Chaganti.\n\n  * New `json` reader and writer, for reading and writing
  a JSON\n    representation of the native Pandoc AST.  These are much faster\n    than
  the `native` reader and writer, and should be used for\n    serializing Pandoc to
  text.  To convert between the JSON representation\n    and native Pandoc, use `encodeJSON`
  and `decodeJSON` from\n    `Text.JSON.Generic`.\n\n  * A new `jsonFilter` function
  in `Text.Pandoc` makes it easy\n    to write scripts that transform a JSON-encoded
  pandoc document.\n    For example:\n\n        -- removelinks.hs - removes links
  from document\n        import Text.Pandoc\n        main = interact $ jsonFilter
  $ bottomUp removeLink\n                 where removeLink (Link xs _) = Emph xs\n
  \                      removeLink x = x\n\n    To use this to remove links while
  translating markdown to LaTeX:\n\n        pandoc -t json | runghc removelinks.hs
  | pandoc -f json -t latex\n\n  * Attributes are now allowed in inline `Code` elements,
  for example:\n\n        In this code, `ulist ! [theclass \"special\"] << elts`{.haskell}
  is...\n\n    The attribute syntax is the same as for delimited code blocks.\n    `Code`
  inline has an extra argument place for attributes, just like\n    `CodeBlock`. Inline
  code will be highlighted in HTML output, if pandoc\n    is compiled with highlighting
  support. Resolves Issue #119.\n\n  * New `RawBlock` and `RawInline` elements (replacing
  `RawHtml`,\n    `HtmlInline`, and `TeX`) provide lots of flexibility in writing\n
  \   scripts to transform Pandoc documents. Scripts can now change\n    how each
  element is rendered in each output format.\n\n  * You can now define LaTeX macros
  in markdown documents, and pandoc\n    will apply them to TeX math.  For example,\n\n
  \       \\newcommand{\\plus}[2]{#1 + #2}\n        $\\plus{3}{4}$\n\n    yields `3+4`.
  \ Since the macros are applied in the reader, they\n    will work in every output
  format, not just LaTeX.\n\n  * LaTeX macros can also be used in LaTeX documents
  (both in math\n    and in non-math contexts).\n\n  * A new `--mathjax` option has
  been added for displaying\n    math in HTML using MathJax.  Resolves issue #259.\n\n
  \ * Footnotes are now supported in the RST reader. (Note, however,\n    that unlike
  docutils, pandoc ignores the numeral or symbol used in\n    the note; footnotes
  are put in an auto-numbered ordered list.)\n    Resolves Issue #258.\n\n  * A new
  `--normalize` option causes pandoc to normalize the AST\n    before writing the
  document.  This means that, for example,\n    `*hi**there*` will be rendered as
  `<em>hithere</em>`\n    instead of `<em>hi</em><em>there</em>`.  This is not the
  default,\n    because there is a significant performance penalty.\n\n  * A new `--chapters`
  command-line option causes headers\n    in DocBook, LaTeX, and ConTeXt to start
  with \"chapter\" (level one).\n    Resolves Issue #265.\n\n  * In DocBook output,
  `<chapter>` is now used for top-level\n    headers if the template contains `<book>`.
  Resolves Issue #265.\n\n  * A new `--listings` option in `pandoc` and `markdown2pdf`
  causes\n    the LaTeX writer to use the listings package for code blocks.\n    (Thanks
  to Josef Svennigsson for the pandoc patch, and Etienne\n    Millon for the markdown2pdf
  patch.)\n\n  * `markdown2pdf` now supports `--data-dir`.\n\n  * URLs in autolinks
  now have class \"url\" so they can be styled.\n\n  * Improved prettyprinting in
  most formats.  Lines will be wrapped\n    more evenly and duplicate blank lines
  avoided.\n\n  * New `--columns` command-line option sets the column width for\n
  \   line wrapping and relative width calculations for tables.\n\n  * Made `--smart`
  work in HTML, RST, and Textile readers, as well\n    as markdown.\n\n  * Added `--html5`
  option for HTML5 output.\n\n  * Added support for listings package in LaTeX reader\n
  \   (Puneeth Chaganti).\n\n  * Added support for simple tables in the LaTeX reader.\n\n
  \ * Added support for simple tables in the HTML reader.\n\n  * Significant performance
  improvements in many readers and writers.\n\n### API and program changes\n\n  *
  Moved `Text.Pandoc.Definition` from the `pandoc` package to a new\n    auxiliary
  package, `pandoc-types`. This will make it possible for other\n    programs to supply
  output in Pandoc format, without depending on the whole\n    pandoc package.\n\n
  \ * Added `Attr` field to `Code`.\n\n  * Removed `RawHtml`, `HtmlInline`, and `TeX`
  elements; added generic\n    `RawBlock` and `RawInline`.\n\n  * Moved generic functions
  to `Text.Pandoc.Generic`. Deprecated\n    `processWith`, replacing it with two functions,
  `bottomUp` and `topDown`.\n    Removed previously deprecated functions `processPandoc`
  and `queryPandoc`.\n\n  * Added `Text.Pandoc.Builder`, for building `Pandoc` structures.\n\n
  \ * `Text.Pandoc` now exports association lists `readers` and `writers`.\n\n  *
  Added `Text.Pandoc.Readers.Native`, which exports `readNative`.\n    `readNative`
  can now read full pandoc documents, block lists, blocks,\n    inline lists, or inlines.
  \ It will interpret `Str \"hi\"`\n    as if it were `Pandoc (Meta [] [] []) [Plain
  [Str \"hi\"]]`.\n    This should make testing easier.\n\n  * Removed deprecated
  `-C/--custom-header` option.\n    Use `--template` instead.\n\n  * `--biblio-file`
  has been replaced by `--bibliography`.\n    `--biblio-format` has been removed;
  pandoc now guesses the format\n    from the file extension (see README).\n\n  *
  pandoc will treat an argument as a URI only if it has an\n    `http(s)` scheme.
  \ Previously pandoc would treat some\n    Windows pathnames beginning with `C:/`
  as URIs.\n\n  * The `--sanitize-html` option and the `stateSanitize` field in\n
  \   `ParserState` have been removed. Sanitization is better done in the\n    resulting
  HTML using `xss-sanitize`, which is based on pandoc's\n    sanitization, but improved.\n\n
  \ * pandoc now adds a newline to the end of its output in fragment\n    mode (=
  not `--standalone`).\n\n  * Added support for `lang` in `html` tag in the HTML template,\n
  \   so you can do `pandoc -s -V lang=es`, for example.\n\n  * `highlightHtml` in
  `Text.Pandoc.Highlighting` now takes\n    a boolean argument that selects between
  \"inline\" and\n    \"block\" HTML.\n\n  * `Text.Pandoc.Writers.RTF` now exports
  `rtfEmbedImage`.\n    Images are embedded in RTF output when possible (png, jpeg).\n
  \   Resolves Issue #275.\n\n  * Added `Text.Pandoc.Pretty`. This is better suited
  for pandoc than the\n    `pretty` package.  Changed all writers that used\n    `Text.PrettyPrint.HughesPJ`
  to use `Text.Pandoc.Pretty` instead.\n\n  * Rewrote `writeNative` using the new
  prettyprinting module. It is\n    now much faster. The output has been made more
  consistent and compressed.\n    `writeNative` is also now sensitive to writerStandalone`,
  and will simply\n    `print a block list if writerStandalone` is False.\n\n  * Removed
  `Text.Pandoc.Blocks`. `Text.Pandoc.Pretty` allows you to define\n    blocks and
  concatenate them, so a separate module is no longer needed.\n\n  * `Text.Pandoc.Shared`:\n\n
  \   + Added `writerColumns`, `writerChapters`, and `writerHtml5` to\n      `WriterOptions`.\n
  \   + Added `normalize`.\n    + Removed unneeded prettyprinting functions:\n      `wrapped`,
  `wrapIfNeeded`, `wrappedTeX`, `wrapTeXIfNeeded`, `hang'`,\n      `BlockWrapper`,
  `wrappedBlocksToDoc`.\n    + Made `splitBy` take a test instead of an element.\n
  \   + Added `findDataFile`, refactored `readDataFile`.\n    + Added `stringify`.
  Rewrote `inlineListToIdentifier` using `stringify`.\n    + Fixed `inlineListToIdentifier`
  to treat `\\160` as ' '.\n\n  * `Text.Pandoc.Readers.HTML`:\n\n    + Removed `rawHtmlBlock`,
  `anyHtmlBlockTag`, `anyHtmlInlineTag`,\n      `anyHtmlTag`, `anyHtmlEndTag`, `htmlEndTag`,
  `extractTagType`,\n      `htmlBlockElement`, `htmlComment`\n    + Added `htmlTag`,
  `htmlInBalanced`, `isInlineTag`, `isBlockTag`,\n      `isTextTag`\n\n  * Moved `smartPunctuation`
  from `Text.Pandoc.Readers.Markdown`\n    to `Text.Pandoc.Readers.Parsing`, and parameterized
  it with\n    an inline parser.\n\n  * Ellipses are no longer allowed to contain
  spaces.\n    Previously we allowed '. . .', ' . . . ', etc.  This caused\n    too
  many complications, and removed author's flexibility in\n    combining ellipses
  with spaces and periods.\n\n  * Allow linebreaks in URLs (treat as spaces). Also,
  a string of\n    consecutive spaces or tabs is now parsed as a single space. If
  you have\n    multiple spaces in your URL, use `%20%20`.\n\n  * `Text.Pandoc.Parsing`:\n\n
  \   + Removed `refsMatch`.\n    + Hid `Key` constructor.\n    + Removed custom `Ord`
  and `Eq` instances for `Key`.\n    + Added `toKey` and `fromKey` to convert between
  `Key` and `[Inline]`.\n    + Generalized type on `readWith`.\n\n  * Small change
  in calculation of relative widths of table columns.\n    If the size of the header
  > the specified column width, use\n    the header size as 100% for purposes of calculating\n
  \   relative widths of columns.\n\n  * Markdown writer now uses some pandoc-specific
  features when `--strict`\n    is not specified: `\\` newline is used for a hard
  linebreak instead of\n    two spaces then a newline. And delimited code blocks are
  used when\n    there are attributes.\n\n  * HTML writer:  improved gladTeX output
  by setting ENV appropriately\n    for display or inline math (Jonathan Daugherty).\n\n
  \ * LaTeX writer: Use `\\paragraph`, `\\subparagraph` for level 4,5 headers.\n\n
  \ * LaTeX reader:\n\n    + `\\label{foo}` and `\\ref{foo}` now become `{foo}` instead
  of `(foo)`.\n    + `\\index{}` commands are skipped.\n\n  * Added `fontsize` variable
  to default LaTeX template.\n    This makes it easy to set the font size using `markdown2pdf`:\n
  \   `markdown2pdf -V fontsize=12pt input.txt`.\n\n  * Fixed problem with strikeout
  in LaTeX headers when using\n    hyperref, by adding a command to the default LaTeX
  template\n    that disables `\\sout` inside pdf strings. Thanks to Joost Kremers\n
  \   for the fix.\n\n  * The `COLUMNS` environment variable no longer has any effect.\n\n###
  Under-the-hood improvements\n\n  * Pandoc now compiles with GHC 7. (This alone leads
  to a\n    significant performance improvement, 15-20%.)\n\n  * Completely rewrote
  HTML reader using tagsoup as a lexer. The\n    new reader is faster and more accurate.
  \ Unlike the\n    old reader, it does not get bogged down on some input\n    (Issues
  #277, 255). And it handles namespaces in tags\n    (Issue #274).\n\n  * Replaced
  `escapeStringAsXML` with a faster version.\n\n  * Rewrote `spaceChar` and some other
  parsers in Text.Pandoc.Parsing\n    for a significant performance boost.\n\n  *
  Improved performance of all readers by rewriting parsers.\n\n  * Simplified Text.Pandoc.CharacterReferences
  by using\n    entity lookup functions from TagSoup.\n\n  * `Text.Pandoc.UTF8` now
  uses the unicode-aware IO functions\n    from `System.IO` if base >= 4.2.  This
  gives support for\n    windows line endings on windows.\n\n  * Remove duplications
  in documentation by generating the\n    pandoc man page from README, using `MakeManPage.hs`.\n\n
  \ * README now includes a full description of markdown syntax,\n    including non-pandoc-specific
  parts.  A new `pandoc_markdown`\n    man page is extracted from this, so you can
  look up markdown\n    syntax by doing `man pandoc_markdown`.\n\n  * Completely revised
  test framework (with help from Nathan Gass).\n    The new test framework is built
  when the `tests` Cabal flag is set. It\n    includes the old integration tests,
  but also some new unit and quickcheck\n    tests. Test output has been much improved,
  and you can now specify a glob\n    pattern after `cabal test` to indicate which
  tests should be run;\n    for example `cabal test citations` will run all the citation
  tests.\n\n  * Added a shell script, `stripansi.sh`, for filtering ANSI control\n
  \   sequences from test output: `cabal test | ./stripansi.sh > test.log`.\n\n  *
  Added `Interact.hs` to make it easier to use ghci while developing.\n    `Interact.hs`
  loads `ghci` from the `src` directory, specifying\n    all the options needed to
  load pandoc modules (including\n    specific package dependencies, which it gets
  by parsing\n    dist/setup-config).\n\n  * Added `Benchmark.hs`, testing all readers
  + writers using criterion.\n\n  * Added `stats.sh`, to make it easier to collect
  and archive\n    benchmark and lines-of-code stats.\n\n  * Added upper bounds to
  all cabal dependencies.\n\n  * Include man pages in extra-source-files.  This allows
  users to\n    install pandoc from the tarball without needing to build the man\n
  \   pages.\n\n### Bug fixes\n\n  * Filenames are encoded as UTF8.  Resolves Issue
  #252.\n\n  * Handle curly quotes better in `--smart` mode. Previously, curly quotes\n
  \   were just parsed literally, leading to problems in some output formats.\n    Now
  they are parsed as `Quoted` inlines, if `--smart` is specified.\n    Resolves Issue
  #270.\n\n  * Text.Pandoc.Parsing: Fixed bug in grid table parser.\n    Spaces at
  end of line were not being stripped properly,\n    resulting in unintended LineBreaks.\n\n
  \ * Markdown reader:\n\n    + Allow HTML comments as inline elements in markdown.\n
  \     So, `aaa <!-- comment --> bbb` can be a single paragraph.\n    + Fixed superscripts
  with links: `^[link](/foo)^` gets\n      recognized as a superscripted link, not
  an inline note followed by\n      garbage.\n    + Fixed regression, making markdown
  reference keys case-insensitive again.\n      Resolves Issue #272.\n    + Properly
  handle abbreviations (like `Mr.`) at the end of a line.\n    + Better handling of
  intraword underscores, avoiding exponential\n      slowdowns in some cases.  Resolves
  Issue #182.\n    + Fixed bug in alignments in tables with blank rows in the header.\n\n
  \ * RST reader:\n\n    + Field lists now allow spaces in field names, and\n      block
  content in field values. (Thanks to Lachlan Musicman\n      for pointing out the
  bug.)\n    + Definition list items are now always `Para` instead of\n      `Plain`,
  matching behavior of `rst2xml.py`.\n    + In image blocks, the description is parsed
  properly and\n      used for the alt attribute, not also the title.\n    + Skip
  blank lines at beginning of file. Resolves\n      Debian #611328.\n\n  * LaTeX reader:\n\n
  \   + Improved parsing of preamble.\n      Previously you'd get unexpected behavior
  on a document that\n      contained `\\begin{document}` in, say, a verbatim block.\n
  \   + Allow spaces between `\\begin` or `\\end` and `{`.\n    + Support `\\L` and
  `\\l`.\n    + Skip comments inside paragraphs.\n\n  * LaTeX writer:\n\n    + Escape
  strings in `\\href{..}`.\n    + In nonsimple tables, put cells in `\\parbox`.\n\n
  \ * OpenDocument writer:  don't print raw TeX.\n\n  * Markdown writer:\n\n    +
  Fixed bug in `Image`.  URI was getting unescaped twice!\n    + Avoid printing extra
  blank lines at the end if there are\n      no notes or references.\n\n  * LaTeX
  and ConTeXt: Escape `[` and `]` as `{[}` and `{]}`.\n    This avoids unwanted interpretation
  as an optional argument.\n\n  * ConTeXt writer: Fixed problem with inline code.
  \ Previously\n    `}` would be rendered `\\type{}}`. Now we check the string for
  '}' and '{'.\n    If it contains neither, use `\\type{}`; otherwise use `\\mono{}`\n
  \   with an escaped version of the string.\n\n  * `:` now allowed in HTML tags.
  Resolves Issue #274.\n\n\n\n## pandoc  1.6 (2010-07-24)\n\n+ New EPUB and HTML Slidy
  writers. (Issue #122)\n\n    - [EPUB] is a standard ebook format, used in Apple's
  iBooks for\n      the iPad and iPhone, Barnes and Noble's nook reader, the Sony\n
  \     reader, and many other devices, and by online ebook readers like\n      [bookworm].
  (Amazon's Kindle uses a different format, MobiPocket,\n      but EPUB books can
  easily be converted to Kindle format.) Now you\n      can write your book in markdown
  and produce an ebook with a single\n      command! I've put up a short [tutorial
  here].\n    - [Slidy], like S5, is a system for producing HTML+javascript slide
  shows.\n\n+ All input is assumed to be UTF-8, no matter what the locale and ghc\n
  \ version, and all output is UTF-8. This reverts to pre-1.5 behavior.\n  Also, a
  BOM, if present, is stripped from the input.\n\n+ Markdown now supports grid tables,
  whose cells can contain\n  arbitrary block elements. (Issue #43)\n\n+ Sequentially
  numbered example lists in markdown with `@` marker.\n\n+ Markdown table captions
  can begin with a bare colon and no longer need\n  to include the English word \"table.\"
  Also, a caption can now occur\n  either before or after the table. (Issue #227)\n\n+
  New command-line options:\n\n    - `--epub-stylesheet` allows you to specify a CSS
  file that will\n      be used to style your ebook.\n    - `--epub-metadata` allows
  you to specify metadata for the ebook.\n    - `--offline` causes the generated HTML
  slideshow to include all\n      needed scripts and stylesheets.\n    - `--webtex`
  causes TeX math to be converted to images using the\n      Google Charts API (unless
  a different URL is specified).\n    - `--section-divs` causes div tags to be added
  around each section\n      in an HTML document. (Issue #230, 239)\n\n+ Default behavior
  of S5 writer in standalone mode has changed:\n  previously, it would include all
  needed scripts and stylesheets\n  in the generated HTML; now, only links are included
  unless\n  the `--offline` option is used.\n\n+ Default behavior of HTML writer has
  changed. Between 1.2 and 1.5,\n  pandoc would enclose sections in div tags with
  identifiers on the\n  div tags, so that the sections can be manipulated in javascript.\n
  \ This caused undesirable interactions with raw HTML div tags. So,\n  starting with
  1.6, the default is to put the identifiers directly\n  on the header tags, and not
  to include the divs.  The `--section-divs`\n  option selects the 1.2-1.5 behavior.\n\n+
  API changes:\n\n    - `HTMLMathMethod`: Added `WebTeX`, removed `MimeTeX`.\n    -
  `WriterOptions`: Added `writerUserDataDir`, `writerSourceDirectory`,\n      `writerEPUBMetadata`
  fields. Removed `writerIncludeBefore`,\n      `writerIncludeAfter`.\n    - Added
  `headerShift` to `Text.Pandoc.Shared`.\n    - Moved parsing code and `ParserState`
  from `Text.Pandoc.Shared`\n      to a new module, `Text.Pandoc.Parsing`.\n    -
  Added `stateHasChapters` to `ParserState`.\n    - Added `HTMLSlideVariant`.\n    -
  Made `KeyTable` a map instead of an association list.\n    - Added accessors for
  `Meta` fields (`docTitle`, `docAuthors`, `docDate`).\n    - `Pandoc`, `Meta`, `Inline`,
  and `Block` have been given `Ord` instances.\n    - Reference keys now have a type
  of their own (`Key`), with its\n      own `Ord` instance for case-insensitive comparison.\n
  \   - Added `Text.Pandoc.Writers.EPUB`.\n    - Added `Text.Pandoc.UUID`.\n    -
  Removed `Text.Pandoc.ODT`, added `Text.Pandoc.Writers.ODT`.\n      Removed `saveOpenDocumentAsODT`,
  added `writeODT`.\n    - Added `Text.Pandoc.Writers.Native` and `writeNative`.\n
  \     Removed `prettyPandoc`.\n    - Added `Text.Pandoc.UTF8` for portable UTF8
  string IO.\n    - Removed `Text.Pandoc.Writers.S5` and the `writeS5` function.\n
  \     Moved `s5Includes` to a new module, `Text.Pandoc.S5`.\n      To write S5,
  you now use `writeHtml` with `writerSlideVariant`\n      set to `S5Slides` or `SlidySlides`.\n\n+
  Template changes.  If you use custom templates, please update them,\n  particularly
  if you use syntax highlighting with pandoc. The old HTML\n  templates hardcoded
  highlighting CSS that will no longer work with\n  the most recent version of highlighting-kate.\n\n
  \   - HTML template: avoid empty meta tag if no date.\n    - HTML template: Use
  default highlighting CSS from highlighting-kate\n      instead of hard-coding the
  CSS into the template.\n    - HTML template: insert-before text goes before the
  title, and\n      immediately after the `<body>` tag, as documented. (Issue #241)\n
  \   - Added slidy and s5 templates.\n    - Added amssymb to preamble of latex template.
  (github Issue 1)\n\n+ Removed excess newlines at the end of output. Note: because
  output\n  will not contain an extra newline, you may need to make adjustments\n
  \ if you are inserting pandoc's output into a template.\n\n+ In S5 and slidy, horizontal
  rules now cause a new slide, so you\n  are no longer limited to one slide per section.\n\n+
  Improved handling of code in man writer. Inline code is now monospace,\n  not bold,
  and code blocks now use .nf (no fill) and .IP (indented para).\n\n+ HTML reader
  parses `<tt>` as Code. (Issue #247)\n\n+ html+lhs output now contains bird tracks,
  even when compiled without\n  highlighting support. (Issue #242)\n\n+ Colons are
  now no longer allowed in autogenerated XML/HTML identifiers,\n  since they have
  a special meaning in XML.\n\n+ Code improvements in ODT writer.  Remote images are
  now replaced with\n  their alt text rather than a broken link.\n\n+ LaTeX reader
  improvements:\n\n    - Made latex `\\section`, `\\chapter` parsers more forgiving
  of whitespace.\n    - Parse `\\chapter{}` in latex.\n    - Changed `rawLaTeXInline`
  to accept `\\section`, `\\begin`, etc.\n    - Use new `rawLaTeXInline'` in LaTeX
  reader, and export `rawLaTeXInline`\n      for use in markdown reader.\n    - Fixes
  bug wherein `\\section{foo}` was not recognized as raw TeX\n      in markdown document.\n\n+
  LaTeX writer:  images are automatically shrunk if they would extend\n  beyond the
  page margin.\n\n+ Plain, markdown, RST writers now use unicode for smart punctuation.\n\n+
  Man writer converts math to unicode when possible, as in other writers.\n\n+ `markdown2pdf`
  can now recognize citeproc options.\n\n+ Command-line arguments are converted to
  UTF-8. (Issue #234)\n\n+ `Text.Pandoc.TeXMath` has been rewritten to use texmath's
  parser.\n  This allows it to handle a wider range of formulas. Also, if a formula\n
  \ cannot be converted, it is left in raw TeX; formulas are no longer\n  partially
  converted.\n\n+ Unicode curly quotes are left alone when parsing smart quotes. (Issue
  #143)\n\n+ Cabal file changes:\n\n    - Removed parsec < 3 restriction.\n    - Added
  'threaded' flag for architectures where GHC lacks a threaded\n      runtime.\n    -
  Use 'threaded' only for markdown2pdf; it is not needed for pandoc.\n    - Require
  highlighting-kate 0.2.7.\n\n+ Use explicit imports from `Data.Generics`. Otherwise
  we have a\n  conflict with the 'empty' symbol, introduced in syb >= 0.2. (Issue
  #237)\n\n+ New data files:  slidy/slidy.min.js, slidy/slidy.min.css, epub.css.\n\n[EPUB]:
  http://en.wikipedia.org/wiki/EPUB\n[Slidy]: http://www.w3.org/Talks/Tools/Slidy\n[bookworm]:
  http://bookworm.oreilly.com/\n[tutorial here]: http://johnmacfarlane.net/pandoc/epub.html\n\n##
  pandoc  1.5.1.1 (2010-03-29)\n\n+ Fixed header identifiers (uniqueIdent in Shared)
  so they\n  work as advertized in README and are guaranteed to be\n  valid XHTML
  names. Thanks to Xyne for reporting the bug.\n\n## pandoc  1.5.1 (2010-03-23)\n\n+
  Fixed treatment of unicode characters in URIs.\n+ Revised Setup.hs so it works with
  debian's build process.\n+ Fixed bug in OpenDocument writer that led to invalid\n
  \ XML for some input.\n\n## pandoc  1.5.0.1 (2010-03-21)\n\n+ HTML writer: Fixed
  error in math writer (with MathML option)\n  that caused an infinite loop for unparsable
  MathML.\n\n## pandoc  1.5 (2010-03-20)\n\n+ Moved repository to [github](http://github.com/jgm/pandoc).\n+
  New `--mathml` option, for display of TeX math as MathML.\n+ New `--data-dir` option,
  allowing users to specify a data\n  directory other than `~/.pandoc`.  Files placed
  in this directory\n  will be used instead of system defaults.\n+ New `--base-header-level`
  option. For example, `--base-header-level=2`\n  changes level 1 headers to level
  2, level 2 to level 3, etc.\n+ New 'plain' output format: plain text without pictures,
  hyperlinks,\n  inline formatting, or anything else that looks even vaguely\n  markupish.\n+
  Titles and authors in title blocks can now span multiple lines,\n  as long as the
  continuation lines begin with a space character.\n+ When given an absolute URI as
  a parameter, pandoc will fetch\n  the content via HTTP.\n+ The HTML reader has been
  made much more forgiving. It no\n  longer requires well-formed xhtml as input.\n+
  `html2markdown` has been removed; it is no longer necessary, given\n  the last two
  changes. `pandoc` can be used by itself to convert\n  web pages to markdown or other
  formats.\n+ `hsmarkdown` has also been removed.  Use `pandoc --strict` instead.\n
  \ Or symlink pandoc's executable to `hsmarkdown`; `pandoc` will then\n  behave like
  `hsmarkdown` used to.\n+ An image in a paragraph by itself is now rendered as a
  figure\n  in most writers, with the alt text as the caption.\n+ Incomplete support
  for reST tables (simple and grid). Thanks to\n  Eric Kow. Colspans and rowspans
  not yet supported.\n+ In mediawiki, links with relative URLs are now formatted as
  wikilinks.\n  Also, headers have been promoted: `= head =` is now level 1 instead
  of\n  level 2.\n+ The markdown reader now handles \"inverse bird tracks\" when parsing\n
  \ literate haskell.  These are used for haskell example code that\n  is not part
  of the literate program.\n+ The `-B` and `-A` options now imply `-s` and no longer
  work in\n  fragment mode.\n+ Headerless tables are now printed properly in all writers.\n
  \ In addition, tbody, thead, and cols are used in HTML and Docbook\n  tables.\n+
  Improved build system; removed obsolete Makefile.\n+ In LaTeX writer, `\\chapter`
  is now used instead of `\\section`.\n  when the documentclass is book, report, or
  memoir.\n+ Many small bug fixes. See [changelog] for details.\n\n## pandoc  1.4
  (2010-01-02)\n\n+ New template system replaces old headers, giving users much\n
  \ more control over pandoc's output in `--standalone` mode.\n  Added `--template`
  and `--variable` options.  The `--print-default-header`\n  option is now `--print-default-template`.
  \ See README under\n  \"Templates\" for details.\n+ The old `--custom-header` option
  should still work, but it has\n  been deprecated.\n+ New `--reference-odt` option
  allows users to customize styles\n  in ODT output.\n+ Users may now put custom templates,
  s5 styles, and a reference\n  ODT in the `~/.pandoc` directory, where they will
  override system\n  defaults. See README for details.\n+ Unicode is now used whenever
  possible in HTML and XML output. Entities\n  are used only where necessary (`&gt;`,
  `&lt;`, `&quot;`, `&amp;`).\n+ Authors and dates may now include formatting and
  notes.\n+ Added `--xetex` option for `pandoc` and `markdown2pdf`.\n+ Windows installer
  now includes highlighting support and\n  `markdown2pdf` and `hsmarkdown` wrappers.\n+
  Pandoc no longer requires Template Haskell, which should make\n  it more portable.\n+
  Pandoc can now be built on GHC 6.12, as well as earlier versions.\n+ See README
  for other small improvements and bug fixes.\n\n## pandoc  1.3 (2009-12-10)\n\n+
  Added `--id-prefix` option to help prevent duplicate\n  identifiers when you're
  generating HTML fragments.\n+ Added `--indented-code-classes` option, which specifies\n
  \ default highlighting syntax for indented code blocks.\n+ `--number-sections` now
  affects HTML output.\n+ Improved syntax for markdown definition lists.\n+ Better
  looking simple tables.\n+ Markdown tables without headers are now possible.\n+ New
  hard line break syntax:  backslash followed by newline.\n+ Improved performance
  of markdown reader by ~10% by eliminating the\n  need for a separate parsing pass
  for notes.\n+ Improved syntax highlighting for literate Haskell.\n+ Support for
  \"..code-block\" directive in RST reader.\n+ Windows binary now includes highlighting
  support.\n+ Many bug fixes and small improvements. See [changelog]\n  for details.\n\n##
  pandoc  1.2.1 (2009-07-18)\n\n+ Improved the efficiency of the markdown reader's\n
  \ abbreviation parsing (should give a big performance\n  boost with `--smart`).\n+
  HTML writer now wraps sections in divs with unique\n  identifiers, for easier manipulation.\n+
  Improved LaTeX reader's coverage of math modes.\n+ Added a portable Haskell version
  of markdown2pdf (thanks\n  to Paolo Tanimoto).\n+ Made `--strict` compatible with
  `--standalone` and `--toc.`\n+ Many other small improvements and bug fixes.\n  See
  [changelog] for details.\n\n## pandoc  1.2 (2009-03-01)\n\n+ Added support for literate
  Haskell. lhs support is triggered by\n  '+lhs' suffixes in formats. For example,
  'latex+lhs' is literate\n  Haskell LaTeX. '.lhs' files are treated by default as
  literate\n  markdown.\n+ Added `--email-obfuscation` option.\n+ Brought citeproc
  support up to date for citeproc-hs-0.2.\n+ Many bugs fixed. See [changelog] for
  details.\n\n## pandoc  1.1 (2008-11-06)\n\n+ New `--jsmath` option supporting use
  of pandoc with [jsMath].\n+ Classes on HTML table output for better CSS styling.\n+
  Windows installer no longer requires admin privileges.\n+ Many bugs fixed.  See
  [changelog] for details.\n\n## pandoc  1.0 (2008-09-13)\n\n+ New writers for MediaWiki,
  GNU Texinfo (thanks to Peter Wang),\n  OpenDocument XML (thanks to Andrea Rossato),
  and ODT (OpenOffice\n  document).\n+ New [delimited code blocks](README.html#delimited-code-blocks),\n
  \ with optional syntax highlighting.\n+ Reorganized build system:  pandoc can now
  be built using standard\n  Cabal tools.  It can be compiled on Windows without Cygwin.\n
  \ The tests can also be run without perl or unix tools.\n+ LaTeXMathML replaces
  ASCIIMathML for rendering math in HTML.\n+ Support for \"displayed\" math.\n+ Common
  abbreviations are now handled more intelligently, with\n  a non-breaking space (and
  not a sentence-ending space) after\n  the period.\n+ Code is -Wall clean.\n+ Many
  bug fixes and small improvements.  See [changelog] for\n  full details.\n\n## pandoc
  \ 0.46 (2008-01-08)\n\n+ Added a `--sanitize-html` option (and a corresponding parameter\n
  \ in `ParserState` for those using the pandoc libraries in programs).\n  This option
  causes pandoc to sanitize HTML (in HTML or Markdown\n  input) using a whitelist
  method. Possibly harmful HTML elements\n  are replaced with HTML comments. This
  should be useful in the\n  context of web applications, where pandoc may be used
  to convert\n  user input into HTML.\n+ Made -H, -A, and -B options cumulative: if
  they are specified\n  multiple times, multiple files will be included.\n+ Many bug
  fixes and small improvements.  See [changelog] for full\n  details.\n\n## pandoc
  \ 0.45 (2007-12-09)\n\n+ Many bug fixes and structural improvements.  See [changelog]
  for\n  full details.\n+ Improved treatment of math. Math is now rendered using unicode\n
  \ by default in HTML, RTF, and DocBook output. For more accurate\n  display of math
  in HTML, `--gladtex`, `--mimetex`, and `--asciimathml`\n  options are provided.
  See the [User's Guide](README.html#math) for\n  details.\n+ Removed support for
  box-style block quotes in markdown.\n+ More idiomatic ConTeXt output.\n+ Text wrapping
  in ConTeXt and LaTeX output.\n+ Pandoc now correctly handles all standard line endings\n
  \ (CR, LF, CRLF).\n+ New `--no-wrap` option that disables line wrapping and minimizes\n
  \ whitespace in HTML output.\n+ Build process is now compatible with both GHC 6.8
  and GHC 6.6.\n  GHC and GHC_PKG environment variables may be used to specify\n  which
  version of the compiler to use, when multiple versions are\n  installed.\n\n## pandoc
  0.44 (2007-09-03)\n\n  [ John MacFarlane ]\n\n  * Fixed bug in HTML writer:  when
  --toc was used, anchors were put around\n    headers, which is invalid XHTML (block
  content within inline element).\n    Now the anchors are put inside the header tags.
  \ Resolves Issue #23.\n\n  * Added xmlns attribute to html element in html writer
  tests.\n    This attribute is added by more recent versions of the\n    xhtml library
  (>= 3000), and is required for valid XHTML.\n\n  [ Recai Okta≈ü ]\n\n  * On configure,
  compile 'Setup.hs' to 'setup' and use 'setup' as the build\n    command instead
  of 'runhaskell', which, on some platforms (such as s390,\n    alpha, m68k), throws
  the following error:\n\n        runhaskell Setup.hs configure --prefix=/usr\n        ghc-6.6.1:
  not built for interactive use\n\n    This causes a serious FTBFS bug.  Closes: #440668.\n\n##
  pandoc 0.43 (2007-09-02)\n\n  [ John MacFarlane ]\n\n  * The focus of this release
  is performance.  The markdown parser\n    is about five times faster than in 0.42,
  based on benchmarks\n    with the TextMate manual.\n\n  * Main.hs: Replaced CRFilter
  and tabFilter with single function\n    tabFilter, which operates on the whole string
  rather than breaking\n    it into lines, and handles dos-style line-endings as well
  as tabs.\n\n  * Added separate LaTeX reader and native reader tests; removed\n    round-trip
  tests.\n\n  * Text.Pandoc.Shared:\n\n    + Removed tabsToSpaces and tabsInLine (they
  were used only in Main.hs.)\n    + General code cleanup (to elimante warnings when
  compiling with -Wall.)\n    + Added 'wrapped' function, which helps wrap text into
  paragraphs,\n      using the prettyprinting library.\n    + Rewrote charsInBalanced
  and charsInBalanced'.\n        - Documented restriction: open and close must be
  distinct characters.\n        - Rearranged options for greater efficiency.\n        -
  Bug fix: Changed inner call to charsInBalanced inside\n          charsInBalanced'
  to charsInBalanced'.\n    + anyLine now requires that the line end with a newline
  (not eof).\n      This is a harmless assumption, since we always add newlines to
  the\n      end of a block before parsing with anyLine, and it yields a 10% speed\n
  \     boost.\n    + Removed unnecessary 'try' in anyLine.\n    + Removed unneeded
  'try' from romanNumeral parser.\n    + Use notFollowedBy instead of notFollowedBy'
  in charsInBalanced.\n    + Removed unneeded 'try' in parseFromString.\n    + Removed
  unneeded 'try' from stringAnyCase.  (Now it behaves\n      like 'string'.)\n    +
  Changed definition of 'enclosed' in Text.Pandoc.Shared so that\n      'try' is not
  automatically applied to the 'end' parser. Added\n      'try' in calls to 'enclosed'
  where needed. Slight speed increase.\n\n  * Writers:\n\n    + Replaced individual
  wrapping routines in RST, Man, and Markdown\n      writers with 'wrapped' from Text.Pandoc.Shared.\n
  \   + Rewrote LaTeX writer to use the prettyprinting library,\n      so we get word
  wrapping, etc.\n    + Modified latex writer tests for new latex writer using prettyprinter.\n
  \   + Fixed bug in LaTeX writer: autolinks would not cause\n      `\\usepackage{url}`
  to be put in the document header. Also, changes\n      to state in enumerated list
  items would be overwritten.\n    + In Markdown writer, escape paragraphs that begin
  with ordered list\n      markers, so they don't get interpreted as ordered lists.\n\n
  \ * Text.Pandoc.Reades.LaTeX:\n\n    + Fixed bug in LaTeX reader, which wrongly
  assumed that the roman\n      numeral after \"enum\" in \"setcounter\" would consist
  entirely of\n      \"i\"s. 'enumiv' is legitimate.\n    + LaTeX command and environment
  names can't contain numbers.\n    + Rearranged order of parsers in inline for slight
  speed improvement.\n    + Added '`' to special characters and 'unescapedChar'.\n\n
  \ * Text.Pandoc.Readers.RST:\n\n    + Removed unneeded try's in RST reader; also
  minor code cleanup.\n    + Removed tabchar.\n    + Rearranged parsers in inline
  (doubled speed).\n\n  * Text.Pandoc.Readers.Markdown:\n\n    + Skip notes parsing
  if running in strict mode. (This yields a nice\n      speed improvement in strict
  mode.)\n    + Simplify autolink parsing code, using Network.URI to test for\n      URIs.
  Added dependency on network library to debian/control and\n      pandoc.cabal.\n
  \   + More perspicuous definition of nonindentSpaces.\n    + Removed unneeded 'try'
  in 'rawLine'.\n    + Combined linebreak and whitespace into a new whitespace parser,
  to\n      avoid unnecessary reparsing of space characters.\n    + Removed unnecessary
  'try' in 'codeBlock', 'ellipses', 'noteMarker',\n      'multilineRow', 'dashedLine',
  'rawHtmlBlocks'.\n    + Use lookAhead in parsers for setext headers and definition
  lists\n      to see if the next line begins appropriately; if not, don't waste\n
  \     any more time parsing.\n    + Don't require blank lines after code block.
  (It's sufficient to\n      end code block with a nonindented line.)\n    + Changed
  definition of 'emph': italics with '_' must not\n      be followed by an alphanumeric
  character. This is to help\n      prevent interpretation of e.g. `[LC_TYPE]: my_type`
  as\n      `[LC<em>TYPE]:my</em>type`.\n    + Improved Markdown.pl-compatibility
  in referenceLink: the two parts\n      of a reference-style link may be separated
  by one space, but not\n      more... [a] [link], [not]    [a link].\n    + Fixed
  markdown inline code parsing so it better accords with\n      Markdown.pl: the marker
  for the end of the code section is a clump\n      of the same number of `'s with
  which the section began, followed\n      by a non-` character. So, for example,\n
  \        ` h ``` i ` -> `<code>h ``` i</code>`.\n    + Split 'title' into 'linkTitle'
  and 'referenceTitle', since the\n      rules are slightly different.\n    + Rewrote
  'para' for greater efficiency.\n    + Rewrote link parsers for greater efficiency.\n
  \   + Removed redundant 'referenceLink' in definition of inline (it's\n      already
  in 'link').\n    + Refactored escapeChar so it doesn't need 'try'.\n    + Refactored
  hrule for performance in Markdown reader.\n    + More intelligent rearranging of
  'inline' so that most frequently\n      used parsers are tried first.\n    + Removed
  tabchar parser, as whitespace handles tabs anyway.\n\n  * Text.Pandoc.CharacterReferences:\n\n
  \   + Refactored.\n    + Removed unnecessary 'try's for a speed improvement.\n    +
  Removed unnecessary '&' and ';' from the entity table.\n\n  * Build process:\n\n
  \   + Makefile: Get VERSION from cabal file, not Main.hs.\n    + Modified MacPorts
  Portfile:\n        - Depend on haddock\n        - Build and install libraries and
  library documentation in\n          addition to pandoc executable\n        - Added
  template item for md5 sum in Portfile.in.\n        - Incorporated changes from MacPorts
  repository (r28278).\n    + FreeBSD port:  Don't try to generate distinfo in Makefile.\n
  \     It can be made using 'make makesum' in FreeBSD.\n    + Make both freebsd and
  macports targets depend on tarball.\n\n  * Website and documentation:\n\n    + Updated
  INSTALL instructions.\n    + Added pandocwiki demo to website.\n    + Removed local
  references to Portfile, since pandoc is now in the\n      MacPorts repository.\n\n##
  pandoc 0.42 (2007-08-26)\n\n  [ John MacFarlane ]\n\n  * Main.hs: Use utf8 conversion
  on the extra files loaded with\n    the -H, -C, -B, and -A options.  This fixes
  problems with unicode\n    characters in these files.\n\n  * Exposed Text.Pandoc.ASCIIMathML,
  since it is imported in\n    Text.Pandoc.Readers.HTML and without it we get a linking
  error when\n    using the library.\n\n  * Markdown reader:\n\n    + Added new rule
  for enhanced markdown ordered lists: if the list\n      marker is a capital letter
  followed by a period (including a\n      single-letter capital roman numeral), then
  it must be followed by\n      at least two spaces. The point of this is to avoid
  accidentally\n      treating people's initials as list markers: a paragraph might
  begin,\n      \"B. Russell was an English philosopher,\" and this shouldn't be\n
  \     treated as a list.  Documented change in README.\n    + Blocks that start
  with \"p. \" and a digit are no longer treated\n      as ordered lists (it's a page
  number).\n    + Added a needed 'try' to listItem.\n    + Removed check for a following
  setext header in endline.\n      A full test is too inefficient (doubles benchmark
  time), and the\n      substitute we had before is not 100% accurate.\n    + Don't
  use Code elements for autolinks if --strict specified.\n\n  * LaTeX writer:  When
  a footnote ends with a Verbatim environment, the\n    close } of the footnote cannot
  occur on the same line or an error occurs.\n    Fixed this by adding a newline before
  the closing } of every footnote.\n\n  * HTML writer:\n    + Removed incorrect \"{}\"
  around style information in HTML tables.\n      Column widths now work properly
  in HTML.\n    + If --strict option is specified (and --toc is not), don't include\n
  \     identifiers in headers, for better Markdown compatibility.\n\n  * Build process:\n\n
  \   + Separated $(web_dest) and website targets.\n    + In website, index.txt is
  now constructed from template index.txt.in.\n    + Added freebsd target to Markefile.
  This creates the freebsd Makefile\n      from Makefile.in, and creates distinfo.
  \ Removed Makefile and distinfo\n      from the repository.\n    + Added macport
  target to Makefile. Portfile is built from template\n      Portfile.in.\n    + Removed
  OSX package targets.  (Too many difficulties involving\n      dependencies on dynamic
  libraries.)\n    + More complete INSTALL instructions for all architectures.\n\n
  \ * Website:\n    + Added a programming demo, pandocwiki.\n\n  [ Recai Okta≈ü ]\n\n
  \ * Do not forget to close pandoc's ITP.  Closes: #391666\n\n## pandoc 0.41 (2007-08-19)\n\n
  \ [ John MacFarlane ]\n\n  * Fixed bugs in HTML reader:\n    + Skip material at
  end *only if* `</html>` is present (previously,\n      only part of the document
  would be parsed if an error was\n      found; now a proper error message is given).\n
  \   + Added new constant eitherBlockOrInline with elements that may\n      count
  either as block-level or as inline. Modified isInline and\n      isBlock to take
  this into account.\n    + Modified rawHtmlBlock to accept any tag (even an inline
  tag):\n      this is innocuous, because rawHtmlBlock is tried only if a regular\n
  \     inline element can't be parsed.\n    + Added a necessary 'try' in definition
  of 'para'.\n\n  * Fixed bug in markdown ordered list parsing.  The problem was that\n
  \   anyOrderedListStart did not check for a space following the\n    ordered list
  marker.  So in 'A.B. 2007' the parser would be\n    expecting a list item, but would
  not find one, causing an error.\n    Fixed a similar bug in the RST reader.  Resolves
  Issue #22.\n\n  * Refactored RST and Markdown readers using parseFromString.\n\n
  \ * LaTeX reader will now skip anything after \\end{document}.\n\n  * Fixed blockquote
  output in markdown writer: previously, block\n    quotes in indented contexts would
  be indented only in the first\n    line.\n\n  * Added note to INSTALL about variations
  in versions of the xhtml\n    library that can lead to failed tests (thanks to Leif
  LeBaron).\n\n## pandoc 0.4 (2007-01-16)\n\n  [ John MacFarlane ]\n\n  * Added two
  new output formats: groff man pages and ConTeXt. By\n    default, output files with
  extensions \".ctx\" and \".context\" are\n    assumed to be ConTeXt, and output
  files with single-digit extensions\n    are assumed to be man pages.\n\n  * Enhanced
  ordered lists (documented in README, under Lists):\n    + The OrderedList block
  element now stores information about\n      list number style, list number delimiter,
  and starting number.\n    + The readers parse this information when possible.\n
  \   + The writers use this information to style ordered lists.\n    + The enhancement
  can be disabled using the --strict option.\n\n  * Added support for tables (with
  a new Table block element). Two kinds\n    of tables are supported: a simple table
  with one-line rows, and a\n    more complex variety with multiline rows. All output
  formats are\n    supported, but only markdown tables are parsed at the moment. The\n
  \   syntax is documented in README.\n\n  * Added support for definition lists (with
  a new DefinitionList block\n    element). All output and input formats are supported.
  The syntax is\n    documented in README.\n\n  * Added support for superscripts and
  subscripts (with new Superscript\n    and Subscript inline elements).  All input
  and output\n    formats.  The syntax is documented in README.\n\n  * Added support
  for strikeout (with a new Strikeout inline element).\n    All input and output formats
  are supported. Thanks to Bradley Kuhn,\n    who contributed a patch. The syntax
  is documented in README. Resolves\n    Issue #18.\n\n  * Added a --toc|--table-of-contents
  option.  This causes an automatically\n    generated table of contents (or an instruction
  that creates one) to\n    be inserted at the beginning of the document. Not supported
  in S5,\n    DocBook, or man page writers.\n\n  * Modified the -m|--asciimathml option:\n\n
  \   + If an optional URL argument is provided, a link is inserted\n      instead
  of the contents of the ASCIIMathML.js script.\n    + Nothing is inserted unless
  the document actually contains\n      LaTeX math.\n\n  * Removed Blank block element
  as unnecessary.\n\n  * Removed Key and Note blocks from the Pandoc data structure.
  All\n    links are now stored as explicit links, and note contents are\n    stored
  with the (inline) notes.\n\n    + All link Targets are now explicit (URL, title)
  pairs; there\n      is no longer a 'Ref' target.\n    + Markdown and RST parsers
  now need to extract data from key and\n      note blocks and insert them into the
  relevant inline elements.\n      Other parsers have been simplified, since there
  is no longer any need\n      to construct separate key and note blocks.\n    + Markdown,
  RST, and HTML writers need to construct lists of\n      notes; Markdown and RST
  writers need to construct lists of link\n      references (when the --reference-links
  option is specified); and\n      the RST writer needs to construct a list of image
  substitution\n      references. All writers have been rewritten to use the State
  monad\n      when state is required.\n    + Several functions (generateReference,
  keyTable,\n      replaceReferenceLinks, replaceRefLinksBlockList, and some auxiliaries\n
  \     used by them) have been removed from Text.Pandoc.Shared, since\n      they
  are no longer needed. New functions and data structures\n      (Reference, isNoteBlock,
  isKeyBlock, isLineClump) have been\n      added. The functions inTags, selfClosingTag,
  inTagsSimple, and\n      inTagsIndented have been moved to the DocBook writer, since
  that\n      is now the only module that uses them. NoteTable is now exported\n      in
  Text.Pandoc.Shared.\n    + Added stateKeys and stateNotes to ParserState; removed
  stateKeyBlocks,\n      stateKeysUsed, stateNoteBlocks, stateNoteIdentifiers, stateInlineLinks.\n
  \   + Added writerNotes and writerReferenceLinks to WriterOptions.\n\n  * Added
  Text.Pandoc module that exports basic readers, writers,\n    definitions, and utility
  functions. This should export everything\n    needed for most uses of Pandoc libraries.
  The haddock documentation\n    includes a short example program.\n\n  * Text.Pandoc.ASCIIMathML
  is no longer an exported module.\n\n  * Added Text.Pandoc.Blocks module to help
  in printing markdown\n    and RST tables.  This module provides functions for working
  with\n    fixed-width blocks of text--e.g., placing them side by side, as\n    in
  a table row.\n\n  * Refactored to avoid reliance on Haskell's Text.Regex library,
  which\n    (a) is slow, and (b) does not properly handle unicode.  This fixed\n
  \   some strange bugs, e.g. in parsing S-cedilla, and improved performance.\n\n
  \   + Replaced 'gsub' with a general list function  'substitute'\n      that does
  not rely on Text.Regex.\n    + Rewrote extractTagType in HTML reader so that it
  doesn't use\n      regexs.\n    + In Markdown reader, replaced email regex test
  with a custom email\n      autolink parser (autoLinkEmail). Also replaced selfClosingTag
  regex\n      with a custom function isSelfClosingTag.\n    + Modified Docbook writer
  so that it doesn't rely on Text.Regex for\n      detecting 'mailto' links.\n    +
  Removed escapePreservingRegex and reamped entity-handling\n      functions in Text.Pandoc.Shared
  and Text.Pandoc.CharacterReferences to\n      avoid reliance on Text.Regex (see
  below on character reference\n      handling changes).\n\n  * Renamed Text.Pandoc.Entities
  as Text.Pandoc.CharacterReferences.\n\n  * Changed handling of XML entities.  Entities
  are now parsed (and unicode\n    characters returned) in the Markdown and HTML readers,
  rather than being\n    handled in the writers.  In HTML and Docbook writers, UTF-8
  is now used\n    instead of entities for characters above 128.  This makes the HTML
  and\n    DocBook output much more readable and more easily editable.\n\n    + Removed
  sgmlHexEntity, sgmlDecimalEntity, sgmlNamedEntity, and\n      sgmlCharacterEntity
  regexes from Text.Pandoc.Shared.\n    + Renamed escapeSGMLChar to escapeCharForXML.
  \ Added escapeStringForXML.\n      Moved both functions to Text.Pandoc.Writers.Docbook.\n
  \   + Added characterReference parser to Text.Pandoc.CharacterReferences.\n      This
  parses a string and return a unicode character.\n    + Rewrote decodeCharacterReferences
  to use the new parser instead of\n      Text.Regex.\n    + Added new charRef parser
  for Markdown and HTML, which replaces the\n      old 'entity' parser. Added '&'
  as a special character in Markdown reader.\n    + Modified HTML and Markdown readers
  to call decodeEntities on all raw\n      strings (e.g. authors, dates, link titles),
  to ensure that no\n      unprocessed entities are included in the native representation
  of\n      the document.  (In the HTML reader, most of this work is done by a\n      change
  in extractAttributeName.)\n    + In XML and Markdown output, escape unicode nonbreaking
  space as '&nbsp;',\n      since a unicode non-breaking space is impossible to distinguish
  visually\n      from a regular space.  (Resolves Issue #3.)\n    + Removed encodeEntitiesNumerical.\n
  \   + Use Data.Map for entityTable and (new) reverseEntityTable, for a\n      slight
  performance boost over the old association list.\n    + Removed unneeded decodeEntities
  from 'str' parser in HTML and\n      Markdown readers.\n\n  * Text.Pandoc.UTF8:
  \ Renamed encodeUTF8 to toUTF8, decodeUTF8 to\n    fromUTF8, for clarity.\n\n  *
  Replaced old haskell98 module names replaced by hierarchical module\n    names,
  e.g. List by Data.List.  Removed haskell98 from dependencies\n    in pandoc.cabal,
  and added mtl (needed for state monad). Substituted\n    xhtml for html.\n\n  *
  Refactored and cleaned up character escaping in writers, using\n    backslashEscapes
  and escapeStringUsing functions.\n\n  * Instead of adding `\\n\\n` to the end of
  an input string in Main.hs,\n    this is now done in the readers. This makes the
  libraries behave\n    the way you'd expect from the pandoc program. Resolves Issue
  #10.\n\n  * URLs and email addresses in autolinks are now typeset as Code.\n\n  *
  In Main.hs, changed putStr to putStrLn -- mainly because MacOS X\n    doesn't display
  the whole output unless there's a line ending.\n\n  * Major code cleanup in all
  modules, for greater consistency, concision,\n    and readability.\n\n  * HTML reader:\n\n
  \   + Fixed several bugs (extractTagType, attribute parsing).\n    + Remove Null
  blocks in lists of blocks when possible.\n    + Allow HTML comments as raw HTML
  inline.\n\n  * Markdown reader:\n\n    + Ordered list items may no longer begin
  with uppercase letters, or\n      letters greater than 'n'.  (This prevents first
  initials and page\n      reference, e.g. 'p. 400', from being parsed as beginning
  lists.)\n      Also, numbers beginning list items may no longer end with ')',\n
  \     which is now allowed only after letters.  Note: These changes\n      may cause
  documents to be parsed differently. Users should take\n      care in upgrading.\n
  \   + Changed autoLink parsing to conform better to Markdown.pl's\n      behavior.
  `<google.com>` is not treated as a link, but\n      `<http://google.com>`, `<ftp://google.com>`,
  and\n      `<mailto:google@google.com>` are.\n    + Cleaned up handling of embedded
  quotes in link titles.  Now these are\n      stored as a '\"' character, not as
  '&quot;'.\n    + Use lookAhead parser for the 'first pass' (looking for reference
  keys),\n      instead of parsing normally, then using setInput to reset input.  This\n
  \     yields a slight performance boost.\n    + Fixed several bugs in smart quote
  recognition.\n    + Fixed bug in indentSpaces (which didn't properly handle\n      cases
  with mixed spaces and tabs).\n    + Consolidated 'text', 'special', and 'inline'
  into 'inline'.\n    + Fixed bug which allowed URL and title to be separated by multiple
  blank\n      lines in links and reference keys.  They can be on separate lines but\n
  \     can't have blank lines between them.\n    + Correctly handle bracketed text
  inside inline footnotes and links,using\n      new function inlinesInBalanced.  Resolves
  Issue #14.\n    + Fixed bug in footnotes: links in footnotes were not being\n      processed.
  Solution: three-stage parse. First, get all the\n      reference keys and add information
  to state. Next, get all the\n      notes and add information to state. (Reference
  keys may be needed\n      at this stage.) Finally, parse everything else.\n    +
  Replaced named constants like 'emphStart' with literals.\n    + Removed an extra
  occurrence of escapedChar in definition of inline.\n\n  * RST reader:\n\n    + Allow
  the URI in a RST hyperlink target to start on the line\n      after the reference
  key.\n    + Added 'try' in front of 'string', where needed, or used a different\n
  \     parser.  This fixes a bug where ````` would not be correctly parsed as\n      a
  verbatim `.\n    + Fixed slow performance in parsing inline literals in RST reader.
  \ The\n      problem was that ``#`` was seen by 'inline' as a potential link or
  image.\n      Fix:  inserted 'notFollowedBy (char '`')' in link parsers.\n      Resolves
  Issue #8.\n    + Use lookAhead instead of getInput/setInput in RST reader.  Removed\n
  \     unneeded getState call, since lookAhead automatically saves and\n      restores
  the parser state.\n    + Allow hyperlink target URIs to be split over multiple lines,
  and\n      to start on the line after the reference. Resolves Issue #7.\n    + Fixed
  handling of autolinks.\n\n  * LaTeX reader:\n\n    + Replaced `choice [(try (string
  ...), ...]` idiom with `oneOfStrings`,\n      for clarity.\n    + Added clauses
  for tilde and caret. Tilde is `\\ensuremath{\\sim}`, and\n      caret is `\\^{}`,
  not `\\^` as before.\n    + Added parsing for `\\url`.\n    + Parse `\\texttt{}`
  as code, provided there's nothing fancy inside.\n\n  * HTML writer:\n\n    + Modified
  HTML writer to use the Text.XHtml library. This results\n      in cleaner, faster
  code, and it makes it easier to use Pandoc in\n      other projects, like wikis,
  which use Text.XHtml. Two functions are\n      now provided, writeHtml and writeHtmlString:
  the former outputs an\n      Html structure, the latter a rendered string. The S5
  writer is also\n      changed, in parallel ways (writeS5, writeS5String).\n    +
  The Html header is now written programmatically, so it has been\n      removed from
  the 'headers' directory. The S5 header is still\n      needed, but the doctype and
  some of the meta declarations have\n      been removed, since they are written programmatically.
  This change\n      introduces a new dependency on the xhtml package.\n    + Fixed
  two bugs in email obfuscation involving improper escaping\n      of '&' in the `<noscript>`
  section and in `--strict` mode. Resolves\n      Issue #9.\n    + Fixed another bug
  in email obfuscation: If the text to be obfuscated\n      contains an entity, this
  needs to be decoded before obfuscation.\n      Thanks to thsutton for the patch.
  Resolves Issue #15.\n    + Changed the way the backlink is displayed in HTML footnotes.\n
  \     Instead of appearing on a line by itself, it now generally\n      appears
  on the last line of the note.  (Exception:  when the\n      note does not end with
  a Plain or Para block.) This saves space\n      and looks better.\n    + Added automatic
  unique identifiers to headers:\n      - The identifier is derived from the header
  via a scheme\n        documented in README.\n      - WriterState now includes a
  list of header identifiers and a table\n        of contents in addition to notes.\n
  \     - The function uniqueIdentifiers creates a list of unique identifiers\n        from
  a list of inline lists (e.g. headers).\n      - This list is part of WriterState
  and gets consumed by blockToHtml\n        each time a header is encountered.\n    +
  Include CSS for .strikethrough class in header only if strikethrough\n      text
  appears in the document.\n    + If the 'strict' option is specified, elements that
  do not appear in\n      standard markdown (like definition lists) are passed through
  as\n      raw HTML.\n    + Simplified treatment of autolinks, using pattern matching
  instead of\n      conditionals.\n\n  * Markdown writer:\n\n    + Links in markdown
  output are now printed as inline links by default,\n      rather than reference
  links.  A --reference-links option has been added\n      that forces links to be
  printed as reference links.  Resolves Issue #4.\n    + Use autolinks when possible.
  \ Instead of `[site.com](site.com)`,\n      use `<site.com>`.\n\n  * LaTeX writer:\n\n
  \   + Rewrote to use the State monad. The preamble now includes only those\n      packages
  that are actually required, given the document's content.\n      Thus, for example,
  if strikeout is not used, ulem is not required.\n      Modified LaTeXHeader accordingly.\n
  \   + Modified LaTeX writer to insert `\\,` between consecutive quotes.\n    + Removed
  unused function tableRowColumnWidths.\n    + Simplified code for escaping special
  characters.\n    + Leave extra blank line after `\\maketitle`.\n    + Include empty
  `\\author{}` when no author specified to avoid LaTeX\n      errors.\n    + Include
  fancyvrb code in header only if needed -- that is, only\n      if there is actually
  code in a footnote.\n    + Use `\\url{}` for autolinks.\n    + Include [mathletters]
  option in ucs package, so that basic unicode\n      Greek letters will work correctly.\n\n
  \ * RST writer:  Force blank line before lists, so that sublists will\n    be handled
  correctly.\n\n  * Docbook writer:  Fixed a bug:  email links with text, like\n    [foo](me@bar.baz),
  were being incorrectly treated as autolinks.\n\n  * Removed Text.ParserCombinators.Pandoc
  and moved all its functions to\n    Text.Pandoc.Shared.\n\n  * Text.Pandoc.Shared:\n\n
  \   + Added defaultWriterOptions.\n    + Added writerTableOfContents to WriterOptions.\n
  \   + Added writerIgnoreNotes option to WriterOptions.  This is needed\n      for
  processing header blocks for a table of contents, since notes on\n      headers
  should not appear in the TOC.\n    + Added prettyprinting for native Table format.\n
  \   + Removed some unneeded imports.\n    + Moved escape and nullBlock parsers from\n
  \     Text.ParserCombinators.Pandoc, since the latter is for\n      general-purpose
  parsers that don't depend on Text.Pandoc.Definition.\n    + Moved isHeaderBlock
  from Text.Pandoc.Writers.HTML.\n    + Moved Element, headerAtLeast, and hierarchicalize
  from Docbook\n      writer, because HTML writer now uses these in constructing a
  table\n      of contents.\n    + Added clauses for new inline elements (Strikeout,
  Superscript,\n      Subscript) to refsMatch.\n    + Removed backslashEscape; added
  new functions escapeStringUsing and\n      backslashEscapes.\n    + Moved failIfStrict
  from markdown reader, since it is now used also\n      by the HTML reader.\n    +
  Added a 'try' to the definition of indentSpaces.\n    + In definition of 'reference',
  added check to make sure it's not a note\n      reference.\n    + Added functions:
  camelCaseToHyphenated, toRomanNumeral,\n      anyOrderedListMarker, orderedListmarker,
  orderedListMarkers,\n      charsInBalanced', withHorizDisplacement, romanNumeral\n
  \   + Fixed a bug in the anyLine parser. Previously it would parse an empty\n      string
  \"\", but it should fail on an empty string, or we get an error\n      when it is
  used inside \"many\" combinators.\n    + Removed followedBy' parser, replacing it
  with the lookAhead parser from\n      Parsec.\n    + Added some needed 'try's before
  multicharacter parsers, especially in\n      'option' contexts.\n    + Removed the
  'try' from the 'end' parser in 'enclosed', so that\n      'enclosed' behaves like
  'option', 'manyTill', etc.\n    + Added lineClump parser, which parses a raw line
  block up to and\n      including any following blank lines.\n    + Renamed parseFromStr
  to parseFromString.\n    + Added a 'try' to the 'end' parser in 'enclosed'.  This
  makes errors in\n      the use of 'enclosed' less likely. Removed some now-unnecessary
  'try's\n      in calling code.\n    + Removed unneeded 'try' in blanklines.\n    +
  Removed endsWith function and rewrote calling functions to use\n      isSuffixOf
  instead.\n    + Added >>~ combinator.\n    + Fixed bug in normalizeSpaces:  Space:Str
  \"\":Space should compress to\n      Space.\n\n  * Refactored runtests.pl; added
  separate tests for tables.\n\n  * Shell scripts:\n\n    + Added -asxhtml flag to
  tidy in html2markdown. This will\n      perhaps help the parser, which expects closing
  tags.\n    + Modified markdown2pdf to run pdflatex a second time if --toc or\n      --table-of-contents
  was specified; otherwise the table of\n      contents won't appear.\n    + Modified
  markdown2pdf to print a helpful message if the 'ulem'\n      LaTeX package is required
  and not found.\n\n  * Changes to build process:\n\n    + Dropped support for compilation
  with GHC 6.4.  GHC 6.6 or higher\n      is now required.\n    + Removed cabalize
  and Pandoc.cabal.in. The repository now contains\n      pandoc.cabal itself.\n    +
  Pandoc.cabal has been changed to pandoc.cabal, because HackageDB\n      likes the
  cabal file to have the same name as the tarball.\n    + Expanded and revised the
  package description in pandoc.cabal.\n      Revised the package synopsis.\n    +
  The tarball built by 'make tarball' now contains files built from\n      templates
  (including man pages and shell scripts), so pandoc can\n      be built directly
  using Cabal tools, without preprocessing.\n    + Executable binaries are now stripped
  before installing.\n    + Man pages are now generated from markdown sources, using
  pandoc's\n      man page writer.\n    + Use HTML version of README (instead of RTF)
  in Mac OS X installer.\n    + Instead of testing for the existence of a pandoc symlink
  in build-exec,\n      use ln -f.\n\n  * Documentation:\n\n    + Updated README and
  man pages with information on new features.\n    + Updated INSTALL instructions
  with some useful clarifications and\n      links.\n    + Updated web content.\n\n
  \ * Added FreeBSD port.\n\n  [ Recai Okta≈ü ]\n\n  * debian/control:\n\n    + Changed
  pandoc's Build-Depends to include libghc6-mtl-dev and\n      libghc6-xhtml-dev.
  \ Removed libghc6-html-dev.\n    + Suggest texlive-latex-recommended | tetex-extra
  instead of\n      tetex-bin.  This brings in fancyvrb and unicode support.\n\n\n##
  pandoc 0.3 (2007-01-05)\n\n  [ John MacFarlane ]\n\n  * Changes in pandoc options:\n\n
  \   + Allow options to follow or precede arguments.\n    + Changed '--smartypants'
  to '--smart' and adjusted symbols accordingly.\n    + Added '--strict' option.\n
  \   + Added '-o/--output' option.\n    + Added '--dump-args' and '--ignore-args'
  options (for use in wrappers).\n    + Modified '-v' and '-h' output to go to STDERR,
  not STDOUT, and return\n      error conditions.  This is helpful for writing wrappers.\n
  \   + Added copyright message to '-v' output, modeled after FSF messages.\n    +
  Reformatted usage message so that it doesn't wrap illegibly.\n    + Removed extra
  blanks after '-h' and '-D' output.\n\n  * Added docbook writer.\n\n  * Added implicit
  setting of default input and output format based\n    on input and output filename
  extensions.  These defaults are\n    overridden if explicit input and output formats
  are specified using\n    '-t', '-f', '-r', or '-w' options.  Documented in pandoc(1)
  man page\n    and README.\n\n  * Allow ordered list items to begin with (single)
  letters, as well\n    as numbers.  The list item marker may now be terminated either
  by\n    '.' or by ')'.  This extension to standard markdown is documented\n    in
  README.\n\n  * Revised footnote syntax.  (See README for full details.)  The\n    '[^1]'
  format now standard in markdown extensions is supported,\n    as are inline footnotes
  with this syntax: `^[My note.]`.\n    The earlier footnote syntax `^(1)` is no longer
  supported.\n\n  * Improved HTML representation of footnotes.  All footnotes\n    are
  now auto-numbered and appear in an ordered list at the\n    end of the HTML document.
  \ Since the default appearance is now\n    acceptable, the old footnote styles have
  been removed from the\n    HTML header.\n\n  * Bug fixes:\n\n    + Fixed a serious
  bug in the markdown, LaTeX, and RST readers.\n      These readers ran 'runParser'
  on processed chunks of text to handle\n      embedded block lists in lists and quotation
  blocks.  But then\n      any changes made to the parser state in these chunks was
  lost,\n      as the state is local to the parser.  So, for example, footnotes\n
  \     didn't work in quotes or list items.  The fix:  instead of calling\n      runParser
  on some raw text, use setInput to make it the input, then\n      parse it, then
  use setInput to restore the input to what it was\n      before.  This is shorter
  and more elegant, and it fixes the problem.\n    + Fixed bug in notFollowedBy' combinator
  (adding 'try' before\n      'parser').  Adjusted code that uses this combinator
  accordingly.\n    + Fixed bug in RTF writer that caused improper indentation on\n
  \     footnotes occurring in indented blocks like lists.\n    + Fixed parsing of
  metadata in LaTeX reader.  Now the title, author,\n      and date are parsed correctly.
  \ Everything else in the preamble\n      is skipped.\n    + Modified escapedChar
  in LaTeX reader to allow a `\\` at the end of a\n      line to count as escaped
  whitespace.\n    + Modified LaTeX reader to produce inline links rather than reference\n
  \     links.  Otherwise, links in footnotes aren't handled properly.\n    + Fixed
  handling of titles in links in Markdown reader, so that\n      embedded quotation
  marks are now handled properly.\n    + Fixed Markdown reader's handling of embedded
  brackets in links.\n    + Fixed Markdown reader so that it only parses bracketed
  material\n      as a reference link if there is actually a corresponding key.\n
  \   + Revised inline code parsing in Markdown reader to conform to\n      markdown
  standard.  Now any number of `s can begin inline code,\n      which will end with
  the same number of `s.  For example, to\n      have two backticks as code, write
  ``` `` ```.  Modified Markdown\n      writer accordingly.\n    + Fixed bug in text-wrapping
  routine in Markdown and RST writers.\n      Now LineBreaks no longer cause wrapping
  problems.\n    + Supported hexadecimal numerical entity references as well as\n
  \     decimal ones.\n    + Fixed bug in Markdown reader's handling of underscores
  and other\n      inline formatting markers inside reference labels:  for example,\n
  \     in '[A_B]: /url/a_b', the material between underscores was being\n      parsed
  as emphasized inlines.\n    + Changed Markdown reader's handling of backslash escapes
  so that\n      only non-alphanumeric characters can be escaped.  Strict mode\n      follows
  Markdown.pl in only allowing a select group of punctuation\n      characters to
  be escaped.\n    + Modified HTML reader to skip a newline following a `<br>` tag.\n
  \     Otherwise the newline will be treated as a space at the beginning\n      of
  the next line.\n\n  * Made handling of code blocks more consistent.  Previously,
  some\n    readers allowed trailing newlines, while others stripped them.\n    Now,
  all readers strip trailing newlines in code blocks. Writers\n    insert a newline
  at the end of code blocks as needed.\n\n  * Modified readers to make spacing at
  the end of output more consistent.\n\n  * Minor improvements to LaTeX reader:\n\n
  \   + `\\thanks` now treated like a footnote.\n    + Simplified parsing of LaTeX
  command arguments and options.\n      commandArgs now returns a list of arguments
  OR options (in\n      whatever order they appear).  The brackets are included, and\n
  \     a new stripFirstAndLast function is provided to strip them off\n      when
  needed.  This fixes a problem in dealing with \\newcommand\n      and \\newenvironment.\n\n
  \ * Revised RTF writer:\n\n    + Default font is now Helvetica.\n    + An `\\f0`
  is added to each `\\pard`, so that font resizing works\n      correctly.\n\n  *
  Moved handling of \"smart typography\" from the writers to the Markdown\n    and
  LaTeX readers.  This allows great simplification of the writers\n    and more accurate
  smart quotes, dashes, and ellipses.  DocBook can\n    now use `<quote>`.  The '--smart'
  option now toggles an option in\n    the parser state rather than a writer option.
  \ Several new kinds\n    of inline elements have been added: Quoted, Ellipses, Apostrophe,\n
  \   EmDash, EnDash.\n\n  * Changes in HTML writer:\n\n    + Include title block
  in header even when title is null.\n    + Made javascript obfuscation of emails
  even more obfuscatory,\n      by combining it with entity obfuscation.\n\n  * Changed
  default ASCIIMathML text color to black.\n\n  * Test suite:\n\n    + Added --strip-trailing-cr
  option to diff in runtests.pl, for\n      compatibility with Windows.\n    + Added
  regression tests with footnotes in quote blocks and lists.\n\n  * Makefile changes:\n\n
  \   + osx-pkg target creates a Mac OS X package (directory). New osx\n      directory
  contains files needed for construction of the package.\n    + osx-dmg target creates
  a compressed disk image containing the package.\n    + win-pkg target creates Windows
  binary package.\n    + tarball target creates distribution source tarball.\n    +
  website target generates pandoc's website automatically, including\n      demos.
  \ New 'web' directory contains files needed for construction\n      of the website
  (which will be created as the 'pandoc' subdirectory\n      of 'web').\n    + Makefile
  checks to see if we're running Windows/Cygwin; if so,\n      a '.exe' extension
  is added to each executable in EXECS.\n\n  * Removed all wrappers except markdown2pdf
  and html2markdown.\n\n  * Added new wrapper hsmarkdown, to be used as a drop-in
  replacement\n    for Markdown.pl.  hsmarkdown calls pandoc with the '--strict'\n
  \   option and disables other options.\n\n  * Added code to html2markdown that tries
  to determine the character\n    encoding of an HTML file, by parsing the \"Content-type\"
  meta tag.\n\n    + If the encoding can't be determined, then if the content is local,\n
  \     the local encoding is used; if it comes from a URL, UTF-8 is used\n      by
  default.\n    + If input is from STDIN, don't try to determine character encoding.\n
  \   + Encoding can be specified explicitly using '-e' option.\n\n  * Improved warning
  messages in wrappers:\n\n    + Print warning if iconv not available\n    + More
  user-friendly error messages in markdown2pdf, when\n      pdflatex fails.\n\n  *
  Code cleanup:\n\n    + Renamed 'Text/Pandoc/HtmlEntities' module to\n      'Text/Pandoc/Entities'.
  Also changed function names so as\n      not to be HTML-specific.\n    + Refactored
  SGML string escaping functions from HTML and Docbook\n      writers into Text/Pandoc/Shared.
  \ (escapeSGML, stringToSGML)\n    + Removed 'BlockQuoteContext' from ParserContext,
  as it isn't\n      used anywhere.\n    + Removed splitBySpace and replaced it with
  a general, polymorphic\n      splitBy function.\n    + Refactored LaTeX reader for
  clarity (added isArg function).\n    + Converted some CR's to LF's in src/ui/default/print.css.\n
  \   + Added license text to top of source files.\n    + Added module data for haddock
  to source files.\n    + Reformatted code for consistency.\n\n  * Rewrote documentation
  and man pages.  Split README into INSTALL\n    and README.\n\n  * Split LICENSE
  into COPYING and COPYRIGHT.\n\n  * Removed TODO, since we now maintain ToDo on the
  wiki.\n\n  * Made COPYRIGHT in top level a symlink to debian/copyright, to avoid\n
  \   duplication.\n\n  [ Recai Okta≈ü ]\n\n  * Revamped build process to conform to
  debian standards and created\n    a proper debian package.  Closes: #391666.\n\n
  \ * Modified build process to support GHC 6.6.\n\n    + The package can still be
  compiled using GHC 6.4.2, though because\n      of dependencies the \"make deb\"
  target works only with GHC 6.6+.\n    + The script 'cabalize' is used to create
  an appropriate\n      'Pandoc.cabal' from 'Pandoc.cabal.in', depending on the GHC
  and\n      Cabal versions.\n\n  * Refactored template processing (fillTemplates.pl).\n\n
  \ * Modified wrapper scripts to make them more robust and portable.\n    To avoid
  code duplication and ensure consistency, wrappers are\n    generated via a templating
  system from templates in src/wrappers.\n\n    + Wrappers now accept multiple filenames,
  when appropriate.\n    + Spaces and tabs allowed in filenames.\n    + getopts shell
  builtin is used for portable option parsing.\n    + Improved html2markdown's web
  grabber code, making it more robust,\n      configurable and verbose.  Added '-e',
  '-g' options.\n\n\n## pandoc 0.2 (2006-08-14)\n\n  * Fixed unicode/utf-8 translation\n\n##
  pandoc 0.1 (2006-08-14)\n\n  * Initial creation of debian package\n\n"
basic-deps:
  http-client: '>=0.4.30 && <0.8'
  ipynb: '>=0.2 && <0.3'
  exceptions: '>=0.8 && <0.11'
  haddock-library: '>=1.10 && <1.12'
  zip-archive: '>=0.4.3 && <0.5'
  JuicyPixels: '>=3.1.6.1 && <3.4'
  bytestring: '>=0.9 && <0.13'
  typst: '>=0.3.2.1 && <0.3.3'
  case-insensitive: '>=1.2 && <1.3'
  commonmark-pandoc: '>=0.2.1.3 && <0.3'
  doclayout: '>=0.4.0.1 && <0.5'
  SHA: '>=1.6 && <1.7'
  unix: '>=2.4 && <2.9'
  split: '>=0.2 && <0.3'
  base: '>=4.12 && <5'
  time: '>=1.5 && <1.14'
  blaze-markup: '>=0.8 && <0.9'
  aeson-pretty: '>=0.8.9 && <0.9'
  unicode-transforms: '>=0.3 && <0.5'
  gridtables: '>=0.1 && <0.2'
  text: '>=1.1.1.0 && <2.2'
  syb: '>=0.1 && <0.8'
  doctemplates: '>=0.11 && <0.12'
  filepath: '>=1.1 && <1.5'
  process: '>=1.2.3 && <1.7'
  network: '>=2.6 && <3.2'
  parsec: '>=3.1 && <3.2'
  data-default: '>=0.4 && <0.8'
  crypton-connection: '>=0.3.1 && <0.4'
  array: '>=0.5 && <0.6'
  pandoc-types: '>=1.23.1 && <1.24'
  xml: '>=1.3.12 && <1.4'
  containers: '>=0.6.0.1 && <0.7'
  jira-wiki-markup: '>=1.5.1 && <1.6'
  binary: '>=0.7 && <0.11'
  emojis: '>=0.1 && <0.2'
  base64: '>=0.4 && <0.5'
  commonmark-extensions: '>=0.2.4 && <0.3'
  skylighting: '>=0.14 && <0.15'
  xml-light: -any
  http-client-tls: '>=0.2.4 && <0.4'
  mime-types: '>=0.1.1 && <0.2'
  zlib: '>=0.5 && <0.7'
  network-uri: '>=2.6 && <2.8'
  mtl: '>=2.2 && <2.4'
  citeproc: '>=0.8.1 && <0.9'
  blaze-html: '>=0.9 && <0.10'
  pretty-show: '>=1.10 && <1.11'
  file-embed: '>=0.0 && <0.1'
  attoparsec: '>=0.12 && <0.15'
  commonmark: '>=0.2.4 && <0.3'
  temporary: '>=1.1 && <1.4'
  random: '>=1 && <1.3'
  deepseq: '>=1.3 && <1.6'
  scientific: '>=0.3 && <0.4'
  text-conversions: '>=0.3 && <0.4'
  unicode-collation: '>=0.1.1 && <0.2'
  tagsoup: '>=0.14.6 && <0.15'
  http-types: '>=0.8 && <0.13'
  pretty: '>=1.1 && <1.2'
  Glob: '>=0.7 && <0.11'
  aeson: '>=2.0.1.0 && <2.3'
  skylighting-core: '>=0.14 && <0.15'
  safe: '>=0.3.18 && <0.4'
  yaml: '>=0.11 && <0.12'
  vector: '>=0.12 && <0.14'
  directory: '>=1.2.3 && <1.4'
  texmath: '>=0.12.8.4 && <0.13'
all-versions:
- '0.4'
- '0.41'
- '0.42'
- '0.43'
- '0.44'
- '0.45'
- '0.46'
- '1.0'
- 1.0.0.1
- '1.1'
- '1.2'
- 1.2.1
- '1.3'
- '1.4'
- '1.5'
- 1.5.0.1
- 1.5.1
- 1.5.1.1
- '1.6'
- 1.6.0.1
- '1.8'
- 1.8.0.1
- 1.8.0.2
- 1.8.0.3
- 1.8.1
- 1.8.1.1
- 1.8.1.2
- 1.8.2
- 1.8.2.1
- '1.9'
- 1.9.0.2
- 1.9.0.3
- 1.9.0.4
- 1.9.0.5
- 1.9.1
- 1.9.1.1
- 1.9.1.2
- 1.9.2
- 1.9.3
- 1.9.4
- 1.9.4.1
- 1.9.4.2
- 1.9.4.3
- 1.9.4.4
- 1.9.4.5
- '1.10'
- 1.10.0.1
- 1.10.0.2
- 1.10.0.3
- 1.10.0.4
- 1.10.0.5
- 1.10.1
- '1.11'
- 1.11.1
- '1.12'
- 1.12.0.1
- 1.12.0.2
- 1.12.1
- 1.12.2
- 1.12.2.1
- 1.12.3
- 1.12.3.1
- 1.12.3.2
- 1.12.3.3
- 1.12.4
- 1.12.4.2
- '1.13'
- 1.13.0.1
- 1.13.1
- 1.13.2
- 1.13.2.1
- 1.14.1
- 1.15.0.2
- 1.15.0.3
- 1.15.0.4
- 1.15.0.5
- 1.15.0.6
- 1.15.1
- 1.15.1.1
- 1.15.2
- 1.15.2.1
- '1.16'
- 1.16.0.1
- 1.16.0.2
- '1.17'
- 1.17.0.1
- 1.17.0.2
- 1.17.0.3
- 1.17.1
- 1.17.2
- '1.18'
- '1.19'
- 1.19.1
- 1.19.2
- 1.19.2.1
- 1.19.2.2
- 1.19.2.3
- 1.19.2.4
- '2.0'
- 2.0.0.1
- 2.0.1
- 2.0.1.1
- 2.0.2
- 2.0.3
- 2.0.4
- 2.0.5
- 2.0.6
- '2.1'
- 2.1.1
- 2.1.2
- 2.1.3
- '2.2'
- 2.2.1
- 2.2.2
- 2.2.2.1
- 2.2.3
- 2.2.3.1
- 2.2.3.2
- '2.3'
- 2.3.1
- '2.4'
- '2.5'
- '2.6'
- '2.7'
- 2.7.1
- 2.7.2
- 2.7.3
- '2.8'
- 2.8.0.1
- 2.8.1
- '2.9'
- 2.9.1
- 2.9.1.1
- 2.9.2
- 2.9.2.1
- '2.10'
- 2.10.1
- '2.11'
- 2.11.0.1
- 2.11.0.2
- 2.11.0.4
- 2.11.1
- 2.11.1.1
- 2.11.2
- 2.11.3
- 2.11.3.1
- 2.11.3.2
- 2.11.4
- '2.12'
- '2.13'
- '2.14'
- 2.14.0.1
- 2.14.0.2
- 2.14.0.3
- 2.14.1
- 2.14.2
- '2.15'
- '2.16'
- 2.16.1
- 2.16.2
- '2.17'
- 2.17.0.1
- 2.17.1
- 2.17.1.1
- '2.18'
- '2.19'
- 2.19.1
- 2.19.2
- '3.0'
- 3.0.1
- '3.1'
- 3.1.1
- 3.1.2
- 3.1.3
- 3.1.4
- 3.1.5
- 3.1.6
- 3.1.6.1
- 3.1.6.2
- 3.1.7
- 3.1.8
- 3.1.9
author: John MacFarlane <jgm@berkeley.edu>
latest: 3.1.9
description-type: markdown
description: |
  <!-- Do not edit this file.  It is generated automatically from
  README.template and MANUAL.txt via the command:
  pandoc --lua-filter tools/update-readme.lua README.template -o README.md
  -->

  # Pandoc

  [![github
  release](https://img.shields.io/github/release/jgm/pandoc.svg?label=current+release)](https://github.com/jgm/pandoc/releases)
  [![hackage
  release](https://img.shields.io/hackage/v/pandoc.svg?label=hackage)](https://hackage.haskell.org/package/pandoc)
  [![homebrew](https://img.shields.io/homebrew/v/pandoc.svg)](https://formulae.brew.sh/formula/pandoc)
  [![stackage LTS
  package](https://stackage.org/package/pandoc/badge/lts)](https://www.stackage.org/lts/package/pandoc)
  [![CI
  tests](https://github.com/jgm/pandoc/workflows/CI%20tests/badge.svg)](https://github.com/jgm/pandoc/actions)
  [![license](https://img.shields.io/badge/license-GPLv2+-lightgray.svg)](https://www.gnu.org/licenses/gpl.html)
  [![pandoc-discuss on google
  groups](https://img.shields.io/badge/pandoc-discuss-red.svg?style=social)](https://groups.google.com/forum/#!forum/pandoc-discuss)

  ## The universal markup converter

  Pandoc is a [Haskell](https://haskell.org) library for converting from
  one markup format to another, and a command-line tool that uses this
  library.

  It can convert *from*

  <div id="input-formats">

  - `bibtex` ([BibTeX](https://ctan.org/pkg/bibtex) bibliography)
  - `biblatex` ([BibLaTeX](https://ctan.org/pkg/biblatex) bibliography)
  - `bits` ([BITS](https://jats.nlm.nih.gov/extensions/bits/) XML, alias
    for `jats`)
  - `commonmark` ([CommonMark](https://commonmark.org) Markdown)
  - `commonmark_x` ([CommonMark](https://commonmark.org) Markdown with
    extensions)
  - `creole` ([Creole 1.0](http://www.wikicreole.org/wiki/Creole1.0))
  - `csljson` ([CSL
    JSON](https://citeproc-js.readthedocs.io/en/latest/csl-json/markup.html)
    bibliography)
  - `csv` ([CSV](https://tools.ietf.org/html/rfc4180) table)
  - `tsv`
    ([TSV](https://www.iana.org/assignments/media-types/text/tab-separated-values)
    table)
  - `docbook` ([DocBook](https://docbook.org))
  - `docx` ([Word docx](https://en.wikipedia.org/wiki/Office_Open_XML))
  - `dokuwiki` ([DokuWiki markup](https://www.dokuwiki.org/dokuwiki))
  - `endnotexml` ([EndNote XML
    bibliography](https://support.clarivate.com/Endnote/s/article/EndNote-XML-Document-Type-Definition))
  - `epub` ([EPUB](http://idpf.org/epub))
  - `fb2`
    ([FictionBook2](http://www.fictionbook.org/index.php/Eng:XML_Schema_Fictionbook_2.1)
    e-book)
  - `gfm` ([GitHub-Flavored
    Markdown](https://help.github.com/articles/github-flavored-markdown/)),
    or the deprecated and less accurate `markdown_github`; use
    [`markdown_github`](https://pandoc.org/MANUAL.html#markdown-variants)
    only if you need extensions not supported in
    [`gfm`](https://pandoc.org/MANUAL.html#markdown-variants).
  - `haddock` ([Haddock
    markup](https://www.haskell.org/haddock/doc/html/ch03s08.html))
  - `html` ([HTML](https://www.w3.org/html/))
  - `ipynb` ([Jupyter
    notebook](https://nbformat.readthedocs.io/en/latest/))
  - `jats` ([JATS](https://jats.nlm.nih.gov) XML)
  - `jira`
    ([Jira](https://jira.atlassian.com/secure/WikiRendererHelpAction.jspa?section=all)/Confluence
    wiki markup)
  - `json` (JSON version of native AST)
  - `latex` ([LaTeX](https://www.latex-project.org/))
  - `markdown` ([Pandoc‚Äôs
    Markdown](https://pandoc.org/MANUAL.html#pandocs-markdown))
  - `markdown_mmd`
    ([MultiMarkdown](https://fletcherpenney.net/multimarkdown/))
  - `markdown_phpextra` ([PHP Markdown
    Extra](https://michelf.ca/projects/php-markdown/extra/))
  - `markdown_strict` (original unextended
    [Markdown](https://daringfireball.net/projects/markdown/))
  - `mediawiki` ([MediaWiki
    markup](https://www.mediawiki.org/wiki/Help:Formatting))
  - `man` ([roff man](https://man.cx/groff_man(7)))
  - `muse` ([Muse](https://amusewiki.org/library/manual))
  - `native` (native Haskell)
  - `odt` ([ODT](https://en.wikipedia.org/wiki/OpenDocument))
  - `opml` ([OPML](http://dev.opml.org/spec2.html))
  - `org` ([Emacs Org mode](https://orgmode.org))
  - `ris` ([RIS](https://en.wikipedia.org/wiki/RIS_(file_format))
    bibliography)
  - `rtf` ([Rich Text
    Format](https://en.wikipedia.org/wiki/Rich_Text_Format))
  - `rst`
    ([reStructuredText](https://docutils.sourceforge.io/docs/ref/rst/introduction.html))
  - `t2t` ([txt2tags](https://txt2tags.org))
  - `textile` ([Textile](https://textile-lang.com))
  - `tikiwiki` ([TikiWiki
    markup](https://doc.tiki.org/Wiki-Syntax-Text#The_Markup_Language_Wiki-Syntax))
  - `twiki` ([TWiki
    markup](https://twiki.org/cgi-bin/view/TWiki/TextFormattingRules))
  - `typst` ([typst](https://typst.app))
  - `vimwiki` ([Vimwiki](https://vimwiki.github.io))
  - the path of a custom Lua reader, see [Custom readers and
    writers](https://pandoc.org/MANUAL.html#custom-readers-and-writers)
    below

  </div>

  It can convert *to*

  <div id="output-formats">

  - `asciidoc` (modern [AsciiDoc](https://www.methods.co.nz/asciidoc/) as
    interpreted by [AsciiDoctor](https://asciidoctor.org/))
  - `asciidoc_legacy` ([AsciiDoc](https://www.methods.co.nz/asciidoc/) as
    interpreted by
    [`asciidoc-py`](https://github.com/asciidoc-py/asciidoc-py)).
  - `asciidoctor` (deprecated synonym for `asciidoc`)
  - `beamer` ([LaTeX beamer](https://ctan.org/pkg/beamer) slide show)
  - `bibtex` ([BibTeX](https://ctan.org/pkg/bibtex) bibliography)
  - `biblatex` ([BibLaTeX](https://ctan.org/pkg/biblatex) bibliography)
  - `chunkedhtml` (zip archive of multiple linked HTML files)
  - `commonmark` ([CommonMark](https://commonmark.org) Markdown)
  - `commonmark_x` ([CommonMark](https://commonmark.org) Markdown with
    extensions)
  - `context` ([ConTeXt](https://www.contextgarden.net/))
  - `csljson` ([CSL
    JSON](https://citeproc-js.readthedocs.io/en/latest/csl-json/markup.html)
    bibliography)
  - `docbook` or `docbook4` ([DocBook](https://docbook.org) 4)
  - `docbook5` (DocBook 5)
  - `docx` ([Word docx](https://en.wikipedia.org/wiki/Office_Open_XML))
  - `dokuwiki` ([DokuWiki markup](https://www.dokuwiki.org/dokuwiki))
  - `epub` or `epub3` ([EPUB](http://idpf.org/epub) v3 book)
  - `epub2` (EPUB v2)
  - `fb2`
    ([FictionBook2](http://www.fictionbook.org/index.php/Eng:XML_Schema_Fictionbook_2.1)
    e-book)
  - `gfm` ([GitHub-Flavored
    Markdown](https://help.github.com/articles/github-flavored-markdown/)),
    or the deprecated and less accurate `markdown_github`; use
    [`markdown_github`](https://pandoc.org/MANUAL.html#markdown-variants)
    only if you need extensions not supported in
    [`gfm`](https://pandoc.org/MANUAL.html#markdown-variants).
  - `haddock` ([Haddock
    markup](https://www.haskell.org/haddock/doc/html/ch03s08.html))
  - `html` or `html5` ([HTML](https://www.w3.org/html/),
    i.e.¬†[HTML5](https://html.spec.whatwg.org/)/XHTML [polyglot
    markup](https://www.w3.org/TR/html-polyglot/))
  - `html4` ([XHTML](https://www.w3.org/TR/xhtml1/) 1.0 Transitional)
  - `icml` ([InDesign
    ICML](https://wwwimages.adobe.com/www.adobe.com/content/dam/acom/en/devnet/indesign/sdk/cs6/idml/idml-cookbook.pdf))
  - `ipynb` ([Jupyter
    notebook](https://nbformat.readthedocs.io/en/latest/))
  - `jats_archiving` ([JATS](https://jats.nlm.nih.gov) XML, Archiving and
    Interchange Tag Set)
  - `jats_articleauthoring` ([JATS](https://jats.nlm.nih.gov) XML, Article
    Authoring Tag Set)
  - `jats_publishing` ([JATS](https://jats.nlm.nih.gov) XML, Journal
    Publishing Tag Set)
  - `jats` (alias for `jats_archiving`)
  - `jira`
    ([Jira](https://jira.atlassian.com/secure/WikiRendererHelpAction.jspa?section=all)/Confluence
    wiki markup)
  - `json` (JSON version of native AST)
  - `latex` ([LaTeX](https://www.latex-project.org/))
  - `man` ([roff man](https://man.cx/groff_man(7)))
  - `markdown` ([Pandoc‚Äôs
    Markdown](https://pandoc.org/MANUAL.html#pandocs-markdown))
  - `markdown_mmd`
    ([MultiMarkdown](https://fletcherpenney.net/multimarkdown/))
  - `markdown_phpextra` ([PHP Markdown
    Extra](https://michelf.ca/projects/php-markdown/extra/))
  - `markdown_strict` (original unextended
    [Markdown](https://daringfireball.net/projects/markdown/))
  - `markua` ([Markua](https://leanpub.com/markua/read))
  - `mediawiki` ([MediaWiki
    markup](https://www.mediawiki.org/wiki/Help:Formatting))
  - `ms` ([roff ms](https://man.cx/groff_ms(7)))
  - `muse` ([Muse](https://amusewiki.org/library/manual))
  - `native` (native Haskell)
  - `odt` ([OpenOffice text
    document](https://en.wikipedia.org/wiki/OpenDocument))
  - `opml` ([OPML](http://dev.opml.org/spec2.html))
  - `opendocument` ([OpenDocument](http://opendocument.xml.org))
  - `org` ([Emacs Org mode](https://orgmode.org))
  - `pdf` ([PDF](https://www.adobe.com/pdf/))
  - `plain` (plain text)
  - `pptx`
    ([PowerPoint](https://en.wikipedia.org/wiki/Microsoft_PowerPoint)
    slide show)
  - `rst`
    ([reStructuredText](https://docutils.sourceforge.io/docs/ref/rst/introduction.html))
  - `rtf` ([Rich Text
    Format](https://en.wikipedia.org/wiki/Rich_Text_Format))
  - `texinfo` ([GNU Texinfo](https://www.gnu.org/software/texinfo/))
  - `textile` ([Textile](https://textile-lang.com))
  - `slideous` ([Slideous](https://goessner.net/articles/slideous/) HTML
    and JavaScript slide show)
  - `slidy` ([Slidy](https://www.w3.org/Talks/Tools/Slidy2/) HTML and
    JavaScript slide show)
  - `dzslides` ([DZSlides](https://paulrouget.com/dzslides/) HTML5 +
    JavaScript slide show)
  - `revealjs` ([reveal.js](https://revealjs.com/) HTML5 + JavaScript
    slide show)
  - `s5` ([S5](https://meyerweb.com/eric/tools/s5/) HTML and JavaScript
    slide show)
  - `tei` ([TEI Simple](https://github.com/TEIC/TEI-Simple))
  - `typst` ([typst](https://typst.app))
  - `xwiki` ([XWiki
    markup](https://www.xwiki.org/xwiki/bin/view/Documentation/UserGuide/Features/XWikiSyntax/))
  - `zimwiki` ([ZimWiki
    markup](https://zim-wiki.org/manual/Help/Wiki_Syntax.html))
  - the path of a custom Lua writer, see [Custom readers and
    writers](https://pandoc.org/MANUAL.html#custom-readers-and-writers)
    below

  </div>

  Pandoc can also produce PDF output via LaTeX, Groff ms, or HTML.

  Pandoc‚Äôs enhanced version of Markdown includes syntax for tables,
  definition lists, metadata blocks, footnotes, citations, math, and much
  more. See the User‚Äôs Manual below under [Pandoc‚Äôs
  Markdown](https://pandoc.org/MANUAL.html#pandocs-markdown).

  Pandoc has a modular design: it consists of a set of readers, which
  parse text in a given format and produce a native representation of the
  document (an *abstract syntax tree* or AST), and a set of writers, which
  convert this native representation into a target format. Thus, adding an
  input or output format requires only adding a reader or writer. Users
  can also run custom pandoc filters to modify the intermediate AST (see
  the documentation for [filters](https://pandoc.org/filters.html) and
  [Lua filters](https://pandoc.org/lua-filters.html)).

  Because pandoc‚Äôs intermediate representation of a document is less
  expressive than many of the formats it converts between, one should not
  expect perfect conversions between every format and every other. Pandoc
  attempts to preserve the structural elements of a document, but not
  formatting details such as margin size. And some document elements, such
  as complex tables, may not fit into pandoc‚Äôs simple document model.
  While conversions from pandoc‚Äôs Markdown to all formats aspire to be
  perfect, conversions from formats more expressive than pandoc‚Äôs Markdown
  can be expected to be lossy.

  ## Installing

  Here‚Äôs [how to install pandoc](INSTALL.md).

  ## Documentation

  Pandoc‚Äôs website contains a full [User‚Äôs
  Guide](https://pandoc.org/MANUAL.html). It is also available
  [here](MANUAL.txt) as pandoc-flavored Markdown. The website also
  contains some [examples of the use of
  pandoc](https://pandoc.org/demos.html) and a limited [online
  demo](https://pandoc.org/try).

  ## Contributing

  Pull requests, bug reports, and feature requests are welcome. Please
  make sure to read [the contributor guidelines](CONTRIBUTING.md) before
  opening a new issue.

  ## License

  ¬© 2006-2023 John MacFarlane (jgm@berkeley.edu). Released under the
  [GPL](https://www.gnu.org/licenses/old-licenses/gpl-2.0.html "GNU General Public License"),
  version 2 or greater. This software carries no warranty of any kind.
  (See COPYRIGHT for full copyright and warranty notices.)
license-name: GPL-2.0-or-later
