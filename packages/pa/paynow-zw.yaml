homepage: https://github.com/trevorsibanda/paynow-zw#readme
changelog-type: markdown
hash: 879bf6a80a64fcd4ab2a9b44b90526f8bdbfcac3cd5bb6c17ed5a1f2f56b7955
test-bench-deps:
  unliftio: -any
  base: '>=4.7 && <5'
  hspec: -any
  paynow-zw: -any
maintainer: sibandatrevor@gmail.com
synopsis: A Haskell wrapper for the Paynow payment gateway
changelog: |
  # Changelog for `paynow-zw`

  All notable changes to this project will be documented in this file.

  The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),
  and this project adheres to the
  [Haskell Package Versioning Policy](https://pvp.haskell.org/).

  ## Unreleased

  ## 0.1.0.0 - YYYY-MM-DD
basic-deps:
  bytestring: '>=0.10.12 && <0.11'
  unliftio: '>=0.2.22 && <0.3'
  base: '>=4.7 && <5'
  text: '>=1.2.4 && <1.3'
  containers: '>=0.6.5 && <0.7'
  HTTP: '>=4000.4.1 && <4000.5'
  http-conduit: '>=2.3.8 && <2.4'
  http-types: '>=0.12.3 && <0.13'
  cryptohash: '>=0.11.9 && <0.12'
all-versions:
- 0.1.0.0
author: Trevor Sibanda
latest: 0.1.0.0
description-type: markdown
description: "# Paynow Zimbabwe Haskell SDK\n\nHaskell SDK for Paynow Zimbabwe's API\n\n#
  Prerequisites\n\nThis library has a set of prerequisites that must be met for it
  to work\n\n```Haskell\n{-# LANGUAGE OverloadedStrings #-}\nimport Network.Payments.Paynow
  as Paynow\n\n\t# Do stuff\n```\n\n---\n\n# Usage example\n\n```Haskell\ndefaultConfig
  :: PaynowConfig\ndefaultConfig = defaultProdConfig \"1201\"\n                    \"3e9fed89-60e1-4ce5-ab6e-6b1eb2d4f977\"\n
  \                   \"http://localhost:3000/result\"\n                    \"http://localhost:3000/return\"\n\n....\nclient
  <- newPaynowClient config\npayment <- newExpressCheckout (Ecocash \"0779800700\")
  \"45\" 37.50 \"email\" Nothing\nresult <- processTx payment\ncase result of\n   Left
  e => //handle err\n   Right r => //handle result r :: PaynowTxResult\n```\n\nCreate
  a new payment passing in the reference for that payment (e.g invoice id, or anything
  that you can use to identify the transaction and the user's email address\n\n---\n\n>
  Express Transactions\n\n```Haskell\ntestVMCDetails :: VMC\ntestVMCDetails = VMC
  (Card \"4111111111111111\" \"588\" \"2023\" \"Trevor Sibanda\") (BillingAddress
  \"Address Line 1\" \"Line 2\" \"City\" \"Zimbabwe\" Nothing)\n\n\npayment <- newExpressCheckout
  client (OneMoney \"0783102754\") testRef testAmount testEmail Nothing\n\npayment
  <- newExpressCheckout client (Ecocash \"0715900800\") testRef testAmount testEmail
  Nothing\n\npayment <- newExpressCheckout client (VisaMastercard testVMCDetails)
  testRef testAmount testEmail Nothing\n\n```\n\n# Checking transaction status\n\nThe
  SDK exposes a handy method that you can use to check the status of a transaction.
  Once you have instantiated the Paynow class.\n\n```Haskell\ntx <- newPollTransaction
  \"https://www.paynow.co.zw/Interface/CheckPayment/?guid=dece867e-5a40-4961-bf0e-5d691c2a97f8\"\nprocesstx
  tx >>= print\n```\n"
license-name: BSD-3-Clause
