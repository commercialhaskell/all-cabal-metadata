all-versions:
- 0.1.0.0
- 0.2.0.0
- 0.2.1.0
- 0.2.2.0
- 0.3.0.0
- 0.4.0.1
- 0.5.0.0
- 0.6.0.0
- 0.6.1.0
- 0.7.0.0
- 0.7.1.0
- 0.7.2.1
- 0.8.0.0
- 0.8.1.0
- 0.9.0.0
- 0.9.1.0
- 0.9.2.0
- 0.9.3.0
- 0.9.4.0
- 1.0.0.0
- 1.0.1.0
- 1.0.2.0
- 1.0.2.1
- 1.1.0
- 1.1.1
- 1.2.0
- 1.2.1
- 1.2.2
- 1.2.3
- 1.3.0
- 1.4.0
- 1.4.1
- 1.5.0
- 1.5.1
- 1.5.2
- 1.5.3
- 1.5.4
- 1.5.5
- 1.6.0
- 1.6.1
- 1.6.2
- 1.7.0
- 1.8.0
author: Laurent P. René de Cotret
basic-deps:
  aeson: '>=2 && <3'
  base: '>=4.11 && <5'
  bytestring: '>=0'
  containers: '>=0'
  data-default: '>=0'
  directory: '>=1.2.7 && <2'
  filepath: '>=1.4 && <2'
  gitrev: '>=1 && <2'
  hashable: '>=1 && <2'
  lifted-async: '>=0.10 && <1'
  lifted-base: '>=0.2 && <1'
  mtl: '>=2.2 && <3'
  optparse-applicative: '>=0.14 && <0.19'
  pandoc: '>=3 && <4'
  pandoc-plot: '>=0'
  pandoc-types: '>=1.23 && <1.24'
  shakespeare: '>=2.0 && <3'
  tagsoup: '>=0.14 && <1'
  template-haskell: '>2.7 && <3'
  text: '>=1 && <3'
  typed-process: '>=0.2.1 && <1'
  unix: '>=2.4 && <2.9'
  yaml: '>=0.8 && <1'
changelog: "# Change log\r\n\r\npandoc-plot uses [Semantic Versioning](http://semver.org/spec/v2.0.0.html)\r\n\r\n##
  Release 1.8.0\r\n\r\n* Added support for [Asymptote](https://asymptote.sourceforge.io/),
  thanks to a contribution by Michał J. Gajda (#61).\r\n\r\n## Release 1.7.0\r\n\r\n*
  Added support for the declarative diagram language [D2](https://d2lang.com/), thanks
  to a contribution by Sanchayan Maity (#60).\r\n* Added support for `optparse-applicative`
  v0.18.\r\n\r\n## Release 1.6.2\r\n\r\n* Fixed some imports which were removed in
  `mtl-2.3`.\r\n\r\n## Release 1.6.1\r\n\r\n* Fixed an issue where figure attributes
  were lost, which prevent other filters (e.g. pandoc-crossref) from working in conjunction
  with pandoc-plot.\r\n\r\n## Release 1.6.0\r\n\r\n* Support for pandoc 3. Support
  for older pandoc version has also been dropped (pandoc 2.19 and earlier).\r\n\r\n##
  Release 1.5.5\r\n\r\n* Fixed an issue where there was a race condition when rendering
  multiple identical figures (#53).\r\n\r\n## Release 1.5.4\r\n\r\n* Fixed an issue
  where graphviz plots in vector format were cropped when a DPI was specified (#40).\r\n\r\n##
  Release 1.5.3\r\n\r\n* Fixed an issue where the `tight_bbox` option for Matplotlib
  plots was ignored (#48).\r\n\r\n## Release 1.5.2\r\n\r\n* Overhauled the way executables
  are handled. This fixes an issue where executables specified in documents (rather
  than configuration) were ignored (#46).\r\n\r\n## Release 1.5.1\r\n\r\n* Figures
  with no captions (and no link to the source script), will now be shown as an image,
  without figure numbering (#37).\r\n\r\n## Release 1.5.0\r\n\r\n* Added support for
  [Sage](https://www.sagemath.org/) (#44).\r\n* Fixed an issue where the parsing of
  default save format from configuration was overly restrictive (#42).\r\n* Linux
  and Windows executables now built with GHC 9.2.\r\n\r\n## Release 1.4.1\r\n\r\n*
  Don't automatically defer javascript scripts when creating interactive figures (#39).\r\n\r\n##
  Release 1.4.0\r\n\r\n* The executable `pandoc-plot` now uses pandoc 2.17. Pandoc
  2.11+ are still supported.\r\n* Added support for `aeson` 2+.\r\n\r\n## Release
  1.3.0\r\n\r\n* The executable `pandoc-plot` is now aware of final conversion format.\r\n*
  Added a new function, `plotFilter`, which is aware of the pandoc's final conversion
  format. This allows for better defaults and error messages.\r\n* Deprecated `plotTransform`
  in favour of `plotFilter`. `plotTransform` will be removed in the next major update
  (v2+).\r\n* Save formats incompatible with toolkits will now show an appropriate
  error.\r\n* The build system is now based on `cabal-install` rather than `stack`.\r\n*
  Fixed an issue where some types of PlantUML diagrams (e.g. Gantt charts) would not
  be exported correctly (#30).\r\n\r\n## Release 1.2.3\r\n\r\n* Fixed an issue where
  MATLAB figures were not being saved in the right location (#27).\r\n* Releases are
  now completely taken care of via Github actions.\r\n\r\n## Release 1.2.2\r\n\r\n*
  Executables are now built using GHC 9.0.1\r\n* The executables are now built with
  Pandoc 2.14. Pandoc 2.11, 2.12, and 2.13 are still supported.\r\n\r\n## Release
  1.2.1\r\n\r\n* Added the ability to save plots as LaTeX directly from the GNUplot
  toolkit. To do this, simply set the output format to `latex`. The figure content
  will be embedded in the output document, which only makes sense for final conversion
  to LaTeX. For example:\r\n\r\n  ````markdown\r\n    ```{.gnuplot format=latex caption=\"This
  is a test.\"}\r\n    ...\r\n    ```\r\n  ````\r\n  This patch was contributed by
  Saku Laesvuori.\r\n\r\n## Release 1.2.0\r\n\r\n* Fixed an issue where code blocks
  nested in other structures were detected properly. For example, in the following
  LaTeX snippet, plots would not be detected properly:\r\n```latex\r\n\\begin{column}\r\n
  \ \\begin{minted}[]{matplotlib}\r\n  ...\r\n  \\end{minted}\r\n\\end{column}\r\n```\r\nNested
  figures are not correctly identified.\r\n\r\n* The executables are now built with
  Pandoc 2.13. Pandoc 2.11 and Pandoc 2.12 are still supported.\r\n\r\n## Release
  1.1.1\r\n\r\n* Error messages now include the source script and line numbers.\r\n*
  The executables are now built with Pandoc 2.12. Pandoc 2.11 is still supported.\r\n\r\n##
  Release 1.1.0\r\n\r\n* Added the [PlantUML](https://plantuml.com) toolkit (#18).
  Diagrams can be generated like so:\r\n\r\n  ````markdown\r\n\r\n  ```{.plantuml}\r\n
  \ @startuml\r\n  Bob->Alice : hello\r\n  @enduml\r\n  ```\r\n\r\n  ````\r\n* Changed
  versioning scheme to match more common Major.Minor.Bugfix.\r\n\r\n## Release 1.0.2.1\r\n\r\n*
  `pandoc-plot` will now only render at most `N` figures in parallel, where `N` is
  the number of available CPU cores.\r\n* Fixed an issue where error message would
  get mangled in strict-mode.\r\n\r\n## Release 1.0.2.0\r\n\r\n* Added the ability
  to run `pandoc-plot` in **strict mode**. By default, `pandoc-plot` leaves code blocks
  unchanged if a figure fails to be rendered.  In strict mode, `pandoc-plot` will
  immediately halt if it encounters a problem, such as a missing toolkit. You can
  activate strict mode via configuration:\r\n\r\n```yaml\r\nstrict: true\r\n```\r\n\r\n*
  Added the ability to set command-line arguments for interpreters via configuration.
  For example, if you want to run the Matplotlib toolkit with all warnings shown:\r\n\r\n```yaml\r\n#
  Possible parameters for the Matplotlib toolkit\r\nmatplotlib:\r\n  executable: python\r\n
  \ command_line_arguments: -Wa\r\n```\r\n\r\nOr if you want `julia` to use more than
  one thread:\r\n\r\n```yaml\r\n# Possible parameters for the Plotsjl toolkit\r\nplotsjl:\r\n
  \ executable: julia\r\n  command_line_arguments: --threads auto --optimize=0\r\n```\r\n\r\n*
  Fixed an issue where invoking the `plotsjl` toolkit on Windows would sometimes fail
  with the error: Unknown system error 50.\r\n* Fixed an issue with R-based toolkits
  on Windows not being detected properly.\r\n\r\n## Release 1.0.1.0\r\n\r\n* Added
  the ability to change the \"Source code\" label to other languages via configuration.\r\n*
  Added syntax highlighting to the linked source code.\r\n* Fixed an issue where code
  blocks with unicode symbols (e.g. greek letters) would trip up pandoc-plot (#16).\r\n\r\n##
  Release 1.0.0.0\r\n\r\n* Added support for Pandoc 2.11. Unfortunately, there is
  no way to support prior versions of Pandoc at the same time.\r\n* With release 1.0.0.0,
  `pandoc-plot` has stabilized. The Haskell library API will not change until version
  2+. \r\n\r\n## Release 0.9.4.0\r\n\r\n* Fixed an issue where the current working
  directory was changed. This prevented users from referring to files in scripts with
  relative paths (#2).\r\n\r\n## Release 0.9.3.0\r\n\r\n* Added executable caching:
  repeated usage of a particular toolkit will be faster because executables are only
  looked-for once.\r\n* Reverting the change from 0.8.1.0: internal machinery of `pandoc-plot`
  has been moved to the `Text.Pandoc.Filter.Plot.Internal` module, where there is
  no guarantee of backwards-compatibility after 1.0.0.\r\n* Removed the `makePlot`
  function, which could not take advantage of multithreading and other key features
  of `pandoc-plot`.\r\n* Fixed an issue where files required for tests were missing
  from source tarballs (#13).\r\n\r\n## Release 0.9.2.0\r\n\r\n* Fixed an issue where
  executables located on paths with spaces would not be invoked correctly (#12).\r\n*
  Fixed an issue where R-paths were not normalized correctly.\r\n* Fixed an issue
  where executables specified in configuration that did not exist would crash `pandoc-plot`.\r\n*
  Fixed an issue where some R-based toolkits appeared to be available, but were not.\r\n\r\n##
  Release 0.9.1.0\r\n\r\n* Added the `file` parameter, which allows the user to read
  figure content from a file instead of using the code block content in documents.
  This is especially useful for complex figures, where you might want to have the
  help of your tooling in an IDE, for instance. Here's an example:\r\n\r\n````markdown\r\n\r\n```{.matplotlib
  file=myplot.py}\r\n```\r\n\r\n````\r\n* Better error messages when specifying logger
  verbosity.\r\n* Cleaning output directories with `pandoc-plot clean` now follows
  configuration values for logging. \r\n* Fixed an issue where configuration in metadata
  did not get parsed properly.\r\n\r\n## Release 0.9.0.0\r\n\r\n* The `bokeh` toolkit
  now supports exporting plots as SVGs (#8).\r\n* Interactive plots relying on javascript
  scripts will now defer loading the scripts (#9). \r\n* Added the `dependencies`
  argument, which tells `pandoc-plot` what files are important to a particular figure
  (#10). If a file listed in `dependencies` changes (for example, a data file), `pandoc-plot`
  will re-render the associated figure.\r\n* Better heuristic to determine what `bokeh`
  plot to save. This allows the user to export plots like the [`bokeh.layouts` module](https://docs.bokeh.org/en/latest/docs/user_guide/layout.html#creating-layouts).\r\n*
  Added support for the `dpi` parameter in `graphviz` and `mathematica`.\r\n* Added
  support for MATLAB's new `exportgraphics` function introduced in MATLAB 2020a. Older
  versions fallback to using `saveas`.\r\n\r\n## Release 0.8.1.0\r\n\r\n* The module
  `Text.Pandoc.Filter.Plot.Internal` is no longer exposed; instead, everything relevant
  is exposed by the `Text.Pandoc.Filter.Plot` module.\r\n* Fixed an issue where script
  errors would be logged as debug messages.\r\n* Interactive plots are now embedded
  directly in output (#7).\r\n\r\n## Release 0.8.0.0\r\n\r\n* Added a new output format,
  HTML, to produce interactive plots. Not all renderers support it. You can try with
  Plotly/Python and Plotly/R as follows:\r\n\r\n````markdown\r\n\r\n```{.plotly_python
  format=html}\r\nimport plotly.express as px\r\ndf = px.data.election()\r\nfig =
  px.scatter_ternary(df, a=\"Joly\", b=\"Coderre\", c=\"Bergeron\")\r\n```\r\n\r\n````\r\n\r\n*
  Added a new toolkit, [`bokeh`](https://bokeh.org/). This toolkit can take advantage
  of the new HTML interactive output.\r\n* Added a new toolkit, [`plotsjl`](http://docs.juliaplots.org/latest/).\r\n*
  Separated the detailed information from `README.md` and into a proper `MANUAL.md`.
  This is now the information which will be shown with `pandoc-plot --manual`.\r\n*
  Exposed the `pandoc-plot` version via `Text.Pandoc.Filter.Plot.pandocPlotVersion`.\r\n\r\n##
  Release 0.7.2.1\r\n\r\n* Fixed an issue where the `pandoc` version was not parsed
  properly, giving rise to errors when running `pandoc-plot`.\r\n* Fixed an issue
  where logging errors were not always displayed.\r\n\r\n## Release 0.7.2.0\r\n\r\n*
  Removed dependency on `open-browser` package.\r\n* Starting with this version, `pandoc`
  2.8 and 2.9 are **no longer supported** due to a breaking API change in `pandoc`
  2.10.\r\n* Executables are now built with GHC 8.10.1.\r\n\r\n## Release 0.7.1.0\r\n\r\n*
  Better multi-threaded logging. Only one thread (the logging thread) performs IO
  on the log file. This prevents hang-ups when working on large documents. \r\n\r\n##
  Release 0.7.0.0\r\n\r\n* Added documentation on using `pandoc-plot` with LaTeX documents
  as well.\r\n* Added preliminary support for logging to `pandoc-plot`. You can turn
  on this feature in the configuration as follows:\r\n\r\n````yaml\r\nlogging:\r\n
  \   # Possible verbosity values: debug, error, warning, info, silent\r\n    # debug
  level shows all messages\r\n    # error level shows all but debug messages, etc.\r\n
  \   verbosity: info\r\n    \r\n    # OPTIONAL: log to file\r\n    # Remove line
  below to log to stderr\r\n    filepath: log.txt\r\n````\r\n\r\n* Removed dependencies
  `turtle`, `temporary`, `deepseq`, and `data-default-class`, resulting in improved
  build times by ~10%, and makes the executable smaller by 15-20%!\r\n\r\n## Release
  0.6.1.0\r\n\r\n* Made the functions `availableToolkits` and `unavailableToolkits`
  public.\r\n* Minor documentation fixes.\r\n* Executables are now built with GHC
  8.8.3.\r\n\r\n## Release 0.6.0.0\r\n\r\nNew toolkits:\r\n* Added support for the
  Plotly/R plotting library.\r\n* Added support for Graphviz.\r\n\r\nOther changes:\r\n*
  The determination of which figures to re-render or not has been improved. For example,
  changing the caption will not trigger a re-render of a figure anymore.\r\n* `pandoc-plot`
  will look for executables more thoroughly.\r\n* `pandoc-plot toolkits` will now
  show the exact executable that is being used, if possible.\r\n* Added a check when
  running the filter that the Pandoc version is at least 2.8. This is easier to understand
  that the default Pandoc warning on API incompatibility.\r\n* Added the ability to
  write the example configuration to an arbitrary file using `pandoc-plot write-example-config`.\r\n*
  Added the possibility to specify the configuration file via metadata. For example,
  in Markdown:\r\n\r\n    ```markdown\r\n    ---\r\n    title: My document\r\n    author:
  John Doe\r\n    plot-configuration: /path/to/file.yml\r\n    ---     \r\n    ```\r\n\r\nor
  on the command line:\r\n\r\n```bash\r\npandoc --filter pandoc-plot -M plot-configuration=/path/to/file.yml
  ...\r\n```\r\n* Added the ability to specify configuration file to the `pandoc-plot
  clean` and `pandoc-plot toolkits` commands.\r\n\r\n## Release 0.5.0.0\r\n\r\n* The
  `pandoc-plot` executable will now process documents in parallel. This should dramatically
  speed up processing of large documents with lots of figures. \r\nThis happens automatically
  through the function `plotTransform`.\r\n* Added a benchmarking suite.\r\n* Added
  `defaultConfiguration` so that people don't have to install the `data-default` package
  to get access to default configuration values. \r\n* Added a check for the `matplotlib`
  toolkit, preventing users from using `matplotlib.pyplot.show` in figures. This would
  halt `pandoc-plot`.\r\n\r\n## Release 0.4.0.1\r\n\r\n* Fixed an issue where the
  `pandoc-plot` executable could not be built outside of its git repository.\r\n\r\n##
  Release 0.4.0.0\r\n\r\n* Updated documentation.\r\n* Added a `--full-version` flag
  to the executable, which includes which version of pandoc/pandoc-types was used,
  as well as the git revision.\r\n* Added the `clean` command to the executable. This
  can be used to clean-up output files produced by pandoc-plot.\r\n* Changed the flag
  `--write-example-config` to the command `write-example-config`.\r\n* Added the top-level
  function `cleanOutputDir` to clean output of pandoc-plot. This is only accessible
  if `pandoc-plot` is used as a library.\r\n* Added a distinction between failure
  to render a figure because of a mistake, and failing to render a figure because
  the toolkit is not installed. `pandoc-plot` will give better error messages in the
  latter case.\r\n\r\n## Release 0.3.0.0\r\n\r\n* Added more examples.\r\n* Added
  MacOS binaries built via Azure pipelines.\r\n* BREAKING CHANGE: Parsing captions
  based on source file was not working. Captions format can be specified in the configuration
  file. This unfortunately changes the type signature of a few high-level functions.\r\n\r\n##
  Release 0.2.2.0\r\n\r\n* Fixed an issue where paths with spaces would not work (issue
  #2).\r\n* Added Linux binaries built via Azure pipelines.\r\n\r\n## Release 0.2.1.0\r\n\r\n*
  Improved documentation.\r\n\r\n## Release 0.2.0.0\r\n\r\n* Added support for gnuplot.\r\n*
  Added more tests for all toolkits.\r\n\r\n* Fixed an issue where the package could
  not be installed because a source file was not included in the cabal file.\r\n\r\n##
  Release 0.1.0.0\r\n\r\n* Initial release\r\n"
changelog-type: markdown
description: "# pandoc-plot \r\n\r\n## A Pandoc filter to generate figures from code
  blocks in documents\r\n\r\n[![license](https://img.shields.io/badge/license-GPLv2+-lightgray.svg)](https://www.gnu.org/licenses/gpl.html)
  \r\n\r\n`pandoc-plot` turns code blocks present in your documents (Markdown, LaTeX,
  etc.) into embedded figures, using your plotting toolkit of choice, including Matplotlib,
  ggplot2, MATLAB, Mathematica, and more.\r\n\r\n## Overview\r\n\r\nThis program is
  a [Pandoc](https://pandoc.org/) filter. It can therefore\r\nbe used in the middle
  of conversion from input format to output format,\r\nreplacing code blocks with
  figures.\r\n\r\nThe filter recognizes code blocks with classes that match plotting\r\ntoolkits.
  For example, using the `matplotlib` toolkit:\r\n\r\n```` markdown\r\n# My document\r\n\r\nThis
  is a paragraph.\r\n\r\n```{.matplotlib}\r\nimport matplotlib.pyplot as plt\r\n\r\nplt.figure()\r\nplt.plot([0,1,2,3,4],
  [1,2,3,4,5])\r\nplt.title('This is an example figure')\r\n```\r\n````\r\n\r\nPutting
  the above in `input.md`, we can then generate the plot and embed\r\nit in an HTML
  page:\r\n\r\n``` bash\r\npandoc --filter pandoc-plot input.md --output output.html\r\n```\r\n\r\nThe
  resulting `output.html` looks like this:\r\n\r\n```html\r\n<h1 id=\"my-document\">My
  document</h1>\r\n\r\n<p>This is a paragraph.</p>\r\n\r\n<figure>\r\n<img src=\"plots\\9671478262050082276.png\"
  />\r\n</figure>\r\n```\r\n\r\n## Supported toolkits\r\n\r\n`pandoc-plot` currently
  supports the following plotting toolkits\r\n(**installed separately**):\r\n\r\n
  \ - `matplotlib`: plots using the [matplotlib](https://matplotlib.org/)\r\n    Python
  library;\r\n  - `plotly_python` : plots using the\r\n    [plotly](https://plotly.com/python/)
  Python library;\r\n  - `plotly_r`: plots using the [plotly](https://plotly.com/r/)
  R\r\n    library\r\n  - `matlabplot`: plots using [MATLAB](https://www.mathworks.com/);\r\n
  \ - `mathplot` : plots using\r\n    [Mathematica](https://www.wolfram.com/mathematica/);\r\n
  \ - `octaveplot`: plots using [GNU\r\n    Octave](https://www.gnu.org/software/octave/);\r\n
  \ - `ggplot2`: plots using [ggplot2](https://ggplot2.tidyverse.org/);\r\n  - `gnuplot`:
  plots using [gnuplot](http://www.gnuplot.info/);\r\n  - `graphviz`: graphs using
  [Graphviz](http://graphviz.org/);\r\n  - `bokeh`: plots using the [Bokeh](https://bokeh.org/)
  visualization library;\r\n  - `plotsjl`: plots using the [Julia `Plots.jl`](https://docs.juliaplots.org/latest/)
  package;\r\n  - `plantuml`: diagrams using the [PlantUML](https://plantuml.com/)
  software suite;\r\n  - `sageplot`: plots using the [Sage](https://www.sagemath.org/)
  software system;\r\n  - `d2`: plots using [D2](https://d2lang.com/);\r\n  - `asymptote`:
  plots using [Asymptote](https://asymptote.sourceforge.io/).\r\n\r\nTo know which
  toolkits are useable on *your machine* (and which ones are\r\nnot available), you
  can check with the `toolkits` command:\r\n\r\n``` bash\r\npandoc-plot toolkits\r\n```\r\n\r\n**Wish
  your plotting toolkit of choice was available? Please [raise an\r\nissue](https://github.com/LaurentRDC/pandoc-plot/issues)\\!**\r\n\r\n##
  Documentation\r\n\r\nYou can find more information in the documentation, available
  either in the\r\nsource repository file `MANUAL.md`, on the [webpage](https://laurentrdc.github.io/pandoc-plot/MANUAL.html),
  or via the command `pandoc-plot --manual`.\r\n\r\n## Installation\r\n\r\n### Binaries
  and Installers\r\n\r\n[![Latest release](https://img.shields.io/github/v/release/LaurentRDC/pandoc-plot)](https://github.com/LaurentRDC/pandoc-plot/releases)\r\n\r\nWindows,
  Linux, and Mac OS binaries are available on the [GitHub release\r\npage](https://github.com/LaurentRDC/pandoc-plot/releases).
  There are\r\nalso Windows installers.\r\n\r\n### conda\r\n\r\n[![Conda Version](https://anaconda.org/conda-forge/pandoc-plot/badges/version.svg)](https://anaconda.org/conda-forge/pandoc-plot)\r\n\r\nLike
  `pandoc`, `pandoc-plot` is available as a package installable with\r\n[`conda`](https://docs.conda.io/en/latest/).
  [Click here to see the\r\npackage page](https://anaconda.org/conda-forge/pandoc-plot).\r\n\r\nTo
  install in the current environment:\r\n\r\n``` sh\r\nconda install -c conda-forge
  pandoc-plot\r\n```\r\n\r\n### Homebrew \r\n\r\n[![homebrew version](https://img.shields.io/homebrew/v/pandoc-plot)](https://formulae.brew.sh/formula/pandoc-plot)\r\n\r\n`pandoc-plot`
  is available as a package via [`Homebrew`](https://brew.sh/). [Click here to see
  the package page](https://formulae.brew.sh/formula/pandoc-plot#default). \r\n\r\nTo
  install:\r\n\r\n```sh\r\nbrew install pandoc-plot\r\n```\r\n\r\n### winget\r\n\r\nYou
  can install `pandoc-plot` from the [Windows Package\r\nManager](https://github.com/microsoft/winget-cli)
  `winget` (just like\r\n`pandoc`). To install:\r\n\r\n``` sh\r\nwinget install pandoc-plot\r\n```\r\n\r\n###
  Arch Linux\r\n\r\n[![AUR version](https://img.shields.io/aur/version/pandoc-plot-bin)](https://aur.archlinux.org/packages/pandoc-plot-bin/)\r\n\r\nYou
  can install `pandoc-plot` from the [archlinux user repository](https://aur.archlinux.org/packages/pandoc-plot-bin/)
  as `pandoc-plot-bin`. You can install using e.g. `yay`:\r\n\r\n```sh\r\nyay -S pandoc-plot-bin\r\n```\r\n\r\n###
  From Hackage/Stackage\r\n\r\n[![Hackage version](https://img.shields.io/hackage/v/pandoc-plot.svg)](http://hackage.haskell.org/package/pandoc-plot)\r\n\r\n`pandoc-plot`
  is available on\r\n[Hackage](http://hackage.haskell.org/package/pandoc-plot) and\r\n[Stackage](https://www.stackage.org/nightly/package/pandoc-plot).
  Using\r\nthe [`cabal-install`](https://www.haskell.org/cabal/) tool:\r\n\r\n```
  bash\r\ncabal update\r\ncabal install\r\n```\r\n\r\n### From source\r\n\r\nBuilding
  from source can be done using [`cabal`](https://www.haskell.org/cabal/):\r\n\r\n```
  bash\r\ngit clone https://github.com/LaurentRDC/pandoc-plot\r\ncd pandoc-plot\r\ncabal
  install # Alternatively, `stack install`\r\n```\r\n"
description-type: markdown
hash: d9b8d0e761c2383892e816fc6c8766cd6f0e4874f197819eafb5412d3b0ca9ba
homepage: https://github.com/LaurentRDC/pandoc-plot#readme
latest: 1.8.0
license-name: GPL-2.0-or-later
maintainer: Laurent P. René de Cotret
synopsis: A Pandoc filter to include figures generated from code blocks using your
  plotting toolkit of choice.
test-bench-deps:
  base: '>=0'
  containers: '>=0'
  directory: '>=0'
  filepath: '>=0'
  hspec-expectations: '>=0'
  pandoc-plot: '>=0'
  pandoc-types: '>=0'
  tasty: '>=0'
  tasty-hspec: '>=0'
  tasty-hunit: '>=0'
  text: '>=0'
