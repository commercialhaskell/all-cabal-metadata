homepage: http://github.com/ekmett/parsers/
changelog-type: markdown
hash: 6367145ea9cdb8382f407548a25d20d4435f437baef76f27e56cd5f1a3c1ec96
test-bench-deps:
  bytestring: -any
  base: ==4.*
  parsec: '>=3'
  parsers: -any
  quickcheck-instances: -any
  attoparsec: -any
  QuickCheck: -any
maintainer: Edward A. Kmett <ekmett@gmail.com>
synopsis: Parsing combinators
changelog: |
  0.12.10 [2019.05.02]
  --------------------
  * Make the `parsec` and `attoparsec` dependencies optional with the use of
    `Cabal` flags of the same names.

  0.12.9 [2018.07.04]
  -------------------
  * Add instances for the `Get` type from `binary`.
  * Add a `surroundedBy` function, as a shorthand for `between bra ket` when
    `bra` and `ket` are the same.

  0.12.8
  ------
  * Remove the `doctest` test suite, as there are no actual doctests anywhere
    in `parsers`.

  0.12.7
  ------
  * Add `sepByNonEmpty`, `sepEndByNonEmpty`, and `endByNonEmpty` to
    `Text.Parser.Combinators`
  * Fix sporadic `QuickCheck` test suite failures

  0.12.6
  ------
  * Add a library dependency in the `doctests` test suite

  0.12.5
  ------
  * Allow building with GHC 8.2
  * Add `mtl` instances for `Unspaced`, `Unhighlighted`, and `Unlined`
  * Revamp `Setup.hs` to use `cabal-doctest`. This makes it build
    with `Cabal-2.0`, and makes the `doctest`s work with `cabal new-build` and
    sandboxes.

  0.12.4
  ------
  * Allow `transformers` 0.5

  0.12.3
  ------
  * Build without warnings on GHC 7.10
  * Add `LookAheadParsing` instance for `attoparsec`
  * Documentation fixes
  * Fix out-of-bounds error in numeric escapes
  * Depend on `base-orphans` for `Applicative ReadP` on old `base`

  0.12.2
  ------
  * Added parsers for `scientific`, so we can parse decimal places without losing precision.

  0.12.1
  ----
  * Fixed the fixed behavior of `notFollowedBy`, which was showing internal state. This had led to unnecessary constraints on internal state that are now removed.

  0.12
  ------
  * Fixed the behavior of `notFollowedBy`. This necessitated removing the default implementation, and therefore required a major version bump.

  0.11.0.2
  --------
  * Allow `attoparsec` 0.12

  0.11
  ----
  * Mikhail Vorozhtsov refactored `attoparsec` to permit `parsers` instances. Instances added.

  0.10.3
  ------
  * Compatibility with ghc 7.8 roles

  0.10.2
  ------
  * Documentation fixes

  0.10.1.2
  --------
  * Updated to work with `text` 1.0

  0.10.1.1
  --------
  * 0.10.1 accidentally prevented the orphan instances for ReadP from compiling. Fxed.

  0.10.1
  ------
  * Fixed an issue with the expression parser, where it didn't `try` hard enough.
  * Added `satisfyRange`
  * Fixed a longstanding issue with the char escapes that we inherited from parsec, where ^A and the like were returning 0 not 1.

  0.10
  ----
  * Added proper upper bounds for PVP compliance
  * Switched to an applicative expression parser

  0.9
  ---
  * `instance MonadTrans Unlined`

  0.8.3
  -----
  * Fixed a _major_ performance regression in Text.Parser.Expression

  0.8.2
  -----
  * Added `scalaCommentStyle`.

  0.8.1
  -----
  * Text.Parser.Token.* is now Trustworthy

  0.8
  ---
  * Removed the need for `textLiteral`, `textLiteral'` and `identText` by using `fromString`. Use `stringLiteral`, `stringLiteral'`, and `ident` instead respectively.

  0.7.1
  -----
  * Added support for `Text`-based parsing.

  0.7
  ---
  * Added `Unlined` to support parsing solely within a line
  * Simplified `TokenParsing` instances

  0.6
  ---
  * Disallowed nested comments in 'javaCommentStyle'
  * More derived instances

  0.5.2
  -----
  * Bugfix in `commaSep1`.

  0.5.1
  -----
  * Taught zeroNumFloat about `0.`.
  * Bugfix in `buildExpressionParser`.

  0.5
  ---
  * Split out `LookAheadParsing` since it wasn't used by other combinators here and isn't supported by `attoparsec`.

  0.4.1
  -----
  * Added `token` to `TokenParsing`.

  0.4
  -----
  * Updated build system
  * Converted various style accessors to lenses and traversals
  * More aggressive inlining
  * Added CHANGELOG
basic-deps:
  base: '>=4.3 && <5'
  unordered-containers: '>=0.2 && <0.3'
  text: '>=0.10 && <1.3'
  parsec: '>=3.1 && <3.2'
  semigroups: '>=0.12 && <1'
  base-orphans: '>=0.3 && <1'
  containers: '>=0.4 && <0.7'
  binary: '>=0.7.2 && <1'
  charset: '>=0.3 && <1'
  mtl: '>=2.0.1 && <2.3'
  attoparsec: '>=0.12.1.4 && <0.15'
  transformers: '>=0.2 && <0.6'
  scientific: '>=0.3 && <0.4'
all-versions:
- '0.1'
- '0.2'
- '0.3'
- 0.3.2
- '0.4'
- 0.4.1
- '0.5'
- 0.5.2
- '0.6'
- '0.7'
- 0.7.1
- '0.8'
- 0.8.1
- 0.8.2
- 0.8.3
- '0.9'
- '0.10'
- 0.10.1
- 0.10.1.1
- 0.10.1.2
- 0.10.2
- 0.10.3
- '0.11'
- 0.11.0.1
- 0.11.0.2
- 0.11.0.3
- '0.12'
- 0.12.1
- 0.12.1.1
- 0.12.2.1
- 0.12.3
- 0.12.4
- 0.12.5
- 0.12.6
- 0.12.7
- 0.12.8
- 0.12.9
- 0.12.10
author: Edward A. Kmett
latest: 0.12.10
description-type: markdown
description: |+
  parsers
  =======

  [![Hackage](https://img.shields.io/hackage/v/parsers.svg)](https://hackage.haskell.org/package/parsers) [![Build Status](https://secure.travis-ci.org/ekmett/parsers.png?branch=master)](http://travis-ci.org/ekmett/parsers)

  Goals
  -----

  This library provides convenient combinators for working with and building parsing combinator libraries.

  Given a few simple instances, you get access to a large number of canned definitions.

  Contact Information
  -------------------

  Contributions and bug reports are welcome!

  Please feel free to contact me through github or on the #haskell IRC channel on irc.freenode.net.

  -Edward Kmett

license-name: BSD-3-Clause
