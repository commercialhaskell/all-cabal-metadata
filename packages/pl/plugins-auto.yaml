all-versions:
- 0.0.1
- 0.0.2
- 0.0.3
- 0.0.4
author: Happstack team, HAppS LLC and MarketPsych Advisor LLC
basic-deps:
  base: '>=3 && <5'
  containers: '>=0'
  filepath: '>=0'
  hinotify: '>=0.3.2'
  mtl: '>=0'
  plugins: '>=1.5.1.4'
  template-haskell: '>=0'
changelog: ''
changelog-type: ''
description: |-
  This library provides support for automatically recompiling and reloading
  modules into your programs when the source code is modified.

  Any program called ghc in your PATH will be used for recompiling.

  > module Main where
  > import System.IO           (hSetBuffering,stdout,BufferMode(..))
  > import System.Plugins.Auto (withMonadIO,initPlugins)
  > import Answer
  >
  > main :: IO ()
  > main = do ph<-initPlugins
  >         hSetBuffering stdout NoBuffering
  >         putStrLn "This program interacts with you in a loop."
  >         putStrLn "Type something, and the program will respond when you hit the Enter Key."
  >         putStrLn "Modify Answer.hs while interacting and you should see the answers"
  >         putStrLn "change accordingly."
  >         let interactiveLoop = prompt ph >> interactiveLoop
  >         interactiveLoop
  > where
  >   prompt ph = do
  >      putStr "> "
  >      input <- getLine
  >      $(withMonadIO 'getAnswer) ph notLoaded$ \errs getAnswer ->
  >          mapM_ putStrLn errs  >> getAnswer input
  >
  >   notLoaded errs =
  >      if null errs then putStrLn "Plugin not loaded yet."
  >        else putStrLn "Errors found:" >> mapM_ (putStrLn . ("  "++)) errs
  >               >> putStrLn "Try fixing the errors and come back here."

  > module Answer where
  >
  > getAnswer :: String -> IO ()
  > getAnswer input = putStrLn ("What you typed: "++input)
description-type: haddock
hash: 7f69aea54fd16c51f4950a17f7c874ec7bf1305f2694bfdfaebda23cad7334da
homepage: ''
latest: 0.0.4
license-name: BSD-3-Clause
maintainer: Happstack team <happs@googlegroups.com>
synopsis: Automatic recompilation and reloading of haskell modules.
test-bench-deps:
  base: '>=0'
  directory: '>=0'
  process: '>=0'
