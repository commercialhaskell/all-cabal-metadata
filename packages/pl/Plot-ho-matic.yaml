all-versions:
- 0.1.0.0
- 0.2.0.0
- 0.4.0.0
- 0.4.0.1
- 0.4.0.2
- 0.4.0.3
- 0.4.0.4
- 0.5.0.0
- 0.5.0.1
- 0.5.0.2
- 0.5.0.3
- 0.5.0.4
- 0.5.0.5
- 0.6.0.0
- 0.7.0.0
- 0.7.0.1
- 0.8.0.0
- 0.9.0.0
- 0.9.0.1
- 0.9.0.2
- 0.9.0.3
- 0.9.0.4
- 0.9.0.5
- 0.9.0.6
- 0.9.0.7
- 0.9.0.8
- 0.9.0.9
- 0.9.0.10
- 0.10.0.0
- 0.10.1.0
- 0.11.0.0
- 0.11.1.0
- 0.11.2.0
- 0.12.0.0
- 0.12.1.0
- 0.12.2.0
- 0.12.2.1
- 0.12.2.2
- 0.12.2.3
author: Greg Horn
basic-deps:
  Chart: '>=1.1'
  Chart-cairo: '>=1.1'
  Plot-ho-matic: '>=0'
  base: '>=4.6.0.0 && <5'
  bytestring: '>=0'
  cairo: '>=0'
  cereal: '>=0'
  colour: '>=0'
  containers: '>=0'
  data-default-class: '>=0'
  generic-accessors: '>=0.7.0.0'
  glib: '>=0'
  gtk3: '>=0.14.2'
  lens: '>=0'
  text: '>=0'
  time: '>=0'
  transformers: '>=0'
  vector: '>=0'
changelog: |
  HEAD
  ---
  * RTS stats compatability
  * upgrade stack LTS

  0.12.2.0
  ---
  * add a diff button to setHo

  0.12.1.0
  ---
  * "refresh" clears upstream version so you can see if you get a response

  0.12.0.0
  ---
  * optional configuration data (SetHo)
  * configurable: allow disabling autocommit (SetHo)
  * configurable: how to show Double/Float (default is now 'show') (SetHo)
  * redraw plots upon resetting history (PlotHo)

  0.11.{1,2}.0
  ---
  * make settings aware of message counter

  0.11.0.0
  ---
  * newHistoryChannel' can now take meta without data

  0.10.1.0
  ---
  * set default xaxis types
  * move reset axis range buttons higher

  0.10.0.0
  ---
  * Better error messages when the "impossible" happens :b
  * Also combine partial common prefixes for plot titles/legends
  * Replace the Plotter monad with a monomorphic (GADT) Channel type.
  * Major reorganization to trigger off of GHC runtime instead of GTK events
  * Require non-threaded RTS
  * Plot all channels on each graph

  0.9.0.10
  ---
  * Fix a nasty space leak

  0.9.0.9
  ---
  * Add option to remember the min/max ranges past the view window

  0.9.0.8
  ---
  * Make title text smaller

  0.9.0.7
  ---
  * Put scrolledWindow inside expander

  0.9.0.6
  ---
  * Fix regression where signal selectors weren't growing
  * rename {options -> opt, signals -> sig} to save space

  0.9.0.5
  ---
  * smaller minimum plot size
  * use correct gtk column packing function

  0.9.0.4
  ---
  * code cleanup
  * use Gtk draw signal instead of expose signal (fixes buggy behavior)
  * more understandable and maintainable concurrency strategy
  * change default max history length to 500

  0.9.0.3
  ---
  * initial settings selector box is big enough to see some fields
  * combo box and text entry now share "staged" column

  0.9.0.2
  ---
  * Add autocommit toggle
  * Add "take upstream" button
  * Implemented saving/loading files

  0.9.0.1
  ---
  * workaround issue where toggling expander hides the plot

  0.9.0.0
  ---
  * generic-accessors 0.6.0.0 compatibility
  * rewrite settings app to use dynamic data
  * upgrade to GTK3

  0.8.0.0
  ---
  * Switch from Tree ([String], String, Maybe (a -> [[(Double, Double)]]))
           to   Tree ([String], Either String (a -> [[(Double, Double)]]))

  0.7.0.1
  ---
  * Make the list of channels a scrollable thing.

  0.7.0.0
  ---
  * Better legend and title.

  0.5.0.5
  ---
  * Compatability with generic-accessors 0.2

  0.5.0.4
  ---
  * Performance improvement

  0.5.0.1
  ---
  * Hierarchical visibility clicking and inconsistent state
  * Merge new signal tree with old

  0.5.0.0
  ---
  * Use Accessors from generic-accessors package
  * Major performance improvements (only draw new data)
  * Both "history" and custom plot interfaces
  * Unify this package with the dynobud plotter

  0.4.0.4
  ---
  remove Generic requirement for some Lookup instances

  0.4
  ---
  * Performance improvements
  * Safer monadic API
  * More general plottable types

  0.3 (Unreleased development version)
  ---
  * switch from Template Haskell to GHC.Generics

  0.2
  ---
  * Cleaner API

  0.1
  ---
  * Initial release (moved from rawesome repo)
changelog-type: markdown
description: |
  Plot-ho-matic (and Set-ho-matic)
  ==

  [![Hackage](https://img.shields.io/hackage/v/Plot-ho-matic.svg)](https://hackage.haskell.org/package/Plot-ho-matic) [![Build Status](https://travis-ci.org/ghorn/Plot-ho-matic.png?branch=master)](https://travis-ci.org/ghorn/Plot-ho-matic)

  Plot-ho-matic is a GUI for high-performance real-time plotting with a convenient TreeView interface for
  selecting which elements to draw from a data structure. The focus is on ease of use, with optional advanced interfaces for more features.

  ![Plot-ho-matic in action](/../screenshots/screenshots/plotho_example.png?raw=true "Plot-ho-matic example")

  The sister library Set-ho-matic is a GUI for editing haskell data and sending those changes to some running program. It can also query the program for it's latest data and has save and load features.

  ![Set-ho-matic in action](/../screenshots/screenshots/setho_example.png?raw=true "Set-ho-matic example")

  Both Plot-ho-matic and Set-ho-matic rely heavily on [generic-accessors](http://hackage.haskell.org/package/generic-accessors) which uses GHC.Generics to create trees from haskell data.

  # usage
  See the hackage docs starting with the main [PlotHo](http://hackage.haskell.org/package/Plot-ho-matic/docs/PlotHo.html) module for documentation.
  There is also an [examples](https://github.com/ghorn/Plot-ho-matic/tree/master/examples) folder in the git repository.

  # FAQ
  "user error: out of memory"
  If you get this ^ error on OSX your cairo/pango/gtk may be linked to an XQuartz library.
   Add --extra-lib-dirs=/usr/local/lib (or wherever the correct libraries are) to your .cabal/config

  ==
  Special thanks to Chart and gtk2hs, which do all the heavy lifting.
description-type: markdown
hash: d0aae1bd1375a2e11612ac5806de7f2e49d2d55271e13974af7417a1e696b16c
homepage: ''
latest: 0.12.2.3
license-name: BSD-3-Clause
maintainer: gregmainland@gmail.com
synopsis: Real-time line plotter for generic data
test-bench-deps: {}
