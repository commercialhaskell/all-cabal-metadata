all-versions:
- '0.1'
author: Andreas Hammar
basic-deps:
  base: '>=4 && <5'
  template-haskell: '>=0'
changelog: ''
changelog-type: ''
description: "placeholders\n============\n\nWhile working on some Haskell code, it
  is often useful to develop\nincrementally by inserting `undefined` as a placeholder
  for missing code. \n\nThis approach has a couple of drawbacks.\n\n* If you have
  several occurrences of `undefined` in your code, it can be hard\nto track down the
  one reponsible for the error at run-time. \n\n* It is too easy to forget to replace
  `undefined` with the proper code, which\nmight cause unexpected errors.\n\nThis
  library provides placeholders that produce better messages when\nevaluated at run-time
  and also generate compile-time warnings so that they do\nnot get forgotten so easily.\n\nexample\n=======\n
  \n    {-# LANGUAGE TemplateHaskell #-}\n    \n    import Development.Placeholders\n
  \   \n    theUltimateAnswer :: Int\n    theUltimateAnswer = $notImplemented\n    \n
  \   main = do\n        putStrLn \"The ultimate answer:\"\n        print theUltimateAnswer\n\nThis
  will compile with a warning about the unimplemented function:\n\n    $ ghc --make
  Simple.hs\n    ...\n    Simple.hs:6:21: Unimplemented feature\n    ...\n\nAt runtime,
  an exception will be thrown when the placeholder is evaluated,\nindicating the location
  of the placeholder.\n\n    $ ./Simple\n    The ultimate answer:\n    Simple: PlaceholderExcption
  \"Unimplemented feature at Simple.hs:6:21\"\n\nIf compiled with the GHC flag `-Werror`,
  the warning will get turned into\nan error and compilation will fail. `-Werror`
  can therefore be used to\nverify that you haven't left any unintended placeholders
  behind.\n\n"
description-type: markdown
hash: 94a4e045d4f086bea8266b7bd897cf9db18570ea10acda8bdaf50c5e8308c605
homepage: http://github.com/ahammar/placeholders
latest: '0.1'
license-name: BSD-3-Clause
maintainer: Andreas Hammar <ahammar@gmail.com>
synopsis: Placeholders for use while developing Haskell code
test-bench-deps: {}
