homepage: http://github.com/cchalmers/plots
changelog-type: ''
hash: 894e6ec1d20760aba467bb337193c626b1e4bbe45d02b06fcd97924193bd78c9
test-bench-deps: {}
maintainer: c.chalmers@me.com
synopsis: Diagrams based plotting library
changelog: ''
basic-deps:
  semigroupoids: -any
  diagrams-lib: '>=1.3 && <1.6'
  JuicyPixels: -any
  fingertree: -any
  monoid-extras: '>=0.3 && <0.7'
  split: '>=0.1.2 && <0.5'
  base: '>=4.7 && <5.0'
  time: -any
  adjunctions: -any
  distributive: -any
  filepath: -any
  process: -any
  data-default: '>=0.5 && <0.8'
  semigroups: -any
  base-orphans: -any
  containers: '>=0.3 && <0.7'
  intervals: -any
  lens: '>=4.6 && <5.2'
  linear: '>=1.2 && <2.0'
  mtl: '>=1.0 && <2.3'
  statistics: -any
  hashable: '>=1.1 && <1.4'
  diagrams-core: '>=1.3 && <1.6'
  colour: -any
  transformers: -any
  optparse-applicative: -any
  profunctors: -any
  vector: -any
  directory: -any
all-versions:
- 0.1.0.0
- 0.1.0.1
- 0.1.0.2
- 0.1.1.0
- 0.1.1.2
- 0.1.1.3
author: Christopher Chalmers
latest: 0.1.1.3
description-type: markdown
description: |
  # plots

  [![Haddock](https://rawgit.com/cchalmers/plots/gh-pages/haddock.svg)](https://cchalmers.github.io/plots/)
  [![Travis](https://api.travis-ci.org/cchalmers/plots.svg?branch=master)](https://travis-ci.org/cchalmers/plots)
  [![Hackage](https://img.shields.io/hackage/v/plots.svg)](https://hackage.haskell.org/package/plots)


  `plots` is a plotting library based on [diagrams](http://projects.haskell.org/diagrams).

  Some sample plots:

  #### Scatter plot
  ![scatter-plot](https://rawgit.com/cchalmers/plots/master/diagrams/src_Plots_Types_Scatter_scatterExample'.svg)

  #### Bar plot
  ![bar-plot](https://rawgit.com/cchalmers/plots/master/diagrams/src_Plots_Types_Bar_barExample'.svg)

  #### Heat map
  ![heat-map](https://rawgit.com/cchalmers/plots/master/diagrams/src_Plots_Types_HeatMap_heatMapIndexedExample'.svg)

  There are many more plots to be added. There are also plans to support
  3D plots. Issues and pull requests welcome.

  ## Examples

  There are several example plots in the `examples/` directory. To build
  the examples, first ensure that you have `stack` installed, and that you
  have a `stack.yaml` file in this directory that contains the lines:

  ```yaml
  packages:
  - '.'
  - 'test'
  ```

  (If you run the command `stack init`, stack will automatically generate
  the `stack.yaml` file with the appropriate packages.)

  You can then build the examples using ```sh stack build stack exec
  RunExamples ``` The `RunExamples` script will generate `png` files in
  the `examples_output` directory.

  **Note:** The `RunExamples` script re-builds an example if the output
  file (`examples_output/X.png`) does not exist, or if the source file
  (`examples/X.hs`) has been modified since the last time the script was
  run.

  **Note 2:** If the `RunExamples` script fails with errors such as
    `Failed to load interface for ...` then you will need to `stack
    install` the required packages. In my case (with a freshly installed
    stack), I needed to run the following `stack install wreq cassava
    diagrams-rasterific`.
license-name: BSD-3-Clause
