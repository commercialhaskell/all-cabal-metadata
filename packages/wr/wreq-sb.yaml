all-versions:
- 0.4.0.0
author: Bryan O'Sullivan <bos@serpentine.com>
basic-deps:
  aeson: '>=0.7.0.3'
  attoparsec: '>=0.11.1.0'
  authenticate-oauth: '>=1.5 && <1.6'
  base: '>=4.5 && <5'
  base16-bytestring: '>=0'
  byteable: '>=0'
  bytestring: '>=0.9'
  case-insensitive: '>=0'
  containers: '>=0'
  cryptohash: '>=0'
  exceptions: '>=0.5'
  ghc-prim: '>=0'
  hashable: '>=0'
  http-client: '>=0.4.6'
  http-client-tls: '>=0.2'
  http-types: '>=0.8'
  lens: '>=4.5'
  lens-aeson: '>=0'
  mime-types: '>=0'
  old-locale: '>=0'
  psqueues: '>=0.2'
  template-haskell: '>=0'
  text: '>=0'
  time: '>=0'
  unordered-containers: '>=0'
changelog: |
  -*- markdown -*-

  xxx-xxx 0.4.0.0

  * Compatible with GHC 7.10.

  * New withAPISession and withSessionControl functions make talking to
    REST services more efficient.

  * Added support for AWS S3 virtual-host style URLs.

  * Added signing support for region specific calls to the AWS Security
    Token Service (AWS STS).

  * The introduction of AWS support accidentally introduced unwanted AWS
    headers and computation into all requests. This has been fixed.


  2014-12-11 0.3.0.1

  * Bump lower bound on http-client to 0.3.0.1


  2014-12-02 0.3.0.0

  * Support for Amazon Web Services request signing

  * New customMethod, customMethodWith functions allow use of arbitrary
    HTTP verbs

  * httpProxy, basicAuth, oauth2Bearer, oauth2Token: removed Maybe from
    result types, changed documentation to suggest use of (?~)


  2014-08-25 0.2.0.0

  * Support for lens 4.4


  2014-04-22 0.1.0.0

  * Initial release.
changelog-type: markdown
description: |
  # wreq: a Haskell web client library [![Build Status](https://travis-ci.org/stackbuilders/wreq.svg)](https://travis-ci.org/stackbuilders/wreq)

  `wreq` is a library that makes HTTP client programming in Haskell
  easy.

  # Features

  * Simple but powerful `lens`-based API

  * Over 100 tests, and built on reliable libraries like [`http-client`](http://hackage.haskell.org/package/http-client/)
    and [`lens`](https://lens.github.io/)

  * Session handling includes connection keep-alive and pooling, and
    cookie persistence

  * Automatic decompression

  * Powerful multipart form and file upload handling

  * Support for JSON requests and responses, including navigation of
    schema-less responses

  * Basic and OAuth2 bearer authentication

  * Amazon Web Services (AWS) request signing (Version 4)

  * AWS signing supports sending requests through the
    [Runscope Inc.](https://www.runscope.com) Traffic Inspector

  # Tutorials

  See [the tutorials](http://www.serpentine.com/wreq/) for a quick-start.

  # Is it done?

  No!  See [`TODO.md`](TODO.md) for a rather long list of ideas.
description-type: markdown
hash: 82058efc273337f97ef4a03d2b7b925a788c17f75440ca8b700b7b096ddd5f51
homepage: http://www.serpentine.com/wreq
latest: 0.4.0.0
license-name: BSD-3-Clause
maintainer: bos@serpentine.com
synopsis: An easy-to-use HTTP client library.
test-bench-deps:
  HUnit: '>=0'
  QuickCheck: '>=2.7'
  aeson: '>=0'
  aeson-pretty: '>=0.7.1'
  base: '>=4.5 && <5'
  base64-bytestring: '>=0'
  bytestring: '>=0'
  case-insensitive: '>=0'
  containers: '>=0'
  directory: '>=0'
  doctest: '>=0'
  filepath: '>=0'
  hashable: '>=0'
  http-client: '>=0'
  http-types: '>=0'
  lens: '>=0'
  lens-aeson: '>=0'
  network-info: '>=0'
  snap-core: '>=0'
  snap-server: '>=0.9.4.4'
  temporary: '>=0'
  test-framework: '>=0'
  test-framework-hunit: '>=0'
  test-framework-quickcheck2: '>=0'
  text: '>=0'
  time: '>=0'
  transformers: '>=0'
  unix-compat: '>=0'
  uuid: '>=0'
  vector: '>=0'
  wreq-sb: '>=0'
