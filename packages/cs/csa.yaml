all-versions:
- 0.1.0
author: Jens Egholm Pedersen
basic-deps:
  base: '>=4.10.0 && <5'
  hmatrix: '>=0'
changelog: |
  # Change log

  csa uses [Semantic Versioning][].
  The change log is available through the [releases on GitHub][].

  [Semantic Versioning]: http://semver.org/spec/v2.0.0.html
  [releases on GitHub]: https://github.com/githubuser/csa/releases
changelog-type: markdown
description: |
  # Connection-set algebra (CSA) library

  A library for constructing connection matrices between two collections of
  elements. Inspired by Mikael Djurfeldt's article from 2012 ([Neuroinformatics](https://doi.org/10.1007/s12021-012-9146-1)).

  ## Introduction
  Connection-set algebra is a powerful algebra for describing connections between
  two elements.
  This library provides a syntax tree for modeling the set operations, as well as
  a means to transform the operations into adjacency matrices.

  ## Installation
  This is a library and not an executable.
  Clone the repository, enter it and run `stack build` (requires [stack](http://haskellstack.org/)).

  ## Connection-set algebra (CSA)
  Say that you have two nodes that connect to each other.
  In a adjacency matrix this can be described as a full connection like so:

          1 2
        + ———
      1 | 1 1
      2 | 1 1

  In CSA this is simply an `AllToAll` connection.
  Similarly a `OneToOne` connection describes the following adjacency matrix:

          1 2
        + ———
      1 | 1 0
      2 | 0 1

  And here is the algebra part: If we say `AllToAll - OneToOne` we get:

          1 2
        + ———
      1 | 0 1
      2 | 1 0

  ## Contact
  Jens Egholm <jensegholm@protonmail.com>
description-type: markdown
hash: 8fbf86a4ad584847ba4eb9efd93b6a4e4eb6f5a6c3cdda238182ca1a336d6344
homepage: https://github.com/volr/csa#readme
latest: 0.1.0
license-name: LicenseRef-GPL
maintainer: Jens Egholm Pedersen
synopsis: Connection-set algebra (CSA) library
test-bench-deps:
  base: '>=4.10.0 && <5'
  csa: '>=0'
  hedgehog: '>=0'
  hmatrix: '>=0'
  tasty: '>=0'
  tasty-hedgehog: '>=0'
  tasty-hspec: '>=0'
