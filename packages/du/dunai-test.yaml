homepage: https://github.com/ivanperez-keera/dunai
changelog-type: text
hash: 22f137af43ded8c153c5a02e5fd81be9ec5614f96d3f3823fd97f4285d068aa3
test-bench-deps: {}
maintainer: ivan.perez@keera.co.uk
synopsis: Testing library for Dunai
changelog: |
  2023-06-21 Ivan Perez <ivan.perez@keera.co.uk>
          * Version bump (0.11.1) (#372).

  2023-04-21 Ivan Perez <ivan.perez@keera.co.uk>
          * Version bump (0.11.0) (#358).
          * Conformance with style guide (#348).

  2023-02-21 Ivan Perez <ivan.perez@keera.co.uk>
          * Version bump (0.10.1) (#345).

  2023-02-21 Ivan Perez <ivan.perez@keera.co.uk>
          * Version bump (0.10.0) (#342).
          * Remove the function FRP.Dunai.LTLPast.prev (#341).

  2022-12-21 Ivan Perez <ivan.perez@keera.co.uk>
          * Version bump (0.9.2) (#340).

  2022-10-21 Ivan Perez <ivan.perez@keera.co.uk>
          * Version bump (0.9.1) (#335).

  2022-08-21 Ivan Perez <ivan.perez@keera.co.uk>
          * Version bump (0.9.0) (#313).
          * Document module FRP.Dunai.Debug (#306).
          * Document module FRP.Dunai.LTLFuture (#307).
          * Document module FRP.Dunai.LTLPast (#310).
          * Re-format CHANGELOG for readability (#311).
          * Deprecate the function FRP.Dunai.LTLPast.prev (#312).

  2022-06-21 Ivan Perez <ivan.perez@keera.co.uk>
          * Version bump (0.8.3) (#302).

  2022-04-21 Ivan Perez <ivan.perez@keera.co.uk>
          * Version bump (0.8.2) (#280).
          * Add CHANGELOG file (#273).
          * Declare subdir of source-repository in Cabal file (#272).
basic-deps:
  dunai: '>=0.5 && <0.12'
  base: '>=4 && <5'
  normaldistribution: -any
  QuickCheck: -any
all-versions:
- 0.1.0.0
- 0.7.0
- 0.8.0
- 0.8.1
- 0.8.2
- 0.8.3
- 0.9.0
- 0.9.1
- 0.9.2
- 0.10.1
- 0.11.0
- 0.11.1
author: Ivan Perez
latest: 0.11.1
description-type: haddock
description: |-
  Testing and debugging library for Dunai.

  It contains:

  * Debugging signal functions using "Debug.Trace".
  * A definition of Temporal Predicates based on LTL.
  * Monitoring signal functions with ptLTL using Signal Predicates.
  * A definition of Streams, and a Stream manipulation API.
  * Signal/stream generators for QuickCheck.

  A detailed explanation of these ideas is included in the ICFP 2017 paper
  <https://dl.acm.org/citation.cfm?id=3110246 Testing and Debugging Functional Reactive Programming>.
license-name: BSD-3-Clause
