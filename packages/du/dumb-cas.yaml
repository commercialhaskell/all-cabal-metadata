all-versions:
- 0.1.0.0
- 0.1.1.0
- 0.1.1.1
- 0.1.2.0
- 0.2.0.0
- 0.2.1.0
- 0.2.1.1
author: Justus Sagemüller
basic-deps:
  base: '>=4.8 && <4.21'
  containers: '>=0'
  decimal-literals: '>=0.1 && <0.2'
  hashable: '>=1.2 && <1.6'
  template-haskell: '>=0'
  unordered-containers: '>=0.2 && <0.3'
changelog: ''
changelog-type: ''
description: |-
  This is a framework for untyped, symbolic computations like a CAS
  does, without any baked-in rules whatsoever but the ability to
  define expressions very consisely, as well as any transformation
  rules you want. The idea is basically to combine the flexibility
  of a Lisp with the conciseness of a Regex engine, using syntax similar
  to Haskell's standard pattern matching.
description-type: haddock
hash: cdf10bf0fac8cd209b5f3318d10f2623a9425375710c69f81dc5a18c56f7e73d
homepage: https://github.com/leftaroundabout/dumb-cas
latest: 0.2.1.1
license-name: GPL-3.0-only
maintainer: (@) jsag $ hvl.no
synopsis: A computer “algebra” system that knows nothing about algebra, at the core.
test-bench-deps:
  base: '>=4 && <5'
  dumb-cas: '>=0'
  tasty: '>=0.7'
  tasty-hunit: '>=0'
