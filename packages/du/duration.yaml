homepage: https://github.com/ryota-ka/duration#readme
changelog-type: ''
hash: 380fe4a3f8e947673cbb1bd75b1c38a14c0528135a879e441756078dcab5baf9
test-bench-deps:
  base: '>=4.7 && <5'
  time: -any
  hspec: -any
  parsec: -any
  doctest: -any
  duration: -any
  template-haskell: -any
maintainer: kameoka.ryota@gmail.com
synopsis: A tiny compile-time time utility library inspired by zeit/ms
changelog: ''
basic-deps:
  base: '>=4.7 && <5'
  time: -any
  parsec: -any
  template-haskell: -any
all-versions:
- 0.1.0.0
- 0.2.0.0
author: Ryota Kameoka
latest: 0.2.0.0
description-type: markdown
description: |
  # duration

  A tiny compile-time time utility library, inspired by [zeit/ms](https://github.com/zeit/ms).

  ## Examples

  ```haskell
  {-# LANGUAGE QuasiQuotes #-}
  {-# LANGUAGE TypeApplications #-}

  module Main where

  import Data.Time.Clock (DiffTime, NominalDiffTime)
  import Data.Time.Clock.Duration (t, s, ms, µs, ns, ps)

  main :: IO ()
  main = do
      print @DiffTime [t| 1 day |] -- 86400s
      print @DiffTime [t| 2h |]    -- 7200s
      print @DiffTime [t| -1m |]   -- -60s

      print @NominalDiffTime [s| 1 |]  -- 1s
      print @NominalDiffTime [ms| 1 |] -- 0.001s
      print @NominalDiffTime [µs| 1 |] -- 0.000001s
      print @NominalDiffTime [ns| 1 |] -- 0.000000001s
      print @NominalDiffTime [ps| 1 |] -- 0.000000000001s

      print @Int      [s| 2 days |]  -- 172800
      print @Integer  [ms| 5s |]     -- 5000
      print @Double   [µs| 2min |]   -- 1.2e8
      print @Float    [ns| -1 sec |] -- -1.0e9
      print @Rational [ps| 10ms |]   -- 10000000000 % 1
  ```
license-name: BSD-3-Clause
