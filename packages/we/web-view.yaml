homepage: https://github.com/seanhess/web-view
changelog-type: markdown
hash: b88589484a18ab99d5f1dd37b346e0bda0208e496ea6ec2b5040eecd7d5b0401
test-bench-deps:
  bytestring: '>=0.11 && <0.13'
  string-interpolate: '>=0.3.2 && <0.4'
  base: '>=4.16 && <5'
  text: '>=1.2 && <3'
  web-view: -any
  casing: '>0.1.3.0 && <0.2'
  containers: '>=0.6 && <1'
  effectful: ==2.3.*
  sydtest: ==0.15.*
  file-embed: '>=0.0.10 && <0.1'
maintainer: seanhess@gmail.com
synopsis: Type-safe HTML and CSS with intuitive layouts and composable styles.
changelog: |
  # Revision history for web-view

  ## 0.2.3 -- 2023-11-27

  * First version. Released on an unsuspecting world.
basic-deps:
  warp: '>=3.3.30 && <3.4'
  bytestring: '>=0.11 && <0.13'
  string-interpolate: '>=0.3.2 && <0.4'
  wai: '>=3.2.3 && <3.3'
  base: '>=4.16 && <5'
  text: '>=1.2 && <3'
  web-view: -any
  casing: '>0.1.3.0 && <0.2'
  containers: '>=0.6 && <1'
  effectful: ==2.3.*
  file-embed: '>=0.0.10 && <0.1'
  http-types: '>=0.12.3 && <0.13'
all-versions:
- 0.2.0
- 0.2.2
- 0.2.3
- 0.3.1
author: Sean Hess
latest: 0.3.1
description-type: markdown
description: "Web View\n============\n\nType-safe HTML and CSS with intuitive layout
  and composable styles. Inspired by Tailwindcss and Elm-UI\n\n[![Hackage](https://img.shields.io/hackage/v/web-view.svg)][hackage]\n\n###
  Write Haskell instead of CSS\n\nType-safe utility functions to generate styled HTML.\n\n```haskell\nmyPage
  = col (gap 10) $ do\n  el (bold . fontSize 32) \"My page\"\n  button (border 1)
  \"Click Me\"\n```\n\nLeverage the full power of Haskell functions for reuse, instead
  of relying on CSS.\n\n```haskell\nheader = bold\nh1 = header . fontSize 32\nh2 =
  header . fontSize 24\npage = gap 10\n\nmyPage = col page $ do\n  el h1 \"My Page\"\n
  \ ...\n```\n\nThis approach is inspired by Tailwindcss' [Utility Classes](https://tailwindcss.com/docs/utility-first)\n\n###
  Intuitive Layouts\n\nEasily create layouts with `row`, `col`, `grow`, and `space`\n\n```haskell\nholygrail
  :: View c ()\nholygrail = layout id $ do\n  row section \"Top Bar\"\n  row grow
  $ do\n    col section \"Left Sidebar\"\n    col (section . grow) \"Main Content\"\n
  \   col section \"Right Sidebar\"\n  row section \"Bottom Bar\"\n  where section
  = 'border' 1\n```\n\n### Embedded CSS\n\nViews track which styles are used in any
  child node, and automatically embed all CSS when rendered. \n\n    >>> renderText
  $ el bold \"Hello\"\n    \n    <style type='text/css'>.bold { font-weight:bold }</style>\n
  \   <div class='bold'>Hello</div>\n\n\n### Stateful Styles\n\nWe can apply styles
  when certain states apply. For example, to change the background on hover:\n\n```haskell\nbutton
  (bg Primary . hover (bg PrimaryLight)) \"Hover Me\"\n```\n\nMedia states allow us
  to create responsive designs\n\n```haskell\nel (width 100 . media (MinWidth 800)
  (width 400))\n  \"Big if window > 800\"\n```\n\n\nLearn More\n----------\n\nView
  Documentation on [Hackage][hackage]\n* https://hackage.haskell.org/package/web-view\n\nView
  on Github\n* https://github.com/seanhess/web-view\n\nView [Examples](https://github.com/seanhess/web-view/blob/main/example/Main.hs)\n\n\n[hackage]:
  https://hackage.haskell.org/package/web-view\n"
license-name: BSD-3-Clause
