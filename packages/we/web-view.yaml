all-versions:
- 0.2.0
- 0.2.2
- 0.2.3
- 0.3.1
- 0.4.0
- 0.5.0
- 0.6.0
- 0.6.1
- 0.6.2
author: Sean Hess
basic-deps:
  base: '>=4.16 && <5'
  bytestring: '>=0.11 && <0.13'
  casing: '>0.1.3.0 && <0.2'
  containers: '>=0.6 && <1'
  effectful-core: '>=2.3 && <3'
  file-embed: '>=0.0.10 && <0.1'
  html-entities: '>=1.1.4.7 && <1.2'
  http-types: '>=0.12 && <0.13'
  string-interpolate: '>=0.3.2 && <0.4'
  text: '>=1.2 && <3'
changelog: "# Revision history for web-view\n\n## 0.6.0\n\n* stack - layout children
  on top of each other\n* ChildCombinator: apply styles to direct children\n* `Mod`
  is now `Mod context`, allowing for type-safe `Mod`s\n* fixed: escaping in auto-generated
  `<style>`\n* Refactored: selectors and rendering\n\n## 0.5.0\n\n* Rendering improvements\n*
  extClass to add external css class\n* inline elements\n* Url: no longer lowercases
  automatically. Show/Read instance\n* \n\n## 0.4.0\n\n* Added new Mods. Length type.
  Improved Url type\n\n## 0.3.1\n\n* Cleanup. Refactored Mods\n\n## 0.2.3 -- 2023-11-27\n\n*
  First version. Released on an unsuspecting world.\n"
changelog-type: markdown
description: "Web View\n============\n\n[![Hackage](https://img.shields.io/hackage/v/web-view.svg)][hackage]\n\nType-safe
  HTML and CSS with intuitive layout and composable styles. Inspired by Tailwindcss
  and Elm-UI\n\n### Write Haskell instead of CSS\n\nType-safe utility functions to
  generate styled HTML.\n\n```haskell\nmyPage = col (gap 10) $ do\n  el (bold . fontSize
  32) \"My page\"\n  button (border 1) \"Click Me\"\n```\n\nLeverage the full power
  of Haskell functions for reuse, instead of relying on CSS.\n\n```haskell\nheader
  = bold\nh1 = header . fontSize 32\nh2 = header . fontSize 24\npage = gap 10\n\nmyPage
  = col page $ do\n  el h1 \"My Page\"\n  ...\n```\n\nThis approach is inspired by
  Tailwindcss' [Utility Classes](https://tailwindcss.com/docs/utility-first)\n\n###
  Intuitive Layouts\n\nEasily create layouts with `row`, `col`, `grow`, and `space`\n\n```haskell\nholygrail
  :: View c ()\nholygrail = layout id $ do\n  row section \"Top Bar\"\n  row grow
  $ do\n    col section \"Left Sidebar\"\n    col (section . grow) \"Main Content\"\n
  \   col section \"Right Sidebar\"\n  row section \"Bottom Bar\"\n  where section
  = 'border' 1\n```\n\n### Embedded CSS\n\nViews track which styles are used in any
  child node, and automatically embed all CSS when rendered. \n\n    >>> renderText
  $ el bold \"Hello\"\n    \n    <style type='text/css'>.bold { font-weight:bold }</style>\n
  \   <div class='bold'>Hello</div>\n\n\n### Stateful Styles\n\nWe can apply styles
  when certain states apply. For example, to change the background on hover:\n\n```haskell\nbutton
  (bg Primary . hover (bg PrimaryLight)) \"Hover Me\"\n```\n\nMedia states allow us
  to create responsive designs\n\n```haskell\nel (width 100 . media (MinWidth 800)
  (width 400))\n  \"Big if window > 800\"\n```\n\n### Try Example Project with Nix\n\nIf
  you want to get a feel for web-view without cloning the project run `nix run github:seanhess/web-view`
  to run the example webserver locally\n\nLocal Development\n-----------------\n\n###
  Nix\n\nPrepend targets with ghc982 or ghc966 to use GHC 9.8.2 or GHC 9.6.6\n\n-
  `nix run` starts the example project with GHC 9.8.2\n- `nix develop` to get a shell
  with all dependencies installed for GHC 9.8.2. \n- `nix develop .#ghc966-web-view`
  for GHC 9.6.6\n\nYou can also get a development shell for the example project with:\n\n```\ncd
  example\nnix develop ../#ghc982-example\ncabal run\n```\n\nYou can import this flake's
  overlay to add `web-view` to all package sets and override ghc966 and ghc982 with
  the packages to satisfy `web-view`'s dependencies.\n\n```nix\n{\n  inputs = {\n
  \   nixpkgs.url = \"github:nixos/nixpkgs/nixpkgs-unstable\";\n    web-view.url =
  \"github:seanhess/web-view\"; # or \"path:/path/to/cloned/web-view\";\n    flake-utils.url
  = \"github:numtide/flake-utils\";\n  };\n\n  outputs = { self, nixpkgs, web-view,
  flake-utils, ... }:\n    flake-utils.lib.eachDefaultSystem (\n      system:\n      let\n
  \       pkgs = import nixpkgs {\n          inherit system;\n          overlays =
  [ web-view.overlays.default ];\n        };\n        haskellPackagesOverride = pkgs.haskell.packages.ghc966.override
  (old: {\n          overrides = pkgs.lib.composeExtensions (old.overrides or (_:
  _: { })) (hfinal: hprev: {\n            # your overrides here\n          });\n        });\n
  \     in\n      {\n        devShells.default = haskellPackagesOverride.shellFor
  {\n          packages = p: [ p.web-view ];\n        };\n      }\n    );\n}\n```\n\n\nLearn
  More\n----------\n\nView Documentation on [Hackage][hackage]\n* https://hackage.haskell.org/package/web-view\n\nView
  on Github\n* https://github.com/seanhess/web-view\n\nView [Examples](https://github.com/seanhess/web-view/blob/latest/example/app/Main.hs)\n\n\n[hackage]:
  https://hackage.haskell.org/package/web-view\n\n\nContributors\n------------\n\n*
  [Sean Hess](https://github.com/seanhess)\n* [Kamil Figiela](https://github.com/kfigiela)\n*
  [Pfalzgraf Martin](https://github.com/Skyfold)\n\n"
description-type: markdown
hash: 922f69ff9e95bf3e958fffa27c96aa42b717d39231b6b037028cb8268e4d192d
homepage: https://github.com/seanhess/web-view
latest: 0.6.2
license-name: BSD-3-Clause
maintainer: seanhess@gmail.com
synopsis: Type-safe HTML and CSS with intuitive layouts and composable styles.
test-bench-deps:
  Diff: '>=0.5 && <1.0'
  base: '>=4.16 && <5'
  bytestring: '>=0.11 && <0.13'
  casing: '>0.1.3.0 && <0.2'
  containers: '>=0.6 && <1'
  effectful-core: '>=2.3 && <3'
  file-embed: '>=0.0.10 && <0.1'
  html-entities: '>=1.1.4.7 && <1.2'
  http-types: '>=0.12 && <0.13'
  skeletest: '>=0'
  string-interpolate: '>=0.3.2 && <0.4'
  text: '>=1.2 && <3'
  web-view: '>=0'
