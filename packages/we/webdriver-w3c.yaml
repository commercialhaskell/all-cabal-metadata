all-versions:
- 0.0.1
- 0.0.2
- 0.0.3
author: Nathan Bloomfield
basic-deps:
  JuicyPixels: '>=3.2.9.4'
  QuickCheck: '>=2.10.1'
  SHA: '>=1.6.4.2'
  aeson: '>=1.2.4.0'
  aeson-pretty: '>=0.8.5'
  base: '>=4.12 && <5'
  base64-bytestring: '>=1.0.0.1'
  bytestring: '>=0.10.8.2'
  containers: '>=0.5.10.2'
  directory: '>=1.3.0.2'
  exceptions: '>=0.8.3'
  http-client: '>=0.5.10'
  http-types: '>=0.12.1'
  lens: '>=4.16'
  lens-aeson: '>=1.0.2'
  network-uri: '>=2.6'
  random: '>=1.1'
  scientific: '>=0.3.5.2'
  script-monad: '>=0.0.3'
  stm: '>=2.4.5.0'
  tasty: '>=1.0.1.1'
  tasty-expected-failure: '>=0.11.1.1'
  text: '>=1.2.3.0'
  time: '>=1.8.0.2'
  transformers: '>=0.5.5.0'
  unordered-containers: '>=0.2.9.0'
  uri-encode: '>=1.5.0.5'
  vector: '>=0.12.0.1'
  webdriver-w3c: '>=0'
  wreq: '>=0.5.2'
changelog: "Changelog for webdriver-w3c\n===========================\n\nUnreleased\n----------\n\n0.0.3\n-----\n\n*
  Added\n  * `MonadIO` and `MonadFail` instances for `WebDriverTT t eff`\n  * New
  endpoints: `newWindow`, `getComputedRole`, `getComputedLabel`, `printPage`\n  *
  Compiles with aeson >=2.0.0.0 and GHC >=8.8.1\n* Changed\n  * The old behavior of
  `runIsolated` has been renamed to `runIsolated_`, and `runIsolated` now returns
  the result of its argument. The naming is meant to mimic the `sequence_`/`sequence`
  pattern.\n  * `chromeOptions` renamed to `goog:chromeOptions` in `ToJSON` `FromJSON`
  instances for `Capability` for compatibility with chromedriver versions >=75; see
  https://chromedriver.storage.googleapis.com/75.0.3770.8/notes.txt. Fixes issue #21.\n*
  Fixed\n  * Bug in behavior of `switchToFrame` when using `FrameContainingElement`\n
  \ * Default value of wd-private-mode tasty flag changed to `False`\n\n\n\n0.0.2\n-----\n\nThis
  version introduces significant changes to the API, prompted by changes in the `script-monad`
  dependency. The main change is that `WebDriver` and `WebDriverT` have been replaced
  by `WebDriverT` and `WebDriverTT` and are a more sensible monad transformer and
  monad transformer transformer, respectively. The main effect of this is that (1)
  `WebDriver*` types take an extra parameter for the effect monad, and (2) functions
  for working with `WebDriver*` now have additional `Monad` and `MonadTrans` constraints.
  The library will now only compile with GHC >=8.6 due to a transitive dependency
  on `QuantifiedConstraints`.\n\n* Added\n  * Browser preferences field on `FirefoxOptions`
  and `ChromeOptions`\n  * `readDataFile`, `writeDataFile`, `readJsonFile`, and `writeJsonFile`
  data helpers\n  * `breakpoint` and `breakpointWith` for helping with debugging;
  controlled by `breakpointsOn`, and `breakpointsOff`\n  * `expectIs`\n* Changed\n
  \ * Switched order of arguments for `elementSendKeys`, `getElementAttribute`, `getElementProperty`,
  and `getElementCssValue`. The element reference now comes last to make it easier
  to chain these with `>>=`.\n  * `logDebug` and `logNotice`\n  * Tested on geckodriver
  0.23.0.\n* Fixed\n  * Bug in behavior of `cleanupOnError` was causing it to miss
  some errors, which left the remote end session open\n\n\n\n0.0.1\n-----\n\n* Added\n
  \   * `WebDriver` monad for remotely controlling user agents. Also comes in monad
  transformer flavor with `WebDriverT` \n    * Bindings for all [WebDriver endpoints](https://w3c.github.io/webdriver/webdriver-spec.html)
  as of 2018-04-20\n    * Integration with the [Tasty](https://hackage.haskell.org/package/tasty)
  test framework\n"
changelog-type: markdown
description: |
  webdriver-w3c
  =============

  [![Build Status](https://travis-ci.org/nbloomf/webdriver-w3c.svg?branch=master)](https://travis-ci.org/nbloomf/webdriver-w3c)

  Haskell bindings for the W3C WebDriver API.


  What is it?
  -----------

  `webdriver-w3c` is a Haskell library providing bindings to the WebDriver API, enabling us to write Haskell programs that control web browsers. It is actively tested against `geckodriver` and `chromedriver`, as well as a fake remote end implementation. It is implemented as a monad transformer.

  Also included is an integration with the [tasty](https://hackage.haskell.org/package/tasty) test framework.

  Note that this library requires GHC >=8.6 due to a transitive dependency on `QuantifiedConstraints`.

  [WebDriver](https://www.w3.org/TR/webdriver/) is an HTTP API for interacting with a web browser remotely. It is on track to become a W3C specification and based on work done by the [Selenium](https://www.seleniumhq.org/) community.


  Who is it for?
  --------------

  If you:

  * Are interested in browser automation, especially for testing,
  * Want to write browser automation code in Haskell, and
  * Don't mind filing bug and feature requests,

  then you might give `webdriver-w3c` a try.

  This library is unrelated to [webdriver](http://hackage.haskell.org/package/webdriver) except in spirit. That library is older and more mature, and depending on your needs may be more appropriate.


  Where is the documentation?
  ---------------------------

  Depends on what you want!

  * _A cursory glance:_ This brief [tutorial](https://github.com/nbloomf/webdriver-w3c/blob/master/doc/Tutorial.md) shows how to go from nothing to one very simple test.
  * _To start a simple project:_ If you want to write a test suite, there's a separate tutorial on using the [tasty integration](https://github.com/nbloomf/webdriver-w3c/blob/master/doc/TastyDemo.md).
  * _To dig into the API:_ The API docs are on [Hackage](https://hackage.haskell.org/package/webdriver-w3c).
  * _To mess with the library code:_ There's a very small amount of [developer documentation](https://github.com/nbloomf/webdriver-w3c/blob/master/dev/doc.md); I'm also happy to answer questions.


  Who is responsible for this?
  ----------------------------

  Nathan Bloomfield (@nbloomf) wrote and maintains the code.

  Other contributors, in lexicographic order:

  * Ivan Enderlin (@hywan)

  And users like you!

  Also thanks to my employer for allowing -- actually, requiring :) -- this to be open source.

  And special thanks to Jonathan Lipps' [Simplified Guide](https://github.com/jlipps/simple-wd-spec) to the WebDriver spec.
description-type: markdown
hash: 7bfdd051a934edebfdbc0c7a205e288e5ab85a81f3bed59b0cc5247c473eb191
homepage: https://github.com/nbloomf/webdriver-w3c#readme
latest: 0.0.3
license-name: GPL-3.0-only
maintainer: nathan.bloomfield@a8c.com
synopsis: Bindings to the WebDriver API
test-bench-deps:
  JuicyPixels: '>=3.2.9.4'
  QuickCheck: '>=2.10.1'
  aeson: '>=1.2.4.0'
  base: '>=4.7 && <5'
  base64-bytestring: '>=1.0.0.1'
  bytestring: '>=0.10.8.2'
  containers: '>=0.5.10.2'
  directory: '>=1.3.0.2'
  exceptions: '>=0.8.3'
  http-client: '>=0.5.10'
  http-types: '>=0.12.1'
  lens: '>=4.16'
  lens-aeson: '>=1.0.2'
  parsec: '>=3.1.13.0'
  random: '>=1.1'
  scientific: '>=0.3.5.2'
  script-monad: '>=0.0.1'
  tasty: '>=1.0.1.1'
  tasty-expected-failure: '>=0.11.1.1'
  tasty-hunit: '>=0.10.0.1'
  tasty-quickcheck: '>=0.9.2'
  text: '>=1.2.3.0'
  time: '>=1.8.0.2'
  transformers: '>=0.5.5.0'
  unordered-containers: '>=0.2.9.0'
  vector: '>=0.12.0.1'
  webdriver-w3c: '>=0'
  wreq: '>=0.5.2'
