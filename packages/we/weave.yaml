all-versions:
- 0.1.0.0
author: Li-yao Xia
basic-deps:
  base: '>4 && <5'
  weave: '>=0'
  weave-core: ^>=0.1
changelog: "# Revision history for weave\r\n\r\n## 0.1.0.0 -- YYYY-mm-dd\r\n\r\n*
  First version. Released on an unsuspecting world.\r\n"
changelog-type: markdown
description: |-
  An experimental control structure for defining breadth-first walks in trees
  and graphs in a compositional manner.

  @Weave@ is an applicative transformer for multi-level computations.
  This library actually defines multiple variants of @Weave@ with different
  performance profiles. The most useful ones are "Weave.Lazy" and
  "Weave.Oblivious". Two other variants "Weave.Strict" and "Weave.Endless"
  are included mainly as curiosities.

  The main application of @Weave@ is to define /breadth-first monadic unfolds/.
  Examples of such unfolds for some general-purpose tree structures can be
  found under the namespace @Weave.Unfold@, for each variant of @Weave@.

  See also my blog post:
  <https://blog.poisson.chat/posts/2025-03-30-breadth-first-unfolds.html Unfolding trees breadth-first in Haskell>.

  Internally, to avoid duplication, those unfolds are implemented as a Backpack
  mixin @Weave.Unfold@. This package might not work with Stack, which doesn't
  support Backpack. For minimal dependencies and no backpack, the @weave-core@
  library is also available, containing only the @Weave@ types.
description-type: haddock
hash: cee4d881202c51ae2a9db660d20a40f4abeecfa5a821b7f2d82abd2cb046c6af
homepage: https://gitlab.com/lysxia/weave
latest: 0.1.0.0
license-name: BSD-3-Clause
maintainer: lysxia@gmail.com
synopsis: Compositional breadth-first walks
test-bench-deps: {}
