all-versions:
- 0.1.0.0
- 0.1.2.0
- '0.3'
author: Sarthak Bagaria
basic-deps:
  aeson: '>=0'
  base: '>=4.7 && <5'
  base64-bytestring: '>=1.0.0.1 && <1.1'
  binary: '>=0.7.5 && <0.9'
  bytestring: '>=0.9 && <0.11'
  cryptonite: '>=0.24'
  http-client: '>=0.5.7 && <0.7'
  http-types: '>=0.8.6 && <1.0'
  lens: '>=4.15.1'
  memory: '>=0.14.5 && <0.16'
  random: '>=1.1 && <1.2'
  safe-exceptions: '>=0.1.7 && <0.2'
  text: '>=0.11 && <2.0'
  time: '>=0'
  transformers: '>=0.5.2.0 && <0.6'
changelog: ''
changelog-type: ''
description: |
  # web-push [![Hackage](https://img.shields.io/hackage/v/web-push.svg)](https://hackage.haskell.org/package/web-push)

  Helper functions to send messages using Web Push protocol.

  ## Usage

  Guides to using Web Push API in browsers can be found on [Mozilla's](https://developer.mozilla.org/en/docs/Web/API/Push_API) and [Google's](https://developers.google.com/web/fundamentals/engage-and-retain/push-notifications/) docs, or you can check out the demo app in the example folder. To run the demo app:

      cd example
      stack build
      stack --docker-network=bridge --docker-run-args='--publish=3000:3000' exec web-push-example

  Then access localhost:3000 from a browser. Keep the browser console open to check if there are errors. For use with docker, the above command requires [stack](https://docs.haskellstack.org/en/stable/README/) 2.4 or above.

  For production use, store a set of VAPID keys securely and use them for all push notification subscriptions and messages; public key will have to be exposed to client's browser when subscribing to push notifications, but private key must be kept secret and used when generating push notifications on the server. If VAPID keys are re-generated, all push notifications will require re-subscriptions. Also save the latest subscription details such as endpoint from user's browser session securely in the database and use them to send push notifications to the user later.

  ## References

  Current implementation is based on the following versions of the drafts:
  - [https://tools.ietf.org/html/draft-ietf-webpush-encryption-04](https://tools.ietf.org/html/draft-ietf-webpush-encryption-04)
  - [https://tools.ietf.org/html/draft-ietf-httpbis-encryption-encoding-02](https://tools.ietf.org/html/draft-ietf-httpbis-encryption-encoding-02)
  - [https://tools.ietf.org/html/draft-ietf-webpush-protocol-10](https://tools.ietf.org/html/draft-ietf-webpush-protocol-10)
  - [https://tools.ietf.org/html/draft-ietf-webpush-vapid-01](https://tools.ietf.org/html/draft-ietf-webpush-vapid-01)
description-type: markdown
hash: 3f3993836babe04f06f834ac7efc5ddeb656e28c6b845236a11752594da7a175
homepage: https://github.com/sarthakbagaria/web-push#readme
latest: '0.3'
license-name: MIT
maintainer: neokits@gmail.com
synopsis: Send messages using Web Push protocol.
test-bench-deps:
  base: '>=0'
  base64-bytestring: '>=1.0.0.1 && <1.1'
  binary: '>=0.7.5 && <0.9'
  bytestring: '>=0.9 && <0.11'
  hspec: '>=2.4.3 && <2.8'
  web-push: '>=0'
