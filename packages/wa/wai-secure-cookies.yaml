homepage: https://github.com/habibalamin/wai-secure-cookies
changelog-type: ''
hash: af408d84a80fee731d96a87efc4fd70bd30629344e8c94a8a7ce13ab393dc20e
test-bench-deps:
  bytestring: -any
  wai: -any
  base: -any
  hspec: '>=2.6 && <2.12'
  hspec-wai: '>=0.9.1 && <0.12'
  wai-secure-cookies: -any
  wai-extra: '>=3 && <4'
  http-types: -any
  hspec-expectations: '>=0.8.2 && <0.9'
maintainer: ha.alamin@gmail.com
synopsis: WAI middleware to automatically encrypt and sign cookies
changelog: ''
basic-deps:
  bytestring: '>=0.10 && <0.12'
  wai: '>=3.2 && <4'
  split: '>=0.2 && <0.3'
  base: '>=4.7 && <5'
  memory: '>=0.14 && <0.19'
  crypton: '>=0.31 && <1'
  random: '>=1.1 && <1.3'
  http-types: '>=0.12.1 && <0.13'
all-versions:
- 0.1.0.0
- 0.1.0.1
- 0.1.0.2
- 0.1.0.3
- 0.1.0.4
- 0.1.0.5
- 0.1.0.6
- 0.1.0.7
- 0.1.0.8
author: Habib Alamin
latest: 0.1.0.8
description-type: markdown
description: |
  # wai-secure-cookies

  I extracted a WAI middleware to automatically encrypt and sign cookies.

  ---

  **WARNING**

  I am not a cryptographer, and the crypto libraries in Haskell are not nearly as easy to use as what I'm used to in Ruby, so I wouldn't depend on this for a serious project until it's had some proper eyes on it.

  ---

  ## Usage

  Populate the following environment variables in your WAI application process:

  ```
  WAI_COOKIE_VALIDATION_KEY # key to sign cookie names and values
  WAI_COOKIE_ENCRYPTION_KEY # key to encrypt cookie names and values
  ```

  You can generate random keys with `waicookie-genkey`:

  ```
  waicookie-genkey <key type> ...
  key types: encryption
             validation
  ```
license-name: MIT
