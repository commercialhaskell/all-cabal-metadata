homepage: https://github.com/adetokunbo/wai-middleware-delegate
changelog-type: markdown
hash: accebd6f10c7e6a6c0dbc7c1513b924fe78894af576e00dfc04235e3e0cf6b6e
test-bench-deps:
  warp: -any
  http-client: -any
  wai-conduit: -any
  bytestring: -any
  wai: -any
  case-insensitive: -any
  base: -any
  hspec: '>=2.1'
  text: -any
  network: -any
  async: -any
  connection: '>=0.2'
  conduit: -any
  data-default: -any
  conduit-extra: -any
  blaze-builder: -any
  wai-middleware-delegate: -any
  vault: -any
  warp-tls: -any
  http-client-tls: -any
  random: '>=1.1'
  bytestring-lexing: -any
  http-conduit: -any
  resourcet: -any
  http-types: -any
maintainer: tim.emiola@gmail.com
synopsis: WAI middleware that delegates handling of requests.
changelog: |
  # Revision history for wai-middleware-delegate

  ## 0.1.0.0 -- 2018-07-28

  * Initial version.

  ## 0.1.1.0 -- 2018-08-06

  * Add configuration for the number of redirects
basic-deps:
  http-client: '>=0.5.13.1 && <0.6'
  wai-conduit: '>=3.0.0.4 && <3.1'
  streaming-commons: '>=0.2.1.0 && <0.2.2'
  bytestring: '>=0.10.8.2 && <0.11'
  wai: '>=3.2 && <3.3'
  case-insensitive: '>=1.2.0.11 && <1.3'
  base: '>=4.10 && <5'
  text: '>=1.2.3.0 && <1.3'
  async: '>=2.2.1 && <2.3'
  conduit: '>=1.3.0.3 && <1.4'
  data-default: '>=0.7.1.1 && <0.8'
  conduit-extra: '>=1.3.0 && <1.4'
  blaze-builder: '>=0.4.1.0 && <0.5'
  http-conduit: '>=2.3.2 && <2.4'
  http-types: '>=0.12.1 && <0.13.0'
all-versions:
- 0.1.0.0
- 0.1.1.0
- 0.1.2.0
author: Tim Emiola
latest: 0.1.2.0
description-type: markdown
description: |
  # wai-middleware-delegate [![CircleCI](https://circleci.com/gh/adetokunbo/wai-middleware-delegate.svg?style=svg)](https://circleci.com/gh/adetokunbo/wai-middleware-delegate) [![BSD3](https://img.shields.io/badge/license-BSD3-green.svg?dummy)](https://github.com/adetokunbo/wai-middleware-delegate/blob/master/LICENSE)

  __wai-middleware-delegate__ is a [WAI](https://hackage.haskell.org/package/wai) middleware that allows requests to be handled by a delegate application that proxies requests to another server.

  ## Example

  ```haskell
  {-# LANGUAGE OverloadedStrings #-}

  import           Data.Default                    (Default (..))
  import           Network.HTTP.Client.TLS         (newTlsManager)
  import           Network.HTTP.Types              (status500)
  import           Network.Wai
  import           Network.Wai.Handler.Warp (run)
  import           Network.Wai.Middleware.Delegate (ProxySettings (..),
                                                    delegateToProxy)

  sampleSettings :: ProxySettings
  sampleSettings = def { proxyHost = "httpbin.org" }

  -- | Create an application that proxies every request to httpbin.org
  httpBinDelegate :: ProxySettings -> IO Application
  httpBinDelegate s = do
    -- delegate everything!
    let takeItAll = const True
        dummyApp _ respond = respond $ responseLBS status500 [] "I should have been proxied"

    manager <- newTlsManager
    return $ delegateToProxy s manager (takeItAll) dummyApp

  main :: IO ()
  main = httpBinDelegate sampleSettings >>= run 3000

  ```
license-name: BSD-3-Clause
