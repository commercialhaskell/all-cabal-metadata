all-versions:
- '0.1'
- '0.2'
- 0.2.1
- '0.3'
- 0.3.1
- 0.3.2
- '0.4'
- '0.5'
- '0.6'
- '0.7'
- '0.8'
- 0.8.1
- 0.8.2
- 0.8.3
- 0.8.4
- 0.8.5
- 0.8.6
- 0.9.0
- 0.10.0
- 1.0.0
author: Toralf Wittner
basic-deps:
  attoparsec: '>=0.10'
  base: '>=4.6 && <5.0'
  bytestring: '>=0.10'
  bytestring-conversion: '>=0.2'
  case-insensitive: '>=1.1'
  cookie: '>=0.4'
  http-types: '>=0.8'
  singletons: '>=0.10'
  text: '>=1.2'
  transformers: '>=0.3'
  vault: '>=0.3'
  vector: '>=0.10'
  wai: '>=2.0'
changelog: |
  1.0.0
      * Support for GHC-8.8 (see MR #1 thanks to @axeman).

  0.10.0

      * Update `singletons` dependency.

  0.9.0

      * Remove upper-bounds of dependencies.
      * Use FPL instead of MPL.

  0.8.6

      * Bugfix release (Github issue #2)

  0.8.5

      * Update `singletons` upper bound.

  0.8.4

      * Update `bytestring-conversion` upper bound.

  0.8.3

      * Update various upper bounds.

  0.8.2

      * Update `bytestring-conversion` to version 0.2

  0.8

      * Replace `bytestring-from` with `bytestring-conversion` and update
        test dependencies.

  0.7

      * Update dependencies to include WAI 3.0.x

  0.6

      * Move `def` and `opt` from `Data.Predicate` to `Network.Wai.Predicate` and
        make both specific to `Predicate r Error t`.
      * Remove `mapOkay` and `mapFail`.
      * Update `bytestring-from` dependency.

  0.5

      * Update dependencies constraints.

  0.4

      * Use `singletons` library instead of `GHC.TypeLits` from base.
      * Remove `mapResult` (use `fmap` instead).

  0.3.2

      * Update dependencies constraints.

  0.3.1

      * Add `fromVault` predicate and `HasVault` type-class.

  0.3

      * Change `header`, `hasHeader` and `lookupHeader` to use `HeaderName`
        instead of `ByteString` for the lookup key.

  0.2.1

      * Update WAI version bounds to include 2.1

  0.2

      * Rename `getRequest` predicate to `request` and `request` method of
        `HasRequest` to `getRequest`.
      * Add `MonadTrans` and `MonadIO` instance declarations for `ResultT` and
        some helper functions.

  0.1

      * Initial release.
changelog-type: text
description: |+
  WAI predicates
  ==============

  Evaluate predicate functions against WAI requests and receive
  metadata in addition to a success/failure indicator.

  Predicates can be combined using logical connectives and the
  metadata are passed on accordingly.

  Contributing
  ------------

  If you want to contribute to this project please read the file
  CONTRIBUTING first.

description-type: markdown
hash: 46ec4b4afcecac28810e6a13613fedc0c995419cb7c5e18d3dd62eed258b434f
homepage: https://gitlab.com/twittner/wai-predicates/
latest: 1.0.0
license-name: LicenseRef-OtherLicense
maintainer: Toralf Wittner <tw@dtex.org>
synopsis: WAI request predicates
test-bench-deps:
  base: '>=0'
  blaze-builder: '>=0.3'
  bytestring: '>=0'
  case-insensitive: '>=0'
  http-types: '>=0'
  tasty: '>=0.8'
  tasty-hunit: '>=0.9'
  tasty-quickcheck: '>=0.8'
  wai: '>=0'
  wai-predicates: '>=0'
