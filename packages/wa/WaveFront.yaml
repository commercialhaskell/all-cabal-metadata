all-versions:
- 0.1.0.0
- 0.1.0.1
- 0.1.0.2
- 0.1.2.0
- 0.5.0.0
author: Jonatan H Sundqvist
basic-deps:
  Cartesian: '>=0'
  QuickCheck: '>=0'
  attoparsec: '>=0'
  base: '>=4 && <5'
  containers: '>=0'
  either: '>=0'
  filepath: '>=0'
  lens: <=4.14
  linear: '>=0'
  text: '>=0'
  transformers: '>=0'
  vector: '>=0'
changelog: ''
changelog-type: ''
description: "3DWaves\r\n=======\r\n\r\nThis is a personal project, still in its infancy,
  and I don't expect anybody else to use it. Should somehow happen upon this site,
  I would however welcome their support and feedback.\r\n\r\n## Contents\r\nWavefront
  OBJ parsers and related amenities. Includes purely functional parsers\r\nand IO
  utilities for loading models from files.\r\n\r\nSupports the basic MTL and OBJ attributes.
  My ambition is to add full support for the entire specification.\r\n\r\nPlease note
  that this package is *completely unaware of rendering and graphics*. The data structures
  generated by the parsers are oblivious to technologies such as Direct3D and OpenGL;
  creating eg. GPU buffers is up to the client.\r\n\r\nI may at some point implement
  the FFI and add direct OpenGL support, in separate modules.\r\n\r\n## Examples\r\n\r\n\r\n##
  Maintainers\r\nJonatan H Sundqvist\r\n\r\n## TODO\r\n\r\nSee source files (.hs)
  for additional items.\r\n\r\n- [ ] Performance (currently, it's atrocious) (...)\r\n
  \     - Parallelism (...)\r\n- [ ] Add sample models and demos (...)\r\n- [ ] Add
  profiling and checks (cf. QuickCheck)\r\n      - Travis-CI integration\r\n- [x]
  GHCi support (added .ghci file, works quite well)\r\n- [x] Proper ticket system
  ([here](https://github.com/SwiftsNamesake/3DWaves/issues/))\r\n- [ ] Polymorphism
  (...)\r\n- [ ] Querying\r\n      - Asking questions about a particular model (bounds,
  storage, number of faces, material types, etc.)\r\n      - Asking questions about
  the OBJ and MTL formats (eg. 'what does the various illum values mean')\r\n      -
  Screenshots (maybe in the wavefront-render package)\r\n- [ ] Serialising (eg. writing
  to OBJ and MTL)\r\n- [ ] Rendering\r\n      - Create a separate package (wavefront-render)
  with an OpenGL backend\r\n- [ ] Executables\r\n      - OBJ viewer (...)\r\n      -
  Command line tool (?)\r\n- [ ] Foreign function interface"
description-type: markdown
hash: 1969996ddcc648787424332a7dda3409bff50e391bd0b3d53ced519580b3de68
homepage: ''
latest: 0.5.0.0
license-name: MIT
maintainer: jonatanhsundqvist@gmail.com
synopsis: Parsers and utilities for the OBJ WaveFront 3D model format
test-bench-deps: {}
