all-versions:
- 0.1.0.0
- 0.1.0.1
- 0.1.0.2
- 0.1.0.3
- 0.1.0.4
- 0.1.0.5
author: t4ccer
basic-deps:
  base: '>=4.10.0 && <5'
  bytestring: '>=0.10 && <0.12'
  cereal: '>=0.5.8 && <0.6'
  data-default: '>=0.7 && <0.8'
  hedis: '>=0.14 && <0.16'
  http-types: <0.13
  vault: '>=0.3.1 && <0.4'
  wai: '>=3.2 && <3.3'
  wai-session: '>=0.3.3 && <0.4'
  wai-session-redis: '>=0'
  warp: <3.4
changelog: ''
changelog-type: ''
description: "# wai-session-redis\n\n[![GitHub Workflow Status](https://img.shields.io/github/workflow/status/t4ccer/wai-session-redis/Build?label=build)](https://github.com/t4ccer/wai-session-redis/actions/workflows/build.yml)\n[![Hackage](https://img.shields.io/hackage/v/wai-session-redis?color=blue)](https://hackage.haskell.org/package/wai-session-redis)\n\nProvides
  Redis based session store for [Network.Wai.Session](https://hackage.haskell.org/package/wai-session)
  \ \nFor example usage view [example/Main.hs](https://github.com/t4ccer/wai-session-redis/tree/main/example/Main.hs)\n\n##
  Tests\nTo run tests `wai-session-redis` must have access to running `redis` instance.\n###
  Using docker and stack\n```bash\ndocker run --name redis-session-tests -p 6379:6379
  -d redis\nstack test\ndocker rm -f redis-session-tests\n```\n\n### Using nix\nNix
  takes care of running `redis` instance and testing `wai-session-redis`.\n```bash\nnix-build\n```\n"
description-type: markdown
hash: bf08e24d364c2bccd13e29405e355598451024850d314291f7ac544e2b7b213d
homepage: https://github.com/t4ccer/wai-session-redis#readme
latest: 0.1.0.5
license-name: BSD-3-Clause
maintainer: t4ccer@gmail.com
synopsis: Simple Redis backed wai-session backend.
test-bench-deps:
  base: '>=4.10.0 && <5'
  bytestring: '>=0.10 && <0.12'
  cereal: '>=0.5.8 && <0.6'
  data-default: '>=0.7 && <0.8'
  hedis: '>=0.14 && <0.16'
  hspec: <2.10
  vault: '>=0.3.1 && <0.4'
  wai: '>=3.2 && <3.3'
  wai-session: '>=0.3.3 && <0.4'
  wai-session-redis: '>=0'
