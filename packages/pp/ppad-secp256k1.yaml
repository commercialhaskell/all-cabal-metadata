all-versions:
- 0.1.0
- 0.2.0
- 0.2.1
- 0.2.2
- 0.3.0
- 0.4.0
author: Jared Tobin
basic-deps:
  base: '>=4.9 && <5'
  bytestring: '>=0.9 && <0.13'
  ppad-hmac-drbg: '>=0.1 && <0.2'
  ppad-sha256: '>=0.2 && <0.3'
  primitive: '>=0.8 && <0.10'
changelog: |+
  # Changelog

  - 0.4.0 (2025-06-21)
    * Scalar multiplication, signing, verifying, and ECHD functions are now
      all total, returning 'Nothing' when supplied with invalid inputs.
    * Adds a group element check to 'mul_wnaf'.

  - 0.3.0 (2025-03-14)
    * Adds 'ecdh' for computing ECDH secrets, any given secret being the
      SHA256 hash of the x-coordinate of the appropriate secp256k1 point.

  - 0.2.2 (2025-02-16)
    * Exports the secp256k1 "point at infinity" as _CURVE_ZERO.

  - 0.2.1 (2024-12-18)
    * Adds 'serialize_point' for compressed-format serialization of
      secp256k1 points.

  - 0.2.0 (2024-11-08)
    * Adds wNAF ("w-ary non-adjacent form") scalar multiplication, as
      well as fast 'sign' and 'verify' variants for Schnorr and ECDSA
      (disambiguated by a trailing apostrophe) that make use of it.

      Each wNAF-powered function requires a 'Context' consisting of
      precomputed secp256k1 generator multiples; one can be gotten via
      'precompute'.

      Note that the non-wNAF-powered sign and verify functions have
      incurred a slight performance decrease (on the order of tens to
      hundreds of microseconds) as a result.

    * Adds 'parse_sig' for parsing compact signatures.

    * Adds a dependency on the 'primitive' library (already transitively required
      via 'ppad-hmac-drbg').

  - 0.1.0 (2024-10-19)
    * Initial release, supporting public key derivation and Schnorr &
      ECDSA signatures on secp256k1.

changelog-type: text
description: |-
  Pure BIP0340-style Schnorr signatures, deterministic RFC6979 ECDSA, and
  ECDH shared secret computation on the elliptic curve secp256k1.
description-type: haddock
hash: 420af4305bfe792b407f50e87858579d9f30e650e120515abff13f0dd8960d61
homepage: ''
latest: 0.4.0
license-name: MIT
maintainer: jared@ppad.tech
synopsis: |-
  Schnorr signatures, ECDSA, and ECDH on the elliptic curve
  secp256k1
test-bench-deps:
  aeson: '>=0'
  attoparsec: '>=0'
  base: '>=0'
  base16-bytestring: '>=0'
  bytestring: '>=0'
  criterion: '>=0'
  deepseq: '>=0'
  ppad-secp256k1: '>=0'
  ppad-sha256: '>=0'
  tasty: '>=0'
  tasty-hunit: '>=0'
  text: '>=0'
  weigh: '>=0'
