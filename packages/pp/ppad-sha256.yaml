all-versions:
- 0.2.0
- 0.2.1
- 0.2.2
- 0.2.3
author: Jared Tobin
basic-deps:
  base: '>=4.9 && <5'
  bytestring: '>=0.9 && <0.13'
changelog: |
  # Changelog

  - 0.2.3 (2025-01-21)
    * Improves padding handling for the strict bytestring case, yielding
      performance increases for both 'hash' and 'hmac'.

  - 0.2.2 (2025-01-07)
    * Minor bytestring-handling optimisations.

  - 0.2.1 (2024-10-13)
    * Adds an INLINE pragma to an internal step function.
    * 'hmac' no longer calls 'hmac_lazy', which has no practical effect
      other than to clean up profiling reports generated by GHC.

  - 0.2.0 (2024-10-07)
    * 'hmac' and 'hmac_lazy' now hash long keys before computing a HMAC,
      instead of throwing an error, matching RFC 2104's suggested behaviour.

  - 0.1.0 (2024-09-14)
    * Initial release, supporting SHA256 and HMAC-SHA256 on strict and lazy
      bytestrings.
changelog-type: text
description: |-
  A pure implementation of SHA-256 and HMAC-SHA256 on strict and lazy
  ByteStrings, as specified by RFC's 6234 and 2104.
description-type: haddock
hash: 166a84963e6753dbffea1f08987b4b2d4afb55755c2ebb55cc22e5dca288f364
homepage: ''
latest: 0.2.3
license-name: MIT
maintainer: jared@ppad.tech
synopsis: The SHA-256 and HMAC-SHA256 algorithms
test-bench-deps:
  SHA: '>=0'
  aeson: '>=0'
  base: '>=0'
  base16-bytestring: '>=0'
  bytestring: '>=0'
  criterion: '>=0'
  ppad-sha256: '>=0'
  tasty: '>=0'
  tasty-hunit: '>=0'
  text: '>=0'
