all-versions:
- '0.1'
- 0.1.1
- 0.1.2
- 0.1.3
- '0.2'
- 0.2.1
- 0.2.2
author: Martijn van Steenbergen
basic-deps:
  base: <5
  mtl: '>=1.1 && <2.3'
  multirec: '>=0.4 && <0.8'
  parsec: '>=3.0 && <3.2'
changelog: ''
changelog-type: ''
description: |-
  @Annotations@ provides utility functions to make working with annotated trees easier. There are two implementations: one for working with open datatypes that explicitly make their child positions accessible through a type argument, and one for working with MultiRec datatypes.

  Parser combinators make it easy to construct trees annotated with position information. For the MultiRec implementation, there is the @Yield@ monad that allows construction of trees in postorder.

  Error algebras allow destruction of trees using catamorphisms. The algebra is allowed to indicate failure in which case the error is automatically coupled with the annotation at the position at which the error occurred.
description-type: haddock
hash: 16298e5bcb4e6887d5cfeb423be3557f2409b5370d685d9eaac1647758106fd1
homepage: ''
latest: 0.2.2
license-name: BSD-3-Clause
maintainer: martijn@van.steenbergen.nl
synopsis: Constructing, analyzing and destructing annotated trees
test-bench-deps:
  Annotations: '>=0'
  base: '>=3.0 && <5'
  mtl: '>=1.1 && <2.3'
  multirec: '>=0.4 && <0.8'
  parsec: '>=3.0 && <3.2'
