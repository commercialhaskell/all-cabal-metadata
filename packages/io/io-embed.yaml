all-versions:
- 0.1.0.0
author: Gabriel Tollini
basic-deps:
  base: '>=4.7 && <5'
  bytestring: '>=0.11.5.2 && <0.13'
  hspec: '>=2.11.7 && <2.12'
  template-haskell: '>=2.20.0.0 && <2.23.0.0'
changelog: |
  # Changelog for `IOEmbed`

  All notable changes to this project will be documented in this file.

  The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),
  and this project adheres to the
  [Haskell Package Versioning Policy](https://pvp.haskell.org/).

  ## Unreleased

  ## 0.1.0.0 - YYYY-MM-DD
changelog-type: markdown
description: |-
  # IOEmbed
  This library allows you to embed the result of an `IO` computation at compile time - as long as said computation is internally typed as: `Char`, `String`, `Integer`, `Rational`, or `ByteString`.

  ## Installation
  This package is available through both Cabal and Stackage.

  ## Usage
  Here's how you could embed the contents of a file using `IOEmbed`:

  ```haskell
  {-# LANGUAGE TemplateHaskell #-}

  fileContent = $(embedIO $ readFile "./README.md")
  ```

  Alternativelly, you could use `IOEmbedLit` by hand-crafting a [`Lit`](https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Lit). This is useful if you want to embed something other than the types listed above.

  ```haskell
  {-# LANGUAGE TemplateHaskell #-}

  fileContentL = $(embedIOLit $ StringL <$> readFile "./README.md")
  ```
description-type: markdown
hash: 7c1ff21dd08918bc9003831ecfca135f7e0adf87a8ac116429530e0b765912c4
homepage: https://github.com/gtollini/io-embed#readme
latest: 0.1.0.0
license-name: BSD-3-Clause
maintainer: gabrieltollini@hotmail.com
synopsis: Use Template Haskell to embed the result of an IO computation.
test-bench-deps:
  base: '>=4.7 && <5'
  bytestring: '>=0.11.5.2 && <0.13'
  hspec: '>=2.11.7 && <2.12'
  io-embed: '>=0'
  template-haskell: '>=2.20.0.0 && <2.23.0.0'
