homepage: https://github.com/lambdabot/IOSpec
changelog-type: ''
hash: 8a5c61b1f0f6bb5b28700e15cbfdba9d90728c96852fc395757e1751962e2084
test-bench-deps: {}
maintainer: Bertram Felgenhauer <int-e@gmx.de>
synopsis: A pure specification of the IO monad.
changelog: ''
basic-deps:
  Stream: <1
  base: '>=4.8.0.0 && <5'
  mtl: '>=2 && <3'
  QuickCheck: '>=2 && <3'
all-versions:
- '0.1'
- 0.1.1
- '0.2'
- 0.2.1
- 0.2.2
- 0.2.3
- 0.2.4
- 0.2.5
- 0.2.6
- '0.3'
- 0.3.1
- 0.3.1.1
- 0.3.1.2
author: |-
  Wouter Swierstra,
  Yusaku Hashimoto,
  Nikolay Amiantov,
  Bertram Felgenhauer
latest: 0.3.1.2
description-type: text
description: "IOSpec version 0.3.1.1\n  Author: Wouter Swierstra <w.s.swierstra@uu.nl>\n
  \ Maintainer: Bertram Felgenhauer <int-e@gmx.de>\n\nIOSpec provides a library containing
  pure, executable specifications\nof a few functions from the IO monad. \n\nBuild
  instructions:\n\n    $ runhaskell Setup.lhs configure\n    $ runhaskell Setup.lhs
  build\n    $ runhaskell Setup.lhs install\n\nFor further instructions, see:\n    https://www.haskell.org/cabal/users-guide/installing-packages.html#building-and-installing-packages\n\nDocumentation:\n\nPlease
  have a look at the latest documentation available from:\n    https://hackage.haskell.org/package/IOSpec\n\nTo
  build the Haddock API execute the following command:\n    $ runhaskell Setup.lhs
  haddock\n\nThis will require Haddock 2.0.\n\nCheck out the examples directory for
  the following examples:\n\n    * Echo.hs - illustrates how to test the echo function.\n
  \   * Queues.hs - an implementation of queues using IORefs.\n    * Channels.hs -
  an implementation of channels using MVars.\n    * Sudoku.hs - a parallel Sudoku
  solver that uses STM and MVars\n         based on Graham Hutton's version of Richard
  Bird's \"Solving Sudoku\".\n\nEvery example contains quite some comments, explaining
  how to use\nthe library.\n"
license-name: BSD-3-Clause
