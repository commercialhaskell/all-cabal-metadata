homepage: ''
changelog-type: markdown
hash: 1acd1648161ea47668b0483249ba99f284542b597cdc01f084dc5be325f766f8
test-bench-deps:
  bytestring: -any
  base: -any
  jacinda-lib: -any
  criterion: -any
  silently: -any
  tasty-hunit: -any
  tasty: -any
  deepseq: -any
maintainer: vamchale@gmail.com
synopsis: Functional, expression-oriented data processing language
changelog: |
  # 1.2.0.0

    * `~`, `!~` builtins require that the regex be the second argument.

  # 1.1.0.0

    * Add builtin for last field
    * Performance improvements
    * Fix bug in how fields were split
    * `:` works on column literals
    * Add `#*` (list length) builtin

  # 1.0.0.0

    * Generalize type of `\.` (prior)
    * Reintroduce monomorphism restriction (oops)
    * Better errors for ambiguous types
    * Multiple folds no longer blow up memory in some cases
    * `option` can be curried (parse bug fixed)

  # 0.3.1.0

    * Performance improvements
    * Bug fix, dfns are renamed properly
    * Add `-.` negate function
    * Work with shell shebangs
    * Implement `=` for boolean
    * Add `captures` as a builtin
    * Add `|>`, fold without seed
    * Allow `fn...` declarations with no arguments and no parentheses
    * Add conditionals
    * Fix bug in normalizing `Some` and `None`
    * Fix bug in indexing + filter
    * Fix bug in polymorphic functions used at multiple sites
    * Change parsing/rewrite so `f a b + c` parses as `(f a b) + c` rather than `f a (b + c)`
    * Fix bug in parser rewriting in `@include`d files
    * Include searches current directory

  # 0.3.0.0

    * Fix renaming bug that was inveigling folds with lambdas
    * Add `nf` builtin
    * Add deduplication builtin (`~.`)
    * Add anchor ability to print multiple streams
    * Make `Option` a functor
    * Add `Witherable` class, `:?` (mapMaybe)
    * Allow file `@include`s (crude library capability)
    * Fix typos in manpage

  # 0.2.1.0

    * Add `fp` builtin
    * Add `:` unary operator
    * Floor/ceiling operators
    * `Some` and `None` literals

  # 0.2.0.0

    * Complete implementation of folds/maps for lists
    * Fix space leak in folds
    * Fix line splitting (no longer discard blank lines)
    * Dfn fix
    * Allow escaped characters in strings
    * Add several builtin functions
    * Location information when reporting errors related to typeclasses
    * Option type
    * Selectors for tuples

  # 0.1.0.0

  * Initial release
basic-deps:
  bytestring: -any
  base: -any
  jacinda-lib: -any
  optparse-applicative: '>=0.13.0.0'
all-versions:
- 0.1.0.0
- 0.2.0.0
- 0.2.1.0
- 0.3.0.0
- 0.3.1.0
- 1.0.0.0
- 1.1.0.0
- 1.2.0.0
author: Vanessa McHale
latest: 1.2.0.0
description-type: markdown
description: |
  Jacinda is a functional, expression-oriented data processing language,
  complementing [AWK](http://www.awklang.org).

  # Installation

  ## Releases

  There are binaries for some platforms on the [releases page](https://github.com/vmchale/jacinda/releases/).

  If you are on Mac, you will need to install `*-librure.dylib` as well.

  ## From Source

  First, install [Rust's regex library](https://github.com/rust-lang/regex/tree/master/regex-capi#c-api-for-rusts-regex-engine). You'll need to put `librure.so` or `librure.dylib` etc. in the appropriate place.

  If you have [cabal](https://www.haskell.org/cabal/) and [GHC](https://www.haskell.org/ghc/) installed (perhaps via [ghcup](https://www.haskell.org/ghcup/)):

  ```
  cabal install jacinda
  ```

  ## Vim Plugin

  There is a [vim plugin](https://github.com/vmchale/jacinda-vim).

  # SHOCK & AWE

  ```
  curl -sL https://raw.githubusercontent.com/nychealth/coronavirus-data/master/latest/now-weekly-breakthrough.csv | \
      ja ',[1.0-x%y] {ix>1}{`5:} {ix>1}{`17:}' -F,
  ```

  ## Rosetta

  Replace

  ```awk
  NF == 1 && $1 != "}" {
    haveversion[$1] = 1
  }
  END {
    for (i in haveversion)
      printf "have-%s = yes\n", i
  }
  ```

  with

  ```
  (sprintf 'have-%s = yes')" ~.{nf=1 & `1 != '}'}{`1}
  ```

  # Documentation

  See the [guide](https://vmchale.github.io/jacinda/), which contains a tutorial
  on some of the features as well as examples.

  The manpages document the builtins and provide a syntax reference.

  # Status

  The project is in beta, it doesn't necessarily work and there are many
  missing features, but the language will remain stable.

  It is worse than awk but it has its place and it avoids some of the painful
  imperative/scoping defects.

  ## Missing Features & Bugs

    * No nested dfns
    * Obscure renamer edge cases during evaluation
    * `printf` formatting for floats
    * No list literal syntax
    * Typeclasses are not documented
    * Postfix `:f` and `:i` are handled poorly
    * Polymorphic functions can't be instantiated with separate types (global
      monomorphism restriction)
    * Expressions with multiple folds blow up in memory sometimes

  Intentionally missing features:

    * No loops

  # Advantages

    * [Rust's regular expressions](https://docs.rs/regex/)
      - extensively documented with Unicode support
    * Deduplicate builtin
license-name: AGPL-3.0-only
