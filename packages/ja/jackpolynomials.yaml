homepage: https://github.com/stla/jackpolynomials#readme
changelog-type: markdown
hash: 4c931276601c5b17bc87b7938c575b15d02a8f6601899f336565dcb69807d7a4
test-bench-deps: {}
maintainer: laurent_step@outlook.fr
synopsis: Jack, zonal, and Schur polynomials
changelog: |-
  1.0.0.0
  -------
  * initial release

  1.0.0.1
  -------
  * removed the upper bounds of the dependencies
basic-deps:
  base: '>=4.7 && <5'
  array: '>=0.5.4.0'
  mpolynomials: '>=0.1.0.0'
  lens: '>=5.0.1'
  math-functions: '>=0.3.4.2'
  ilist: '>=0.4.0.1'
  numeric-prelude: '>=0.4.4'
all-versions:
- 1.0.0.0
- 1.0.0.1
author: St√©phane Laurent
latest: 1.0.0.1
description-type: markdown
description: "# jackpolynomials\n\nSchur polynomials have applications in combinatorics
  and zonal polynomials have\napplications in multivariate statistics. They are particular
  cases of\n[Jack polynomials](https://en.wikipedia.org/wiki/Jack_function). This
  package\nallows to evaluate these polynomials. It can also compute their symbolic
  form.\n\n```haskell\nimport Math.Algebra.Jack\nimport Data.Ratio\njackPol [1, 1]
  [3, 1] (2%1)\n-- 48 % 1\n```\n\n```haskell\nimport Math.Algebra.JackPol\nimport
  Data.Ratio\nimport Math.Algebra.MultiPol\njp = jackPol 2 [3, 1] (2%1)\njp\n-- (M
  (Monomial {coefficient = 18 % 1, powers = fromList [1,3]}) \n--  :+: \n--  M (Monomial
  {coefficient = 12 % 1, powers = fromList [2,2]})) \n--  :+: \n--  M (Monomial {coefficient
  = 18 % 1, powers = fromList [3,1]})\nprettyPol show \"x\" jp\n-- \"(18 % 1) * x^(1,
  3) + (12 % 1) * x^(2, 2) + (18 % 1) * x^(3, 1)\"\nevalPoly jp [1, 1]\n-- 48 % 1\n```\n"
license-name: GPL-3.0-only
