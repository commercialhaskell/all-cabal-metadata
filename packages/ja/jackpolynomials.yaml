all-versions:
- 1.0.0.0
- 1.0.0.1
- 1.1.0.0
- 1.1.0.1
- 1.1.1.0
- 1.1.2.0
- 1.2.0.0
- 1.2.1.0
author: StÃ©phane Laurent
basic-deps:
  array: '>=0.5.4.0 && <0.6'
  base: '>=4.7 && <5'
  combinat: '>=0.2.10 && <0.3'
  containers: '>=0.6.4.1 && <0.8'
  hspray: '>=0.2.6.0 && <1'
  ilist: '>=0.4.0.1 && <0.4.1'
  lens: '>=5.0.1 && <5.3'
  numeric-prelude: '>=0.4.4 && <0.5'
changelog: "1.0.0.0\r\n-------\r\n* initial release\r\n\r\n1.0.0.1\r\n-------\r\n*
  removed the upper bounds of the dependencies\r\n\r\n1.1.0.0\r\n-------\r\n* replaced
  the 'mpolynomials' dependency with 'hspray'\r\n* unit tests\r\n\r\n1.1.0.1\r\n-------\r\n*
  unexported some useless functions\r\n* one more unit test\r\n\r\n1.1.1.0\r\n-------\r\n*
  `schurPol` now returns a `Spray a`\r\n* added package upper bounds in the cabal
  file\r\n* increased the version of the dependencies **hspray** and **hypergeomatrix**\r\n*
  cleaned the code\r\n* tested with higher versions of GHC\r\n* new unit tests\r\n\r\n1.1.2.0\r\n-------\r\n*
  skew Schur polynomials (functions `skewSchur` and `skewSchurPol`)\r\n\r\n1.2.0.0\r\n-------\r\n*
  it is now possible to choose which Jack polynomial to get or evaluate, `J`, `C`,
  `P` or `Q` \r\n(the previous versions returned `J` only)\r\n\r\n* it is now possible
  to get Jack polynomials with a symbolic Jack parameter\r\n\r\n1.2.1.0\r\n-------\r\n*
  a new module provides some stuff to deal with symmetric polynomials, mainly \r\nsome
  functions to print them as a linear combination of the monomial symmetric \r\npolynomials,
  and a function to check the symmetry"
changelog-type: markdown
description: "# jackpolynomials\r\n\r\n*Jack, zonal, Schur and skew Schur polynomials.*\r\n\r\n<!--
  badges: start -->\r\n[![Stack-lts](https://github.com/stla/jackpolynomials/actions/workflows/Stack-lts.yml/badge.svg)](https://github.com/stla/jackpolynomials/actions/workflows/Stack-lts.yml)\r\n[![Stack-nightly](https://github.com/stla/jackpolynomials/actions/workflows/Stack-nightly.yml/badge.svg)](https://github.com/stla/jackpolynomials/actions/workflows/Stack-nightly.yml)\r\n<!--
  badges: end -->\r\n\r\nSchur polynomials have applications in combinatorics and
  zonal polynomials have\r\napplications in multivariate statistics. They are particular
  cases of\r\n[Jack polynomials](https://en.wikipedia.org/wiki/Jack_function). This
  package\r\nallows to evaluate these polynomials. It can also compute their symbolic
  form.\r\n\r\n___\r\n\r\nEvaluation of the Jack polynomial with parameter `2` associated
  to the integer \r\npartition `[3, 1]` at `x1 = 1` and `x2 = 1`:\r\n\r\n```haskell\r\nimport
  Math.Algebra.Jack\r\njack' [1, 1] [3, 1] 2 'J'\r\n-- 48 % 1\r\n```\r\n\r\nThe non-evaluated
  Jack polynomial:\r\n\r\n```haskell\r\nimport Math.Algebra.JackPol\r\nimport Math.Algebra.Hspray\r\njp
  = jackPol' 2 [3, 1] 2 'J'\r\nputStrLn $ prettyQSpray jp\r\n-- 18*x^3.y + 12*x^2.y^2
  + 18*x.y^3\r\nevalSpray jp [1, 1]\r\n-- 48 % 1\r\n```\r\n\r\nThe first argument,
  here `2`, is the number of variables of the polynomial.\r\n\r\n\r\n### Symbolic
  (or parametric) Jack polynomial\r\n\r\nAs of version `1.2.0.0`, it is possible to
  get Jack polynomials with a \r\nsymbolic Jack parameter:\r\n\r\n```haskell\r\nimport
  Math.Algebra.JackSymbolicPol\r\nimport Math.Algebra.Hspray\r\njp = jackSymbolicPol'
  2 [3, 1] 'J'\r\nputStrLn $ prettySymbolicQSpray \"a\" jp\r\n-- { 2*a^2 + 4*a + 2
  }*x^3.y + { 4*a + 4 }*x^2.y^2 + { 2*a^2 + 4*a + 2 }*x.y^3\r\nputStrLn $ prettyQSpray'
  $ evalSymbolicSpray jp 2\r\n-- 18*x^3.y + 12*x^2.y^2 + 18*x.y^3\r\n```\r\n\r\nFrom
  the definition of Jack polynomials, as well as from their implementation \r\nin
  this package, the coefficients of the Jack polynomials are fractions of \r\npolynomials
  in the Jack parameter. However, in the above example, one can see \r\nthat the coefficients
  of the Jack polynomial `jp` are *polynomials* in the \r\nJack parameter `a`. This
  fact actually is always true for the $J$-Jack \r\npolynomials (not for $C$, $P$
  and $Q$). This is a consequence of the Knop & \r\nSahi combinatorial formula. But
  be aware that in spite of this fact, the \r\ncoefficients of the polynomials returned
  by Haskell are *fractions* of \r\npolynomials. The type of these polynomials is
  `SymbolicSpray`, defined in \r\nthe **hspray** package (which will be possibly renamed
  to `ParametricSpray` \r\nin the future).\r\n\r\n\r\n### Showing symmetric polynomials\r\n\r\nAs
  of version 1.2.1.0, there is a module providing some functions to print a \r\nsymmetric
  polynomial as a linear combination of the monomial symmetric \r\npolynomials. This
  can considerably shorten the expression of a symmetric \r\npolynomial as compared
  to its expression in the canonical basis, and the \r\nmotivation to add this module
  to the package is that any Jack polynomial is \r\na symmetric polynomial. Here is
  an example:\r\n\r\n```haskell\r\nimport Math.Algebra.JackPol\r\nimport Math.Algebra.Jack.SymmetricPolynomials\r\njp
  = jackPol' 3 [3, 1, 1] 2 'J'\r\nputStrLn $ prettySymmetricQSpray jp\r\n-- 42*M[3,1,1]
  + 28*M[2,2,1]\r\n```\r\n\r\nAnd another example, with a symbolic Jack polynomial:\r\n\r\n```haskell\r\nimport
  Math.Algebra.JackSymbolicPol\r\nimport Math.Algebra.Jack.SymmetricPolynomials\r\njp
  = jackSymbolicPol' 3 [3, 1, 1] 'J'\r\nputStrLn $ prettySymmetricSymbolicQSpray \"a\"
  jp\r\n-- { 4*a^2 + 10*a + 6 }*M[3,1,1] + { 8*a + 12 }*M[2,2,1]\r\n```\r\n\r\nOf
  course you can use these functions for other polynomials, but carefully: \r\nthey
  do not check the symmetry. This new module provides the function \r\n`isSymmetricSpray`
  to check the symmetry of a polynomial, much more efficient \r\nthan the function
  with the same name in the **hspray** package.\r\n\r\n\r\n## References\r\n\r\n*
  I.G. Macdonald. *Symmetric Functions and Hall Polynomials*. Oxford Mathematical
  Monographs. The Clarendon Press Oxford University Press, New York, second edition,
  1995.\r\n\r\n* J. Demmel and P. Koev. *Accurate and efficient evaluation of Schur
  and Jack functions*. Mathematics of computations, vol. 75, n. 253, 223-229, 2005.\r\n\r\n*
  Jack polynomials. <https://www.symmetricfunctions.com/jack.htm>.\r\n"
description-type: markdown
hash: 169934050b5f5752cb039138297c40f820dad22d2886e54a756cf5073f7ca082
homepage: https://github.com/stla/jackpolynomials#readme
latest: 1.2.1.0
license-name: GPL-3.0-only
maintainer: laurent_step@outlook.fr
synopsis: Jack, zonal, Schur and skew Schur polynomials
test-bench-deps:
  base: '>=4.7 && <5'
  hspray: '>=0.2.6.0 && <1'
  hypergeomatrix: '>=1.1.0.2 && <2'
  jackpolynomials: '>=0'
  tasty: '>=1.4 && <1.6'
  tasty-hunit: '>=0.10 && <0.11'
