homepage: https://github.com/stla/jackpolynomials#readme
changelog-type: markdown
hash: ad10730f90e1ebf1b5e878c5c9ad63f2e9118d6dbd9277c81e3edccd296ac060
test-bench-deps:
  base: '>=4.7 && <5'
  jackpolynomials: -any
  tasty-hunit: -any
  tasty: -any
  hspray: -any
maintainer: laurent_step@outlook.fr
synopsis: Jack, zonal, and Schur polynomials
changelog: |-
  1.0.0.0
  -------
  * initial release

  1.0.0.1
  -------
  * removed the upper bounds of the dependencies

  1.1.0.0
  -------
  * replaced the 'mpolynomials' dependency with 'hspray'
  * unit tests
basic-deps:
  base: '>=4.7 && <5'
  array: '>=0.5.4.0'
  lens: '>=5.0.1'
  math-functions: '>=0.3.4.2'
  ilist: '>=0.4.0.1'
  hspray: '>=0.1.0.0'
  numeric-prelude: '>=0.4.4'
all-versions:
- 1.0.0.0
- 1.0.0.1
- 1.1.0.0
author: St√©phane Laurent
latest: 1.1.0.0
description-type: markdown
description: |
  # jackpolynomials

  Schur polynomials have applications in combinatorics and zonal polynomials have
  applications in multivariate statistics. They are particular cases of
  [Jack polynomials](https://en.wikipedia.org/wiki/Jack_function). This package
  allows to evaluate these polynomials. It can also compute their symbolic form.

  ```haskell
  import Math.Algebra.Jack
  import Data.Ratio
  jack [1, 1] [3, 1] (2%1)
  -- 48 % 1
  ```

  ```haskell
  import Math.Algebra.JackPol
  import Data.Ratio
  import Math.Algebra.Spray
  jp = jackPol 2 [3, 1] (2%1)
  prettySpray show "x" jp
  -- "(18 % 1) * x^(1, 3) + (12 % 1) * x^(2, 2) + (18 % 1) * x^(3, 1)"
  evalSpray jp [1, 1]
  -- 48 % 1
  ```
license-name: GPL-3.0-only
