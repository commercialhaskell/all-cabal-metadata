all-versions:
- 0.0.3.1
- 0.0.5.0
author: Junaid Rasheed
basic-deps:
  LPPaver: '>=0'
  PropaFP: '>=0.1.1 && <0.2'
  aern2-mfun: '>=0.2.9 && <0.3'
  aern2-mp: '>=0.2.9.1 && <0.3'
  base: '>=4.7 && <5'
  collect-errors: '>=0.1 && <0.2'
  containers: '>=0.6 && <0.7'
  directory: '>=1.3 && <1.4'
  filepath: '>=0'
  mixed-types-num: '>=0.5.10 && <0.6'
  optparse-applicative: '>=0.16 && <0.17'
  parallel: '>=3.2 && <3.3'
  pqueue: '>=1.4 && <1.5'
  simplex-method: '>=0.1 && <0.2'
changelog: |
  # Changelog for LPPaver

  ## [v0.0.5.0](https://github.com/rasheedja/LPPaver/compare/v0.0.4.0...v0.0.5.0)
  - Use a new heuristic for the best-first search algorithm
    - Centre of averages of the ranges of each term in the conjunction is the heuristic
  - Allow larger cutoffs in tests
    - Required for new heuristic
  - Remove an unneeded variable when linearising functions

  ## [v0.0.4.0](https://github.com/rasheedja/LPPaver/compare/v0.0.3.1...v0.0.4.0)

  - Rename LPPaver.Decide modules to LPPaver.Algorithm
    - LPPaver.Decide.Algorithm is now LPPaver.Algorithm.DNF
    - Other LPPaver.Decide.Name modules are now LPPaver.Algorithm.Name
  - Polish documentation
  - Add useful types for our decision algorithms
  - Update decision algorithms to use these types, making them easier to read and maintain as well as returning pavings for each algorithm's result
  - Add option -o to executable to write pavings to a JSON file.

  ## [v0.0.3.1](https://github.com/rasheedja/LPPaver/compare/v0.0.3.1...v0.0.3.1)

  - Write initial README.md and REFERENCE.md
  - Remove haddock documentation using GitHub pages
    - Issues with dependencies so using hackage instead

  ## [v0.0.3.0](https://github.com/rasheedja/LPPaver/compare/v0.0.3.0...v0.0.2.0)

  - Deploy haddock documentation using GitHub pages
  - Clean up and document new modules
  - Split up single Type.hs module into smaller and better encapsulated modules
  - Add constraintRightSide to LPPaver.Constraint.Util
  - Document LPPaver.Constraint.Type and LPPaver.Constraint.Util

  ## [v0.0.2.0](https://github.com/rasheedja/LPPaver/compare/v0.0.2.0...v0.0.1)

  - Replace minView with maxView in 'model search' mode
    - Higher ranges are more likely to produce models
  - Add test suite
    - Uses PropaFP and 'Place' examples
  - Update package dependencies

  ## [v0.0.1](https://github.com/rasheedja/LPPaver/tree/v0.0.1)

  - Initial release
changelog-type: markdown
description: |
  # LPPaver

  LPPaver is an automated prover which targets problems involving nonlinear real arithmetic.
  A paper describing LPPaver in detail is coming soon.

  ## Documentation

  [Haddock](https://haskell-haddock.readthedocs.io/en/latest/) documentation for LPPaver can be found at [Hackage](https://hackage.haskell.org/package/LPPaver).

  ## Reference

  LPPaver understands input that is similar to SMT2.
  LPPaver is designed to work with SMT2 `assert`s.
  If an `assert` contains anything that LPPaver does not understand, the `assert`ion is (currently) silently dropped.
  The full list of accepted inputs can be found in [REFERENCE.md](REFERENCE.md)

  ## Building

  LPPaver can be built with either [Stack](https://docs.haskellstack.org/en/stable/) or [Cabal](https://www.haskell.org/cabal/), though officially we only support Stack.

  ### Stack

  ```sh
  stack build
  ```

  ### Cabal

  ```sh
  cabal build
  ```

  ## Examples

  Examples can be found in directory [test/testFiles](test/testFiles).
  The [Place](test/testFiles/Place) directory contains examples that describe the problem of placing circles of a fixed size into a square of a fixed size in such a way that all of the circles are within the square none of the circles are touching each-other or the edges of the square.
  The problem has also been generalised to higher dimensions.
  A formula describing the problem is shown below:

  ![Formula describing the Place benchmarks](images/PlaceInstancesFormula.png)

  The [PropaFP](test/testFiles/PropaFP) directory contains examples that came from [PropaFP](https://github.com/rasheedja/PropaFP/).
  These examples are described in detail in a [preprint of a paper describing PropaFP](https://arxiv.org/abs/2207.00921).

  In both directories, the sat subdirectory holds files which should be satisfiable, the unsat subdirectory holds files which should be unsatisfiable, and the cannotDecide subdirectory holds files which LPPaver could not decide with default parameters.
description-type: markdown
hash: 039f46986412370732e8f037909a4f3828e7f52c30d7f3cd35c365f5b391381e
homepage: https://github.com/rasheedja/LPPaver#readme
latest: 0.0.5.0
license-name: MPL-2.0
maintainer: rasheeja@aston.ac.uk
synopsis: An automated prover targeting problems that involve nonlinear real arithmetic
test-bench-deps:
  LPPaver: '>=0'
  PropaFP: '>=0.1.1 && <0.2'
  aern2-mfun: '>=0.2.9 && <0.3'
  aern2-mp: '>=0.2.9.1 && <0.3'
  base: '>=4.7 && <5'
  collect-errors: '>=0.1 && <0.2'
  containers: '>=0.6 && <0.7'
  directory: '>=1.3 && <1.4'
  mixed-types-num: '>=0.5.10 && <0.6'
  optparse-applicative: '>=0.16 && <0.17'
  parallel: '>=3.2 && <3.3'
  pqueue: '>=1.4 && <1.5'
  simplex-method: '>=0.1 && <0.2'
