all-versions:
- 0.1.0.0
- 0.1.1.0
- 0.1.1.1
author: Michael Snoyman
basic-deps:
  base: '>=4.9 && <5'
  conduit: '>=1.2.8'
  directory: '>=0'
  filepath: '>=0'
  fsnotify: '>=0.2.1'
  resourcet: '>=0'
  transformers: '>=0'
changelog: |
  ## 0.1.1.1

  * Support fsnotify 0.3

  ## 0.1.1.0

  * Drop older GHC support
  * Make test suite more reliable [#2](https://github.com/fpco/fsnotify-conduit/issues/2)
  * Provide `acquireSourceFileChanges`

  ## 0.1.0.0

  * Initial release
changelog-type: markdown
description: |
  # fsnotify-conduit

  Get filesystem notifications as a stream of events, using the conduit
  package to handle the stream. This uses the
  [fsnotify package](https://www.stackage.org/package/fsnotify), which
  uses OS-specific file notification APIs for efficiency. Simple usage
  example, a program which will print all events for the given directory
  tree:

  ``` haskell
  #!/usr/bin/env stack
  {- stack
       --resolver lts-6.15
       --install-ghc
       runghc
       --package fsnotify-conduit
       --package conduit-combinators
   -}

  import Conduit
  import Data.Conduit.FSNotify
  import System.Environment (getArgs)

  main :: IO ()
  main = do
      args <- getArgs
      dir <-
          case args of
              [dir] -> return dir
              _ -> error $ "Expected one argument (directory to watch)"
      runResourceT
          $ sourceFileChanges (setRelative False $ mkFileChangeSettings dir)
         $$ mapM_C (liftIO . print)
  ```
description-type: markdown
hash: 669438713758f56377b44da41a748ef79eb302b17679d1bfd1f0b4563985ce43
homepage: https://github.com/fpco/fsnotify-conduit#readme
latest: 0.1.1.1
license-name: MIT
maintainer: michael@snoyman.com
synopsis: Get filesystem notifications as a stream of events
test-bench-deps:
  base: '>=4.9 && <5'
  conduit: '>=1.2.8'
  directory: '>=0'
  filepath: '>=0'
  fsnotify: '>=0.2.1'
  fsnotify-conduit: '>=0'
  hspec: '>=0'
  resourcet: '>=0'
  temporary: '>=0'
  transformers: '>=0'
