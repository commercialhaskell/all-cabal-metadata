all-versions:
- '0.1'
- 0.2.0
- 0.3.0
- 0.4.0
- 0.4.1
- 0.4.2
- 0.4.3
- 0.4.4
author: Andy Gimblett <haskell@gimbo.org.uk>
basic-deps:
  MissingH: '>=0'
  base: '>=3 && <5'
  containers: '>=0'
  fgl: '>=5.4.2.0'
  filepath: '>=0'
  graphviz: '>=2999.14.0.0'
  mtl: '>=0'
  parsec: '>=3'
  pretty: '>=0'
changelog: ''
changelog-type: ''
description: |
  fsmActions
  ==========

  This is a library for representing and manipulating finite state
  machines (FSMs) in Haskell, with an emphasis on computing the effects
  of sequences of transitions across entire machines (which we call
  actions), and in particular investigating action equivalences between
  such sequences.

  The motivation for writing this library is investigating models of
  user interfaces; in this context, states are implicit, transitions
  correspond to UI events (e.g. button presses), and sequences of
  transitions correspond to sequences of user actions.  We're interested
  in comparing actions, which are the effects of sequences of
  transitions across the whole device (for example, noticing when some
  action is in fact an undo); for that we need a representation geared
  towards such comparisons -- hence this library, and its idiosyncratic
  view of FSMs.

  See doc/fsmActions.pdf for more information.
description-type: text
hash: 5d2eb292c5e3b0e6c1730fe97ae3187136c1e3b0214e05fdbe7769262ab2db03
homepage: http://projects.haskell.org/fsmActions/
latest: 0.4.4
license-name: BSD-3-Clause
maintainer: Andy Gimblett <haskell@gimbo.org.uk>
synopsis: Finite state machines and FSM actions
test-bench-deps: {}
