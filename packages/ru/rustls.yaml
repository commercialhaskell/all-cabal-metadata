all-versions:
- 0.0.0.0
- 0.0.1.0
- 0.1.0.0
- 0.2.0.0
author: amesgen
basic-deps:
  base: '>=4.16 && <5'
  bytestring: '>=0.10 && <0.13'
  containers: '>=0.6 && <0.8'
  derive-storable: ^>=0.3
  mtl: '>=2.2 && <2.4'
  network: '>=3.1 && <3.3'
  resourcet: ^>=1.2 || ^>=1.3
  text: '>=2.0 && <2.2'
  transformers: '>=0.5.6 && <0.7'
changelog: |
  # Revision history for rustls

  ## 0.2.0.0 -- 24.09.2024

   * Use rustls-ffi 0.14.0.
      * New feature: accessing the OS certificate store via
        `rustls-platform-verifier`.
      * Cipher suites are now tied to a specific cryptography provider.
      * TLS versions are now automatically derived from the specified cipher
        suites.
   * Support GHC 9.10

  ## 0.1.0.0 -- 06.04.2024

   * Use rustls-ffi 0.13.0, including new functionality (like recovactions)
   * Only support GHC >= 9.2
   * `Backend` is now a record instead of a type class

  ## 0.0.1.0 -- 12.03.2022

   * Use rustls-ffi 0.9.2
   * Use `ConstPtr` on GHC 9.6.1
   * Report `LogCallback` exceptions via uncaught exception handler

  ## 0.0.0.0 -- 24.06.2022

   * Initial release
changelog-type: markdown
description: |
  # hs-rustls â€” Rustls for Haskell
  [![CI](https://github.com/amesgen/hs-rustls/workflows/CI/badge.svg)](https://github.com/amesgen/hs-rustls/actions)
  [![Hackage](https://img.shields.io/hackage/v/rustls)](https://hackage.haskell.org/package/rustls)

  Haskell bindings for the [Rustls](https://github.com/rustls/rustls) TLS library via [rustls-ffi](https://github.com/rustls/rustls-ffi).

  See [the haddocks](https://hackage.haskell.org/package/rustls/docs/Rustls.html) for documentation.

  Also see:

   - [http-client-rustls](/http-client-rustls): Make HTTPS requests using [http-client](https://hackage.haskell.org/package/http-client) and Rustls.

  ## Development

  ### With Nix

  When developing this library, just drop into a Nix shell.

  If you want to depend on this library in another package, you have to make sure to include rustls-ffi as a native dependency. You can do so by depending on the `github:amesgen/hs-rustls?dir=nix-rustls` flake, and then using the `nix-rustls.packages.${system}.default` output.

  ### Without Nix

  #### rustls-ffi

  Make sure to have [Cargo](https://doc.rust-lang.org/stable/cargo/getting-started/installation.html) installed. Then, clone and install rustls-ffi:

  ```bash
  git clone https://github.com/rustls/rustls-ffi -b v0.14.0
  cd rustls-ffi
  make DESTDIR=/path/to/some/dir install
  ```

  Then, in a `cabal.project.local`, add these lines:

  ```cabal
  extra-include-dirs: /path/to/some/dir/include
  extra-lib-dirs:     /path/to/some/dir/lib
  ```

  With this, Cabal should be able to find the rustls-ffi native library.

  > Note: This process might become less manual if sth like [haskell/cabal#7906](https://github.com/haskell/cabal/issues/7906) lands in Cabal.

  #### Testing

  When running the tests in this repo, you have to have [minica](https://github.com/jsha/minica) and [miniserve](https://github.com/svenstaro/miniserve) installed.
description-type: markdown
hash: 4a93cf1d521a51b04e9edbc723b74c64936f5d251bef9c2bdf5e975d299e8e44
homepage: https://github.com/amesgen/hs-rustls/tree/main/rustls
latest: 0.2.0.0
license-name: CC0-1.0
maintainer: amesgen@amesgen.de
synopsis: TLS bindings for Rustls
test-bench-deps:
  async: ^>=2.2
  base: '>=0'
  bytestring: '>=0'
  containers: '>=0'
  directory: ^>=1.3
  filepath: '>=1.4 && <1.6'
  hedgehog: '>=1.0 && <1.6'
  process: ^>=1.6
  resourcet: '>=0'
  rustls: '>=0'
  stm: ^>=2.5
  tasty: '>=1.3 && <1.6'
  tasty-hedgehog: '>=1.0 && <1.5'
  tasty-hunit: ^>=0.10
  temporary: ^>=1.3
  text: '>=0'
  transformers: '>=0'
