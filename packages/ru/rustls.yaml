homepage: https://github.com/amesgen/hs-rustls/tree/main/rustls
changelog-type: markdown
hash: 82597b89ad79241d858965c6fc179504e38b07728800e34595b847bf340050a2
test-bench-deps:
  rustls: -any
  bytestring: -any
  stm: ^>=2.5
  base: -any
  tasty-hedgehog: '>=1.0 && <1.4'
  text: -any
  filepath: ^>=1.4
  process: ^>=1.6
  hedgehog: '>=1.0 && <1.3'
  async: ^>=2.2
  containers: ^>=0.6
  tasty-hunit: ^>=0.10
  transformers: -any
  temporary: ^>=1.3
  tasty: '>=1.3 && <1.5'
  resourcet: -any
  directory: ^>=1.3
maintainer: amesgen@amesgen.de
synopsis: TLS bindings for Rustls
changelog: |
  # Revision history for rustls
basic-deps:
  bytestring: '>=0.10 && <0.12'
  base: '>=4.12 && <5'
  text: ^>=1.2 || ^>=2.0
  derive-storable-plugin: -any
  network: ^>=3.1
  derive-storable: ^>=0.3
  transformers: '>=0.5.6 && <0.7'
  resourcet: ^>=1.2 || ^>=1.3
all-versions:
- 0.0.0.0
author: amesgen
latest: 0.0.0.0
description-type: markdown
description: |
  # hs-rustls â€” Rustls for Haskell
  [![CI](https://github.com/amesgen/hs-rustls/workflows/CI/badge.svg)](https://github.com/amesgen/hs-rustls/actions)
  [![Hackage](https://img.shields.io/hackage/v/rustls)](https://hackage.haskell.org/package/rustls)

  Haskell bindings for the [Rustls](https://github.com/rustls/rustls) TLS library via [rustls-ffi](https://github.com/rustls/rustls-ffi).

  See [the haddocks](https://hackage.haskell.org/package/rustls/docs/Rustls.html) for documentation.

  Also see:

   - [http-client-rustls](/http-client-rustls): Make HTTPS requests using [http-client](https://hackage.haskell.org/package/http-client) and Rustls.

  ## Development

  ### With Nix

  When developing this library, just drop into a Nix shell.

  If you want to depend on this library in another package, you have to make sure to include rustls-ffi as a native dependency. You can do so by depending on the `github:amesgen/hs-rustls?dir=nix-rustls` flake, and then using the `nix-rustls.packages.${system}.default` output.

  ### Without Nix

  #### rustls-ffi

  Make sure to have [Cargo](https://doc.rust-lang.org/stable/cargo/getting-started/installation.html) installed. Then, clone and install rustls-ffi:

  ```bash
  git clone https://github.com/rustls/rustls-ffi
  cd rustls-ffi
  make DESTDIR=/path/to/some/dir install
  ```

  Then, in a `cabal.project.local`, add these lines:

  ```cabal
  extra-include-dirs: /path/to/some/dir/include
  extra-lib-dirs:     /path/to/some/dir/lib
  ```

  With this, Cabal should be able to find the rustls-ffi native library.

  > Note: This process might become less manual if sth like [haskell/cabal#7906](https://github.com/haskell/cabal/issues/7906) lands in Cabal.

  #### Testing

  When running the tests in this repo, you have to have [minica](https://github.com/jsha/minica) and [miniserve](https://github.com/svenstaro/miniserve) installed.
license-name: CC0-1.0
