all-versions:
- '1.0'
author: ''
basic-deps:
  array: '>=0'
  base: '>=4 && <5'
  containers: '>=0'
  directory: '>=0'
  fgl: '>=0'
  filepath: '>=0'
  haskell98: '>=0'
  mtl: '>=0'
  uuagc: '>=0.9.26'
  uulib: '>=0'
changelog: ''
changelog-type: ''
description: "Ruler-core\n\nRuler-core is an attribute grammar preprocessor, with
  a number of extensions to deal with (inference)-rule based systems.\n\nHow to get
  it to run:\n\n1) checkout the repository or obtain the sources in another way\n2)
  run cabal-install of ruler-core. This will install the dependencies, but will fail
  to build ruler-core itself.\n3) run the cabal-files manually. The following is a
  trace:\n\n$ runghc Setup.hs configure --user\nConfiguring ruler-core-0.9...\n\n\n$
  runghc Setup.hs build\nPreprocessing executables for ruler-core-0.9...\n\"processing:
  src/Ast.ag\"\n\"processing: src/Transform.ag\"\n\"processing: src/Errs.ag\"\nBuilding
  ruler-core-0.9...\n[ 1 of 11] Compiling Env              ( src/Env.hs, dist/build/ruler-core/ruler-core-tmp/Env.o
  )\n[ 2 of 11] Compiling Pretty           ( src/Pretty.hs, dist/build/ruler-core/ruler-core-tmp/Pretty.o
  )\n[ 3 of 11] Compiling Common           ( src/Common.hs, dist/build/ruler-core/ruler-core-tmp/Common.o
  )\n[ 4 of 11] Compiling Ast              ( dist/build/ruler-core/ruler-core-tmp/Ast.hs,
  dist/build/ruler-core/ruler-core-tmp/Ast.o )\n[ 5 of 11] Compiling DepAnalysis      (
  src/DepAnalysis.hs, dist/build/ruler-core/ruler-core-tmp/DepAnalysis.o )\n[ 6 of
  11] Compiling Opts             ( src/Opts.hs, dist/build/ruler-core/ruler-core-tmp/Opts.o
  )\n[ 7 of 11] Compiling Errs             ( dist/build/ruler-core/ruler-core-tmp/Errs.hs,
  dist/build/ruler-core/ruler-core-tmp/Errs.o )\n[ 8 of 11] Compiling Transform        (
  dist/build/ruler-core/ruler-core-tmp/Transform.hs, dist/build/ruler-core/ruler-core-tmp/Transform.o
  )\n[ 9 of 11] Compiling Parser           ( src/Parser.hs, dist/build/ruler-core/ruler-core-tmp/Parser.o
  )\n[10 of 11] Compiling Scanner          ( dist/build/ruler-core/ruler-core-tmp/Scanner.hs,
  dist/build/ruler-core/ruler-core-tmp/Scanner.o )\n[11 of 11] Compiling Main             (
  src/Main.hs, dist/build/ruler-core/ruler-core-tmp/Main.o )\nLinking dist/build/ruler-core/ruler-core
  ...\n\n\nTo see a list of command-line options:\n$ ./dist/build/ruler-core/ruler-core
  \nNo AG source file specified.\nUsage: imp-visits <OPTION ...> <ag-file> ...\n  -o
  path  --output=path  output .hs file\n  -v       --verbose      verbose output\n
  \          --pretty       pp AST to STDOUT\n           --tokens       print tokens
  to STDOUT\n           --haskell      generate Haskell code (default)\n           --js
  \          generate Javascript code\n  -f       --force        force code generation\n
  \          --nodata       do not generate data types\n           --graph=path   output
  .dot file\n           --noline       do not generate LINE pragmas\n\n\nTry an example:\n$
  ./dist/build/ruler-core/ruler-core examples/CycRepmin.rul -o test.hs\n$ ghci test.hs\nGHCi,
  version 6.12.1: http://www.haskell.org/ghc/  :? for help\nLoading package ghc-prim
  ... linking ... done.\nLoading package integer-gmp ... linking ... done.\nLoading
  package base ... linking ... done.\nLoading package ffi-1.0 ... linking ... done.\n[1
  of 1] Compiling CycRepmin        ( test.hs, interpreted )\nOk, modules loaded: CycRepmin.\n*CycRepmin>
  main\nLoading package syb-0.1.0.2 ... linking ... done.\nLoading package base-3.0.3.2
  ... linking ... done.\nLoading package mtl-1.1.0.2 ... linking ... done.\nTree_Bin
  {l_Tree_Bin = Tree_Leaf {x_Tree_Leaf = 1}, r_Tree_Bin = Tree_Bin {l_Tree_Bin = Tree_Leaf
  {x_Tree_Leaf = 1}, r_Tree_Bin = Tree_Leaf {x_Tree_Leaf = 1}}}\n*CycRepmin>\n"
description-type: text
hash: ff093e1a39af3cd058d10a3c3a6af253de67e3205b606cb37a6ed90e4ac6c58b
homepage: http://www.cs.uu.nl/wiki/HUT/WebHome
latest: '1.0'
license-name: LicenseRef-LGPL
maintainer: Arie Middelkoop <ariem@cs.uu.nl>
synopsis: ''
test-bench-deps: {}
