all-versions:
- 0.1.1.0
- 0.2.0.0
- 0.2.1.0
author: Daniel Choi
basic-deps:
  attoparsec: '>=0'
  base: '>=4.6 && <4.9'
  bytestring: '>=0'
  containers: '>=0'
  optparse-applicative: '>=0'
  string-qq: '>=0'
  text: '>=1.1.0.0'
  unordered-containers: '>=0'
changelog: ''
changelog-type: ''
description: "tsvsql\n\nTemplates TSV values into a SQL template\n\ninput.tsv:\napple
  1\nbanana 2\n\ntsvsql $ < input.tsv dist/build/tsvsql/tsvsql 'INSERT into fruits
  (name, price) VALUES ($1, $2:num);'\nINSERT into fruits (name, price) VALUES ('apple',
  1);\nINSERT into fruits (name, price) VALUES ('banana', 2);\n\n\nWARNING: Use single
  quotes around the SQL template expression so that\nBash does not do interpolation.\n\n'null'
  text is translated into NULL:\n\ninput2.tsv\napple\t1\nbanana\tnull\n\ntsvsql $
  < input2.tsv dist/build/tsvsql/tsvsql 'INSERT into fruits (name, price) VALUES ($1,
  $2:num);'\nINSERT into fruits (name, price) VALUES ('apple', 1);\nINSERT into fruits
  (name, price) VALUES ('banana', NULL);\n\nThe subtitution placeholders are like
  this:\n\n    $1      # value is a string; the value is quoted and escaped\n    $2:num
  \ # value is a number; not quoted\n    $3:bool # value is a bool; \"t\" and \"1\"
  are true, \"f\" and \"0\" are false\n\nThe placeholders start counting the first
  TSV value from position 1, not\nzero.\n"
description-type: text
hash: b83d30c7ede760cf6f2dfb53debe8e6e4cfd27733d1ed5a8e93b0b4f1a43e3d1
homepage: https://github.com/danchoi/tsvsql
latest: 0.2.1.0
license-name: MIT
maintainer: dhchoi@gmail.com
synopsis: Template tsv into SQL
test-bench-deps: {}
