all-versions:
- 1.0.0.0
- 1.1.0.0
author: Alexander Vieth, Duncan Coutts, Marcin Szamotulski
basic-deps:
  base: '>=4.12 && <4.22'
  io-classes: ^>=1.8
  singletons: ^>=3.0
changelog: "# Revision history for typed-protocols\n\n## 1.1.0.0 -- 05.08.2025\n\n###
  Breaking changes\n\n* Annotated codecs which allow to retain original bytes received
  from the network.\n  The `Codec` type evolved into a new `CodecF` data type, and
  two type aliases\n  `AnnotatedCodec`, `Codec`.\n* `prop_codec` properties moved
  to `typed-protocols:codec-properties` library\n  (`Network.TypedProtocol.Codec.Properties`
  module).  They now return the\n  `QuickCheck`'s `Property` rather than a `Bool`.\n\n###
  Non-breaking changes\n\n## 1.0.0.0\n\n* Hackage release.\n\n## 0.3.0.0\n\n* `AnyMessageWithAgency`
  pattern synonym is exported as a constructor of `AnyMessage`.\n* Bumped version
  to agree with `typed-protocols-stateful`.\n\n## 0.2.0.0\n\n* A major redesign of
  `typed-protocols`.\n  * `Protocol` class does not require to provide proof obligations
  for agency.\n    Proofs are now provided by the framework for all protocols. Agency
  is now\n    provided by an associated type family `StateAgency`, and evidence for
  it,\n    in form of a singleton, by `StateToken` type family\n    (similar to `Sing`
  from the `singletons` package).\n  * `Peer` takes a different evidence type for
  agency,\n    `Network.TypedProtocol.Peer.{Client,Server}` modules provide pattern
  synonyms\n     which provide agency evidence and thus are easier to use.\n  * One
  `Peer` is provided for both non- and pipelined protocol evolution.\n    An extra
  parameter is added of kind `IsPipelined`. As a result\n    `Outstanding` is now
  a type family rather than a type alias.\n  * `ActiveAgency` type class is used to
  distinguish states in which one side\n    has an agency (e.g. the protocol hasn't
  yet terminated), `nonActiveState` can\n    be used in the same way as `Data.Void.absurd`
  - which is useful when writing\n    codecs.\n\n## 0.1.1.1\n* unbuildable (with `base
  < 0` constraint in CHaP); We cannot support\n`io-classes-1.{6,7}` until `Haskell.Nix`
  support for public sublibraries is\n merged.\n\n## 0.1.0.7 -- 2023-10-20\n\n* Improved
  performance of `prop_codecs_splitsM` and `prop_codecs_compatM`.\n\n## 0.1.0.5 --
  2023-03-08\n\n* Support `ghc-9.6.1`.\n* Use `io-classes-1.1.0.0`.\n\n[singletons-3.0.1]:
  https://hackage.haskell.org/package/singletons \n"
changelog-type: markdown
description: |
  [![Haskell CI](https://img.shields.io/github/actions/workflow/status/input-output-hk/typed-protocols/haskell.yml?branch=main&label=Build&style=for-the-badge)](https://github.com/input-output-hk/typed-protocols/actions/workflows/haskell.yml)
  [![handbook](https://img.shields.io/badge/policy-Cardano%20Engineering%20Handbook-informational?style=for-the-badge)](https://input-output-hk.github.io/cardano-engineering-handbook)


  typed-protocols
  ===============


  A robust session type framework which supports [protocol pipelining][protocol-pipelining].

  Haddocks are published [here][haddocks].


  Public content
  --------------

  [Duncan Coutts][dcoutts] Haskell eXchange 2019 [talk][haskell-eXchange].

  Monadic party workshop by Marcin Szamotulski ([coot]):
  * [part 1][monadic-party-part-1]
  * [part 2][monadic-party-part-2]
  * [part 2][monadic-party-part-3]

  Talk at [Haskell Love 2021][haskell-love] by Marcin Szamotulski ([coot]), [slides][haskell-love-slides].

  An [Agda][typed-protocols-agda] implementation by Marcin Szamotulski ([coot]).


  [protocol-pipelining]: https://www.wikiwand.com/en/Protocol_pipelining
  [haskell-eXchange]: https://www.youtube.com/watch?v=kkynmgwa7gE
  [monadic-party-part-1]: https://www.youtube.com/watch?v=j8gza2L61nM
  [monadic-party-part-2]: https://www.youtube.com/watch?v=oV6KSl1srL8
  [monadic-party-part-3]: https://www.youtube.com/watch?v=nOIQCRPwmPA
  [haskell-love-slides]: https://coot.me/posts/typed-protocols-at-haskell-love.html
  [haskell-love]: https://www.youtube.com/watch?v=EbK6VAqYh3g
  [typed-protocols-agda]: https://coot.me/agda/posts.agda.typed-protocols.html
  [coot]: https://github.com/coot
  [dcoutts]: https://github.com/dcoutts
  [haddocks]: https://input-output-hk.github.io/typed-protocols
description-type: markdown
hash: 0a015725ea91bf56351e70b6f65d563a95ce1e8277c7b795ca514a137438a59a
homepage: ''
latest: 1.1.0.0
license-name: Apache-2.0
maintainer: alex@well-typed.com, duncan@well-typed.com, marcin.szamotulski@iohk.io
synopsis: A framework for strongly typed protocols
test-bench-deps:
  QuickCheck: '>=0'
  base: '>=0'
  bytestring: '>=0'
  contra-tracer: '>=0'
  directory: '>=0'
  io-classes: '>=0'
  io-sim: '>=0'
  network: '>=0'
  tasty: '>=0'
  tasty-quickcheck: '>=0'
  typed-protocols: '>=0'
  unix: '>=0'
