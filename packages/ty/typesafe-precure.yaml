homepage: https://github.com/igrep/typesafe-precure#readme
changelog-type: markdown
hash: 1e0186c5907fc9c154746c90ce51b860e1654d0cfb18d332683ca6ac9e5f9da7
test-bench-deps:
  typesafe-precure: -any
  base: -any
  hspec: -any
maintainer: whosekiteneverfly@gmail.com
synopsis: Type-safe transformations and purifications of PreCures (Japanese Battle
  Heroine)
changelog: "# 0.8.0.1\n\n- From <https://github.com/igrep/typesafe-precure/pull/49>:\n
  \   - Add `VaryingBetweenEpisodes (...)` instance for transformations in DokiDoki!\n
  \   - Use the pretty-simple package for pretty-printing in README.\n- From <https://github.com/igrep/typesafe-precure/pull/48>:\n
  \   - Add Tropical-Rouge PreCure's characters and speech.\n    - Correct Asumi's
  Japanese name.\n    - Introduce the `VaryingBetweenEpisodes` type for Tropical-Rouge's
  transformation speech.\n- From <https://github.com/igrep/typesafe-precure/pull/47>:\n
  \   - BREAKING CHANGE: Use the new `:+:` type to express the \"item and attachments\"
  relationship.\n        - Before this change, any types representing a special item
  have type variables of the attachments. This design works with the almost all items,
  except with the items introduced several years ago. For example, Cure Cosmo's Rainbow
  Perfume has usually an attachment, and sometimes not. In Haskell's type system,
  any types with type variables must have its type variables filled to be an ordinary
  type. To support such items which occasionally use attachments, I deleted any type
  variables from the types of the special items. Now we must use `:+:` to represent
  \"item and attachments\" relationship instead.\n    - Add several purifications
  in Star☆Twinkle PreCure.\n    - Add several purifications of Cure Earth.\n    -
  Fix the transformation into Cure Earth by Asumi.\n    - Fix build error in Hackage:
  Now explicitly depends on autoexporter!\n    - Cosmetic changes.\n\n# 0.7.11.1\n\n-
  Add Healin'Good PreCure's transformation without Hinata.\n\n# 0.7.10.1\n\n- Add
  Healin'Good PreCure's new purification and transformation.\n- Fix the English name
  of Healin'Good PreCure as a transformed group.\n\n# 0.7.9.1\n\n- Add the transformations
  by Cure Grace, Cure Sparkle, and Cure Earth.\n\n# 0.7.8.1\n\n- Add more purifications
  of Healin' Good♡PreCure, and Cure Earth.\n- Correct members of some group transformations
  in Healin' Good♡PreCure.\n\n# 0.7.7.1\n\n- Add Healin' Good♡PreCure PreCure's characters
  and some of their purifications and transformations.\n\n# 0.7.6.2\n\n- Correct Yuni's
  transformation [#40](https://github.com/igrep/typesafe-precure/pull/40)\n\n# 0.7.6.1\n\n-
  Add Shiny Twinkle Pen and its purification in Star☆Twinkle PreCure.\n\n# 0.7.5.1\n\n-
  Add Cure Cosmo and other new purifications of Star☆Twinkle PreCure.\n\n# 0.7.4.1\n\n-
  Add Star☆Twinkle PreCure's purifications and special items:\n    - Libra Soleil
  Shoot\n    - Scorpius Soleil Shoot\n    - Capricorn Selene Arrow\n    - Southern
  Cross Shot\n- Correct some of the Japanese names in StarTwinkle: [#34](https://github.com/igrep/typesafe-precure/pull/34).
  Thanks [\\@tsuka](https://github.com/tsuka)!\n\n# 0.7.3.1\n\n- Add Star☆Twinkle
  PreCure's characters and some of their purifications and transformations.\n\n# 0.7.2.1\n\n-
  Add Hugtto! PreCure Mother Heart Style\n- Add Cure Infini's transformation.\n\n#
  0.7.1.1\n\n- Add Hugtto! PreCure Cheerful Style\n\n# 0.7.0.1\n\n- Add 「フッ...」 in
  `introducesHerselfAs` of `Felice`\n    - <https://github.com/igrep/typesafe-precure/pull/27>\n-
  Collect all PreCures into cure-index.json and restructure the `ACME.PreCure.Textbook.*`
  modules.\n    - <https://github.com/igrep/typesafe-precure/pull/25>\n    - <https://github.com/igrep/typesafe-precure/pull/26>\n
  \   - By this change, `ACME.PreCure.Textbook` (including its children) exports only
  data types.  \n      Say good bye to the a little ugly names such as `girlName_Mana`.\n\n#
  0.6.3.1\n\n- Add: Cure Macherie, Cure Amour, and their purifications.\n\n# 0.6.2.1
  (2018/05/02)\n\n- Add: Hugtto! PreCure's new purifications.\n\n# 0.6.1.1 (2018/03/12)\n\n-
  Add: Hugtto! PreCure.\n\n# 0.5.1.1 (2018/01/16)\n\n- Add: Cure Pekorin's transformation.\n-
  Fix: Hide almost never reusable modules.\n\n# 0.5.0.1 (2017/12/02)\n\n- Fix: Correct
  transformers of A La Mode Style.\n    - Forgot to add Cure Parfait!\n\n# 0.5.0.0
  (2017/12/02)\n\n- Add: More transformations and purifications of Kirakira :star:
  PreCure A La Mode:\n    - Variation: A La Mode Style\n    - Purification: Fantastic
  Animalé\n    - Special Item: Sweets Castle\n    - Transformed Groups of Kirakira
  :star: PreCure A La Mode\n- Add: `variationEn` property of `transformees` in Cure
  Index.\n- Add: `transformedGroups` in Cure Index.\n- Incompatible Change:\n    -
  Renamed `variation` property of `transformees` in Cure Index into `variationJa`.\n\n#
  0.4.0.0 (2017/10/07)\n\n- Add: More transformations and purifications of Kirakira
  :star: PreCure A La Mode, including Cure Parfait's and Kirakiraru Creamer's.\n-
  Add: Experimental feature: [cure-index.json](https://github.com/igrep/typesafe-precure/blob/master/gen/cure-index.json)
  and [pretty-cure-index.json](https://github.com/igrep/typesafe-precure/blob/master/gen/pretty-cure-index.json)
  are generated at build-time by Template Haskell.\n    - Currently, only data of
  Kirakira :star: A La Mode is collected.\n\n# 0.3.1.1 (2017/06/05)\n\n- Improve documentation
  :memo: : Add README and CHANGELOG to extra-source-files, to make README readable
  on hackage.org.\n- Correct README:\n    - As of 0.3.0.0 this package actually supports
  Kirakira :star: A La Mode!\n    - Since the initial release, this package actually
  supports Cure Mofurun!\n\n# 0.3.1.0 (2017/06/05)\n\n- Add: More transformations
  and purifications of Kirakira :star: PreCure A La Mode.\n\n# 0.3.0.0 (2017/04/23)\n\n-
  Add: Transformations and a purification of Kirakira :star: PreCure A La Mode.\n\n#
  0.2.0.0 (2016/12/12)\n\n- Breaking Change: Change the signature of `transform`.\n
  \   - Before: `transform :: (Transformation g' i') => g' -> i' -> (Style g' i' ->
  PreCureMonad x) -> PreCureMonad x`\n    - After: `transform :: (Transformation g'
  i') => g' -> i' -> PreCureMonad (Style g' i')`\n    - To make it easier to get transformed
  style when using `transform`.\n\n# 0.1.0.0 (2016/12/11)\n\nInitial Release\n"
basic-deps:
  bytestring: -any
  base: '>=4.7 && <5'
  monad-skeleton: -any
  aeson-pretty: -any
  text: -any
  th-strict-compat: -any
  dlist: -any
  autoexporter: -any
  th-data-compat: -any
  aeson: -any
  template-haskell: -any
all-versions:
- 0.1.0.0
- 0.2.0.0
- 0.3.0.0
- 0.3.1.0
- 0.3.1.1
- 0.4.0.0
- 0.5.0.0
- 0.5.0.1
- 0.5.1.1
- 0.6.1.1
- 0.6.2.1
- 0.6.3.1
- 0.7.0.1
- 0.7.1.1
- 0.7.2.1
- 0.7.3.1
- 0.7.4.1
- 0.7.5.1
- 0.7.6.1
- 0.7.6.2
- 0.7.7.1
- 0.7.8.1
- 0.7.9.1
- 0.7.10.1
- 0.7.11.1
- 0.8.0.1
author: Yuji Yamamoto
latest: 0.8.0.1
description-type: markdown
description: "# TypeSafe PreCure!!\n\n[![Hackage](https://img.shields.io/hackage/v/typesafe-precure.svg)](http://hackage.haskell.org/package/typesafe-precure)\n[![CircleCI](https://circleci.com/gh/igrep/typesafe-precure.svg?style=svg)](https://circleci.com/gh/igrep/typesafe-precure)\n\nType-safe
  transformations and purifications of PreCures (Japanese Battle Heroine).  \nWritten
  in Haskell.\n\n## Features\n\n- Collection of Japanese battle heroines \"PreCure\"
  \ and their transformation and purification phrases.\n    - Currently, supports
  from the first season to \"Healin' Good♡Precure\", including Cure Echo, Cure Mofurun,
  Cure Pekorin, and Cure Infini!\n- Monadic actions to play the speech of their transformations
  and purifications.\n\n## Characteristics\n\n**Each girl/PreCure/PreCure's variation/special
  item has her/its own type**.  \nSo only correct combinations of girls/PreCures and
  items can transform and purify.  \nCompared with other PreCure implementations such
  as rubicure, clocure, etc., this makes it *much harder* to use, but it reproduces
  the settings more correctly.  \n*Correctness* is more important for this library.\n\n##
  Installation\n\n```sh\n# pretty-simple is optional. But recommended if you try it
  on GHCi.\n$ stack install typesafe-precure pretty-simple\n## ... OR\n$ cabal install
  typesafe-precure pretty-simple\n```\n\n## Example Usage\n\n**Note**:\n- To `show`
  Japanese characters in GHCi, use [pretty-simple](https://github.com/cdepillabout/pretty-simple)\n\n###
  Get transformed PreCure, etc.\n\n```haskell\n$ ghci -interactive-print \"Text.Pretty.Simple.pPrint\"\n\nghci>
  :m ACME.PreCure\nghci> transformationSpeech (Mirai, Liko) (Mofurun :+: LinkleStoneDia)\n[
  \"キュアップ・ラパパ！　ダイヤ！\"\n, \"ミラクル・マジカル・ジュエリーレ！\"\n, \"ふたりの奇跡！キュアミラクル！\"\n, \"ふたりの魔法！キュアマジカル！\"\n,
  \"魔法つかいプリキュア！！\"\n]\nghci> transformedStyle (Mirai, Liko) (Mofurun :+: LinkleStoneRuby)\n(
  CureMiracle_Ruby\n, CureMagical_Ruby\n)\nghci> purificationSpeech (CureMiracle_Ruby,
  CureMagical_Ruby) (Mofurun :+: LinkleStoneRuby, LinkleStick :+: LinkleStoneRuby)\n[
  \"リンクルステッキ！\"\n, \"(モッフー！)\"\n, \"ルビー！紅の情熱よ私達の手に！\"\n, \"フルフルリンクル！\"\n, \"プリキュア！ルビー・パッショナーレ！\"\n]\n```\n\n###
  \U0001F195Get Transformation / Purification Speech Different between Episodes\n\n*Since
  v0.8.0.1*\n\nBy using the `:<` operator, you can replace some part of the speech
  into another episode's version. For example:\n\n```haskell\nghci> members = (Manatsu,
  Sango, Minori, Asuka)\nghci> items = (TropicalPact :+: HeartKuruRingCureSummer,
  TropicalPact :+: HeartKuruRingCureCoral, TropicalPact :+: HeartKuruRingCurePapaya,
  TropicalPact :+: HeartKuruRingCureFlamingo)\nghci> transformationSpeech (members
  :< \"うわさも吹き飛ぶ！\") items\n```\n\nCompare with `transformationSpeech members items`!\n\nIn
  addition to the example above, the following transformations and purifications can
  be replaced by `:<`:\n\nFrom Tropical-Rouge! PreCure:\n\n```haskell\npurificationSpeech
  \ (Laura :< \"赤\") MermaidAquaPot\n```\n\nFrom DokiDoki! PreCure:\n\n```haskell\ntransformationSpeech
  (Mana :< \"ヤギさん\") (LovelyCommuneSharuru :+: CureLoveads)\ntransformationSpeech
  ((Mana, Rikka, Alice, Makoto) :< \"バラさん\") (LovelyCommuneSharuru :+: CureLoveads,
  LovelyCommuneRaquel :+: CureLoveads, LovelyCommuneLance :+: CureLoveads, LovelyCommuneDavi
  :+: CureLoveads)\ntransformationSpeech ((Mana, Rikka, Alice, Makoto, Aguri) :< \"タコさん\")
  (LovelyCommuneSharuru :+: CureLoveads, LovelyCommuneRaquel :+: CureLoveads, LovelyCommuneLance
  :+: CureLoveads, LovelyCommuneDavi :+: CureLoveads, LoveEyesPalette :+: CureLoveads)\n```\n\n###
  PreCure Monad\n\n```haskell\nghci> :{\nghci> let scene = do\n....>       say \"この罪を抱いたまま、もう一度、グランプリンセスを目指す！\"\n....>
  \      scarlet <- transform Towa (PrincessPerfume :+: DressUpKeyScarlet)\n....>
  \      scarletModeElegant <- transform scarlet (PrincessPerfume :+: DressUpKeyPhoenix)\n....>
  \      purify scarletModeElegant (ScarletViolin :+: DressUpKeyPhoenix)\nghci> :}\nghci>
  :t scene\nscene\n  :: Control.Monad.Skeleton.Skeleton\n       ACME.PreCure.Monad.PreCureMonadBase
  ()\n```\n\n#### Transform and Purify as a Pure Function\n\n```haskell\nghci> composeEpisode
  scene\n[ \"この罪を抱いたまま、もう一度、グランプリンセスを目指す！\"\n, \"プリキュア！プリンセスエンゲージ！\"\n, \"深紅の炎のプリンセス！キュアスカーレット！\"\n,
  \"冷たい檻に閉ざされた夢、返していただきますわ。\"\n, \"お覚悟を決めなさい！\"\n, \"エクスチェンジ！モードエレガント！\"\n, \"スカーレット・バイオリン！フェニックス！\"\n,
  \"羽ばたけ炎の翼！\"\n, \"プリキュア！ フェニックス・ブレイズ！\"\n, \"ごきげんよう。\"\n]\n```\n\n#### Transform
  and Purify as an IO Action\n\nThe phrases are printed by line. Inspired by the similar
  feature of rubicure.\n\n```haskell\nghci> printEpisode scene\nこの罪を抱いたまま、もう一度、グランプリンセスを目指す！\nプリキュア！プリンセスエンゲージ！\n深紅の炎のプリンセス！キュアスカーレット！\n冷たい檻に閉ざされた夢、返していただきますわ。\nお覚悟を決めなさい！\nエクスチェンジ！モードエレガント！\nスカーレット・バイオリン！フェニックス！\n羽ばたけ炎の翼！\nプリキュア！
  フェニックス・ブレイズ！\nごきげんよう。\n```\n"
license-name: BSD-3-Clause
