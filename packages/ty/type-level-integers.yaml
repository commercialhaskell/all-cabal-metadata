all-versions:
- 0.0.1
author: Moritz Schulte
basic-deps:
  base: '>=4.7 && <5'
changelog: ''
changelog-type: ''
description: |
  # type-level-integers

  This Haskell package implements naive type level integers. It exposes
  the module `Data.Type.Integer` which exports a new kind `LiftedInt`
  populated by the types `Z` (zero) and `LInt Sign PosNat`. In other
  words, a (type level) integer is either zero or a positive natural
  number together with a sign.

  The module exports the type families `LIntSucc`, `LIntPred`,
  `LIntInvert`, `LIntPlus` and `LIntMinus` for manipulating types of
  kind `LiftedInt`.
description-type: markdown
hash: 0bc7477694e0f39e48c2d318e673ca3469b8826feeeffb9945e9add2f6a05729
homepage: https://github.com/mtesseract/type-level-integers
latest: 0.0.1
license-name: BSD-3-Clause
maintainer: mtesseract@silverratio.net
synopsis: Provides integers lifted to the type level
test-bench-deps:
  base: '>=0'
  type-level-integers: '>=0'
