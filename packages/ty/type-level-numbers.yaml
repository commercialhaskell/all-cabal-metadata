all-versions:
- '0.1'
- 0.1.0.1
- 0.1.0.2
- 0.1.0.3
- 0.1.0.4
- 0.1.1.0
- 0.1.1.1
- 0.1.1.2
author: Alexey Khudyakov <alexey.skladnoy@gmail.com>
basic-deps:
  base: '>=3 && <5'
  template-haskell: '>2.0'
changelog: |
  Changes in 0.1.1.2

    * GHC 9.2 compatibility


  Changes in 0.1.1.1

    * Type level addition is fixed for GHC 7.6

    * Test suite added to cabal file


  Changes in 0.1.1.0

    * withNat, withInt, SomeNat and SomeInt added.


  Changes in 0.1.0.3

    * Fix build for GHC 7.4


  Changes in 0.1.0.2:

    * Fix URL in cabal file

  Changes in 0.1.0.1:

    * Workaround for GHC bug #4364 (Build failure on GHC 7.0)
changelog-type: text
description: |-
  This is type level numbers implemented using type families. Natural
  numbers use binary encoding. With default context stack numbers up
  to 2^18-1 could be represented. Signed integer numbers use balanced ternary
  encoding.

  Package is structured as folows:

  * [@TypeLevel.Number.Classes@] contain generic type families such as Add

  * [@TypeLevel.Number.Nat@] natural numbers implemented using binary encoding

  * [@TypeLevel.Number.Int@] signed integers implemented using balanced
  ternary encoding

  * [@TypeLevel.Boolean@] type level booleans

  So far comparison of numbers, subtraction and multiplication of
  numbers are supported.
description-type: haddock
hash: 1d9157ded05f6cdfa5b0dd44a1bbb0b7a8ba55a61785982047e734ed2b660376
homepage: ''
latest: 0.1.1.2
license-name: BSD-3-Clause
maintainer: Alexey Khudyakov <alexey.skladnoy@gmail.com>
synopsis: Type level numbers implemented using type families.
test-bench-deps:
  base: '>=0'
  template-haskell: '>=0'
  type-level-numbers: '>=0'
