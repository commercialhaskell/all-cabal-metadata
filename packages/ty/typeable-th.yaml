all-versions:
- '0.1'
- 0.1.1
- 0.1.2
- 0.1.3
- 0.1.4
- 0.1.5
author: Benno Fünfstück
basic-deps:
  base: '>=4 && <5'
  template-haskell: '>=2.7.0.0 && <2.9.0.0'
  transformers: '>=0'
changelog: ''
changelog-type: ''
description: "typeable-th [![Build Status](https://travis-ci.org/bennofs/typeable-th.png?branch=master)](https://travis-ci.org/bennofs/typeable-th)\n===========\n\nThere
  is no need to manually write TypeableN instances anymore, even for complex data
  types! This package derives typeable \ninstances automatically. To use it, you just
  have to enable a few extensions and import the package:\n\n```haskell\n{-# LANGUAGE
  EmptyDataDecls       #-}\n{-# LANGUAGE FlexibleContexts     #-}\n{-# LANGUAGE KindSignatures
  \      #-}\n{-# LANGUAGE ScopedTypeVariables  #-}\n{-# LANGUAGE TemplateHaskell
  \     #-}\n{-# LANGUAGE UndecidableInstances #-}\n\nimport Data.Typeable.TH\n```\n\nAnd
  then define your data type and call `makeTypeable ''YourDataTypeName`:\n\n```haskell\ndata
  Weird a (b :: * -> *) c d = Weird\n\nmakeTypeable ''Weird\n```\n\nAnd that's it!\n\nContributions\n-------------\n\nContributions
  and bug reports are welcome! Just fork and then sumbit a pull request if you want
  to implement some\nfeature, or open a bug report to discuss the feature or bug.
  \n"
description-type: markdown
hash: fc0e7a77c7e0b0a366b645dec6a64ac54f0dfe7b799e33ef8c06eab0234de16e
homepage: http://github.com/bennofs/typeable-th
latest: 0.1.5
license-name: BSD-3-Clause
maintainer: benno.fuenfstueck@gmail.com
synopsis: Automatic deriving of TypeableN instances with Template Haskell
test-bench-deps:
  base: '>=0'
  typeable-th: '>=0'
