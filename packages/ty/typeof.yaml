all-versions:
- '0.1'
- 0.1.1
- 0.1.2
author: 'Don Stewart '
basic-deps:
  base: '>=3 && <5'
  process: '>=0'
changelog: ''
changelog-type: ''
description: "typeof: a script for inserting Haskell types in source code\n\n== Building
  ==\n\n    runhaskell Setup.lhs configure\n    runhaskell Setup.lhs build\n    runhaskell
  Setup.lhs install\n\n== Use ==\n\nThe script accepts two inputs:\n        \n   command
  line argument 1: the file name to look in.\n   stdin:                   the line
  containing the top level type\n                                    declaration who's
  type you\n\nthe output is the type declaration for the value you requested, which\ncan
  be spliced back in to your source file.\n\nVIM:\n\nYou can run the script from vim
  directly by adding the following to your\n.vimrc file:\n   \n    :map ty yy:.!typeof
  -fbang-patterns %^Mp\n\nNow, when you position your cursor over a top level declaration,\nhitting:\n\n
  \   :ty\n\nwill insert the type declaration on the line above the one the cursor
  is\non.\n\nEMACS:\n\nIn emacs add the following to your .emacs.el file:\n\n(global-set-key
  (kbd \"C-c t\")\n    (lambda () (interactive)\n        (progn\n            (save-buffer)\n
  \           (move-beginning-of-line nil)\n            (call-process-region\n                (line-beginning-position)\n
  \               (line-end-position)\n                \"typeof\"\n                nil\n
  \               t\n                nil\n                (buffer-file-name)))))\n\nThen
  you can use C-c t to run insert the type declaration.\n\n== Author ==\n\nDon Stewart\nhttp://www.cse.unsw.edu.au/~dons\nFri
  Dec 15 18:02:39 EST 2006\n"
description-type: text
hash: c3cdc34a2a3a22531875c327d5d69289d76c6ba0cfea828028a385059ea6067f
homepage: ''
latest: 0.1.2
license-name: BSD-3-Clause
maintainer: Don Stewart, Kangyuan Niu
synopsis: Small script for inferring types
test-bench-deps: {}
