all-versions:
- 0.2.1
author: Corey O'Connor, Alfonso Acosta
basic-deps:
  base: '>=4 && <5'
  syb: '>=0'
  template-haskell: '>2.0'
changelog: ''
changelog-type: ''
description: |-
  This library permits performing computations on the type-level. Type-level
  functions are implemented using functional dependencies of multi
  parameter type classes.
  To date, Booleans and Numerals (Naturals and Positives) are
  supported. With regard to Numerals, there is support for common
  arithmetic operations (addition, substraction, multiplication,
  division, exponientation, logarithm, maximum, comparison, GCD)
  over natural numbers (using a decimal representation to make
  compile-time errors friendlier).
  Although making use of type-level computations might seem devious and
  obfuscated at first sight, it is indeed useful in practice to implement
  lightweight dependent types such us number-parameterized types (e.g. an array
  type parameterized by the array's size or a modular group type Zn
  parameterized by the modulus).
description-type: haddock
hash: bc397d236acd30f20e9bac408021126d898ffdc805828598b91da07b23dfbc41
homepage: https://github.com/coreyoconnor/type-level-tf
latest: 0.2.1
license-name: BSD-3-Clause
maintainer: coreyoconnor@gmail.com
synopsis: Type-level programming library (type families)
test-bench-deps: {}
