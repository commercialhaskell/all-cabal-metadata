all-versions:
- 0.0.1.0
- 0.0.2.0
- 0.0.3.0
- 0.0.3.1
- 0.0.4
- 0.0.5
- 0.0.6
author: Mike izbicki
basic-deps:
  base: '>=4.7 && <5'
  constraints: '>=0.3.4'
  deepseq: '>=1.3'
  ghc-prim: '>=0'
  primitive: '>=0.5'
  reflection: '>=1.3'
  tagged: '>=0.7'
  template-haskell: '>=0'
  vector: '>=0.10'
changelog: ''
changelog-type: ''
description: |-
  This library provides a lens-like interface for working with type parameters. In the code:

  > data Example p1 (p2::Config Nat) (p3::Constraint) = Example

  @p1@, @p2@, and @p3@ are the type parameters.

  Two example uses of this library are for unboxing unboxed vectors and supercompilation-like optimizations.   Please see the <https://github.com/mikeizbicki/typeparams#the-typeparams-library README file on github> for a detailed description and tutorial.  After reading through that, the haddock documentation will make more sense.
description-type: haddock
hash: b1b8cfbeeca66a7912e588249f5c79c318da7dbbe128bdec9e135c9e190d8242
homepage: http://github.com/mikeizbicki/typeparams/
latest: 0.0.6
license-name: BSD-3-Clause
maintainer: mike@izbicki.me
synopsis: Lens-like interface for type level parameters; allows unboxed unboxed vectors
  and supercompilation
test-bench-deps: {}
