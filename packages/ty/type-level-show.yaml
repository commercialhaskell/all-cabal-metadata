all-versions:
- 0.1.0
- 0.1.1
- 0.2.0
- 0.2.1
- 0.3.0
author: Ben Orchard
basic-deps:
  base: '>=4.18 && <5'
  defun-core: '>=0.1 && <0.2'
  singleraeh: '>=0.4.0 && <0.5'
changelog: |
  ## 0.3.0 (2024-06-01)
  * update singleraeh

  ## 0.2.1 (2024-05-25)
  * add `Demotable Doc` instance
  * single `ShowChar`

  ## 0.2.0 (2024-05-21)
  * add singleton versions of various types, functions

  ## 0.1.1 (2024-05-16)
  * add `Doc` type for `ErrorMessage`-like errors, except term level also

  ## 0.1.0 (2024-05-07)
  Initial release.

  * some simple type-level printy helpers
changelog-type: markdown
description: |
  # type-level-show
  Utilities for writing `Show`-like type families i.e. instead of `showsPrec
  :: Int -> a -> ShowS`, we have `ShowsPrec :: Natural -> k -> Symbol`.

  Requires at least GHC 9.6 for the builtin `SChar` etc. singletons.

  ## Why?
  [refined-hackage]: https://hackage.haskell.org/package/refined
  [rerefined-hackage]: https://hackage.haskell.org/package/rerefined

  [refined][refined-hackage] fills out error messages using `TypeRep`s. My rewrite
  [rerefined][rerefined-hackage] allows you to use `Typeable` to fill out a
  predicate name, or you can do it yourself. But `TypeRep` is a pain to use, and
  it seems strange to do runtime work on type representations. Why can't we just
  do it on the type level?

  We _could_, but the problem is nice formatting. `Show` instances handle
  precedence, and the base library provides a bunch of handy utilities such as
  `showParen :: Bool -> ShowS -> ShowS`. Worse, I couldn't find a `ShowNat ::
  Natural -> Symbol` type family on Hoogle, which is a very simple type family
  that should certainly be lying around.

  This library intends to provide such utilities, so that rerefined can avoid
  `Typeable` altogether.

  Unsure if I'll provide a `ShowType`. Lower priority than the plain utilities.

  ## License
  Provided under the MIT license. See `LICENSE` for license text.
description-type: markdown
hash: f25bf80769a14d8de79698c7155f09831bc60019df4d6e76e64a9b48dc26a7b3
homepage: https://github.com/raehik/type-level-show#readme
latest: 0.3.0
license-name: MIT
maintainer: Ben Orchard <thefirstmuffinman@gmail.com>
synopsis: Utilities for writing Show-like type families
test-bench-deps: {}
