all-versions:
- 0.1.0.1
- 0.2.0.1
author: Jude Taylor
basic-deps:
  base: '>=4.7 && <5'
  base-compat: '>=0.10 && <0.11'
  containers: '>=0'
  mtl: '>=0'
  pretty: '>=0'
  template-haskell: '>=0'
  zenc: '>=0'
changelog: |
  # Revision history for type-tree

  ## 0.2.0.1 -- 2018-04-07

  * `liftName` no longer produces invalid code if passed a NameU (i.e. the result of
    `newName`).

  ## 0.2.0.0 -- 2018-04-07

  * Moved from Tree to Forest representation of types
  * Type variable resolution has been removed as it's unneeded
  * Cycle detection is now a lot more straightforward

  ## 0.1.0.1 -- 2018-03-29

  * Fixing a minor documentation typo

  ## 0.1.0.0 -- 2018-03-27

  * Initial release
changelog-type: markdown
description: |-
  @type-tree@ provides TH splices for generating tree representations of
  the types contained in datatypes. This is useful for, for example,
  generating class instances for a deeply nested datatype.
description-type: haddock
hash: 20796b3735a92b8c14295813fa3881b1f8118da9974ab09b1af4c5fb6e221b37
homepage: https://github.com/pikajude/type-tree
latest: 0.2.0.1
license-name: MIT
maintainer: me@jude.xyz
synopsis: Tree representations of datatypes
test-bench-deps:
  base: '>=0'
  doctest: '>=0'
