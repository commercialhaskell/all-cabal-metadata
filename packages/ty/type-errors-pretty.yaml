homepage: https://github.com/kowainik/type-errors-pretty
changelog-type: markdown
hash: 9042b64d1ac2f69aa55690576504a2397ebea8a6a55332242c88f54027c7eb57
test-bench-deps:
  base: '>=4.10.1.0 && <4.16'
  doctest: '>=0.16 && <0.19'
  Glob: -any
maintainer: |-
  Dmitrii Kovanikov <kovanikov@gmail.com>
  Kowainik <xrom.xkov@gmail.com>
synopsis: Combinators for writing pretty type errors easily
changelog: |
  # Changelog

  `type-errors-pretty` uses [PVP Versioning][1].
  The changelog is available [on GitHub][2].

  ## 0.0.1.2 — Aug 2, 2021

  * [#20](https://github.com/chshersh/type-errors-pretty/issues/20):
    Support GHC-9.0.

  ## 0.0.1.1 — Apr 18, 2020

  * [#10](https://github.com/chshersh/type-errors-pretty/issues/10):
    Support GHC-8.10.

  ## 0.0.1.0 — Oct 15, 2019

  * [#5](https://github.com/chshersh/type-errors-pretty/pull/5):
    Support GHC-8.8.

  ## 0.0.0.0 — Jul 15, 2019

  * Initially created.

  [1]: https://pvp.haskell.org
  [2]: https://github.com/kowainik/type-errors-pretty/releases
basic-deps:
  base: '>=4.10.1.0 && <4.16'
all-versions:
- 0.0.0.0
- 0.0.1.0
- 0.0.1.1
- 0.0.1.2
author: Dmitrii Kovanikov
latest: 0.0.1.2
description-type: markdown
description: |
  # type-errors-pretty

  ![pretty-bug](https://user-images.githubusercontent.com/4276606/61183911-eda86300-a679-11e9-9b8e-34c129469075.png)

  [![GitHub CI](https://github.com/kowainik/type-errors-pretty/workflows/CI/badge.svg)](https://github.com/kowainik/type-errors-pretty/actions)
  [![Hackage](https://img.shields.io/hackage/v/type-errors-pretty.svg?logo=haskell)](https://hackage.haskell.org/package/type-errors-pretty)
  [![MPL-2.0 license](https://img.shields.io/badge/license-MPL--2.0-blue.svg)](LICENSE)


  > "It is important that we forgive ourselves for making mistakes. We need to learn
  > from our errors and move on."
  >
  > ― Steve Maraboli, Life, the Truth, and Being Free

  Combinators for writing pretty type errors easily. The word **pretty** here
  doesn't mean that the resulting type errors will be pretty (though, I believe
  they will be awesome), but the way the type errors are defined in your code is
  pretty.

  If you're interested in motivation behind using type errors at first place, you
  can read the following blog post:

  * [A story told by Type Errors](https://kodimensional.dev/type-errors)

  The `type-errors-pretty` library allows you to write the text of custom
  compile-time error messages with less effort in the following way:

  ```haskell
  import Type.Errors.Pretty (type (<>), type (%))


  type MessageText (e1 :: k) (e2 :: k) (es :: [k])
      = "You require the following two effects from your computation:"
      % ""
      % "    '" <> e1 <> "' and '" <> e2 <> "'"
      % ""
      % "However, your monad is capable of performing only the following effects:"
      % ""
      % "    " <> es
  ```

  ## Acknowledgement

  Icons made by [Freepik](http://www.freepik.com) from [www.flaticon.com](https://www.flaticon.com/) is licensed by [CC 3.0 BY](http://creativecommons.org/licenses/by/3.0/).
license-name: MPL-2.0
