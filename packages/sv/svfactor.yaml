all-versions:
- '0.1'
author: George Wilson
basic-deps:
  attoparsec: '>=0.12.1.4 && <0.14'
  base: '>=4.7 && <5'
  bifunctors: '>=5.1 && <6'
  bytestring: '>=0.9.1.10 && <0.11'
  charset: '>=0.3 && <0.4'
  deepseq: '>=1.1 && <1.5'
  lens: '>=4 && <5'
  parsec: '>=3.1 && <3.2'
  parsers: '>=0.12 && <0.13'
  semigroupoids: '>=5 && <6'
  semigroups: '>=0.18 && <0.20'
  text: '>=1.0 && <1.3'
  transformers: '>=0.2 && <0.6'
  trifecta: '>=1.5 && <2.2'
  utf8-string: '>=1 && <1.1'
  vector: '>=0.10 && <0.13'
changelog: |
  # Revision history for svfactor

  ## 0.1 -- 2018-07-19

  * First version. Released on an unsuspecting world.
changelog-type: markdown
description: |-
  <<http://i.imgur.com/uZnp9ke.png>>

  svfactor is a library for parsing, manipulating, and printing CSV and
  similar formats (such as PSV, TSV, and many more).

  svfactor retains all syntactic information including newlines, and
  provides lenses, prisms, and traversals to query and manipulate this
  structure.
  This should make it useful for writing custom CSV transformations and
  sanitisation tools. For example, one could easily use it to rewrite all
  CRLF newlines to LF.
  It also extends RFC4180 by allowing optional spacing surrounding fields.

  svfactor's parser is exposed so you can use it independently and printing is similarly standalone.

  Please note that there are __known performance problems with svfactor__.

  Examples:

  * Handling multiple logical documents in one file: <https://github.com/qfpl/svfactor/blob/master/examples/src/Data/Svfactor/Example/Concat.hs Concat.hs>
  * Fixing inconsistent formatting with lenses: <https://github.com/qfpl/svfactor/blob/master/examples/src/Data/Svfactor/Example/Requote.hs Requote.hs>
description-type: haddock
hash: db111228ff4613eea40da09bc85a0c1a2cf3acec6c55b1811680bcfa8f38d5b9
homepage: https://github.com/qfpl/svfactor
latest: '0.1'
license-name: BSD-3-Clause
maintainer: george@qfpl.io
synopsis: Syntax-preserving CSV manipulation
test-bench-deps:
  base: '>=4.7 && <5'
  bytestring: '>=0.9.1.10 && <0.11'
  hedgehog: '>=0.5 && <1.1'
  lens: '>=4 && <5'
  parsers: '>=0.12 && <0.13'
  semigroups: '>=0.18 && <0.19'
  svfactor: '>=0'
  tasty: '>=0.11 && <1.3'
  tasty-hedgehog: '>=0.1 && <1.1'
  tasty-hunit: '>=0.9 && <0.11'
  text: '>=1.0 && <1.3'
  trifecta: '>=1.5 && <2.2'
  utf8-string: '>=1 && <1.1'
  vector: '>=0.10 && <0.13'
