homepage: https://github.com/1Computer1/errata
changelog-type: markdown
hash: 3537e4b29a22c0fd9866dce5d7fac2ad16e9ff636b6ecbe819ab21a56366cc8d
test-bench-deps:
  base: '>=4.12 && <4.17'
  hspec: '>=2.7 && <3'
  text: '>=1.2.3.1 && <1.3'
  containers: '>=0.6.0.1 && <0.7'
  hspec-golden: '>=0.1 && <0.2'
  errata: -any
maintainer: onecomputer00@gmail.com
synopsis: Source code error pretty printing
changelog: |
  # Changelog

  **Errata** uses [PVP Versioning](https://pvp.haskell.org).

  ## 0.3.0.0

  * Support GHC 9.0.1 (and eventually 9.2).

  * Optimized rendering of errors ([#5](https://github.com/1Computer1/errata/pull/5)). Huge thanks to [RiugaBachi](https://github.com/RiugaBachi) for this! This also adds a `Monoid` constraint to `Source`.

  * Reworked the pretty printer so that it no longer prints trailing whitespace in most places.

  * Removed the `errataBlock` field, and only use `errataBlocks`. Now, an `Errata` can have no blocks attached to it at all. They will also no longer be sorted beforehand, as that should be up to the user.

  * Removed `prettyErrorsNE`, as it is no longer useful for what it was documented for.

  * Fixed the rendering of `Block`s with no `Pointer`s adding extra blank lines.

  ## 0.2.0.0

  * Added new `blockHeader` field to `Block`, which will put text underneath the location text but above the source lines. This also affects all the block helper functions, which now have an argument for the header.

  * The `blockSimple` and `blockSimple'` functions are now passed tuples of positions and labels instead of `Int`s, which is more consistent with the rest of the helper functions.

  * Defined type synonyms for line, column, headers, bodies, and labels, for the purpose of documentation. It should be much easier to know what is expected by just reading the types now.

  * Use `GHC.Arr.Array` for keeping source lines, which should be faster for indexing and should not force the individual lines until they are needed.

  ## 0.1.0.0

  * Initial release.
basic-deps:
  base: '>=4.12 && <4.17'
  text: '>=1.2.3.1 && <1.3'
  containers: '>=0.6.0.1 && <0.7'
  errata: -any
all-versions:
- 0.1.0.0
- 0.2.0.0
- 0.3.0.0
author: comp
latest: 0.3.0.0
description-type: markdown
description: "# Errata\n\n[![MIT License](https://img.shields.io/badge/license-MIT-blue.svg)](./LICENSE)\n[![Hackage](https://img.shields.io/hackage/v/errata.svg?logo=haskell)](https://hackage.haskell.org/package/errata)\n[![CI](https://github.com/1Computer1/errata/workflows/CI/badge.svg)](https://github.com/1Computer1/errata/actions?query=workflow%3ACI)\n\n**Errata**
  is an extremely customizable error pretty printer that can handle many kinds of
  error formatting.\n\n## Features\n\n**Errata** can handle errors that are all over
  the source or errors that are connected to each other spanning multiple lines. You
  can be as simple or as fancy as you like!  \n\nYou can also customize the format
  of the printer in several ways:  \n\n- Custom messages and labels\n- Custom character
  sets for symbols\n- Highlighting the source, messages, and symbols\n\n## Examples\n\nA
  clean, modern error message that is trying to be helpful:\n\n![An error message
  that points out that the `fold` function was not found in scope. It then asks if
  the user meant to use `foldl` or `foldr`](./errata_fold.png)\n\nA busy error message
  with underlining and connections:\n\n![An error message that highlights mismatching
  types in an `if` expression. The first section underlines the mismatching values,
  and the second section underlines the `if` expression](./errata_if.png)\n"
license-name: MIT
