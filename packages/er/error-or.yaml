homepage: https://github.com/luntain/error-or-bundle/blob/master/error-or#readme
changelog-type: markdown
hash: 86be6a6b9ab383a33bfd39240220a12b21d5ba4439ff1d3560646db069d41cd0
test-bench-deps: {}
maintainer: kamil@dworakowski.name
synopsis: Composable, hierarchical errors.
changelog: |
  ## 0.3.0 (2022-06-16)
    * tagIO now wraps any non async exception, used to wrap only `IOExceptions` and
      user errors (from `error` function)
    * compatiblity with mtl-2.3
  ## 0.2.0.0 (2021-06-24)
    * Renames to reduce the likelihood of name collisions on importing the module unqualified
      - rename `err` to `failText`, to suggest the use of `MonadFail.fail`
      - prepend `ErrAcc` constructors with 'Err' prefix
      - rename `pretty` to `prettyErrAcc`
    * Define a `MonadError` instance for `ErrorOr`

  ## 0.1.2.0 (2020-12-16)

    * Mark the `OK` and `Error` patterns of `ErrorOr` complete for the exhaustiveness checker

  ## 0.1.1.0 (2020-12-02)

    * Add `tagIO`
basic-deps:
  base: '>=4.9 && <5'
  text: -any
  containers: -any
  mtl: -any
all-versions:
- 0.1.0.0
- 0.1.1.0
- 0.1.2.0
- 0.2.0.0
- 0.3.0
author: Kamil Dworakowski
latest: 0.3.0
description-type: markdown
description: |
  # error-or

  [![Hackage](https://img.shields.io/hackage/v/error-or.svg)](https://hackage.haskell.org/package/error-or)

  Composable, hierarchical errors.

  Capture all the errors by using the Applicative instance

  Add error context to results from lower level with 'tag'
license-name: BSD-3-Clause
