all-versions:
- 0.0.0.1
- 0.0.0.2
- 0.0.0.3
- 0.0.0.4
- 0.0.0.5
- 0.0.0.6
- 0.0.0.7
- 0.0.0.8
author: Andrey Prokopenko
basic-deps:
  aeson: '>=0'
  async: '>=0'
  base: '>=4.0 && <5'
  blaze-html: '>=0.9'
  blaze-markup: '>=0.8'
  bytestring: '>=0.10'
  conduit: '>=0'
  fay: '>=0.24.0.5'
  fay-dom: '>=0'
  fay-websockets: '>=0'
  mtl: '>=0'
  stm: '>=0'
  text: '>=1.2'
  websockets: '>=0'
changelog: |
  # Revision history for front

  ## 0.0.0.8 -- 2020-05-01

  * Added custom script invokation.
  * Added custom disconnect handling.

  ## 0.0.0.7 -- 2020-04-07

  * Add new strategy for only client session.

  ## 0.0.0.6 -- 2020-03-25

  * Make client static and independent from server types.

  ## 0.0.0.5 -- 2020-03-17

  * Remove indentation from output html.

  ## 0.0.0.4 -- 2020-03-15

  * Support GHC 8.6.5, switch to LTS-14.
  * Change `CommandHandler` typeclass to higher-order function.

  ## 0.0.0.3 -- 2020-02-04

  * `Todo` example reworked to be complaint with http://todomvc.com.
  * `onBlur`, `onDoubleClick`, `onEnter` event handlers added.

  ## 0.0.0.2 -- 2019-04-10

  * Integration with Servant established.
  * `Todo` example decoupled from `servant` and `yesod`.
  * Added abstraction for `Broadcast` communication.

  ## 0.0.0.1 -- 2019-02-25

  * First version. Released on an unsuspecting world.
changelog-type: markdown
description: "# front (work-in-progress)\n\nA front-end web framework which aim is
  to bring the power of GHC on client side with as less JavaScript as possible by
  the Fay.\n\nThe goal is to have a tiny websockets-based bridge between client and
  server to propagate client events on server for further handling.\n\n## Features\n\n-
  Server-side rendering.\n- both SPA and regular webapp (sharing state across multiple
  routes).\n- Several communication models (single session, broadcast, etc.).\n- Virtual
  DOM with full/partial rendering.\n- \"blaze-html\" like extended markup tree for
  handling both DOM and JS events.\n\n## Usage\n\n1. Add `front` as a dependency to
  your project using preferred build tool.\n2. Obtain `bundle.js` by\n\n```\ncurl
  https://raw.githubusercontent.com/swamp-agr/front/master/examples/todo/static/bundle.js\n```\n\nand
  include it as static resource in your application server. \n\n3. Import `Shared`
  module.\n4. Choose proper communication model (Only session, Broadcast, etc.).\n5.
  That's it.\n6. The only thing you need to keep in mind that one of records in your
  types should have name `commandValue`!\n\n## Examples\n\n- `TODO`\n\n  - Installation
  with Stack (`servant-auth-cookie` should be fixed to allow build with `cabal`):\n
  \ ```\n  stack install --flag=\"front:examples\"\n  ```\n  \n  or \n  \n  ```\n
  \ cabal v2-build --flags examples\n  ```\n  \n  - usage:\n  ```\n  cd examples/todo\n
  \ # for servant-based:\n  todo-servant-example\n  # for yesod-based:\n  todo-yesod-example\n
  \ # open web browser:\n  open http://localhost:3000\n  ```\n\n## Developer Installation
  (Contribution)\n\nFor server:\n\n```\ncabal new-build\n```\n\nor\n\n```\nstack build\n```\n\nFor
  client: there is nothing special you need on client side. \n`bundle.js` already
  had everything included.\n\nPlease do not hesitate to open Issue to discuss your
  questions or use cases.\n\n## Acknowledgement\n\nThis ongoing framework would not
  have happened without these people and technologies:\n\n- @5HT for inspiration by
  **N2O** framework. The idea of transfer both data and events over websockets.\n-
  @jaspervdj for **blaze-html**.\n- @meiersi for **blaze-react** and the approach
  how to handle events in the same markup with html.\n- @snoyberg for **yesod-fay**
  and the way how to embed generated assert into server\nand to trigger dependent
  Fay compilation from Haskell code.\n- @bergmark for **Fay** compiler.\n"
description-type: markdown
hash: 5d7c16f023c0d2a5b887c7144edd9f92da05a09b9ec5898ddfebe79c958630d6
homepage: haskell-front.org
latest: 0.0.0.8
license-name: BSD-3-Clause
maintainer: persiantiger@yandex.ru
synopsis: A reactive frontend web framework
test-bench-deps: {}
