homepage: https://github.com/leftaroundabout/free-vector-spaces
changelog-type: ''
hash: 7cfdca732864a9e492d858ed98804b085327f16b636536f93cc0c501d0ccae9a
test-bench-deps: {}
maintainer: (@) jsag $ hvl.no
synopsis: Instantiate the classes from the vector-space package with types from linear
changelog: ''
basic-deps:
  base: '>=4.6 && <5.1'
  vector-space: '>=0.11 && <0.18'
  pragmatic-show: '>=0.1.2 && <0.2'
  lens: '>=4 && <6'
  linear: '>=1.18 && <1.23'
  MemoTrie: -any
  vector: -any
all-versions:
- 0.1.0.0
- 0.1.1.0
- 0.1.2.0
- 0.1.4.0
- 0.1.5.0
- 0.1.5.1
author: Justus Sagemüller
latest: 0.1.5.1
description-type: haddock
description: |-
  The <http://hackage.haskell.org/package/linear/ linear> package offers efficient
  vector types — where vector means /element of a free vector space/, i.e.
  fixed-length arrays of numbers. The entire interface of that library is based on
  this  concept of free vectors with a canonical coordinate representation.

  While this is practically speaking often useful, it is also

  * Questionable in terms of conceptual elegance. The idea of a vector has
  originally not much to do with number-arrays; in physics a vector is just
  a quantity with /magnitude and direction/. Only by fixing a basis can
  a coordinate representation arise from that.

  * Not as safe as we'd like. The typical linear-algebra languages like Matlab
  or Fortran are notorious for hard-to spot mistakes that often arise from the
  total reliance on coordinate representations (every vector/linear map is just
  a matrix of number). @linear@ already avoids most of these problems because
  it can at least check dimensions at compile-time and usually doesn't need
  any indices, but some trouble still remains. E.g., two different 3-dimensional
  spaces are indistinguishable by the type system (unless you wrap one of them
  in a @newtype@, however that also needs to be parameterised on the coordinate
  type to work with the rest of the library).

  The <http://hackage.haskell.org/package/vector-space/ vector-space> library
  has arguably a better (albeit less complete) interface. To gain access to
  that interface with the more efficient types from @linear@, we here provide
  the necessary orphan instances.
license-name: BSD-3-Clause
