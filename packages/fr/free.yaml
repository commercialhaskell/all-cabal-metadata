homepage: http://github.com/ekmett/free/
changelog-type: markdown
hash: b88705deb7b5fefce0bc8186ccab6c1ef58858c759fb27171e4c4443efef5973
test-bench-deps: {}
maintainer: Edward A. Kmett <ekmett@gmail.com>
synopsis: Monads for free
changelog: "5.1.10 [2022.11.30]\r\n-------------------\r\n* Add a `MonadFail` instance
  for `FT`.\r\n\r\n5.1.9 [2022.06.26]\r\n------------------\r\n* Simplify the `Eq`
  and `Ord` instances for `FT` to avoid the use of\r\n  overlapping instances.\r\n\r\n5.1.8
  [2022.05.07]\r\n------------------\r\n* Generalize the `Monad` constraint in the
  type signatures for\r\n  `hoistFreeT` in `Control.Monad.Trans.Free` and `Control.Monad.Trans.Free.Ap`\r\n
  \ to a `Functor` constraint.\r\n* Allow building with `transformers-0.6.*` and `mtl-2.3.*`.\r\n\r\n5.1.7
  [2021.04.30]\r\n------------------\r\n* Enable `FlexibleContexts` in `Control.Monad.Trans.Free.Church`
  to allow\r\n  building with GHC 9.2.\r\n\r\n5.1.6 [2020.12.31]\r\n------------------\r\n*
  Explicitly mark modules as `Safe`.\r\n\r\n5.1.5 [2020.12.16]\r\n------------------\r\n*
  Move `indexed-traversable` (`FunctorWithIndex` etc) instances from `lens`.\r\n\r\n5.1.4
  [2020.10.01]\r\n------------------\r\n* Allow building with `template-haskell-2.17.0.0`
  (GHC 9.0).\r\n\r\n5.1.3 [2019.11.26]\r\n------------------\r\n* Allow building with
  `template-haskell-2.16` (GHC 8.10).\r\n* Add `Eq{1,2}`, `Ord{1,2}`, `Read{1,2}`,
  and `Show{1,2}` instances for\r\n  `CofreeF`.\r\n\r\n5.1.2 [2019.08.27]\r\n------------------\r\n*
  Implement more performant versions of `some` and `many` in the `Alternative`\r\n
  \ instance for the final `Alt` encoding.\r\n\r\n5.1.1 [2019.05.02]\r\n------------------\r\n*
  Allow building with `base-4.13` (GHC 8.8).\r\n\r\n5.1 [2018.07.03]\r\n----------------\r\n*
  Generalize the type of `_Free`.\r\n* Allow building with `containers-0.6`.\r\n*
  Avoid incurring some dependencies when using recent GHCs.\r\n\r\n5.0.2 [2018.04.25]\r\n------------------\r\n*
  Add `Generic` and `Generic1` instances where possible.\r\n\r\n5.0.1 [2018.03.07]\r\n------------------\r\n*
  Fix the build on old GHCs with `transformers-0.4`.\r\n\r\n5 [2018.01.28]\r\n--------------\r\n*
  Add a `Semigroup` instance for `IterT`.\r\n* Add `MonadFail` instances for `IterT`
  and `FreeT`.\r\n* Add a `Comonad` instance for the free `Applicative`, `Ap`.\r\n*
  Add `Control.Monad.Free.Ap` and `Control.Monad.Trans.Free.Ap` modules, based\r\n
  \ on the \"Applicative Effects in Free Monads\" series of articles by Will\r\n  Fancher.\r\n*
  Derive `Data` instances for `Free` and `Cofree`.\r\n* `Control.Monad.Free.TH` now
  properly supports `template-haskell-2.11.0.0`. In\r\n  particular, it now supports
  `GadtC` and `RecGadtC`, which are new\r\n  `template-haskell` forms for representing
  GADTs.\r\n* Add `telescoped_`, `shoots`, and `leaves` to `Control.Comonad.Cofree`\r\n*
  Add the `Control.Applicative.Free.Fast` module, based on Dave Menendez's\r\n  article
  \"Free Applicative Functors in Haskell\"\r\n* Add `foldFreeT` to `Control.Monad.Trans.Free`\r\n*
  Improve the `foldMap` and `cutoff` functions for\r\n  `Control.Monad.Free.Church.F`,
  and add a `Traversable`\r\n* Add a `MonadBase` instance for `FreeT`\r\n* Add a performance
  test comparing Free and Church interpreters\r\n* The use of `prelude-extras` has
  been removed. `free` now uses the\r\n  `Data.Functor.Classes` module to give `free`'s
  datatypes instances of `Eq1`,\r\n  `Ord1`, `Read1`, and `Show1`. Their `Eq`, `Ord`,
  `Read`, and `Show` instances\r\n  have also been modified to incorporate these classes.
  For example, what\r\n  previously existed as:\r\n\r\n  ```haskell\r\n  instance
  (Eq (f (Free f a)), Eq a) => Eq (Free f a) where\r\n  ```\r\n\r\n  has now been
  changed to:\r\n\r\n  ```haskell\r\n  instance (Eq1 f, Eq a) => Eq (Free f a) where\r\n
  \ ```\r\n* Remove redundant `Functor` constraints from `Control.Alternative.Free`\r\n\r\n4.12.4\r\n------\r\n*
  Removed a number of spurious class constraints.\r\n* Support GHC 8\r\n\r\n4.12.3\r\n------\r\n*
  Support `comonad` 5\r\n\r\n4.12.2\r\n------\r\n* Add instances for `ExceptT`: like
  `ErrorT`, but without an `Error` constraint.\r\n* Support `containers`\r\n* Support
  `transformers` 0.5\r\n\r\n\r\n4.12.1\r\n------\r\n* Support GHC 7.4\r\n\r\n4.12\r\n----\r\n*
  Add instances of `MonadCatch` and `MonadThrow` from `exceptions` to `FT`, `FreeT`
  and `IterT`.\r\n* `semigroupoids` 5, `profunctors` 5, and `bifunctors` 5 support.\r\n\r\n4.11\r\n-----\r\n*
  Pass Monad[FreeT].fail into underlying monad\r\n* Add `retractT`.\r\n* Added `cutoff`
  for the church encoded free monad.\r\n* `cutoff` now accepts negative numbers.\r\n*
  Added `intersperseT` and `intercalateT`.\r\n* Added `foldFree` and `foldF`.\r\n*
  Added some new `template-haskell` toys.\r\n\r\n4.10.0.1\r\n------\r\n* Fix for very
  old `cabal` versions where the `MIN_VERSION_foo` macros aren't negation friendly.\r\n\r\n4.10\r\n----\r\n*
  Redefine `Alternative` and `MonadPlus` instances of `IterT` so that they apply to
  any underlying `Monad`.\r\n  `mplus` or `<|>` is Capretta's `race` combinator; `mzero`
  or `empty` is a non-terminating computation.\r\n* Redefine `fail s` for `IterT`
  as `mzero`, for any string `s`.\r\n* Added `Control.Monad.Trans.Iter.untilJust`,
  which repeatedly retries a `m (Maybe a)` computation until\r\n  it produces `Just`
  a value.\r\n* Fix things so that we can build with GHC 7.10, which also uses the
  name `Alt` in `Data.Monoid`, and which exports `Monoid` from `Prelude`.\r\n\r\n4.9\r\n---\r\n*
  Remove `either` support. Why? It dragged in a large number of dependencies we otherwise
  don't support, and so is probably best inverted.\r\n\r\n4.8.0.1\r\n-------\r\n*
  Allow complation with older versions of `base`. (Foldable didn't add foldl' until
  base 4.6)\r\n\r\n4.8\r\n-----\r\n* Added a `MonadFree` instance for `EitherT` (frrom
  the `either` package).\r\n* Support for `transformers` 0.4\r\n\r\n4.7.1\r\n-----\r\n*
  Added more versions of `cutoff`.\r\n\r\n4.7\r\n---\r\n* Added `prelude-extras` support.
  This makes it possible to work without `UndecidableInstances` for most operations.\r\n*
  Removed the `GHC_TYPEABLE` flag.\r\n\r\n4.6.1\r\n-----\r\n* Added `hoistF`\r\n\r\n4.6\r\n---\r\n*
  Víctor López Juan and Fabian Ruch added many documentation improvements and a whole
  host of proofs of correctness.\r\n* Improvements in the template haskell code generator.\r\n*
  Added instances for `MonadWriter` and `MonadCont` where appropriate, thanks to Nickolay
  Kudasov.\r\n* Added `cutoff`, `iterTM`, and `never`.\r\n* Made modifications to
  some `Typeable` and `Data` instances to work correctly on both GHC 7.8.1rc1 and
  7.8.1rc2.\r\n* Removed `Control.MonadPlus.Free`. Use `FreeT f []` instead and the
  result will be law-abiding.\r\n* Replaced `Control.Alternative.Free` with a new
  approach that is law-abiding for left-distributive Alternatives.\r\n\r\n4.5\r\n-----\r\n*
  Added `Control.Monad.Free.TH` with `makeFree` to make it easier to write free monads.\r\n*
  Added missing instances for `MonadFix` and `MonadCont` where appropriate.\r\n\r\n4.2\r\n-----\r\n*
  Added `Control.Monad.Trans.Iter` and `Control.Comonad.Trans.Coiter`.\r\n\r\n4.1.1\r\n-----\r\n*
  Added a default signature to `wrap`, based on a construction by @fizruk.\r\n\r\n4.0\r\n---\r\n*
  Updated to work with `semigroupoids` and `comonad` 4.0\r\n* `instance ComonadCofree
  Maybe NonEmpty`\r\n* `instance ComonadCofree (Const b) ((,) b)`\r\n\r\n3.4.2\r\n-----\r\n*
  Generalized `liftF`.\r\n* Added `iterM`\r\n\r\n3.4.1\r\n-----\r\n* Added support
  for GHC 7.7's polykinded `Typeable`\r\n\r\n3.4\r\n---\r\n* Added instance `MonadFree
  f (ContT r m)`\r\n\r\n3.3.1\r\n-----\r\n* Refactored build system\r\n* Removed upper
  bounds on my own intra-package dependencies\r\n\r\n3.3\r\n---\r\n* Added `Control.Alternative.Free`
  and `Control.MonadPlus.Free`\r\n\r\n3.2\r\n---\r\n* Added `Control.Free.Applicative`\r\n*
  Moved `Control.Monad.Free.Church` from `kan-extensions` into this package.\r\n"
basic-deps:
  semigroupoids: '>=5.3.5 && <6'
  exceptions: '>=0.10.4 && <0.11'
  base: '>=4.5 && <5'
  comonad: '>=5.0.8 && <6'
  indexed-traversable: '>=0.1.1 && <0.2'
  distributive: '>=0.5.2 && <1'
  th-abstraction: '>=0.4.2.0 && <0.5'
  containers: '>=0.3 && <0.7'
  bifunctors: '>=5.5.9 && <6'
  mtl: '>=2.2.2 && <2.4'
  transformers-base: '>=0.4.5.2 && <0.5'
  transformers: '>=0.4.2.0 && <0.7'
  template-haskell: '>=2.7.0.0 && <2.20'
  profunctors: '>=5.6.1 && <6'
all-versions:
- 0.1.0
- 0.1.1
- 0.2.0
- 0.2.1
- 0.2.2
- 0.2.3
- 1.8.0
- 1.8.0.1
- 1.8.0.3
- 1.8.0.4
- '2.0'
- 2.0.1
- 2.0.1.1
- 2.0.2
- 2.0.3
- '2.1'
- 2.1.1
- 2.1.1.1
- '2.2'
- '3.0'
- '3.1'
- 3.1.1
- '3.2'
- '3.3'
- 3.3.0.1
- 3.3.0.2
- 3.3.1
- '3.4'
- 3.4.1
- 3.4.2
- '4.0'
- '4.1'
- '4.2'
- '4.4'
- '4.5'
- '4.6'
- 4.6.1
- '4.7'
- 4.7.1
- '4.8'
- 4.8.0.1
- '4.9'
- 4.10.0.1
- '4.11'
- '4.12'
- 4.12.1
- 4.12.2
- 4.12.3
- 4.12.4
- 5.0.1
- 5.0.2
- '5.1'
- 5.1.1
- 5.1.2
- 5.1.3
- 5.1.4
- 5.1.5
- 5.1.6
- 5.1.7
- 5.1.8
- 5.1.9
- 5.1.10
author: Edward A. Kmett
latest: 5.1.10
description-type: markdown
description: "free\r\n====\r\n\r\n[![Hackage](https://img.shields.io/hackage/v/free.svg)](https://hackage.haskell.org/package/free)
  [![Build Status](https://github.com/ekmett/free/workflows/Haskell-CI/badge.svg)](https://github.com/ekmett/free/actions?query=workflow%3AHaskell-CI)\r\n\r\nThis
  package provides a common definitions for working with free monads, free applicatives,
  and cofree comonads in Haskell.\r\n\r\nContact Information\r\n-------------------\r\n\r\nContributions
  and bug reports are welcome!\r\n\r\nPlease feel free to contact me through github
  or on the #haskell IRC channel on irc.freenode.net.\r\n\r\n-Edward Kmett\r\n"
license-name: BSD-3-Clause
