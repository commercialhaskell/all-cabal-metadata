homepage: https://github.com/coot/free-algebras#readme
changelog-type: markdown
hash: 0fc65b4c1e013c8defbcc093e7910c9f824997d4d88da28f6948c163b6c0a16d
test-bench-deps:
  free: -any
  groups: -any
  data-fix: -any
  base: '>=4.9 && <5'
  kan-extensions: -any
  hedgehog: '>=0.6 && <1.3'
  dlist: -any
  containers: -any
  mtl: -any
  transformers: -any
maintainer: coot@coot.me
synopsis: Free algebras
changelog: |
  # Changelog for free-algebras

  ## Version 0.1.1.0
  - Support `GHC-9.6` and `mtl-2.3`, drop support of `GHC-8.8`.

  ## Version 0.1.0.2
  - Support `GHC-9.0`, `GHC-9.2` and `GHC-9.4`, drop support for `GHC-8.6` or earlier.

  ## Version 0.0.8.0
  - Added two properties for each: `foldMapFree`, `foldNatFree` and
    `foldNatFree2`.
  - Added default implementations of `codom` / `forget`, `codom1` / `forget` and
    `codom2` / `forget2`, what simplifies writting instances.
  - Changed internal representation of FreeAbelianSemigroup: use Natural
  - removed `natural-number` dependency and use `Numeric.Natural.Natural` instead.
  - Applicative instance for `FreeMAction`.
  - Added `Free1` type.
  - Removed `constraints` dependency.
  - Renamed `Data.Semigroup.SemiLattice` to `Data.Semigroup.Semilattice`, also
    `FreeSemiLattice` renamed to `FreeSemilattice`.
  - various optimisation (rewrite rules & inline pragmas)

  ## Version 0.0.7.2
  - Enhanced documentation, and properly attributed fix in ChangeLog.

  ## Version 0.0.7.1
  - `Data.Group.Free.normalize` and `Data.Group.Free.normalizeL` are not both
    `O(n)`, but the former is implemented using the latter (e.g. transforms
    `DList` to a list), by Justin Le (https://github.com/mstsg)

  ## Version 0.0.7.0
  - Poly kinded `Control.Algebra.Free.FreeAlgebra` and
    `Control.Algebra.Free2.FreeAlgebra2`
  - removed actions (MSet, SSet), use `monoid-extras` or `semigroups-actions`
    packages

  ## Version 0.0.6.0
  - `Num a => SSet (Sum a) a` and `Num a => SSet (Product a) a` instances
  - `Num a => MSet (Sum a) a` and `Num a => MSet (Product a) a` instances
  - removed some overlapping instances for `SSet` and `MSet`
  - `Control.Algebra.Free2` module, see `free-category` package for applications.

  ## Version 0.0.5.1
  - Improved documentation

  ## Version 0.0.5.0
  - `FreeAlgebra` renamed `proof` to `codom`, added `Proof` smart constructor `proof`.
  - `FreeAlgebra` instance for `Identity` functor
  - generic `Free` type
  - `DList` and `FreeGroup` based on `DList`, `FreeGroupL`
  - documentation on strictness / laziness improved

  ## Version 0.0.4.0

  - `S` new type wrapper in `SSet`, and overlappable instance for
    `SSet s a => SSet (S s) (Endo a)`
  - `foldrFree` and friends
  - `foldrMSet`
  - documented intersection with `monad-mmorph` package.

  ## Version 0.0.3.0

  - Breaking change: changed proofs in FreeAlgebra and FreeAlgebra1 class; now
    using `FreeAlgebra` and `FreeAlgebra1` classes let us deduce an adjunction.
  - Monadicity example

  ## Version 0.0.2.0
  - Simplified `Proof` type.
basic-deps:
  free: '>=4.0 && <6.0'
  groups: '>=0.3 && <0.6'
  data-fix: <0.4
  base: '>=4.9 && <5'
  kan-extensions: '>=4.1 && <6.0'
  dlist: '>=0.8 && <1.1'
  containers: '>=0.4.2 && <0.7'
  mtl: '>=2.2 && <2.4'
  transformers: '>=0.5 && <0.7'
all-versions:
- 0.0.1.0
- 0.0.2.0
- 0.0.3.0
- 0.0.4.0
- 0.0.5.0
- 0.0.5.1
- 0.0.6.0
- 0.0.7.0
- 0.0.7.1
- 0.0.7.2
- 0.0.8.0
- 0.0.8.1
- 0.0.8.2
- 0.1.0.0
- 0.1.0.1
- 0.1.0.2
- 0.1.1.0
author: Marcin Szamotulski
latest: 0.1.1.0
description-type: markdown
description: |
  # Free Algebras
  [![Maintainer: coot](https://img.shields.io/badge/maintainer-coot-lightgrey.svg?style=for-the-badge)](http://github.com/coot)
  [![Haskell CI](https://img.shields.io/github/actions/workflow/status/coot/free-algebras/ci.yaml?branch=master&label=Build&style=for-the-badge)](https://github.com/coot/free-algebras/actions/workflows/ci.yaml)

  Universal algebra approach (which is compatible with categorical approach) to
  free algebras (including higher order structures like functors, applicative
  functors or monads).  Mathematical introduction alongside with some of the
  Haskell ideas is desribed in a [blog](https://coot.me/posts/free-monads.html)
  post.

  Examples:
  ---------

  * [TCP as a free monad](https://github.com/coot/free-algebras/blob/master/examples/src/Network/TCP.hs)
  * [free categories](https://coot.me/posts/kleisli-categories-and-free-monads.html)
  * [free categories with monadic effects](https://coot.me/posts/categories-with-monadic-effects.html)
  * [free category package](https://hackage.haskell.org/package/free-category)
license-name: MPL-2.0
