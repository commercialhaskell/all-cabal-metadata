all-versions:
- 0.0.0.0
- 0.0.0.1
- 0.0.0.2
- 0.0.0.3
- 0.1.0.0
author: Rob Rix
basic-deps:
  base: '>=4.14 && <5'
  containers: '>=0.5 && <0.7'
  foldable1-classes-compat: ^>=0.1
  hashable: '>=1.3 && <1.5'
  profunctors: ^>=5.6
  semigroupoids: ^>=6
  transformers: '>=0.4 && <0.7'
  unordered-containers: ^>=0.2
changelog: "# 0.1.0.0\n\n- Add non-empty folds and traversals, `Fold1` and `Traversal1`
  respectively.\n- Add a dependency on `semigroupoids` to support the above.\n- Add
  a number of constructors and eliminators, primarily over `Fold` and `Traversal`.\n-
  \U0001F525 `Fresnel.Functor.Backwards` in favour of `Control.Applicative.Backwards`
  from the `transformers` package.\n- Support ghc 9.8\n- Support ghc 9.10\n\n\n# 0.0.0.3\n\nSupport
  ghc 9.6 a little harder.\n\n\n# 0.0.0.2\n\nSupport ghc 9.6.\n\n\n# 0.0.0.1\n\nSupport
  ghc 9.2.\n\n\n# 0.0.0.0\n\nInitial release.\n"
changelog-type: markdown
description: |
  # `fresnel`: high-powered optics in a small package

  [![CI status badge](https://github.com/fresnel/fresnel/actions/workflows/ci.yml/badge.svg)][CI status] [![hackage](https://img.shields.io/hackage/v/fresnel.svg?color=blue&style=popout)][hackage]

  `fresnel` is yet another optics (aka functional references) package for Haskell.

  [CI status]: https://github.com/fresnel/fresnel/actions
  [hackage]: http://hackage.haskell.org/package/fresnel


  [![diagram of the optical and profunctor hierarchies and their relationships to one another](https://raw.githubusercontent.com/fresnel/fresnel/main/docs/optics.svg)](http://fresnel.github.io/fresnel/index.html)

  _The above image is interactive. Click to open it, and then hover over labels to highlight everything they include._


  ## The name

  Fresnel (pronounced approx. like “fray knell”) lenses are compact optics commonly seen in lighthouses, allowing much greater brightness or magnification than would otherwise be possible due to the size and weight of conventional glass optics.

  It seemed like an apt metaphor for a pared-down optics library based on functions and using `ghc`’s constraint solver to do the heavy lifting.


  ## Comparisons

  Like `optics`, it uses profunctor optics rather than the Van Laarhoven representation. Like `lens`, it uses type synonyms and `-XRankNTypes` to compose optics with the `.` operator and allow `ghc` to deduce the (faux-)subtyping relationships between optics.

  Like both of the above, but unlike [`prolens`][], `fresnel` offers a rich suite of optics to suit all tastes.

  Unlike `lens` (but like `optics`), it goes to some effort to provide a sensibly-named hierarchy of optics to improve type errors. In `optics` this is provided by means of type families providing the subsumption relation and constraints; in `fresnel`, names, subsumption, and constraints are all provided by `Is*` typeclasses (e.g. `IsPrism`, `IsTraversal`, etc.) subclassing the profunctor classes directly.

  Unlike `lens`, it doesn’t define any typeclasses to abstract over optics’ sources. It also has a comparatively minimal suite of combinators for complex compositions of projections, etc.

  Unlike both `lens` and `prolens`, `fresnel` uses somewhat more approachable names where possible, e.g. `Optional` instead of `AffineTraversal`.

  Unlike both `lens` _and_ `optics`, `fresnel` (currently) has no support for indexed optics, or certain other baroque optics. Some of these would be simpler additions than others, and are likely to be added in the fullness of time.

  Like [`prolens`][], and also unlike either of the others, `fresnel` requires a reasonably small set of dependencies: `base`, `containers`, `profunctors`, and `unordered-containers`. On the other hand, [`prolens`][] requires even fewer dependencies: only `base`.

  [`prolens`]: https://github.com/kowainik/prolens
description-type: markdown
hash: bc3a94bbfc2ffda2cce4e8416d17e683e4d113178abdd679c0660f54fab1bcfc
homepage: https://github.com/fresnel/fresnel
latest: 0.1.0.0
license-name: BSD-3-Clause
maintainer: rob.rix@me.com
synopsis: high-powered optics in a small package
test-bench-deps:
  QuickCheck: ^>=2.14
  ansi-terminal: ^>=0.11
  base: '>=0'
  containers: '>=0'
  fresnel: '>=0'
  fused-effects: ^>=1.1
  template-haskell: '>=2.16 && <2.23'
