all-versions:
- 1.0.0
author: Anton Lorenzen <anton.lorenzen@ed.ac.uk>
basic-deps:
  QuickCheck: '>=2.14 && <3'
  STMonadTrans: '>=0.4 && <0.5'
  base: '>=4.13 && <5'
  containers: '>=0.6 && <1.7'
  creditmonad: '>=0'
  mtl: '>=2.3 && <2.4'
  prettyprinter: '>=1.7 && <1.8'
  unliftio: '>=0.2 && <0.3'
changelog: ''
changelog-type: markdown
description: |-
  Persistent data structures are ubiquitous in functional
  programming languages and their designers frequently have to
  reason about amortized time complexity. But proving amortized
  bounds is difficult in a persistent setting, and pen-and-paper
  proofs give little assurance of correctness, while a full
  mechanization in a proof assistant can be too involved for the
  casual user. This package defines a domain specific
  language for testing the amortized time complexity of
  persistent data structures using QuickCheck. The DSL can
  give strong evidence of correctness, while imposing low
  overhead on the user. The package includes implementations
  and tests of all lazy data structures given in Okasaki's book.
  See the paper "Lightweight Testing of Persistent Amortized Time
  Complexity in the Credit Monad" (2025) for a detailed description.
description-type: haddock
hash: c74da1874648254811f984d91b0fc92b2c7c1b1207d80b8a5d5e6e10f3f86e89
homepage: https://github.com/anfelor/creditmonad#readme
latest: 1.0.0
license-name: BSD-3-Clause
maintainer: Anton Lorenzen <anton.lorenzen@ed.ac.uk>
synopsis: Reasoning about amortized time complexity
test-bench-deps: {}
