homepage: https://github.com/hvr/cryptohash-sha512
changelog-type: markdown
hash: 4639cb1e8c085d89bf3fdb5fe61452015d0a32186f28179120546bd430022c61
test-bench-deps:
  bytestring: -any
  SHA: '>=1.6.4 && <1.7'
  base: -any
  criterion: '>=1.1 && <1.6'
  tasty-quickcheck: ==0.8.*
  tasty-hunit: ==0.9.*
  cryptohash-sha512: -any
  base16-bytestring: '>=0.1.1 && <0.2'
  tasty: '>=0.11 && <1.4'
maintainer: Herbert Valerio Riedel <hvr@gnu.org>
synopsis: Fast, pure and practical SHA-512 implementation
changelog: |
  ## 0.11.100.1

   - First public release

  ## 0.11.100.0 *(unreleased)*

   - new `hmac` and `hmaclazy` functions providing HMAC-SHA-512
     computation conforming to RFC2104 and RFC4231
   - fix unaligned memory-accesses
   - switch to 'safe' FFI for calls where overhead becomes neglible
   - removed inline assembly in favour of portable C constructs
   - fix 32bit length overflow bug in `hash` function
   - fix inaccurate context-size
   - add context-size verification to incremental API operations

  ## 0.11.7.1 *(unreleased)*

   - first version forked off `cryptohash-0.11.7` release
basic-deps:
  bytestring: '>=0.9.2 && <0.11'
  base: '>=4.5 && <4.16'
all-versions:
- 0.11.100.1
author: ''
latest: 0.11.100.1
description-type: haddock
description: |-
  A practical incremental and one-pass, pure API to
  the [SHA-512 cryptographic hash algorithm](https://en.wikipedia.org/wiki/SHA-2) according
  to [FIPS 180-4](http://dx.doi.org/10.6028/NIST.FIPS.180-4)
  with performance close to the fastest implementations available in other languages.

  The core SHA-512 algorithm is implemented in C and is thus expected
  to be as fast as the standard [sha512sum(1) tool](https://linux.die.net/man/1/sha512sum).
  (If, instead, you require a pure Haskell implementation and performance is secondary, please refer to the [SHA package](https://hackage.haskell.org/package/SHA).)

  Additionally, this package provides support for

  - HMAC-SHA-512: SHA-512-based [Hashed Message Authentication Codes](https://en.wikipedia.org/wiki/HMAC) (HMAC)

  conforming to [RFC6234](https://tools.ietf.org/html/rfc6234), [RFC4231](https://tools.ietf.org/html/rfc4231), [RFC5869](https://tools.ietf.org/html/rfc5869), et al..

  === Packages in the @cryptohash-*@ family

  - <https://hackage.haskell.org/package/cryptohash-md5    cryptohash-md5>
  - <https://hackage.haskell.org/package/cryptohash-sha1   cryptohash-sha1>
  - <https://hackage.haskell.org/package/cryptohash-sha256 cryptohash-sha256>
  - <https://hackage.haskell.org/package/cryptohash-sha512 cryptohash-sha512>

  === Relationship to the @cryptohash@ package and its API

  This package has been originally a fork of @cryptohash-0.11.7@ because the @cryptohash@
  package had been deprecated and so this package continues to satisfy the need for a
  lightweight package providing the SHA-512 hash algorithm without any dependencies on packages
  other than @base@ and @bytestring@. The API exposed by @cryptohash-sha512-0.11.*@'s
  "Crypto.Hash.SHA512" module is guaranteed to remain a compatible superset of the API provided
  by the @cryptohash-0.11.7@'s module of the same name.

  Consequently, this package is designed to be used as a drop-in replacement for @cryptohash-0.11.7@'s
  "Crypto.Hash.SHA512" module, though with
  a [clearly smaller footprint by almost 3 orders of magnitude](https://www.reddit.com/r/haskell/comments/5lxv75/psa_please_use_unique_module_names_when_uploading/dbzegx3/).
license-name: BSD-3-Clause
