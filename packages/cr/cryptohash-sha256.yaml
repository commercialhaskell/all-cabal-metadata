homepage: https://github.com/hvr/cryptohash-sha256
changelog-type: markdown
hash: 188d0b5a0491e8b686b32d9b144c9287760ba333d2509bf3f17e3d846fbc2332
test-bench-deps:
  bytestring: ==0.10.*
  SHA: '>=1.6.4 && <1.7'
  base: -any
  criterion: ^>=1.5
  cryptohash-sha256: -any
  tasty-quickcheck: ^>=0.10
  tasty-hunit: ^>=0.10
  base16-bytestring: ^>=0.1.1 || ^>=1.0.0
  tasty: ^>=1.4
maintainer: Herbert Valerio Riedel <hvr@gnu.org>
synopsis: Fast, pure and practical SHA-256 implementation
changelog: |
  ## 0.11.102.0

   - Add Eq instance for Ctx
   - Add start and startlazy producing Ctx
   - Introduce new `use-cbits` cabal flag in order to
     add support for FFI-less `cryptohash-sha256-pure` pass-thru

  ## 0.11.101.0

   - Add `hkdf` function providing HKDF-SHA256 conforming to RFC5869
   - Declare `Crypto.Hash.SHA256` module `-XTrustworthy`
   - Remove ineffective RULES
   - Convert to `CApiFFI`
   - Added `...AndLength` variants of hashing functions:

        - `finalizeAndLength`
        - `hashlazyAndLength`
        - `hmaclazyAndLength`

   - Minor optimizations in `hmac` and `hash`

  ## 0.11.100.1

   - Use `__builtin_bswap{32,64}` only with GCC >= 4.3
     ([#1](https://github.com/hvr/cryptohash-sha256/issues/1))

  ## 0.11.100.0

   - new `hmac` and `hmaclazy` functions providing HMAC-SHA256
     computation conforming to RFC2104 and RFC4231
   - fix unaligned memory-accesses

  ## 0.11.7.2

   - switch to 'safe' FFI for calls where overhead becomes neglible
   - removed inline assembly in favour of portable C constructs
   - fix 32bit length overflow bug in `hash` function
   - fix inaccurate context-size
   - add context-size verification to incremental API operations

  ## 0.11.7.1

   - first version forked off `cryptohash-0.11.7` release
basic-deps:
  bytestring: ^>=0.9.2 || ^>=0.10.0 || ^>=0.11.0
  base: '>=4.5 && <4.17'
all-versions:
- 0.11.7.1
- 0.11.7.2
- 0.11.100.0
- 0.11.100.1
- 0.11.101.0
- 0.11.102.0
- 0.11.102.1
author: ''
latest: 0.11.102.1
description-type: haddock
description: |-
  A practical incremental and one-pass, pure API to
  the [SHA-256 cryptographic hash algorithm](https://en.wikipedia.org/wiki/SHA-2) according
  to [FIPS 180-4](http://dx.doi.org/10.6028/NIST.FIPS.180-4)
  with performance close to the fastest implementations available in other languages.

  The core SHA-256 algorithm is implemented in C and is thus expected
  to be as fast as the standard [sha256sum(1) tool](https://linux.die.net/man/1/sha256sum);
  for instance, on an /Intel Core i7-3770/ at 3.40GHz this implementation can
  compute a SHA-256 hash over 230 MiB of data in under one second.
  (If, instead, you require a pure Haskell implementation and performance is secondary, please refer to the [SHA package](https://hackage.haskell.org/package/SHA).)


  Additionally, this package provides support for

  - HMAC-SHA-256: SHA-256-based [Hashed Message Authentication Codes](https://en.wikipedia.org/wiki/HMAC) (HMAC)
  - HKDF-SHA-256: [HMAC-SHA-256-based Key Derivation Function](https://en.wikipedia.org/wiki/HKDF) (HKDF)

  conforming to [RFC6234](https://tools.ietf.org/html/rfc6234), [RFC4231](https://tools.ietf.org/html/rfc4231), [RFC5869](https://tools.ietf.org/html/rfc5869), et al..

  === Relationship to the @cryptohash@ package and its API

  This package has been originally a fork of @cryptohash-0.11.7@ because the @cryptohash@
  package had been deprecated and so this package continues to satisfy the need for a
  lightweight package providing the SHA-256 hash algorithm without any dependencies on packages
  other than @base@ and @bytestring@. The API exposed by @cryptohash-sha256-0.11.*@'s
  "Crypto.Hash.SHA256" module is guaranteed to remain a compatible superset of the API provided
  by the @cryptohash-0.11.7@'s module of the same name.

  Consequently, this package is designed to be used as a drop-in replacement for @cryptohash-0.11.7@'s
  "Crypto.Hash.SHA256" module, though with
  a [clearly smaller footprint by almost 3 orders of magnitude](https://www.reddit.com/r/haskell/comments/5lxv75/psa_please_use_unique_module_names_when_uploading/dbzegx3/).
license-name: BSD-3-Clause
