homepage: ''
changelog-type: markdown
hash: 765658778d1060f5216db78e593e968e50b9dcf6d77da53881914ee6ab0f7f22
test-bench-deps: {}
maintainer: dan.firth@homotopic.tech
synopsis: Generate nix expressions from horizon-spec definitions
changelog: |
  # Changelog for horizon-gen-nix

  ## 0.6

  * Support horizon-spec 0.6
  * Compiler flag now correctly preprocesses cabal files.

  ## v0.5

  * Support horizon-spec 0.5
  * Settings `includeBenchmarks` and `includeTests` to false will remove the dependencies from the inputs for that package expression.

  ## v0.4.0

  * Support horizon-spec 0.4.1

  ## v0.3.1

  * Remove broken --force flag.

  ## v0.3.0

  * Support horizon-spec-0.3.0
  * Allow for building from local packages and tarballs.

  ## v0.2

  * Support horizon-spec-0.2
  * horizon-gen-nix now supports two modes with several command line options.
    * Running in `make-package-set`mode will by default create a file called `inital-packages.nix` suitable for use with the `makePackageSet` function from nixpkgs.
    * Running in `overlay` mode will by default create a file called `overlay.nix` containing an overlay suitable for use with `haskell.packages.${compiler}.override`.

  ## v0.1

  * Support horizon-spec-0.1

  ## v0.0.0.1

  * Generate nix expressions for haskell packages from a dhall manifest.
basic-deps:
  horizon-gen-nix: -any
  either: -any
  path: -any
  base: '>=4.17 && <5'
  dhall: -any
  text: -any
  language-nix: -any
  Cabal-syntax: -any
  containers: -any
  silently: -any
  lens: -any
  distribution-nixpkgs: -any
  horizon-spec: '>=0.6 && <0.7'
  sydtest: -any
  cabal2nix: -any
  optparse-applicative: -any
  pretty: -any
  path-dhall-instance: -any
  directory: -any
all-versions:
- '0.2'
- 0.3.0
- 0.3.0.1
- 0.3.1.0
- 0.4.0
- '0.5'
- '0.6'
author: Daniel Firth
latest: '0.6'
description-type: markdown
description: |
  # horizon-gen-nix


  horizon-gen-nix is an executable for generating nix expressions
  from [horizon-spec](https://hackage.haskell.org/package/horizon-spec)
  dhall definitions.

  ```
  Usage: horizon-gen-nix [--input-file INPUT_FILE]

  Available options:
    -h,--help                Show this help text
    --input-file INPUT_FILE  The name of the input file.
  ```

  ## Example input

  The input file mentioned in the previous sections contains a dhall expression of
  the `HorizonExport` type (see `horizon-spec`).

  Here is an example input file:

  ```
  let H =
        https://gitlab.homotopic.tech/horizon/horizon-spec/-/raw/0.4.1/dhall/package.dhall
          sha256:9f2def711ea8796cdb24fa837da6681f9a7e752f87aeff08eee9b494c6e3374c

  in  H.HorizonExport.MakeOverlay
        { packagesDir = "pkgs"
        , overlayFile = "overlay.nix"
        , overlay =
          [ H.callHackage "cabal2nix" "2.19.1"
          , H.callHackage "distribution-nixpkgs" "1.7.0.1"
          , H.callHackage "horizon-spec" "0.4.1"
          ]
        }
  ```

  ## Building

  ```
  nix build
  ```

  ## Development

  ```
  nix develop
  ```
license-name: MIT
