homepage: ''
changelog-type: markdown
hash: 0ec963d40decf6b57c9c10206deaee7405676a1b24b9ff010aaf60f40235482f
test-bench-deps: {}
maintainer: dan.firth@homotopic.tech
synopsis: Generate nix expressions from horizon-spec definitions
changelog: |
  # Changelog for horizon-gen-nix

  ## v0.3.0

  * Support horizon-spec-0.3.0
  * Allow for building from local packages and tarballs.

  ## v0.2

  * Support horizon-spec-0.2
  * horizon-gen-nix now supports two modes with several command line options.
    * Running in `make-package-set`mode will by default create a file called `inital-packages.nix` suitable for use with the `makePackageSet` function from nixpkgs.
    * Running in `overlay` mode will by default create a file called `overlay.nix` containing an overlay suitable for use with `haskell.packages.${compiler}.override`.

  ## v0.1

  * Support horizon-spec-0.1

  ## v0.0.0.1

  * Generate nix expressions for haskell packages from a dhall manifest.
basic-deps:
  horizon-gen-nix: -any
  either: -any
  path: -any
  base: '>=4.7 && <5'
  dhall: -any
  text: -any
  language-nix: -any
  Cabal-syntax: -any
  containers: -any
  silently: -any
  lens: -any
  distribution-nixpkgs: -any
  horizon-spec: '>=0.3 && <0.4'
  sydtest: -any
  cabal2nix: -any
  optparse-applicative: -any
  pretty: -any
  path-dhall-instance: -any
  directory: -any
all-versions:
- '0.2'
- 0.3.0
author: Daniel Firth
latest: 0.3.0
description-type: markdown
description: |
  # horizon-gen-nix

  horizon-gen-nix is an executable for generating nix expressions
  from [horizon-spec](https://hackage.haskell.org/package/horizon-spec)
  dhall definitions.

  ```
  Usage: horizon-gen-nix [--input-file INPUT_FILE] [--packages-dir PACKAGES_DIR]
                         COMMAND

  Available options:
    -h,--help                Show this help text
    --input-file INPUT_FILE  The name of the input file.
    --packages-dir PACKAGES_DIR
                             The directory to put haskell packages.

  Available commands:
    make-package-set         Run in MakePackageSet Mode
    overlay                  Run in Overlay Mode
  ```

  ## Building

  ```
  nix build
  ```

  ## Development

  ```
  nix develop
  ```
license-name: MIT
