all-versions:
- 0.1.0.0
- 0.3.0.0
- 0.4.0.0
- 0.4.1.0
- 0.4.2.0
- 0.4.3.1
- 0.5.0.0
- 0.6.0.0
author: Richard Marko
basic-deps:
  attoparsec: '>=0'
  base: '>=4.12 && <5'
  binary: '>=0'
  bytestring: '>=0'
  containers: '>=0'
  cryptonite: '>=0'
  hnix-store-core: '>=0.6 && <0.7'
  mtl: '>=0'
  network: '>=0'
  nix-derivation: '>=1.1.1 && <2'
  relude: '>=1.0'
  text: '>=0'
  time: '>=0'
  unordered-containers: '>=0'
changelog: |
  # Revision history for hnix-store-remote

  ## [0.6.0.0](https://github.com/haskell-nix/hnix-store/compare/remote-0.5.0.0...remote-0.6.0.0) 2021-06-06

  * Breaking:
    * [(link)](https://github.com/haskell-nix/hnix-store/pull/179) `System.Nix.Store.Remote`:
      * `addToStore` no longer accepts `FilePath` as its second argument but uses
        more generic `NarSource` [(NarSource PR)](https://github.com/haskell-nix/hnix-store/pull/177)

  ## [0.5.0.0](https://github.com/haskell-nix/hnix-store/compare/0.4.3.0...remote-0.5.0.0) 2021-06-11

  * Breaking:
    * [(link)](https://github.com/haskell-nix/hnix-store/commit/3b948d112aa9307b0451258f28c7ee5dc86b24c7) `System.Nix.Store.Remote`:
      * `addToStore`: constraint of `ValidAlgo a` removed in favour of constraint on `cryptonite: HashAlgorithm a` through constraint `NamedAlgo a`.
      * `queryPathFromHashPart`: 1st arg changed from `Digest StorePathHashAlgo` to `StorePathHashPart`, for details: [hnix-store-core 0.5.0.0 ChangeLog](https://hackage.haskell.org/package/hnix-store-core-0.5.0.0/changelog).

  ## [0.4.3.0](https://github.com/haskell-nix/hnix-store/compare/0.4.2.0...0.4.3.0) 2021-05-30

  Nothing (it is tandem `hnix-store-core` fix release)

  ## [0.4.2.0](https://github.com/haskell-nix/hnix-store/compare/0.4.1.0...0.4.2.0) 2021-03-12

  * Additional:

    * [(link)](https://github.com/haskell-nix/hnix-store/commit/5d03ffc43cde9448df05e84838ece70cc83b1b6c) Cabal now properly states `tasty-discover` as `build-tool-depends`.

    * [(link)](https://github.com/haskell-nix/hnix-store/commit/b5ad38573d27e0732d0fadfebd98de1f753b4f07) added explicit `hie.yml` cradle description for `cabal` to help Haskell Language Server to work with monorepo.

    * [(link)](https://github.com/haskell-nix/hnix-store/commit/cf04083aba98ad40d183d1e26251101816cc07ae) Nix dev env: removed GHC 8.6.5 support, afaik it is not even in Nixpkgs anymore.


  ## [0.4.1.0](https://github.com/haskell-nix/hnix-store/compare/0.4.0.0...0.4.1.0) 2021-01-16

  * `System.Nix.Store.Remote`: module API now re-exports `System.Nix.Store.Remote.Types` API
  * Big clean-up of dependencies.

  ## [0.4.0.0](https://github.com/haskell-nix/hnix-store/compare/0.3.0.0...0.4.0.0) 2020-12-30

  * `hnix-store-core` compatibility

  ## 0.3.0.0 -- 2020-11-29

  * Restored most store API functions except `addToStoreNar`
  * Added `buildDerivation`

  ## 0.2.0.0 -- skipped

  * `hnix-store-core` release only

  ## 0.1.0.0  -- 2019-03-18

  * First version.
changelog-type: markdown
description: |
  # hnix-store-remote

  [Nix] worker protocol implementation for interacting with remote Nix store
  via `nix-daemon`.

  [Nix]: https://nixos.org/nix

  ## API

  [System.Nix.Store.Remote]: ./src/System/Nix/Store/Remote.hs

  ## Example

  ```haskell

  import Control.Monad.IO.Class (liftIO)
  import Data.HashSet as HS
  import System.Nix.Store.Remote

  main = do
    runStore $ do
      syncWithGC
      roots <- findRoots
      liftIO $ print roots

      res <- addTextToStore "hnix-store" "test" (HS.fromList []) False
      liftIO $ print res
  ```
description-type: markdown
hash: a8ea18bb355164bfd357fac12b0c5d32c95ffd455260f8b6c7fcaeddebf5918c
homepage: https://github.com/haskell-nix/hnix-store
latest: 0.6.0.0
license-name: Apache-2.0
maintainer: srk@48.io
synopsis: Remote hnix store
test-bench-deps:
  base: '>=0'
  containers: '>=0'
  cryptonite: '>=0'
  directory: '>=0'
  filepath: '>=0'
  hnix-store-core: '>=0.3'
  hnix-store-remote: '>=0'
  hspec: '>=0'
  hspec-expectations-lifted: '>=0'
  linux-namespaces: '>=0'
  process: '>=0'
  quickcheck-text: '>=0'
  relude: '>=0'
  tasty: '>=0'
  tasty-hspec: '>=0'
  tasty-quickcheck: '>=0'
  temporary: '>=0'
  unix: '>=0'
  unordered-containers: '>=0'
