all-versions:
- 0.2.0.0
- 0.2.1.0
- 0.3.0.0
- 0.3.1.0
- 0.3.2.0
- 0.3.3.0
- 0.4.0.0
- 0.5.0.0
- 0.5.0.1
- 0.5.0.2
author: Tae Geun Kim
basic-deps:
  base: '>=4.7 && <5'
  math-functions: '>=0'
  parallel: '>=0'
  parallel-io: '>=0'
  random: '>=0'
changelog: |
  # Changelog for HNumeric

  ## 0.5.0.2

  * Vector Parallel -> Vector Single Thread
  * Stats Single    -> Stats Parallel

  ## 0.5.0.0

  * Great Optimisation with parallel
  * Fix infinite determinant by Rosetta stone

  ## 0.4.0.0

  * Add HNum.F (Functional Programming Library for HNum)
  * Add Convertable Class (HNumObj String -> HNumObj (Int or Integer or Double))
  * Add (!) for Vector (v ! 1 == (toList v) !! 1)
changelog-type: markdown
description: "# HNumeric\n\n![Travis](https://travis-ci.org/Axect/HNumeric.svg?branch=master)\n\n##
  Packages\n\n* HNum.Vector  : Contain vector, matrix, linear algebra\n* HNum.Stats
  \  : Contain statistical functions\n* HNum.CSV     : CSV Tools for HNum (Contain
  DataFrame)\n* HNum.Special : Special Function wrapper for HNum\n* HNum.F       :
  Functional Programming Tools for HNum\n\n## Installation\n\n### 1. Cabal Install\n\n```sh\ncabal
  update\ncabal install HNumeric\n```\n\nThat's all!\n\n### 2. Import to Stack project\n\nIf
  you use this package to your own project, then you should change `stack.yaml` and
  `package.yaml`\n\n#### 1) Change `stack.yaml`\n\n```yaml\n# In stack.yaml\nextra-deps:\n
  \ - git: https://github.com/Axect/HNumeric.git\n    commit: [Latest Commit]\n  -
  normaldistribution-1.1.0.3\n  - random-1.1\n```\n\n* Replace [Latest Commit] with
  latest commit in [HNumeric Commit](https://github.com/Axect/HNumeric/commits/master)\n\n####
  2) Change `package.yaml`\n\n```yaml\n# In package.yaml\ndependecies:\n- base\n-
  HNumeric\n- normaldistribution\n- random\n```\n\nThen enjoy!\n\n## Documentation\n\nDocumentation
  is prepared on authorea\n\n[HNumeric Documentation](https://www.authorea.com/users/223838/articles/307659-hnumeric-documentation)\n\n##
  Usage\n\n### Import Module\n\n* HNum.Vector\n* HNum.Stats\n* HNum.CSV\n* HNum.F\n\n###
  Basic Vector Usage\n\n```haskell\n-- HNumeric-0.3.0.0 Documentation\n\nlet a = vector
  [1,2,3] -- Vector declaration\nlet b = Vector [4,5,6] -- small v and large V are
  same (for convenient)\n\n-- Print Vector\nprint a\n\n-- You can (+1) by fmap (Vector
  is functor)\n(+1) <$> a \n\n-- Or MATLAB-like operator (.+, .-, .*, ./, .^)\na .+
  1 -- do not 1 .+ a (. means position of vector)\n\n-- You can make list from vector\ntoList
  a -- [1, 2, 3]\n\n-- You can make vector from list\nfromList [1,2,3] -- Vector [1,2,3]\n\n--
  You can add (subtract, multiply, divide) vectors\na + b -- Vector [5,7,9]\n\n--
  Also dot product is here.\na .*. b -- 1*4 + 2*5 + 3*6 = 32\n\n-- Declare Matrix
  (Syntactic Sugar)\nlet c = matrix [[1,2],[3,4]]\n\n-- or Declare using R Syntax\nlet
  d = Matrix {val = Vector [5,6,7,8], row = 2, col = 2, byRow = True}\n\n-- Determinant\ndet
  c\n\n-- Inverse\ninv c\n\n-- Transpose\ntranspose c\n\n-- Matrix ops with Constant
  (+, -, *, /, ^)\nc .+ 1 -- Matrix [[2,3],[4,5]]\n\n-- Matrix ops with Matrix (+,
  -)\nc + c -- Matrix [[2,4],[6,8]]\n\n-- Matrix Multiplication\nc %*% d\n\n-- Matrix
  - Inverse Multiplication\nc %/% d\n\n-- Vector Concatenate\nhcat a b -- Vector [1,2,3,4,5,6]\nvcat
  a b -- Matrix [[1,2,3],[4,5,6]]\n\n-- Matrix Concatenate\nhcat c d -- Matrix [[1,2,5,6],[3,4,7,8]]\nvcat
  c d -- Matrix [[1,2],[3,4],[5,6],[7,8]]\n\n-- Insert Vector to Matrix\nvector [1,
  2] .: c -- Matrix [[1,2],[1,2],[3,4]]\n```\n\n### Basic Stats Usage\n\n```haskell\n--
  Sample Vector (import Vector)\nv = vector [1..10]\nw = vector [10, 9 .. 1]\n\n--
  Mean\nmean v\n\n-- Var\nvar v\n\n-- Std\nstd v\n\n-- Cov Matrix\ncov v w\n\n-- Only
  Cov\ncov' v w\n\n-- Linear Fit\n(intercept, slope) = lm v w -- (11.0, -1.0) -- (Intercept,
  Slope)\n\n-- Linear Fit function\nlineFit (intercept, slope) (Vector [1 .. 20])\n\n--
  RSS\nrss v w\n\n-- RSE\nrse v w\n```\n\n### DONE\n\n* Effective Matrix Structure
  (R-like Structure)\n* Divide and Conquer Matrix Multiplication, Determinant, Inverse\n*
  Module CSV with DataFrame (read / write)\n* FuncTools\n* Parallelize Matrix Arithmetics\n\n###
  TODO (2018.06.18)\n\n* DSL Documentation by LaTeX (Developing)\n* More Statistical
  Tools (Like Normal Distribution)\n"
description-type: markdown
hash: 6a8a1feb4be2d2b2a01ffb8c04ac3283f0bc830aa37e604ad969f79cf13c15c8
homepage: https://github.com/Axect/HNumeric#readme
latest: 0.5.0.2
license-name: BSD-3-Clause
maintainer: edeftg@gmail.com
synopsis: Haskell Numeric Library with pure functionality, R & MATLAB Syntax.
test-bench-deps:
  HNumeric: '>=0'
  base: '>=4.7 && <5'
  math-functions: '>=0'
  parallel: '>=0'
  parallel-io: '>=0'
  random: '>=0'
