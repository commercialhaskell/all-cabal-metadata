homepage: https://github.com/haskell-nix/hnix-store
changelog-type: markdown
hash: 82397e5afb9b095626fd72e92d0ae42df02b2107df2de275d99e9968fa41ed65
test-bench-deps:
  bytestring: -any
  unix: -any
  base: -any
  tasty-golden: -any
  base64-bytestring: -any
  hspec: -any
  text: -any
  tasty-hspec: -any
  filepath: -any
  process: -any
  containers: -any
  binary: -any
  tasty-quickcheck: -any
  tasty-hunit: -any
  base16-bytestring: -any
  attoparsec: -any
  temporary: -any
  tasty: -any
  hnix-store-core: -any
  directory: -any
maintainer: shea@shealevy.com
synopsis: Core effects for interacting with the Nix store.
changelog: |
  # Revision history for hnix-store-core

  ## [0.4.3.0](https://github.com/haskell-nix/hnix-store/compare/0.4.2.0...0.4.3.0) 2021-05-30

  * Additional:

    * [(link)](https://github.com/haskell-nix/hnix-store/commit/b85f7c875fe6b0bca939ffbcd8b9bd0ab1598aa0) `System.Nix.ReadonlyStore`: add a readonly `computeStorePathForPath`
    * [(link)](https://github.com/haskell-nix/hnix-store/commit/db71ecea3109c0ba270fa98a9041a8556e35217f) `System.Nix.ReadonlyStore`: `computeStorePathForPath`: force SHA256 as it's the only valid choice
    * [(link)](https://github.com/haskell-nix/hnix-store/commit/5fddf3c66ba1bcabb72c4d6b6e09fb41a7acd62c): `makeTextPath`: order the references

  ## [0.4.2.0](https://github.com/haskell-nix/hnix-store/compare/0.4.1.0...0.4.2.0) 2021-03-12

  * Additional:

    * [(link)](https://github.com/haskell-nix/hnix-store/commit/5d03ffc43cde9448df05e84838ece70cc83b1b6c) Cabal now properly states `tasty-discover` as `build-tool-depends`.

    * [(link)](https://github.com/haskell-nix/hnix-store/commit/b5ad38573d27e0732d0fadfebd98de1f753b4f07) added explicit `hie.yml` cradle description for `cabal` to help Haskell Language Server to work with monorepo.

    * [(link)](https://github.com/haskell-nix/hnix-store/commit/a5b7a614c0e0e11147a93b9a197c2a443afa3244) rm vacuous `Setup.hs`, it was throwing-off HLS, and anyway file is vacuous and gets deprecated by Cabal itself.

    * [(link)](https://github.com/haskell-nix/hnix-store/commit/cf04083aba98ad40d183d1e26251101816cc07ae) Nix dev env: removed GHC 8.6.5 support, afaik it is not even in Nixpkgs anymore.

    * [(link)](https://github.com/haskell-nix/hnix-store/commit/2a897ab581c0501587ce04da6d6e3a6f543b1d72) Test suite: fixed nar test for the envs without `/proc` (test suite now works on `macOS`).


  ## [0.4.1.0](https://github.com/haskell-nix/hnix-store/compare/0.4.0.0...0.4.1.0) 2021-01-16

  * Big clean-up of dependencies.

  ## [0.4.0.0](https://github.com/haskell-nix/hnix-store/compare/0.3.0.0...0.4.0.0) 2020-12-30

  * `System.Nix.Hash` no longer exports `encodeBase16, decodeBase16` and their `Base32` counterparts.
      These were replaced by `encodeInBase` and `decodeBase` functions
      accepting `BaseEncoding` data type [#87](https://github.com/haskell-nix/hnix-store/pull/87)
  * Support `base16-bytestring >= 1` [#86](https://github.com/haskell-nix/hnix-store/pull/86) [#100](https://github.com/haskell-nix/hnix-store/pull/100)

  ## 0.3.0.0 -- 2020-11-29

  * `System.Nix.Nar` changes API to support NAR format streaming:
    * `buildNarIO :: FilePath -> Handle -> IO ()` - Create a NAR from a regular filesystem object, stream it out on the Handle
    * `unpackNarIO :: Handle -> FilePath -> IO ()` - Recreate filesystem object from a NAR file accessed by the Handle
  * `StorePath` type changed to simple variant without type level
  symbolic store path root.
  * Added `makeFixedOutputPath` to `System.Nix.ReadonlyStore`
  * Added `decodeBase16` and `decodeBase32` to `System.Nix.Hash`
  * `System.Nix.StorePath` module now provides
    * `storePathToFilePath` and `storePathToText` helpers
    * `storePathToNarInfo` for converting paths to `narinfo` URLs
    * `parsePath` function
    * `pathParser` Attoparsec parser
  * Added `System.Nix.Build` module
  * Added `System.Nix.Derivation` module
  * Removed `System.Nix.Util` module, moved to `hnix-store-remote`
  * Added base64 and SHA512 hash support

  ## 0.2.0.0 -- 2020-03-12

  Removed `System.Nix.Store`. We may reintroduce it later when multiple backends
  exist and we can tell what common effects they should share.

  ## 0.1.0.0  -- 2019-03-18

  * First version.
basic-deps:
  cereal: -any
  cryptohash-sha1: -any
  bytestring: -any
  unix: -any
  base: '>=4.10 && <5'
  time: -any
  base64-bytestring: -any
  unordered-containers: -any
  text: -any
  cryptohash-md5: -any
  saltine: -any
  monad-control: -any
  filepath: -any
  nix-derivation: '>=1.1.1 && <2'
  lifted-base: -any
  containers: -any
  cryptohash-sha256: -any
  mtl: -any
  hashable: -any
  cryptohash-sha512: -any
  base16-bytestring: -any
  attoparsec: -any
  algebraic-graphs: '>=0.5 && <0.6'
  vector: -any
  directory: -any
all-versions:
- 0.1.0.0
- 0.2.0.0
- 0.3.0.0
- 0.3.0.1
- 0.4.0.0
- 0.4.1.0
- 0.4.2.0
- 0.4.3.0
author: Shea Levy
latest: 0.4.3.0
description-type: markdown
description: |
  # hnix-store-core

  Core effects for interacting with the Nix store.

  See `NarEffects` in [System.Nix.Internal.Nar.Effects] and the [System.Nix.StorePath] for the available operations
  on the store.

  [System.Nix.Internal.Nar.Effects]: ./src/System/Nix/Internal/Nar/Effects.hs
  [System.Nix.StorePath]: ./src/System/Nix/StorePath.hs


  # Tests

   - `ghcid --command "cabal repl test-suite:format-tests" --test="Main.main"`
license-name: Apache-2.0
