all-versions:
- 0.1.0.0
- 0.1.1.0
- 0.1.2.0
- 0.1.3.0
author: Jean-Charles Quillet
basic-deps:
  aeson: '>=2.1.2 && <2.3'
  base: '>=4.17.2 && <5'
  bytestring: '>=0.11.5 && <0.13'
  extra: '>=1.7.16 && <1.9'
  gi-ayatana-appindicator3: '>=0.1.1 && <0.2'
  gi-gdk3: '>=3.0.29 && <3.1'
  gi-glib: '>=2.0.30 && <2.1'
  gi-gobject: '>=2.0.31 && <2.1'
  gi-gtk3: '>=3.0.43 && <3.1'
  optparse-applicative: '>=0.18.1 && <0.20'
  systranything: '>=0'
  text: '>=2.0.2 && <2.2'
  typed-process: '>=0.2.11 && <0.3'
  unliftio: '>=0.2.25 && <0.3'
  yaml: '>=0.11.11 && <0.12'
changelog: |+
  # 0.1.0.0

  First version

changelog-type: markdown
description: "# Systranything\n\n[![nix][status-nix-png]][status-nix] \n[![haskell-ci][status-haskell-ci-png]][status-haskell-ci]\n[![hackage][hackage-png]][hackage]\n\n`systranything`
  lets you put anything in your system tray. It is supported by \nall destop environment
  that implements the [StatusNotifierHost \nspecification][status-notifier-host] from
  [freedesktop.org][freedesktop] \n([KDE][kde], [XFCE][xfce], ...).\n\nIt uses a YAML
  file which describes the icon to put in the system tray along a \ncontext menu and
  callbacks to be executed in a shell.\n\nThe menu can contain labels, separators,
  submenus, checkboxes and radiobuttons. \nScroll events can be triggered on the main
  icon.\n\nAmong other things, I use it to change my VPN settings. The icon shows
  its \ncurrent status:\n\n![demo](./demo.gif)\n\nWhat you can do with it:\n\n- a
  custom launcher menu\n- a volume icon\n- a menu to turn on or off your VPN\n- a
  menu to toggle dual monitor setups\n- anything that requires a status icon and scriptable
  actions\n\nSee [the example file](./tests/data/example.yaml) to get started.\n\nRun
  it with:\n\n```bash\n$ systranything -f ./tests/data/example.yaml\n```\n\nIt has
  a verbose mode which can be turned on with `-v`. It writes on `stdout` \nthe commands
  executed along their outputs.\n\n# Hacking\n\nThe project can be built with [nix][nix].\n\nInstall
  with:\n\n```bash\n$ nix profile install\n```\n\nBuild with:\n\n```bash\n$ nix build\n```\n\nThe
  binary is then created in `./result/bin/systranything`\n\nHack with:\n\n```bash\n$
  nix develop\n```\n\nYou will be dropped in a shell with all the needed tools in
  scope: `cabal` to \nbuild the project and `haskell-language-server` for a better
  developer \nexperience.\n\n[freedesktop]: https://www.freedesktop.org/wiki/\n[hackage-png]:
  https://img.shields.io/hackage/v/systranything\n[hackage]: https://hackage.haskell.org/package/systranything\n[kde]:
  https://kde.org/\n[nix]: https://nixos.org/\n[polybar]: https://polybar.github.io/\n[status-haskell-ci-png]:
  https://github.com/jecaro/systranything/workflows/Haskell-CI/badge.svg\n[status-haskell-ci]:
  https://github.com/jecaro/systranything/actions/workflows/haskell-ci.yml\n[status-nix-png]:
  https://github.com/jecaro/systranything/workflows/nix/badge.svg\n[status-nix]: https://github.com/jecaro/systranything/actions/workflows/nix.yml\n[status-notifier-host]:
  https://www.freedesktop.org/wiki/Specifications/StatusNotifierItem/StatusNotifierHost/\n[xfce]:
  https://www.xfce.org/\n\n"
description-type: markdown
hash: 949c93307ca22e4f0ae55d514bd9cc952d34978c67e170159defe924b29a06fa
homepage: https://github.com/jecaro/systranything
latest: 0.1.3.0
license-name: MIT
maintainer: jeancharles.quillet@gmail.com
synopsis: Let you put anything in the system tray
test-bench-deps:
  base: '>=0'
  hspec-expectations: '>=0.8.4 && <0.9'
  systranything: '>=0'
  tasty: '>=1.4.3 && <1.6'
  tasty-autocollect: ==0.4.2
  tasty-hunit-compat: '>=0.2.0 && <0.3'
  text: '>=0'
  yaml: '>=0'
...
