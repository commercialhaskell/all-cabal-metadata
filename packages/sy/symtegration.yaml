all-versions:
- 0.6.1
author: Yoo Chung
basic-deps:
  ad: '>=4.5 && <4.6'
  base: '>=4.18 && <4.22'
  containers: '>=0.6 && <0.8'
  text: '>=2.0 && <2.2'
  text-show: '>=3.10 && <3.12'
changelog: |
  # Changelog for `symtegration`

  All notable changes to this project will be documented in this file.

  The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),
  and this project adheres to the
  [Haskell Package Versioning Policy](https://pvp.haskell.org/).

  ## Unreleased

  ### 0.6.1 - 2025-01-30

  *   Do not set `-Werror` by default in preparation for upload to Hackage.

  ### 0.6.0 - 2025-01-29

  *   For rational function integration, use complex logarithms if we are not
      able to derive real function integrals.

  *   Add function to map polynomial coefficients monadically.

  ### 0.5.0 - 2025-01-20

  *   Implement integration by parts.

  *   Attempt integration by substitution after factoring out constant factors.

  *   Prefer positive integers in fraction denominators.

  *   Cancel out common integer fractions in $\frac{1}{x} \times y$ as well.

  ## 0.4.0 - 2025-01-14

  *   Integrate more rational functions.

      *   Find all real roots for integration involving solution of cubic equations.

      *   For integration involving solution of quartic equations,
          find real roots for more special cases.

  *   Cancel out common integer factors in fractions.

  *   Fewer parentheses in Haskell code output.

  *   Fewer parentheses in LaTeX output.

  *   Test with GHC 9.12.1.

  ## 0.3.0 - 2025-01-05

  *   Implementation of Rioboo's algorithm.

      *   Supports integration of more rational functions.

      *   Integration of rational functions with rational number coefficients now
          only limited by finding solutions for polynomials.  As of yet, only
          rational functions which require solutions for polymials up to degree 2
          can be integrated.

  *   Output `pi` as `\pi` in LaTeX.

  ## 0.2.0 - 2025-01-02

  *   Integration of rational functions.

      *   Hermite reduction.

      *   Lazard-Rioboo-Trager integration.

  *   Improvements to LaTeX output.

  *   Remove simplification based on recursive heuristics,
      which were much more ad hoc.

  *   Make `foldTerms` order consistent with simplification order,
      from lower to higher terms.

  ## 0.1.0 - 2024-12-24

  *   Symbolic representation.

  *   Simplification.

  *   Basic integration support.

      *   Integration of polynomials.

      *   Integration of trigonometric functions.

      *   Integration of exponential and logarithmic functions.

      *   Integration by substitution.
changelog-type: markdown
description: |
  # Symtegration

  This is a Haskell library intended to support symbolic integration of mathematical expressions.

  It offers the following:

  *   Symbolic integration of mathematical expressions.

      *   Integration of polynomials.

      *   Integration of trigonometric functions.

      *   Integration of exponential and logarithmic functions.

      *   Integration of ratios of two polynomials.

      *   Integration by substitution.

      *   Integration by parts.

  *   Symbolic representation of mathematical expressions.

  *   Utility functions to make it easier to read the mathematical expressions.
      For example, deriving equivalent Haskell code for a mathematical expression,
      and some support for simplifying symbolic representations.

  [![Build](https://github.com/symtegration/symtegration/actions/workflows/build.yaml/badge.svg)](https://github.com/symtegration/symtegration/actions/workflows/build.yaml)
  [![OpenSSF Best Practices](https://www.bestpractices.dev/projects/9864/badge)](https://www.bestpractices.dev/projects/9864)
  [![OpenSSF Scorecard](https://api.scorecard.dev/projects/github.com/symtegration/symtegration/badge)](https://scorecard.dev/viewer/?uri=github.com/symtegration/symtegration)
  [![codecov](https://codecov.io/gh/symtegration/symtegration/graph/badge.svg?token=CNBUMA1CKD)](https://codecov.io/gh/symtegration/symtegration)

  ## Integration

  Mathematical expressions with either numeric coefficients or symbolic coefficients
  can be integrated.  For example:

  ```haskell
  >>> import Symtegration
  >>> toHaskell <$> integrate "x" (4 * "x" ** 3 + 1)
  Just "x + x ** 4"
  >>> toHaskell <$> integrate "z" ("x" * "z" + "y")
  Just "y * z + 1 / 2 * x * z ** 2"
  ```

  Concrete numbers can also be computed from these integrals.  For example:

  ```haskell
  >>> import Symtegration
  >>> let (Just p) = integrate "x" (4 * "x" ** 3 + 1)
  >>> fractionalEvaluate p (\case "x" -> Just (3 / 7 :: Rational))
  Just (1110 % 2401)
  ```

  ### Symbolic integration in GHCi

  With Symtegration, symbolic integration can be done within [GHCi].
  When executing GHCi within the Symtegration project, it is best
  to load only the `Symtegration` module to avoid name collisions,
  so start GHCi without loading any modules.

  ```shell
  $ stack ghci --no-load
  ```

  Within GHCi, explicitly load the `Symtegration` module.
  You can then proceed to symbolically integrate mathematical expressions
  and compute approximate or exact values from these integrals.

  ```haskell
  >>> :load Symtegration
  >>> toHaskell <$> integrate "x" ("a" * "x" ** 4 + "x" + "b")
  Just "b * x + 1 / 2 * x ** 2 + a * (x ** 5) / 5"
  >>>
  >>> let (Just p) = integrate "x" ("x" ** 2)
  >>> evaluate p (\case "x" -> Just 1)
  Just 0.3333333333333333
  >>>
  >>> fractionalEvaluate p (\case "x" -> Just (1 :: Rational))
  Just (1 % 3)
  ```

  [GHCi]: https://downloads.haskell.org/ghc/latest/docs/users_guide/ghci.html

  ### Symbolic integration in IHaskell

  Symtegration can also be used in [IHaskell] to do symbolic integration.
  Its use can be seen in an [example IHaskell notebook],
  which you can try out by [running on mybinder.org].

  [IHaskell]: https://github.com/IHaskell/IHaskell
  [example IHaskell notebook]: https://github.com/chungyc/haskell-notebooks/blob/main/Symtegration.ipynb
  [running on mybinder.org]: https://mybinder.org/v2/gh/chungyc/haskell-notebooks/HEAD?labpath=Symtegration.ipynb

  ## Changes

  See [`CHANGELOG.md`] for what has changed.

  [`CHANGELOG.md`]: CHANGELOG.md

  ## Code of conduct

  Be nice; see [`CODE_OF_CONDUCT.md`] for details.

  [`CODE_OF_CONDUCT.md`]: docs/CODE_OF_CONDUCT.md

  ## Security policy

  See [`SECURITY.md`] for details.

  [`SECURITY.md`]: docs/SECURITY.md

  ## Contributing

  See [`CONTRIBUTING.md`] for details.

  [`CONTRIBUTING.md`]: docs/CONTRIBUTING.md

  ## License

  Apache 2.0; see [`LICENSE`] for details.

  [`LICENSE`]: LICENSE
description-type: markdown
hash: 81ef5c895935f20f08e939a7f0d08ee86dff599793d1026eb1e79f8872348bac
homepage: https://symtegration.dev/
latest: 0.6.1
license-name: Apache-2.0
maintainer: dev@chungyc.org
synopsis: Library for symbolic integration of mathematical expressions.
test-bench-deps:
  QuickCheck: '>=2.14 && <2.16'
  ad: '>=4.5 && <4.6'
  base: '>=4.18 && <4.22'
  containers: '>=0.6 && <0.8'
  doctest-parallel: '>=0.3 && <0.4'
  hspec: '>=2.11 && <2.12'
  symtegration: '>=0'
  text: '>=2.0 && <2.2'
  text-show: '>=3.10 && <3.12'
