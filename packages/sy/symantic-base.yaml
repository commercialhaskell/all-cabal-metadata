all-versions:
- 0.0.0.20200708
- 0.0.1.20200708
- 0.0.2.20200708
- 0.1.0.20210703
- 0.2.0.20210731
- 0.2.0.20210831
- 0.3.0.20211007
- 0.4.0.20211106
- 0.5.0.20221211
author: Julien Moutinho <julm+symantic-base@sourcephile.fr>
basic-deps:
  base: '>=4.10 && <5'
  containers: '>=0'
  hashable: '>=0'
  template-haskell: '>=0'
  transformers: '>=0'
  unordered-containers: '>=0'
changelog: |2+

  ## symantic-base-0.5.0.20221211 (2022-12-10)

  ### Interface

  * Add `Endpoint`.
  * Add syntax for `either`.
  * Add syntax `IfSemantic`.
  * Add interpreter `Reader`.
  * Fix export of `ADT`.
  * Fix gather in submodules.
  * Move `(.@)` into `Unabstractable`.
  * Remove syntax `Routable`.
  * Remove `option`, only `optional` is correct.
  * Replace `adt` by `dataType`, and support `TuplesOfFunctions`.

  ### Documentation

  * Fix remaining `<:>` to `<.>`.
  * Fix typos in comments.
  * Update `ChangeLog.md`.
  * Update public presence.

  ### Implementation

  * Fix deprecated `StarIsType`.
  * Gather in submodules.
  * Rename module `ADT` to `EithersOfTuples`.
  * Rename type variable `repr` to `sem`.

  ### Build

  * Check that the build before tagging.
  * Ignore `.pre-commit-config.yaml`.
  * Improve `ghcid` support.
  * Improve `flake.nix`.
  * Update nix input `nixpkgs`.


  ## symantic-base-0.5.0.20221122 (2022-11-23)

  ### Interface

  * Add syntax for `either`.
  * Add syntax `IfSemantic`.
  * Add interpreter `Reader`.
  * Fix gather in submodules.
  * Move `(.@)` into `Unabstractable`.
  * Remove `option`, only `optional` is correct.

  ### Documentation

  * Fix typos in comments.
  * Update public presence.

  ### Implementation

  * Fix deprecated `StarIsType`.
  * Gather in submodules.
  * Rename type variable `repr` to `sem`.

  ### Build

  * Improve `flake.nix`.
  * Update nix input `nixpkgs`.


  ## symantic-base-0.4.0.20211106 (2021-11-18)

  ### Interface

  * Rename `Symantic.{View => Viewer}`.
  * Rename `Symantic.{ObserveSharing => SharingObserver}`.
  * Rename `Symantic.{Class => Classes}`.
  * Update release `version`.

  ### Documentation

  * Fix minor shortcomings.
  * Update `ChangeLog.md`.

  ### Build

  * Fix `flake.lock` to use a public Nixpkgs.
  * Move all Nix config into `flake.nix`.
  * Update nix input `nixpkgs`.


  ## symantic-base-0.3.0.20211007 (2021-10-07)

  ### Interface

  * Add `(<.)` and `(.>)` to class `ProductFunctor`.
  * Add class `Inferable`.
  * Add classes `Emptyable` and `Semigroupable`.
  * Add `CurryN` to the root import.
  * Add class `SumFunctor`.
  * Add instance `Category Iso`.
  * Change `(==)` to curryed form.
  * Change to `infixr` classes `ProductFunctor` and `SumFunctor`.
  * Fix class `Voidable`.
  * Fix class `Dicurryable`.
  * Move some `Abstractable` methods to `Functionable`.
  * Rename module `Symantic.{Lang => Class}`.
  * Rename term `{def => define}`.
  * Update release `version`.

  ### Documentation

  * Add `ChangeLog.md`.
  * Rename {hut => code}.sourcephile.fr.

  ### Implementation

  * Cleanup formatting a bit.
  * Cleanup useless import.

  ### Build

  * Add tool `git-chglog` for generating `ChangeLog.md`.
  * Add tool `reuse` for copyright linting.
  * Ignore more local-only files.
  * Improve linting.
  * Remove nix input `flake-utils`.
  * Remove lingering Stack file.
  * Update nix input `nixpkgs`.

changelog-type: markdown
description: |-
  This is a work-in-progress collection of basic tagless-final combinators,
  along with some advanced utilities to exploit them.
  * @Symantic.Syntaxes.Classes@
  gathers commonly used tagless-final combinators
  (the syntax part of symantics).
  * @Symantic.Syntaxes.Data@ interprets combinators as data constructors
  enabling to pattern-match on combinators while keeping their extensibility.
  * @Symantic.Syntaxes.Derive@
  to give a default value to combinators which avoids boilerplate code
  when implementing combinators for an interpreter is factorizable.
  * @Symantic.Syntaxes.EithersOfTuples@
  leverages @GHC.Generics@ to generate reciprocal functions
  between algebraic data type constructors and Eithers-of-Tuples.
  * @Symantic.Syntaxes.TuplesOfFunctions@
  enables the use of Tuples-of-Functions
  instead of Eithers-of-Tuples.
  * @Symantic.Syntaxes.CurryN@
  gathers utilities for currying or uncurrying tuples
  of size greater or equal to two.
  * @Symantic.Semantics.SharingObserver@
  interprets combinators to observe @let@ definitions
  at the host language level (Haskell),
  effectively turning infinite values into finite ones,
  which is useful for example to inspect
  and optimize recursive grammars.
  Inspired by Andy Gill's [Type-safe observable sharing in Haskell](https://doi.org/10.1145/1596638.1596653).
  For an example, see [symantic-parser](https://hackage.haskell.org/package/symantic-parser).
  * @Symantic.Semantics.ToFer@
  interprets combinators to return Tuples-of-Functions
  instead of Eithers-of-Tuples.
  * @Symantic.Semantics.Viewer@
  interprets combinators as human-readable text.
  * @Symantic.Semantics.Viewer.Fixity@
  gathers utilities for parsing or viewing
  infix, prefix and postfix combinators.
  * @Symantic.Syntaxes.Reader@
  is an intermediate interpreter enabling to change
  the syntax combinators using an environment.
  * @Symantic.Utils.Reify@
  enables the lifting to any interpreter
  of any Haskell functions taking as arguments
  only polymorphic types (possibly constrained)
  or functions using such types.
  Inspired by Oleg Kiselyov's [TDPE.hs](http://okmij.org/ftp/tagless-final/course/TDPE.hs).
description-type: haddock
hash: fdb5b47170cc3da9aadfb55a1fb6d5f451d35e3fe2fae42c933b6390fa513178
homepage: https://git.sourcephile.fr/haskell/symantic-base
latest: 0.5.0.20221211
license-name: AGPL-3.0-or-later
maintainer: mailto:symantic-base@sourcephile.fr
synopsis: Basic symantic combinators for Embedded Domain-Specific Languages (EDSL)
test-bench-deps: {}
