all-versions:
- 0.1.0.0
- 0.1.1.0
- 0.1.2.0
- 0.1.2.1
- 0.1.2.2
- 0.1.2.3
- 0.1.2.4
- 0.1.2.5
- 0.1.3.0
author: Justin Le
basic-deps:
  backprop: '>=0.2.5'
  base: '>=4.7 && <5'
  ghc-typelits-knownnat: '>=0'
  ghc-typelits-natnormalise: '>=0'
  hmatrix: '>=0.18'
  hmatrix-vector-sized: '>=0.1.1'
  microlens: '>=0'
  vector: '>=0'
  vector-sized: '>=0.6'
  vinyl: '>=0.9'
changelog: |
  Changelog
  =========

  Version 0.1.3.0
  ---------------

  *August 18, 2019*

  <https://github.com/mstksg/hmatrix-backprop/releases/tag/v0.1.3.0>

  *   Fix for compatibility with *hmatrix-vector-sized-0.1.2.0*.  However, this
      is potentially a breaking change because `vector`, `fromRows`, and
      `fromColumns` now all require extra `KnownNat` constraints.

  Version 0.1.2.5
  ---------------

  *November 14, 2018*

  <https://github.com/mstksg/hmatrix-backprop/releases/tag/v0.1.2.5>

  *   Fix compatibility with GHC 8.6

  Version 0.1.2.4
  ---------------

  *August 8, 2018*

  <https://github.com/mstksg/hmatrix-backprop/releases/tag/v0.1.2.4>

  *   Fix compatibility with *backprop-0.2.6.1*

  Version 0.1.2.3
  ---------------

  *June 19, 2018*

  <https://github.com/mstksg/hmatrix-backprop/releases/tag/v0.1.2.3>

  *   Fix compatibility with *backprop-0.2.5.0*

  Version 0.1.2.2
  ---------------

  *May 28, 2018*

  <https://github.com/mstksg/hmatrix-backprop/releases/tag/v0.1.2.2>

  *   Fix compatibility with *backprop-0.2.4.0*.
  *   Rewrote most of *Numeric.LinearAlgebra.Static.Backprop* module to require
      `Backprop` constraints on everything instead of `Num` constraints
  *   Re-ordered constraint orders on various functions.  *Potentially breaking
      change* if TypeApplications are used.
  *   Removed redundant dependency on *finite-typelits*.

  Version 0.1.2.1
  ---------------

  *May 1, 2018*

  <https://github.com/mstksg/hmatrix-backprop/releases/tag/v0.1.2.1>

  *   Updated for compatibility with *backprop-0.2.0.0*
  *   Orphan instances added for types in *Numeric.LinearAlgebra.Static*.

  Version 0.1.2.0
  ---------------

  *Mar 30, 2018*

  <https://github.com/mstksg/hmatrix-backprop/releases/tag/v0.1.2.0>

  *   `zipWithVector` family rewritten in the same way as `dvmap`/`dvmap` were
      for version 0.1.1.0, which is a breaking API change.  However, again, it is
      unlikely that any code using the previous versions compiled at all, so in
      practicality, no actual code that previously worked is now breaking.

  Version 0.1.1.0
  ---------------

  *Mar 25, 2018*

  <https://github.com/mstksg/hmatrix-backprop/releases/tag/v0.1.1.0>

  *   `dvmap`/`dmmap` family rewritten, which is a breaking API change.  Previous
      version of `dvmap`/`dmmap` would not even compile at all if used, though,
      because of nonsensical constraints, so it is likely that no code that
      previously worked is now breaking.
  *   *backprop* types re-exported for convenience

  *Internal*

  *   Rewrote much code to use `isoVar` instead of `opIso`, for increased clarity
      and cleanliness.  Requires *backprop-0.1.4.0*.

  Version 0.1.0.0
  ---------------

  *Feb 10, 2018*

  <https://github.com/mstksg/hmatrix-backprop/releases/tag/v0.1.0.0>

  *   Initial release
changelog-type: markdown
description: |+
  hmatrix-backprop
  ================

  [![hmatrix-backprop on Hackage](https://img.shields.io/hackage/v/hmatrix-backprop.svg?maxAge=2592000)](https://hackage.haskell.org/package/hmatrix-backprop)
  [![Build Status](https://travis-ci.org/mstksg/hmatrix-backprop.svg?branch=master)](https://travis-ci.org/mstksg/hmatrix-backprop)

  *[hmatrix][]* operations lifted for *[backprop][]*, along with orphan instances
  of `Backprop`.

  [hmatrix]: http://hackage.haskell.org/package/hmatrix
  [backprop]: http://hackage.haskell.org/package/backprop

  Meant to act as a drop-in replacement to the API of
  [Numeric.LinearAlgebra.Static][static].  Just change your imports, and your
  functions are automatically backpropagatable.  Useful types are all
  re-exported.

  [static]: https://hackage.haskell.org/package/hmatrix-0.18.2.0/docs/Numeric-LinearAlgebra-Static.html

  Formulas for gradients come from the following papers:

  *   <https://people.maths.ox.ac.uk/gilesm/files/NA-08-01.pdf>
  *   <http://www.dtic.mil/dtic/tr/fulltext/u2/624426.pdf>
  *   <http://www.cs.cmu.edu/~zkolter/course/15-884/linalg-review.pdf>
  *   <https://arxiv.org/abs/1602.07527>

  Some functions are not yet implemented!  See module documentation for details.
  PR's definitely appreciated :)

  Tests
  -----

  Currently numeric tests are implemented as property tests using hedgehog, but
  it is possible that the answers might differ from the true values by an amount
  undetectable by property tests.

  All functions currently are tested except for the higher-order functions.

  They are tested by "nudging" components of inputs and checking if the change in
  the function outputs match what is expected from the backpropagated gradient.

  TODO
  ----

  1.  Now that new backprop no longer requires `Num`, we can lift normal hmatrix
      operations as well.
  1.  Statically sized convolutions.  Should probably add this to hmatrix instead
      first, though.


description-type: markdown
hash: eff786a68b34d44df9bd461c5890d0d876684f34e5fd4b6078a67263d21279f1
homepage: https://github.com/mstksg/hmatrix-backprop#readme
latest: 0.1.3.0
license-name: BSD-3-Clause
maintainer: justin@jle.im
synopsis: hmatrix operations lifted for backprop
test-bench-deps:
  backprop: '>=0.2.5'
  base: '>=4.7 && <5'
  finite-typelits: '>=0'
  hedgehog: '>=0'
  hmatrix: '>=0.18'
  hmatrix-backprop: '>=0'
  hmatrix-vector-sized: '>=0.1.1'
  microlens: '>=0'
  microlens-platform: '>=0'
  vector-sized: '>=0.6'
  vinyl: '>=0.9'
