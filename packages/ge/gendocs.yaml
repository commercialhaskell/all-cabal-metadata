all-versions:
- 0.1.0.0
- 0.1.1
- 0.1.2
- 0.1.3
author: Sean Hess
basic-deps:
  aeson: '>=0'
  aeson-pretty: '>=0'
  base: '>=4.7 && <5'
  bytestring: '>=0'
  safe: '>=0'
  text: '>=0'
changelog: ''
changelog-type: ''
description: |
  Generate interface documentation for your types

  Example
  -------

      {-# LANGUAGE OverloadedStrings #-}
      {-# LANGUAGE DeriveGeneric #-}
      {-# LANGUAGE GeneralizedNewtypeDeriving #-}
      module Example where

      import Data.Aeson (ToJSON)
      import Data.Proxy (Proxy(..))
      import Data.Docs (markdown, Docs(..), Sample(..), genDocs, genDocsEnum)
      import Data.Text (Text)
      import qualified Data.Text as Text
      import GHC.Generics (Generic)

      data Person = Person
          { name :: Text
          , age :: Age
          , hobbies :: [Hobby]
          } deriving (Show, Eq, Generic)
      instance ToJSON Person
      instance Docs Person
      instance Sample Person where
          sample _ = Person
            { name = "Bob"
            , age = sample (Proxy :: Proxy Age)
            , hobbies = [Haskell, Friends]
            }

      newtype Age = Age Int
          deriving (Show, Eq, Generic)
      instance ToJSON Age
      instance Docs Age where
          docs = genDocs "Age in years"
      instance Sample Age where
          sample _ = Age 31
          samples _ = [Age 31, Age 24]

      data Hobby = Haskell | Friends | Movies
          deriving (Show, Eq, Generic, Enum, Bounded)
      instance ToJSON Hobby
      instance Docs Hobby where
          docs = genDocsEnum "Hobby"
      instance Sample Hobby where
          sample _ = Haskell

      doc :: IO ()
      doc = do
          putStrLn $ Text.unpack json

      json :: Text
      json = Text.intercalate "\n\n\n" $
        [ markdown (Proxy :: Proxy Person)
        , markdown (Proxy :: Proxy Age)
        , markdown (Proxy :: Proxy Hobby)
        ]

  This generates the following output

      Person
      ---------------------

      | Field   | Type              |
      |---------|-------------------|
      | name    | [Text](#text)     |
      | age     | [Age](#age)       |
      | hobbies | [[Hobby]](#hobby) |

      ```
      {
          "age": 31,
          "hobbies": [
              "Haskell",
              "Friends"
          ],
          "name": "Bob"
      }
      ```


      Age
      ---------------------

      Age in years

      ```
      31
      ```


      Hobby
      ---------------------

      | Values    |
      |-----------|
      | "Haskell" |
      | "Friends" |
      | "Movies"  |

      ```
      "Haskell"
      ```
description-type: markdown
hash: 3eabb8be121d7b9c19f503905dd6ea5737c451f39fd3b9640d706a2b7196151d
homepage: https://github.com/seanhess/gendocs#readme
latest: 0.1.3
license-name: BSD-3-Clause
maintainer: seanhess@gmail.com
synopsis: Library for generating interface documentation from types
test-bench-deps:
  base: '>=0'
  gendocs: '>=0'
