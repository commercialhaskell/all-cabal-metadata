homepage: https://github.com/NorfairKing/validity#readme
changelog-type: markdown
hash: 148e4a360d9e9aaff8c7c21c64db615c697204ed189a950918d1d62a0a308c30
test-bench-deps:
  genvalidity-bytestring: -any
  bytestring: -any
  base: '>=4.7 && <5'
  hspec: -any
  criterion: -any
  genvalidity-hspec: -any
  validity: '>=0.9'
  genvalidity-criterion: -any
  deepseq: -any
  QuickCheck: -any
  genvalidity: -any
maintainer: syd@cs-syd.eu
synopsis: GenValidity support for ByteString
changelog: |+
  # Changelog

  ## [1.0.0.0] - 2021-11-20

  ### Changed

  * Compatibility with `genvalidity >= 1.0.0.0`

  ### Removed

  * `genTrulyUncheckedStrictByteString`
  * `shrinkTrulyUncheckedStrictByteString`
  * `genTrulyUncheckedLazyByteString`
  * `shrinkTrulyUncheckedLazyByteString`

  ## [0.6.0.0] - 2020-04-17

  ### Added

  * genStrictByteStringBy
  * genLazyByteStringBy
  * genLazyByteStringByStrictByteString
  * Benchmarks for the generators

  ### Changed

  * Strict Bytestrings are now generated up to 4x faster.
  * Lazy Bytestrings are now generated to usually have multiple chunks.

  ## [0.5.0.1] - 2020-02-10

  * Improved the cabal file

  ## [0.5.0.0] - 2019-03-06

  ### Added

  * genTrulyUncheckedLazyByteString
  * shrinkTrulyUncheckedLazyByteString

  ### Changed

  * Removed the 'GenUnchecked' and 'GenInvalid' instances for both strict and lazy `ByteString`s
  * Poisoned those two instances as well.

  ## [0.4.1.0] - 2019-03-06

  ### Added

  * 'GenUnchecked' and 'GenValid' for 'ShortByteString'

  ## [0.4.0.0] - 2019-03-06

  ### Added

  * genTrulyUncheckedStrictByteString
  * shrinkTrulyUncheckedStrictByteString

  ### Changed

  * The 'genUnchecked' instance of 'Strict.ByteString' and 'Lazy.ByteString' now `error` instead of generating values that segfault.

  ## [0.3.0.2] - 2019-02-28

  ### Changed

  * Clearer documentation

  ## [0.3.0.1] - 2018-10-07

  ### Changed

  * Test suite compatibility with `validity >= 0.9`

  ## [0.3.0.0] - 2018-08-25

  ### Added

  * `GenUnchecked`, `GenValid` and `GenInvalid`, instances for lazy `ByteString`.

  ### Changed

  * `genUnchecked :: Gen ByteString` now generates much more unchecked values according to the new `validity-bytestring`.
    **If you experience unexpected segfaults, the problem could be that you are using unchecked `ByteString`s where you should be using valid `ByteString`s.**

  ## Older versions

  No history before version 0.3.0.0

basic-deps:
  bytestring: -any
  base: '>=4.7 && <5'
  validity: '>=0.5'
  validity-bytestring: '>=0.4'
  random: -any
  QuickCheck: -any
  genvalidity: '>=1.0'
all-versions:
- 0.0.0.1
- 0.1.0.0
- 0.2.0.0
- 0.2.0.1
- 0.2.0.2
- 0.3.0.0
- 0.3.0.1
- 0.4.0.0
- 0.5.0.0
- 0.5.0.1
- 0.6.0.0
- 1.0.0.0
author: Tom Sydney Kerckhove
latest: 1.0.0.0
description-type: haddock
description: ''
license-name: MIT
