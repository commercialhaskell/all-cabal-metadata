all-versions:
- 0.1.0.0
author: Frederick Pringle
basic-deps:
  base: '>=4.12 && <5'
  generics-sop: '>=0.4 && <0.6'
  sop-core: '>=0.4.0.1 && <0.6'
  text: '>=1.1 && <2.2'
changelog: |
  # Changelog

  All notable changes to `generic-diff` will be documented in this file.

  The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.1.0/),
  and this project adheres to [Haskell Package Versioning Policy](https://pvp.haskell.org).

  ## [Unreleased]

  ## [0.1.0.0] - 30.05.2025

  ### Added

  - First version. Released on an unsuspecting world.
  - Let users extend the built-in diff types with custom diffs via the `SpecialDiff` class in [#9](https://github.com/fpringle/generic-diff/pull/9).
  - Add example implementations of `SpecialDiff` for `containers` types in [#10](https://github.com/fpringle/generic-diff/pull/10).

  [unreleased]: https://github.com/fpringle/generic-diff/compare/v0.1.0.0...HEAD
  [0.1.0.0]: https://github.com/fpringle/generic-diff/releases/tag/v0.1.0.0
changelog-type: markdown
description: |
  [![Haskell CI](https://github.com/fpringle/generic-diff/actions/workflows/haskell.yml/badge.svg)](https://github.com/fpringle/generic-diff/actions/workflows/haskell.yml)

  # Generic structural diffs

  `generic-diff` lets us pinpoint exactly where two values differ, which can be very useful, for example for debugging failing tests.
  This functionality is provided by the `Diff` typeclass, for which instances can be derived automatically using `Generic` from
  [generics-sop](https://github.com/well-typed/generics-sop).

  For detailed information, see the [Hackage docs](https://hackage.haskell.org/package/generic-diff/docs/Generics-Diff.html).

  ## Example

  ```haskell
  {-# LANGUAGE DerivingStrategies #-}
  {-# LANGUAGE DeriveGeneric #-}
  {-# LANGUAGE DeriveAnyClass #-}

  import Generics.Diff
  import Generics.Diff.Render

  import qualified GHC.Generics as G
  import qualified Generics.SOP as SOP

  data BinOp = Plus | Minus
    deriving stock (Show, G.Generic)
    deriving anyclass (SOP.Generic, SOP.HasDatatypeInfo, Diff)

  data Expr
    = Atom Int
    | Bin {left :: Expr, op :: BinOp, right :: Expr}
    deriving stock (Show, G.Generic)
    deriving anyclass (SOP.Generic, SOP.HasDatatypeInfo, Diff)

  expr1, expr2 :: Expr
  expr1 = Bin (Atom 1) Plus (Bin (Atom 1) Plus (Atom 1))
  expr2 = Bin (Atom 1) Plus (Bin (Atom 1) Plus (Atom 2))
  ```

  ```haskell
  ghci> printDiffResult $ diff expr1 expr2
  In field right:
    Both values use constructor Bin but fields don't match
    In field right:
      Both values use constructor Atom but fields don't match
      In field 0 (0-indexed):
        Not equal
  ```
description-type: markdown
hash: da941b599c1737d4080b76e79d0c4ef5ef446cd9e15bb8097741bb62c08a478f
homepage: https://github.com/fpringle/generic-diff
latest: 0.1.0.0
license-name: BSD-3-Clause
maintainer: freddyjepringle@gmail.com
synopsis: Generic structural diffs
test-bench-deps:
  QuickCheck: '>=0'
  base: '>=4.12 && <5'
  basic-sop: '>=0'
  generic-diff: '>=0'
  generics-sop: '>=0.4 && <0.6'
  hspec: '>=0'
  sop-core: '>=0.4.0.1 && <0.6'
  text: '>=1.1 && <2.2'
