homepage: https://github.com/ngless-toolkit/ngless#readme
changelog-type: text
hash: d596130f698e453454ba29aa5c7c162983d7e3b76130085b68cf0bd59242ebb8
test-bench-deps:
  http-client: -any
  MissingH: '>=1.3'
  diagrams-lib: -any
  exceptions: -any
  bzlib-conduit: -any
  conduit-algorithms: '>=0.0.9.0'
  either: -any
  bytestring: -any
  inline-c: -any
  safeio: '>=0.0.2'
  hostname: -any
  tasty-th: -any
  unliftio: -any
  extra: '>=1.4'
  unix: -any
  edit-distance: '>=0.2'
  stm: -any
  filemanip: '>=0.3.6'
  base: '>=4.12 && <4.16'
  time: '>=1.5'
  regex: -any
  configurator: -any
  atomic-write: '>=0.2'
  text: '>=1.2'
  double-conversion: -any
  strict: -any
  unix-compat: -any
  filepath: '>=1.3'
  criterion: -any
  process: '>=1.2.3'
  network: -any
  async: -any
  parsec: '>=3.1'
  conduit: '>=1.3'
  data-default: -any
  HUnit: '>=1.3'
  inline-c-cpp: -any
  stm-conduit: '>=2.7'
  conduit-extra: '>=1.1.12'
  diagrams-svg: -any
  containers: -any
  tar-conduit: '>=0.3.2'
  ansi-terminal: -any
  unliftio-core: -any
  tar: '>=0.5'
  hashtables: -any
  zlib: -any
  tasty-quickcheck: -any
  mtl: '>=2.2'
  convertible: -any
  hashable: -any
  tasty-hunit: -any
  vector-algorithms: -any
  diagrams-core: -any
  stm-chans: -any
  file-embed: '>=0.0.8'
  int-interval-map: -any
  NGLess: -any
  transformers: -any
  optparse-applicative: -any
  tasty: -any
  errors: '>=2.1'
  deepseq: '>=1.3'
  bytestring-lexing: -any
  QuickCheck: '>=2.8'
  http-conduit: -any
  resourcet: '>=1.1'
  aeson: '>=0.9'
  template-haskell: -any
  primitive: '>=0.6'
  safe: -any
  yaml: -any
  vector: '>=0.11'
  directory: -any
maintainer: luis@luispedro.org
synopsis: NGLess implements ngless, a DSL for processing sequencing data
changelog: "Version 1.4.0 2022-05-30 by luispedro\n\t* Add --trace argument to all
  modes\n\t* Update --create-reference-pack mode to newer format (previous version
  worked, but\n\tusers still had to recreate indices after downloading, negating some
  of\n\tthe benefits\n\t* Update --install-reference-data mode to download latest
  version (#107)\n\t* Update --create-reference-pack mode to download latest version
  (#108)\n\t* Do not fail when merging empty files (#113)\n\t* write() returns the
  filename used\n\t* Switch to tasty test framework\n\t* Update to LTS-19\n\t* write()
  uses multiple threads to write multiple FQ files\n\t* Use binaries from path (not
  self installed)\n\t* Better error message when parsing misformed FastQ files\n\t*
  Overhall building infrastructure to use haskell.nix and build\n\tdependencies with
  nix\n\t* Update megahit version\n\t* Added GMGC to builtin Modules\n\t* Make `--print-path
  minimap2` work correctly\n\nVersion 1.3.0 2021-01-28 by luispedro\n\t* Validate
  count() headers on --validate-only\n\t* Better error message if the user attempts
  to use the non-existent <\\>\n\toperator (suggest </>)\n\t* Add min-ngless-version
  field for modules\n\t* Add early check that block assignments are always to block
  variables\n\t* Use ZStd compression for temporary files from preprocess()\n\t* Correctly
  handle subpaths in samples for collect (fixes #141)\n\t* Add to_string() to int
  and double types (partially fixes #78 & fixes #81)\n\t* Add read_int() and read_double()
  functions (fixes #78)\n\nVersion 1.2.0 2020-07-12 by luispedro\n\t* Add load_fastq_directory
  to builtin functions\n\t* Better messages when using `lock1`\n\t* Enable specifying
  *all* module resources by URL with download on first\n\tuse\n\t* Fix CIGAR reinjection
  bug\n\t* Remove old motus/specI modules\n\t* No longer ship JS libraries (also do
  not expand them in-place)\n\nVersion 1.1.0 2020-01-25 by luispedro\n\t* Reintroduce
  zstd compression (after fixes upstream)\n\t* Fix CIGAR interpretation (#109) occurring
  when I is present\n\t* Call bwa mem so that it behaves in a deterministic way (independently
  of\n\tthe number of threads used)\n\t* Add `include_fragments` option to orf_find\n\t*
  Add early check for column headers in `count()`\n\t* Update to LTS-14.1 (fixes #116)\n\t*
  Add ``sense`` argument to `count()`\n\t* Add line numbers to FastQ parsing errors\n\t*
  Fix __extra_args argument in map()\n\t* Add `discard_singles` function\n\t* Add
  `interleaved` option to fastq()\n\t* `load_mocat_sample` now fails if `pair.2` exists
  but `pair.1` doesn't\n\nVersion 1.0.1 2019-07-05 by luispedro\n\t* Fix bug with
  external modules and multiple fastQ inputs\n\t* Fix bug with resaving input files
  where the original file was sometimes\n\tmoved (thus removing it).\n\nVersion 1.0.0
  2019-04-24 by luispedro\n\t* Fix multiple features usage (#63)\n\t* Update minimap2/megahit
  to latest versions\n\nVersion 0.11.1 2019-03-21 by luispedro\n\t* Fix reinjectSequence
  in select() call with blocks\n\t* Remove zstd compression\n\t* Fix SAM order switching
  in select() call with blocks (#105)\n\t* Compress SAM files after select() calls\n\nVersion
  0.11.0 2019-03-15 by luispedro\n\t* Switch to diagrams package for plotting\n\t*
  Update minimap2 version to 2.14\n\t* Module samtools (version 0.1) now includes
  samtools_view\n\t* Update to LTS-13 (GHC 8.6)\n\t* Fix bug with orf_find & prots_out
  argument\n\t* Call bwa/minimap2 with interleaved fastq files\n\t* Add --verbose
  flag to check-install mode\n\t* Avoid leaving open file descriptors after FastQ
  encoding detection\n\t* Fix bug in garbage collection\n\t* Compress intermediate
  SAM files (#22)\n\t* Tar extraction uses much less memory (#77)\n\t* Add early checks
  for input files in more situations (#33)\n\t* Support compression in collect() output
  (#42)\n\t* Fix CIGAR (#92) for select() blocks\n\t* Add smoothtrim function\n\t*
  Fix lock1()/collect() use with --subsample\n\t* Fix compression/decompression when
  calling external modules\n\nVersion 0.10.0 2018-11-12 by luispedro\n\t* Fix to lock1's
  return value when used with paths (#68 - reopen)\n\t* Support _F/_R suffixes for
  forward/reverse in load_mocat_sample\n\t* samtools_sort() now accepts by={name}
  to sort by read name\n\t* Fixed bug where header was printed even when STDOUT was
  used\n\t* Fixed bug where writing interleaved FastQ to STDOUT did not work as\n\texpected\n\t*
  Indices created by bwa and minimap2 are now versioned\n\t* arg1 in external modules
  is no longer always treated as a path\n\t* Added expand_searchpath to external modules
  API (closes #56)\n\t* Fixed bug where detection of Fastq encoding was not performed
  on the second pair\n\t* Fix saving fastq sets with --subsample (issue #85)\n\t*
  Add __extra_megahit_args to assemble() (issue #86)\n\t* Better error message when
  user mis-specifies the ngless version string\n\t(issue #84)\n\t* Support NO_COLOR
  environment variable (issue #83)\n\t* Garbage collection for temporary files (issue
  #79)\n\t* Rename --search-dir to --search-path for consistency with other API\n\t*
  Fix corner case with select() producing incorrect CIGAR strings (#92)\n\t* Always
  check output file writability (#91)\n\t* Make paired() accept encoding argument\n\nVersion
  0.9.1 2018-07-17 by luispedro\n\t* Add biorxiv citation\n\nVersion 0.9.0 2018-07-12
  by luispedro\n\t* Add allbest() method to mappedreads\n\t* Output FastQ quality
  graphs as PNGs\n\t* Added MouseGutCatalog module\n\t* Added DogGutGeneCatalog module\n\t*
  Added PigGeneCatalog module\n\t* Added reference genome for Sus scrofa (pig)\n\t*
  Update IGC module to 0.9\n\t* Continuously update mtime on all lock files\n\t* Warn
  when overwriting files\n\t* Version automatically downloaded reference URLs\n\nVersion
  0.8.1 2018-06-05 by luispedro\n\t* Update to LTS-11.12 (for faster conduit-algorithms
  used in collect())\n\t* Add fallback for character encoding on systems with bad
  locale support\n\t* Fixed lock1 when used with paths (#68)\n\t* Fixed expansion
  of searchdir with external modules (#56)\n\nVersion 0.8.0 2018-05-06 by luispedro\n\t*
  Add minimap2 support as alternative mapper\n\t* Faster collect()\n\t* Fix writing
  of multiple compressed files to uncompressed format\n\t* Add `n_to_zero_quality`
  method for short reads\n\t* Add </> operator for path manipulation\n\t* Fix bug
  in select (corner case where sequences would be missing from\n\toutput)\n\t* Add
  non-ATCG fraction field to FastQ statistics\n\t* Add reference argument to count()\n\t*
  GFF based counting now expands multi-value sub-features\n\t* Update to bwa 0.7.17\n\nVersion
  0.7.1 2018-03-17 by luispedro\n\t* Fix memory leak in count()\n\t* Fix when-true
  flag usage with external modules\n\nVersion 0.7.0 2018-03-07 by luispedro\n\t* Add
  'failed' files to parallel lock1()\n\t* Add `max_trim` argument to MappedReadSet.filter()\n\t*
  Support saving compressed SAM files\n\t* Much faster select() implementation with
  a block\n\t* Fix count's mode {intersection_strict} to no longer behave as {union}\n\t*
  Support for saving interleaved FastQ files\n\t* Lower memory usage\n\t* More conservative
  SAM merging in split mode\n\t* Compute #Basepairs in FastQ stats\n\t* Fix as_reads()
  for single-end reads\n\t* Add headers argument to samfile()\n\t* For more situations,
  avoid intermediate copies in count()\n\t* Much improved memory and speed performance
  of count()\n\t* Fix select() corner case\n\nVersion 0.6.1 2017-12-10 by luispedro\n\t*
  Add --check-install mode\n\t* Fix streaming short read QC (performance regression)\n\t*
  Better error message in readlines() when file opening fails\n\t* Compute statistics
  after select()\n\nVersion 0.6.0 2017-11-29 by luispedro\n\t* Add `orf_find` function
  (implemented through Prodigal)\n\t* Add qcstats() function\n\t* Output preprocessed
  FQ statistics (had been erroneously removed)\n\t* Fix --strict-threads command-line
  option spelling\n\t* Use multiple threads in SAM->BAM conversion\n\t* Change include_m1
  default in count() function to True\n\t* Add --index-path functionality to define
  where to write indices (issue #47)\n\t* Allow `citations` as key in external modules\n\t*
  Better citations information\n\t* Better error checking/script validation\n\t* Added
  reference alias for a more human readable name\n\t* Version embedded megahit binary\n\t*
  Updated builtin referenced to include latest releases of assemblies\n\t* Fixed inconsistency
  between reference identifiers and underlying files\n\nVersion 0.5.1 2017-11-02 by
  luispedro\n\t* Fix building step (static compilation)\n\nVersion 0.5.0 2017-11-01
  by luispedro\n\t* First release supporting all basic functionality.\n"
basic-deps:
  http-client: -any
  MissingH: '>=1.3'
  diagrams-lib: -any
  exceptions: -any
  bzlib-conduit: -any
  conduit-algorithms: '>=0.0.9.0'
  either: -any
  bytestring: -any
  inline-c: -any
  safeio: '>=0.0.2'
  hostname: -any
  unliftio: -any
  extra: '>=1.4'
  unix: -any
  edit-distance: '>=0.2'
  stm: -any
  filemanip: '>=0.3.6'
  base: '>=4.12 && <4.16'
  time: '>=1.5'
  regex: -any
  configurator: -any
  atomic-write: '>=0.2'
  text: '>=1.2'
  double-conversion: -any
  strict: -any
  unix-compat: -any
  filepath: '>=1.3'
  process: '>=1.2.3'
  network: -any
  async: -any
  parsec: '>=3.1'
  conduit: '>=1.3'
  data-default: -any
  inline-c-cpp: -any
  stm-conduit: '>=2.7'
  conduit-extra: '>=1.1.12'
  diagrams-svg: -any
  containers: -any
  tar-conduit: '>=0.3.2'
  ansi-terminal: -any
  unliftio-core: -any
  tar: '>=0.5'
  hashtables: -any
  zlib: -any
  mtl: '>=2.2'
  convertible: -any
  hashable: -any
  vector-algorithms: -any
  diagrams-core: -any
  stm-chans: -any
  file-embed: '>=0.0.8'
  int-interval-map: -any
  NGLess: -any
  transformers: -any
  optparse-applicative: -any
  errors: '>=2.1'
  deepseq: '>=1.3'
  bytestring-lexing: -any
  http-conduit: -any
  resourcet: '>=1.1'
  aeson: '>=0.9'
  template-haskell: -any
  primitive: '>=0.6'
  safe: -any
  yaml: -any
  vector: '>=0.11'
  directory: -any
all-versions:
- 1.4.0
author: Luis Pedro Coelho and others (see AUTHORS)
latest: 1.4.0
description-type: haddock
description: NGLess implements a domain-specific language for processing next generation
  data, particularly metagenomics.
license-name: MIT
