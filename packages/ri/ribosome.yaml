homepage: https://github.com/tek/ribosome#readme
changelog-type: ''
hash: 84d2c26a87903afd666a5147c20e2d6bb4902ce7157fa431bbfa4a2963a27a59
test-bench-deps: {}
maintainer: tek@tryp.io
synopsis: api extensions for nvim-hs
changelog: ''
basic-deps:
  exceptions: -any
  free: -any
  cereal: -any
  chiasma: -any
  either: -any
  bytestring: -any
  cereal-conduit: -any
  unliftio: -any
  hourglass: -any
  unix: -any
  split: -any
  stm: -any
  path: -any
  base: ==4.*
  time: -any
  text: -any
  composition: -any
  monad-loops: -any
  monad-control: -any
  filepath: -any
  process: -any
  lifted-base: -any
  conduit: -any
  data-default: -any
  stm-conduit: -any
  conduit-extra: -any
  th-abstraction: -any
  containers: -any
  cornea: -any
  ansi-terminal: -any
  lens: -any
  unliftio-core: -any
  pretty-terminal: -any
  utf8-string: -any
  relude: '>=0.7 && <1.2'
  hslogger: -any
  composition-extra: -any
  messagepack: -any
  typed-process: -any
  fuzzy: -any
  nvim-hs: -any
  mtl: -any
  lifted-async: -any
  transformers-base: -any
  stm-chans: -any
  prettyprinter: -any
  transformers: -any
  deepseq: -any
  resourcet: -any
  aeson: -any
  path-io: -any
  template-haskell: -any
  safe: -any
  prettyprinter-ansi-terminal: -any
  directory: -any
all-versions:
- 0.1.0.0
- 0.1.1.0
- 0.1.2.0
- 0.2.0.0
- 0.2.1.0
- 0.2.2.0
- 0.3.0.0
- 0.3.0.1
- 0.4.0.0
author: Torsten Schmits
latest: 0.4.0.0
description-type: markdown
description: |
  # About

  *ribosome* is an extension framework for [nvim-hs], a [Haskell] library that
  provides a [Neovim] plugin engine.

  *ribosome*'s structure is similar to that of vanilla [nvim-hs] plugins and is
  intended to provide a more comfortable API on top of it.

  # Basic Plugin

  *ribosome* comes with a companion plugin manager, [chromatin], but you can
  start plugins regularly with `jobstart()`.

  First, add `ribosome` to your `myplugin.cabal`'s dependencies.

  Your project should have an executable that looks like this:

  ```haskell
  import Neovim (neovim, plugins, defaultConfig)
  import MyPlugin.Plugin (plugin)

  main :: IO ()
  main =
    neovim defaultConfig {plugins = [plugin]}
  ```

  In `MyPlugin.Plugin`, you should write a plugin definition like this:

  ```haskell
  module MyPlugin.Plugin where

  import Data.Default.Class (Default(def))
  import Neovim (Neovim, NeovimPlugin, Plugin, wrapPlugin)
  import Neovim.Context.Internal (Config(customConfig), asks')
  import Ribosome.Api.Echo (echom)
  import Ribosome.Control.Monad.Ribo (MonadRibo, NvimE, Ribo)
  import Ribosome.Control.Ribosome (Ribosome, newRibosome)
  import Ribosome.Error.Report (reportError)
  import Ribosome.Internal.IO (retypeNeovim)
  import Ribosome.Plugin (RpcDef, autocmd, cmd, riboPlugin, rpcHandler)
  import System.Log.Logger (Priority(ERROR), setLevel, updateGlobalLogger)

  handleError :: Text -> Ribo () Text ()
  handleError err =
    echom err

  hello :: NvimE e m => MonadRibo m => m ()
  hello ::
    echom "hello"

  bufEnter :: NvimE e m => MonadRibo m => m ()
  bufEnter ::
    echom "BufEnter"

  rpcHandlers :: [[RpcDef (Ribo () Error)]]
  rpcHandlers =
    [
      $(rpcHandler (cmd []) 'hello),
      $(rpcHandler (autocmd "BufEnter") 'bufEnter)
    ]

  plugin' :: Ribosome () -> Plugin (Ribosome ())
  plugin' env =
    riboPlugin "myplugin" env rpcHandlers def handleError def

  initialize :: Neovim e (Ribosome Env)
  initialize = do
    liftIO $ updateGlobalLogger "Neovim.Plugin" (setLevel ERROR)
    ribo <- newRibosome "myplugin" def
    retypeNeovim (const ribo) (asks' customConfig)

  plugin :: Neovim e NeovimPlugin
  plugin =
    wrapPlugin . plugin' =<< initialize
  ```

  Follow the instructions for the bootstrapping vim config in the documentation
  for [chromatin].
  Now you can execute the command `:Hello`.

  For more inspiration, check out some example projects: [proteome], [myo],
  [uracil].

  [nvim-hs]: https://github.com/neovimhaskell/nvim-hs
  [Haskell]: https://www.haskell.org
  [proteome]: https://github.com/tek/proteome
  [myo]: https://github.com/tek/myo
  [uracil]: https://github.com/tek/uracil
  [chromatin]: https://github.com/tek/chromatin
  [nvim-hs]: https://github.com/neovimhaskell/nvim-hs
  [Neovim]: https://github.com/neovim/neovim
license-name: BSD-2-Clause-Patent
