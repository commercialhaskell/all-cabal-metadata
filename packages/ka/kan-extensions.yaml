homepage: http://github.com/ekmett/kan-extensions/
changelog-type: markdown
hash: 474e5ef5dfdd42ca2d638322a049060dbd3be9261db8cd3ecdac1d8a849c8ee9
test-bench-deps: {}
maintainer: Edward A. Kmett <ekmett@gmail.com>
synopsis: Kan extensions, Kan lifts, the Yoneda lemma, and (co)density (co)monads
changelog: |+
  5.2.2 [2021.02.17]
  ------------------
  * Add `hoistCoyoneda` to `Data.Functor.Contravariant.Coyoneda`.

  5.2.1 [2020.10.01]
  ------------------
  * Allow building with GHC 9.0.

  5.2 [2018.07.03]
  ----------------
  * Make `Codensity` levity polymorphic.
  * Add the `Data.Functor.Invariant.Day` module, which combines the covariant and
    contravariant versions of `Day`. As a result, `kan-extensions` now depends on
    the `invariant` package.
  * Add a `wrapCodensity` function.
  * More efficient `Eq1`, `Ord1`, and `Adjunction` instances for `Coyoneda`.
  * Add `INLINE` pragmas on more functions.
  * Allow building with `containers-0.6`.

  5.1 [2018.01.28]
  ----------------
  * Make `Density`, `Codensity`, `Kan` and `Lan` polykinded.
  * Add `Eq1`, `Ord1`, `Read1` and `Show1` instances for `Coyoneda` and `Yoneda`.
  * Change contexts of `Eq` and `Ord` instances of `Coyoneda` and `Yoneda`
    (and the `Show` instance for `Coyoneda`) to require lifted class instances,
    e.g. `Eq1 f, Eq a`.
  * Allow `free-5`.

  5.0.2
  -----
  * Added `hoistCoyoneda`

  5.0.1
  -----
  * Removed some redundant constraints

  5
  -----
  * Move `Data.Functor.Kan.Rift` to `Data.Functor.Day.Curried`

  4.2.3
  -----
  * Builds clean on GHC 7.10

  4.2.2
  -----
  * `semigroupoids` 5 support

  4.2.1
  ---
  * Add `liftRift` and `lowerRift`

  4.2
  ---
  * Remove pointed dependency

  4.1.1
  ---
  * Added `Applicative` instance for `Day`
  * Added `Typeable` instance for `Codensity`

  4.1.0.1
  ----
  * Added `tagged` dependency

  4.1
  ---
  * Moved co- and contra- variant `Day` convolution from `contravariant` to here. Day convolution is intimately connected to `Rift`.

  4.0.3
  -----
  * Added `liftCoT0M`, `liftCoT1M`, `diter` and `dctrlM` for using `CoT w m` to model a state machine with states in `w` and effects in `m`.

  4.0.2
  -----
  * Made fixes necessary to work around changes in `ImpredicativeTypes` for GHC 7.8.1rc2

  4.0.1
  -----
  * Bug fix so we can compile on GHC 7.4

  4.0
  ---
  * Removed `keys` dependency
  * Now compatible with `adjunctions` 4.0

  3.7
  ---
  * Moved all the `Yoneda` variants around again.
  * Improved haddocks

  3.6.2
  -----
  * Added `Data.Functor.Contravariant.Yoneda` to complete the set of Yoneda embeddings/reductions.

  3.6.1
  -----
  * Added several missing isomorphisms

  3.6
  ---
  * `instance Monad m => MonadSpec (Yoneda m)`

  3.5.1
  -----
  * Fixed a bug in the signature for `composedRepToCodensity`.

  3.5
  ---
  * More combinators for `Rift`/`Lift`.
  * Added combinators for working with representable functors rather than just adjoint functors.
  * Split `Data.Functor.KanExtension` into `Data.Functor.Kan.Ran` and `Data.Functor.Kan.Lan`
  * Split `Data.Functor.KanLift` into `Data.Functor.Kan.Rift` and `Data.Functor.Kan.Lift`
  * Moved from `Data.Functor.Yoneda.Contravariant` to `Data.Functor.Yoneda.Reduction` adopting terminology from Todd Trimble.
  * Added various missing isomorphisms.
  * Greatly improved the Haddocks for this package stating laws and derivations where we can (especially for 'Rift' and 'Ran').

  3.3
  ---
  * Rift is now `Applicative`. Added `rap`.

  3.2
  ---
  * Added right and left Kan lifts under `Data.Functor.KanLift`.
  * Decreased reliance on the `Composition` class where unnecessary in the API

  3.1.2
  -----
  * Marked modules `Trustworthy` as required for `SafeHaskell` in the presence of these extensions.

  3.1.1
  -----
  * Refactored build system
  * IRC build-bot notification
  * Removed upper bounds on dependencies on my other packages

  3.1
  ---
  * Moved `Control.Monad.Free.Church` over to the `free` package instead and removed it from `kan-extensions`

basic-deps:
  semigroupoids: '>=4 && <6'
  free: '>=4 && <6'
  base: '>=4.4 && <5'
  comonad: '>=4 && <6'
  adjunctions: '>=4.2 && <5'
  invariant: '>=0.1 && <1'
  distributive: '>=0.2.2 && <1'
  array: '>=0.3.0.2 && <0.6'
  tagged: '>=0.7.2 && <1'
  containers: '>=0.4 && <0.7'
  contravariant: '>=1 && <2'
  mtl: '>=2.0.1 && <2.3'
  transformers: '>=0.2 && <0.6'
  transformers-compat: '>=0.3 && <0.8'
  profunctors: '>=5 && <6'
all-versions:
- '0.1'
- 0.1.1
- 0.1.2
- '0.2'
- 0.2.1
- 0.2.2
- 0.5.0
- 0.5.1
- 1.8.0
- 1.9.0
- 2.0.0
- 2.0.0.1
- 2.0.0.2
- 2.0.0.3
- 2.0.1
- 2.0.2
- '2.1'
- 2.1.2
- '2.2'
- '2.3'
- '2.4'
- 2.4.0.1
- '2.5'
- '2.6'
- '2.7'
- '3.0'
- '3.1'
- 3.1.0.1
- 3.1.0.2
- 3.1.1
- 3.1.2
- '3.4'
- '3.5'
- 3.5.1
- '3.6'
- 3.6.2
- '3.7'
- '4.0'
- 4.0.1
- 4.0.2
- 4.0.3
- '4.1'
- 4.1.0.1
- 4.1.1
- '4.2'
- 4.2.1
- 4.2.2
- 4.2.3
- '5'
- 5.0.1
- 5.0.2
- '5.1'
- '5.2'
- 5.2.1
- 5.2.2
author: Edward A. Kmett
latest: 5.2.2
description-type: markdown
description: |
  kan-extensions
  ==============

  [![Hackage](https://img.shields.io/hackage/v/kan-extensions.svg)](https://hackage.haskell.org/package/kan-extensions) [![Build Status](https://github.com/ekmett/kan-extensions/workflows/Haskell-CI/badge.svg)](https://github.com/ekmett/kan-extensions/actions?query=workflow%3AHaskell-CI)

  This package provides tools for working with various Kan extensions and Kan lifts in Haskell.

  Among the interesting bits included are:

  * Right and left Kan extensions (`Ran` and `Lan`)
  * Right and left Kan lifts (`Rift` and `Lift`)
  * Multiple forms of the Yoneda lemma (`Yoneda`)
  * The `Codensity` monad, which can be used to improve the asymptotic complexity of code over free monads (`Codensity`, `Density`)
  * A "comonad to monad-transformer transformer" that is a special case of a right Kan lift. (`CoT`, `Co`)

  Contact Information
  -------------------

  Contributions and bug reports are welcome!

  Please feel free to contact me through github or on the #haskell IRC channel on irc.freenode.net.

  -Edward Kmett
license-name: BSD-3-Clause
