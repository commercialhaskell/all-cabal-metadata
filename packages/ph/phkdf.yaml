all-versions:
- 0.0.0.0
- 0.1.0.0
author: Leon P Smith
basic-deps:
  Stream: '>=0'
  base: <5
  bytestring: '>=0.11.1.0'
  network-byte-order: '>=0'
  sha256: '>=0'
  tuplehash-utils: '>=0.1'
  vector: '>=0'
changelog: |
  # Revision history for phkdf

  ## Version 0.1.0.0 (2025-01-20)

  *  This includes the Version 2 of PHKDF, which is mostly compatible with
     Version 1 except that the slow extract function has been removed and the
     end-of-message padding has been tweaked to save a byte when the domain tag
     is 20 bytes or longer. A simpler slow-extract function much closer to PBKDF2
     will eventually be factored out of g3p-hash version 2.

  *  Saving this byte requires bitstring SHA256 inputs, thus the binding has been
     moved from cryptohash-sha256 to the new sha256 package. This is a new FFI
     binding around the core cryptohash implementation that better and more
     robustly supports the needs of this library.

  *  The old code in Crypto.PHKDF has been moved to Crypto.PHKDF.V1.Cookbook

  ## Version 0.0.0.0 (2024-03-21)

  *  The definition of Crypto.PHKDF.Primitives is quite stable.

  *  Note that Crypto.PHKDF is intended to be more of a cookbook demonstrating
     how to use and understand PHKDF than anything intended to be deployed.
     The definition and results, and possibly the interface of phkdfSimple and
     phkdfHardened will be completely revamped for Version 0.1
changelog-type: markdown
description: |-
  Inspired by PBKDF2, HKDF, and TupleHash. Uses HMAC-SHA256 as a primitive.
  This is primarily intended to be a highly reliable reference implementation
  for the underlying PHKDF primitives. It also aspires to be production
  ready-ish. The main limitation is that it implemented without mutation,
  meaning that potentially sensitive secrets persist in memory longer than
  necessary.
description-type: haddock
hash: e10701c315af5b5001fee96cc354fb820d0ca766fc84de7e27b0090ad550f53e
homepage: ''
latest: 0.1.0.0
license-name: Apache-2.0
maintainer: Auth Global
synopsis: Toolkit for self-documenting password hash and key derivation functions.
test-bench-deps:
  Stream: '>=0'
  aeson: '>=2'
  base: <5
  base16: '>=1'
  bytestring: '>=0'
  containers: '>=0'
  phkdf: '>=0'
  quickcheck-instances: '>=0'
  tasty: '>=0'
  tasty-hunit: '>=0'
  tasty-quickcheck: '>=0'
  text: '>=0'
  vector: '>=0'
