homepage: https://hackage.haskell.org/package/phonetic-languages-simplified-examples-array
changelog-type: markdown
hash: 06a4885f6ea359fa5320986dfc98908d269e49303e68cce5fc92e825dc9d32f8
test-bench-deps: {}
maintainer: olexandr543@yahoo.com
synopsis: Helps to create Ukrainian texts with the given phonetic properties.
changelog: "# Revision history for phonetic-languages-simplified-examples-array\n\n##
  0.1.0.0 -- 2021-01-02\n\n* First version. Released on an unsuspecting world.\n\n##
  0.1.1.0 -- 2021-01-02\n\n* First version revised A. Partially removed the unneeded
  dependency of mmsyn2.\n\n## 0.1.2.0 -- 2021-01-02\n\n* First version revised A.
  Removed the unneeded dependency of mmsyn2 (and all the vector-related functionality).\nSome
  cabal file improvements.\n\n## 0.2.0.0 -- 2021-01-04\n\n* Second version. Added
  a comparative mode to the possibilities of the rewritePoemG3 and the Phonetic.Languages.Lines\n
  module. Some documentation improvements.\n\n## 0.2.1.0 -- 2021-01-06\n\n* Second
  version revised A. Added examples (in English) to the README.md file.\n\n## 0.2.2.0
  -- 2021-01-20\n\n* Second version revised B. Removed the unneeded hidden dependencies
  of the vector related packages and functionality (that was \nannounced in the 0.1.2.0
  version). Fully switched to the GHC.Arr arrays where needed.\n\n## 0.3.0.0 -- 2021-01-28\n\n*
  Third version. The package has the multiple variations mode for lineVariantsG3 executable
  that allows to use modifications in the text, e. g. synonyms, paraphrases etc. Added
  more variants of the properties based on the new dataset for\nr-glpk-phonetic-languages-ukrainian-durations
  package. Added a new module Phonetic.Languages.Parsing for the new functionality.
  Removed unneeded print-info dependency.\n\n## 0.4.0.0 -- 2021-02-01\n\n* Fourth
  version. Added new line of rhythmicity evaluation functions (\"z\"-line). The behaviour
  of the previous functions also\nchanged, so it may be needed (in case where the
  results have some principal meaning, e. g. in scientific research,\nnot the text
  itself) to recalculate the results using these functions. Added the possibility
  to get the Ukrainian\ninformational messages during the work of the lineVariantsG3
  executable (using the \"+U\" command line option not inside\nthe groups of options).
  Some documentation improvements.\n\n## 0.4.0.1 -- 2021-04-17\n\n* Fourth version
  revised A. Fixed some issues with README.md file. Updated the dependency boundaries
  for mmsyn2-array package.\n\n## 0.4.1.0 -- 2021-04-19\n\n* Fourth version revised
  B. Updated the Ukrainian documentation fixing some text issues. See README.md.\n\n##
  0.4.2.0 -- 2021-05-31\n\n* Fourth version revised C. Added an English brief instructions
  to the package.\n\n## 0.5.0.0 -- 2021-07-20\n\n* Fifth version. Added two new lines
  (\"w\" and \"x\" lines) as a new properties evaluation strategies. Updated the dependencies\nboundaries
  accordingly.\n\n## 0.5.0.1 -- 2021-07-21\n\n* Fifth version revised A. Changed the
  README.md file to the just README to fix the display of the command\nline examples
  in it.\n\n## 0.6.0.0 -- 2021-07-28\n\n* Sixth version. Changed the command line
  arguments modifiers notation to the small letters,\nremoved the double ++ sign (changed
  to just single +) to simplify the command line arguments usage.\nAlso changed the
  way to sign the writing to file for the lineVariantsG3 executable. Added new lines
  of \nproperties for the (hypothetic) polyrhythmicity handling. Among them \"c\",
  \"s\", \"t\", \"u\", \"v\" lines are.\nChanged the documentation appropriately.
  Changed the dependencies boundaries. Added the possibility to\n'grow lines' for
  the rewritePoemG3 and propertiesTextG3 executables.\n\n## 0.6.1.0 -- 2021-07-30\n\nSixth
  version revised A. Fixed issues with the fixed point of 1.0 (arising from the issue
  in the dependency package\nphonetic-languages-rhythmicity).\n"
basic-deps:
  heaps: '>=0.3.6.1 && <1'
  phonetic-languages-rhythmicity: '>=0.5.1 && <1'
  phonetic-languages-permutations-array: '>=0.1 && <1'
  base: '>=4.8 && <4.15'
  phonetic-languages-ukrainian-array: '>=0.2.1 && <1'
  subG: '>=0.4 && <1'
  phonetic-languages-plus: '>=0.2 && <1'
  phonetic-languages-simplified-examples-common: '>=0.1.1 && <1'
  phonetic-languages-constraints-array: '>=0.1 && <1'
  phonetic-languages-filters-array: '>=0.1 && <1'
  phonetic-languages-simplified-properties-array: '>=0.4.1 && <1'
  phonetic-languages-simplified-base: '>=0.1 && <1'
  mmsyn2-array: '>=0.1.3 && <1'
  parallel: '>=3.2.0.6 && <4'
  ukrainian-phonetics-basic-array: '>=0.1.2 && <1'
  uniqueness-periods-vector-stats: '>=0.2.1 && <1'
all-versions:
- 0.6.1.0
author: OleksandrZhabenko
latest: 0.6.1.0
description-type: text
description: "The short (possibly) instruction how to use the programs\nof the package
  phonetic-languages-simplified-examples-array\nin Ukrainian is here:\n\nhttps://web.archive.org/web/20210728223122/https://oleksandrzhabenko.github.io/uk/Instruction_phonetic-languages-simplified-examples-array-0.6.0.0.pdf\n\nThe
  instruction in English is here:\n\nhttps://web.archive.org/web/20210728223308/https://oleksandrzhabenko.github.io/uk/Eng-Ukrainian_as_a_Phonetic_Language_Instructions-0.6.0.0.pdf\n\nSince
  the version 0.2.0.0 there exists also comparative\nmode for the rewritePoemG3 executable.
  It allows to\ncreate from two files with the text variants the new one.\nFor more
  information in Ukrainian, please, refer to the\ninstruction above to the part of
  the rewritePoemG3\nexecutable.\n\nSince the version 0.4.0.0 added new line of rhythmicity\nevaluation
  functions (\"z\"-line). The behaviour of the\nprevious functions also changed, so
  it may be needed\n(in case where the results have some principal meaning,\ne. g.
  in scientific research, not the text itself)\nto recalculate the results using these
  functions.\nAdded the possibility to get the Ukrainian informational\nmessages during
  the work of the lineVariantsG3\nexecutable (using the \"+u\" command line option
  not inside\nthe groups of options).\n\nSince the version 0.5.0.0 added two new lines
  with more\ncomplex behaviours (\"w\" and \"x\" lines). For more\ninformation, please,
  refer to the section 'WX argument'\nin the instructions above.\n\nSince the version
  0.6.0.0 changed the command line\narguments modifiers notation to the small letters,\nremoved
  the double ++ sign (changed to just single\n+) to simplify the command line arguments
  usage.\nAlso changed the way to sign the writing to file for\nthe lineVariantsG3
  executable. Added new lines of\nproperties for the (hypothetic) polyrhythmicity\nhandling.
  Among them \"c\", \"s\", \"t\", \"u\", \"v\" lines\nare. Added the possibility to
  'grow lines' for the\nrewritePoemG3 and propertiesTextG3 executables.\n\n* Examples
  of usage\n\n1) lineVariantsG3:\n\nlineVariantsG3 <first argument> [<WX argument>
  <whether to print the values of the property(ies)> <whether the last word must remain
  on its place>] <numeric arguments> <property type> <Ukrainian text>\n\nor:\n\nlineVariantsG3
  <first argument> [<WX argument> <whether print the values of the property(ies)>
  <whether the last word must remain on its place>] <numeric arguments> <property
  type> <Ukrainian text> <somewhere among the arguments as a single group: constraints>\n\nMore
  partucular example of the abovementioned one:\n\nlineVariantsG3 10.0_1.2 zz2 садок
  вишневий коло хати хрущі над вишнями гудуть (the Ukrainian text here and further
  is\nfrom the Taras Shevchenko poem)\n\nlineVariantsG3 10.0_1.2 5 5 1 2 04z садок
  вишневий коло хати хрущі над вишнями гудуть \n\nlineVariantsG3 +m 02y 3 03z 3 y0
  10 -m +bl <Ukrainian text>\n\nlineVariantsG3 +i +bl 4.3_ +m 02y 3 0y 3 y0 20 y2
  40 04z 3 -m садок вишневий коло хати хрущі над вишнями гудуть\n\nlineVariantsG3
  +f hello.txt +bl +m 02y 3 0y 3 04y 5 y0 40 z4 50 -m садок вишневий коло хати хрущі
  над вишнями гудуть\n\nTo get the Ukrainian informational messages during the\nwork
  of the executable (instead of the default English\nones), please, use the \"+U\"
  command line option anywhere\nnot inside the groups of the options.\n\nYou can also
  use multiple variations mode to look at the\nsynonyms, paraphrases etc.\n\nFor this,
  use instead of just the text as the last\narguments the following special construction:\n\n{
  <variant1 of the Ukrainian text> / <variant2 of the Ukrainian text> / ... / <variantN
  of the Ukrainian text> }\n\nwith at least two variants inside the curly brackets.\nThey
  will be processed in chain with the one variant of\neach and the possibility to
  choose at the end between\nthese different ones, which finally results in a single\nline.\n\nPlease,
  remember that the program provides processing for\nevery combination of the variations
  so if you specify too\nmany of them (e. g. 3 variants of one word and 4 variants\nof
  the another one will lead to 3*4 = 12 variations\npossible), the processing while
  getting the final result\ncan become longer than expected.\n\n2) propertiesTextG3:\n\npropertiesTextG3
  <first argument> [<WX argument> <whether to grow lines>] <file with Ukrainian text>
  <control of the quantity of the intervals> <control of printing the line of the
  text, too> <control of the sectioning into the lines> <property type>\n\npropertiesTextG3
  <first argument> [<WX argument> <whether to grow lines>] <file with Ukrainian text>
  <control of the quantity of the intervals> <control of printing the line of the
  text, too> <control of the sectioning into the lines> <property type> | distributionTextG
  <the same argument of the quantity of the lines> <whether to output also by-line
  statistics>\n\nPowerShell -Command \"propertiesTextG3 <first argument> [<WX argument>
  <whether to grow lines>] <file with Ukrainian text> <control of the quantity of
  the intervals> <control of printing the line of the text, too> <control of the sectioning
  into the lines> <property type> | distributionTextG  <the same argument of the quantity
  of the lines> <whether to output also by-line statistics>”\n\nNote: Below the +RTS
  -N --RTS corresponds to the\narchitectures where the parallelism is possible so
  that\n-N is one of the possible options for RTS. If the\nfollowing with RTS arguments
  does not work, then remove\nthe +RTS -N --RTS block from the command line. One of
  the\nexamples where RTS does not support parallelism of this\nkind is armhf (e.
  g. Linux on Raspberry PI in 32-bit mode).\n\npropertiesTextG3 sadok0.txt +RTS -N
  --RTS s 1 0 +m y0 0y 02z 03y z2 y3 yyy -m\n\npropertiesTextG3 sadok0.txt +RTS -N
  --RTS s 1 0 03z +b | distributionTextG s 1 +W\n\npropertiesTextG3 sadok0.txt +RTS
  -N --RTS s 1 0 03z +g73 +b | distributionTextG s 1 +W\n\npropertiesTextG3 <filepath
  to the file with the Ukrainian text for analysis> @n\n\n3) rewritePoemG3:\n\nrewritePoemG3
  <first argument> [<whether to grow lines>] <file with the Ukrainian text> <property
  type> <numeric arguments>\n\nrewritePoemG3 +c <file1> <file2> <file3> (all the files
  must be different and simultaneously the first two ones must\nexist already with
  some text, otherwise, the program gives no meaningful result).\n\n"
license-name: MIT
