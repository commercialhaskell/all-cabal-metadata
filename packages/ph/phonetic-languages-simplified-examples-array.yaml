homepage: https://hackage.haskell.org/package/phonetic-languages-simplified-examples-array
changelog-type: markdown
hash: d01eb98b7db9ef2d97b47fe008bbb68736a42ab73fca06e70c0c3a96d94c865c
test-bench-deps: {}
maintainer: olexandr543@yahoo.com
synopsis: Helps to create Ukrainian texts with the given phonetic properties.
changelog: "# Revision history for phonetic-languages-simplified-examples-array\n\n##
  0.1.0.0 -- 2021-01-02\n\n* First version. Released on an unsuspecting world.\n\n##
  0.1.1.0 -- 2021-01-02\n\n* First version revised A. Partially removed the unneeded
  dependency of mmsyn2.\n\n## 0.1.2.0 -- 2021-01-02\n\n* First version revised A.
  Removed the unneeded dependency of mmsyn2 (and all the vector-related functionality).\nSome
  cabal file improvements.\n\n## 0.2.0.0 -- 2021-01-04\n\n* Second version. Added
  a comparative mode to the possibilities of the rewritePoemG3 and the Phonetic.Languages.Lines\n
  module. Some documentation improvements.\n\n## 0.2.1.0 -- 2021-01-06\n\n* Second
  version revised A. Added examples (in English) to the README.md file.\n\n## 0.2.2.0
  -- 2021-01-20\n\n* Second version revised B. Removed the unneeded hidden dependencies
  of the vector related packages and functionality (that was\nannounced in the 0.1.2.0
  version). Fully switched to the GHC.Arr arrays where needed.\n\n## 0.3.0.0 -- 2021-01-28\n\n*
  Third version. The package has the multiple variations mode for lineVariantsG3 executable
  that allows to use modifications in the text, e. g. synonyms, paraphrases etc. Added
  more variants of the properties based on the new dataset for\nr-glpk-phonetic-languages-ukrainian-durations
  package. Added a new module Phonetic.Languages.Parsing for the new functionality.
  Removed unneeded print-info dependency.\n\n## 0.4.0.0 -- 2021-02-01\n\n* Fourth
  version. Added new line of rhythmicity evaluation functions (\"z\"-line). The behaviour
  of the previous functions also\nchanged, so it may be needed (in case where the
  results have some principal meaning, e. g. in scientific research,\nnot the text
  itself) to recalculate the results using these functions. Added the possibility
  to get the Ukrainian\ninformational messages during the work of the lineVariantsG3
  executable (using the \"+U\" command line option not inside\nthe groups of options).
  Some documentation improvements.\n\n## 0.4.0.1 -- 2021-04-17\n\n* Fourth version
  revised A. Fixed some issues with README.md file. Updated the dependency boundaries
  for mmsyn2-array package.\n\n## 0.4.1.0 -- 2021-04-19\n\n* Fourth version revised
  B. Updated the Ukrainian documentation fixing some text issues. See README.md.\n\n##
  0.4.2.0 -- 2021-05-31\n\n* Fourth version revised C. Added an English brief instructions
  to the package.\n\n## 0.5.0.0 -- 2021-07-20\n\n* Fifth version. Added two new lines
  (\"w\" and \"x\" lines) as a new properties evaluation strategies. Updated the dependencies\nboundaries
  accordingly.\n\n## 0.5.0.1 -- 2021-07-21\n\n* Fifth version revised A. Changed the
  README.md file to the just README to fix the display of the command\nline examples
  in it.\n\n## 0.6.0.0 -- 2021-07-28\n\n* Sixth version. Changed the command line
  arguments modifiers notation to the small letters,\nremoved the double ++ sign (changed
  to just single +) to simplify the command line arguments usage.\nAlso changed the
  way to sign the writing to file for the lineVariantsG3 executable. Added new lines
  of\nproperties for the (hypothetic) polyrhythmicity handling. Among them \"c\",
  \"s\", \"t\", \"u\", \"v\" lines are.\nChanged the documentation appropriately.
  Changed the dependencies boundaries. Added the possibility to\n'grow lines' for
  the rewritePoemG3 and propertiesTextG3 executables.\n\n## 0.6.1.0 -- 2021-07-30\n\nSixth
  version revised A. Fixed issues with the fixed point of 1.0 (arising from the issue
  in the dependency package\nphonetic-languages-rhythmicity).\n\n\n## 0.6.2.0 -- 2021-07-31\n\n*
  Sixth version revised B. Changed the dependency boundaries so that the issues are
  fixed with '0' and not '0' functions.\nSome code improvements (reduced duplication).\n\n##
  0.7.0.0 -- 2021-08-09\n\n* Seventh version. Changed the dependency boundaries so
  that now \"c\", \"s\", \"t\", \"u\", and \"v\" series of properties\ncan be negative
  by sign. This does not change the logics of the working programs and functions.
  Some documentation\nimprovements.\n\n## 0.8.0.0 -- 2021-08-14\n\n* Eigth version.
  Changed the dependency boundaries and added new weighted properties and fixed some
  issues with\nthe previous ones so that they use more complete information. Added
  the handler for the case of the empty line for\nthe lineVariantsG3 executable and
  related functionality. Some documentation improvements.\n\n## 0.8.1.0 -- 2021-08-15\n\n*
  Eigth version revised A. Fixed issue with the wrong order and, therefore, mapping
  for different choices and\nthe corresponding properties in the module Phonetic.Languages.Simplified.Array.Ukrainian.FuncRep2RelatedG2.\n\n##
  0.9.0.0 -- 2021-08-16\n\n* Ninth version. Added new properties that try to increase
  the importance of the ending of the line and decrease\nthe importance of the beginning
  of the line. Added new dependency of string-interpreter. Added the possibility\nto
  run lineVariantsG3 and the corresponding library functions in the recursive interactive
  mode. It is not\ncompatible with the contstraints so should be used not simultaneously
  with them (because they change their meaning).\nSome documentation improvements.\n\n##
  0.10.0.0 -- 2021-08-17\n\n* The tenth version. Added new linear weighted properties.
  Fixed some issues with wrong mapping. Some documentation\nimprovements.\n\n## 0.10.1.0
  -- 2021-08-24\n\n* The tenth version revised. Fixed issues with the custom user
  defined polyrhythmicity patterns. Changed the\ndocumentation instructions in editor.
  Updated the dependency boundaries accordingly.\n\n## 0.11.0.0 -- 2021-09-04\n\n*
  The eleventh version. Added new mode of multiple sources processment (+t_ ... -t).
  Added the possibility to\ncount in the recursive mode not just from the beginning
  of the word concatenation but also from the end using\nthe commonly used programming
  pattern of the negative integer indexing. Updated the dependencies so that now\nit
  can use multiple improvements of the dependencies. Some documentation improvements.\n\n##
  0.11.0.1 -- 2021-09-06\n\n* The eleventh version revised A. Fixed issue with documentation
  (README) file.\n\n## 0.11.1.0 -- 2021-09-08\n\n* The eleventh version revised B.
  Fixed issue with the phonetic-languages-plus dependency being not built. Updated\nthe
  dependency boundaries.\n\n## 0.11.2.0 -- 2021-09-09\n\n* The eleventh version revised
  C. Fixed issue with the phonetic-languages-ukrainian-array dependency being not\nbuilt.
  Updated the dependency boundaries. Updated the README file with the hyperlinks to
  the updated documentation\nrelated to the usage of the package.\n\n## 0.11.3.0 --
  2021-09-09\n\n* The eleventh version revised D. Updated the README file with the
  hyperlinks to the updated documentation\nrelated to the usage of the package.\n\n##
  0.12.0.0 -- 2021-09-14\n\n* The twelth version. Added multiple properties mode to
  the rewritePoemG3 program and extended the comparative mode\nfor it up to 7 different
  input source files. Some documentation improvements.\n\n## 0.12.1.0 -- 2021-09-15\n\n*
  The twelth version revised A. Fixed issues in the documentation for the installation
  and upgrading processes.\n\n## 0.13.0.0 -- 2021-10-14\n\n* The thirteenth version.
  Added the possibility to provide the user-defined (read from the file with Haskell-like\nsyntaxis)
  functions to define the syllable durations. Added also the possibility to use just
  pairwise permutations\ninstead of the full universal set of them. Updated the dependency
  boundaries and the documentation\nappropriately. Fixed the issue with not properly
  documented (re-)installation process for the package(s).\n\n## 0.13.1.0 -- 2021-10-23\n\n*
  The thirteenth version revised A. Imlemented pairwise permutations mode more deeply.
  Some documentation improvements.\nUpdated the dependencies boundaries.\n\n## 0.14.0.0
  -- 2021-10-31\n\n* The fourteenth version. Fixed the not very sufficient release
  candidate that used hashing functionality. If you have not\nupgraded to the hashing
  functionality during the 2021-10-30--2021-10-31 you do not need to upgrade either.\n\n##
  0.14.1.0 -- 2021-11-01\n\n* The fourteenth version revised A. Fixed issues with
  doubling the input command line arguments to some extent. \n"
basic-deps:
  heaps: '>=0.3.6.1 && <1'
  phonetic-languages-rhythmicity: '>=0.9.1 && <1'
  phonetic-languages-permutations-array: '>=0.2 && <1'
  base: '>=4.8 && <4.16'
  string-interpreter: '>=0.5.4.1 && <1'
  phonetic-languages-ukrainian-array: '>=0.8 && <1'
  subG: '>=0.4 && <1'
  phonetic-languages-plus: '>=0.5.1 && <1'
  phonetic-languages-simplified-examples-common: '>=0.4 && <1'
  phonetic-languages-constraints-array: '>=0.1 && <1'
  phonetic-languages-filters-array: '>=0.3 && <1'
  phonetic-languages-simplified-properties-array: '>=0.11 && <1'
  phonetic-languages-simplified-base: '>=0.3 && <1'
  mmsyn2-array: '>=0.3 && <1'
  parallel: '>=3.2.0.6 && <4'
  ukrainian-phonetics-basic-array: '>=0.3 && <1'
  uniqueness-periods-vector-stats: '>=0.2.1 && <1'
all-versions:
- 0.14.1.0
author: OleksandrZhabenko
latest: 0.14.1.0
description-type: text
description: |
  The short (possibly) instruction how to use the programs
  of the package phonetic-languages-simplified-examples-array
  in Ukrainian is here:

  https://oleksandrzhabenko.github.io/uk/InstructionUkr.13.1.pdf

  or here:

  https://web.archive.org/web/20211023171852/https://oleksandrzhabenko.github.io/uk/InstructionUkr.13.1.pdf

  The instruction in English is here:

  https://oleksandrzhabenko.github.io/uk/InstructionEng.13.1.pdf

  or here:

  http://web.archive.org/web/20211023172024/https://oleksandrzhabenko.github.io/uk/InstructionEng.13.1.pdf

  Since the version 0.2.0.0 there exists also comparative
  mode for the rewritePoemG3 executable. It allows to
  create from two files with the text variants the new one.
  For more information in Ukrainian, please, refer to the
  instruction above to the part of the rewritePoemG3
  executable.

  Since the version 0.4.0.0 added new line of rhythmicity
  evaluation functions ("z"-line). The behaviour of the
  previous functions also changed, so it may be needed
  (in case where the results have some principal meaning,
  e. g. in scientific research, not the text itself)
  to recalculate the results using these functions.
  Added the possibility to get the Ukrainian informational
  messages during the work of the lineVariantsG3
  executable (using the "+u" command line option not inside
  the groups of options).

  Since the version 0.5.0.0 added two new lines with more
  complex behaviours ("w" and "x" lines). For more
  information, please, refer to the section 'WX argument'
  in the instructions above.

  Since the version 0.6.0.0 changed the command line
  arguments modifiers notation to the small letters,
  removed the double ++ sign (changed to just single
  +) to simplify the command line arguments usage.
  Also changed the way to sign the writing to file for
  the lineVariantsG3 executable. Added new lines of
  properties for the (hypothetic) polyrhythmicity
  handling. Among them "c", "s", "t", "u", "v" lines
  are. Added the possibility to 'grow lines' for the
  rewritePoemG3 and propertiesTextG3 executables.

  Since the version 0.8.0.0 added new weighted properties.

  Since the version 0.13.0.0 added the pairwise permutations
  mode (with +p command line argument) where just pairwise
  permutations are used and the length of the line can be
  up to 10 words or their concatenations.
  Besides added the possibility  to specify your own durations
  using the +d <path to the file with ordered durations>
  command line arguments. They are used with H... properties,
  e. g. Hw04, Hw02, Hx36 etc.

  * Examples of usage

  1) lineVariantsG3:

  lineVariantsG3 <first argument> [<WX argument> <whether to print the values of the property(ies)> <whether the last word must remain on its place>] <numeric arguments> <property type> <Ukrainian text>

  or:

  lineVariantsG3 <first argument> [<WX argument> <whether print the values of the property(ies)> <whether the last word must remain on its place>] <numeric arguments> <property type> <Ukrainian text> <somewhere among the arguments as a single group: constraints>

  More partucular example of the abovementioned one:

  lineVariantsG3 10.0_1.2 zz2 садок вишневий коло хати хрущі над вишнями гудуть (the Ukrainian text here and further is
  from the Taras Shevchenko poem)

  lineVariantsG3 10.0_1.2 5 5 1 2 04z садок вишневий коло хати хрущі над вишнями гудуть

  lineVariantsG3 +m 02y 3 03z 3 y0 10 -m +bl <Ukrainian text>

  lineVariantsG3 +i +bl 4.3_ +m 02y 3 0y 3 y0 20 y2 40 04z 3 -m садок вишневий коло хати хрущі над вишнями гудуть

  lineVariantsG3 +f hello.txt +bl +m 02y 3 0y 3 04y 5 y0 40 z4 50 -m садок вишневий коло хати хрущі над вишнями гудуть

  To get the Ukrainian informational messages during the
  work of the executable (instead of the default English
  ones), please, use the "+U" command line option anywhere
  not inside the groups of the options.

  You can also use multiple variations mode to look at the
  synonyms, paraphrases etc.

  For this, use instead of just the text as the last
  arguments the following special construction:

  { <variant1 of the Ukrainian text> / <variant2 of the Ukrainian text> / ... / <variantN of the Ukrainian text> }

  with at least two variants inside the curly brackets.
  They will be processed in chain with the one variant of
  each and the possibility to choose at the end between
  these different ones, which finally results in a single
  line.

  Please, remember that the program provides processing for
  every combination of the variations so if you specify too
  many of them (e. g. 3 variants of one word and 4 variants
  of the another one will lead to 3*4 = 12 variations
  possible), the processing while getting the final result
  can become longer than expected.

  Recursive mode:

  lineVariantsG3 +r

  is incompatible with the constraints (+a ... -a).

  Since the 0.11.0.0 version there is also the most complex mode of multiple sources processment or
  recursive interactive cycle mode. For this use *t_ ... ^t command line arguments group with the
  _ being one of the following: 20, 21, 30, 31, 40, 41, 50, 51, 60, 61, 70, 71.

  For example:

  lineVariantsG3 +r 3 w04 *t71 "sadok.txt" "other_poem.txt" "just_text.txt" ^t

  2) propertiesTextG3:

  propertiesTextG3 <first argument> [<WX argument> <whether to grow lines>] <file with Ukrainian text> <control of the quantity of the intervals> <control of printing the line of the text, too> <control of the sectioning into the lines> <property type>

  propertiesTextG3 <first argument> [<WX argument> <whether to grow lines>] <file with Ukrainian text> <control of the quantity of the intervals> <control of printing the line of the text, too> <control of the sectioning into the lines> <property type> | distributionTextG <the same argument of the quantity of the lines> <whether to output also by-line statistics>

  PowerShell -Command "propertiesTextG3 <first argument> [<WX argument> <whether to grow lines>] <file with Ukrainian text> <control of the quantity of the intervals> <control of printing the line of the text, too> <control of the sectioning into the lines> <property type> | distributionTextG  <the same argument of the quantity of the lines> <whether to output also by-line statistics>”

  Note: Below the +RTS -N --RTS corresponds to the
  architectures where the parallelism is possible so that
  -N is one of the possible options for RTS. If the
  following with RTS arguments does not work, then remove
  the +RTS -N --RTS block from the command line. One of the
  examples where RTS does not support parallelism of this
  kind is armhf (e. g. Linux on Raspberry PI in 32-bit mode).

  propertiesTextG3 sadok0.txt +RTS -N --RTS s 1 0 +m y0 0y 02z 03y z2 y3 yyy -m

  propertiesTextG3 sadok0.txt +RTS -N --RTS s 1 0 03z +b | distributionTextG s 1 +W

  propertiesTextG3 sadok0.txt +RTS -N --RTS s 1 0 03z +g73 +b | distributionTextG s 1 +W

  propertiesTextG3 <filepath to the file with the Ukrainian text for analysis> @n

  3) rewritePoemG3:

  rewritePoemG3 <first argument > [<whether to grow lines>] <Ukrainian text file> \
    <property type> <numerical arguments>

  rewritePoemG3 <first argument > [<whether to grow lines>] <Ukrainian text file> \
    +m <properties types> -m <numerical arguments>

  rewritePoemG3 +c <files to read text variants from> <final file>

  Since the 0.9.0.0 version there is a possibility to run
  lineVariantsG3 in the recursive mode. It is not
  compatible with the contstraints so should be used not
  simultaneously with them (because they change their
  meaning).

  Since the 0.13.0.0 version there is the possibility also to provide your
  own functions for the syllable durations. They are read from the file with
  special Haskell-like syntaxis. For more information, please, refer to the
  instructions above.
license-name: MIT
