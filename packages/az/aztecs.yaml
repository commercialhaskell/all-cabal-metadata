all-versions:
- 0.1.0.0
- 0.1.0.1
- 0.2.0.0
- 0.3.0.0
- 0.4.0.0
- 0.4.0.1
- 0.5.0.0
- 0.5.0.1
author: Matt Hunzinger
basic-deps:
  base: '>=4.6 && <5'
  containers: '>=0.6'
  mtl: '>=2'
  parallel-io: '>=0.3.5'
changelog: ''
changelog-type: ''
description: |-
  The Entity-Component-System (ECS) pattern is commonly used in video game develop to represent world objects.

  ECS follows the principal of composition over inheritence. Each type of
  object (e.g. sword, monster, etc), in the game has a unique EntityId. Each
  entity has various Components associated with it (material, weight, damage, etc).
  Systems act on entities which have the required Components.
description-type: haddock
hash: 56ea19873e98485f785302dbae8344c75af4c104356ef6e831b5e317074cc4b0
homepage: https://github.com/matthunz/aztecs
latest: 0.5.0.1
license-name: BSD-3-Clause
maintainer: matt@hunzinger.me
synopsis: A type-safe and friendly Entity-Component-System (ECS) for Haskell
test-bench-deps:
  QuickCheck: '>=2'
  aztecs: '>=0'
  base: '>=4.6 && <5'
  criterion: '>=1'
  hspec: '>=2'
