all-versions:
- 0.1.0
- 0.1.1
- 0.1.3
- 0.1.4
- 0.1.5
- 0.1.6
- 0.2.0
- 0.2.1
- 0.2.2
- 0.3.0
- 0.3.1
author: Uwe Hollerbach <uh@alumni.caltech.edu>
basic-deps:
  base: '>=4 && <5'
  haskell98: '>=0'
  old-time: '>=0'
  parsec: '>=0'
  process: '>=0'
  utf8-string: '>=0'
changelog: ''
changelog-type: ''
description: "$Id: README,v 1.8 2009/12/06 18:54:10 uwe Exp $\n\nUmm is an extremely
  minimal command-line program to read a plain-text\nledger file and report balance
  and other information. Although\nminimal, it aims to be able to handle multiple
  accounts, currencies,\ncommodities, and securities. It doesn't abolutely force you
  to use\ndouble-entry bookkeeping, although it tries to make it easy to do so.\n\nUmm
  has only one dependency outside of a haskell compiler and standard\nlibraries: in
  order to support Unicode, it requires the utf8-string\nlibrary. I don't know of
  anything in either umm itself or the\nutf8-string library that's specific to ghc,
  but I have so far only\nbuilt it with ghc. I've built it with ghc 6.8.3 on an iMac
  G3 running\nOSX 10.3.9, ghc 6.10.{1,3,4} on an x86 running Ubuntu, and ghc 6.10.3\non
  an x86 running Windows XP. You should be able to build umm simply\nby running\n\n\tcabal
  configure && cabal build\n\nor alternately\n\n\tghc --make -O2 -o umm UMM*.hs\n\nFor
  more information, build umm, then run \"umm --help\", and read the\noutput of that.
  Arguably, that info should be in this file... later.\nThen look at the two files
  sample1.dat and sample2.dat; they are very\nsimple examples of ledgers.\n\nIn the
  contrib/ subdirectory there is a vim syntax highlighter,\ncontributed by Nicolas
  Pouillard -- many thanks!\n"
description-type: text
hash: 8ee2e35069e8a445164be681bdd8ce09f0716e17fb3dca5d2890c2f64a3c3c5c
homepage: http://www.korgwal.com/umm/
latest: 0.3.1
license-name: LicenseRef-GPL
maintainer: Uwe Hollerbach <uh@alumni.caltech.edu>
synopsis: A small command-line accounting tool
test-bench-deps: {}
