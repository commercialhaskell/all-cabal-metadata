all-versions:
- 1.0.0.0
- 1.0.0.1
- 1.1.0.0
- 1.1.4.0
- 3.0.0.0
author: Erich.Gut
basic-deps:
  array: '>=0.5 && <1'
  base: '>=4.17 && <5'
  deepseq: '>=1.4 && <2'
  random: '>=1.2 && <2'
  time: '>=1.12 && <2'
changelog: "# Changelog for `oalg-base`\r\n\r\nAll notable changes to this project
  will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand
  this project adheres to the\r\n[Haskell Package Versioning Policy](https://pvp.haskell.org/).\r\n\r\n##
  [Unreleased]\r\n\r\n## [1.1.1.0] - 2023-11-19\r\n\r\n### Added\r\n- type for ordered
  structures.\r\n- Foldable for sets.\r\n\r\n## [1.1.2.0] - 2023-11-22\r\n\r\n###
  Added\r\n- free sums.\r\n\r\n## [1.1.3.0] - 2023-11-27\r\n\r\n### Change\r\n- interface
  of free sums. Replacing Word by LinearCombination.\r\n\r\n## [1.1.4.0] - 2023-12-19\r\n\r\n###
  Added\r\n- OAlg.Entity.Matrix.Vector\r\n- OAlg.Entity.Sequence.CSequence\r\n\r\n###
  Change\r\n- OAlg.Entity.Sequence.ProductSymbol moved OAlg.Entity.Product.ProductSymbol\r\n\r\n##
  [1.2.0.0] - 2024-01-05\r\n\r\n### Adapttion\r\n- ghc 9.4.7\r\n\r\n## [1.2.1.0] -
  2024-01-22\r\n\r\n### Added\r\n- Order releation for natruals\r\n- Any natural is
  attestable\r\n- XStandard for matrices over Z\r\n- Liftable and CokernelLiftableFree\r\n\r\n##
  [1.2.2.0] - 2024-07-31\r\n\r\n### Added\r\n- mtxDensity\r\n\r\n## [2.0.0.0] - 2024-09-07\r\n\r\n###
  Changed\r\n- operational structures no longer have to throw a NotApplicable exception
  if\r\nthe application is not well defined. They also are allowed to throw a NotMultiplicable\r\n-
  the module OAlg.Data.Generator has been replaced by OAlg.Data.FinitelyPresentable
  and the\r\ntype Generator to FinitePresentation. Further more the slice index has
  been relaxed and\r\nthe type of the liftable has been refined. Last but not least
  the dual concept of a GenaratorTo\r\nhas been defined by EmbeddingFrom.\r\n\r\n###
  Added\r\n- vectorial structure for Slice From entities.\r\n- liftable cokernels
  for CokernelLiftableFree.\r\n- maybeFinList\r\n\r\n## [2.0.0.2] - 2024-09-22\r\n###
  Changed\r\n- data type Closer in module OAlg.Data.Ord changed to Closure.\r\n\r\n##
  [2.0.1.2] - 2024-10-08\r\n\r\n### Added\r\n- general mappings for PSequences.\r\n-
  FSequence for total sequences with finite support.\r\n- PTree for efficient retrieving
  values from a partially defiend sequence.\r\n- Validation for data Closure\r\n-
  trFilter in OAlg.Data.Tree\r\n- VectorSheaf\r\n- Projectible instances for Sheaf
  and Path\r\n\r\n### Changed\r\n- the function lookup in OAl.Data.Tree to trLookup\r\n\r\n###
  Resolved\r\n- Orphan instance for Projectible Sheaf and Path by removing the general
  definition to Sum and Product.\r\n\r\n## [2.0.2.1] - 2025-01-13\r\n\r\n### Added\r\n-
  class Functorial1\r\n- class Filterable in OAlg.Data.Filterable.\r\n- structure
  EntOrd for ordered entities.\r\n- module OAlg.Data.Logical\r\n- module OAlg.Category.Map\r\n-
  module OAlg.Boolean.Definition: class Logical as base class for Booleans, class
  Erasable.\r\n- classes PartiallyOrdered, Empty, Full in OAlg.Structure.PartiallyOrdered.Definition\r\n-
  class Lattice in OAlg.Structure.Lattice.Definition.\r\n- module OAlg.Entity.Seqeuence.Set:
  setPower, setIsEmpty, setIntersection, setDifference, setTakeN\r\n  setFilter, instance
  Erasable (Set x)\r\n- module OAlg.Entity.Sequence.Graph: gphTakeN, gphset, setgph,
  gphUnion, gphIntersection,\r\ngphSetFilter, gphDifference, isSubGraph, instance
  Ord (Graph i x), Lattice (Graph a (Set b)),\r\ninstance Filterable (Graph i).\r\n-
  Propositions for lattices, see OAlg.Structure.Lattice.Proposition\r\n- instances
  Ord and PartiallyOrdered for Op.\r\n\r\n### Changed\r\n- the class POrd has been
  renamed to PartiallyOrdered and moved to\r\nOAl.Structure.PartiallyOrdered.Definition.\r\n-
  in the module OAlg.Entity.Definition: Empty to EntEmpty, empty to fromEmpty,\r\nEmpty2
  to EntEmpty2, empty2 to fromEmpty2.\r\n\r\n## [2.0.2.2] - 2025-01-22\r\n\r\n###
  Added\r\n- module OAlg.Limes.Exact.ConsZero\r\n- module OAlg.Limes.Exact.Deviation\r\n\r\n###
  Changed\r\n- show for FinList\r\n\r\n## [2.1.0.0] - 2025-01-26\r\n\r\n### Added\r\n-
  AlgebraicSemiring in the module OAlg.Structure.Algebraic.Definition.\r\n- mapping
  cnzMap and cnztMap in the module OAlg.Limes.Exact.ConsZero.\r\n\r\n### Changed\r\n-
  eliminated the constraint for HomOriented and HomFibred being an instance of Entity2\r\n\r\n##
  [2.2.0.0] - 2025-01-30\r\n\r\n### Added\r\n- Structure2 and Struct2 in the module
  OAlg.Structure.Definition.\r\n- The constraint AlgebraicRing, AlgebraicField in
  the module OAlg.Structure.Algebraic.Definition.\r\n- Algebraic structure for ConsZeroTrafo
  in the module OAlg.Limes.Exact.ConsZero.\r\n\r\n### Changed\r\n- Redesign of Hom's:
  Adaption of the various class definition for Hom's to the idiom\r\n'Transformable'
  such that the implementation of concrete Hom's is strait forward (see for example\r\n'GLApp')
  and the implementation for parameterized Hom's over a structure index need only
  the idiom\r\n'Transformable...' to circumvent undecidable instances (see for example
  'IdHom').\r\n- Elimination of the idioms 'Embeddable' and 'Forgetful' such that
  only the Idiom\r\n'Transformable' and 'Transformable...' are needed.\r\n- Constraints
  for Transformation being Vectorial.\r\n\r\n## [2.3.0.0] - 2025-02-14\r\n\r\nIndroducing
  generic limits.\r\n\r\n### Added\r\n- The class Uiversal and UniversalApplicative
  in the module OAlg.Limes.Universal for generic limits.\r\n\r\n### Changed\r\n- HomOp
  contains only the constructors FromOpOp and ToOpOp and as such IsoOp is generated\r\nby
  isoToOpOp ans its inverse isoFromOpOp.\r\n\r\n## [3.0.0.0] - 2025-10-03\r\n\r\n###
  Changed\r\n- Complete revision of the concept of duality (see OAlg.Data.Dualisable)\r\n-
  Introduction of generic limits.\r\n- Introduction of generic applications. (see
  OAlg.Category.Application)\r\n- Indroduction of disjunctive homomorphisms.\r\n\r\n###
  Added\r\n- OAlg.Limes.Exact\r\n\r\n"
changelog-type: markdown
description: "# oalg-base\r\n\r\nA [package](https://hackage.haskell.org/package/oalg-base)
  for solving algebraic problems purely written in Haskell.\r\n\r\n\r\n\r\n"
description-type: markdown
hash: 2911aacaeab8f53172232500574d00f58288dd43bb7ef491e67a40eefbbfd86d
homepage: https://github.com/zErichGut/oalg-main#readme
latest: 3.0.0.0
license-name: BSD-3-Clause
maintainer: zerich.gut@gmail.com
synopsis: Algebraic structures on oriented entities and limits as a tool kit to solve
  algebraic problems.
test-bench-deps:
  array: '>=0.5 && <1'
  base: '>=4.17 && <5'
  deepseq: '>=1.4 && <2'
  oalg-base: '>=0'
  random: '>=1.2 && <2'
  time: '>=1.12 && <2'
