all-versions:
- 0.1.0.0
author: Matthias Pall Gissurarson <mpg@mpg.is>
basic-deps:
  base: ^>=4.18.2.1
  ghc: ^>=9.6
  ollama-haskell: ^>=0.1
  text: ^>=2.1
changelog: |
  # Revision history for OllamaHoles

  ## 0.1.0.0 -- 2024-04-25

  * First version. Released on an unsuspecting world.
changelog-type: markdown
description: "# Ollama Holes\n\n![image](https://github.com/user-attachments/assets/649ffcd2-0560-47d6-bbbe-74bae08cbb70)\n\n##
  Introduction\nThis is an example of a typed-hole plugin for GHC that uses the [Ollama](https://ollama.com/)
  to host a local LLM to fill in holes in Haskell code.\n\n\n## Example\nGiven \n\n```haskell\n{-#
  OPTIONS_GHC -fplugin=GHC.Plugin.OllamaHoles #-}\n{-# OPTIONS_GHC -fplugin-opt=GHC.Plugin.OllamaHoles:model=gemma3:27b
  #-}\n{-# OPTIONS_GHC -fplugin-opt=GHC.Plugin.OllamaHoles:n=5 #-}\n\nmodule Main
  where\n\nimport Data.List\n\n\nmain :: IO ()\nmain = do let k = (_b :: [Int] ->
  [String])\n          print (k [1,2,3])\n\n```\n\nWe get the following output:\n\n\n```text\n
  \   Main.hs:12:20: error: [GHC-88464]\n        • Found hole: _b :: [Int] -> [String]\n
  \       Or perhaps ‘_b’ is mis-spelled, or not in scope\n        • In the expression:
  _b :: [Int] -> [String]\n        In an equation for ‘k’: k = (_b :: [Int] -> [String])\n
  \       In the expression:\n            do let k = (_b :: [Int] -> [String])\n            print
  (k [1, 2, ....])\n        • Relevant bindings include\n            k :: [Int] ->
  [String] (bound at Main.hs:12:15)\n            main :: IO () (bound at Main.hs:12:1)\n
  \       Valid hole fits include\n            \\x -> map show x\n            map
  (show)\n            \\x -> map (\\y -> \"Number: \" ++ show y) x\n            \\x
  -> replicate (length x) \"Hello\"\n            []\n    |\n    12 | main = do let
  k = (_b :: [Int] -> [String])\n    |                    ^^\n    Error: cabal: Failed
  to build exe:main from OllamaHolesTest-1.0.0.\n```\n\n## Installation\n\n1. Install
  [Ollama](https://ollama.com/download)\n2. Install the `gemma3:27b` model (or any
  other model you prefer) using the following command:\n\n```bash\n\nollama pull gemma3:27b\n```\n3.
  Clone this repository and navigate to the directory, and build the project using:\n\n```bash\ncabal
  build\n```\n4. Run the example using:\n\n```bash\ncabal build Test\n```\n\n5. Enjoy!
  If you want to change the underlying model, make sure to pass the model name via
  the plugin arguments (see example)\n"
description-type: markdown
hash: e8024b892d4fa4b0c24bdbfae45090c3a97cb48c0bd9a47679ccdfd54af48f82
homepage: https://github.com/Tritlo/OllamaHoles
latest: 0.1.0.0
license-name: MIT
maintainer: Matthias Pall Gissurarson <mpg@mpg.is>
synopsis: A typed-hole plugin that uses LLMs via Ollama to generate valid hole-fits
test-bench-deps: {}
