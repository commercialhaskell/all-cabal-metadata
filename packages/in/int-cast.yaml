all-versions:
- 0.1.0.0
- 0.1.1.0
- 0.1.2.0
- 0.2.0.0
author: Herbert Valerio Riedel
basic-deps:
  base: '>=4.7 && <4.22'
changelog: |
  # 0.2.0.0

    - Add support for GHC 8.4

    - Removed `type instance a == b = IsIntBaseTypeEq a b` as GHC 8.4 made `(==)` a closed type-family ([#3](https://github.com/hvr/int-cast/issues/3))

    - Improved Haddock documentation

  ----

  ## 0.1.2.0

    - Add support for GHC 7.10

    - Add support for `Natural`

  ## 0.1.1.0

    * Fix `intCastIso` to be reflexive wrt non-fixed integer types

    * Simplified `IsIntBaseTypeEq` equations

    * Add `Data.Type.Equality.(==)` instance for `IntBaseTypeK`

  # 0.1.0.0

    * initial release

  ----
changelog-type: markdown
description: Provides statically or dynamically checked conversions between integral
  types. See documentation in "Data.IntCast" for more details.
description-type: haddock
hash: 18df30a9295a35cd3441829ac0a9bbc1954cfc8b114766f8641313afb71b4381
homepage: https://github.com/haskell-hvr/int-cast
latest: 0.2.0.0
license-name: BSD-3-Clause
maintainer: https://github.com/haskell-hvr
synopsis: Checked conversions between integral types
test-bench-deps:
  QuickCheck: '>=2.14 && <2.15'
  base: '>=0'
  int-cast: '>=0'
  test-framework: '>=0.8 && <0.9'
  test-framework-quickcheck2: '>=0.3 && <0.4'
