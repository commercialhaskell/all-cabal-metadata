all-versions:
- '0.1'
- 0.1.1
- 0.1.2
- 0.1.3
- 0.1.4
- 0.1.5
- 0.1.6
- 0.1.7
- 0.1.8
author: Sebastian Fischer
basic-deps:
  base: <5
  containers: '>=0'
  mtl: '>=0'
changelog: ''
changelog-type: ''
description: |+
  Simple, Incremental SAT Solving as a Library
  ============================================

  This Haskell library provides an implementation of the
  Davis-Putnam-Logemann-Loveland algorithm
  (cf. <http://en.wikipedia.org/wiki/DPLL_algorithm>) for the boolean
  satisfiability problem. It not only allows to solve boolean formulas
  in one go but also to add constraints and query bindings of variables
  incrementally.

  The implementation is not sophisticated at all but uses the basic DPLL
  algorithm with unit propagation.

description-type: text
hash: 9791328827d84cd7cd0428eac8d6155b2b0cea5a5e7f9cff17f304b93531ad8f
homepage: http://github.com/sebfisch/incremental-sat-solver
latest: 0.1.8
license-name: BSD-3-Clause
maintainer: sebf@informatik.uni-kiel.de
synopsis: Simple, Incremental SAT Solving as a Library
test-bench-deps: {}
