homepage: https://github.com/andreasabel/ini
changelog-type: markdown
hash: d49131863e2957386d228c53773c25d1262de490728c6c19b85064eb4422c3e6
test-bench-deps:
  base: '>=4 && <5'
  unordered-containers: -any
  hspec: -any
  ini: -any
maintainer: Andreas Abel
synopsis: Configuration files in the INI format.
changelog: |
  ## 0.4.2

  _2022-07-26, Andreas Abel_

  - Fail parsing if the input is not completely consumed [#30](https://github.com/chrisdone/ini/pull/30)
  - Print global values as well [#28](https://github.com/chrisdone/ini/pull/28)

  Tested with GHC 7.0 - 9.4.1 RC1.

  ## 0.4.1

  _2019-01-02, Chris Done_

  - Allow global section [#6](https://github.com/chrisdone/ini/issues/6)
basic-deps:
  base: '>=4 && <5'
  unordered-containers: -any
  text: -any
  attoparsec: -any
all-versions:
- 0.0.0
- 0.0.1
- 0.1.0
- 0.1.1
- 0.2.0
- 0.2.1
- 0.2.2
- 0.3.0
- 0.3.1
- 0.3.2
- 0.3.3
- 0.3.4
- 0.3.5
- 0.3.6
- 0.4.0
- 0.4.1
- 0.4.2
author: Chris Done
latest: 0.4.2
description-type: markdown
description: |
  [![Hackage](https://img.shields.io/hackage/v/ini.svg?color=informational)](https://hackage.haskell.org/package/ini)
  [![ini on Stackage Nightly](https://stackage.org/package/ini/badge/nightly)](https://stackage.org/nightly/package/ini)
  [![Stackage LTS version](https://www.stackage.org/package/ini/badge/lts?label=Stackage)](https://www.stackage.org/package/ini)
  [![Haskell CI](https://github.com/andreasabel/ini/actions/workflows/haskell.yml/badge.svg)](https://github.com/andreasabel/ini/actions/workflows/haskell.yml)

  ini
  ===

  Quick and easy configuration files in the INI format for Haskell.

  Format rules and recommendations:

  * `foo: bar` or `foo=bar` are allowed.
  * The `:` syntax is space-sensitive.
  * Keys are case-sensitive.
  * Lower-case is recommended.
  * Values can be empty.
  * Keys cannot contain `:`, `=`, `[`, or `]`.
  * Comments must start at the beginning of the line with `;` or `#`.

  An example configuration file:

  ``` ini
  # Some comment.
  [SERVER]
  port=6667
  hostname=localhost
  [AUTH]
  user=hello
  pass=world
  # Salt can be an empty string.
  salt=
  ```

  Parsing example:

  ``` haskell
  > parseIni "[SERVER]\nport: 6667\nhostname: localhost"
  Right (Ini {unIni = fromList [("SERVER",fromList [("hostname","localhost")
                                                   ,("port","6667")])]})
  ```

  Extracting values:

  ``` haskell
  > parseIni "[SERVER]\nport: 6667\nhostname: localhost" >>=
    lookupValue "SERVER" "hostname"
  Right "localhost"
  ```

  Parsing:

  ``` haskell
  > parseIni "[SERVER]\nport: 6667\nhostname: localhost" >>=
    readValue "SERVER" "port" decimal
  Right 6667
  ```

  Import `Data.Text.Read` to use `decimal`.

  ## Related packages

  [`ini-qq`](https://hackage.haskell.org/package/ini-qq) provides a quasiquoter for INI.
license-name: BSD-3-Clause
