homepage: https://indigo-lang.gitlab.io/
changelog-type: markdown
hash: 4e61f7c856cb308c996d20a37c4936f22130dc58b4a041dcd9cbe2518bfcb028
test-bench-deps:
  fmt: -any
  morley-prelude: -any
  base: '>=4.7 && <5'
  tasty-hedgehog: -any
  morley: -any
  with-utf8: -any
  hedgehog: -any
  cleveland: -any
  data-default: -any
  HUnit: -any
  containers: -any
  singletons: -any
  lorentz: -any
  indigo: -any
  tasty: -any
  tasty-hunit-compat: -any
  hspec-expectations: -any
maintainer: Serokell <libraries@serokell.io>
synopsis: Convenient imperative eDSL over Lorentz.
changelog: |
  Unreleased
  ==========
  <!-- Append new entries here -->
  * [!43](https://gitlab.com/morley-framework/indigo/-/merge_requests/43)
    Add emit instruction
    + New user-facing function `Indigo.Frontend.Language.emit` to emit contract
      events.
    + `annQ` and `FieldAnn` are re-exported from `Indigo.Frontend.Language` and
      consequently `Indigo`.
  * [!42](https://gitlab.com/morley-framework/indigo/-/merge_requests/42)
    Updates for kathmandu
    + Bump dependencies
    + Fix typo in "division by zero" error text (was "devision by zero") in the
      expression code generator.
  * [!41](https://gitlab.com/morley-framework/indigo/-/merge_requests/41)
    Updates for jakarta and GHC-9
    + Bump dependencies
    + Bump compiler/stack resolver
    + Bump docker base image
    + Note that due to Jakarta changes, some functions may need `IsNotInView`
      constraint now, exported from `Indigo.Lorentz` and `Indigo`.
  * [!35](https://gitlab.com/morley-framework/indigo/-/merge_requests/35)
    Add upgrade command; generate indigo-dependency-snapshot.yaml on demand
    + Add an `indigo upgrade` command, building the latest indigo version
    + Also update project generator for latest indigo/morley
  * [!36](https://gitlab.com/morley-framework/indigo/-/merge_requests/36)
    Reorganize Indigo modules
    - Get rid of `Indigo.Internal` and `Indigo.Internal.Expr` "god modules"
    - Several moves:
        - `Indigo.Internal.Lookup`, `Indigo.Internal.Expr.Compilation`, `Indigo.Internal.Expr.Decompose` to `Indigo.Backend.*`
        - `Indigo.Internal.Expr.Symbolic` to `Indigo.Frontend.Expr`
        - `Indigo.Frontend.Statement` to `Indigo.Frontend.Internal.Statement` (it's not reexported)
        - `Indigo.Common.Expr.Types` to `Indigo.Common.Expr`
    - Do not re-export backend parts from `Indigo`, specifically, `Indigo.Backend.Expr.*` and `Indigo.Backend.Lookup`
    - Rename `Indigo.Internal.*` to `Indigo.Common.*` (not really internal, since it's exported from `Indigo`)
    - Rename `Indigo.Rebinded` to `Indigo.Rebound`
    - Split type definitions from `Indigo.Compilation.Sequential` into `Indigo.Compilation.Sequential.Types`
  * [!34](https://gitlab.com/morley-framework/indigo/-/merge_requests/34)
    Replace `dip dip` with `dip 2` in the code generator
  * [!24](https://gitlab.com/morley-framework/indigo/-/merge_requests/24)
    Bump Morley/Lorentz and comply with the changes in them.
  * [!15](https://gitlab.com/morley-framework/indigo/-/merge_requests/15)
    Add `failCustomNoArg` which allows failing with just a string instead of `pair string <arg>`.
  * [!18](https://gitlab.com/morley-framework/indigo/-/merge_requests/18)
    Bump over Morley/Lorentz with all the edo functionality (but tickets are not yet supported).

  0.5.0
  ==========
  * [!12](https://gitlab.com/morley-framework/indigo/-/merge_requests/12)
    Refactor some general documentation-related methods, see deprecation notes for migration instructions.

  0.4
  ==========
  * [!8](https://gitlab.com/morley-framework/indigo/-/merge_requests/8)
    Comply with the recent changes in Lorentz.
    Namely, `pack`, `unpack`, `checkSignature` and hashing instructions now operate not with `ByteString`s and `Signature`s, rather with type-safe newtypes over them.
    Added `packRaw` and `unpackRaw` with the old behaviour of `pack` and `unpack`.
  * [!5](https://gitlab.com/morley-framework/indigo/-/merge_requests/5)
    Replaced `indigo-trial` name with `indigo` via docker instead.
  * [!630](https://gitlab.com/morley-framework/morley/-/merge_requests/630)
    Use `:` in all library instructions instead of `&`.
  * [!639](https://gitlab.com/morley-framework/morley/-/merge_requests/639)
    Update the tutorial on how to install `indigo-trial` which is a wrapper around
    docker image that contains `indigo` binary and cached Haskell dependencies.
  * [!596](https://gitlab.com/morley-framework/morley/-/merge_requests/596)
    Add ability to generate debug comments for Indigo statements:
    + Added several levels of verbosity
    + Added possibility to print full stack trace among with a statement call
    + `Buildable Expr` defined

  0.3.1
  =====
  * Update `indigo` executable:
    + Make it usable inside `docker` environment.
    + Avoid usage of `mixin` in generated project since this feature is not properly handled by `stack`.
  * [!629](https://gitlab.com/morley-framework/morley/-/merge_requests/629)
    Generalize functions working on `UStore` to anything satisfying classes from `Lorentz.StoreClass`.

  0.3.0
  ==========
  * [!583](https://gitlab.com/morley-framework/morley/-/merge_requests/583)
    Add an intermediate compilation representation for optimization.
    + `fail`-like statements return `RetVars r` instead of `r`.
  * [!534](https://gitlab.com/morley-framework/morley/-/merge_requests/534)
    Add a tutorial on how to setup an Indigo project using Indigo CLI.
    + Bump the dependencies version of the boilerplate generated by `indigo new`
    to the latest.

  * [!566](https://gitlab.com/morley-framework/morley/-/merge_requests/566)
    Add Indigo CLI installation script.
    + Mention how Indigo CLI can be installed in the Indigo documentation.

  0.2.2
  =====
  * [!544](https://gitlab.com/morley-framework/morley/-/merge_requests/544)
    Add `indigo` executable which improves the development of Indigo projects.
    + Create boilerplate project via `new`.
    + Wrap around stack commands: `build`, `test`, and `repl`.
    + Run `ContractRegistry` commands via `run`.

  0.2.1
  =====
  * [!570](https://gitlab.com/morley-framework/morley/-/merge_requests/570)
    Added `coerce` and `forcedCoerce` to convert between expressions of types that
    have the same Michelson representation.
  * [!558](https://gitlab.com/morley-framework/morley/-/merge_requests/558)
    Added `wrap` and `unwrap`, to generate from and extract to, values given a
    constructor with a single fields for a sum type.
  * [!538](https://gitlab.com/morley-framework/morley/-/merge_requests/538)
    Add the `showcase` section presenting a list of public smart contracts written
    in Indigo.
  * [!533](https://gitlab.com/morley-framework/morley/-/merge_requests/533)
    Add a tutorial on how to add documentation to a contract.
    + Create helper functions: `saveDocumentation` and `printDocumentation`
      which can generate the documentation via the REPL.
    + Add short-handed doc item statements such as: `anchor`, `description`,
      and `example`.

  0.2.0
  =====
  * [!542](https://gitlab.com/morley-framework/morley/-/merge_requests/542)
    Use `#=` as a synonym for `//->`.

  0.1.0.0
  =======

  Initial release.
basic-deps:
  fmt: -any
  microlens-th: -any
  shelly: -any
  string-interpolate: -any
  reflection: -any
  morley-prelude: -any
  base: '>=4.7 && <5'
  time: -any
  text: -any
  morley: -any
  universum: -any
  with-utf8: -any
  megaparsec: '>=7.0.0'
  filepath: -any
  process: -any
  req: -any
  constraints: -any
  casing: -any
  containers: -any
  singletons: -any
  lorentz: -any
  vinyl: -any
  file-embed: -any
  optparse-applicative: -any
  tree-view: -any
  template-haskell: -any
  directory: -any
all-versions:
- 0.1.0.0
- 0.2.0
- 0.2.1
- 0.2.2
- 0.3.0
- 0.3.1
- '0.4'
- 0.5.0
- 0.6.0
author: Serokell, Tocqueville Group
latest: 0.6.0
description-type: markdown
description: |
  > :warning: **Note: this project is being deprecated.**
  >
  > It will no longer be maintained after the activation of protocol "N" on the Tezos mainnet.

  # Indigo eDSL

  [![Hackage](https://img.shields.io/hackage/v/indigo.svg)](https://hackage.haskell.org/package/indigo)

  Indigo eDSL is a high level language for Michelson contract development.
  It is meant first and foremost to free you from the burden of manual stack
  management and supports common features of imperative languages.

  It is built on top of `Lorentz`, which in turn is built on top of `Morley`, a
  dialect that is a superset of vanilla Michelson.
  If you are interested more in the relationships between these projects you can
  start by taking a look at [the repo on GitLab](https://gitlab.com/morley-framework/morley).

  ## Overall idea

  Michelson contracts are stack-based and often follow the repetitive pattern of
  copying the required values on top of the stack to apply an instruction to them.
  Indigo can associate variables to values in the stack and it's able to refer to
  them in order to handle this pattern automatically.

  In addition to this it can override existing variables with new values, allowing
  the manipulation of the stack to be automatic.

  Leveraging this ability, it also supports features such as: imperative statements
  (`if`, `while`, ...), expressions, operators (`+`, `||`, `==`, ...), scoped
  functions definition and errors.

  Indigo uses Morley to map values from Michelson to Haskell and to compile to
  Michelson code (or to any of the other projects in the chain mentioned above).

  ## Tutorial and documentation

  Indigo has a tutorial that you can find at [indigo-lang.gitlab.io](https://indigo-lang.gitlab.io/).

  Additionally, like the other Morley projects, it has [Haddock documentation](https://hackage.haskell.org/package/indigo).
license-name: MIT
