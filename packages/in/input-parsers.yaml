homepage: ''
changelog-type: markdown
hash: 1332080cf411f9033f1d6c622383d31f16cf90a82676b7ee79e1520697c05061
test-bench-deps: {}
maintainer: blamario@protonmail.com
synopsis: Extension of the parsers library with more capability and efficiency
changelog: |
  # Revision history for input-parsers

  ## 0.2.3.1 -- 2021-11-25

  * Incremented the upper bound of the optional `attoparsec` dependency.

  ## 0.2.3 -- 2021-03-26

  * Improved documentation
  * Fixed compilation with GHC 8.2.2

  ## 0.2.2 -- 2021-03-26

  * Move Data.ByteString and Data.ByteString.Lazy imports outside ifdef (by Gary Coady)
  * Exported all Position methods

  ## 0.2.1 -- 2021-03-09

  * Changed the default instance of `ParserPosition`, made `Position` a subclass of `Ord`.

  ## 0.2 -- 2021-03-07

  * Added `ParserPosition` and made `Position` a class. Deprecated.

  ## 0.1.0.1 -- 2020-07-19

  * Incremented the upper bound of `base` dependency.

  ## 0.1.0.0 -- 2020-07-18

  * First version. Released on an unsuspecting world.
basic-deps:
  monoid-subclasses: '>=1.0 && <1.2'
  bytestring: ==0.10.*
  base: '>=4.9 && <5'
  text: ==1.2.*
  parsec: '>=3.1 && <3.2'
  parsers: '>=0.12 && <0.13'
  binary: '>=0.7.2 && <1'
  attoparsec: '>=0.12.1.4 && <0.15'
  transformers: '>=0.2 && <0.6'
all-versions:
- '0.1'
- 0.1.0.1
- '0.2'
- 0.2.1
- 0.2.2
- 0.2.3
- 0.2.3.1
author: Mario Blažević
latest: 0.2.3.1
description-type: markdown
description: |
  input-parsers
  =============

  ### An extension of the [parsers](http://hackage.haskell.org/package/parsers) library ###

  The [parsers](http://hackage.haskell.org/package/parsers) library provides a number of subclasses of the
  [`Alternative`](https://hackage.haskell.org/package/base/docs/Control-Applicative.html#t:Alternative) type class,
  as well as lots of combinators useful for writing actual parsers.

  What those classes like
  [Parsing](http://hackage.haskell.org/package/parsers/docs/Text-Parser-Combinators.html#t:Parsing) and
  [CharParsing](https://hackage.haskell.org/package/parsers/docs/Text-Parser-Char.html#t:CharParsing) lack is the
  ability to express certain efficient parser primitives like Attoparsec's
  [takeWhile](https://hackage.haskell.org/package/attoparsec/docs/Data-Attoparsec-Text.html#v:takeWhile). To rectify for
  this failing and enable more efficient parsers to be expressed, the present package `input-parsers` adds type classes
  [InputParsing](http://hackage.haskell.org/package/input-parsers/docs/Text-Parser-Input.html#t:InputParsing) and
  [InputCharParsing](http://hackage.haskell.org/package/input-parsers/docs/Text-Parser-Input.html#t:InputCharParsing). The
  common characteristic of almost all their methods is that their parse result has the same type as the parser input,
  and is a prefix of the input.

  The present package also exports the class
  [DeterministicParsing](http://hackage.haskell.org/package/input-parsers/docs/Text-Parser-Deterministic.html#t:DeterministicParsing),
  which provides a number of parser methods that are guaranteed to succeed with a single (typically longest possible)
  result. This is most useful for writing the lexical layer of a parser, but it can help avoid ambiguities and
  inefficiencies in general.

  Finally, the package provides the class
  [`Position`](http://hackage.haskell.org/package/input-parsers/docs/Text-Parser-Input-Position.html#t:Position) to
  abstract over the position the parser reached in the input stream.
license-name: BSD-3-Clause
