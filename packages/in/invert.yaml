all-versions:
- '1.0'
- 1.0.0.1
- 1.0.0.2
- 1.0.0.3
- 1.0.0.4
- 1.0.0.5
author: Chris Martin
basic-deps:
  base: ^>=4.18 || ^>=4.19
  containers: ^>=0.6.5
  generic-deriving: ^>=1.14.4
  hashable: ^>=1.4.2
  unordered-containers: ^>=0.2.19
  vector: ^>=0.12.3 || ^>=0.13
changelog: |
  ### 1.0.0.5 (2025-01-20)

  Bump versions

  ### 1.0.0.4 (2023-06-26)

  Raise language to GHC2021

  ### 1.0.0.3 (2023-01-11)

  Packaging and documentation improvement

  ### 1.0.0.2 (2022-03-15)

  - Add support for base 4.16 (ghc 9.2)
  - Add support for hashable 1.4

  ### 1.0.0.1 (2021-06-02)

  Minor documentation changes

  ### 1.0 (2021-02-09)

  Initial release
changelog-type: markdown
description: |
  This library deals with computing a function’s inverse. This is, of course, not
  possible in general, so the applicability of this library comes with some caveats:

    * The function’s domain must be enumerable, and preferably rather small. We
      provide a few suggestions and utilities for how to enumerate the domain.

    * The function’s codomain must belong to the `Eq` class. An `Ord` or `Hashable`
      instance is also nice, to accommodate a data structure for efficient lookups.

    * The functions for inverting injections, surjections, and bijections require
      some care to use correctly, because the library does not verify these
      properties.

  The main purpose of this library is to provide documentation and convenience.
  It does not contain a great quantity of code, so a user hesitant to incur a
  dependency on the package might well choose only to read and borrow its techniques.
description-type: markdown
hash: 06f421e576284acda4d9a02987e90ad3028c18535874d550b387c6535994dd85
homepage: https://github.com/typeclasses/invert
latest: 1.0.0.5
license-name: Apache-2.0
maintainer: Chris Martin, Julie Moronuki
synopsis: Automatically generate a function’s inverse
test-bench-deps:
  base: '>=4.18 && <4.20'
  containers: '>=0.6.5 && <0.7'
  criterion: ^>=1.6
  generic-deriving: '>=1.14.4 && <1.15'
  hashable: '>=1.4.2 && <1.5'
  invert: '>=0'
  unordered-containers: '>=0.2.19 && <0.3'
  vector: '>=0.12.3 && <0.14'
