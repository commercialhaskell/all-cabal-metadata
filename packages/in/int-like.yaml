homepage: https://github.com/ejconlon/int-like#readme
changelog-type: ''
hash: 07edfd99581f97b0384611660f9453d34bcdf17e19a4907d195d288e3dcee735
test-bench-deps:
  base: '>=4.12 && <5'
  containers: ==0.6.*
  int-like: -any
  hashable: '>=1.3 && <1.5'
  tasty-hunit: -any
  tasty: -any
  deepseq: ==1.4.*
  algebraic-graphs: '>=0.5 && <0.7'
maintainer: ejconlon@gmail.com
synopsis: Newtype wrappers over IntSet and IntMap
changelog: ''
basic-deps:
  base: '>=4.12 && <5'
  containers: ==0.6.*
  hashable: '>=1.3 && <1.5'
  deepseq: ==1.4.*
  algebraic-graphs: '>=0.5 && <0.7'
all-versions:
- 0.1.0
- 0.1.1
author: Eric Conlon
latest: 0.1.1
description-type: markdown
description: |
  # int-like

  [![CircleCI](https://circleci.com/gh/ejconlon/int-like/tree/master.svg?style=svg)](https://circleci.com/gh/ejconlon/int-like/tree/master)

  Newtype wrappers over `IntSet` and `IntMap`

  Never mix up `Int` newtypes again! Instead of working directly with an `IntSet`, you can work with `IntLikeSet MyIntNewtype` with more or less the same API. You might have to thread through some `Coercible` constraints, though.
license-name: BSD-3-Clause
