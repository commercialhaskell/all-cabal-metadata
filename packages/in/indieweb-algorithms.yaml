all-versions:
- 0.1.0
- 0.1.1
author: Val Packett
basic-deps:
  aeson: '>=0'
  base: '>=4.0.0.0 && <5'
  bytestring: '>=0'
  containers: '>=0'
  data-default: '>=0'
  either: '>=0'
  errors: '>=0'
  http-link-header: '>=1.2.0'
  lens: '>=0'
  lens-aeson: '>=0'
  microformats2-parser: '>=0'
  network-uri: '>=0'
  safe: '>=0'
  text: '>=0'
  time: '>=0'
  transformers: '>=0'
  unordered-containers: '>=0'
  vector: '>=0'
  xml-conduit: '>=0'
  xml-conduit-writer: '>=0'
  xml-lens: '>=0.2'
changelog: ''
changelog-type: ''
description: "# indieweb-algorithms [![Hackage](https://img.shields.io/hackage/v/indieweb-algorithms.svg?style=flat)](https://hackage.haskell.org/package/indieweb-algorithms)
  [![unlicense](https://img.shields.io/badge/un-license-green.svg?style=flat)](https://unlicense.org)\n\nA
  collection of implementations of [IndieWeb]- and [Microformats 2]-related algorithms
  (based on [microformats2-parser] and [http-link-header]):\n\n- finding all microformats
  of a given type (while retaining the path to them), ie. flattening the tree\n- discovering
  **[authorship](https://indieweb.org/authorship)** of an `h-entry`\n  - discovering
  the [representative h-card](https://microformats.org/wiki/representative-h-card-parsing)\n-
  discovering [Webmention](https://indieweb.org/Webmention)/[Micropub](https://indieweb.org/Micropub)/[IndieAuth](https://indieweb.org/IndieAuth)/etc.
  **endpoints** (HTTP `Link` header, `a` and `link` tags with the `rel` attribute)\n-
  parsing tweets on Twitter.com into microformats (like [php-mf2-shim](https://github.com/indieweb/php-mf2-shim))\n-
  detecting [post types](httpss://indieweb.org/posts#Kinds_of_Posts)\n- converting
  microformats to Atom feeds\n\n[IndieWeb]: https://indieweb.org\n[Microformats 2]:
  https://microformats.org/wiki/microformats2\n[microformats2-parser]: https://codeberg.org/valpackett/microformats2-parser\n[http-link-header]:
  https://codeberg.org/valpackett/http-link-header\n\n## Usage\n\n### Endpoints\n\n```haskell\n{-#
  LANGUAGE OverloadedStrings #-}\n\nimport Network.HTTP.Link\nimport Data.Default\nimport
  Data.Maybe\nimport Data.Microformats2.Parser\nimport Data.IndieWeb.Endpoints\n\ndiscoverEndpoints
  [ \"micropub\" ] (parseMf2 def $ documentRoot $ parseLBS \"<link rel=micropub href='http://example.com/micropub2'>...\")
  (fromMaybe [] $ parseLinkHeader \"<http://example.com/micropub>; rel=\\\"micropub\\\"\")\n```\n\n##
  Development\n\nUse [stack] to build.  \nUse ghci to run tests quickly with `:test`
  (see the `.ghci` file).\n\n```bash\n$ stack build\n\n$ stack test\n\n$ stack ghci\n```\n\n[stack]:
  https://github.com/commercialhaskell/stack\n\n## License\n\nThis is free and unencumbered
  software released into the public domain.  \nFor more information, please refer
  to the `UNLICENSE` file or [unlicense.org](https://unlicense.org).\n"
description-type: markdown
hash: e1c256ea0af2ad6bcaaac3ed70b868172cd0d04cfb544daa7715804e085c2d42
homepage: https://codeberg.org/valpackett/indieweb-algorithms
latest: 0.1.1
license-name: LicenseRef-PublicDomain
maintainer: val@packett.cool
synopsis: A collection of implementations of IndieWeb algorithms.
test-bench-deps:
  aeson: '>=0'
  aeson-qq: '>=0'
  base: '>=4.0.0.0 && <5'
  bytestring: '>=0'
  data-default: '>=0'
  hspec: '>=0'
  hspec-expectations-pretty-diff: '>=0'
  http-link-header: '>=1.2.0'
  indieweb-algorithms: '>=0'
  lens: '>=0'
  lens-aeson: '>=0'
  microformats2-parser: '>=0'
  mtl: '>=0'
  network-uri: '>=0'
  raw-strings-qq: '>=0'
  template-haskell: '>=0'
  text: '>=0'
  time: '>=0'
  xml-conduit: '>=0'
