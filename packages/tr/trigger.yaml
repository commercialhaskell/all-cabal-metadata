all-versions:
- 1.0.0.0
- 1.0.1.0
- 1.0.2.0
author: Rhys Keepence
basic-deps:
  Glob: '>=0'
  aeson: '>=0'
  ansi-terminal: '>=0'
  base: '>=4.7 && <5'
  clock: '>=0'
  directory: '>=0'
  exceptions: '>=0'
  filepath: '>=0'
  formatting: '>=0'
  fsnotify: '>=0'
  process: '>=1.5'
  protolude: '>=0'
  text: '>=0'
  time: '>=0'
  trigger: '>=0'
  twitch: '>=0'
  yaml: '>=0'
changelog: ''
changelog-type: ''
description: "# Trigger\n\n`Trigger` is a cross platform file system watcher for super
  fast build-and-restart workflows. When files change, it can be configured to:\n
  - run build tasks\n - restart your app in the background\n\n`fswatch` and others
  are good general purpose tools for triggering tasks on filesystem changes. \nHowever,
  they don't support stopping and starting background processes.\n\n# How does it
  work?\n\n```\n         -------------------------------\n        | start processes
  in background |\n         -------------------------------\n                       |\n
  \                wait for change <-----------\n                       |                     |\n
  \        -------------------------------     |\n        |   stop background processes
  \  |    |\n         -------------------------------     |\n                       |
  \                    |\n         -------------------------------     |\n        |
  run build tasks sequentially  |    |\n         -------------------------------     |\n
  \                      |                     |\n         -------------------------------
  \    |\n        | start processes in background |    |\n         -------------------------------
  \    |\n                       |                     |\n                        ---------------------
  \ \n\n```\n\n# Installation\n\nIt's Haskell, so download Stack.\n\nClone and run
  `stack build --install`\n\nThis should install `trigger` on your PATH.\n\nIf you
  get linking issues on Windows, see [this issue](https://github.com/commercialhaskell/stack/issues/425)\n\n#
  Configuration\n\nCreate a file named `trigger.yaml`\n\nHere is an example:\n```yaml\n-
  dirs:\n    - \"src\"\n  files:\n    - \"**/*.hs\"\n  ignore:\n    - \"**/Ignored.hs\"\n
  \ tasks: \n    - \"stack build\"\n  run:\n    - \"target/executable\"      \n```\n\nWhich
  consists of:\n\n- `dirs`: one or more directories to watch for changes\n- `files`:
  one or more file globs. Files that don't match will not trigger. \n- `ignore`: (optional)
  one or more file globs. Overrides the above file globs to exclude particular files.
  \n- `tasks`: (optional) one or more tasks, which are run sequentially in the foreground.
  Any error will stop subsequent tasks.\n- `run`: (optional) one or more background
  processes.\n"
description-type: markdown
hash: dbee1d622df042b4979012c172da4c101b09f1eef6e0fdce7aec382c58e4ad4b
homepage: https://github.com/rhyskeepence/trigger
latest: 1.0.2.0
license-name: BSD-3-Clause
maintainer: rhys@rhyskeepence.com
synopsis: Trigger is a cross platform file system watcher for super fast build-and-restart
  workflows.
test-bench-deps:
  base: '>=4.7 && <5'
  hspec: '>=0'
  protolude: '>=0'
  trigger: '>=0'
