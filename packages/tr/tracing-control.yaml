homepage: https://github.com/serras/tracing
changelog-type: ''
hash: a410fa54aa642790993cc9651eb43018fb87a9ebfba393dd5e60e7336cb05479
test-bench-deps:
  stm: -any
  base: -any
  hspec: '>=2.6'
  text: -any
  monad-control: '>=1.0'
  lifted-base: '>=0.2'
  tracing-control: -any
  containers: -any
  mtl: -any
  stm-lifted: '>=2.5'
maintainer: alejandro.serrano@47deg.com
synopsis: Distributed tracing
changelog: ''
basic-deps:
  http-client: '>=0.5'
  bytestring: '>=0.10'
  case-insensitive: '>=1.2'
  stm: '>=2.5'
  base: '>=4.9 && <5'
  time: '>=1.8 && <1.10'
  text: '>=1.2'
  monad-control: '>=1.0'
  network: '>=2.8'
  lifted-base: '>=0.2'
  containers: '>=0.6'
  mtl: '>=2.2'
  transformers-base: '>=0.4'
  base16-bytestring: '>=1.0'
  transformers: '>=0.5'
  random: '>=1.1'
  aeson: '>=1.4'
  stm-lifted: '>=2.5'
all-versions:
- 0.0.6
- 0.0.7.2
author: Matthieu Monsch, Alejandro Serrano
latest: 0.0.7.2
description-type: markdown
description: |
  # Tracing [![Hackage](https://img.shields.io/hackage/v/tracing-control.svg)](https://hackage.haskell.org/package/tracing-control)

  **Important note**: this is a fork of the original [tracing](https://github.com/mtth/tracing) library in which `unliftio` has been replaced by `monad-control`.

  An [OpenTracing](https://opentracing.io/)-compliant, simple, and extensible
  distributed tracing library.

  + _Simple:_ add a single `MonadTrace` constraint to start tracing, without
    making your code harder to test!
  + _Extensible:_ use the built-in [Zipkin](http://zipkin.io) backend or hook in
    your own trace publication logic.

  ```haskell
  import Monitor.Tracing

  -- A traced action with its root span and two children.
  run :: MonadTrace m => m ()
  run = rootSpan alwaysSampled "parent" $ do
    childSpan "child-a" runA
    childSpan "child-b" runB
  ```

  To learn more, hop on over to
  [`Monitor.Tracing`](https://hackage.haskell.org/package/tracing/docs/Monitor-Tracing.html),
  or take a look at examples in the `examples/` folder.
license-name: BSD-3-Clause
