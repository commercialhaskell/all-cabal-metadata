all-versions:
- 0.3.1.0
- 0.3.1.1
- 0.3.1.2
author: Mihai Giurgeanu
basic-deps:
  aeson: '>=1.0'
  base: '>=4.7 && <5'
  bytestring: '>=0.10.8 && <0.11'
  cassava: '>=0.5.0.0 && <0.6'
  clock: '>=0.7 && <0.8'
  console-program: '>=0.4.2.2 && <0.5'
  containers: '>=0.5 && <0.6'
  logging: '>=3.0 && <4'
  monad-control: '>=0.3.2.3'
  sqlcli: '>=0.2 && <0.3'
  sqlcli-odbc: '>=0.2 && <0.3'
  stm: '>=2.4 && <2.5'
  store: '>=0.4.3 && <0.5'
  store-core: '>=0.4.1 && <0.5'
  temporary: '>=1.1 && <1.3'
  text: '>=0.11.3.1'
  th-utilities: '>=0.2.0.1 && <0.3'
  time: '>=1.8 && <1.9'
  transfer-db: '>=0'
  transformers: '>=0.5 && <0.6'
  yaml: '>=0.8.22 && <0.9'
changelog: "2018-03-18  Mihai Giurgeanu  <mihai.giurgeanu@gmail.com>\r\n\r\n\t* transfer-db.cabal
  (buidl-depends): set versions for sqlcli and sqlcli-odbc\r\n\t(ghc-options): remove
  -O2 flag\r\n\r\n2018-03-17  Mihai Giurgeanu  <mihai.giurgeanu@gmail.com>\r\n\r\n\t*
  transfer-db.cabal (synopsis, description): update package description\r\n\r\n2018-03-15
  \ Mihai Giurgeanu  <mihai.giurgeanu@gmail.com>\r\n\r\n\t* NEWS: added NEWS file\r\n\r\n\t*
  transfer-db.cabal (build-depends): update dependencies on console-program\r\n\t(version):
  0.3.1.1\r\n\r\n\t* stack.yaml (packages): removed console-program\r\n\t(extra-deps):
  add console-program-0.4.2.2\r\n\r\n2018-03-10  Mihai Giurgeanu  <mihai.giurgeanu@gmail.com>\r\n\r\n\t*
  stack.yaml: update dependencies to work with remote repositories\r\n\r\n2017-12-29
  \ Mihai Giurgeanu  <mihai.giurgeanu@gmail.com>\r\n\r\n\t* src/Main.hs (commands):
  add correctivePlan command\r\n\r\n2017-12-27  Mihai Giurgeanu  <mihai.giurgeanu@gmail.com>\r\n\r\n\t*
  src/Options.hs (readPlan): returns the Plan only\r\n\r\n2017-12-19  Mihai Giurgeanu
  \ <mihai.giurgeanu@gmail.com>\r\n\r\n\t* src/TransferDB.hs (transferDB): add skip
  and count functionality\r\n\r\n\t* src/Main.hs (runTransferPlan): add count and
  drop options to run command\r\n\r\n2017-12-13  Mihai Giurgeanu  <mihai.giurgeanu@gmail.com>\r\n\r\n\t*
  src/TransferDB.hs (transferDB): process batches in parallel\r\n\r\n\t* src/Main.hs
  (runTransferPlan): add multithreading command line option\r\n\r\n2017-11-26  Mihai
  Giurgeanu  <mihai.giurgeanu@gmail.com>\r\n\r\n\t* lib/Database/TransferDB/Commons.hs
  (withEnvConnection)\r\n\t(withEnvConnection'): add definitions\r\n\r\n2017-11-24
  \ Mihai Giurgeanu  <mihai.giurgeanu@gmail.com>\r\n\r\n\t* src/Main.hs (commands):
  add parallel threads option to dump command\r\n\r\n2017-11-07  Mihai Giurgeanu  <mihai.giurgeanu@gmail.com>\r\n\r\n\t*
  src/Main.hs (commands): add dump and restore commands\r\n\r\n2017-11-03  Mihai Giurgeanu
  \ <mihai.giurgeanu@gmail.com>\r\n\r\n\t* lib/Database/TransferDB/DumpDB.hs: add
  database agnostic dump library\r\n\r\n2017-11-02  Mihai Giurgeanu  <mihai.giurgeanu@gmail.com>\r\n\r\n\t*
  src/TransferDB.hs: use simple logging framework instead 'hPutStrLn stderr'\r\n\r\n2017-09-21
  \ Mihai Giurgeanu  <mihai.giurgeanu@gmail.com>\r\n\r\n\t* (change summary): add
  functionality to generate plans\r\n\r\n2017-09-19  Mihai Giurgeanu  <mihai.giurgeanu@gmail.com>\r\n\r\n\t*
  src/Main.hs (main): change program interface to accept commands (run, help)\r\n\r\n2017-09-18
  \ Mihai Giurgeanu  <mihai.giurgeanu@gmail.com>\r\n\r\n\t* src/Main.hs (transferTable):
  use CLI types instead of ODBC\r\n\t(transferBufferSize): increase buffer to 64k\r\n\r\n2017-09-17
  \ Mihai Giurgeanu  <mihai.giurgeanu@gmail.com>\r\n\r\n\t* src/Main.hs (transferDB):
  set autocommit off\r\n\t(transferTable): add transaction demarcaion on each transferred
  table\r\n\r\n2017-09-15  Mihai Giurgeanu  <mihai.giurgeanu@gmail.com>\r\n\r\n\t*
  src/Main.hs (main): change the command line argumets to get the plan file\r\n\t(main):
  use Options module to process command line arguments\r\n\t(transferDB): read all
  its arguments from the ReaderT structure TransferOptions\r\n\r\n"
changelog-type: text
description: "# transfer-db\n\nSimple ODBC application that transfers data between
  2 databases. \n\nThe application uses the SQL/CLI API and only few ODBC extensions
  \nthat are absolutely needed to make ODBC work. This means that the \napplication
  is easily portable to other SQL/CLI implementations.\n\nIt includes a database agnostic
  dump file format library.\n\nCurrent release is 0.3.1.1.\n\nRelease Notes\n-------------\n\nThe
  dump and restore are not finalized yet, so they don't work with the current version.\n\n\nSYNOPSYS\n--------\n\nTo
  use transfer-db you either right your own transfer plan by hand\nor use transfer-db
  to generate a transfer plan for you. You can \nedit the generated tranfer plan.\n\nA
  transfer plan is an [yaml](http://yaml.org) file specifying the\ndatabase connection
  parameters and what tables and data should be\ntransferred.\n\nGnereating a plan:\n\n
  \   transfer-db makePlan splitByRows <n> -d<SOURCEDB_ODBC_DATASOURCE> -u<SOURCEDB_USER_NAME>
  -p<SOURCEDB_PASSWORD> -s<SOURCEDB_SCHEMA> -D<DESTDB_ODBC_DATASOURCE> -U<DESTDB_USER_NAME>
  -P<DESTDB_PASSWORD> -S<DESTDB_SCHEMA> > my-plan.yaml\n    \nThis command will generate
  on the standard output a plan for transferring the database SOURCEDB \nDESTDB in
  batches of `<n>` rows (the splitByRows sub-command). In case of failure, you could\nrestart
  the process by skipping the completed batches.\n\nAfter that, simply run:\n\n    transfer-db
  run my-plan.yaml > therun-0001.log\n\nThis command will run the plan in the `my-plan.yaml`
  file and will capture the `stdout` of\n`transfer-db` command into the file `therun-0001.log`.
  This file logs the transferred tables\nand batches and could be used to generate
  a corrective plan in case something went wrong. On\nconsole (`stderr`) there will
  be printed detailed information about running the plan.\n\nFor more advanced options,
  on controlling the number of threads or of what batches\nshould be run, type:\n\n
  \   transfer-db help\n\nTo generate a corrective plan, you need the original plan
  and the `stdout` log generated by\nthe `run` command:\n\n    transfer-db correctivePlan
  my-plan.yaml -sfix-001.sql -pnew-plan.yaml -itherun-001.log\n    \nThis command
  will read the original plan from `my-plan.yaml` file, the log of the previous\nrun
  from `therun-001.log` file and will generate 2 files:\n\n*   `fix-001.sql` that
  you will need to run to against the destination database in order\n    to remove
  partial batches.\n*   `new-plan.yaml` that you should use with for a new transfer
  run, to transfer the remaining\n    records.\n    \n\n\n"
description-type: markdown
hash: a849b1c22877b914eb73aa4676607ff5373c2aba06a4637784e838a691efe0ed
homepage: http://hub.darcs.net/mihaigiurgeanu/transfer-db
latest: 0.3.1.2
license-name: BSD-3-Clause
maintainer: mihai.giurgeanu@gmail.com
synopsis: ODBC database transfer
test-bench-deps:
  QuickCheck: '>=2.10.1 && <2.11'
  base: '>=4.7 && <5'
  bytestring: '>=0.10.8 && <0.11'
  cpu: '>=0.1.2 && <0.2'
  hspec: '>=2.4.4 && <2.5'
  sqlcli: '>=0'
  store: '>=0.4.3 && <0.5'
  time: '>=1.8 && <1.9'
  transfer-db: '>=0'
  transformers: '>=0.5 && <0.6'
