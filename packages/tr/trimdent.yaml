all-versions:
- 0.1.0.0
author: Grzegorz Milka
basic-deps:
  base: '>=4.13 && <5'
changelog: ''
changelog-type: ''
description: |
  # trimdent

  `Trimdent` is a simple library for smartly trimming and unindenting strings.

  ```haskell
  >>> import Text.RawString.QQ (r)
  >>> trimdent [r|func add(x int, y int) int {
                    return x + y
                  }
               |]
  "func add(x int, y int) int {\n\
  \  return x + y\n\
  \}"
  ```

  ## Why is this useful?

  This library is useful when you are writing your own quasi quoter and want to
  sanitize whitespace.

  ## How does it compare to other libraries?

  * [Neat-interpolation](https://hackage.haskell.org/package/neat-interpolation)
    exposes the same functionality but only in an interpolating quasi quoter.
    This means that you can't easily use it in your own quoters.
  * [raw-strings-qq](https://hackage.haskell.org/package/raw-strings-qq-1.1)
    gives quasi quoters to express multi-line strings, but they don't do any
    trimming.
description-type: markdown
hash: b338a43850b182399eed7effb561d24a577dd839e3d7bc15c215ad560a795847
homepage: https://github.com/gregorias/trimdent#readme
latest: 0.1.0.0
license-name: AGPL-3.0-only
maintainer: grzegorzmilka@gmail.com
synopsis: A utility for neat multiline string trimming
test-bench-deps:
  base: '>=4.13 && <5'
  doctest: '>=0'
  hspec: '>=0'
  hspec-expectations-pretty-diff: '>=0'
  raw-strings-qq: '>=0'
  trimdent: '>=0'
