all-versions:
- 0.1.1
- 0.1.2
- 0.2.0
- 0.2.1
- 0.2.2
- 0.2.3
- 0.2.4
- 0.3.0.0
- 0.4.0.0
- 0.4.0.1
- 0.5.0.0
- 0.5.0.1
- 0.5.1.0
- 0.5.1.1
- 0.5.2
- 0.5.2.1
- 0.5.3
- 0.6.0
- 0.6.0.1
- 0.6.1
- 0.7.0
- 0.7.0.1
- 0.8.0
- 0.8.1
- 0.8.1.1
- 0.8.2
- 0.10.0
- 0.10.1
- 0.10.2
- 0.10.2.1
- 0.11.0
- 0.11.0.1
- 0.11.1
- 0.12.0
- 0.13.0
- 0.13.0.1
- 0.13.0.2
- 0.13.0.3
- 0.13.0.4
- 0.13.0.5
- 0.13.0.6
- 0.13.1
- 0.13.1.1
- 0.13.1.2
- 0.14.0
- 0.14.0.1
- 0.14.1
- 0.14.1.1
- 0.14.1.2
- 0.14.1.3
- 0.14.1.4
- 1.0.0.0
- 1.0.1.0
- 1.0.1.1
- 1.0.1.2
- 1.0.1.3
- '1.1'
- 1.1.0.1
- 1.1.1.0
- 1.1.1.1
- 1.1.1.2
author: Doug Beardsley, Gregory Collins
basic-deps:
  aeson: '>=0.6 && <2.3'
  attoparsec: '>=0.10 && <0.15'
  base: '>=4.5 && <5'
  blaze-builder: '>=0.2 && <0.5'
  blaze-html: '>=0.4 && <0.10'
  bytestring: '>=0.9 && <0.13'
  containers: '>=0.2 && <1.0'
  directory: '>=1.1 && <1.4'
  directory-tree: '>=0.10 && <0.13'
  dlist: '>=0.5 && <1.1'
  filepath: '>=1.3 && <2'
  hashable: '>=1.1 && <2'
  indexed-traversable: '>=0.1.1 && <0.2'
  lifted-base: '>=0.2 && <0.3'
  map-syntax: '>=0.3 && <0.4'
  monad-control: '>=0.3 && <1.1'
  mtl: '>=2.0 && <2.4'
  process: '>=1.1 && <1.7'
  random: '>=1.0.1.0 && <2'
  text: '>=0.10 && <2.2'
  time: '>=1.1 && <2'
  transformers: '>=0.3 && <0.7'
  transformers-base: '>=0.4 && <0.5'
  unordered-containers: '>=0.1.4 && <0.3'
  vector: '>=0.9 && <0.14'
  xmlhtml: '>=0.2.3.5 && <0.4'
changelog: |+
  # 1.1.1.2

  * Support GHC 9.8
  * Fix broken test

  # 1.1.1.1

  * Support GHC 9.6

  # 1.1.1.0

  * Expose `lookupTemplate` and `splitTemplatePath`

  * Bump dependency bounds for 9.4

  # 1.1

  * Remove pandoc and pandocBS

  * Stop exporting readProcessWithExitCode'

  * Remove -S and --no-wrap arguments to pandoc for compatibility with both 1.x
    and 2.x versions of the pandoc command line tool

  * Bump map-syntax lower bound to fix 8.4 build problem

  # 1.0.1.3

  * Add Semigroup instances to support GHC 8.4

  # 1.0.1.0

  * Change benchmark from an executable section to a benchmark section in the
    cabal file.  This eliminates the criterion dependency when doing "cabal
    install heist".
  * Export manyWith

  # 1.0.0.1

  * Drop the dependency on `errors` packages from heist testsuite and benchmark
  * Fix nested splice namespace warning bug (issue #85)

  # 1.0.0.0

  * Switch from MonadCatchIO-transformers to monad-control for Snap 1.0

  # 0.14.0

  See http://snapframework.com/blog/2014/09/24/heist-0.14-released

  * Add namespace support (hcNamespace and hcErrorNotBound)
  * Add tellSpliceError for generalized error reporting
  * Restructured HeistConfig, export lenses instead of field accessors
  * Moved old HeistConfig into SpliceConfig
  * Factored SpliceAPI module out into separate map-syntax package

  # 0.13.0

  See http://snapframework.com/blog/2013/09/09/snap-0.13-released

  * Simpler compiled splice API
  * New splice syntax

changelog-type: markdown
description: "# Heist\n\n[![GitHub CI](https://github.com/snapframework/heist/workflows/CI/badge.svg)](https://github.com/snapframework/heist/actions)\n\nHeist,
  part of the [Snap Framework](http://www.snapframework.com/), is a\nHaskell library
  for xml/html templating. It uses simple XML tags to bind\nvalues to your templates
  in a straightforward way. For example, if you were to\nput the following in a template:\n\n
  \   <bind tag=\"message\">some text</bind>\n    <p><message/></p>\n\nthe resulting
  xhtml would be\n\n    <p>some text</p>\n\nLikewise, if you need to add text to an
  attribute,\n\n    <bind tag=\"special\">special-id</bind>\n    <div id=\"${special}\">very
  special</div>\n\ngives you\n\n    <div id=\"special-id\">very special</div>\n\nValues
  can also be pulled from \"Splices\" (see \n[the documentation](http://snapframework.com/docs/tutorials/heist#heist-programming)
  \nfor more information.)\n\n## Building heist\n\nThe heist library is built using
  [Cabal](http://www.haskell.org/cabal/) and\n[Hackage](http://hackage.haskell.org/packages/hackage.html).
  Just run\n\n    cabal install\n\nfrom the `heist` toplevel directory.\n\n\n## Building
  the Haddock Documentation\n\nThe haddock documentation can be built using the supplied
  `haddock.sh` shell\nscript:\n\n    ./haddock.sh\n\nThe docs get put in `dist/doc/html/`.\n\n\n##
  Building the testsuite\n\nTo build the test suite, `cd` into the `test/` directory
  and run\n\n    $ cabal configure\n    $ cabal build\n\nFrom here you can invoke
  the testsuite by running:\n\n    $ ./runTestsAndCoverage.sh \n\nThe testsuite generates
  an `hpc` test coverage report in `test/dist/hpc`.\n"
description-type: markdown
hash: 6a0efab755b93aabf338533c7bc3fafd95afb03625c6ffceb2137aa8e3864b84
homepage: http://snapframework.com/
latest: 1.1.1.2
license-name: BSD-3-Clause
maintainer: snap@snapframework.com
synopsis: An Haskell template system supporting both HTML5 and XML.
test-bench-deps:
  HUnit: '>=1.2 && <2'
  QuickCheck: '>=2 && <2.16'
  aeson: '>=0'
  attoparsec: '>=0'
  base: '>=4.5 && <5'
  bifunctors: '>=5.3 && <5.7'
  blaze-builder: '>=0'
  blaze-html: '>=0'
  bytestring: '>=0'
  containers: '>=0'
  criterion: '>=1.0'
  criterion-measurement: '>=0.1'
  directory: '>=0'
  directory-tree: '>=0'
  dlist: '>=0'
  filepath: '>=0'
  hashable: '>=0'
  indexed-traversable: '>=0'
  lens: '>=4.3 && <5.4'
  lifted-base: '>=0'
  map-syntax: '>=0'
  monad-control: '>=0'
  mtl: '>=0'
  process: '>=0'
  random: '>=0'
  statistics: '>=0.11'
  test-framework: '>=0.4 && <0.9'
  test-framework-hunit: '>=0.2.7 && <0.4'
  test-framework-quickcheck2: '>=0.2.12.1 && <0.4'
  text: '>=0'
  time: '>=0'
  transformers: '>=0'
  transformers-base: '>=0'
  unordered-containers: '>=0'
  vector: '>=0'
  xmlhtml: '>=0'
