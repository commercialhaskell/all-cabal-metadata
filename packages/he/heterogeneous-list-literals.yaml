all-versions:
- 0.1.0.1
- 0.2.0.0
author: David Millar-Durrant
basic-deps:
  Only: '>=0.1 && <0.2'
  base: '>=4.9 && <4.12'
changelog: ''
changelog-type: markdown
description: |-
  This is an incredibly simple library, which makes writing literals for heterogeneous collections easy

  If you write a function with the signature

  > hList :: HLL input output => input -> HList output
  then

  > a :: HList '[]
  > a = hList ()
  >
  > b :: HList '[Bool]
  > b = hList (Only True)
  >
  > c :: HList '[Bool, Int, Double, String]
  > c = hList (True, 24, 10.5, "Fire")

  The full code is in test\/Docs.hs

  This only supports literals of length up to 20, though that can be easily extended using the code generator in src\/Data\/HeterogeneousListLiterals
description-type: haddock
hash: 7a2911b00d3a316cbe5d254fbdbed12b1576db431c9db41345b80049a7937607
homepage: https://github.com/davidm-d/heterogeneous-list-literals
latest: 0.2.0.0
license-name: BSD-3-Clause
maintainer: dmillardurrant@gmail.com
synopsis: Allows the use of tuples as literals for Heterogeneous collections
test-bench-deps:
  base: '>=0'
  heterogeneous-list-literals: '>=0'
