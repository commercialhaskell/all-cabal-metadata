all-versions:
- 0.1.0.0
- 0.1.1.0
- 0.1.2.0
- 0.1.3.0
- 0.2.0.0
- 0.2.1.0
- 0.2.1.1
- 0.2.2.0
- 0.2.2.1
- 0.3.0.0
- 0.3.1.0
- 0.3.2.0
- 0.4.0.0
- 0.4.1.0
- 0.4.2.0
- 0.4.3.0
author: Vaclav Svejcar
basic-deps:
  aeson: '>=0'
  base: '>=4.7 && <5'
  either: '>=0'
  extra: '>=0'
  file-embed: '>=0'
  generic-data: '>=0'
  headroom: '>=0'
  http-client: '>=0'
  http-types: '>=0'
  microlens: '>=0'
  microlens-aeson: '>=0'
  microlens-th: '>=0'
  modern-uri: '>=0'
  mtl: '>=0'
  mustache: '>=0'
  optparse-applicative: '>=0'
  pcre-heavy: '>=0'
  pcre-light: '>=0'
  persistent: '>=0'
  persistent-sqlite: '>=0'
  req: '>=0'
  rio: '>=0'
  string-interpolate: '>=0'
  template-haskell: '>=0'
  time: '>=0'
  vcs-ignore: '>=0'
  yaml: '>=0'
changelog: |
  # Changelog
  All notable changes to this project will be documented in this file.

  ## 0.4.3.0 (released 2022-01-20)
  - [#78] Check automatically for Headroom updates
  - [#81] Add support for _PHP_ language
  - [#83] FIXED: _Update Copyright_ post-processor incorrectly changes years in some cases
  - [#84] Add support for _Dart_ language
  - [#85] Add support for _Kotlin_ language
  - Bump _LTS Haskell_ to `18.22`

  ## 0.4.2.0 (released 2021-07-01)
  - [#42] Add option to exclude source paths ignored by VCS
  - [#66] Allow loading templates from HTTP(S) resource
  - Bump _LTS Haskell_ to `18.0`

  ## 0.4.1.0 (released 2021-03-14)
  - [#69] Improve console output
  - [#71] Add support for _Go_ language
  - [#72] FIXED: Headroom doctest not passing with hashable-1.3.1.0

  ## 0.4.0.0 (released 2021-03-04)
  - [#57] FIXED: put-before/put-after in commented code breaks header detection
  - [#58] BREAKING CHANGE: Extend configuration for defining header margins
  - [#59] Check compatibility of loaded YAML configuration
  - [#61] BREAKING CHANGE: Use regular expressions to specify headers start/end
  - [#62] Sanitize block comment headers with line prefixes
  - [#64] Add command line option for displaying version
  - Bump _LTS Haskell_ to `17.5`

  ## 0.3.2.0 (released 2020-11-26)
  - [#56] Move CI from Travis to GitHub Actions
  - Minor improvements & bugfixes
  - Bump _LTS Haskell_ to `16.23`

  ## 0.3.1.0 (released 2020-08-18)
  - [#48] Decouple IO actions for easier testing
  - [#53] Add support for _PureScript_ source code files
  - [#54] Extract _dynamic variables_ from _Java_ source code files
  - Bump _LTS Haskell_ to `16.10`

  ## 0.3.0.0 (released 2020-06-28)
  - [#25] Extract _dynamic variables_ from Haskell source code files
  - [#29] Add _dynamic variable_ for current year and add support for updating years
  - [#30] Allow workflow without configuration and template files
  - [#49] Microsite for documentation ([https://doc.norcane.com/headroom/latest/](https://doc.norcane.com/headroom/latest/))
  - [#51] Allow template variable values to be templates itself
  - [#52] Post-processing functions for _license headers_
  - Various bugfixes and performance improvements
  - Bump _LTS Haskell_ to `16.2`

  ## 0.2.2.1 (released 2020-05-08)
  - Minor improves in generated `.headroom.yaml` in `init` mode

  ## 0.2.2.0 (released 2020-05-04)
  - [#45] Add `-c|--check-headers` command line option
  - Bump _LTS Haskell_ to `15.11`

  ## 0.2.1.1 (released 2020-04-30)
  - [#47] Make possible to build Headroom with GHC 8.10
  - Remove unused dependency on `text` package.

  ## 0.2.1.0 (released 2020-04-29)
  - [#41] Add `--dry-run` option to allow test run without changing files.
  - [#44] Don't touch files whose contents have not changed.
  - [#46] Add `-e|--excluded-path=REGEX` option to exclude source paths.
  - Bump _LTS Haskell_ to `15.10`.
  - Remove unused dependencies.

  ## 0.2.0.0 (released 2020-04-25)
  - [#28] Allow license headers to be anywhere in the file, not only at the very beginning.
  - [#31] Render templates for each source file instead of once (blocker for [#25])
  - [#32] Allow custom user configuration for license headers.
  - [#34] Support for [Rust](https://www.rust-lang.org/)
  - [#35] Support for [Bash](https://www.gnu.org/software/bash/)
  - [#36] Support for _C/C++_
  - [#38] Add `-a|--add-headers` command-line option
  - bump _LTS Haskell_ to `15.9`

  ## 0.1.3.0 (released 2020-03-23)
  - [#24] Added _Init_ command that automatically creates initial _Headroom_ configuration and set of templates.
  - bump _LTS Haskell_ to `15.5`

  ## 0.1.2.0 (released 2020-03-06)
  - FIXED: missing `test-data/` folder in dist tarball prevents tests execution
  - bump _LTS Haskell_ to `15.2`

  ## 0.1.1.0 (released 2020-02-26)
  - FIXED: missing `embedded/` folder in dist tarball for _Hackage_ prevents successful build using _Cabal_
  - bump _LTS Haskell_ to `15.1`

  ## 0.1.0.0 (released 2020-02-20)
  - initial release
changelog-type: markdown
description: |
  Would you like to have nice, up-to-date license/copyright headers in your source code files but hate to manage them manually? Then __Headroom__ is the right tool for you. Define your license header as [Mustache][web:mustache] template, put any template variables into [YAML][wiki:yaml] configuarion file, and you're ready to go!

  __Headroom__ also offers much more than just [adding, replacing or dropping][doc:running-headroom] license headers. It can also [update years in copyrights][doc:post-processing] for you, provides [content-aware templates][doc:templates] for some source code file types, and much more!

  ## Main Features
  - __License Header Management__ - [Add, replace or drop license headers][doc:running-headroom] in your source code files with a single command. What's more, contrary to many similar tools, _Headroom_ allows you to also replace/drop headers that weren't previously generated by _Headroom_, using smart header auto-detection.
  - __Powerful Customization__ - Default [configuration][doc:configuration] should cover most use-cases, but if you need to put empty lines before/after generated header, use different comment style of headers, you can customize the configuration to match exactly your needs.
  - __Built-in OSS License Headers__ - If you want to use license header for one of the popular OSS licenses, then __Headroom__ can [generate them for you][doc:running-headroom#gen-command] - no need to search for them on web.
  - __Automatic Initialization for OSS Projects__ - Setting up external tools like _Headroom_ for your project can be boring. Fortunately, _Headroom_ can [initialize itself][doc:running-headroom#init-command] for your project, by generating configuration file and template files.
  - __Content-aware Templates__ - for selected file types, _Headroom_ [exposes additional info][doc:templates] about processed file using template variables, so you can use info like _Java_ package name in your templates.
  - __Copyright Year Updater__ - _Headroom_ is good not only for basic license header management, but also for further processing of generated headers. Do you need to [update years in your copyrights][doc:post-processing]? No problem!

  ## Installation
  You can get _Headroom_ via one of the following options:
  1. download pre-built binary for _GNU/Linux_ or _macOS_ (x64) from [releases page][meta:releases]
  1. install using [Homebrew][web:homebrew]: `brew install norcane/tools/headroom`
  1. build from source code - see [project microsite][web:headroom] for more details

  ## Adopters
  Here is the list of projects using _Headroom_. If you're using _Headroom_ and aren't on the list, feel free to [submit new issue][meta:new-issue] or [pull request][meta:pulls].

  - [kowainik/hit-on](https://github.com/kowainik/hit-on) - Kowainik Git Workflow Helper Tool
  - [kowainik/summoner](https://github.com/kowainik/summoner) - Tool for scaffolding batteries-included production-level Haskell projects
  - [wireapp/wire-server](https://github.com/wireapp/wire-server) - Wire back-end services (https://wire.com)

  ## Mentions
  - [Bind The Gap magazine, issue #2](https://bindthegap.news/issues/02dec2020.html) has chapter dedicated to _Headroom_ (pages _17-18_).

  ## Documentation
  * for end-user documentation, [official project microsite][web:headroom]
  * for _Haskell API_ documentation, see [Headroom on Hackage][hackage:headroom]

  ### Running microsite locally
  If you need to show microsite documetation for unreleased version of _Headroom_ (e.g. for `master` branch), you can run it locally using [MkDocs][web:mkdocs] tool:

  ```
  $ cd doc/microsite/
  $ mkdcs serve
  ```

  Documentation is then available on http://127.0.0.1:8000.

  [i25]: https://github.com/vaclavsvejcar/headroom/issues/25
  [hackage:headroom]: https://hackage.haskell.org/package/headroom
  [meta:new-issue]: https://github.com/vaclavsvejcar/headroom/issues/new
  [meta:pulls]: https://github.com/vaclavsvejcar/headroom/pulls
  [meta:releases]: https://github.com/vaclavsvejcar/headroom/releases
  [web:headroom]: https://doc.norcane.com/headroom/latest/
  [web:homebrew]: https://brew.sh
  [doc:configuration]: https://doc.norcane.com/headroom/latest/documentation/configuration/
  [doc:templates]: https://doc.norcane.com/headroom/latest/documentation/templates/
  [doc:post-processing]: https://doc.norcane.com/headroom/latest/documentation/post-processing/
  [doc:running-headroom]: https://doc.norcane.com/headroom/latest/documentation/running-headroom/
  [doc:running-headroom#gen-command]: https://doc.norcane.com/headroom/latest/documentation/running-headroom/#gen-command
  [doc:running-headroom#init-command]: https://doc.norcane.com/headroom/latest/documentation/running-headroom/#init-command
  [web:mkdocs]: https://www.mkdocs.org
  [web:mustache]: https://mustache.github.io
  [wiki:yaml]: https://en.wikipedia.org/wiki/YAML
description-type: markdown
hash: 2ecf6e0b34c9654b9197d00d28a502fecc6b63c160ad3593992ea5da1f2c1717
homepage: https://github.com/vaclavsvejcar/headroom
latest: 0.4.3.0
license-name: BSD-3-Clause
maintainer: vaclav.svejcar@gmail.com
synopsis: License Header Manager
test-bench-deps:
  QuickCheck: '>=0'
  aeson: '>=0'
  base: '>=4.7 && <5'
  doctest: '>=0'
  headroom: '>=0'
  hspec: '>=0'
  modern-uri: '>=0'
  mtl: '>=0'
  optparse-applicative: '>=0'
  pcre-light: '>=0'
  rio: '>=0'
  string-interpolate: '>=0'
  time: '>=0'
