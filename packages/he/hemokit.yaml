all-versions:
- 0.4.0
- 0.4.1
- 0.4.2
- '0.5'
- 0.5.1
- 0.6.0
- 0.6.1
- 0.6.2
- 0.6.3
- 0.6.4
- 0.6.5
- 0.6.6
author: Niklas Hambüchen <mail@nh2.me>, Patrick Chilton <chpatrick@gmail.com>
basic-deps:
  aeson: '>=0.6.1.0'
  base: '>=4 && <5'
  base64-bytestring: '>=1.0.0.1'
  bytestring: '>=0.9.2.1'
  cairo: '>=0.12.4'
  cipher-aes: '>=0.2.0'
  conduit: '>=1'
  deepseq: '>=1.2'
  deepseq-generics: '>=0.1'
  gtk: '>=0.12.4'
  hemokit: '>=0'
  hidapi: '>=0.1.2'
  mtl: '>=2.1.2'
  network-simple: '>=0.4.0.2'
  optparse-applicative: '>=0.11'
  pretty-show: '>=1.0'
  robot: '>=1.3.0.1'
  split: '>=0.2.2'
  svgcairo: '>=0.12.1.1'
  text: '>=0.11.1.1'
  time: '>=1.4'
  transformers: '>=0.3.0.0'
  vector: '>=0.9'
  vector-fftw: '>=0.1.3.1'
  websockets: '>=0.8.0.0'
changelog: ''
changelog-type: ''
description: |
  hemokit
  =======

  Haskell library and tool suite for the [Emotiv](http://emotiv.com) Epoc EEG, inspired by the [Emokit](https://github.com/openyou/emokit) code.

  It currently only works on Linux and Windows - patches for other platforms are welcome, they should be trivial.


  Download
  --------

  You can download [pre-built binaries here](https://github.com/nh2/hemokit/releases), or build it yourself via [`cabal install hemokit`](http://hackage.haskell.org/package/hemokit).


  Library Features
  ----------------

  * device discovery via [hidapi](https://github.com/vahokif/haskell-hidapi)
  * decryption of the raw data (one-to-one port from from Emokit)
  * convenient access to sensor values, gyro, qualities, battery, and raw data


  Programs
  --------

  Hemokit comes with example programs to

  * `hemokit-dump` print out the current EEG data
  * `hemokit-mouse` move the cursor using the gyro

  Note that we have to use `sudo` in most of the cases because the HIDAP-hidraw implementation reads directly from a device file.


  hemokit-dump - Examples
  -----------------------

  *hemokit-dump* can print EEG data, format it as JSON, serve it via TCP or Websockets, and read from real devices and dump files.


  * Output EEG *cumulative state* for an automatically found device:

    ```bash
    sudo hemokit-dump
    ```

  * Select one of many connected EEGs by serial number:

    ```bash
    sudo hemokit-dump --serial SN...GM
    ```

  * Output only the data the device sends (no cumulative state), and format the output as JSON:

    ```bash
    sudo hemokit-dump --mode packets --format json
    ```

    The `--format` flag allows you to change the way the output is printed.
    The output of `--mode state --format spaced` is especially easy to work with.

  * Instead of from a real device, read data recorded to a file, and serve it via JSON over a TCP server on port `1234`:

    ```bash
    sudo cat /dev/hidraw1 > encrypted.dump  # Dump data to a file
    sudo hemokit-dump --from-file encrypted.dump --serial SN...GM --serve 0.0.0.0:1234 --format json
    ```

    Here you **have** to specify the serial since HIDAPI is not used to obtain it automatically.

    If you prefer a Websockets server over a raw TCP server, use `ws://0.0.0.0:1234` instead.

  * Output decrypted raw data to stdout:

    ```bash
    sudo hemokit-dump --mode raw
    ```

  * Both print the data from the EEG **and** store the original data for later use:

    ```bash
    sudo cat /dev/hidraw1 | tee >(hemokit-dump --from-file - --serial SN...GM --format json) > encrypted.dump
    ```

    We use `tee` and shell process substitution to duplicate the data stream, and tell *hemokit-dump* to read from `-` (stdin).


  Connecting with other Programs
  ------------------------------

  * To use Hemokit as a data source from [OpenVibe](http://openvibe.inria.fr/), check out the corresponding entry in the [Wiki](https://github.com/nh2/hemokit/wiki)
  * To read Hemokit data from Matlab, I recommend publishing the data on a local socket in text format using `hemokit-dump --format spaced --serve 127.0.0.1:1234`. Then you can read it with code like:

  ```matlab
  t = tcpip('127.0.0.1', 1234);
  fopen(t)
  data = fscanf(t, '%d');
  ```
description-type: markdown
hash: 8fff13133b762d1655c52dc4410340a4213c236e1737bedb1e71484fc3f76c6e
homepage: https://github.com/nh2/hemokit
latest: 0.6.6
license-name: MIT
maintainer: Niklas Hambüchen <mail@nh2.me>
synopsis: Haskell port of the Emokit EEG project
test-bench-deps:
  HUnit: '>=1.2'
  base: '>=0'
  bytestring: '>=0.9.2.1'
  conduit: '>=0'
  criterion: '>=0.8.0.0'
  hemokit: '>=0'
  hspec: '>=1.8.3'
  mtl: '>=0'
  vector: '>=0.9'
