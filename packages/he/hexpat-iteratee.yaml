all-versions:
- '0.1'
- '0.2'
- '0.3'
- '0.4'
- '0.5'
- '0.6'
author: Stephen Blackheath (blackh)
basic-deps:
  List: '>=0.4'
  base: '>=3 && <5'
  bytestring: '>=0'
  containers: '>=0'
  extensible-exceptions: '>=0.1 && <0.2'
  hexpat: '>=0.18'
  iteratee: '>=0.3 && <0.4'
  parallel: '>=0'
  transformers: '>=0'
changelog: ''
changelog-type: ''
description: |-
  This package provides chunked XML parsing using iteratees.  It is especially suited
  to implementing XML-based socket protocols, but is useful wherever lazy parsing is
  needed on production systems where you can't tolerate the problems that come with
  Haskell's lazy I\/O.

  The XML is presented as a lazy tree, and is processed by a handler implemented using
  a monad transformer called XMLT.  The resulting monad is suspended whenever it tries
  to read a part of the tree that hasn't been parsed yet, and continued as soon as it
  is available.
  The resulting code looks and functions very much as if you were using lazy I\/O,
  only without the associated problems. Your handlers can have effects, yet they
  come out in quite a functional style.

  Background:  Haskell's lazy I\/O can be problematic in some applications because it
  doesn't handle I\/O errors properly, and you can't predict when it will clean up its
  resources, which could result in file handles running out.
description-type: haddock
hash: b3df8f2670a0b3f00c31ffd4d8e6fd92979cac680b878d964694b52703b0de32
homepage: http://haskell.org/haskellwiki/Hexpat/
latest: '0.6'
license-name: BSD-3-Clause
maintainer: http://blacksapphire.com/antispam/
synopsis: Chunked XML parsing using iteratees
test-bench-deps: {}
