homepage: https://github.com/alt-romes/hegg
changelog-type: markdown
hash: 4c16ecdec12c585ca5b9ad9abf1479048d311941b9f8a3225f9dd0cf978163a7
test-bench-deps:
  base: '>=4.4 && <5'
  deriving-compat: '>=0.6 && <0.7'
  containers: '>=0.4 && <0.7'
  hegg: '>=0.1 && <0.2'
  tasty-quickcheck: '>=0.10 && <0.11'
  tasty-hunit: '>=0.10 && <0.11'
  tasty: '>=1.4 && <1.5'
maintainer: Rodrigo Mesquita <rodrigo.m.mesquita@gmail.com>
synopsis: Fast equality saturation in Haskell
changelog: |
  # Revision history for hsym

  ## 0.1.0.0 -- YYYY-mm-dd

  * First version. Released on an unsuspecting world.
basic-deps:
  base: '>=4.4 && <5'
  containers: '>=0.4 && <0.7'
  transformers: '>=0.4 && <0.7'
all-versions:
- 0.1.0.0
author: Rodrigo Mesquita <romes>
latest: 0.1.0.0
description-type: haddock
description: |-
  Fast equality saturation and equality graphs based on "egg:
  Fast and Extensible Equality Saturation" and "Relational E-matching".

  This package provides e-graphs (see 'Data.Equality.Graph'),
  a data structure which efficiently represents a congruence
  relation over many expressions

  Secondly, it provides functions for doing equality
  saturation (see 'Data.Equality.Saturation'), an
  optimization/term-rewriting technique that applies rewrite
  rules non-destructively to an expression represented in an
  e-graph until saturation, and then extracts the best
  representation.

  Equality matching (see 'Data.Equality.Matching') is done as
  described in "Relational E-Matching"

  For a walkthrough of writing a simple symbolic
  simplification program see the [hegg symbolic
  tutorial](https://github.com/alt-romes/hegg#equality-saturation-in-haskell).

  Additional information can be found [in the README](https://github.com/alt-romes/hegg).
license-name: BSD-3-Clause
