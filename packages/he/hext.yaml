all-versions:
- 0.1.0.0
- 0.1.0.1
- 0.1.0.2
- 0.1.0.3
- 0.1.0.4
author: David Anekstein
basic-deps:
  base: '>=4.7 && <5'
  containers: '>=0'
  hext: '>=0'
  text: '>=0'
  unordered-containers: '>=0'
changelog: ''
changelog-type: ''
description: "# hext\nThis is currently the beginning of a text classification library.\n\n##Installation/Running\n```stack
  install hext```\n  \nhackage - https://hackage.haskell.org/package/hext-0.1.0.3\n\nTo
  run:  \n```stack build```  \n```stack exec hext-exe```\n\n##Usage\n  \nCurrently,
  the only algorithm implementation is the Naive Bayes algorithm:\nto run your own
  data through this algorithm in order to classify your text, you need:\n- classified
  data: this can be sourced from a database where the only fields that are needed
  are the text itself, and it's class\n- a sample string which will be classified
  by the algorithm\n\nIn order to run the program, the classified data specified above
  must be converted into a ```BayesModel a``` using the ```teach``` function, where
  ```a``` is your own defined data type representing the class to classify your text.
  Your class must be and instance of ```Ord``` and ```Eq```.\n\nWith your new ```BayesModel```
  filled with knowledge, it's time to classify your text using ```runBayes```. An
  example of this can be seen in ```app/Main.hs``` where ```data Class = Positive
  | Negative deriving (Eq, Ord, Show)``` to label movie reviews as either positive
  or negative.\n\n##Contributing\n  \nI encourage contributing to this package, in
  the form of implementing algorithms that are not yet in the project, improving efficiency,
  or the like.\n"
description-type: markdown
hash: 030d937b1ea82372a2e3fa6b5b1cad845c25f4411cf6b1f9368d10b6cdea51ef
homepage: https://github.com/aneksteind/hext#readme
latest: 0.1.0.4
license-name: BSD-3-Clause
maintainer: aneksteind@gmail.com
synopsis: a text classification library
test-bench-deps: {}
