all-versions:
- 1.2.0.0
- 1.2.1.0
author: Doug Beardsley, Gregory Collins
basic-deps:
  aeson: '>=0.6 && <2.1'
  attoparsec: '>=0.10 && <0.14'
  base: '>=4.5 && <4.15'
  blaze-builder: '>=0.2 && <0.5'
  blaze-html: '>=0.4 && <0.10'
  bytestring: '>=0.9 && <0.11'
  containers: '>=0.2 && <0.7'
  directory: '>=1.1 && <1.4'
  directory-tree: '>=0.10 && <0.13'
  dlist: '>=0.5 && <0.9'
  filepath: '>=1.3 && <1.5'
  hashable: '>=1.1 && <1.4'
  indexed-traversable: '>=0'
  lifted-base: '>=0.2 && <0.3'
  map-syntax: '>=0.3 && <0.4'
  monad-control: '>=0.3 && <1.1'
  mtl: '>=2.0 && <2.3'
  process: '>=1.1 && <1.7'
  random: '>=1.0.1.0 && <1.3'
  text: '>=0.10 && <1.3'
  time: '>=1.1 && <1.11'
  transformers: '>=0.3 && <0.6'
  transformers-base: '>=0.4 && <0.5'
  unordered-containers: '>=0.1.4 && <0.3'
  vector: '>=0.9 && <0.13'
  xmlhtml: '>=0.2.3.5 && <0.3'
changelog: ''
changelog-type: ''
description: "# Heist\n\n[![Build Status](https://travis-ci.org/snapframework/heist.svg?branch=master)](https://travis-ci.org/snapframework/heist)\n\n!!!\nThis
  is a fork of `heist` released to Hackage, with [this PR](https://github.com/snapframework/heist/pull/130)
  applied on top of upstream master.\n!!!\n\nHeist, part of the [Snap Framework](http://www.snapframework.com/),
  is a\nHaskell library for xml/html templating. It uses simple XML tags to bind\nvalues
  to your templates in a straightforward way. For example, if you were to\nput the
  following in a template:\n\n    <bind tag=\"message\">some text</bind>\n    <p><message/></p>\n\nthe
  resulting xhtml would be\n\n    <p>some text</p>\n\nLikewise, if you need to add
  text to an attribute,\n\n    <bind tag=\"special\">special-id</bind>\n    <div id=\"${special}\">very
  special</div>\n\ngives you\n\n    <div id=\"special-id\">very special</div>\n\nValues
  can also be pulled from \"Splices\" (see \n[the documentation](http://snapframework.com/docs/tutorials/heist#heist-programming)
  \nfor more information.)\n\n## Building heist\n\nThe heist library is built using
  [Cabal](http://www.haskell.org/cabal/) and\n[Hackage](http://hackage.haskell.org/packages/hackage.html).
  Just run\n\n    cabal install\n\nfrom the `heist` toplevel directory.\n\n\n## Building
  the Haddock Documentation\n\nThe haddock documentation can be built using the supplied
  `haddock.sh` shell\nscript:\n\n    ./haddock.sh\n\nThe docs get put in `dist/doc/html/`.\n\n\n##
  Building the testsuite\n\nTo build the test suite, `cd` into the `test/` directory
  and run\n\n    $ cabal configure\n    $ cabal build\n\nFrom here you can invoke
  the testsuite by running:\n\n    $ ./runTestsAndCoverage.sh \n\nThe testsuite generates
  an `hpc` test coverage report in `test/dist/hpc`.\n"
description-type: markdown
hash: 071c9cd08ac394cc9f7f3c857b10c79ce228fbc3108475bc3b0199bf1e9dde2b
homepage: http://snapframework.com/
latest: 1.2.1.0
license-name: BSD-3-Clause
maintainer: snap@snapframework.com
synopsis: An Haskell template system supporting both HTML5 and XML.
test-bench-deps:
  HUnit: '>=1.2 && <2'
  QuickCheck: '>=2 && <2.15'
  aeson: '>=0'
  attoparsec: '>=0'
  base: '>=0'
  bifunctors: '>=5.3 && <5.6'
  blaze-builder: '>=0'
  blaze-html: '>=0'
  bytestring: '>=0'
  containers: '>=0'
  criterion: '>=1.0 && <1.6'
  criterion-measurement: '>=0.1 && <0.2'
  directory: '>=0'
  directory-tree: '>=0'
  dlist: '>=0'
  filepath: '>=0'
  hashable: '>=0'
  indexed-traversable: '>=0'
  lens: '>=4.3 && <4.20'
  lifted-base: '>=0'
  map-syntax: '>=0'
  monad-control: '>=0'
  mtl: '>=0'
  process: '>=0'
  random: '>=0'
  statistics: '>=0.11 && <0.16'
  test-framework: '>=0.4 && <0.9'
  test-framework-hunit: '>=0.2.7 && <0.4'
  test-framework-quickcheck2: '>=0.2.12.1 && <0.4'
  text: '>=0'
  time: '>=0'
  transformers: '>=0'
  transformers-base: '>=0'
  unordered-containers: '>=0'
  vector: '>=0'
  xmlhtml: '>=0'
