all-versions:
- 0.0.1
- 0.0.2
- 0.0.3
- 1.0.0
author: Aleksey Uimanov
basic-deps:
  aeson: '>=0'
  base: '>=4.6 && <5'
  bytestring: '>=0'
  hedis: '>=0.9.12'
  scientific: '>=0'
  text: '>=0'
  time: '>=0'
changelog: |
  # CHANGELOG

  ## 1.0.0
  ### Changed
  * Compatibility with `hedis >= 0.9.12`
  * Not compatible with `hedis < 0.9.12`
  ### Added
  * Connection timeout parameter: `timeout`

  ## 0.0.3
  ### Changed
  * Empty password string will be nullified. Redis counts empty `AUTH` command as
    error when no password is set.

  ## 0.0.2
  ### Changed
  * relaxed upper base version constraints to `< 5`

  ## 0.0.1
  First working version
changelog-type: markdown
description: |
  # How

  Just copy this

  ```yaml
  host: localhost                 # host name or address
  port: 6379                      # you can specify either port
  # socket: /run/redis.socket     # or unix socket path
  # service: redis                # or service name
  password: "pass"                # if not specified then no password used
  database: 0                     # database number to connect to
  max-connections: 5              # max connections in pool
  max-idle-time: 30               # keep connection open for 30 seconds
  timeout: 30                     # connection timeout
  ```

  to your config file, then

  ```haskell
  import Data.Yaml
  import Database.Redis.Config

  main :: IO ()
  main = do
      conn <- decodeFile "config/redis.yml" >>= \case
          Nothing -> fail "Could not parse redis.conf"
          Just conf -> connectRedis conf
      run conn
  ```

  Thats all, you already working with Redis connection
description-type: markdown
hash: 3b243e616cbe10f70b2d76caeabc0edad327987118d0ba3a3b1fe0fd26be03d4
homepage: https://bitbucket.org/s9gf4ult/hedis-config
latest: 1.0.0
license-name: BSD-3-Clause
maintainer: s9gf4ult@gmail.com
synopsis: Easy trivial configuration for Redis
test-bench-deps: {}
