all-versions:
- 0.1.0.0
- 0.1.1
author: Mike Izbicki
basic-deps:
  base: '>=4.8 && <4.9'
  template-haskell: '>=2.10 && <2.11'
changelog: ''
changelog-type: ''
description: |-
  This package introduces the @ifCxt@ function,
  which lets your write if statements that depend on a polymorphic variable's class instances.
  For example, we can make a version of 'show' that can be called on any type:

  > cxtShow :: forall a. IfCxt (Show a) => a -> String
  > cxtShow a = ifCxt (Proxy::Proxy (Show a))
  >     (show a)
  >     "<<unshowable>>"
  Running this function in ghci, we get:

  >>> cxtShow (1 :: Int)
  "1"

  >>> cxtShow (id :: a -> a)
  "<<unshowable>>"

  See the project webpage http://github.com/mikeizbicki/ifcxt for more details.
description-type: haddock
hash: 72155ed271b79424d2e066fbeee3eb10ce8136f1427a76151a372e8eeba33f17
homepage: http://github.com/mikeizbicki/ifcxt
latest: 0.1.1
license-name: BSD-3-Clause
maintainer: mike@izbicki.me
synopsis: put if statements within type constraints
test-bench-deps:
  QuickCheck: '>=0'
  base: '>=4.8'
  ifcxt: '>=0'
  tasty: '>=0.7'
  tasty-quickcheck: '>=0'
