homepage: https://github.com/ucla-pls/jvm-binary#readme
changelog-type: markdown
hash: 749932b0bc0e3e8deb731f375b2f4d03512d581c4066414ba98f48ae9bd1f2e9
test-bench-deps:
  zip-archive: -any
  bytestring: -any
  hspec-expectations-pretty-diff: -any
  base: '>=4.9 && <4.15'
  deriving-compat: -any
  hspec: '>=2.5.5'
  text: -any
  jvm-binary: -any
  filepath: -any
  criterion: -any
  doctest: -any
  containers: -any
  binary: -any
  generic-random: -any
  mtl: -any
  data-binary-ieee754: -any
  attoparsec: -any
  deepseq: '>=1.4.3.0'
  QuickCheck: -any
  hspec-discover: -any
  template-haskell: -any
  vector: -any
  directory: -any
maintainer: Christian Gram Kalhauge <kalhauge@cs.ucla.edu>
synopsis: A library for reading Java class-files
changelog: "# Change log\n\n## Version 0.9.1\n- Upgrade to GHC 8.10.4\n\n## Version
  0.9.0\n- Changed attributeError to evolveError\n- Added new instruction NewArray
  to correctly model array behaviour\n- Massive rewrite of AbsMethodId and friends
  to make them easier to \n  work with\n- Changed ClassType in Signature to contain
  the inner classes in \n  the correct order.\n- Fixed problem with defintion of TypedAnnotations\n-
  Fixed spelling mistake in TypeParameter\n- Added MethodParameters\n- Made more Annotations
  Ord'able and exported them fully\n- Make some data types into newtypes\n\n## Version
  0.8.1\n- Made all tests work with nix\n\n## Version 0.8.0 \n-  Upgrade to GHC 8.6.4\n\n##
  Version 0.7.0 \n- Create instances for InClass\n- Fixed bad encoding of VerificationTypeInfo\n\n##
  Version 0.6.1\n- Fix a mistake in anewarray\n\n## Version 0.6.0\n- Add Annotations\n\n##
  Version 0.5.0\n- Reintroduce AbsVariableMethodId\n- Small cleanups\n\n## Version
  0.4.0\n\n- Add Offsets to ByteCode\n- Small other changes\n\n## Version 0.3.0\n\n-
  Change API of TypeParse\n- Merge together the New* commands\n\n## Version 0.2.0\n\n-
  Add filter to evolveClassFile\n\n## Version 0.1.1\n\n- Add EnclosingMethod Attribute\n-
  Add InnerClasses Attribute\n- Add ICAccessFlag \n- Add parseing and writing of Signatures\n-
  General optimizations\n\n## Version 0.1.0 \n\n- Fix documentation\n- Remove ConstantRef\n-
  Add better method and field descriptions \n- Introducing a stageing system\n- Added
  Code writing\n- Changed Megaparsec to Attoparsec of improved performance.\n- A lot
  of extra work\n\n- Add Attributes \n  - LineNumberTable\n\n## Version 0.0.2\n\n-
  Fix problems with package.yaml file\n- Add ConstantValue \n- Add Exceptions\n- Add
  StackMapTable\n- Add BootstrapMethods\n\n## Version 0.0.1\n\nThe initial version\n\n"
basic-deps:
  bytestring: -any
  base: '>=4.9 && <4.15'
  deriving-compat: -any
  text: -any
  containers: -any
  binary: -any
  mtl: -any
  data-binary-ieee754: -any
  attoparsec: -any
  deepseq: '>=1.4.3.0'
  template-haskell: -any
  vector: -any
all-versions:
- 0.0.1
- 0.0.2
- 0.1.0
- 0.2.0
- 0.3.0
- 0.4.0
- 0.5.0
- 0.6.0
- 0.6.1
- 0.7.0
- 0.8.0
- 0.9.0
- 0.10.0
author: Christian Gram Kalhauge
latest: 0.10.0
description-type: markdown
description: "# jvm-binary\n\nA library for reading and writing Java class-files.
  To get started\nimporting the `Language.JVM` file should be sufficient for most
  uses.\n\nIf you want to access Code elements of methods it is recommended to \nimport
  `Language.JVM.Attribute.Code` qualified, like this:\n\n```haskell\nimport           Language.JVM\nimport
  qualified Language.JVM.Attribute.Code as Code\n\nimport qualified Data.ByteString.Lazy
  as BL\n\nmain :: IO ()\nmain = \n  ecfl <- readClassFile <$> BL.readFile \"test/data/project/Main.class\"
  \n  case ecfl of \n    Right clf -> do\n      print (cThisClass clf)\n      print
  (cSuperClass clf)\n    Left msg -> \n      print msg\n```\n\n## Stages\n\nThere
  are two stages in the current state of the repository. `Low` is closer\nto the class-file,
  while the `High` stage is easier to work with. The reason\nthat we have the two
  stages is that the class-file representation has indices\ninto the Constant Pool.
  The `High` stage eliminates all these problems.\n\n\n## Todo's\n\n- Add more Attributes
  as to the\n[docs](http://docs.oracle.com/javase/specs/jvms/se7/html/jvms-4.html#jvms-4.7).\n-
  Add documentation for Code\n- Setup regular benchmarks\n\n## Developing\n\nUse stack
  to build, test, and benchmark.\n\n"
license-name: MIT
