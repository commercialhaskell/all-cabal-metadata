all-versions:
- '0.1'
- '0.2'
- 0.2.0.1
- '0.3'
- 0.3.1
author: Evan Czaplicki
basic-deps:
  HTTP: '>=0'
  base: '>=4.2 && <5'
  blaze-html: '>=0'
  blaze-markup: '>=0'
  bytestring: '>=0'
  cmdargs: '>=0'
  containers: '>=0.3'
  directory: '>=1.2'
  elm-compiler: '>=0.15 && <0.16'
  filepath: '>=0'
  fsnotify: '>=0.1.0.2'
  mtl: '>=0'
  process: '>=0'
  snap-core: '>=0'
  snap-server: '>=0'
  system-filepath: '>=0'
  text: '>=0'
  time: '>=0'
  transformers: '>=0'
  unordered-containers: '>=0'
  websockets: '>=0.9 && <0.10'
  websockets-snap: '>=0.8.2.1'
changelog: ''
changelog-type: ''
description: |
  # Elm Reactor

  Interactive development tool that makes it easy to develop and debug Elm
  programs. Key features include:

    * Automatically compile any Elm program
    * [Hot-swapping][]
    * [Time travel debugging][debug]
    * Compatible with any editor

  [hot-swapping]: http://elm-lang.org/blog/Interactive-Programming.elm
  [debug]: http://debug.elm-lang.org

  This means you can get a great development experience whether you are using
  Sublime Text, emacs, vim, or whatever else to edit Elm code.

  ## Install

  Install [Elm Platform][platform]. This will install Elm Reactor and everything
  else it needs.

  [platform]: http://elm-lang.org/Install.elm

  ## Use

  Navigate to the Elm project you want to work on. A great project to get started
  with is [elm-examples][] which contains some simple programs that should be fun
  to debug.

  [elm-examples]: https://github.com/evancz/elm-examples

  In the root of your Elm project start the reactor with:

  ```bash
  elm-reactor
  ```

  Now open [http://localhost:8000](http://localhost:8000) in your browser. You
  should see a navigation page for your project.

  Click on any file to see what it looks like. For example, you can navigate to
  an Elm file and try it out. If you modify the file, you can just refresh that
  page and see the new version!

  #### Time Travel Debugging

  To use the debugger, click the small wrench next to every Elm file. This will
  start your Elm program with a control panel that lets you:

    * Pause, rewind, and continue from any point.

    * Add watches and traces to track and visualize values over time.

    * Swap in new code at any time, maintaining all recorded events.


  #### Debugging code embedded in HTML

  To use the debugger with more complex HTML or CSS, you may want to start the
  debugger from within an HTML file. This process is still improving, so *use this
  with caution*.

  In your custom HTML file, load the `/_reactor/debug.js` script.

  ```html
  <script type="text/javascript" src="/_reactor/debug.js"></script>
  ```

  That creates the `Elm.fullscreenDebug` function so you can initiate your Elm
  program with the debugger:

  ```javascript
  var main = Elm.fullscreenDebug('MyProject.Main', 'MyProject/Main.elm');
  ```

  The first argument is the name of the module you would like to debug.
  The second argument is the name of the source file for that module.
  The file name is needed so that we know which file to recompile when
  the Reactor detects that a file has changed. You may edit a dependency,
  but we always need to compile from the root file.
description-type: markdown
hash: 7e9b7040a6257bdbff793b84710149072c77a02c0b7a93d19cccc931cfebfed4
homepage: http://elm-lang.org
latest: 0.3.1
license-name: BSD-3-Clause
maintainer: info@elm-lang.org
synopsis: Interactive development tool for Elm programs
test-bench-deps: {}
