all-versions:
- 0.1.0
- 0.2.0
- 0.3.0
- 0.4.0
- 0.5.0
- 0.6.0
- 1.0.0
- 1.1.0
- 1.2.0
- 1.2.1
- 1.2.2
- 1.2.3
- 2.0.0
- 2.1.0
- 2.2.0
- 2.3.0
- 2.4.0
- 2.5.0
- 2.6.0
- 2.7.0
- 2.7.0.1
- 2.7.0.2
- 2.8.0
- 2.9.0
author: Patai Gergely
basic-deps:
  base: '>=4 && <5'
  containers: '>=0'
  transformers: '>=0'
  transformers-base: '>=0'
changelog: "2.9.0 - 160618\r\n* removed clocked variant, as it proved to be impractical\r\n*
  renamed external to unsafeExternal\r\n* introduced safe (managed) external signals\r\n*
  renamed until to till to avoid name clash with the prelude\r\n\r\n2.8.0 - 140122\r\n*
  added MonadIO and MonadBase instances for SignalGen (Mitsutoshi Aoe)\r\n\r\n2.7.0.2
  - 120401\r\n* added some inlining annotations (courtesy of Takano Akio)\r\n\r\n2.7.0.1
  - 120131\r\n* made externalMulti thread-safe (courtesy of Takano Akio)\r\n\r\n2.7.0
  - 111223\r\n* fixed an issue with nested signal creations not updating properly\r\n
  \ (courtesy of Takano Akio)\r\n* added reference implementation for the simple variant\r\n\r\n2.6.0
  - 111211\r\n* added snapshot to all variants, which allows sampling signals within\r\n
  \ signal generators\r\n\r\n2.5.0 - 111122\r\n* added SignalGen liftIO equivalent
  to assist library writers\r\n* simplified the signatures of effectful* combinators\r\n*
  updated Param to use the more modern codebase (like Simple and\r\n  Clocked); this
  was necessary to support effectful signals\r\n* temporarily removed the static optimisation
  from Param\r\n* removed dependency on mersenne-random\r\n* removed legacy branch\r\n\r\n2.4.0
  - 111111\r\n* added effectful signals to assist library writers\r\n\r\n2.3.0 - 110627\r\n*
  reimplemented clocked variant in a correct and more efficient way\r\n\r\n2.2.0 -
  110402\r\n* added n-ary transfer functions\r\n* temporarily removed transfer from
  the clocked variant\r\n* revised documentation\r\n\r\n2.1.0 - 100805\r\n* reimplemented
  the parametric variant in a way that doesn't require\r\n  signals to carry the type
  of the parameter any more\r\n* added the ability to extract the global input in
  the parametric\r\n  variant, and also to override it (input and embed, resp.)\r\n*
  added until to be able to define switchers that can truly drop\r\n  references to
  old signals\r\n* added debug printing capability to the simple and clocked variants\r\n*
  made a note about possibly deprecating the delayed variant\r\n\r\n2.0.0 - 100718\r\n*
  moved experimental branch to the top (version 1 went into legacy\r\n  status)\r\n*
  added the clocked variant\r\n\r\n1.2.3 - 100131\r\n* added externalMulti to handle
  events that can fire several times\r\n  within a superstep\r\n* added a cache to
  the noise signal for safety reasons, so it lives in\r\n  SignalGen now\r\n\r\n1.2.2
  - 100115\r\n* added noise signals and the getRandom primitive (using mersenne-random)\r\n\r\n1.2.1
  - 091204\r\n* modified the &&@ and ||@ operators to short-circuit\r\n\r\n1.2.0 -
  091202\r\n* added the delayed variant to the experimental branch\r\n* renamed storeJust
  to (-->) in the experimental branch\r\n\r\n1.1.0 - 091126\r\n* added experimental
  branch with a cleaner semantics\r\n\r\n1.0.0 - 090726\r\n* completely renewed interface
  by introducing the SignalMonad\r\n\r\n0.6.0 - 090507\r\n* renamed Void to StartToken\r\n*
  replaced restarter with the simpler and more versatile startTokens\r\n\r\n0.5.0
  - 090502\r\n* changed names of internal constructors to match primitives better\r\n*
  added restarter and (==>)\r\n* removed the unused type synonym Time\r\n\r\n0.4.0
  - 090501\r\n* added keepAlive\r\n* made delay a primitive\r\n* completely separated
  sampling and aging\r\n\r\n0.3.0 - 090419\r\n* documentation bug fixed: the latcher
  is not delayed\r\n* added dot (Graphviz) converter\r\n\r\n0.2.0 - 090412\r\n* removed
  primitives time and stateless\r\n* removed default delay on stateful combinators
  and added experimental\r\n  cycle detection\r\n* added some non-primitive combinators:
  delay, edge, comparisons,\r\n  logic relations\r\n* added signal instances for various
  numeric classes\r\n\r\n0.1.0 - 090410\r\n* first public version\r\n"
changelog-type: text
description: |-
  Elerea (Eventless reactivity) is a tiny discrete time FRP
  implementation without the notion of event-based switching and
  sampling, with first-class signals (time-varying values).  Reactivity
  is provided through various higher-order constructs that also allow
  the user to work with arbitrary time-varying structures containing
  live signals.  Signals have precise and simple denotational
  semantics.

  Stateful signals can be safely generated at any time through a
  monadic interface, while stateless combinators can be used in a
  purely applicative style.  Elerea signals can be defined recursively,
  and external input is trivial to attach.  The library comes in two
  major variants:

  * Simple: signals are plain discrete streams isomorphic to functions
  over natural numbers;

  * Param: adds a globally accessible input signal for convenience;

  This is a minimal library that defines only some basic primitives,
  and you are advised to install @elerea-examples@ as well to get an
  idea how to build non-trivial systems with it.  The examples are
  separated in order to minimise the dependencies of the core library.
  The @dow@ package contains a full game built on top of the simple
  variant.

  The basic idea of the implementation is described in the WFLP 2010
  paper /Efficient and Compositional Higher-Order Streams/
  (<http://sgate.emt.bme.hu/documents/patai/publications/PataiWFLP2010.pdf>).

  Additional contributions: Takano Akio, Mitsutoshi Aoe
description-type: haddock
hash: 383f5b2d6639b529f4e12cf31e6076103832ef456e66dda167d1c3c2b3285abd
homepage: ''
latest: 2.9.0
license-name: BSD-3-Clause
maintainer: Patai Gergely (patai.gergely@gmail.com)
synopsis: A minimalistic FRP library
test-bench-deps: {}
