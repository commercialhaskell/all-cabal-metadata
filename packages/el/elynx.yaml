homepage: https://github.com/dschrempf/elynx#readme
changelog-type: markdown
hash: 39dab97335a7d04305ab15b4aed4e18961b3fe0f1df8a39a572f13c8a882320a
test-bench-deps: {}
maintainer: dominik.schrempf@gmail.com
synopsis: Validate and (optionally) redo ELynx analyses
changelog: |2+

  # Revision history for ELynx


  ## Unreleased changes


  ## Version 0.5.1.0

  -   **elynx-tree:** new functions `isValidPath`, `isLeaf`, `depth`; add conversion
      topology -> tree; various internal algorithmic improvements; improved error
      messages; simplified interface to Newick parsers; parallel fold map; Nix
      flake.
  -   Remove unneeded dependencies.


  ## Version 0.5.0.2

  -   Speed up mixture model simulation.
  -   Improve rooting functions.
  -   Improve `Topology` data type (but still a lot to do).
  -   Various additions to the documentation.
  -   Rename `Measurable` to `HasLength`, `Supported` to `HasSupport`, and `Named`
      to `HasLength`.
  -   Cabal and stack file changes.


  ## Version 0.5.0.1

  -   `modLen`, `modSup`.
  -   Newtype wrappers for branch length, branch support, and node name. Those data
      types and some functions were also renamed.
  -   Add `Path`, and `getSubTreeUnsafe` to tree zipper.
  -   Rename `unsafe` functions so that `unsafe` is at the end.
  -   Many small changes.


  ## Version 0.4.1

  -   Improve `TimeSpec` (Point process).
  -   Parallel evaluation strategies.
  -   Change names of some functions involving partitions. For example, `mp` was
      renamed to `pt`.
  -   Improve documentation for (bi)partitions.
  -   Bugfix `tlynx compare`; do not throw error when branch support values are not
      set.
  -   Add `no-elynx-file` option.
  -   Also parse Nexus files with `tlynx` commands.
  -   Bugfix `subSample`; the sub sample was reversed.


  ## Version 0.4.0

  -   Major refactor of `elynx-tree`. All required function can now conveniently
      reexported by `ELynx.Tree`.


  ## Version 0.3.4

  -   Improve `slynx examine`; show hamming distance; show constant sites.
  -   PhyloStrict -> PhyloExplicit; and some conversion functions were changed.
  -   `tlynx coalesce` was merged into `tlynx simulate`, the syntax has changed; see
      `tlynx simulate --help`.


  ## Version 0.3.3

  -   Fix test suites.


  ## Version 0.3.2

  -   Remove llvm dependency.
  -   Move away from hpack.


  ## Version 0.3.1

  -   Use Attoparsec.
  -   Use ByteString consistently.
  -   Remove elynx-tools dependency from libaries.


  ## Version 0.3.0

  -   **`elynx-nexus`:** library to import and export Nexus files.
  -   **`elynx-tree`:** major refactor and big cleanup; use rose trees with branch
      labels.
  -   **`elynx-tree`:** provide zippers.


  ## Version 0.2.2

  -   Validation and repetition of previous analyses is finally possible with the
      new `elynx` binary.
  -   A library `elynx-markov` for running Markov processes along phylogenetic trees
      has been split off `elynx-seq`. This library performs the computations when
      executing `slynx simulate ...`.
  -   Many other small improvements.

basic-deps:
  bytestring: '>=0.10.12.0'
  tlynx: '>=0.5.1.0'
  base: '>=4.7 && <5'
  slynx: '>=0.5.1.0'
  elynx-tools: '>=0.5.1.0'
  optparse-applicative: '>=0.16.1.0'
  aeson: '>=1.5.6.0'
all-versions:
- 0.2.1
- 0.2.2
- 0.3.0
- 0.3.1
- 0.3.2
- 0.3.3
- 0.3.4
- 0.4.0
- 0.4.1
- 0.5.0
- 0.5.0.1
- 0.5.0.2
- 0.5.1.0
author: Dominik Schrempf
latest: 0.5.1.0
description-type: markdown
description: "\n\n# The ELynx Suite\n\nVersion: 0.5.1.0.\nReproducible evolution made
  easy.\n\n<p align=\"center\"><img src=\"https://travis-ci.org/dschrempf/elynx.svg?branch=master\"/></p>\n\nA
  Haskell library and tool set for computational biology. The goal of ELynx is\nreproducible
  research. Evolutionary sequences and phylogenetic trees can be\nread, viewed, modified
  and simulated. The command line with all arguments is\nlogged consistently, and
  automatically. Data integrity is verified using SHA256\nsums so that validation
  of past analyses is possible without the need to\nrecompute the result.\n\nThe Elynx
  Suite consists of library packages and executables providing a range\nof sub commands.\n\nThe
  library packages are:\n\n-   **[elynx-nexus](https://hackage.haskell.org/package/elynx-nexus):**
  Nexus file support.\n-   **[elynx-markov](https://hackage.haskell.org/package/elynx-markov):**
  Simulate multi sequence alignments along phylogenetic trees.\n-   **[elynx-seq](https://hackage.haskell.org/package/elynx-seq):**
  Handle evolutionary sequences and multi sequence alignments.\n-   **[elynx-tools](https://hackage.haskell.org/package/elynx-tools):**
  Tools for the provided executables.\n-   **[elynx-tree](https://hackage.haskell.org/package/elynx-tree):**
  Handle phylogenetic trees.\n\nThe executables are:\n\n-   **[slynx](https://hackage.haskell.org/package/slynx):**
  Analyze, modify, and simulate evolutionary sequences.\n-   **[tlynx](https://hackage.haskell.org/package/tlynx):**
  Analyze, modify, and simulate phylogenetic trees.\n-   **[elynx](https://hackage.haskell.org/package/elynx):**
  Validate and redo past analyses.\n\nDocumentation is available on [Hackage](https://hackage.haskell.org/)
  (use direct links above).\n\n**ELynx is actively developed. We happily receive comments,
  ideas, feature\nrequests, and pull requests!**\n\n\n# Installation\n\nELynx is written
  in [Haskell](https://www.haskell.org/) and can be installed with [Stack](https://docs.haskellstack.org/en/stable/README/).\n\n1.
  \ Install Stack with your package manager, or directly from the web\n    page.\n
  \   \n        curl -sSL https://get.haskellstack.org/ | sh\n\n2.  Clone the ELynx
  repository.\n    \n        git clone https://github.com/dschrempf/elynx\n\n3.  Navigate
  to the newly created `elynx` folder and build the binaries.\n    This will take
  a while.\n    \n        stack build\n\n4.  Run a binary from within the project
  directory. For example,\n    \n        stack exec tlynx -- --help\n\n5.  If needed,
  install the binaries.\n    \n        stack install\n    \n    The binaries are installed
  into `~/.local/bin/` which has to be added to the\n    [PATH](https://en.wikipedia.org/wiki/PATH_(variable))
  environment variable. Then, they can be used directly.\n\n\n# SLynx\n\nHandle evolutionary
  sequences.\n\n    stack exec slynx -- --help | head -n -16\n\n    ELynx Suite version
  0.5.1.0.\n    Developed by Dominik Schrempf.\n    Compiled on June 12, 2021, at
  14:54 pm, UTC.\n    \n    Usage: slynx [-v|--verbosity VALUE] [-o|--output-file-basename
  NAME] \n                 [-f|--force] [--no-elynx-file] COMMAND\n      Analyze,
  and simulate multi sequence alignments.\n    \n    Available options:\n      -h,--help
  \               Show this help text\n      -V,--version             Show version\n
  \     -v,--verbosity VALUE     Be verbose; one of: Quiet Warning Info Debug\n                               (default:
  Info)\n      -o,--output-file-basename NAME\n                               Specify
  base name of output file\n      -f,--force               Ignore previous analysis
  and overwrite existing\n                               output files.\n      --no-elynx-file
  \         Do not write data required to reproduce an analysis.\n    \n    Available
  commands:\n      concatenate              Concatenate sequences found in input files.\n
  \     examine                  Examine sequences. If data is a multi sequence alignment,
  additionally analyze columns.\n      filter-columns           Filter columns of
  multi sequence alignments.\n      filter-rows              Filter rows (or sequences)
  found in input files.\n      simulate                 Simulate multi sequence alignments.\n
  \     sub-sample               Sub-sample columns from multi sequence alignments.\n
  \     translate                Translate from DNA to Protein or DNAX to ProteinX.\n
  \   \n    \n    Available sequence file formats:\n      - FASTA\n    \n    Available
  alphabets:\n      - DNA (nucleotides)\n      - DNAX (nucleotides; including gaps)\n
  \     - DNAI (nucleotides; including gaps, and IUPAC codes)\n      - Protein (amino
  acids)\n      - ProteinX (amino acids; including gaps)\n      - ProteinS (amino
  acids; including gaps, and translation stops)\n\n\n## Concatenate\n\nConcatenate
  multi sequence alignments.\n\n    stack exec slynx -- concatenate --help\n\n    ELynx
  Suite version 0.5.1.0.\n    Developed by Dominik Schrempf.\n    Compiled on June
  12, 2021, at 14:54 pm, UTC.\n    \n    Usage: slynx concatenate (-a|--alphabet NAME)
  INPUT-FILE\n      Concatenate sequences found in input files.\n    \n    Available
  options:\n      -h,--help                Show this help text\n      -V,--version
  \            Show version\n      -a,--alphabet NAME       Specify alphabet type
  NAME\n      INPUT-FILE               Read sequences from INPUT-FILE\n      -h,--help
  \               Show this help text\n\n\n## Examine\n\nExamine sequence with `slynx
  examine`.\n\n    stack exec slynx -- examine --help\n\n    ELynx Suite version 0.5.1.0.\n
  \   Developed by Dominik Schrempf.\n    Compiled on June 12, 2021, at 14:54 pm,
  UTC.\n    \n    Usage: slynx examine (-a|--alphabet NAME) INPUT-FILE [--per-site]\n
  \     Examine sequences. If data is a multi sequence alignment, additionally analyze
  columns.\n    \n    Available options:\n      -h,--help                Show this
  help text\n      -V,--version             Show version\n      -a,--alphabet NAME
  \      Specify alphabet type NAME\n      INPUT-FILE               Read sequences
  from INPUT-FILE\n      --per-site               Report per site summary statistics\n
  \     -h,--help                Show this help text\n\n\n## Filter\n\nFilter sequences
  with `filer-rows`.\n\n    stack exec slynx -- filter-rows --help\n\n    ELynx Suite
  version 0.5.1.0.\n    Developed by Dominik Schrempf.\n    Compiled on June 12, 2021,
  at 14:54 pm, UTC.\n    \n    Usage: slynx filter-rows (-a|--alphabet NAME) INPUT-FILE
  [--longer-than LENGTH] \n                             [--shorter-than LENGTH] [--standard-characters]\n
  \     Filter rows (or sequences) found in input files.\n    \n    Available options:\n
  \     -h,--help                Show this help text\n      -V,--version             Show
  version\n      -a,--alphabet NAME       Specify alphabet type NAME\n      INPUT-FILE
  \              Read sequences from INPUT-FILE\n      --longer-than LENGTH     Only
  keep sequences longer than LENGTH\n      --shorter-than LENGTH    Only keep sequences
  shorter than LENGTH\n      --standard-characters    Only keep sequences containing
  at least one standard\n                               (i.e., non-IUPAC) character\n
  \     -h,--help                Show this help text\n\nFilter columns of multi sequence
  alignments with `filter-columns`.\n\n    stack exec slynx -- filter-columns --help\n\n
  \   ELynx Suite version 0.5.1.0.\n    Developed by Dominik Schrempf.\n    Compiled
  on June 12, 2021, at 14:54 pm, UTC.\n    \n    Usage: slynx filter-columns (-a|--alphabet
  NAME) INPUT-FILE \n                                [--standard-chars DOUBLE]\n      Filter
  columns of multi sequence alignments.\n    \n    Available options:\n      -h,--help
  \               Show this help text\n      -V,--version             Show version\n
  \     -a,--alphabet NAME       Specify alphabet type NAME\n      INPUT-FILE               Read
  sequences from INPUT-FILE\n      --standard-chars DOUBLE  Keep columns with a proportion
  standard (non-IUPAC)\n                               characters larger than DOUBLE
  in [0,1]\n      -h,--help                Show this help text\n\n\n## Simulate\n\nSimulate
  sequences with `slynx simulate`.\n\n    stack exec slynx -- simulate --help\n\n
  \   ELynx Suite version 0.5.1.0.\n    Developed by Dominik Schrempf.\n    Compiled
  on June 12, 2021, at 14:54 pm, UTC.\n    \n    Usage: slynx simulate (-t|--tree-file
  Name) [-s|--substitution-model MODEL] \n                          [-m|--mixture-model
  MODEL] [-e|--edm-file NAME] \n                          [-p|--siteprofile-files
  NAMES] \n                          [-w|--mixture-model-weights \"[DOUBLE,DOUBLE,...]\"]
  \n                          [-g|--gamma-rate-heterogeneity \"(NCAT,SHAPE)\"]\n                          (-l|--length
  NUMBER) [-S|--seed [INT]]\n      Simulate multi sequence alignments.\n    \n    Available
  options:\n      -h,--help                Show this help text\n      -V,--version
  \            Show version\n      -t,--tree-file Name      Read tree from Newick
  file NAME\n      -s,--substitution-model MODEL\n                               Set
  the phylogenetic substitution model; available\n                               models
  are shown below (mutually exclusive with -m\n                               option)\n
  \     -m,--mixture-model MODEL Set the phylogenetic mixture model; available models\n
  \                              are shown below (mutually exclusive with -s option)\n
  \     -e,--edm-file NAME       Empirical distribution model file NAME in Phylobayes\n
  \                              format\n      -p,--siteprofile-files NAMES\n                               File
  names of site profiles in Phylobayes format\n      -w,--mixture-model-weights \"[DOUBLE,DOUBLE,...]\"\n
  \                              Weights of mixture model components\n      -g,--gamma-rate-heterogeneity
  \"(NCAT,SHAPE)\"\n                               Number of gamma rate categories
  and shape parameter\n      -l,--length NUMBER       Set alignment length to NUMBER\n
  \     -S,--seed [INT]          Seed for random number generator; list of 32 bit\n
  \                              integers with up to 256 elements (default: random)\n
  \     -h,--help                Show this help text\n    \n    Substitution models:\n
  \   -s \"MODEL[PARAMETER,PARAMETER,...]{STATIONARY_DISTRIBUTION}\"\n       Supported
  DNA models: JC, F81, HKY, GTR4.\n         For example,\n           -s HKY[KAPPA]{DOUBLE,DOUBLE,DOUBLE,DOUBLE}\n
  \          -s GTR4[e_AC,e_AG,e_AT,e_CG,e_CT,e_GT]{DOUBLE,DOUBLE,DOUBLE,DOUBLE}\n
  \             where the 'e_XY' are the exchangeabilities from nucleotide X to Y.\n
  \      Supported Protein models: Poisson, Poisson-Custom, LG, LG-Custom, WAG, WAG-Custom,
  GTR20.\n         MODEL-Custom means that only the exchangeabilities of MODEL are
  used,\n         and a custom stationary distribution is provided.\n         For
  example,\n           -s LG\n           -s LG-Custom{...}\n           -s GTR20[e_AR,e_AN,...]{...}\n
  \             the 'e_XY' are the exchangeabilities from amino acid X to Y (alphabetical
  order).\n       Notes: The F81 model for DNA is equivalent to the Poisson-Custom
  for proteins.\n              The GTR4 model for DNA is equivalent to the GTR20 for
  proteins.\n    \n    Mixture models:\n    -m \"MIXTURE(SUBSTITUTION_MODEL_1,SUBSTITUTION_MODEL_2[PARAMETERS]{STATIONARY_DISTRIBUTION},...)\"\n
  \      For example,\n         -m \"MIXTURE(JC,HKY[6.0]{0.3,0.2,0.2,0.3})\"\n    Mixture
  weights have to be provided with the -w option.\n    \n    Special mixture models:\n
  \   -m CXX\n       where XX is 10, 20, 30, 40, 50, or 60; CXX models, Quang et al.,
  2008.\n    -m \"EDM(EXCHANGEABILITIES)\"\n       Arbitrary empirical distribution
  mixture (EDM) models.\n       Stationary distributions have to be provided with
  the -e or -p option.\n       For example,\n         LG exchangeabilities with stationary
  distributions given in FILE.\n         -m \"EDM(LG-Custom)\" -e FILE\n         LG
  exchangeabilities with site profiles (Phylobayes) given in FILES.\n         -m \"EDM(LG-Custom)\"
  -p FILES\n    For special mixture models, mixture weights are optional.\n\n\n##
  Sub-sample\n\nSub-sample columns from multi sequence alignments.\n\n    stack exec
  slynx -- sub-sample --help\n\n    ELynx Suite version 0.5.1.0.\n    Developed by
  Dominik Schrempf.\n    Compiled on June 12, 2021, at 14:54 pm, UTC.\n    \n    Usage:
  slynx sub-sample (-a|--alphabet NAME) INPUT-FILE\n                            (-n|--number-of-sites
  INT)\n                            (-m|--number-of-alignments INT) [-S|--seed [INT]]\n
  \     Sub-sample columns from multi sequence alignments.\n    \n    Available options:\n
  \     -h,--help                Show this help text\n      -V,--version             Show
  version\n      -a,--alphabet NAME       Specify alphabet type NAME\n      INPUT-FILE
  \              Read sequences from INPUT-FILE\n      -n,--number-of-sites INT Number
  of sites randomly drawn with replacement\n      -m,--number-of-alignments INT\n
  \                              Number of multi sequence alignments to be created\n
  \     -S,--seed [INT]          Seed for random number generator; list of 32 bit\n
  \                              integers with up to 256 elements (default: random)\n
  \     -h,--help                Show this help text\n    \n    Create a given number
  of multi sequence alignments, each of which contains a given number of random sites
  drawn from the original multi sequence alignment.\n\n\n## Translate\n\nTranslate
  sequences.\n\n    stack exec slynx -- translate --help\n\n    ELynx Suite version
  0.5.1.0.\n    Developed by Dominik Schrempf.\n    Compiled on June 12, 2021, at
  14:54 pm, UTC.\n    \n    Usage: slynx translate (-a|--alphabet NAME) INPUT-FILE
  (-r|--reading-frame INT)\n                           (-u|--universal-code CODE)\n
  \     Translate from DNA to Protein or DNAX to ProteinX.\n    \n    Available options:\n
  \     -h,--help                Show this help text\n      -V,--version             Show
  version\n      -a,--alphabet NAME       Specify alphabet type NAME\n      INPUT-FILE
  \              Read sequences from INPUT-FILE\n      -r,--reading-frame INT   Reading
  frame [0|1|2].\n      -u,--universal-code CODE universal code; one of: Standard,\n
  \                              VertebrateMitochondrial.\n      -h,--help                Show
  this help text\n\n\n# TLynx\n\nHandle phylogenetic trees in Newick format.\n\n    stack
  exec tlynx -- --help | head -n -16\n\n    ELynx Suite version 0.5.1.0.\n    Developed
  by Dominik Schrempf.\n    Compiled on June 12, 2021, at 14:54 pm, UTC.\n    \n    Usage:
  tlynx [-v|--verbosity VALUE] [-o|--output-file-basename NAME] \n                 [-f|--force]
  [--no-elynx-file] COMMAND\n      Compare, examine, and simulate phylogenetic trees.\n
  \   \n    Available options:\n      -h,--help                Show this help text\n
  \     -V,--version             Show version\n      -v,--verbosity VALUE     Be verbose;
  one of: Quiet Warning Info Debug\n                               (default: Info)\n
  \     -o,--output-file-basename NAME\n                               Specify base
  name of output file\n      -f,--force               Ignore previous analysis and
  overwrite existing\n                               output files.\n      --no-elynx-file
  \         Do not write data required to reproduce an analysis.\n    \n    Available
  commands:\n      compare                  Compare two phylogenetic trees (compute
  distances and branch-wise differences).\n      connect                  Connect
  two phylogenetic trees in all ways (possibly honoring constraints).\n      distance
  \                Compute distances between many phylogenetic trees.\n      examine
  \                 Compute summary statistics of phylogenetic trees.\n      shuffle
  \                 Shuffle a phylogenetic tree (keep coalescent times, but shuffle
  topology and leaves).\n      simulate                 Simulate phylogenetic trees
  using a birth and death or coalescent process.\n    \n    \n    Available tree file
  formats:\n      - Newick Standard: Branch support values are stored in square brackets
  after branch lengths.\n      - Newick IqTree:   Branch support values are stored
  as node names after the closing bracket of forests.\n      - Newick RevBayes: Key-value
  pairs is provided in square brackets after node names as well as branch lengths.
  XXX: Key value pairs are ignored at the moment.\n\n\n## Compare\n\nCompute distances
  between phylogenetic trees.\n\n    stack exec tlynx -- compare --help\n\n    ELynx
  Suite version 0.5.1.0.\n    Developed by Dominik Schrempf.\n    Compiled on June
  12, 2021, at 14:54 pm, UTC.\n    \n    Usage: tlynx compare [-n|--normalize] [-b|--bipartitions]
  [-t|--intersect] \n                         [-f|--newick-format FORMAT] NAMES\n
  \     Compare two phylogenetic trees (compute distances and branch-wise differences).\n
  \   \n    Available options:\n      -h,--help                Show this help text\n
  \     -V,--version             Show version\n      -n,--normalize           Normalize
  trees before comparison\n      -b,--bipartitions        Print and plot common and
  missing bipartitions\n      -t,--intersect           Compare intersections; i.e.,
  before comparison, drop\n                               leaves that are not present
  in the other tree\n      -f,--newick-format FORMAT\n                               Newick
  tree format: Standard, IqTree, or RevBayes;\n                               default:
  Standard; for detailed help, see 'tlynx\n                               --help'\n
  \     NAMES                    Tree files\n      -h,--help                Show this
  help text\n\n\n## Connect\n\nConnect two phylogenetic tree in all ways (possibly
  honoring constraints).\n\n    stack exec tlynx -- connect --help\n\n    ELynx Suite
  version 0.5.1.0.\n    Developed by Dominik Schrempf.\n    Compiled on June 12, 2021,
  at 14:54 pm, UTC.\n    \n    Usage: tlynx connect [-f|--newick-format FORMAT] [-c|--contraints
  CONSTRAINTS]\n                         TREE-FILE-A TREE-FILE-B\n      Connect two
  phylogenetic trees in all ways (possibly honoring constraints).\n    \n    Available
  options:\n      -h,--help                Show this help text\n      -V,--version
  \            Show version\n      -f,--newick-format FORMAT\n                               Newick
  tree format: Standard, IqTree, or RevBayes;\n                               default:
  Standard; for detailed help, see 'tlynx\n                               --help'\n
  \     -c,--contraints CONSTRAINTS\n                               File containing
  one or more Newick trees to be used\n                               as constraints\n
  \     TREE-FILE-A              File containing the first Newick tree\n      TREE-FILE-B
  \             File containing the second Newick tree\n      -h,--help                Show
  this help text\n\n\n## Distancce\n\nCompute distances between many phylogenetic
  trees.\n\n    stack exec tlynx -- distance --help\n\n    ELynx Suite version 0.5.1.0.\n
  \   Developed by Dominik Schrempf.\n    Compiled on June 12, 2021, at 14:54 pm,
  UTC.\n    \n    Usage: tlynx distance (-d|--distance MEASURE) [-n|--normalize] [-t|--intersect]
  \n                          [-s|--summary-statistics] \n                          [-m|--master-tree-file
  MASTER-TREE-File] \n                          [-f|--newick-format FORMAT] [INPUT-FILES]\n
  \     Compute distances between many phylogenetic trees.\n    \n    Available options:\n
  \     -h,--help                Show this help text\n      -V,--version             Show
  version\n      -d,--distance MEASURE    Type of distance to calculate (available
  distance\n                               measures are listed below)\n      -n,--normalize
  \          Normalize trees before distance calculation; only\n                               affect
  distances depending on branch lengths\n      -t,--intersect           Compare intersections;
  i.e., before comparison, drop\n                               leaves that are not
  present in the other tree\n      -s,--summary-statistics  Report summary statistics
  only\n      -m,--master-tree-file MASTER-TREE-File\n                               Compare
  all trees to the tree in the master tree\n                               file.\n
  \     -f,--newick-format FORMAT\n                               Newick tree format:
  Standard, IqTree, or RevBayes;\n                               default: Standard;
  for detailed help, see 'tlynx\n                               --help'\n      INPUT-FILES
  \             Read tree(s) from INPUT-FILES; if more files are\n                               given,
  one tree is expected per file\n      -h,--help                Show this help text\n
  \   \n    Distance measures:\n      symmetric                Symmetric distance
  (Robinson-Foulds distance).\n      incompatible-split[VAL]  Incompatible split distance.
  Collapse branches with (normalized)\n                               support less
  than 0.0<=VAL<=1.0 before distance calculation;\n                               if,
  let's say, VAL>0.7, only well supported differences contribute\n                               to
  the total distance.\n      branch-score             Branch score distance.\n\n\n##
  Examine\n\nCompute summary statistics of phylogenetic trees.\n\n    stack exec tlynx
  -- examine --help\n\n    ELynx Suite version 0.5.1.0.\n    Developed by Dominik
  Schrempf.\n    Compiled on June 12, 2021, at 14:54 pm, UTC.\n    \n    Usage: tlynx
  examine INPUT-FILE [-f|--newick-format FORMAT]\n      Compute summary statistics
  of phylogenetic trees.\n    \n    Available options:\n      -h,--help                Show
  this help text\n      -V,--version             Show version\n      INPUT-FILE               Read
  trees from INPUT-FILE\n      -f,--newick-format FORMAT\n                               Newick
  tree format: Standard, IqTree, or RevBayes;\n                               default:
  Standard; for detailed help, see 'tlynx\n                               --help'\n
  \     -h,--help                Show this help text\n\n\n## Shuffle\n\nShuffle a
  phylogenetic tree (keep coalescent times, but shuffle topology and\nleaves).\n\n
  \   stack exec tlynx -- shuffle --help\n\n    ELynx Suite version 0.5.1.0.\n    Developed
  by Dominik Schrempf.\n    Compiled on June 12, 2021, at 14:54 pm, UTC.\n    \n    Usage:
  tlynx shuffle [-f|--newick-format FORMAT] [-n|--replicates N] TREE-FILE \n                         [-S|--seed
  [INT]]\n      Shuffle a phylogenetic tree (keep coalescent times, but shuffle topology
  and leaves).\n    \n    Available options:\n      -h,--help                Show
  this help text\n      -V,--version             Show version\n      -f,--newick-format
  FORMAT\n                               Newick tree format: Standard, IqTree, or
  RevBayes;\n                               default: Standard; for detailed help,
  see 'tlynx\n                               --help'\n      -n,--replicates N        Number
  of trees to generate\n      TREE-FILE                File containing a Newick tree\n
  \     -S,--seed [INT]          Seed for random number generator; list of 32 bit\n
  \                              integers with up to 256 elements (default: random)\n
  \     -h,--help                Show this help text\n\n\n## Simulate\n\nSimulate
  phylogenetic trees using birth and death processes.\n\n    stack exec tlynx -- simulate
  --help\n\n    ELynx Suite version 0.5.1.0.\n    Developed by Dominik Schrempf.\n
  \   Compiled on June 12, 2021, at 14:54 pm, UTC.\n    \n    Usage: tlynx simulate
  (-t|--nTrees INT) (-n|--nLeaves INT) PROCESS \n                          [-u|--sub-sample
  DOUBLE] [-s|--summary-statistics] \n                          [-S|--seed [INT]]\n
  \     Simulate phylogenetic trees using a birth and death or coalescent process.\n
  \   \n    Available options:\n      -h,--help                Show this help text\n
  \     -V,--version             Show version\n      -t,--nTrees INT          Number
  of trees\n      -n,--nLeaves INT         Number of leaves per tree\n      -u,--sub-sample
  DOUBLE   Perform sub-sampling; see below.\n      -s,--summary-statistics  For each
  branch, print length and number of children\n      -S,--seed [INT]          Seed
  for random number generator; list of 32 bit\n                               integers
  with up to 256 elements (default: random)\n      -h,--help                Show this
  help text\n    \n    Available processes:\n      birthdeath               Birth
  and death process\n      coalescent               Coalescent process\n    \n    See,
  for example, 'tlynx simulate birthdeath --help'.\n    Sub-sample with probability
  p:\n      1. Simulate one big tree with n'=round(n/p), n'>=n, leaves;\n      2.
  Randomly sample sub-trees with n leaves.\n      (With p=1.0, the same tree is reported
  over and over again.)\n\n\n# ELynx\n\nValidate and (optionally) redo past ELynx
  analyses.\n\n    stack exec elynx -- --help | head -n -16\n\n    ELynx Suite version
  0.5.1.0.\n    Developed by Dominik Schrempf.\n    Compiled on June 12, 2021, at
  14:54 pm, UTC.\n    \n    Usage: elynx COMMAND\n      Validate and redo past ELynx
  analyses\n    \n    Available options:\n      -h,--help                Show this
  help text\n      -V,--version             Show version\n    \n    Available commands:\n
  \     validate                 Validate an ELynx analysis\n      redo                     Redo
  an ELynx analysis\n\n"
license-name: GPL-3.0-or-later
