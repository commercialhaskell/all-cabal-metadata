all-versions:
- 0.1.0
- 0.1.1
- 0.1.1.1
- 0.1.1.2
- 0.1.1.3
- 0.1.1.4
- 0.1.1.5
- 0.1.1.6
- 0.1.1.7
- 0.1.2
- 0.1.2.1
- 0.2.0
- 0.2.0.1
- 0.3.0
- 0.3.5
- 0.3.6
- 0.3.6.1
- 0.3.6.2
- 0.4.0
- 0.4.0.1
- 0.4.0.2
- 0.4.0.3
- 0.4.0.4
- 0.5.0
- 0.5.0.1
- 0.5.0.2
- '0.6'
- 0.6.0.1
- 0.6.0.2
- 0.6.0.3
- '0.7'
- 0.7.1
- 0.7.1.1
- '0.8'
- 0.8.0.1
- 0.8.0.2
- 0.8.0.3
- '0.9'
- 0.9.0.1
- 0.9.0.2
- '0.10'
- 0.10.0.1
- 0.10.0.2
- 0.10.1
- '0.11'
- '0.12'
- 0.12.1
- 0.12.1.1
- 0.12.1.2
- 0.12.1.3
- 0.12.2
- 0.12.3
- '0.13'
author: Evan Czaplicki
basic-deps:
  aeson: '>=0.7 && <0.9'
  aeson-pretty: '>=0.7 && <0.8'
  base: '>=4.2 && <5'
  binary: '>=0.7.0.0 && <0.8'
  blaze-html: '>=0.5 && <0.8'
  blaze-markup: '>=0.5.1 && <0.7'
  bytestring: '>=0.9 && <0.11'
  cheapskate: '>=0.1 && <0.2'
  cmdargs: '>=0.7 && <0.11'
  containers: '>=0.3 && <0.6'
  directory: '>=1.0 && <2.0'
  filepath: '>=1 && <2.0'
  highlighting-kate: '>=0.5 && <0.6'
  indents: '>=0.3 && <0.4'
  language-ecmascript: '>=0.15 && <0.17'
  language-glsl: '>=0.0.2 && <0.2'
  mtl: '>=2 && <3'
  parsec: '>=3.1.1 && <3.5'
  pretty: '>=1.0 && <2.0'
  text: '>=1 && <2'
  transformers: '>=0.2 && <0.5'
  union-find: '>=0.2 && <0.3'
  unordered-containers: '>=0.1 && <0.3'
changelog: "\n## 0.13\n\n#### Improvements:\n\n  * Type aliases in port types \n  *
  Add Keyboard.alt and Keyboard.meta\n  * Add Debug.crash, Debug.watch, Debug.watchSummary,
  and Debug.trace\n  * Add List.indexedMap and List.filterMap\n  * Add Maybe.map\n
  \ * Add Basics.negate\n  * Add (>>) to Basics as in F#\n  * Add --bundle-runtime
  flag which creates stand-alone Elm programs\n  * Error on ambiguious use of imported
  variables\n  * Replace dependency on Pandoc with cheapskate+kate\n  * Better architecture
  for compiler. Uses types to make compilation pipeline\n    safer, setting things
  up for giving programmatic access to the AST to\n    improve editor and IDE support.\n\n####
  Breaking Changes:\n\n  * Rename (.) to (<<) as in F#\n  * Rename Basics.id to Basics.identity\n
  \ * Rename Basics.div to (//)\n  * Rename Basics.mod to (%)\n  * Remove Maybe.justs
  for (List.filterMap identity)\n  * Remove List.and for (List.foldl (&&) True)\n
  \ * Remove List.or  for (List.foldl (||) False)\n  * Unambiguous syntax for importing
  ADTs and type aliases\n  * sqrt and logBase both only work on Floats now\n\n## 0.12.3\n\n
  \ * Minor changes to support webgl as a separate library\n  * Switch from HSV to
  HSL\n  * Programmatic access to colors with toHsl and toRgb\n\n## 0.12.1\n\n####
  Improvements:\n\n  * New Array library (thanks entirely to @Xashili)\n  * Json.Value
  can flow through ports\n  * Improve speed and stack usage in List library (thanks
  to @maxsnew)\n  * Add Dict.filter and Dict.partition (thanks to @hdgarrood)\n\n####
  Breaking Changes:\n\n  * Revamp Json library, simpler with better names\n  * Revamp
  JavaScript.Experimental library to have slightly better names\n  * Remove JavaScript
  library which was made redundant by ports\n\n## 0.12\n\n#### Breaking Changes:\n\n
  \ * Overhaul Graphics.Input library (inspired by Spiros Eliopoulos and Jeff Smitts)\n
  \ * Overhaul Text library to accomodate new Graphics.Input.Field\n    library and
  make the API more consistent overall\n  * Overhaul Regex library (inspired by Attila
  Gazso)\n  * Change syntax for \"import open List\" to \"import List (..)\"\n  *
  Improved JSON format for types generated by elm-doc\n  * Remove problematic Mouse.isClicked
  signal\n  * Revise the semantics of keepWhen and dropWhen to only update when\n
  \   the filtered signal changes (thanks Max New and Janis Voigtländer)\n\n#### Improvements:\n\n
  \ * Add Graphics.Input.Field for customizable text fields\n  * Add Trampoline library
  (thanks to @maxsnew and @timthelion) \n  * Add Debug library (inspired by @timthelion)\n
  \ * Drastically improved performance on markdown parsing (thanks to @Dandandan)
  \n  * Add Date.fromTime function\n  * Use pointer-events to detect hovers on layered
  elements (thanks to @Xashili)\n  * Fix bugs in Bitwise library\n  * Fix bug when
  exporting Maybe values through ports\n\n## 0.11\n\n  * Ports, a new FFI that is
  more general and much nicer to use\n  * Basic compiler tests (thanks to Max New)\n\n##
  0.10.1\n\n  * sort, sortBy, sortWith (thanks to Max Goldstein)\n  * elm-repl\n  *
  Bitwise library\n  * Regex library\n  * Improve Transform2D library (thanks to Michael
  Søndergaard)\n\n## 0.10\n\n  * Native strings\n  * Tango colors\n  * custom precedence
  and associativity for infix operators\n  * elm-doc released with new documentation
  format\n  * Realiasing in type errors\n  * Rename Matrix2D => Transform2D\n  * Add
  Random.floatList (thank you Max GoldStein)\n  * Fix remove function in Dict (thank
  you Max New)\n  * Start using language-ecmascript for JS generation\n  * Make compatable
  with cabal-1.18 (thank you Justin Leitgeb)\n  * All functions with 10+ arguments
  (thanks to Max New)\n\n## 0.9.1\n\n  * Allow custom precedence and associativity
  for user-defined infix ops\n  * Realias types before printing\n  * Switch to Tango
  color scheme, adding a bunch of nice colors\n  * add the greyscale function for
  easily producing greys\n  * Check the type of main\n  * Fix miscellaneous bugs in
  type checker\n  * Switch name of Matrix2D to Transform2D\n\n## 0.9\n\nBuild Improvements:\n
  \ * Major speed improvements to type-checker\n  * Type-checker should catch _all_
  type errors now\n  * Module-level compilation, only re-compile if necessary\n  *
  Import types and type aliases between modules\n  * Intermediate files are generated
  to avoid unneeded recompilation\n    and shorten compile time. These files go in
  ElmFiles/ by default\n  * Generated files are placed in ElmFiles/ by default, replicating\n
  \   the directory structure of your source code.\n\nError Messages:\n  * Cross-module
  type errors\n  * Errors for undefined values\n  * Pretty printing of expressions
  and types\n \nSyntax:\n  * Pattern matching on literals\n  * Pattern aliases with
  `as` (Andrew)\n  * Unary negation\n  * Triple-quoted multi-line strings\n  * Type
  annotations in let expressions (Andrew)\n  * Record Constructors\n  * Record type
  aliases can be closed on the zeroth column\n  * (,,) syntax in types\n  * Allow
  infix op definitions without args: (*) = add\n  * Unparenthesized if, let, case,
  lambda at end of binary expressions\n\nelm-server:\n  * Build multi-module projects\n
  \ * Report all errors in browser\n\nLibraries:\n  * Detect hovering over any Element\n
  \ * Set alpha of arbitrary forms in collages\n  * Switch Text.height to use px instead
  of em\n\nBug Fixes:\n  * Many bug fixes for collage, especially when rendering Elements.\n\nWebsite:\n
  \ * Hot-swapping\n  * Much faster page load with pre-compiled Elm files (Max New)\n\n\n\n\nforgot
  to fill this in again...\n\n\n## 0.7.2\n\n* Add a WebSockets library.\n* Add support
  for the mathematical looking operator for function composition (U+2218).\n\n\nforgot
  to fill this in for a while...\n\n\n## 0.5.0\n\n* Add Dict, Set, and Automaton libraries!\n\n*
  Add (,,) notation for creating tuples.\n\n* Redo HTTP library, allowing any kind
  of request and more flexibility.\n\n* Remove the library prefixes `Data.`, `Graphics.`,
  and `Signal.` because\n  they were more confusing than helpful.\n\n* Better type
  error reporting for ambiguous uses of variables and for\n  variables in aliased
  modules.\n\n* Add `readInt` and `readFloat` functions.\n* Add `complement` function
  to compute complementary colors.\n* Ensure that `String` is treated as an alias
  of `[Char]`.\n\n* Fix bug in pattern parsing. `A B _ _` was parsed as `A (B _ _)`.\n*
  Make pattern matching a bit more compact in generated code.\n* Make generated JS
  more readable.\n\n* The Haskell API exports the absolute path to the Elm runtime\n
  \ system (with the corresponding version number). This makes it easier\n  to run
  Elm programs with less setup.\n\n\n\n## 0.4.0\n\nThis version is all about graphics:
  nicer API with more features and major\nefficiency improvements. I am really excited
  about this release!\n\n* Add native Markdown support. You can now embed markdown
  directly in .elm files\n  and it is used as an `Element`. Syntax is `[markdown|
  ... |]` where `...` is\n  formatted as described [here](http://daringfireball.net/projects/markdown/).\n
  \ Content can span multiple lines too.\n\n* Drastically improve the `collage` interface.
  You can now move, rotate, and scale\n  the following forms:\n  - Elements (any Element
  you want can be turned into a Form with `toForm`)\n  - Images\n  - Shapes (shapes
  can be textured now too)\n  - Lines\n  This will make it way easier to make games
  in Elm. Games can now include text,\n  gifs, videos, and any other Element you can
  think of.\n\n* Add `--minify` flag, to minify JS code.\n\n* Significantly improve
  performance of pattern matching.\n\n* Compiler performs beta-reduction in some simple
  cases.\n\n* The rendering section of the Elm runtume-system (RTS) has been totally
  rewritten,\n  making screen refreshes use fewer cycles, less memory, and cause less
  garbage-collection.\n\n\n\n## 0.3.6\n\n* Add JSON library.\n\n* Type-error messages
  improved. Gives better context for error, making them\n  easier to find. Better
  messages for runtime errors as well (errors that\n  the type checker cannot find
  yet).\n\n* Add Comparable super-type which allows the comparision of any values\n
  \ of type {Int,Float,Char,String}. Now possible to make Set and Map libraries.\n\n*
  Parser now handles decimal numbers.\n\n* Added many new functions for manipulating
  numbers:\n  - truncate, round, floor, ceiling :: Float -> Int\n  - toFloat :: Int
  -> Float\n  - (^) :: Number -> Number -> Number\n  - e :: Float\n\n* Foreign import/export
  statements no longer have to preceed all other\n  variable and datatype definitions.
  They can be mixed in, making things\n  a bit more readable/natural.\n\n* Bug fixes:\n
  \ - The `toText` function did not escape strings properly\n  - Correct `castJSTupleToTupleN`
  family of functions\n  - `foldr1` took the leftmost element as the base case instead
  of the rightmost\n  - Fix minor display issue in latest version of Chrome.\n  -
  Fix behavior of [ lo .. hi ] syntax (now [4..0] == [], not [0]).\n\n\n\n## 0.3.5\n\n*
  Add JavaScript event interface. Allows Elm to import and export JS values\n  and
  events. This makes it possible to import and export Elements, so users\n  can use
  JS techniques and libraries if necessary. Conversion between JS\n  and Elm values
  happens with functions from here:\n    http://localhost:8000/docs/Foreign/JavaScript.elm\n
  \   http://localhost:8000/docs/Foreign/JavaScript/Experimental.elm\n\n* Add new
  flags to help with JavaScript event interface.\n\n* Add three built-in event listeners
  (elm_title, elm_log, elm_redirect) that\n  make it possible to make some common/simple
  imperative actions without\n  having to worry about writing the JS yourself. For
  example:\n        foreign export jsevent \"elm_title\"\n            title :: Signal
  JSString\n  will update the page's title to the current value of the title signal.\n
  \ Empty strings are ignored. \"elm_redirect\" and \"elm_log\" events work much\n
  \ the same way, except that \"elm_log\" does not skip empty strings.\n\n* Add new
  Signal functions:\n    count       :: Signal a -> Signal Int\n    keepIf      ::
  (a -> Bool) -> a -> Signal a -> Signal a\n    dropIf      :: (a -> Bool) -> a ->
  Signal a -> Signal a\n    keepWhen    :: Signal Bool -> a -> Signal a -> Signal
  a\n    dropWhen    :: Signal Bool -> a -> Signal a -> Signal a\n    dropRepeats
  :: Signal a -> Signal a\n    sampleOn    :: Signal a -> Signal b -> Signal b\n    clicks
  \     :: Signal ()\n  The keep and drop functions make it possible to filter events,
  which\n  was not possible in prior releases. More documentation:\n  http://elm-lang.org/docs/Signal/Signal.elm\n\n*
  Add examples of JS event interface and new signal functions:\n  https://github.com/evancz/Elm/tree/master/Examples/elm-js\n\n*
  Use more compressed format for strings. Should make strings 10-12 times\n  more
  space efficient than in previous releases. Anecdotal evidence:\n  Elm's home page
  is now 70% of its previous size.\n\n* Add new function to Data.List:\n    last ::
  [a] -> a\n\n* Fix parenthesization bug with binary operators.\n\n\n\n## 0.3.0\n\nMajor
  Changes (Read this part!)\n-------------------------------\n\n* Add a basic module
  system.\n* Elm's JavaScript runtime is now distributed with the elm package.\n  Previously
  it was available for download as an unversioned JavaScript\n  file (elm-mini.js).
  It is now installed with the elm compiler as\n  elm-runtime-0.3.0.js. Be sure to
  serve the Elm runtime system that matches\n  the version of the compiler used to
  generate JavaScript. When working\n  locally, the compiler will automatically use
  your local copy of this file.\n* BREAKING CHANGE: rgb and rgba (in the color module)
  now take their red,\n  green, and blue components as integers between 0 and 255
  inclusive.\n* Improve error messages for parse errors and runtime errors.\n\n\nNew
  Functions and Other Additions\n---------------------------------\n\n* Add support
  for keyboard events: Keyboard.Raw\n* Add buttons in Signal.Input:\n  button :: String
  -> (Element, Signal Bool)\n* Add new basic element (an empty rectangle, good for
  adding spaces):\n  rectangle :: Int -> Int -> Element\n* Add (an awkwardly named)
  way to display right justified text: rightedText\n* Add two basic libraries: Data.Char
  and Data.Maybe\n* Add some new colors: magenta, yellow, cyan, gray, grey\n* Add
  functions to Data.List module: take, drop\n* Add functions to Prelude (the default
  imports):\n  fst, snd, curry, uncurry, and a bunch of list functions\n* Add --make,
  --separate-js, and --only-js flags to help compile\n  with the new module system.\n"
changelog-type: markdown
description: |-
  Elm aims to make client-side web-development more pleasant.
  It is a statically/strongly typed, functional reactive
  language to HTML, CSS, and JS. This package provides a
  library for Elm compilation in Haskell and a compiler
  executable.
description-type: haddock
hash: 8f5b49611f6c9c0a339613f89af8247754195c0b617a16dadbb4f9e0f10eb583
homepage: http://elm-lang.org
latest: '0.13'
license-name: BSD-3-Clause
maintainer: info@elm-lang.org
synopsis: The Elm language module.
test-bench-deps:
  Elm: '>=0'
  HUnit: '>=1.1 && <2'
  QuickCheck: '>=2 && <3'
  aeson: '>=0.7 && <0.9'
  aeson-pretty: '>=0.7 && <0.8'
  base: '>=4.2 && <5'
  binary: '>=0.7.0.0 && <0.8'
  blaze-html: '>=0.5 && <0.8'
  blaze-markup: '>=0.5.1 && <0.7'
  bytestring: '>=0.9 && <0.11'
  cheapskate: '>=0.1 && <0.2'
  cmdargs: '>=0.7 && <0.11'
  containers: '>=0.3 && <0.6'
  directory: '>=1.0 && <2.0'
  filemanip: '>=0.3.5 && <0.4'
  filepath: '>=1 && <2.0'
  highlighting-kate: '>=0.5 && <0.6'
  indents: '>=0.3 && <0.4'
  language-ecmascript: '>=0.15 && <0.17'
  language-glsl: '>=0.0.2 && <0.2'
  mtl: '>=2 && <3'
  parsec: '>=3.1.1 && <3.5'
  pretty: '>=1.0 && <2.0'
  process: '>=1 && <2.0'
  test-framework: '>0.8 && <0.9'
  test-framework-hunit: '>=0.3 && <0.4'
  test-framework-quickcheck2: '>=0.3 && <0.4'
  text: '>=1 && <2'
  transformers: '>=0.2 && <0.5'
  union-find: '>=0.2 && <0.3'
  unordered-containers: '>=0.1 && <0.3'
