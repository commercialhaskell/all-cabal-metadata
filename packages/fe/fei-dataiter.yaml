all-versions:
- 0.2.0.0
author: Jiasen Wu
basic-deps:
  base: '>=4.7 && <5'
  conduit: '>=1.2 && <1.4'
  conduit-combinators: '>=1.1.2 && <1.4'
  directory: '>=1.3 && <1.4'
  fei-base: '>=0'
  fei-nn: '>=0'
  filepath: '>=1.4 && <1.5'
  haskell-src-exts: '>=1.20'
  hslogger: '>=1.2'
  mtl: '>=0'
  optparse-applicative: '>=0.14 && <0.15'
  streaming: '>=0.1.4.5'
  template-haskell: '>=2.10.0.0'
  text: '>=1.2.0 && <1.3'
changelog: ''
changelog-type: ''
description: "# mxnet-dataiter\n\nHere is an example of making a Conduit from MNIST
  dataset.\n\n```haskell\nmnistIter (add @\"image\" \"data/train-images-idx3-ubyte\"
  $ \n           add @\"label\" \"data/train-labels-idx1-ubyte\" $\n           add
  @\"batch_size\" 128 \n           nil) :: ConduitData IO (NDArray Float, NDArray
  Float)\n```\n\nThe first argument is provides named parameters for the MXNet Data
  Iterators. Detailed specification can be \nfound in MXNet API 's python [document](https://mxnet.incubator.apache.org/api/python/io/io.html).\n\nBelow
  is a snapshot of current support in this package.\n\n```haskell\ntype CSVIter_Args
  = \n    '[ \"data_csv\" := String, \"data_shape\" := [Int], \"label_csv\" := String,
  \"label_shape\" := [Int]\n     , \"batch_size\" := Int, \"round_batch\" := Bool,
  \"prefetch_buffer\" := Integer, \"dtype\" := String] \n\ntype MNISTIter_Args = \n
  \   '[ \"image\" := String, \"label\" := String, \"batch_size\" := Int, \"shuffle\"
  := Bool, \"flat\" := Bool\n     , \"seed\" := Int, \"silent\" := Bool, \"num_parts\"
  := Int, \"part_index\" := Int\n     , \"prefetch_buffer\" := Integer, \"dtype\"
  := String]\n\ntype ImageRecordIter_Args = \n    '[ \"path_imglist\" := String, \"path_imgrec\"
  := String, \"path_imgidx\" := String, \"aug_seq\" := String\n     , \"label_width\"
  := Int, \"data_shape\" := [Int], \"preprocess_threads\" := Int, \"verbose\" := Bool\n
  \    , \"num_parts\" := Int, \"part_index\" := Int, \"shuffle_chunk_size\" := Integer\n
  \    , \"shuffle_chunk_seed\" := Int, \"shuffle\" := Bool, \"seed\" := Int, \"batch_size\"
  := Int\n     , \"round_batch\" := Bool, \"prefetch_buffer\" := Integer, \"dtype\"
  := String, \"resize\" := Int\n     , \"rand_crop\" := Bool, \"max_rotate_angle\"
  := Int, \"max_aspect_ratio\" := Float\n     , \"max_shear_ratio\" := Float, \"max_crop_size\"
  := Int, \"min_crop_size\" := Int\n     , \"max_random_scale\" := Float, \"min_random_scale\"
  := Float, \"max_img_size\" := Float\n     , \"min_img_size\" := Float, \"random_h\"
  := Int, \"random_s\" := Int, \"random_l\" := Int, \"rotate\" := Int\n     , \"fill_value\"
  := Int, \"inter_method\" := Int, \"pad\" := Int, \"mirror\" := Bool, \"rand_mirror\"
  := Bool\n     , \"mean_img\" := String, \"mean_r\" := Float, \"mean_g\" := Float,
  \"mean_b\" := Float, \"mean_a\" := Float\n     , \"std_r\" := Float, \"std_g\" :=
  Float, \"std_b\" := Float, \"std_a\" := Float, \"scale\" := Float\n     , \"max_random_contrast\"
  := Float, \"max_random_illumination\" := Float]\n     \ntype ImageDetRecordIter_Args
  = \n    '[ \"path_imglist\" := String, \"path_imgrec\" := String, \"aug_seq\" :=
  String, \"label_width\" := Int\n     , \"data_shape\" := [Int], \"preprocess_threads\"
  := Int, \"verbose\" := Bool, \"num_parts\" := Int\n     , \"part_index\" := Int,
  \"shuffle_chunk_size\" := Integer, \"shuffle_chunk_seed\" := Int\n     , \"label_pad_width\"
  := Int, \"label_pad_value\" := Float, \"shuffle\" := Bool, \"seed\" := Int\n     ,
  \"batch_size\" := Int, \"round_batch\" := Bool, \"prefetch_buffer\" := Integer,
  \"dtype\" := String\n     , \"resize\" := Int, \"rand_crop_prob\" := Float, \"min_crop_scales\"
  := [Float]\n     , \"max_crop_scales\" := [Float], \"min_crop_aspect_ratios\" :=
  [Float]\n     , \"max_crop_aspect_ratios\" := [Float], \"min_crop_overlaps\" :=
  [Float], \"max_crop_overlaps\" := [Float]\n     , \"min_crop_sample_coverages\"
  := [Float], \"max_crop_sample_coverages\" := [Float]\n     , \"min_crop_object_coverages\"
  := [Float], \"max_crop_object_coverages\" := [Float]\n     , \"num_crop_sampler\"
  := Int, \"crop_emit_mode\" := String, \"emit_overlap_thresh\" := Float\n     , \"max_crop_trials\"
  := [Int], \"rand_pad_prob\" := Float, \"max_pad_scale\" := Float\n     , \"max_random_hue\"
  := Int, \"random_hue_prob\" := Float, \"max_random_saturation\" := Int\n     , \"random_saturation_prob\"
  := Float, \"max_random_illumination\" := Int\n     , \"random_illumination_prob\"
  := Float, \"max_random_contrast\" := Float, \"random_contrast_prob\" := Float\n
  \    , \"rand_mirror_prob\" := Float, \"fill_value\" := Int, \"inter_method\" :=
  Int, \"resize_mode\" := String\n     , \"mean_img\" := String, \"mean_r\" := Float,
  \"mean_g\" := Float, \"mean_b\" := Float, \"mean_a\" := Float\n     , \"std_r\"
  := Float, \"std_g\" := Float, \"std_b\" := Float, \"std_a\" := Float, \"scale\"
  := Float]\n\ntype ImageRecordUInt8Iter_Args = \n    '[ \"path_imglist\" := String,
  \"path_imgrec\" := String, \"path_imgidx\" := String, \"aug_seq\" := String\n     ,
  \"label_width\" := Int, \"data_shape\" := [Int], \"preprocess_threads\" := Int,
  \"verbose\" := Bool\n     , \"num_parts\" := Int, \"part_index\" := Int, \"shuffle_chunk_size\"
  := Integer\n     , \"shuffle_chunk_seed\" := Int, \"shuffle\" := Bool, \"seed\"
  := Int, \"batch_size\" := Int\n     , \"round_batch\" := Bool, \"prefetch_buffer\"
  := Integer, \"dtype\" := String, \"resize\" := Int\n     , \"rand_crop\" := Bool,
  \"max_rotate_angle\" := Int, \"max_aspect_ratio\" := Float\n     , \"max_shear_ratio\"
  := Float, \"max_crop_size\" := Int, \"min_crop_size\" := Int\n     , \"max_random_scale\"
  := Float, \"min_random_scale\" := Float, \"max_img_size\" := Float\n     , \"min_img_size\"
  := Float, \"random_h\" := Int, \"random_s\" := Int, \"random_l\" := Int, \"rotate\"
  := Int\n     , \"fill_value\" := Int, \"inter_method\" := Int, \"pad\" := Int]\n\ntype
  LibSVMIter_Args = \n    '[ \"data_libsvm\" := String, \"data_shape\" := [Int], \"label_libsvm\"
  := String, \"label_shape\" := [Int]\n     , \"num_parts\" := Int, \"part_index\"
  := Int, \"batch_size\" := Int, \"round_batch\" := Bool\n     , \"prefetch_buffer\"
  := Integer, \"dtype\" := String]\n```\n"
description-type: markdown
hash: 233076757b604432dd80dd37bafe5a1826074bcca7efe9f47787a8de766f9011
homepage: https://github.com/pierric/fei-dataiter#readme
latest: 0.2.0.0
license-name: BSD-3-Clause
maintainer: jiasenwu@hotmail.com
synopsis: mxnet dataiters
test-bench-deps:
  base: '>=4.7 && <5'
  fei-base: '>=0'
  fei-dataiter: '>=0'
  hspec: '>=2 && <3'
  streaming: '>=0.1.4.5'
