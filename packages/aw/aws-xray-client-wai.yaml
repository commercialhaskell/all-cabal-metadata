homepage: https://github.com/freckle/aws-xray-client#readme
changelog-type: markdown
hash: 3bac9a18cee77229b4ca039a057be2d4c59ddc0258b88b1706ea4f3ac6b677b6
test-bench-deps: {}
maintainer: engineering@freckle.com
synopsis: A client for AWS X-Ray integration with WAI.
changelog: |
  ## [*Unreleased*](https://github.com/freckle/aws-xray-client/tree/aws-xray-client-wai-v0.1.0.0...main)

  None

  ## [v0.1.0.0](https://github.com/freckle/aws-xray-client/tree/aws-xray-client-wai-v0.1.0.0)

  First tagged release.
basic-deps:
  bytestring: '>=0.10.8.2'
  wai: '>=3.2.2.1'
  unliftio: '>=0.2.11'
  base: '>=4.12.0.0 && <5'
  time: '>=1.8.0.2'
  text: '>=1.2.3.1'
  containers: '>=0.6.0.1'
  lens: '>=4.17.1'
  unliftio-core: '>=0.1.2.0'
  vault: '>=0.3.1.2'
  random: '>=1.1'
  aws-xray-client: '>=0.1.0.0'
  http-types: '>=0.12.3'
all-versions:
- 0.1.0.0
author: Freckle R&D
latest: 0.1.0.0
description-type: markdown
description: |
  # aws-xray-client-wai

  A Haskell client for integrating AWS X-Ray with [WAI](https://hackage.haskell.org/package/wai).

  To configure this, you will need to configure a `import Network.AWS.XRayClient.WAI.XRayClientConfig)`. You can use `xrayClientConfig :: Text -> XRayClientConfig` to create a default configuration, given just an app name.

  `xrayTraceMiddleware` then accepts `XRayClientConfig` to create [WAI middleware](https://www.yesodweb.com/book/web-application-interface#web-application-interface_middleware).
license-name: MIT
