all-versions:
- 0.1.0.0
author: Ben Weitzman
basic-deps:
  base: '>=4.9 && <5'
  servant: '>=0.7.1 && <1'
changelog: ''
changelog-type: ''
description: "# servant-named\n\nThis package aims to address an issue with the amazing
  [servant](https://hackage.haskell.org/package/servant) library, wherein it can be
  hard to manage two complex lists of API endpoints (one of types, and one of handlers),
  making sure to keep them in the same order.\n\nTo address this, we introduce the
  concept of named endpoints. When using named endpoints, it's no longer necessary
  to keep endpoint types and handlers in the same order. When serving the servant
  application, the types and handlers are automatically matched up according to their
  names. Here's a little example:\n\n```haskell\nhandler :: Server API\nhandler =
  fromNamed $ Named @\"getUser\"  := return\n                ::<|> Named @\"getUsers\"
  := return [1,2,3]\n                ::<|> Nil\n\ntype API = FromNamed ( Named \"getUsers\"
  := \"user\" :> Get '[JSON] [Int]\n                 ::<|> Named \"getUser\"  := \"user\"
  :> Capture \"id\" Int :> Get '[JSON] Int\n                 ::<|> Nil\n                 )\n```
  \                \n\nThe endpoints are defined in opposite orders, but this still
  typechecks and works as expected!\n"
description-type: markdown
hash: 5a05b717a5676672ec5ce3815b1a702165b6828bd421605920a5a8b02ad3211b
homepage: https://github.com/bemweitzman/servant-named#readme
latest: 0.1.0.0
license-name: BSD-3-Clause
maintainer: benweitzman@gmail.com
synopsis: Add named endpoints to servant
test-bench-deps:
  base: '>=0'
  hspec: '>=0'
  hspec-wai: '>=0'
  http-types: '>=0'
  servant: '>=0'
  servant-named: '>=0'
  servant-server: '>=0'
