all-versions:
- 0.1.0.0
- 0.1.0.1
author: Médéric Hurier <fmind@users.noreply.github.com>
basic-deps:
  base: '>=4 && <5'
  containers: '>=0'
  optparse-applicative: '>=0'
  protolude: '>=0'
  setop: '>=0'
  text: '>=0'
changelog: |
  # Version 0.1.0.0 (31 Dec 2017)

  - Initial Commit
  - Support for Union, Difference, Intersection, Symmetric Difference (Disjunction)
changelog-type: markdown
description: "# Setop: Perform set operations on files\n\n[![build](https://img.shields.io/travis/fmind/setop.svg)](https://travis-ci.org/fmind/setop)\n[![hackage](https://img.shields.io/hackage/v/setop.svg)](https://hackage.haskell.org/package/setop)\n[![hackage-deps](https://img.shields.io/hackage-deps/v/setop.svg)](https://hackage.haskell.org/package/setop)\n[![license](https://img.shields.io/github/license/mashape/apistatus.svg)](https://github.com/fmind/setop/blob/master/LICENSE.txt)\n
  \t\n## Rationale\n\n[Set operations](https://en.wikipedia.org/wiki/Set_(mathematics)#Basic_operations)
  are a convenient solution to common problems:\n\n- create a list of tasks without
  duplicates (set union)\n- filter tasks done out of tasks to do (set difference)\n-
  find common elements in a database (set intersection)\n- and remove theses elements
  (set symmetric difference)\n\nSetop helps you run these set operations on your files.\n\n##
  Usage\n\nLet's introduce two line-separated files: `A.txt` and `B.txt`.\n\n`A.txt`
  contains all numbers from 0 to 5 included\n```text\n0\n1\n2\n3\n4\n5\n```\n\n`B.txt`
  contains all even numbers from 0 to 8 included\n```text\n0\n2\n4\n6\n8\n```\n\n###
  Set Union (U/Union):\n\n```bash\n$ setop A.txt U B.txt\n0\n1\n2\n3\n4\n5\n6\n8\n```\n\n###
  Set Difference (D/Diff):\n\n```bash\n$ setop A.txt D B.txt\n1\n3\n5\n```\n\n###
  Set Intersection (I/Inter):\n\n```bash\n$ setop A.txt I B.txt\n0\n2\n4\n```\n\n###
  Set Symmetric Difference (J/Disj):\n\n```bash\n$ setop A.txt J B.txt\n1\n3\n5\n6\n8\n```\n\n###
  Reading A.txt from STDIN:\n\n```bash\n$ cat A.txt | setop STDIN Diff B.txt\n0\n2\n4\n```\n\n###
  Reading B.txt from STDIN:\n\n```bash\n$ cat B.txt | setop A.txt Disj STDIN\n1\n3\n5\n6\n8\n```\n\n##
  Notes\n\n- the resulting set is __sorted in ascending order__\n- some set operations
  are __not commutative__ (e.g. A Diff B /= B Diff A)\n- Setop is based on [optparse-applicative](https://github.com/pcapriotti/optparse-applicative)
  and supports [bash/fish/zsh completions](https://github.com/pcapriotti/optparse-applicative#bash-zsh-and-fish-completions)\n"
description-type: markdown
hash: 3b6f1fd09eaa0719f92e573cee15c4195c01b6aa9d8f251e8b93c299a3473274
homepage: https://github.com/fmind/setop
latest: 0.1.0.1
license-name: MIT
maintainer: Médéric Hurier <fmind@users.noreply.github.com>
synopsis: Perform set operations on files.
test-bench-deps:
  base: '>=0'
  containers: '>=0'
  doctest: '>=0'
  hlint: '>=0'
  hspec: '>=0'
  protolude: '>=0'
  setop: '>=0'
