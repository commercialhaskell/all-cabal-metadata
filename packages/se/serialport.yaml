homepage: https://github.com/standardsemiconductor/serialport
changelog-type: markdown
hash: 7e2655eddfb05fa9ead7843cc047492ac2d8a0d3f5469d2dca524b230a54f5eb
test-bench-deps:
  bytestring: -any
  base: -any
  HUnit: -any
  serialport: -any
maintainer: David Cox <standard.semiconductor@gmail.com>
synopsis: Cross platform serial port library.
changelog: |
  0.5.4 (12/02/2022)
  ==================
  * Update package dependency constraints
      * base >= 4.12 && < 4.17

  0.5.3 (26/09/2021)
  ==================
  * Update package dependency constraints
      * Win32 >= 2.11 && < 2.14
  * Add documentation and code samples

  0.5.2 (30/3/2021)
  =================
  * Update package dependency constraints

  0.5.1 (16/1/2021)
  =================
  * Lock Posix serial port for exclusive access
  * Simplify internal usage of serial port handles under both Posix and Windows
  * Add hWithSerial
  * Minor updates to make future refactoring easier

  0.5.0 (16/12/2020)
  ==================
  * Derive Show and Read instances for SerialPortSettings, CommSpeed, StopBits, Parity, and FlowControl datatypes.
  * Update minimum Cabal-version to 1.10
  * Minor syntax changes
  * Minor code cleanup

  0.4.7 (28/08/2014)
  ================

  * Open in non-blocking mode, immediately reverting to blocking to fix OS-X problem
basic-deps:
  bytestring: '>=0.11 && <0.12'
  unix: '>=2.7 && <2.8'
  base: '>=4.12 && <4.17'
all-versions:
- 0.1.0
- 0.1.0.1
- 0.1.0.2
- 0.2.0
- 0.3.0
- 0.3.1
- 0.3.2
- 0.3.3
- 0.4.0
- 0.4.0.1
- 0.4.1
- 0.4.2
- 0.4.3
- 0.4.4
- 0.4.5
- 0.4.6
- 0.4.7
- 0.5.0
- 0.5.1
- 0.5.2
- 0.5.3
- 0.5.4
author: Joris Putcuyps, David Cox
latest: 0.5.4
description-type: markdown
description: |
  # Serialport

  ![Haskell CI](https://github.com/standardsemiconductor/serialport/workflows/Haskell%20CI/badge.svg)
  [![Hackage][hackage-badge]][hackage]
  [![Hackage Dependencies][hackage-deps-badge]][hackage-deps]

  Cross platform (Linux, Windows and Mac OS) [serial port](https://en.wikipedia.org/wiki/Serial_port) interface.

  ## Sample Usage

  ```haskell
  import System.IO
  import System.Hardware.Serialport
  import qualified Data.ByteString.Char8 as B

  let port = "COM3"         -- Windows
  let port = "/dev/ttyUSB0" -- Linux
  withSerial port defaultSerialSettings $ \s -> do
    send s $ B.pack "AT\r"
    recv s 10 >>= print
  ```

  [Concurrently](https://hackage.haskell.org/package/async) read and write a serial port at 19200 [baud](https://learn.sparkfun.com/tutorials/serial-communication/rules-of-serial) using `hWithSerial`:
  ```haskell
  import Control.Concurrent.Async ( concurrently_ )
  import Control.Monad            ( forever )
  import System.Hardware.Serialport
  import System.IO

  com :: String -> IO ()
  com portPath = hWithSerial portPath serialPortSettings $ \hndl -> do
    hSetBuffering stdin NoBuffering
    hSetBuffering stdout NoBuffering
    concurrently_ (readUart hndl) (writeUart hndl)
      where
        readUart  hndl = forever $ putChar =<< hGetChar hndl
        writeUart hndl = forever $ hPutChar hndl =<< getChar

  serialPortSettings :: SerialPortSettings
  serialPortSettings = defaultSerialSettings{ commSpeed = CS19200 }
  ```

  ## Tests

  ### Setup
  * [Arduino Leonardo](http://arduino.cc/en/Main/arduinoBoardLeonardo) + [Sparkfun FTDI breakout board](https://www.sparkfun.com/products/718).
  * Connections: TX, RX and GND

  ### Prepare Arduino
  * Upload arduino code using Arduino IDE or avrdude

  ### Prepare haskell test program
  * Configure cabal to build the tests: `cabal configure --enable-tests`.
  * Build: `cabal build`

  ### Running the tests
  * Run the tests: `cabal test --test-options="/dev/ttyACM0 /dev/ttyUSB0"`

  [hackage]:            <https://hackage.haskell.org/package/serialport>
  [hackage-badge]:      <https://img.shields.io/hackage/v/serialport.svg?color=success>
  [hackage-deps-badge]: <https://img.shields.io/hackage-deps/v/serialport.svg>
  [hackage-deps]:       <http://packdeps.haskellers.com/feed?needle=serialport>
license-name: BSD-3-Clause
