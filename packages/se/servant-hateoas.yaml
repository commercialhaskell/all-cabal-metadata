all-versions:
- 0.1.0
- 0.1.1
- 0.2.0
- 0.2.1
- 0.2.2
author: Julian Bruder
basic-deps:
  aeson: '>=2.2.3 && <2.3'
  base: '>=4.17.2 && <5'
  constrained-some: '>=0.1.0 && <0.2'
  http-media: '>=0.8.1 && <0.9'
  servant: '>=0.20.2 && <0.21'
  servant-server: '>=0.20.2 && <0.21'
changelog: |
  # Changelog

  All notable changes to the servant-hateoas library will be documented in this
  file.

  The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),
  and this project adheres to [PVP versioning](https://pvp.haskell.org/).

  ## v0.2.2 _(2024-12-01)_

  ### Changed
  - Removed `SomeToJSON` and replaced it with `SomeF f ToJSON` from `constrained-some`

  ## v0.2.1 _(2024-10-25)_

  ### Changed
  - Export `CollectionItem`
  - Improved documentation

  ## v0.2.0 _(2024-10-29)_

  ### Added
  - Support for Content-Type `application/collection+json`
  - Classes `EmbeddingResource res` & `CollectingResource res` for resource-modification

  ### Changed
  - *(breaking change)* Renamed class `HasResource` to `Resource`, removed associated type and Content-Type param

  ## v0.1.1 _(2024-10-25)_

  ### Changed
  - Improved documentation

  ## v0.1.0 _(2024-10-25)_

  ### Added
  - Released
changelog-type: markdown
description: |
  [![Hackage](https://img.shields.io/hackage/v/servant-hateoas.svg)](https://hackage.haskell.org/package/servant-hateoas)
  ![Static Badge](https://img.shields.io/badge/Lang-GHC2021-blue)
  [![Haskell-CI](https://github.com/bruderj15/servant-hateoas/actions/workflows/haskell-ci.yml/badge.svg)](https://github.com/bruderj15/servant-hateoas/actions/workflows/haskell-ci.yml)

  # servant-hateoas
  HATEOAS support for [servant](https://hackage.haskell.org/package/servant).

  ## State
  This is not affiliated with the official `servant` maintainers.

  Currently in infant state.
  Final goal is something similar to what has been proposed [here](https://www.servant.dev/extending.html#other-directions).

  ## What can we do already?
  Define an instance for class `ToResource api res a` where `api` is the type of your Servant-Api within which the resty representation
  of your datatype `a` lives and `res` is the resource-representation to create.

  When providing some extra information with an instance for `Related a` there are stock instances which derive the links
  based on the relations in your instance.
  ## Example
  ```haskell
  data User = User { usrId :: Int, addressId :: Int, income :: Double }
    deriving stock (Generic, Show, Eq, Ord)
    deriving anyclass ToJSON

  data Address = Address { addrId :: Int, street :: String, number :: Int}
    deriving stock (Generic, Show, Eq, Ord)
    deriving anyclass ToJSON

  type CompleteApi = AddressApi :<|> UserApi

  type AddressApi = AddressGetOne
  type AddressGetOne = "address" :> Capture "id" Int :> Get '[HAL JSON] (HALResource Address)

  type UserApi = UserGetOne :<|> UserGetAll
  type UserGetOne = "user" :> Capture "id" Int :> Get '[HAL JSON] (HALResource User)
  type UserGetAll = "user" :> Get '[Collection JSON] (CollectionResource User)

  instance Related User where
    type IdSelName User = "usrId"
    type GetOneApi User = UserGetOne
    type CollectionName User = "users"
    type Relations User =
      '[ 'HRel "address" "addressId" AddressGetOne
       ]

  ```
  ```haskell
  >>> mimeRender (Proxy @(HAL JSON)) $ toResource @CompleteApi @HALResource $ User 1 42 100000
  ```
  ```json
  {
    "_links": {
      "address": {
        "href": "address/42"
      },
      "self": {
        "href": "user/1"
      }
    },
    "addressId": 42,
    "income": 100000,
    "usrId": 1
  }
  ```

  ## Goals
  - [x] Deriving simple links for self and relations
  - [ ] Deriving more complex links...?
  - [ ] Type-level rewriting of APIs like `CompleteAPI` to make API HATEOAS-compliant

  ## Media-Types
  - [x] `application/hal+json`
  - [x] `application/collection+json`
  - [ ] `application/hal-forms+json` soon
  - [ ] Others: Maybe

  Client usage with `MimeUnrender` is not yet supported.

  ## Contact information
  Contributions, critics and bug reports are welcome!

  Please feel free to contact me through GitHub.
description-type: markdown
hash: 6244b997f512d72a1125dbd76add9abcf8b937854dc640e40b0cca6bb1e64afe
homepage: https://github.com/bruderj15/servant-hateoas
latest: 0.2.2
license-name: BSD-3-Clause
maintainer: julian.bruder@outlook.com
synopsis: HATEOAS extension for servant
test-bench-deps:
  base: '>=4.17.2 && <5'
  servant-hateoas: '>=0'
