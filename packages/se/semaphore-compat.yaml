homepage: https://gitlab.haskell.org/ghc/semaphore-compat
changelog-type: markdown
hash: 868694b09361e7c6756542bcdcfba68a9b8b93410c6798709e475abd3751afe7
test-bench-deps: {}
maintainer: ghc-devs@haskell.org
synopsis: Cross-platform abstraction for system semaphores
changelog: "### 1.0.0 (March 13, 2023)\r\n\r\n- First version of the `semaphore-compat`
  package.\r\n"
basic-deps:
  exceptions: '>=0.7 && <0.11'
  unix: '>=2.8.1.0 && <2.9'
  base: '>=4.12 && <4.20'
all-versions:
- 1.0.0
author: The GHC team
latest: 1.0.0
description-type: markdown
description: "# semaphore-compat\r\n\r\n`semaphore-compat` provides a cross-platform
  implementation of system semaphores\r\nthat abstracts over the `unix` and `Win32`
  libraries.\r\n\r\nIt supports:\r\n\r\n  - Creating (`createSemaphore`, `freshSemaphore`),
  opening (`openSemaphore`)\r\n    and closing (`destroySemaphore`) semaphores.\r\n
  \ - Waiting on a semaphore:\r\n     - without blocking with `tryWaitOnSemaphore`,\r\n
  \    - blocking forever, with `waitOnSemaphore`,\r\n     - blocking, in a separate
  thread and allowing interruption, with\r\n       `forkWaitOnSemaphoreInterruptible`
  and `interruptWaitOnSemaphore`.\r\n  - Releasing tokens to a semaphore (`releaseSemaphore`).\r\n
  \ - Querying the semaphore for its current value (`getSemaphoreValue`).\r\n"
license-name: BSD-3-Clause
