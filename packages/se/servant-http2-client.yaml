all-versions:
- 0.1.0.0
- 0.1.0.1
- 0.1.0.2
author: Lucas DiCioccio
basic-deps:
  base: '>=4.7 && <5'
  binary: '>=0.8.5.1 && <0.9'
  bytestring: '>=0.10.8.2 && <0.11'
  case-insensitive: '>=1.2.0.11 && <1.3'
  containers: '>=0.5.11.0 && <0.6'
  exceptions: '>=0.10.0 && <0.11'
  http-media: '>=0.7.1.3 && <0.8'
  http-types: '>=0.12.2 && <0.13'
  http2: '>=1.6.3 && <1.7'
  http2-client: '>=0.8.0.1 && <0.9'
  mtl: '>=2.2.2 && <2.3'
  servant-client-core: '>=0.14.1 && <0.15'
  text: '>=1.2.3.1 && <1.3'
  transformers: '>=0.5.5.0 && <0.6'
changelog: |
  # Changelog for servant-http2-client

  ## Unreleased changes

  ## v0.1.0.2

  - performance improvement to parsing statuses
  - performance improvement to generating content-length headers

  ## v0.1.0.1
  - compact transfers for requests with no body or when chunking has empty bytestrings (see https://github.com/lucasdicioccio/servant-http2-client/issues/1 and https://github.com/yesodweb/wai/issues/717)

  ## v0.1.0.0
  - initial release
changelog-type: markdown
description: |
  # servant-http2-client

  This package provides a way to generate HTTP2 client code from
  [Servant](http://haskell-servant.github.io/) API descriptions.

  Please consider this package somewhat unstable. The author would appreciate
  feedbacks and benchmarks in real-world deployments.

  ## Usage

  The usage is pretty similar to `servant-client` but uses an HTTP2Client rather
  than a Manager. See also the section below to highlight differences between
  `servant-client` and `servant-http2-client`.

  HTTP2 uses a flow-control mechanism, which `http2-client` exposes but
  `servant-http2-client` hides: as a client you have nothing to do and
  DATA-credit is immediately sent to the server. This mechanism is easy for the
  user but effectively disables flow control at the application level. Further,
  this easy-to-use mechanism may have some slight overhead for sending many small
  control frames. Future version of the library will expose more control points
  (at an increased cost).

  You can find a full example at `./test/Spec.hs` .

  ## Differences with servant-client

  The client leverages `http2-client` and hence behave slightly differently from
  `servant-client`, which uses `http-client`. Most notably, HTTP/2 uses a single
  TCP connection for performing concurrent requests, whereas HTTP/1.x at best
  pipelines request sequentially over a same connection.

  The `servant-client` library uses a connection Manager to create new TCP
  connections or try re-using existing connections. This `servant-http2-client`
  makes no use of such a Manager. This difference is mostly important for
  load-balancing and unstable network environments. When targeting a
  load-balanced server, a `servant-http2-client` will always hit the same
  TCP-endpoint whereas a `servant-client` may hit different TCP-endpoint for each
  request. Also, after handling a connection error, a `servant-client` will open
  a new TCP connection without any decision from the programmer. Conversely, a
  broken `servant-http2-client` will be of no practical use and the programmer
  must create a new H2ClientEnv. A Manager abstraction may be added to
  `http2-client` later.

  The `servant-client` package offers Cookies handling, whereas
  `servant-http2-client` has no such feature. Please consider opening a
  pull-request for adding the support.

  Finally, it's always good to remember that HTTP2 allows concurrent queries,
  that is, many API calls may fail when a single TCP connection dies out.
description-type: markdown
hash: 7fc284c18c064685630e90f97d08437c62d5699dd4eb8a2303f621fbb169d960
homepage: https://github.com/lucasdicioccio/servant-http2-client#readme
latest: 0.1.0.2
license-name: BSD-3-Clause
maintainer: lucas@dicioccio.fr
synopsis: Generate HTTP2 clients from Servant API descriptions.
test-bench-deps:
  aeson: '>=0'
  async: '>=0'
  base: '>=4.7 && <5'
  binary: '>=0.8.5.1 && <0.9'
  bytestring: '>=0.10.8.2 && <0.11'
  case-insensitive: '>=1.2.0.11 && <1.3'
  containers: '>=0.5.11.0 && <0.6'
  data-default-class: '>=0'
  exceptions: '>=0.10.0 && <0.11'
  http-media: '>=0.7.1.3 && <0.8'
  http-types: '>=0.12.2 && <0.13'
  http2: '>=1.6.3 && <1.7'
  http2-client: '>=0.8.0.1 && <0.9'
  mtl: '>=2.2.2 && <2.3'
  servant: '>=0'
  servant-client-core: '>=0'
  servant-http2-client: '>=0'
  text: '>=1.2.3.1 && <1.3'
  tls: '>=0'
  transformers: '>=0.5.5.0 && <0.6'
