all-versions:
- 0.1.1
author: Moritz Kiefer
basic-deps:
  base: '>=4.8 && <5'
  bytestring: '>=0'
  http-types: '>=0'
  network-uri: '>=0'
  servant: '>=0.12'
  text: '>=0'
  utf8-string: '>=0'
changelog: ''
changelog-type: ''
description: |
  # servant-match

  [![Travis](https://img.shields.io/travis/cocreature/servant-match.svg)](https://travis-ci.org/cocreature/servant-match)
  [![Hackage](https://img.shields.io/hackage/v/servant-match.svg)](https://hackage.haskell.org/package/servant-match)

  This package provides a standalone implementation of dispatching a
  function by matching it against a Servant API. A common usecase for
  this is to convert an `URI` to an ADT that provides a more structured
  representation of the URL.

  ## Usage

  ```haskell
  data DataView
    = Show
    | Edit
    deriving (Show, Eq)

  data View
    = ViewUsers
    | ViewNewUser
    | ViewUser !Text !DataView
    deriving (Show, Eq)

  data User = User

  type API =
    "users" :> (Get '[JSON] [User] :<|> "new" :> ReqBody '[JSON] User :> Post '[JSON] User) :<|>
    "user" :> Capture "user" Text :>
      (Get '[JSON] User :<|>
       "edit" :> ReqBody '[JSON] User :> Put '[JSON] User)

  parser :: MatchT API View
  parser =
    (ViewUsers :<|> ViewNewUser) :<|> (\u -> ViewUser u Show :<|> ViewUser u Edit)
  ```
description-type: markdown
hash: 7d904400d3766ffe2cac30f9cd5eee36afdd3cb16ddcceff2dc68d271a78f3e9
homepage: https://github.com/cocreature/servant-match#readme
latest: 0.1.1
license-name: BSD-3-Clause
maintainer: moritz.kiefer@purelyfunctional.org
synopsis: Standalone implementation of servantâ€™s dispatching mechanism
test-bench-deps:
  base: '>=0'
  hspec: '>=0'
  network-uri: '>=0'
  servant: '>=0'
  servant-match: '>=0'
  text: '>=0'
