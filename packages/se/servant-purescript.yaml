all-versions:
- 0.1.0.0
- 0.1.0.1
- 0.1.0.2
- 0.2.0.0
- 0.2.0.1
- 0.3.0.0
- 0.3.1.0
- 0.3.1.1
- 0.3.1.2
- 0.3.1.3
- 0.3.1.4
- 0.3.1.5
- 0.4.0.0
- 0.4.0.1
- 0.5.0.0
- 0.6.0.0
- 0.7.0.0
- 0.8.0.0
- 0.8.0.1
- 0.9.0.0
- 0.9.0.1
- 0.9.0.2
- 0.9.0.3
- 0.9.0.4
- 0.10.0.0
author: Robert Klotzner
basic-deps:
  aeson: '>=0.11.2'
  base: '>=4.7 && <6.0'
  bytestring: '>=0'
  containers: '>=0'
  directory: '>=0'
  filepath: '>=0'
  http-types: '>=0'
  lens: '>=0'
  mainland-pretty: '>=0'
  purescript-bridge: '>=0.6'
  servant: '>=0.14.1'
  servant-foreign: '>=0'
  servant-server: '>=0'
  servant-subscriber: '>=0'
  text: '>=0'
changelog: ''
changelog-type: ''
description: "Servant Purescript\n==================\n\n[![Build Status](https://travis-ci.org/eskimor/servant-purescript.svg?branch=master)](https://travis-ci.org/eskimor/servant-purescript)\n\nGenerate
  typed PureScript query functions for your servant-api. Find an example, including\nthe
  generated code in [examples/central-counter](https://github.com/eskimor/servant-purescript/tree/master/examples/central-counter).\n\n##
  Features\n\n - Typed serialization/deserialization, taken care of by Haskell's aeson
  and PureScript's argonaut.\n   Generic encoding/decoding of both made compatible
  by \n   [purescript-argonaut-generic-codecs](https://github.com/eskimor/purescript-argonaut-generic-codecs/blob/purescript-argonaut-generic-codec/src/Data/Argonaut/Generic/Aeson.purs).\n
  - You can put common parameters like Auth tokens and the base URL in a reader monad,
  so you don't\n   have to pass them explicitly. This is configurable in the code
  generator with `readerParams` in `Settings`.\n   \n## Usage\n\nApart from the above
  basic usage example, the documentation is still lacking. For\nthe purescript side
  make sure you have\n[purescript-servant-support](https://github.com/eskimor/purescript-servant-support)\nand\n[purescript-argonaut-generic-codecs](https://github.com/eskimor/purescript-argonaut-generic-codecs)\ninstalled,
  otherwise the generated code will not compile.\n\n## Status\n\nIt works!\n\nDocumentation
  is yet to come, but there is a usage example in\nexamples/central-counter which
  also uses servant-subscriber for counter\nlive updates. Generated code is only partly
  tested, especially Query parameters\nare still completely untested.\n\nFor type
  translations purescript-bridge is used.\n"
description-type: markdown
hash: 0533143282b941d2416a08ee1fd3ff4b39383587f5e5fee71ccb4dd2a8a9369e
homepage: https://github.com/eskimor/servant-purescript#readme
latest: 0.10.0.0
license-name: BSD-3-Clause
maintainer: robert Dot klotzner A T gmx Dot at
synopsis: Generate PureScript accessor functions for you servant API
test-bench-deps:
  aeson: '>=0.11.2'
  base: '>=0'
  containers: '>=0'
  lens: '>=0'
  mainland-pretty: '>=0'
  purescript-bridge: '>=0.6'
  servant: '>=0'
  servant-foreign: '>=0'
  servant-purescript: '>=0'
  servant-subscriber: '>=0'
  text: '>=0'
