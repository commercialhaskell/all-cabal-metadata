all-versions:
- 0.1.0.0
- 0.1.0.2
- 0.1.1
- 0.1.2
- 0.1.3
- 0.1.3.1
author: Dmitry Dzhus
basic-deps:
  base: <5
  bytestring: <0.11
  template-haskell: <2.13
  text: <1.3
  vector: <0.13
changelog: |
  # 0.1.3.1

  - GHC 8.2.x support

  # 0.1.3

  - Added `ShortByteString` support

  - Fixed a bug in `createLeft` which failed to actually pad/truncate
    strings (reported by Altai-man https://github.com/dzhus/sext/issues/4)
changelog-type: markdown
description: Sext (/s/tatic t/ext/) provides type-level safety for basic operations
  on string-like types (finite lists of elements). Use it when you need static guarantee
  on lengths of strings produced in your code.
description-type: haddock
hash: 108ae144b493137bd06394875c2b61942d8c23b421147a22277a254045ad4121
homepage: https://github.com/dzhus/sext#readme
latest: 0.1.3.1
license-name: BSD-3-Clause
maintainer: dima@dzhus.org
synopsis: Lists, Texts, ByteStrings and Vectors with type-encoded length
test-bench-deps:
  base: <5
  bytestring: <0.11
  sext: '>=0'
  tasty: <0.12
  tasty-hunit: <0.10
  template-haskell: <2.13
