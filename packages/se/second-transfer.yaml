all-versions:
- 0.1.0.0
- 0.2.0.0
- 0.3.0.2
- 0.3.0.3
- 0.3.0.4
- 0.4.0.0
- 0.5.0.0
- 0.5.2.2
- 0.5.3.1
- 0.5.3.2
- 0.5.4.0
- 0.5.5.0
- 0.5.5.1
- 0.6.0.0
- 0.6.1.0
- 0.7.1.0
- 0.10.0.1
- 0.10.0.2
- 0.10.0.4
author: Alcides Viamontes Esquivel
basic-deps:
  BoundedChan: '>=1.0.3'
  attoparsec: '>=0.12'
  base: '>=4.7 && <=4.9'
  base16-bytestring: '>=0.1.1'
  binary: '>=0.7.1.0'
  bytestring: '>=0.10.4'
  clock: '>=0.6'
  conduit: '>=1.2.4 && <1.3'
  containers: '>=0.5.5'
  deepseq: '>=1.4.1'
  exceptions: '>=0.8 && <0.9'
  hashable: '>=1.2'
  hashtables: '>=1.2 && <1.3'
  http2: '>=1.0.2 && <1.4'
  lens: '>=4.7'
  mmorph: '>=1.0'
  network: '>=2.6 && <2.7'
  network-uri: '>=2.6 && <2.7'
  pqueue: '>=1.3.0'
  resourcet: '>=1.1'
  stm: '>=2.3'
  text: '>=1.2 && <1.3'
  time: '>=1.5.0 && <1.8'
  transformers: '>=0.3 && <=0.5'
  vector: '>=0.10 && <0.13'
  vector-algorithms: '>=0.7'
changelog: "\n- 0.10.0.0 :\n    * The AwareWorker interface was modified to include
  prompt resource \n      termination. That is, AwareWorkers can register finalizers
  for critical \n      resources now. But this breaks backward compatibility.\n    *
  The internals pipe architecture was overhauled to have even less \n      unbounded
  chans and more MVar(s) acting as channels. This should result \n      in better
  behaviour regarding memory consumption. \n\n- 0.9.0.0 :\n    * New tidal session
  manager to keep the number of connections \n      that clients make in check. \n
  \   * Added support for loading certs from memory. \n    * HTTP/1.1 supports chunked
  transfer-encodings now \n    * Mac build works\n\n- 0.8.0.0 :\n    * All threads
  exceptions are reported \n    * Reverse proxy functionality from HTTP/2 to HTTP/1.1\n\n-
  0.7.1.0 :\n    * A few important memory leaks got fixed\n    * Changed I/O interface
  to live in IOCallbacks\n    * Working now around congestion window.\n\n- 0.6.1.0
  :\n    * Improved documentation.\n    * Improved ALPN negotiation handling.\n    *
  Messages with a body are now handled by the HTTP/1.1 speaking part of this\n      library.\n\n-
  0.6.0.0 :\n    * Changed the interface to provide more information to and from workers\n
  \   * Implemented HTTP/2 push\n    * Upgraded dependencies to 1.0. for http2 package\n
  \   * Extended channel interface in such a way that latency is reduced, as a result,\n
  \     the test suite is completely broken. Please wait for 0.6.0.1 release.\n\n-
  0.5.5.1 :\n    * Restricted HTTP2 package version.\n    * Fixes #2\n\n- 0.5.5.0
  :\n    * Made HeaderEditor a Monoid instance\n    * Trying to WINDOW_UPDATE an unexistent
  stream aborts the session, as it should\n\n- 0.5.4.0 :\n    * Added the type HTTP500PrecursorException
  and corresponding test\n    * Improved test suite so that requests can be simulated
  a little bit more easily\n    * Re-export type Headers from module HTTPHeaders\n\n-
  0.5.3.2 :\n    * Added this changelog.\n    * Fixed the lower limit for the time
  package.\n    * Enforce first frame being a settings frame when receiving.\n    *
  Added a couple of tests.\n"
changelog-type: markdown
description: "\nDeveloper README\n================\n\nIntroduction\n------------\n\nThis
  is a library for creating HTTP/2 servers.\n\nTo see some introductory docs, please
  check the Hackage page or\nthe file hs-src/SecondTransfer.hs.\n\nSupported platforms\n-------------------\n\nAt
  the moment, we  support both Linux and Mac OS X. We haven't tested the library in\nWindows,
  but off the top of my head I can not think on any too Unix specific thing\nthat
  we are using. \n\nBuilding and installing\n-----------------------\n\nThe preferred
  method of installing SecondTransfer is through [Stack](https://github.com/commercialhaskell/stack).\nSecondTransfer
  uses [Botan](http://botan.randombit.net/) for its TLS layer, but\nthe default build
  disables the library to play nice with Stack's build servers.\nEnable it by installing
  Botan in your preferred location, switching on the flag\n`enable-botan` (you can
  do that in your stack.yaml file) and adjusting the necessary\ninclude directories
  (through `extra-include-dirs` and `extra-lib-dirs`, also in\nstack.yaml).\n\nWe
  use a extensible TLS mechanism, so if you would rather use a recent version\nof
  OpenSSL, look for the typeclass `TLSContext` and implement it.\n\n\nRunning the
  tests\n-----------------\n\nThere are two sets of tests: normal Haskell tests and
  a custom test suite called Suite 1 that requires\nStack, Python 3.4+, Redis running
  in localhost/standard port with DB 3 erasable, and Numpy.\nTo run Suite 1, SecondTransfer
  should be compiled with the \"Monitoring\" flag enabled.\n\nExample\n-------\n\nThere
  is a very basic example at `tests/tests-hs-src/compiling_ok.hs`, and a somewhat
  more complicated one at\n`examples/attempt_bust`; that one shows how to do HTTP/2.0
  push from the library.\n\n\nDevelopment\n-----------\n\nUploading documentation
  (provided you have access to the package in Hackage):\n\n    $ ./hackage-upload-docs.sh
  second-transfer 0.5.4.0 <hackage-user> <hackage-password>\n"
description-type: markdown
hash: 6d2a53215ff103543900f31c3517a5cc61824756851c8f170de645c6a39d8ea7
homepage: https://www.httptwo.com/second-transfer/
latest: 0.10.0.4
license-name: BSD-3-Clause
maintainer: alcidesv@zunzun.se
synopsis: Second Transfer HTTP/2 web server
test-bench-deps:
  HUnit: '>=1.2 && <1.5'
  base: '>=4.7 && <=4.9'
  binary: '>=0.7.1.0'
  bytestring: '>=0.10.4.0'
  conduit: '>=1.2.4'
  containers: '>=0.5.5'
  hashtables: '>=1.2 && <1.3'
  http2: '>=0'
  lens: '>=4.7'
  network: '>=2.6 && <2.7'
  network-uri: '>=2.6 && <2.7'
  second-transfer: '>=0'
  stm: '>=2.4'
  text: '>=1.2 && <1.3'
  transformers: '>=0.3 && <=0.5'
  unordered-containers: '>=0'
