homepage: https://github.com/worm2fed/servant-prometheus#readme
changelog-type: markdown
hash: acd8b40323e8d42be5dd5adfbd384d929dc23a8c51c0e51ed8c6783c1bebc2c2
test-bench-deps:
  warp: '>=3.2.4 && <3.4'
  http-client: '>=0.7.13 && <0.8'
  wai: -any
  hspec-expectations-pretty-diff: '>=0.7.2.2 && <0.8'
  base: '>=4.10 && <4.17'
  servant-client: '>=0.14 && <0.20'
  hspec: ==2.*
  text: -any
  process: '>=1.6.16 && <1.7'
  servant-server: '>=0.14 && <0.20'
  servant: -any
  containers: '>=0.6.5 && <0.7'
  prometheus-client: -any
  aeson: ==2.0.*
  servant-prometheus: -any
maintainer: Andrii Demydenko <worm2fed@gmail.com>
synopsis: Helpers for using prometheus with servant
changelog: |
  Unreleased
  ==========

  1.0.0
  =======

  Initial release.
basic-deps:
  wai: '>=3.2.3 && <3.3'
  base: '>=4.10 && <4.17'
  text: '>=1.2.5 && <1.3'
  clock: '>=0.8.3 && <0.9'
  servant: '>=0.14 && <0.20'
  ghc-prim: '>=0.8.0 && <0.9'
  hashable: '>=1.4.2 && <1.5'
  prometheus-client: '>=1.1.0 && <1.2'
  http-types: '>=0.12.3 && <0.13'
all-versions:
- 1.0.0
author: Andrii Demydenko <worm2fed@gmail.com>, Anchor Engineering <engineering@lists.anchor.net.au>,
  Servant Contributors
latest: 1.0.0
description-type: markdown
description: |
  # servant-prometheus

  [![Build status](https://github.com/worm2fed/servant-prometheus/actions/workflows/ci.yml/badge.svg)](https://github.com/worm2fed/servant-prometheus/actions/workflows/ci.yml)

  # Servant Performance Counters

  This package lets you track performance counters for each of your Servant endpoints using Prometheus.

  # Usage

  Servant-Prometheus knows how to handle all official Servant combinators out of the box.

  ## Instrumenting your API
  To use Servant-Prometheus, you'll need to wrap your WAI application with the Servant-Prometheus middleware.

  ```
  import Network.Wai.Handler.Warp
  import Prometheus.Servant

  main :: IO ()
  main = do
    let api    = ...
        server = ...
        app = prometheusMiddleware defaultMetrics api server

    run 8080 app
  ```

  ## Runtime overhead
  Instrumenting your API introduces a non-zero runtime overhead, on the order of 200 - 600 Âµsec depending upon your machine. It's a good idea to run the benchmarks on your intended production platform to get an idea of how large the overhead will be. You'll need to have `wrk` installed to run the benchmarks.

  In general, the runtime overhead should be effectively negligible if your handlers are issuing network requests, such as to databases. If you have handlers that are small, CPU-only, and requested frequently, you will see a performance hit from `servant-prometheus`.
license-name: BSD-3-Clause
