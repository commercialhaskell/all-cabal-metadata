homepage: https://github.com/haskell-servant/servant/tree/master/servant-swagger#readme
changelog-type: markdown
hash: ae1ad94dce254877719bb2558e29d422e895efa6482d8c1f70424fd7368205e3
test-bench-deps:
  lens-aeson: '>=1.0.2 && <1.3'
  base: -any
  time: -any
  hspec: '>=2.6.0 && <2.11'
  text: -any
  filepath: -any
  doctest: '>=0.17 && <0.22'
  servant-swagger: -any
  servant: -any
  lens: -any
  base-compat: -any
  utf8-string: '>=1.0.1.1 && <1.1'
  swagger2: -any
  QuickCheck: -any
  aeson: '>=1.4.2.0 && <3'
  template-haskell: -any
  vector: -any
  directory: '>=1.0'
maintainer: haskell-servant-maintainers@googlegroups.com
synopsis: Generate a Swagger/OpenAPI/OAS 2.0 specification for your servant API.
changelog: "1.2\n---\n\n- WithResource combinator for Servant-managed resources [#1630](https://github.com/haskell-servant/servant/pull/1630)\n\n
  \ For servant-swagger, this meant the addition of a `HasSwagger` instance.\n\n1.1.9\n-------\n\n*
  Support `servant-0.18`\n\n1.1.8\n-------\n\n* Support `servant-0.17`\n\n1.1.7.1\n-------\n\n*
  Support `swagger2-2.4`\n\n1.1.7\n-----\n\n* Support servant-0.15\n   - support for
  'Stream' and 'StreamBody' combinators\n   - orphan 'ToSchema (SourceT m a)' instance\n*
  Fix BodyTypes to work with generalized ReqBody' \n  [#88](https://github.com/haskell-servant/servant-swagger/pull/88)\n\n1.1.6\n-----\n\n*
  Fixes:\n  * `validateEveryToJSON` now prints validation errors\n\n* Notes:\n  *
  GHC-8.6 compatible release\n\n1.1.5\n-----\n\n* Notes:\n    * `servant-0.13` compatible
  release\n    * Drops compatibility with previous `servant` versions.\n\n1.1.4\n-----\n\n*
  Notes:\n    * `servant-0.12` compatible release\n\n1.1.3.1\n---\n\n* Notes:\n   *
  GHC-8.2 compatible release\n\n1.1.3\n---\n\n* Notes:\n   * `servant-0.11` compatible
  release\n\n1.1.2.1\n---\n\n* Notes:\n   * `servant-0.10` compatible release\n\n1.1.2\n---\n\n*
  Minor fixes:\n  * Support for aeson-1, insert-ordered-containers-0.2\n  * CaptureAll
  instance\n\n1.1.1\n---\n\n* Minor fixes:\n  * Fix `unused-imports` and `unused-foralls`
  warnings;\n  * Fix tests to match `swagger2-2.1.1` (add `example` property for `UTCTime`
  schema).\n\n1.1\n---\n\n* Breaking changes:\n    * Requires `swagger2 >= 2.1`\n
  \   * Requires `servant >= 0.5`\n\n* Notes:\n    * GHC-8.0 compatible release\n\n1.0.3\n---\n\n*
  Fixes:\n    * Improve compile-time performance of `BodyTypes` even further (see
  [18e0d95](https://github.com/haskell-servant/servant-swagger/commit/18e0d95ef6fe9076dd9621cb515d8d1a189f71d3))!\n\n1.0.2\n---\n\n*
  Minor changes:\n    * Add GHC 7.8 support (see [#26](https://github.com/haskell-servant/servant-swagger/pull/26)).\n\n*
  Fixes:\n    * Improve compile-time performance of `BodyTypes` (see [#25](https://github.com/haskell-servant/servant-swagger/issues/25)).\n\n1.0.1\n---\n\n*
  Fixes:\n    * Stop using `Data.Swagger.Internal`;\n    * Documentation fixes (links
  to examples).\n\n1.0\n---\n\n* Major changes (see [#24](https://github.com/haskell-servant/servant-swagger/pull/24)):\n
  \   * Switch to `swagger2-2.*`;\n    * Add automatic `ToJSON`/`ToSchema` validation
  tests;\n    * Add great documentation;\n    * Export some type-level functions for
  servant API.\n\n* Minor changes:\n    * Rework Todo API example;\n    * Stop exporting
  `ToResponseHeader`, `AllAccept` and `AllToResponseHeader` (see [bd50db4](https://github.com/haskell-servant/servant-swagger/commit/bd50db48ca6a106e4366560ded70932d409de1e2));\n
  \   * Change maintainer, update authors/copyrights (see [1a62681](https://github.com/haskell-servant/servant-swagger/commit/1a6268101dc826a92c42e832e402e251c0d32147));\n
  \   * Include changelog and example files into `extra-source-files`.\n\n0.1.2\n---\n\n*
  Fixes:\n    * Fix default spec for `ReqBody` param to be required (see [#22](https://github.com/haskell-servant/servant-swagger/issues/22));\n
  \   * Set version bounds for `swagger2`.\n\n0.1.1\n---\n\n* Fixes:\n    * Fix `subOperations`
  to filter endpoints also by method (see [#18](https://github.com/haskell-servant/servant-swagger/issues/18));\n
  \   * Fix response schema in `ToSwagger` instance for `Header` (see [b59e557](https://github.com/haskell-servant/servant-swagger/commit/b59e557a05bc2669332c52b397879e7598747b82)).\n\n0.1\n---\n*
  Major changes\n    * Use `swagger2` for data model (see [#9](https://github.com/dmjio/servant-swagger/pull/9));
  this changes almost everything.\n"
basic-deps:
  insert-ordered-containers: '>=0.2.1.0 && <0.3'
  singleton-bool: '>=0.1.4 && <0.2'
  bytestring: '>=0.10.8.1 && <0.12'
  base: '>=4.9.1.0 && <5'
  aeson-pretty: '>=0.8.7 && <0.9'
  unordered-containers: '>=0.2.9.0 && <0.3'
  hspec: -any
  text: '>=1.2.3.0 && <2.1'
  servant: '>=0.20 && <0.21'
  lens: '>=4.17 && <6'
  base-compat: '>=0.10.5 && <0.14'
  swagger2: '>=2.3.0.1 && <3'
  QuickCheck: -any
  aeson: '>=1.4.2.0 && <3'
  http-media: '>=0.7.1.3 && <0.9'
all-versions:
- 0.0.0.0
- 0.0.0.1
- '0.1'
- 0.1.1
- 0.1.2
- '1.0'
- 1.0.1
- 1.0.2
- 1.0.3
- '1.1'
- 1.1.1
- 1.1.2
- 1.1.2.1
- 1.1.3
- 1.1.3.1
- 1.1.4
- 1.1.5
- 1.1.6
- 1.1.7
- 1.1.7.1
- 1.1.8
- 1.1.9
- 1.1.10
- 1.1.11
- '1.2'
author: Servant Contributors
latest: '1.2'
description-type: markdown
description: |+
  # servant-swagger

  [![Hackage](https://img.shields.io/hackage/v/servant-swagger.svg)](http://hackage.haskell.org/package/servant-swagger)
  [![Stackage LTS](http://stackage.org/package/servant-swagger/badge/lts)](http://stackage.org/lts/package/servant-swagger)
  [![Stackage Nightly](http://stackage.org/package/servant-swagger/badge/nightly)](http://stackage.org/nightly/package/servant-swagger)

  Swagger 2.0 conforming json for [servant](https://github.com/haskell-servant/servant) APIs.

  ![servant-swagger robot](http://s16.postimg.org/rndz1wbyt/servant.png)

  ### Motivation

  Swagger is a project used to describe and document RESTful APIs.
  Unlike Servant it is language-agnostic and thus is quite popular among developers
  in different languages. It also exists for a longer time and has more tools to work with.

  This package provides means to generate Swagger specification for a Servant API
  and also to partially test whether API conforms with its specification.

  Generated Swagger specification then can be used for many things such as
  - displaying interactive documentation using [Swagger UI](http://swagger.io/swagger-ui/);
  - generating clients and servers in many languages using [Swagger Codegen](http://swagger.io/swagger-codegen/);
  - and [many others](http://swagger.io/open-source-integrations/).

  ### Usage

  Please refer to [haddock documentation](http://hackage.haskell.org/package/servant-swagger).

  Some examples can be found in [`example/` directory](/example).

  ### Try it out

  All generated swagger specifications can be interactively viewed on [Swagger Editor](http://editor.swagger.io/).

  Ready-to-use specification can be served as JSON and interactive API documentation
  can be displayed using [Swagger UI](https://github.com/swagger-api/swagger-ui).

  Many Swagger tools, including server and client code generation for many languages, can be found on
  [Swagger's Tools and Integrations page](http://swagger.io/open-source-integrations/).

  ### Contributing

  We are happy to receive bug reports, fixes, documentation enhancements, and other improvements.

  Please report bugs via the [github issue tracker](https://github.com/haskell-servant/servant/issues).

license-name: BSD-3-Clause
