homepage: https://github.com/well-typed/cborg
changelog-type: markdown
hash: 6b28cc217bda3f3fad35f179543d539c551aae31d44dbc7ca85989cdbb7ce459
test-bench-deps:
  cereal: '>=0.5.2.0 && <0.6'
  serialise: -any
  bytestring: '>=0.10.4 && <0.12'
  fail: '>=4.9.0.0 && <4.10'
  base: '>=4.11 && <4.18'
  time: '>=1.5 && <1.14'
  unordered-containers: '>=0.2 && <0.3'
  text: '>=1.1 && <2.1'
  cborg: -any
  filepath: '>=1.0 && <1.5'
  criterion: '>=1.0 && <1.6'
  semigroups: '>=0.18 && <0.21'
  array: '>=0.4 && <0.6'
  containers: '>=0.5 && <0.7'
  quickcheck-instances: '>=0.3.12 && <0.4'
  tar: '>=0.4 && <0.6'
  binary: '>=0.7 && <0.11'
  store: '>=0.7.1 && <0.8'
  ghc-prim: '>=0.3.1.0 && <0.10'
  zlib: '>=0.5 && <0.7'
  tasty-quickcheck: '>=0.8 && <0.11'
  tasty-hunit: '>=0.9 && <0.11'
  cereal-vector: '>=0.2 && <0.3'
  tasty: '>=0.11 && <1.5'
  deepseq: '>=1.0 && <1.5'
  QuickCheck: '>=2.9 && <2.15'
  half: '>=0.2.2.3 && <0.4'
  pretty: '>=1.0 && <1.2'
  aeson: '>=0.7 && <2.2'
  primitive: '>=0.5 && <0.9'
  vector: '>=0.10 && <0.14'
  directory: '>=1.0 && <1.4'
maintainer: duncan@community.haskell.org, ben@smart-cactus.org
synopsis: A binary serialisation library for Haskell values.
changelog: |
  # Revision history for serialise

  ## 0.2.6.0  -- 2022-09-24

  * Support GHC 9.4

  * Drop GHC 8.0 and 8.2 support

  ## 0.2.4.0  -- UNRELEASED

  * Add instances for Data.Void, strict and these.

  ## 0.2.3.0  -- 2020-05-10

  * Bounds bumps and GHC 8.10 compatibility

  ## 0.2.2.0  -- 2019-12-29

  * Export `encodeContainerSkel`, `encodeMapSkel` and `decodeMapSkel` from
    `Codec.Serialise.Class`

  * Fix `Serialise` instances for `TypeRep` and `SomeTypeRep` (#216)

  * Bounds bumps and GHC 8.8 compatibility

  ## 0.2.1.0  -- 2018-10-11

  * Bounds bumps and GHC 8.6 compatibility

  ## 0.2.0.0  -- 2017-11-30

  * Improved robustness in presence of invalid UTF-8 strings

  * Add encoders and decoders for `ByteArray`

  * Export `GSerialiseProd(..) and GSerialiseSum(..)`


  ## 0.1.0.0  -- 2017-06-28

  * First version. Released on an unsuspecting world.
basic-deps:
  bytestring: '>=0.10.4 && <0.12'
  these: '>=1.1 && <1.2'
  base: '>=4.11 && <4.18'
  time: '>=1.5 && <1.14'
  unordered-containers: '>=0.2 && <0.3'
  text: '>=1.1 && <2.1'
  strict: '>=0.4 && <0.5'
  cborg: ==0.2.*
  array: '>=0.4 && <0.6'
  containers: '>=0.5 && <0.7'
  ghc-prim: '>=0.3.1.0 && <0.10'
  hashable: '>=1.2 && <2.0'
  half: '>=0.2.2.3 && <0.4'
  primitive: '>=0.5 && <0.9'
  vector: '>=0.10 && <0.14'
all-versions:
- 0.1.0.0
- 0.2.0.0
- 0.2.1.0
- 0.2.2.0
- 0.2.3.0
- 0.2.4.0
- 0.2.5.0
- 0.2.6.0
author: Duncan Coutts
latest: 0.2.6.0
description-type: haddock
description: |-
  This package (formerly @binary-serialise-cbor@) provides pure, efficient
  serialization of Haskell values directly into @ByteString@s for storage or
  transmission purposes. By providing a set of type class instances, you can
  also serialise any custom data type you have as well.

  The underlying binary format used is the 'Concise Binary Object
  Representation', or CBOR, specified in RFC 7049. As a result,
  serialised Haskell values have implicit structure outside of the
  Haskell program itself, meaning they can be inspected or analyzed
  without custom tools.

  An implementation of the standard bijection between CBOR and JSON is provided
  by the [cborg-json](/package/cborg-json) package. Also see
  [cbor-tool](/package/cbor-tool) for a convenient command-line utility for
  working with CBOR data.
license-name: BSD-3-Clause
