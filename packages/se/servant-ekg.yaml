all-versions:
- 0.2.0.0
- '0.3'
- 0.3.1
author: Anchor Engineering <engineering@lists.anchor.net.au>, Servant Contributors
basic-deps:
  base: '>=4.9 && <4.13'
  ekg-core: '>=0.1.1.4 && <0.2'
  hashable: '>=1.2.7.0 && <1.4'
  http-types: '>=0.12.2 && <0.13'
  servant: '>=0.14 && <0.18'
  text: '>=1.2.3.0 && <1.3'
  time: '>=1.6.0.1 && <1.9'
  unordered-containers: '>=0.2.9.0 && <0.3'
  wai: '>=3.2.0 && <3.3'
changelog: |
  v0.3

  - Add HasEndpoint instance for BasicAuth
  - Enumerate API and populate counters at start time
  - support servant >=0.14 && <0.17
changelog-type: markdown
description: |
  # servant-ekg

  [![Build Status](https://travis-ci.org/haskell-servant/servant-ekg.png)](https://travis-ci.org/haskell-servant/servant-ekg)

  # Servant Performance Counters

  This package lets you track peformance counters for each of your Servant endpoints using EKG.

  # Usage

  Servant-EKG knows how to handle all official Servant combinators out of the box.

  ## Instrumenting your API
  To use Servant-EKG, you'll need to wrap your WAI application with the Servant-EKG middleware.

  ```
  import Network.Wai.Handler.Warp
  import System.Metrics
  import Servant.Ekg

  wrapWithEkg :: Proxy api -> Server api -> IO Application
  wrapWithEkg api server = do
    monitorEndpoints' <- monitorEndpoints api =<< newStore

    return $ monitorEndpoints' (serve api server)

  main :: IO ()
  main = do
    let api    = ...
        server = ...

    app <- wrapWithEkg api server

    run 8080 app
  ```

  ## Runtime overhead
  Instrumenting your API introduces a non-zero runtime overhead, on the order of 200 - 600 Âµsec depending upon your machine. It's a good idea to run the benchmarks on your intended production platform to get an idea of how large the overhead will be. You'll need to have `wrk` installed to run the benchmarks.

  In general, the runtime overhead should be effectively negligible if your handlers are issuing network requests, such as to databases. If you have handlers that are small, CPU-only, and requested frequently, you will see a performance hit from Servant-EKG.
description-type: markdown
hash: 19bd9dc3943983da8e79d6f607614c68faea4054fb889d508c8a2b67b6bdd448
homepage: ''
latest: 0.3.1
license-name: BSD-3-Clause
maintainer: Servant Contributors <haskell-servant-maintainers@googlegroups.com>
synopsis: Helpers for using ekg with servant
test-bench-deps:
  aeson: '>=0'
  base: '>=4 && <5'
  ekg: '>=0'
  ekg-core: '>=0'
  hspec: '>=2 && <3'
  http-client: '>=0'
  process: '>=0'
  servant: '>=0'
  servant-client: '>=0'
  servant-ekg: '>=0'
  servant-server: '>=0'
  text: '>=0'
  transformers: '>=0'
  unordered-containers: '>=0'
  wai: '>=0'
  warp: '>=3.2.4 && <3.3'
