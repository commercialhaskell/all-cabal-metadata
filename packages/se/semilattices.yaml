all-versions:
- 0.0.0.0
- 0.0.0.1
- 0.0.0.2
- 0.0.0.3
- 0.0.0.4
- 0.0.0.5
- 0.0.0.6
- 0.0.0.7
author: Rob Rix
basic-deps:
  base: '>=4.9 && <5'
  containers: '>=0.5 && <0.7'
  unordered-containers: '>=0.2.20 && <0.3'
changelog: "# 0.0.0.7\n\nFix more broken builds \U0001F62C\n\n\n# 0.0.0.6\n\nFix broken
  builds on GHC <= 9.2.\n\n\n# 0.0.0.5\n\nSupport more recent GHCs, remove some redundant
  constraints, and obviate the need for the dependency on `hashable`.\n\n\n# 0.0.0.4\n\nSupport
  GHC 8.8.1 and loosen the bounds on `hashable` and `base`.\n\n\n# 0.0.0.3\n\nSupport
  GHC 8.6 and its newer `containers` and `base`.\n\n\n# 0.0.0.2\n\nAdd a `Lower` instance
  for `Data.Sequence.Seq`.\n\n\n# 0.0.0.1\n\nAdd `Lower` instances for some `Data.Monoid`
  types.\n\n\n# 0.0.0.0\n\nInitial release on hackage.\n"
changelog-type: markdown
description: |
  [![Build Status](https://travis-ci.com/robrix/semilattices.svg?branch=master)](https://travis-ci.com/robrix/semilattices)

  # `semilattices`

  This Haskell package defines typeclasses for join- and meet-semilattices, and for upper and lower bounds, and a variety of instances for each.


  ## Usage

  Semilattices are idempotent commutative semigroups, and come in two flavours: `Join` and `Meet`. This presentation of them doesn’t inherit from `Semigroup` however, since `Semigroup`s already exist and the relationships between the various classes here warrant their own operators.

  Join semilattices can be combined using the `\/` operator (pronounced “lub,” for “least upper bound”). Meet semilattices can be combined with the `/\` operator (pronounced “glb,” for “greatest lower bound”). They have opposite relationships to `Lower` and `Upper` bounds (which are optional; in general, there are more lower bounds than upper ones).


  ## Related work

  - [`lattices`](http://hackage.haskell.org/package/lattices) also offers join & meet semilattices, & their respective bounds. Relative to `lattices`, `semilattices` primarily offers a different class hierarchy, e.g. `Lower` & `Upper` do not have `Join` & `Meet` as superclasses. Relative to `semilattices`, `lattices` offers classes for lattices (both bounded and un-), partial orderings, a variety of operations for instances.
description-type: markdown
hash: 46228042667ca2228ec34718ec012b56041d146c9b2739d14f4e22562c01d9f1
homepage: https://github.com/robrix/semilattices
latest: 0.0.0.7
license-name: BSD-3-Clause
maintainer: rob.rix@me.com
synopsis: Semilattices
test-bench-deps:
  QuickCheck: '>=2.7 && <3'
  base: '>=0'
  doctest: '>=0.7 && <1.0'
  quickcheck-instances: '>=0.3 && <0.4'
