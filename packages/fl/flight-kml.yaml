all-versions:
- 1.0.0
- 1.0.1
author: Phil de Joux
basic-deps:
  aeson: '>=0'
  base: '>=4.9.1.0 && <5'
  detour-via-sci: '>=0'
  hxt: '>=0'
  hxt-xpath: '>=0'
  parsec: '>=0'
  path: '>=0'
  siggy-chardust: '>=0'
  split: '>=0'
  time: '>=0'
changelog: |
  # 1.0.1

  * The doctest was unable to find `test-suite-doctest/*.kml` files needed for
    testing. With a `**/*.kml` pattern, these are added to the list of
    `extra-source-files`.

  # 1.0.0

  Initial version with;

  * Data types for a single fix. This being made up of a time stamp, latitude,
    longitude and GPS altitude with an optional barometric pressure altitude.
  * Data types for tracklogs made up of a series of fixes.
  * A `parse` function.
changelog-type: markdown
description: |
  # `flight-kml`

  [![hackage release](https://img.shields.io/hackage/v/flight-kml.svg?label=hackage)](http://hackage.haskell.org/package/flight-kml)
  [![Dependencies of latest version on Hackage](https://img.shields.io/hackage-deps/v/flight-kml.svg)](https://hackage.haskell.org/package/flight-kml)

  Provides parsing of dumped tracklogs. In hang gliding and paragliding
  competitions when [FS](http://fs.fai.org/) and [GpsDump](http://www.gpsdump.no)
  are paired in competition mode a pilot's tracklog is dumped as
  [KML](https://developers.google.com/kml/). This is exlained in detail on the
  [FS wiki](http://fs.fai.org/trac/wiki/GpsDump/).
description-type: markdown
hash: d20ec85253b4a9f6bfcebf2bd482c600cf8a7110e69a26d357164f14e2a1db68
homepage: https://github.com/blockscope/flare-timing/tree/master/kml#readme
latest: 1.0.1
license-name: MPL-2.0
maintainer: phil.dejoux@blockscope.com
synopsis: Parsing of pilot tracklogs dumped as KML.
test-bench-deps:
  aeson: '>=0'
  base: '>=4.9.1.0 && <5'
  detour-via-sci: '>=0'
  doctest: '>=0'
  hxt: '>=0'
  hxt-xpath: '>=0'
  parsec: '>=0'
  path: '>=0'
  raw-strings-qq: '>=0'
  siggy-chardust: '>=0'
  smallcheck: '>=0'
  split: '>=0'
  tasty: '>=0'
  tasty-hunit: '>=0'
  tasty-quickcheck: '>=0'
  tasty-smallcheck: '>=0'
  template-haskell: '>=0'
  time: '>=0'
