all-versions:
- 0.1.0.0
- 0.1.0.1
- 0.1.0.2
- 1.0.0.0
author: Chris Penner
basic-deps:
  base: '>=4.7 && <5'
changelog: ''
changelog-type: ''
description: |
  # flux-monoid

  `Flux` is a monoid which counts the number of times an element changes
  (according to its Eq instance) This is useful for gaining associativity (and
  its associated performance improvements) for tasks where you'd otherwise use
  `group` or `groupBy`

  It also allows usage of change-detection semantics in situations where a Monoid
  is required; e.g.Â in a [FingerTree](https://hackage.haskell.org/package/fingertree/)

  ```haskell
  > getFlux $ foldMap flux ["a", "b", "b", "a"]
  2
  > getFlux $ foldMap flux ["a", "b", "b", "a", "c", "c", "c"]
  3
  ```
description-type: markdown
hash: 820628de6b78038ee131a460a0821a1473f2337c648b228173c64ec39e869a7f
homepage: https://github.com/ChrisPenner/flux-monoid#readme
latest: 1.0.0.0
license-name: BSD-3-Clause
maintainer: Chris Penner
synopsis: A monoid for tracking changes
test-bench-deps: {}
