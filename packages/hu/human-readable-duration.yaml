all-versions:
- 0.1.0.0
- 0.1.1.0
- 0.2.0.0
- 0.2.0.1
- 0.2.0.2
- 0.2.0.3
- 0.2.1.0
- 0.2.1.1
- 0.2.1.2
- 0.2.1.3
- 0.2.1.4
author: Yann Esposito
basic-deps:
  base: '>=4.7 && <5'
changelog: ''
changelog-type: ''
description: |
  [![Build Status](https://travis-ci.org/yogsototh/human-readable-duration.svg?branch=master)](https://travis-ci.org/yogsototh/human-readable-duration)


  [![Hackage](https://img.shields.io/hackage/v/human-readable-duration.svg?maxAge=2592000)](https://hackage.haskell.org/package/human-readable-duration)
  [![human-readable-duration](http://stackage.org/package/human-readable-duration/badge/lts)](http://stackage.org/lts-2/package/human-readable-duration)
  [![human-readable-duration](http://stackage.org/package/human-readable-duration/badge/nightly)](http://stackage.org/lts-2/package/human-readable-duration)

  [![Issue Count](https://codeclimate.com/github/yogsototh/human-readable-duration/badges/issue_count.svg)](https://codeclimate.com/github/yogsototh/human-readable-duration)


  # Human Readable Duration

  This is a minimal Haskell library to display duration.
  It is mostly unsafe as it uses only `Int` and `String`s (not even `Text` nor `ByteString`).

  ## Usage

  ~~~ {.haskell}
  > import Data.Duration
  > let duration = 2*ms + 3*oneSecond + 2*minute + 33*day + 2*year
  > humanReadableDuration duration
  "2 years 33 days 2 min 3s 2ms"
  > getYears duration
  2
  > getDays duration
  763
  > getMs duration
  65923323002
  ~~~

  ## Install

  Install [`stack`](http://github.com/commercialhaskell/stack).

  ~~~
  stack build
  ~~~
description-type: markdown
hash: def85acf3cf6c849e6c88c634de0161b1fcdc0ff740fe6fd13d872d4ff0f7e7c
homepage: https://gitlab.esy.fun/yogsototh/human-readable-duration#readme
latest: 0.2.1.4
license-name: BSD-3-Clause
maintainer: yann.esposito@gmail.com
synopsis: Provide duration helper
test-bench-deps:
  Glob: '>=0.7'
  base: '>=4.7 && <5'
  criterion: '>=1.1.0.0'
  doctest: '>=0.9.12'
  human-readable-duration: '>=0'
  time: '>=1.8.0.2'
